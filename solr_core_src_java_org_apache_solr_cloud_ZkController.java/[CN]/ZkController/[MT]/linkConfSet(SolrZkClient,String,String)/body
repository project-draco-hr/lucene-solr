{
  String path=ZkStateReader.COLLECTIONS_ZKNODE + "/" + collection;
  if (log.isInfoEnabled()) {
    log.info("Load collection config from:" + path);
  }
  byte[] data;
  try {
    data=zkClient.getData(path,null,null,true);
  }
 catch (  NoNodeException e) {
    ZkNodeProps props=new ZkNodeProps(CONFIGNAME_PROP,confSetName);
    try {
      zkClient.makePath(path,ZkStateReader.toJSON(props),CreateMode.PERSISTENT,null,true);
    }
 catch (    KeeperException e2) {
      if (e2.code() != KeeperException.Code.NODEEXISTS) {
        throw e;
      }
      zkClient.setData(path,ZkStateReader.toJSON(props),true);
    }
    return;
  }
  ZkNodeProps props=null;
  if (data != null) {
    props=ZkNodeProps.load(data);
    Map<String,String> newProps=new HashMap<String,String>();
    newProps.putAll(props.getProperties());
    newProps.put(CONFIGNAME_PROP,confSetName);
    props=new ZkNodeProps(newProps);
  }
 else {
    props=new ZkNodeProps(CONFIGNAME_PROP,confSetName);
  }
  zkClient.setData(path,ZkStateReader.toJSON(props),true);
}
