{
  try {
    boolean createdWatchesAndUpdated=false;
    if (zkClient.exists(ZkStateReader.LIVE_NODES_ZKNODE,true)) {
      zkStateReader.createClusterStateWatchersAndUpdate();
      createdWatchesAndUpdated=true;
      publishAndWaitForDownStates();
    }
    cmdExecutor.ensureExists(ZkStateReader.LIVE_NODES_ZKNODE,zkClient);
    createEphemeralLiveNode();
    cmdExecutor.ensureExists(ZkStateReader.COLLECTIONS_ZKNODE,zkClient);
    ShardHandler shardHandler;
    UpdateShardHandler updateShardHandler;
    String adminPath;
    shardHandler=cc.getShardHandlerFactory().getShardHandler();
    updateShardHandler=cc.getUpdateShardHandler();
    adminPath=cc.getAdminPath();
    if (!zkRunOnly) {
      overseerElector=new LeaderElector(zkClient);
      this.overseer=new Overseer(shardHandler,updateShardHandler,adminPath,zkStateReader,this,cc.getConfig());
      ElectionContext context=new OverseerElectionContext(zkClient,overseer,getNodeName());
      overseerElector.setup(context);
      overseerElector.joinElection(context,false);
    }
    if (!createdWatchesAndUpdated) {
      zkStateReader.createClusterStateWatchersAndUpdate();
    }
  }
 catch (  IOException e) {
    log.error("",e);
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Can't create ZooKeeperController",e);
  }
catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    log.error("",e);
    throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
  }
catch (  KeeperException e) {
    log.error("",e);
    throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
  }
}
