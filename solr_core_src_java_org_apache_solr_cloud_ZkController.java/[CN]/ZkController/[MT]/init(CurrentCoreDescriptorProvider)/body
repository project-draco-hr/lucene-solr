{
  try {
    createClusterZkNodes(zkClient);
    zkStateReader.createClusterStateWatchersAndUpdate();
    this.baseURL=zkStateReader.getBaseUrlForNodeName(this.nodeName);
    checkForExistingEphemeralNode();
    if (!zkRunOnly) {
      overseerElector=new LeaderElector(zkClient);
      this.overseer=new Overseer(cc.getShardHandlerFactory().getShardHandler(),cc.getUpdateShardHandler(),CommonParams.CORES_HANDLER_PATH,zkStateReader,this,cloudConfig);
      ElectionContext context=new OverseerElectionContext(zkClient,overseer,getNodeName());
      overseerElector.setup(context);
      overseerElector.joinElection(context,false);
    }
    Stat stat=zkClient.exists(ZkStateReader.LIVE_NODES_ZKNODE,null,true);
    if (stat != null && stat.getNumChildren() > 0) {
      publishAndWaitForDownStates();
    }
    createEphemeralLiveNode();
  }
 catch (  IOException e) {
    log.error("",e);
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Can't create ZooKeeperController",e);
  }
catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    log.error("",e);
    throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
  }
catch (  KeeperException e) {
    log.error("",e);
    throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
  }
}
