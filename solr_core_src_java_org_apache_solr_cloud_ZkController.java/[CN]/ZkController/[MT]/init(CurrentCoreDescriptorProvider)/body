{
  registerAllCoresAsDown(registerOnReconnect);
  try {
    cmdExecutor.ensureExists(ZkStateReader.LIVE_NODES_ZKNODE,zkClient);
    createEphemeralLiveNode();
    cmdExecutor.ensureExists(ZkStateReader.COLLECTIONS_ZKNODE,zkClient);
    ShardHandler shardHandler;
    String adminPath;
    shardHandler=cc.getShardHandlerFactory().getShardHandler();
    adminPath=cc.getAdminPath();
    overseerElector=new LeaderElector(zkClient);
    this.overseer=new Overseer(shardHandler,adminPath,zkStateReader);
    ElectionContext context=new OverseerElectionContext(zkClient,overseer,getNodeName());
    overseerElector.setup(context);
    overseerElector.joinElection(context);
    zkStateReader.createClusterStateWatchersAndUpdate();
  }
 catch (  IOException e) {
    log.error("",e);
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Can't create ZooKeeperController",e);
  }
catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    log.error("",e);
    throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
  }
catch (  KeeperException e) {
    log.error("",e);
    throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
  }
}
