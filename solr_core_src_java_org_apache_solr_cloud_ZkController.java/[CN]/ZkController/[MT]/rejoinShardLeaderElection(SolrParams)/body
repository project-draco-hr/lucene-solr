{
  try {
    String collectionName=params.get(COLLECTION_PROP);
    String shardId=params.get(SHARD_ID_PROP);
    String coreNodeName=params.get(CORE_NODE_NAME_PROP);
    String coreName=params.get(CORE_NAME_PROP);
    String electionNode=params.get(ELECTION_NODE_PROP);
    String baseUrl=params.get(BASE_URL_PROP);
    try (SolrCore core=cc.getCore(coreName)){
      MDCLoggingContext.setCore(core);
      log.info("Rejoin the shard leader election.");
      ContextKey contextKey=new ContextKey(collectionName,coreNodeName);
      ElectionContext prevContext=electionContexts.get(contextKey);
      if (prevContext != null)       prevContext.cancelElection();
      ZkNodeProps zkProps=new ZkNodeProps(BASE_URL_PROP,baseUrl,CORE_NAME_PROP,coreName,NODE_NAME_PROP,getNodeName(),CORE_NODE_NAME_PROP,coreNodeName);
      LeaderElector elect=((ShardLeaderElectionContextBase)prevContext).getLeaderElector();
      ShardLeaderElectionContext context=new ShardLeaderElectionContext(elect,shardId,collectionName,coreNodeName,zkProps,this,getCoreContainer());
      context.leaderSeqPath=context.electionPath + LeaderElector.ELECTION_NODE + "/"+ electionNode;
      elect.setup(context);
      electionContexts.put(contextKey,context);
      elect.retryElection(context,params.getBool(REJOIN_AT_HEAD_PROP));
    }
   }
 catch (  Exception e) {
    throw new SolrException(ErrorCode.SERVER_ERROR,"Unable to rejoin election",e);
  }
}
