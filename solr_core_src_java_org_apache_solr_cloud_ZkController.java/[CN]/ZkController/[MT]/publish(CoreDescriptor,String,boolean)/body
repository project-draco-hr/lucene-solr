{
  log.info("publishing core={} state={}",cd.getName(),state);
  Integer numShards=cd.getCloudDescriptor().getNumShards();
  if (numShards == null) {
    log.info("numShards not found on descriptor - reading it from system property");
    numShards=Integer.getInteger(ZkStateReader.NUM_SHARDS_PROP);
  }
  ZkNodeProps m=new ZkNodeProps(Overseer.QUEUE_OPERATION,"state",ZkStateReader.STATE_PROP,state,ZkStateReader.BASE_URL_PROP,getBaseUrl(),ZkStateReader.CORE_NAME_PROP,cd.getName(),ZkStateReader.ROLES_PROP,cd.getCloudDescriptor().getRoles(),ZkStateReader.NODE_NAME_PROP,getNodeName(),ZkStateReader.SHARD_ID_PROP,cd.getCloudDescriptor().getShardId(),ZkStateReader.COLLECTION_PROP,cd.getCloudDescriptor().getCollectionName(),ZkStateReader.NUM_SHARDS_PROP,numShards != null ? numShards.toString() : null);
  cd.getCloudDescriptor().lastPublished=state;
  overseerJobQueue.offer(ZkStateReader.toJSON(m));
}
