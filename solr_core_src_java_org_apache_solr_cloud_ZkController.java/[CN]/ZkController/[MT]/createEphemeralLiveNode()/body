{
  String nodeName=getNodeName();
  String nodePath=ZkStateReader.LIVE_NODES_ZKNODE + "/" + nodeName;
  log.info("Register node as live in ZooKeeper:" + nodePath);
  Watcher liveNodeWatcher=new Watcher(){
    public void process(    WatchedEvent event){
      try {
        log.info("Updating live nodes:" + zkClient);
        try {
          zkStateReader.updateLiveNodes();
        }
  finally {
          String path=event.getPath();
          if (path == null) {
            log.warn("ZooKeeper watch triggered, but Solr cannot talk to ZK");
            return;
          }
          zkClient.getChildren(event.getPath(),this);
        }
      }
 catch (      KeeperException e) {
        if (e.code() == KeeperException.Code.SESSIONEXPIRED || e.code() == KeeperException.Code.CONNECTIONLOSS) {
          log.warn("ZooKeeper watch triggered, but Solr cannot talk to ZK");
          return;
        }
        log.error("",e);
        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
      }
catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
        log.error("",e);
        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
      }
catch (      IOException e) {
        log.error("",e);
        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
      }
    }
  }
;
  try {
    boolean nodeDeleted=true;
    try {
      zkClient.delete(nodePath,-1);
    }
 catch (    KeeperException.NoNodeException e) {
      nodeDeleted=false;
    }
    if (nodeDeleted) {
      log.info("Found a previous node that still exists while trying to register a new live node " + nodePath + " - removing existing node to create another.");
    }
    zkClient.makePath(nodePath,CreateMode.EPHEMERAL);
  }
 catch (  KeeperException e) {
    if (e.code() != KeeperException.Code.NODEEXISTS) {
      throw e;
    }
  }
  zkClient.getChildren(ZkStateReader.LIVE_NODES_ZKNODE,liveNodeWatcher);
  try {
    zkStateReader.updateLiveNodes();
  }
 catch (  IOException e) {
    log.error("",e);
    throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
  }
}
