{
  ClusterState clusterState=zkStateReader.getClusterState();
  Set<String> collections=clusterState.getCollections();
  Set<String> updatedCoreNodeNames=new HashSet<>();
  for (  String collectionName : collections) {
    DocCollection collection=clusterState.getCollection(collectionName);
    Collection<Slice> slices=collection.getSlices();
    for (    Slice slice : slices) {
      Collection<Replica> replicas=slice.getReplicas();
      for (      Replica replica : replicas) {
        if (getNodeName().equals(replica.getNodeName()) && replica.getState() != Replica.State.DOWN) {
          ZkNodeProps m=new ZkNodeProps(Overseer.QUEUE_OPERATION,"state",ZkStateReader.STATE_PROP,Replica.State.DOWN.toString(),ZkStateReader.BASE_URL_PROP,getBaseUrl(),ZkStateReader.CORE_NAME_PROP,replica.getStr(ZkStateReader.CORE_NAME_PROP),ZkStateReader.ROLES_PROP,replica.getStr(ZkStateReader.ROLES_PROP),ZkStateReader.NODE_NAME_PROP,getNodeName(),ZkStateReader.SHARD_ID_PROP,replica.getStr(ZkStateReader.SHARD_ID_PROP),ZkStateReader.COLLECTION_PROP,collectionName,ZkStateReader.CORE_NODE_NAME_PROP,replica.getName());
          updatedCoreNodeNames.add(replica.getName());
          overseerJobQueue.offer(Utils.toJSON(m));
        }
      }
    }
  }
  long now=System.nanoTime();
  long timeout=now + TimeUnit.NANOSECONDS.convert(WAIT_DOWN_STATES_TIMEOUT_SECONDS,TimeUnit.SECONDS);
  boolean foundStates=false;
  while (System.nanoTime() < timeout) {
    clusterState=zkStateReader.getClusterState();
    collections=clusterState.getCollections();
    for (    String collectionName : collections) {
      DocCollection collection=clusterState.getCollection(collectionName);
      Collection<Slice> slices=collection.getSlices();
      for (      Slice slice : slices) {
        Collection<Replica> replicas=slice.getReplicas();
        for (        Replica replica : replicas) {
          if (replica.getState() == Replica.State.DOWN) {
            updatedCoreNodeNames.remove(replica.getName());
          }
        }
      }
    }
    if (updatedCoreNodeNames.size() == 0) {
      foundStates=true;
      Thread.sleep(1000);
      break;
    }
    Thread.sleep(1000);
  }
  if (!foundStates) {
    log.warn("Timed out waiting to see all nodes published as DOWN in our cluster state.");
  }
}
