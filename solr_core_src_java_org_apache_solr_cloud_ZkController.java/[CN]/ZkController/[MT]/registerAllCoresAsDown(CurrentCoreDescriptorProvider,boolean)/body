{
  List<CoreDescriptor> descriptors=registerOnReconnect.getCurrentDescriptors();
  if (isClosed)   return;
  if (descriptors != null) {
    publishNodeAsDown(getNodeName());
    for (    CoreDescriptor descriptor : descriptors) {
      CloudDescriptor cloudDesc=descriptor.getCloudDescriptor();
      String collection=cloudDesc.getCollectionName();
      String slice=cloudDesc.getShardId();
      try {
        int children=zkStateReader.getZkClient().getChildren(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collection+ "/leader_elect/"+ slice+ "/election",null,true).size();
        if (children == 0) {
          log.debug("looks like we are going to be the leader for collection {} shard {}",collection,slice);
          continue;
        }
      }
 catch (      NoNodeException e) {
        log.debug("looks like we are going to be the leader for collection {} shard {}",collection,slice);
        continue;
      }
catch (      InterruptedException e2) {
        Thread.currentThread().interrupt();
      }
catch (      KeeperException e) {
        log.warn("",e);
        Thread.currentThread().interrupt();
      }
      final String coreZkNodeName=descriptor.getCloudDescriptor().getCoreNodeName();
      try {
        log.debug("calling waitForLeaderToSeeDownState for coreZkNodeName={} collection={} shard={}",new Object[]{coreZkNodeName,collection,slice});
        waitForLeaderToSeeDownState(descriptor,coreZkNodeName);
      }
 catch (      Exception e) {
        SolrException.log(log,"",e);
        if (isClosed) {
          return;
        }
      }
    }
  }
}
