{
  List<CoreDescriptor> descriptors=registerOnReconnect.getCurrentDescriptors();
  if (isClosed)   return;
  if (descriptors != null) {
    for (    CoreDescriptor descriptor : descriptors) {
      final String coreZkNodeName=descriptor.getCloudDescriptor().getCoreNodeName();
      try {
        descriptor.getCloudDescriptor().setLeader(false);
        publish(descriptor,ZkStateReader.DOWN,updateLastPublished);
      }
 catch (      Exception e) {
        if (isClosed) {
          return;
        }
        try {
          Thread.sleep(1000);
        }
 catch (        InterruptedException e1) {
          Thread.currentThread().interrupt();
        }
        try {
          publish(descriptor,ZkStateReader.DOWN);
        }
 catch (        Exception e2) {
          SolrException.log(log,"",e2);
          continue;
        }
      }
      CloudDescriptor cloudDesc=descriptor.getCloudDescriptor();
      String collection=cloudDesc.getCollectionName();
      String slice=cloudDesc.getShardId();
      try {
        int children=zkStateReader.getZkClient().getChildren(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collection+ "/leader_elect/"+ slice+ "/election",null,true).size();
        if (children == 0) {
          return;
        }
      }
 catch (      NoNodeException e) {
        return;
      }
catch (      InterruptedException e2) {
        Thread.currentThread().interrupt();
      }
catch (      KeeperException e) {
        log.warn("",e);
        Thread.currentThread().interrupt();
      }
      try {
        waitForLeaderToSeeDownState(descriptor,coreZkNodeName);
      }
 catch (      Exception e) {
        SolrException.log(log,"",e);
        if (isClosed) {
          return;
        }
        try {
          Thread.sleep(5000);
        }
 catch (        InterruptedException e1) {
          Thread.currentThread().interrupt();
        }
      }
    }
  }
}
