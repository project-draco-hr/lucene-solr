{
  try {
    if (!started) {
      minValue=maxValue=0;
    }
    datOut.writeLong(minValue);
    final long defaultValue=++maxValue - minValue;
    datOut.writeLong(defaultValue);
    PackedInts.Writer w=PackedInts.getWriter(datOut,docCount,PackedInts.bitsRequired(maxValue - minValue));
    final int firstDoc=defaultValues.nextSetBit(0);
    lastDocId++;
    if (firstDoc != -1) {
      for (int i=0; i < firstDoc; i++) {
        w.add(defaultValue);
      }
      for (int i=firstDoc; i < lastDocId; ) {
        w.add(docToValue[i] - minValue);
        final int nextValue=defaultValues.nextSetBit(++i);
        for (; i < nextValue; i++) {
          w.add(defaultValue);
        }
      }
    }
    for (int i=lastDocId; i < docCount; i++) {
      w.add(defaultValue);
    }
    w.finish();
  }
  finally {
    datOut.close();
    bytesUsed.addAndGet(-(RamUsageEstimator.NUM_BYTES_LONG * docToValue.length));
    docToValue=null;
  }
}
