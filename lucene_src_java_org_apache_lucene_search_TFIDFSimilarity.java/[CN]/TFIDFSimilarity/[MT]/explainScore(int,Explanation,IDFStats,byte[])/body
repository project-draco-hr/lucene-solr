{
  Explanation result=new Explanation();
  result.setDescription("score(doc=" + doc + ",freq="+ freq+ "), product of:");
  Explanation queryExpl=new Explanation();
  queryExpl.setDescription("queryWeight, product of:");
  Explanation boostExpl=new Explanation(stats.queryBoost,"boost");
  if (stats.queryBoost != 1.0f)   queryExpl.addDetail(boostExpl);
  queryExpl.addDetail(stats.idf);
  Explanation queryNormExpl=new Explanation(stats.queryNorm,"queryNorm");
  queryExpl.addDetail(queryNormExpl);
  queryExpl.setValue(boostExpl.getValue() * stats.idf.getValue() * queryNormExpl.getValue());
  result.addDetail(queryExpl);
  Explanation fieldExpl=new Explanation();
  fieldExpl.setDescription("fieldWeight in " + doc + ", product of:");
  Explanation tfExplanation=new Explanation();
  tfExplanation.setValue(tf(freq.getValue()));
  tfExplanation.setDescription("tf(freq=" + freq.getValue() + "), with freq of:");
  tfExplanation.addDetail(freq);
  fieldExpl.addDetail(tfExplanation);
  fieldExpl.addDetail(stats.idf);
  Explanation fieldNormExpl=new Explanation();
  float fieldNorm=norms != null ? decodeNormValue(norms[doc]) : 1.0f;
  fieldNormExpl.setValue(fieldNorm);
  fieldNormExpl.setDescription("fieldNorm(doc=" + doc + ")");
  fieldExpl.addDetail(fieldNormExpl);
  fieldExpl.setValue(tfExplanation.getValue() * stats.idf.getValue() * fieldNormExpl.getValue());
  result.addDetail(fieldExpl);
  result.setValue(queryExpl.getValue() * fieldExpl.getValue());
  if (queryExpl.getValue() == 1.0f)   return fieldExpl;
  return result;
}
