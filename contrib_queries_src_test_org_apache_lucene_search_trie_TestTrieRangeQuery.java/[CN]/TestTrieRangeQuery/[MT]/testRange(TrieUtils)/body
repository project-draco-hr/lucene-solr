{
  String field="field" + variant.TRIE_BITS;
  int count=3000;
  long lower=96666L, upper=lower + count * distance + 1234L;
  TrieRangeQuery q=new TrieRangeQuery(field,new Long(lower),new Long(upper),true,true,variant);
  TopDocs topDocs=searcher.search(q,null,10000,Sort.INDEXORDER);
  System.out.println("Found " + q.getLastNumberOfTerms() + " distinct terms in range for field '"+ field+ "'.");
  ScoreDoc[] sd=topDocs.scoreDocs;
  assertNotNull(sd);
  assertEquals("Score docs must match " + count + " docs, found "+ sd.length+ " docs",sd.length,count);
  Document doc=searcher.doc(sd[0].doc);
  assertEquals("First doc should be " + (2 * distance),variant.trieCodedToLong(doc.get(field)),2 * distance);
  doc=searcher.doc(sd[sd.length - 1].doc);
  assertEquals("Last doc should be " + ((1 + count) * distance),variant.trieCodedToLong(doc.get(field)),(1 + count) * distance);
}
