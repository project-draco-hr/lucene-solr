{
  String field="field" + variant.TRIE_BITS;
  for (int i=0; i < 50; i++) {
    long lower=(long)(rnd.nextDouble() * 10000L * distance);
    long upper=(long)(rnd.nextDouble() * 10000L * distance);
    TrieRangeQuery tq=new TrieRangeQuery(field,new Long(lower),new Long(upper),variant);
    RangeQuery cq=new RangeQuery(field,variant.longToTrieCoded(lower),variant.longToTrieCoded(upper),true,true);
    cq.setConstantScoreRewrite(true);
    TopDocs tTopDocs=searcher.search(tq,1);
    TopDocs cTopDocs=searcher.search(cq,1);
    assertEquals("Returned count for TrieRangeQuery and RangeQuery must be equal",tTopDocs.totalHits,cTopDocs.totalHits);
  }
}
