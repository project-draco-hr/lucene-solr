{
  new UpdateRequest().add(id,"0","a_s","hello0","a_i","0","a_f","0").add(id,"2","a_s","hello2","a_i","2","a_f","0").add(id,"3","a_s","hello3","a_i","3","a_f","3").add(id,"4","a_s","hello4","a_i","4","a_f","4").add(id,"5","a_s","hello1","a_i","5","a_f","1").add(id,"6","a_s","hello1","a_i","6","a_f","1").add(id,"7","a_s","hello1","a_i","7","a_f","1").add(id,"8","a_s","hello1","a_i","8","a_f","1").add(id,"9","a_s","hello1","a_i","9","a_f","1").add(id,"10","a_s","hello1","a_i","10","a_f","1").commit(cluster.getSolrClient(),COLLECTION);
  SolrParams sParams=mapParams("q","*:*","fl","id,a_s,a_i","sort","a_i asc","partitionKeys","a_i");
  CloudSolrStream stream=new CloudSolrStream(zkHost,COLLECTION,sParams);
  RankStream rstream=new RankStream(stream,11,new FieldComparator("a_i",ComparatorOrder.DESCENDING));
  ParallelStream pstream=new ParallelStream(zkHost,COLLECTION,rstream,2,new FieldComparator("a_i",ComparatorOrder.DESCENDING));
  attachStreamFactory(pstream);
  List<Tuple> tuples=getTuples(pstream);
  assert(tuples.size() == 10);
  assertOrder(tuples,10,9,8,7,6,5,4,3,2,0);
}
