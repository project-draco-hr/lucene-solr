{
  new UpdateRequest().add(id,"0","a_s","hello0","a_i","0","a_f","1").add(id,"2","a_s","hello0","a_i","2","a_f","2").add(id,"3","a_s","hello3","a_i","3","a_f","3").add(id,"4","a_s","hello4","a_i","4","a_f","4").add(id,"1","a_s","hello0","a_i","1","a_f","5").add(id,"5","a_s","hello3","a_i","10","a_f","6").add(id,"6","a_s","hello4","a_i","11","a_f","7").add(id,"7","a_s","hello3","a_i","12","a_f","8").add(id,"8","a_s","hello3","a_i","13","a_f","9").add(id,"9","a_s","hello0","a_i","14","a_f","10").commit(cluster.getSolrClient(),COLLECTION);
  Map paramsA=mapParams("q","*:*","fl","a_s,a_i,a_f","sort","a_s asc");
  Bucket[] buckets={new Bucket("a_s")};
  Metric[] metrics={new SumMetric("a_i"),new SumMetric("a_f"),new MinMetric("a_i"),new MinMetric("a_f"),new MaxMetric("a_i"),new MaxMetric("a_f"),new MeanMetric("a_i"),new MeanMetric("a_f"),new CountMetric()};
  FieldComparator[] sorts={new FieldComparator("sum(a_i)",ComparatorOrder.ASCENDING)};
  FacetStream facetStream=new FacetStream(zkHost,COLLECTION,paramsA,buckets,metrics,sorts,100);
  List<Tuple> tuples=getTuples(facetStream);
  assert(tuples.size() == 3);
  Tuple tuple=tuples.get(0);
  String bucket=tuple.getString("a_s");
  Double sumi=tuple.getDouble("sum(a_i)");
  Double sumf=tuple.getDouble("sum(a_f)");
  Double mini=tuple.getDouble("min(a_i)");
  Double minf=tuple.getDouble("min(a_f)");
  Double maxi=tuple.getDouble("max(a_i)");
  Double maxf=tuple.getDouble("max(a_f)");
  Double avgi=tuple.getDouble("avg(a_i)");
  Double avgf=tuple.getDouble("avg(a_f)");
  Double count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello4"));
  assertTrue(sumi.longValue() == 15);
  assertTrue(sumf.doubleValue() == 11.0D);
  assertTrue(mini.doubleValue() == 4.0D);
  assertTrue(minf.doubleValue() == 4.0D);
  assertTrue(maxi.doubleValue() == 11.0D);
  assertTrue(maxf.doubleValue() == 7.0D);
  assertTrue(avgi.doubleValue() == 7.5D);
  assertTrue(avgf.doubleValue() == 5.5D);
  assertTrue(count.doubleValue() == 2);
  tuple=tuples.get(1);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello0"));
  assertTrue(sumi.doubleValue() == 17.0D);
  assertTrue(sumf.doubleValue() == 18.0D);
  assertTrue(mini.doubleValue() == 0.0D);
  assertTrue(minf.doubleValue() == 1.0D);
  assertTrue(maxi.doubleValue() == 14.0D);
  assertTrue(maxf.doubleValue() == 10.0D);
  assertTrue(avgi.doubleValue() == 4.25D);
  assertTrue(avgf.doubleValue() == 4.5D);
  assertTrue(count.doubleValue() == 4);
  tuple=tuples.get(2);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello3"));
  assertTrue(sumi.doubleValue() == 38.0D);
  assertTrue(sumf.doubleValue() == 26.0D);
  assertTrue(mini.doubleValue() == 3.0D);
  assertTrue(minf.doubleValue() == 3.0D);
  assertTrue(maxi.doubleValue() == 13.0D);
  assertTrue(maxf.doubleValue() == 9.0D);
  assertTrue(avgi.doubleValue() == 9.5D);
  assertTrue(avgf.doubleValue() == 6.5D);
  assertTrue(count.doubleValue() == 4);
  sorts[0]=new FieldComparator("sum(a_i)",ComparatorOrder.DESCENDING);
  facetStream=new FacetStream(zkHost,COLLECTION,paramsA,buckets,metrics,sorts,100);
  tuples=getTuples(facetStream);
  assert(tuples.size() == 3);
  tuple=tuples.get(0);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello3"));
  assertTrue(sumi.doubleValue() == 38.0D);
  assertTrue(sumf.doubleValue() == 26.0D);
  assertTrue(mini.doubleValue() == 3.0D);
  assertTrue(minf.doubleValue() == 3.0D);
  assertTrue(maxi.doubleValue() == 13.0D);
  assertTrue(maxf.doubleValue() == 9.0D);
  assertTrue(avgi.doubleValue() == 9.5D);
  assertTrue(avgf.doubleValue() == 6.5D);
  assertTrue(count.doubleValue() == 4);
  tuple=tuples.get(1);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello0"));
  assertTrue(sumi.doubleValue() == 17.0D);
  assertTrue(sumf.doubleValue() == 18.0D);
  assertTrue(mini.doubleValue() == 0.0D);
  assertTrue(minf.doubleValue() == 1.0D);
  assertTrue(maxi.doubleValue() == 14.0D);
  assertTrue(maxf.doubleValue() == 10.0D);
  assertTrue(avgi.doubleValue() == 4.25D);
  assertTrue(avgf.doubleValue() == 4.5D);
  assertTrue(count.doubleValue() == 4);
  tuple=tuples.get(2);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello4"));
  assertTrue(sumi.longValue() == 15);
  assertTrue(sumf.doubleValue() == 11.0D);
  assertTrue(mini.doubleValue() == 4.0D);
  assertTrue(minf.doubleValue() == 4.0D);
  assertTrue(maxi.doubleValue() == 11.0D);
  assertTrue(maxf.doubleValue() == 7.0D);
  assertTrue(avgi.doubleValue() == 7.5D);
  assertTrue(avgf.doubleValue() == 5.5D);
  assertTrue(count.doubleValue() == 2);
  sorts[0]=new FieldComparator("a_s",ComparatorOrder.DESCENDING);
  facetStream=new FacetStream(zkHost,COLLECTION,paramsA,buckets,metrics,sorts,100);
  tuples=getTuples(facetStream);
  assert(tuples.size() == 3);
  tuple=tuples.get(0);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello4"));
  assertTrue(sumi.longValue() == 15);
  assertTrue(sumf.doubleValue() == 11.0D);
  assertTrue(mini.doubleValue() == 4.0D);
  assertTrue(minf.doubleValue() == 4.0D);
  assertTrue(maxi.doubleValue() == 11.0D);
  assertTrue(maxf.doubleValue() == 7.0D);
  assertTrue(avgi.doubleValue() == 7.5D);
  assertTrue(avgf.doubleValue() == 5.5D);
  assertTrue(count.doubleValue() == 2);
  tuple=tuples.get(1);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello3"));
  assertTrue(sumi.doubleValue() == 38.0D);
  assertTrue(sumf.doubleValue() == 26.0D);
  assertTrue(mini.doubleValue() == 3.0D);
  assertTrue(minf.doubleValue() == 3.0D);
  assertTrue(maxi.doubleValue() == 13.0D);
  assertTrue(maxf.doubleValue() == 9.0D);
  assertTrue(avgi.doubleValue() == 9.5D);
  assertTrue(avgf.doubleValue() == 6.5D);
  assertTrue(count.doubleValue() == 4);
  tuple=tuples.get(2);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello0"));
  assertTrue(sumi.doubleValue() == 17.0D);
  assertTrue(sumf.doubleValue() == 18.0D);
  assertTrue(mini.doubleValue() == 0.0D);
  assertTrue(minf.doubleValue() == 1.0D);
  assertTrue(maxi.doubleValue() == 14.0D);
  assertTrue(maxf.doubleValue() == 10.0D);
  assertTrue(avgi.doubleValue() == 4.25D);
  assertTrue(avgf.doubleValue() == 4.5D);
  assertTrue(count.doubleValue() == 4);
  sorts[0]=new FieldComparator("a_s",ComparatorOrder.ASCENDING);
  facetStream=new FacetStream(zkHost,COLLECTION,paramsA,buckets,metrics,sorts,100);
  tuples=getTuples(facetStream);
  assert(tuples.size() == 3);
  tuple=tuples.get(0);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello0"));
  assertTrue(sumi.doubleValue() == 17.0D);
  assertTrue(sumf.doubleValue() == 18.0D);
  assertTrue(mini.doubleValue() == 0.0D);
  assertTrue(minf.doubleValue() == 1.0D);
  assertTrue(maxi.doubleValue() == 14.0D);
  assertTrue(maxf.doubleValue() == 10.0D);
  assertTrue(avgi.doubleValue() == 4.25D);
  assertTrue(avgf.doubleValue() == 4.5D);
  assertTrue(count.doubleValue() == 4);
  tuple=tuples.get(1);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello3"));
  assertTrue(sumi.doubleValue() == 38.0D);
  assertTrue(sumf.doubleValue() == 26.0D);
  assertTrue(mini.doubleValue() == 3.0D);
  assertTrue(minf.doubleValue() == 3.0D);
  assertTrue(maxi.doubleValue() == 13.0D);
  assertTrue(maxf.doubleValue() == 9.0D);
  assertTrue(avgi.doubleValue() == 9.5D);
  assertTrue(avgf.doubleValue() == 6.5D);
  assertTrue(count.doubleValue() == 4);
  tuple=tuples.get(2);
  bucket=tuple.getString("a_s");
  sumi=tuple.getDouble("sum(a_i)");
  sumf=tuple.getDouble("sum(a_f)");
  mini=tuple.getDouble("min(a_i)");
  minf=tuple.getDouble("min(a_f)");
  maxi=tuple.getDouble("max(a_i)");
  maxf=tuple.getDouble("max(a_f)");
  avgi=tuple.getDouble("avg(a_i)");
  avgf=tuple.getDouble("avg(a_f)");
  count=tuple.getDouble("count(*)");
  assertTrue(bucket.equals("hello4"));
  assertTrue(sumi.longValue() == 15);
  assertTrue(sumf.doubleValue() == 11.0D);
  assertTrue(mini.doubleValue() == 4.0D);
  assertTrue(minf.doubleValue() == 4.0D);
  assertTrue(maxi.doubleValue() == 11.0D);
  assertTrue(maxf.doubleValue() == 7.0D);
  assertTrue(avgi.doubleValue() == 7.5D);
  assertTrue(avgf.doubleValue() == 5.5D);
  assertTrue(count.doubleValue() == 2);
}
