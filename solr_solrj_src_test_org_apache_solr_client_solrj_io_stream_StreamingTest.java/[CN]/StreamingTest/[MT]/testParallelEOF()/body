{
  new UpdateRequest().add(id,"0","a_s","hello0","a_i","0","a_f","0").add(id,"2","a_s","hello2","a_i","2","a_f","0").add(id,"3","a_s","hello3","a_i","3","a_f","3").add(id,"4","a_s","hello4","a_i","4","a_f","4").add(id,"1","a_s","hello1","a_i","1","a_f","1").add(id,"5","a_s","hello0","a_i","10","a_f","0").add(id,"6","a_s","hello2","a_i","8","a_f","0").add(id,"7","a_s","hello3","a_i","7","a_f","3").add(id,"8","a_s","hello4","a_i","11","a_f","4").add(id,"9","a_s","hello1","a_i","100","a_f","1").commit(cluster.getSolrClient(),COLLECTION);
  SolrParams sParamsA=mapParams("q","id:(4 1 8 7 9)","fl","id,a_s,a_i","sort","a_i asc","partitionKeys","a_i");
  CloudSolrStream streamA=new CloudSolrStream(zkHost,COLLECTION,sParamsA);
  SolrParams sParamsB=mapParams("q","id:(0 2 3 6)","fl","id,a_s,a_i","sort","a_i asc","partitionKeys","a_i");
  CloudSolrStream streamB=new CloudSolrStream(zkHost,COLLECTION,sParamsB);
  MergeStream mstream=new MergeStream(streamA,streamB,new FieldComparator("a_i",ComparatorOrder.ASCENDING));
  ParallelStream pstream=new ParallelStream(zkHost,COLLECTION,mstream,2,new FieldComparator("a_i",ComparatorOrder.ASCENDING));
  attachStreamFactory(pstream);
  List<Tuple> tuples=getTuples(pstream);
  assert(tuples.size() == 9);
  Map<String,Tuple> eofTuples=pstream.getEofTuples();
  assert(eofTuples.size() == 2);
}
