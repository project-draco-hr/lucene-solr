{
  new UpdateRequest().add(id,"0","a_s","hello0","a_i","0","a_f","0").add(id,"2","a_s","hello2","a_i","2","a_f","0").add(id,"3","a_s","hello3","a_i","3","a_f","3").add(id,"4","a_s","hello4","a_i","4","a_f","4").add(id,"1","a_s","hello1","a_i","1","a_f","1").commit(cluster.getSolrClient(),COLLECTION);
  Map paramsA=mapParams("q","id:(4 1)","fl","id,a_s,a_i","sort","a_i asc");
  CloudSolrStream streamA=new CloudSolrStream(zkHost,COLLECTION,paramsA);
  Map paramsB=mapParams("q","id:(0 2 3)","fl","id,a_s,a_i","sort","a_i asc");
  CloudSolrStream streamB=new CloudSolrStream(zkHost,COLLECTION,paramsB);
  MergeStream mstream=new MergeStream(streamA,streamB,new FieldComparator("a_i",ComparatorOrder.ASCENDING));
  List<Tuple> tuples=getTuples(mstream);
  assert(tuples.size() == 5);
  assertOrder(tuples,0,1,2,3,4);
  paramsA=mapParams("q","id:(4 1)","fl","id,a_s,a_i","sort","a_i desc");
  streamA=new CloudSolrStream(zkHost,COLLECTION,paramsA);
  paramsB=mapParams("q","id:(0 2 3)","fl","id,a_s,a_i","sort","a_i desc");
  streamB=new CloudSolrStream(zkHost,COLLECTION,paramsB);
  mstream=new MergeStream(streamA,streamB,new FieldComparator("a_i",ComparatorOrder.DESCENDING));
  tuples=getTuples(mstream);
  assert(tuples.size() == 5);
  assertOrder(tuples,4,3,2,1,0);
  paramsA=mapParams("q","id:(2 4 1)","fl","id,a_s,a_i,a_f","sort","a_f asc,a_i asc");
  streamA=new CloudSolrStream(zkHost,COLLECTION,paramsA);
  paramsB=mapParams("q","id:(0 3)","fl","id,a_s,a_i,a_f","sort","a_f asc,a_i asc");
  streamB=new CloudSolrStream(zkHost,COLLECTION,paramsB);
  mstream=new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator("a_f",ComparatorOrder.ASCENDING),new FieldComparator("a_i",ComparatorOrder.ASCENDING)));
  tuples=getTuples(mstream);
  assert(tuples.size() == 5);
  assertOrder(tuples,0,2,1,3,4);
  paramsA=mapParams("q","id:(2 4 1)","fl","id,a_s,a_i,a_f","sort","a_f asc,a_i desc");
  streamA=new CloudSolrStream(zkHost,COLLECTION,paramsA);
  paramsB=mapParams("q","id:(0 3)","fl","id,a_s,a_i,a_f","sort","a_f asc,a_i desc");
  streamB=new CloudSolrStream(zkHost,COLLECTION,paramsB);
  mstream=new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator("a_f",ComparatorOrder.ASCENDING),new FieldComparator("a_i",ComparatorOrder.DESCENDING)));
  tuples=getTuples(mstream);
  assert(tuples.size() == 5);
  assertOrder(tuples,2,0,1,3,4);
}
