{
  new UpdateRequest().add(id,"0","a_s","hello0","a_i","0","a_f","1").add(id,"2","a_s","hello0","a_i","2","a_f","2").add(id,"3","a_s","hello3","a_i","3","a_f","3").add(id,"4","a_s","hello4","a_i","4","a_f","4").add(id,"1","a_s","hello0","a_i","1","a_f","5").add(id,"5","a_s","hello3","a_i","10","a_f","6").add(id,"6","a_s","hello4","a_i","11","a_f","7").add(id,"7","a_s","hello3","a_i","12","a_f","8").add(id,"8","a_s","hello3","a_i","13","a_f","9").add(id,"9","a_s","hello0","a_i","14","a_f","10").commit(cluster.getSolrClient(),COLLECTION);
  Map paramsA=mapParams("q","*:*");
  Metric[] metrics={new SumMetric("a_i"),new SumMetric("a_f"),new MinMetric("a_i"),new MinMetric("a_f"),new MaxMetric("a_i"),new MaxMetric("a_f"),new MeanMetric("a_i"),new MeanMetric("a_f"),new CountMetric()};
  StatsStream statsStream=new StatsStream(zkHost,COLLECTION,paramsA,metrics);
  List<Tuple> tuples=getTuples(statsStream);
  assert(tuples.size() == 1);
  Tuple tuple=tuples.get(0);
  Double sumi=tuple.getDouble("sum(a_i)");
  Double sumf=tuple.getDouble("sum(a_f)");
  Double mini=tuple.getDouble("min(a_i)");
  Double minf=tuple.getDouble("min(a_f)");
  Double maxi=tuple.getDouble("max(a_i)");
  Double maxf=tuple.getDouble("max(a_f)");
  Double avgi=tuple.getDouble("avg(a_i)");
  Double avgf=tuple.getDouble("avg(a_f)");
  Double count=tuple.getDouble("count(*)");
  assertTrue(sumi.longValue() == 70);
  assertTrue(sumf.doubleValue() == 55.0D);
  assertTrue(mini.doubleValue() == 0.0D);
  assertTrue(minf.doubleValue() == 1.0D);
  assertTrue(maxi.doubleValue() == 14.0D);
  assertTrue(maxf.doubleValue() == 10.0D);
  assertTrue(avgi.doubleValue() == 7.0D);
  assertTrue(avgf.doubleValue() == 5.5D);
  assertTrue(count.doubleValue() == 10);
}
