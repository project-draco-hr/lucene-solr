{
  SolrParams sParams=StreamingTest.mapParams("q","*:*","qt",which,"fl","id,i_sing,i_multi,l_sing,l_multi,f_sing,f_multi,d_sing,d_multi,dt_sing,dt_multi,s_sing,s_multi,b_sing,b_multi","sort","i_sing asc");
  try (CloudSolrStream stream=new CloudSolrStream(zkHost,COLLECTION,sParams)){
    Tuple tuple=getTuple(stream);
    assertTrue("Integers should be returned",tuple.getLong("i_sing") == 11L);
    assertTrue("MV should be returned for i_multi",tuple.getLongs("i_multi").get(0) == 12);
    assertTrue("MV should be returned for i_multi",tuple.getLongs("i_multi").get(1) == 13);
    assertTrue("longs should be returned",tuple.getLong("l_sing") == 14L);
    assertTrue("MV should be returned for l_multi",tuple.getLongs("l_multi").get(0) == 15);
    assertTrue("MV should be returned for l_multi",tuple.getLongs("l_multi").get(1) == 16);
    assertTrue("floats should be returned",tuple.getDouble("f_sing") == 1.7);
    assertTrue("MV should be returned for f_multi",tuple.getDoubles("f_multi").get(0) == 1.8);
    assertTrue("MV should be returned for f_multi",tuple.getDoubles("f_multi").get(1) == 1.9);
    assertTrue("doubles should be returned",tuple.getDouble("d_sing") == 1.2);
    assertTrue("MV should be returned for d_multi",tuple.getDoubles("d_multi").get(0) == 1.21);
    assertTrue("MV should be returned for d_multi",tuple.getDoubles("d_multi").get(1) == 1.22);
    assertTrue("Strings should be returned",tuple.getString("s_sing").equals("single"));
    assertTrue("MV should be returned for s_multi",tuple.getStrings("s_multi").get(0).equals("sm1"));
    assertTrue("MV should be returned for s_multi",tuple.getStrings("s_multi").get(1).equals("sm2"));
    assertTrue("Dates should be returned as Strings",tuple.getString("dt_sing").equals("1980-01-02T11:11:33.890Z"));
    assertTrue("MV dates should be returned as Strings for dt_multi",tuple.getStrings("dt_multi").get(0).equals("1981-03-04T01:02:03.780Z"));
    assertTrue("MV dates should be returned as Strings for dt_multi",tuple.getStrings("dt_multi").get(1).equals("1981-05-24T04:05:06.990Z"));
    Date dt=new Date(Instant.parse("1980-01-02T11:11:33.890Z").toEpochMilli());
    assertTrue("Dates should be returned as Dates",tuple.getDate("dt_sing").equals(dt));
    dt=new Date(Instant.parse("1981-03-04T01:02:03.780Z").toEpochMilli());
    assertTrue("MV dates should be returned as Dates for dt_multi",tuple.getDates("dt_multi").get(0).equals(dt));
    dt=new Date(Instant.parse("1981-05-24T04:05:06.990Z").toEpochMilli());
    assertTrue("MV dates should be returned as Dates  for dt_multi",tuple.getDates("dt_multi").get(1).equals(dt));
    assertTrue("Booleans should be returned",tuple.getBool("b_sing"));
    assertFalse("MV boolean should be returned for b_multi",tuple.getBools("b_multi").get(0));
    assertTrue("MV boolean should be returned for b_multi",tuple.getBools("b_multi").get(1));
  }
 }
