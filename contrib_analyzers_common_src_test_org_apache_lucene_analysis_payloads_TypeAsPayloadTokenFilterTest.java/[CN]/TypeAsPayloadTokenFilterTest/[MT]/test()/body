{
  String test="The quick red fox jumped over the lazy brown dogs";
  TypeAsPayloadTokenFilter nptf=new TypeAsPayloadTokenFilter(new WordTokenFilter(new WhitespaceTokenizer(Version.LUCENE_CURRENT,new StringReader(test))));
  int count=0;
  TermAttribute termAtt=nptf.getAttribute(TermAttribute.class);
  TypeAttribute typeAtt=nptf.getAttribute(TypeAttribute.class);
  PayloadAttribute payloadAtt=nptf.getAttribute(PayloadAttribute.class);
  while (nptf.incrementToken()) {
    assertTrue(typeAtt.type() + " is not null and it should be",typeAtt.type().equals(String.valueOf(Character.toUpperCase(termAtt.termBuffer()[0]))));
    assertTrue("nextToken.getPayload() is null and it shouldn't be",payloadAtt.getPayload() != null);
    String type=new String(payloadAtt.getPayload().getData(),"UTF-8");
    assertTrue("type is null and it shouldn't be",type != null);
    assertTrue(type + " is not equal to " + typeAtt.type(),type.equals(typeAtt.type()) == true);
    count++;
  }
  assertTrue(count + " does not equal: " + 10,count == 10);
}
