{
  String test="The quick red fox jumped over the lazy brown dogs";
  TypeAsPayloadTokenFilter nptf=new TypeAsPayloadTokenFilter(new WordTokenFilter(new WhitespaceTokenizer(new StringReader(test))));
  int count=0;
  final Token reusableToken=new Token();
  for (Token nextToken=nptf.next(reusableToken); nextToken != null; nextToken=nptf.next(reusableToken)) {
    assertTrue(nextToken.type() + " is not null and it should be",nextToken.type().equals(String.valueOf(Character.toUpperCase(nextToken.termBuffer()[0]))));
    assertTrue("nextToken.getPayload() is null and it shouldn't be",nextToken.getPayload() != null);
    String type=new String(nextToken.getPayload().getData(),"UTF-8");
    assertTrue("type is null and it shouldn't be",type != null);
    assertTrue(type + " is not equal to " + nextToken.type(),type.equals(nextToken.type()) == true);
    count++;
  }
  assertTrue(count + " does not equal: " + 10,count == 10);
}
