{
  IndexSchema schema=h.getCore().getSchema();
  assertNull("test expects 'foo_giberish' to not be a valid field, looks like schema was changed out from under us",schema.getFieldTypeNoEx("foo_giberish"));
  assertNotNull("test expects 't_raw' to be a valid field, looks like schema was changed out from under us",schema.getFieldTypeNoEx("t_raw"));
  assertNotNull("test expects 'foo_s' to be a valid field, looks like schema was changed out from under us",schema.getFieldTypeNoEx("foo_s"));
  SolrInputDocument d=null;
  d=processAdd("ignore-not-in-schema",doc(f("id","1111"),f("foo_giberish","123456789","",42,"abcd"),f("t_raw","123456789","",42,"abcd"),f("foo_s","hoss")));
  assertNotNull(d);
  assertFalse(d.containsKey("foo_giberish"));
  assertEquals(Arrays.asList("123456789","",42,"abcd"),d.getFieldValues("t_raw"));
  assertEquals("hoss",d.getFieldValue("foo_s"));
  d=processAdd("ignore-some",doc(f("id","1111"),f("foo_giberish","123456789","",42,"abcd"),f("t_raw","123456789","",42,"abcd"),f("foo_s","hoss")));
  assertNotNull(d);
  assertEquals(Arrays.asList("123456789","",42,"abcd"),d.getFieldValues("foo_giberish"));
  assertFalse(d.containsKey("t_raw"));
  assertEquals("hoss",d.getFieldValue("foo_s"));
}
