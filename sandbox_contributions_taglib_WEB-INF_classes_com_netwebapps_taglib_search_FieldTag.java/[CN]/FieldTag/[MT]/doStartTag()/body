{
  Object parent=findAncestorWithClass(this,com.netwebapps.taglib.search.SearchTag.class);
  try {
    Method getFieldMethod=parent.getClass().getMethod("getField",new Class[]{Class.forName("java.lang.String")});
    value=getFieldMethod.invoke(parent,new String[]{name}).toString();
  }
 catch (  SecurityException e) {
    if (throwOnException) {
      throw new JspException("A security violation occurred: " + e);
    }
    abort=true;
  }
catch (  NoSuchMethodException e) {
    if (throwOnException) {
      throw new JspException("Unable to declair the getField method : " + e);
    }
    abort=true;
  }
catch (  ClassNotFoundException e) {
    if (throwOnException) {
      throw new JspException("ClassNotFoundException: " + e);
    }
  }
catch (  IllegalAccessException e) {
    if (throwOnException) {
      throw new JspException("Access denied: " + e);
    }
    abort=true;
  }
catch (  InvocationTargetException e) {
    if (throwOnException) {
      throw new JspException("This tag must be nested in a Search tag in order to work: " + e);
    }
    abort=true;
  }
catch (  NullPointerException e) {
    if (throwOnException) {
      throw new JspException("This tag must be nested in a Search tag in order to work: " + e);
    }
    abort=true;
  }
  if (abort) {
    pageContext.setAttribute(getId(),this,PageContext.PAGE_SCOPE);
    return SKIP_BODY;
  }
  pageContext.setAttribute(getId(),this,PageContext.PAGE_SCOPE);
  return EVAL_BODY_INCLUDE;
}
