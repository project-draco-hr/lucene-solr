{
  Query query1=PrecedenceQueryParser.parse("A AND B OR C AND D","field",new WhitespaceAnalyzer());
  Query query2=PrecedenceQueryParser.parse("(A AND B) OR (C AND D)","field",new WhitespaceAnalyzer());
  assertEquals(query1,query2);
  query1=PrecedenceQueryParser.parse("A OR B C","field",new WhitespaceAnalyzer());
  query2=PrecedenceQueryParser.parse("A B C","field",new WhitespaceAnalyzer());
  assertEquals(query1,query2);
  query1=PrecedenceQueryParser.parse("A AND B C","field",new WhitespaceAnalyzer());
  query2=PrecedenceQueryParser.parse("(+A +B) C","field",new WhitespaceAnalyzer());
  assertEquals(query1,query2);
  query1=PrecedenceQueryParser.parse("A AND NOT B","field",new WhitespaceAnalyzer());
  query2=PrecedenceQueryParser.parse("+A -B","field",new WhitespaceAnalyzer());
  assertEquals(query1,query2);
  query1=PrecedenceQueryParser.parse("A OR NOT B","field",new WhitespaceAnalyzer());
  query2=PrecedenceQueryParser.parse("A -B","field",new WhitespaceAnalyzer());
  assertEquals(query1,query2);
  query1=PrecedenceQueryParser.parse("A OR NOT B AND C","field",new WhitespaceAnalyzer());
  query2=PrecedenceQueryParser.parse("A (-B +C)","field",new WhitespaceAnalyzer());
  assertEquals(query1,query2);
}
