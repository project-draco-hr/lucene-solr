{
  super(valueCount,bitsPerValue);
  final PackedInts.Format format=PackedInts.Format.PACKED;
  final long byteCount=format.byteCount(packedIntsVersion,valueCount,bitsPerValue);
  final int longCount=format.longCount(PackedInts.VERSION_CURRENT,valueCount,bitsPerValue);
  blocks=new long[longCount];
  for (int i=0; i < byteCount / 8; ++i) {
    blocks[i]=in.readLong();
  }
  final int remaining=(int)(byteCount % 8);
  if (remaining != 0) {
    long lastLong=0;
    for (int i=0; i < remaining; ++i) {
      lastLong|=(in.readByte() & 0xFFL) << (56 - i * 8);
    }
    blocks[blocks.length - 1]=lastLong;
  }
  maskRight=~0L << (BLOCK_SIZE - bitsPerValue) >>> (BLOCK_SIZE - bitsPerValue);
  bpvMinusBlockSize=bitsPerValue - BLOCK_SIZE;
}
