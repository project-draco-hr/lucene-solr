{
  final Map<String,String[]> testParams=new HashMap<String,String[]>();
  final MacroExpander meSkipOnMissingParams=new MacroExpander(testParams);
  final MacroExpander meFailOnMissingParams=new MacroExpander(testParams,true);
  final String low="50";
  final String high="100";
  testParams.put("low",new String[]{low});
  testParams.put("high",new String[]{high});
  final String testQuery="q=popularity:[ ${low} TO ${high} ]";
  final String expandedQuery="q=popularity:[ " + low + " TO "+ high+ " ]";
  assertEquals(expandedQuery,meSkipOnMissingParams.expand(testQuery));
  assertEquals(expandedQuery,meFailOnMissingParams.expand(testQuery));
  final String expandedLow;
  final String expandedHigh;
  if (random().nextBoolean()) {
    expandedLow=low;
  }
 else {
    expandedLow="";
    testParams.remove("low");
  }
  if (random().nextBoolean()) {
    expandedHigh=high;
  }
 else {
    expandedHigh="";
    testParams.remove("high");
  }
  assertEquals("q=popularity:[ " + expandedLow + " TO "+ expandedHigh+ " ]",meSkipOnMissingParams.expand(testQuery));
  if (testParams.size() < 2) {
    assertEquals(null,meFailOnMissingParams.expand(testQuery));
  }
}
