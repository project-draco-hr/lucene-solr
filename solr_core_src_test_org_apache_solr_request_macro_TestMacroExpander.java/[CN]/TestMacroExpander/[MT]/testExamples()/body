{
  final Map<String,String[]> testParams=new HashMap<String,String[]>();
  final MacroExpander me;
  if (random().nextBoolean()) {
    me=new MacroExpander(testParams);
  }
 else {
    final boolean failOnMissingParams=random().nextBoolean();
    me=new MacroExpander(testParams,failOnMissingParams);
  }
  String[] lowParams={"50"};
  testParams.put("low",lowParams);
  String[] highParams={"100"};
  testParams.put("high",highParams);
  String testQuery="q=popularity:[ ${low} TO ${high} ]";
  assertEquals("q=popularity:[ 50 TO 100 ]",me.expand(testQuery));
  testQuery="q=popularity:[ ${low:10} TO ${high:20} ]";
  assertEquals("q=popularity:[ 50 TO 100 ]",me.expand(testQuery));
  testParams.clear();
  assertEquals("q=popularity:[ 10 TO 20 ]",me.expand(testQuery));
  testQuery="q=${pop_query}";
  String[] popQueryParams={"${pop_field}:[ ${low} TO ${high} ] AND inStock:true"};
  String[] popFieldParams={"popularity"};
  testParams.put("low",lowParams);
  testParams.put("high",highParams);
  testParams.put("pop_query",popQueryParams);
  testParams.put("pop_field",popFieldParams);
  assertEquals("q=popularity:[ 50 TO 100 ] AND inStock:true",me.expand(testQuery));
}
