{
  this.closeSubReaders=closeSubReaders;
  if (readers.length == 0 && storedFieldsReaders.length > 0)   throw new IllegalArgumentException("There must be at least one main reader if storedFieldsReaders are used.");
  this.parallelReaders=readers.clone();
  this.storedFieldsReaders=storedFieldsReaders.clone();
  if (parallelReaders.length > 0) {
    final LeafReader first=parallelReaders[0];
    this.maxDoc=first.maxDoc();
    this.numDocs=first.numDocs();
    this.hasDeletions=first.hasDeletions();
  }
 else {
    this.maxDoc=this.numDocs=0;
    this.hasDeletions=false;
  }
  Collections.addAll(completeReaderSet,this.parallelReaders);
  Collections.addAll(completeReaderSet,this.storedFieldsReaders);
  for (  LeafReader reader : completeReaderSet) {
    if (reader.maxDoc() != maxDoc) {
      throw new IllegalArgumentException("All readers must have same maxDoc: " + maxDoc + "!="+ reader.maxDoc());
    }
  }
  FieldInfos.Builder builder=new FieldInfos.Builder();
  Sort indexSort=null;
  for (  final LeafReader reader : this.parallelReaders) {
    Sort leafIndexSort=reader.getIndexSort();
    if (indexSort == null) {
      indexSort=leafIndexSort;
    }
 else     if (leafIndexSort != null && indexSort.equals(leafIndexSort) == false) {
      throw new IllegalArgumentException("cannot combine LeafReaders that have different index sorts: saw both sort=" + indexSort + " and "+ leafIndexSort);
    }
    final FieldInfos readerFieldInfos=reader.getFieldInfos();
    for (    FieldInfo fieldInfo : readerFieldInfos) {
      if (!fieldToReader.containsKey(fieldInfo.name)) {
        builder.add(fieldInfo);
        fieldToReader.put(fieldInfo.name,reader);
        if (fieldInfo.hasVectors()) {
          tvFieldToReader.put(fieldInfo.name,reader);
        }
      }
    }
  }
  fieldInfos=builder.finish();
  this.indexSort=indexSort;
  for (  final LeafReader reader : this.parallelReaders) {
    final Fields readerFields=reader.fields();
    for (    String field : readerFields) {
      if (fieldToReader.get(field) == reader) {
        this.fields.addField(field,readerFields.terms(field));
      }
    }
  }
  for (  LeafReader reader : completeReaderSet) {
    if (!closeSubReaders) {
      reader.incRef();
    }
    reader.registerParentReader(this);
  }
}
