{
  MockDirectoryWrapper dir=newMockDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));
  if (VERBOSE) {
    System.out.println("TEST: config1=" + writer.getConfig());
  }
  for (int j=0; j < 500; j++) {
    TestIndexWriter.addDocWithIndex(writer,j);
  }
  writer.commit();
  TestIndexWriter.addDocWithIndex(writer,500);
  writer.shutdown();
  if (VERBOSE) {
    System.out.println("TEST: start disk usage");
  }
  long startDiskUsage=0;
  String[] files=dir.listAll();
  for (int i=0; i < files.length; i++) {
    startDiskUsage+=dir.fileLength(files[i]);
    if (VERBOSE) {
      System.out.println(files[i] + ": " + dir.fileLength(files[i]));
    }
  }
  dir.resetMaxUsedSizeInBytes();
  dir.setTrackDiskUsage(true);
  writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()));
  writer.forceMerge(1);
  writer.shutdown();
  long maxDiskUsage=dir.getMaxUsedSizeInBytes();
  assertTrue("forceMerge used too much temporary space: starting usage was " + startDiskUsage + " bytes; max temp usage was "+ maxDiskUsage+ " but should have been "+ (4 * startDiskUsage)+ " (= 4X starting usage)",maxDiskUsage <= 4 * startDiskUsage);
  dir.close();
}
