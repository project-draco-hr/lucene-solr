{
  assertJQ(req("json.nl","map","qt",tv,"q","id:0",TermVectorComponent.COMPONENT_NAME,"true",TermVectorParams.TF,"true",TermVectorParams.DF,"true",TermVectorParams.OFFSETS,"true",TermVectorParams.POSITIONS,"true",TermVectorParams.TF_IDF,"true"),"/termVectors/doc-0/test_posofftv/anoth=={'tf':1, 'offsets':{'start':20, 'end':27}, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}");
  assertJQ(req("json.nl","map","qt",tv,"q","id:0",TermVectorComponent.COMPONENT_NAME,"true",TermVectorParams.ALL,"true"),"/termVectors/doc-0/test_posofftv/anoth=={'tf':1, 'offsets':{'start':20, 'end':27}, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}");
  final List<String> list=new ArrayList<String>();
  list.addAll(Arrays.asList("json.nl","map","qt",tv,"q","id:0",TermVectorComponent.COMPONENT_NAME,"true"));
  String[][] options=new String[][]{{TermVectorParams.TF,"'tf':1"},{TermVectorParams.OFFSETS,"'offsets':{'start':20, 'end':27}"},{TermVectorParams.POSITIONS,"'positions':{'position':1}"},{TermVectorParams.DF,"'df':2"},{TermVectorParams.TF_IDF,"'tf-idf':0.5"}};
  StringBuilder expected=new StringBuilder("/termVectors/doc-0/test_posofftv/anoth=={");
  boolean first=true;
  for (int i=0; i < options.length; i++) {
    final boolean use=random().nextBoolean();
    if (use) {
      if (!first) {
        expected.append(", ");
      }
      first=false;
      expected.append(options[i][1]);
    }
    list.add(options[i][0]);
    list.add(use ? "true" : "false");
  }
  expected.append("}");
  assertJQ(req(list.toArray(new String[0])),expected.toString());
}
