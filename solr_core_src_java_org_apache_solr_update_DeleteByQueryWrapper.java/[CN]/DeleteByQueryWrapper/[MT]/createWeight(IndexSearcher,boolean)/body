{
  final LeafReader wrapped=wrap((LeafReader)searcher.getIndexReader());
  final IndexSearcher privateContext=new IndexSearcher(wrapped);
  final Weight inner=in.createWeight(privateContext,needsScores);
  return new Weight(DeleteByQueryWrapper.this){
    @Override public Explanation explain(    LeafReaderContext context,    int doc) throws IOException {
      throw new UnsupportedOperationException();
    }
    @Override public float getValueForNormalization() throws IOException {
      return inner.getValueForNormalization();
    }
    @Override public void normalize(    float norm,    float topLevelBoost){
      inner.normalize(norm,topLevelBoost);
    }
    @Override public Scorer scorer(    LeafReaderContext context,    Bits acceptDocs) throws IOException {
      return inner.scorer(privateContext.getIndexReader().leaves().get(0),acceptDocs);
    }
  }
;
}
