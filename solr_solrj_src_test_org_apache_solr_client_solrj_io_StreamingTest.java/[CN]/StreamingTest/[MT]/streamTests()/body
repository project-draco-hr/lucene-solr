{
  assertNotNull(cloudClient);
  handle.clear();
  handle.put("timestamp",SKIPVAL);
  waitForThingsToLevelOut(30);
  del("*:*");
  commit();
  indexr(id,"0","a_s","hello0","a_i","0","a_f","0");
  indexr(id,"2","a_s","hello2","a_i","2","a_f","0");
  indexr(id,"3","a_s","hello3","a_i","3","a_f","3");
  indexr(id,"4","a_s","hello4","a_i","4","a_f","4");
  indexr(id,"1","a_s","hello1","a_i","1","a_f","1");
  commit();
  String zkHost=zkServer.getZkAddress();
  Map params=null;
  params=mapParams("q","*:*","fl","id,a_s,a_i","sort","a_i desc");
  CloudSolrStream stream=new CloudSolrStream(zkHost,"collection1",params);
  List<Tuple> tuples=getTuples(stream);
  assert(tuples.size() == 5);
  assertOrder(tuples,4,3,2,1,0);
  params=mapParams("q","*:*","fl","id,a_s,a_i","sort","a_i asc");
  stream=new CloudSolrStream(zkHost,"collection1",params);
  tuples=getTuples(stream);
  assert(tuples.size() == 5);
  assertOrder(tuples,0,1,2,3,4);
  params=mapParams("q","*:*","fl","id,a_s,a_i,a_f","sort","a_f asc,a_i desc");
  stream=new CloudSolrStream(zkHost,"collection1",params);
  tuples=getTuples(stream);
  assert(tuples.size() == 5);
  assertOrder(tuples,2,0,1,3,4);
  params=mapParams("q","*:*","fl","id,a_s,a_i,a_f","sort","a_f asc,a_i asc");
  stream=new CloudSolrStream(zkHost,"collection1",params);
  tuples=getTuples(stream);
  assert(tuples.size() == 5);
  assertOrder(tuples,0,2,1,3,4);
  del("*:*");
  commit();
  testTuple();
  testSpacesInParams();
  testNonePartitionKeys();
  testTrace();
  testUniqueStream();
  testRankStream();
  testMergeStream();
  testReducerStream();
  testZeroReducerStream();
  testParallelEOF();
  testParallelUniqueStream();
  testParallelRankStream();
  testParallelMergeStream();
  testParallelReducerStream();
  testZeroParallelReducerStream();
}
