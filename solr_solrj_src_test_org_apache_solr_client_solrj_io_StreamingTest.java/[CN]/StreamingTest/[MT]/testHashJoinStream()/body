{
  indexr(id,"0","a_s","hello0","a_i","0","a_f","0");
  indexr(id,"2","a_s","hello2","a_i","2","a_f","0","join_i","1000");
  indexr(id,"3","a_s","hello3","a_i","3","a_f","3");
  indexr(id,"4","a_s","hello4","a_i","4","a_f","4");
  indexr(id,"1","a_s","hello1","a_i","1","a_f","1");
  indexr(id,"6","a_s","hello1","a_i","1","a_f","0","join_i","2000");
  indexr(id,"7","a_s","hello7","a_i","1","a_f","0");
  commit();
  String zkHost=zkServer.getZkAddress();
  Map paramsA=mapParams("q","id:(0 1 3 4) ","fl","id,a_s,a_f","sort","a_s desc");
  CloudSolrStream streamA=new CloudSolrStream(zkHost,"collection1",paramsA);
  Map fieldMappings=new HashMap();
  fieldMappings.put("id","streamB.id");
  Map paramsB=mapParams("q","id:(2)","fl","id,a_s,a_f,join_i","sort","a_s desc");
  CloudSolrStream streamB=new CloudSolrStream(zkHost,"collection1",paramsB);
  streamB.setFieldMappings(fieldMappings);
  String[] keys={"a_f"};
  HashJoinStream fstream=new HashJoinStream(streamA,streamB,keys);
  List<Tuple> tuples=getTuples(fstream);
  assert(tuples.size() == 1);
  assertOrder(tuples,0);
  assertLong(tuples.get(0),"join_i",1000);
  paramsA=mapParams("q","id:(0 1 3 4) ","fl","id,a_s,a_f","sort","a_s desc");
  streamA=new CloudSolrStream(zkHost,"collection1",paramsA);
  fieldMappings=new HashMap();
  fieldMappings.put("id","streamB.id");
  paramsB=mapParams("q","id:(2 6)","fl","id,a_s,a_f,join_i","sort","a_s desc");
  streamB=new CloudSolrStream(zkHost,"collection1",paramsB);
  streamB.setFieldMappings(fieldMappings);
  fstream=new HashJoinStream(streamA,streamB,keys);
  tuples=getTuples(fstream);
  assert(tuples.size() == 2);
  assertOrder(tuples,0,0);
  assertLong(tuples.get(0),"join_i",1000);
  assertLong(tuples.get(1),"join_i",2000);
  paramsA=mapParams("q","id:(0 2 1 3 4) ","fl","id,a_s,a_f","sort","a_s desc");
  streamA=new CloudSolrStream(zkHost,"collection1",paramsA);
  fieldMappings=new HashMap();
  fieldMappings.put("id","streamB.id");
  paramsB=mapParams("q","id:(6)","fl","id,a_s,a_f,join_i","sort","a_s desc");
  streamB=new CloudSolrStream(zkHost,"collection1",paramsB);
  streamB.setFieldMappings(fieldMappings);
  fstream=new HashJoinStream(streamA,streamB,keys);
  tuples=getTuples(fstream);
  assert(tuples.size() == 2);
  assertOrder(tuples,2,0);
  assertLong(tuples.get(0),"join_i",2000);
  assertLong(tuples.get(1),"join_i",2000);
  paramsA=mapParams("q","id:(0 7 1 3 4) ","fl","id,a_s,a_f","sort","a_s desc");
  streamA=new CloudSolrStream(zkHost,"collection1",paramsA);
  fieldMappings=new HashMap();
  fieldMappings.put("id","streamB.id");
  paramsB=mapParams("q","id:(6 2)","fl","id,a_s,a_f,join_i","sort","a_s desc");
  streamB=new CloudSolrStream(zkHost,"collection1",paramsB);
  streamB.setFieldMappings(fieldMappings);
  fstream=new HashJoinStream(streamA,streamB,keys);
  tuples=getTuples(fstream);
  assert(tuples.size() == 4);
  assertOrder(tuples,7,7,0,0);
  assertLong(tuples.get(0),"join_i",1000);
  assertLong(tuples.get(1),"join_i",2000);
  assertLong(tuples.get(2),"join_i",1000);
  assertLong(tuples.get(3),"join_i",2000);
  del("*:*");
  commit();
}
