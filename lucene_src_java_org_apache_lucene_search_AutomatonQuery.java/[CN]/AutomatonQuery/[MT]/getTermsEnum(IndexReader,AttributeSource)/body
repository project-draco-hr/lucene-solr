{
  if (BasicOperations.isEmpty(automaton)) {
    return TermsEnum.EMPTY;
  }
  if (BasicOperations.isTotal(automaton)) {
    return MultiFields.getTerms(reader,getField()).iterator();
  }
  String singleton=automaton.getSingleton();
  if (singleton != null)   return new SingleTermsEnum(reader,term.createTerm(singleton));
  final String commonPrefix=SpecialOperations.getCommonPrefix(automaton);
  if (commonPrefix.length() > 0) {
    if (BasicOperations.sameLanguage(automaton,BasicAutomata.makeString(commonPrefix))) {
      return new SingleTermsEnum(reader,term.createTerm(commonPrefix));
    }
    Automaton prefixAutomaton=BasicOperations.concatenate(BasicAutomata.makeString(commonPrefix),BasicAutomata.makeAnyString());
    if (BasicOperations.sameLanguage(automaton,prefixAutomaton)) {
      return new PrefixTermsEnum(reader,term.createTerm(commonPrefix));
    }
  }
  compileAutomaton();
  return new AutomatonTermsEnum(runAutomaton,term.field(),reader,isFinite,commonSuffixRef);
}
