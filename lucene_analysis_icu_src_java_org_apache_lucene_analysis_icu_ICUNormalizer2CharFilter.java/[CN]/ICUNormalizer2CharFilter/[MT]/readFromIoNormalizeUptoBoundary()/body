{
  if (inputBuffer.length() <= 0) {
    return 0;
  }
  boolean foundBoundary=false;
  final int bufLen=inputBuffer.length();
  while (checkedInputBoundary <= bufLen - 1) {
    int charLen=Character.charCount(inputBuffer.codePointAt(checkedInputBoundary));
    checkedInputBoundary+=charLen;
    if (checkedInputBoundary < bufLen && normalizer.hasBoundaryBefore(inputBuffer.codePointAt(checkedInputBoundary))) {
      foundBoundary=true;
      break;
    }
  }
  if (!foundBoundary && checkedInputBoundary >= bufLen && inputFinished) {
    foundBoundary=true;
    checkedInputBoundary=bufLen;
  }
  if (!foundBoundary) {
    return 0;
  }
  return normalizeInputUpto(checkedInputBoundary);
}
