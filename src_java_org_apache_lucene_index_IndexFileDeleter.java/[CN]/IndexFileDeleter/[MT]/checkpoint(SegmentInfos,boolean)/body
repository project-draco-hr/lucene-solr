{
  if (infoStream != null) {
    message("now checkpoint \"" + segmentInfos.getCurrentSegmentFileName() + "\" ["+ segmentInfos.size()+ " segments "+ "; isCommit = "+ isCommit+ "]");
  }
  deletePendingFiles();
  incRef(segmentInfos,isCommit);
  final List docWriterFiles;
  if (docWriter != null) {
    docWriterFiles=docWriter.files();
    if (docWriterFiles != null)     incRef(docWriterFiles);
  }
 else   docWriterFiles=null;
  if (isCommit) {
    commits.add(new CommitPoint(segmentInfos));
    policy.onCommit(commits);
    deleteCommits();
  }
  int size=lastFiles.size();
  if (size > 0) {
    for (int i=0; i < size; i++)     decRef((List)lastFiles.get(i));
    lastFiles.clear();
  }
  if (!isCommit) {
    size=segmentInfos.size();
    for (int i=0; i < size; i++) {
      SegmentInfo segmentInfo=segmentInfos.info(i);
      if (segmentInfo.dir == directory) {
        lastFiles.add(segmentInfo.files());
      }
    }
  }
  if (docWriterFiles != null)   lastFiles.add(docWriterFiles);
}
