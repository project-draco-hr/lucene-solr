{
  if (infoStream != null) {
    message("now checkpoint \"" + segmentInfos.getCurrentSegmentFileName() + "\" ["+ segmentInfos.size()+ " segments "+ "; isCommit = "+ isCommit+ "]");
  }
  deletePendingFiles();
  incRef(segmentInfos,isCommit);
  if (isCommit) {
    commits.add(new CommitPoint(commitsToDelete,directory,segmentInfos));
    policy.onCommit(commits);
    deleteCommits();
  }
 else {
    final List docWriterFiles;
    if (docWriter != null) {
      docWriterFiles=docWriter.files();
      if (docWriterFiles != null)       incRef(docWriterFiles);
    }
 else     docWriterFiles=null;
    int size=lastFiles.size();
    if (size > 0) {
      for (int i=0; i < size; i++)       decRef((List)lastFiles.get(i));
      lastFiles.clear();
    }
    size=segmentInfos.size();
    for (int i=0; i < size; i++) {
      SegmentInfo segmentInfo=segmentInfos.info(i);
      if (segmentInfo.dir == directory) {
        lastFiles.add(segmentInfo.files());
      }
    }
    if (docWriterFiles != null)     lastFiles.add(docWriterFiles);
  }
}
