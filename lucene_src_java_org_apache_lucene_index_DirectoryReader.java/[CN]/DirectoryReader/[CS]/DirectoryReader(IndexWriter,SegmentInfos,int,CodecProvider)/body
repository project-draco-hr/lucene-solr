{
  this.directory=writer.getDirectory();
  this.readOnly=true;
  segmentInfos=infos;
  segmentInfosStart=(SegmentInfos)infos.clone();
  this.termInfosIndexDivisor=termInfosIndexDivisor;
  if (codecs == null) {
    this.codecs=CodecProvider.getDefault();
  }
 else {
    this.codecs=codecs;
  }
  final int numSegments=infos.size();
  SegmentReader[] readers=new SegmentReader[numSegments];
  final Directory dir=writer.getDirectory();
  int upto=0;
  for (int i=0; i < numSegments; i++) {
    boolean success=false;
    try {
      final SegmentInfo info=infos.info(upto);
      if (info.dir == dir) {
        readers[upto++]=writer.readerPool.getReadOnlyClone(info,true,termInfosIndexDivisor);
      }
      success=true;
    }
  finally {
      if (!success) {
        for (upto--; upto >= 0; upto--) {
          try {
            readers[upto].close();
          }
 catch (          Throwable ignore) {
          }
        }
      }
    }
  }
  this.writer=writer;
  if (upto < readers.length) {
    SegmentReader[] newReaders=new SegmentReader[upto];
    System.arraycopy(readers,0,newReaders,0,upto);
    readers=newReaders;
  }
  initialize(readers);
}
