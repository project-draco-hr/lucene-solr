{
  return (IndexReader)new SegmentInfos.FindSegmentsFile(directory){
    @Override protected Object doBody(    String segmentFileName) throws CorruptIndexException, IOException {
      final Collection<ReaderFinishedListener> readerFinishedListeners=new MapBackedSet<ReaderFinishedListener>(new ConcurrentHashMap<ReaderFinishedListener,Boolean>());
      SegmentInfos sis=new SegmentInfos();
      sis.read(directory,segmentFileName);
      final SegmentReader[] readers=new SegmentReader[sis.size()];
      for (int i=sis.size() - 1; i >= 0; i--) {
        boolean success=false;
        try {
          readers[i]=SegmentReader.get(sis.info(i),termInfosIndexDivisor,IOContext.READ);
          readers[i].readerFinishedListeners=readerFinishedListeners;
          success=true;
        }
  finally {
          if (!success) {
            for (i++; i < sis.size(); i++) {
              try {
                readers[i].close();
              }
 catch (              Throwable ignore) {
              }
            }
          }
        }
      }
      return new DirectoryReader(readers,directory,null,sis,termInfosIndexDivisor,false,readerFinishedListeners);
    }
  }
.run(commit);
}
