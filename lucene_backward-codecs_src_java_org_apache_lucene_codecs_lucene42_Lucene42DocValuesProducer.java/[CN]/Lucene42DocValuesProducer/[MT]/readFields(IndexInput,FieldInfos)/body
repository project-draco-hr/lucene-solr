{
  int numEntries=0;
  int fieldNumber=meta.readVInt();
  while (fieldNumber != -1) {
    numEntries++;
    FieldInfo info=infos.fieldInfo(fieldNumber);
    if (info == null) {
      throw new CorruptIndexException("Invalid field number: " + fieldNumber,meta);
    }
    int fieldType=meta.readByte();
    if (fieldType == NUMBER) {
      NumericEntry entry=new NumericEntry();
      entry.offset=meta.readLong();
      entry.format=meta.readByte();
switch (entry.format) {
case DELTA_COMPRESSED:
case TABLE_COMPRESSED:
case GCD_COMPRESSED:
case UNCOMPRESSED:
        break;
default :
      throw new CorruptIndexException("Unknown format: " + entry.format,meta);
  }
  if (entry.format != UNCOMPRESSED) {
    entry.packedIntsVersion=meta.readVInt();
  }
  numerics.put(info.name,entry);
}
 else if (fieldType == BYTES) {
  BinaryEntry entry=new BinaryEntry();
  entry.offset=meta.readLong();
  entry.numBytes=meta.readLong();
  entry.minLength=meta.readVInt();
  entry.maxLength=meta.readVInt();
  if (entry.minLength != entry.maxLength) {
    entry.packedIntsVersion=meta.readVInt();
    entry.blockSize=meta.readVInt();
  }
  binaries.put(info.name,entry);
}
 else if (fieldType == FST) {
  FSTEntry entry=new FSTEntry();
  entry.offset=meta.readLong();
  entry.numOrds=meta.readVLong();
  fsts.put(info.name,entry);
}
 else {
  throw new CorruptIndexException("invalid entry type: " + fieldType,meta);
}
fieldNumber=meta.readVInt();
}
return numEntries;
}
