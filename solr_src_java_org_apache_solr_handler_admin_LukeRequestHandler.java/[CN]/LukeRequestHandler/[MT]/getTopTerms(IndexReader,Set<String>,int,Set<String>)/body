{
  Map<String,TopTermQueue> info=new HashMap<String,TopTermQueue>();
  Fields fieldsC=MultiFields.getFields(reader);
  if (fieldsC != null) {
    FieldsEnum fieldsEnum=fieldsC.iterator();
    String field;
    while ((field=fieldsEnum.next()) != null) {
      TermsEnum termsEnum=fieldsEnum.terms();
      BytesRef text;
      while ((text=termsEnum.next()) != null) {
        String t=text.utf8ToString();
        TopTermQueue tiq=info.get(field);
        if (tiq == null) {
          tiq=new TopTermQueue(numTerms + 1);
          info.put(field,tiq);
        }
        tiq.distinctTerms++;
        tiq.histogram.add(termsEnum.docFreq());
        if (fields != null && fields.size() > 0) {
          if (!fields.contains(field)) {
            continue;
          }
        }
        if (junkWords != null && junkWords.contains(t)) {
          continue;
        }
        if (termsEnum.docFreq() > tiq.minFreq) {
          tiq.add(new TopTermQueue.TermInfo(new Term(field,t),termsEnum.docFreq()));
          if (tiq.size() > numTerms) {
            tiq.pop();
            tiq.minFreq=((TopTermQueue.TermInfo)tiq.top()).docFreq;
          }
        }
      }
    }
  }
  return info;
}
