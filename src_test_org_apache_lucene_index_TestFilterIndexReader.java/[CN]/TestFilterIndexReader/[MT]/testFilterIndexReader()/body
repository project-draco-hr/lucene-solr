{
  RAMDirectory directory=new MockRAMDirectory();
  IndexWriter writer=new IndexWriter(directory,new WhitespaceAnalyzer(TEST_VERSION_CURRENT),true,IndexWriter.MaxFieldLength.LIMITED);
  Document d1=new Document();
  d1.add(new Field("default","one two",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(d1);
  Document d2=new Document();
  d2.add(new Field("default","one three",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(d2);
  Document d3=new Document();
  d3.add(new Field("default","two four",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(d3);
  writer.close();
  IndexReader reader=new TestReader(IndexReader.open(directory,true));
  assertTrue(reader.isOptimized());
  TermEnum terms=reader.terms();
  while (terms.next()) {
    assertTrue(terms.term().text().indexOf('e') != -1);
  }
  terms.close();
  TermPositions positions=reader.termPositions(new Term("default","one"));
  while (positions.next()) {
    assertTrue((positions.doc() % 2) == 1);
  }
  int NUM_DOCS=3;
  TermDocs td=reader.termDocs(null);
  for (int i=0; i < NUM_DOCS; i++) {
    assertTrue(td.next());
    assertEquals(i,td.doc());
    assertEquals(1,td.freq());
  }
  td.close();
  reader.close();
  directory.close();
}
