{
  Directory dir=newDirectory();
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir);
  iw.addDocument(new Document());
  iw.commit();
  DirectoryReader reader=iw.getReader();
  iw.close();
  final LeafReaderContext ctx=reader.leaves().get(0);
  try {
    collector(false,ScoreCachingWrappingScorer.class).getLeafCollector(ctx).setScorer(new FakeScorer());
    fail("The collector was configured to expect a ScoreCachingWrappingScorer and did not fail when pass in a FakeScorer");
  }
 catch (  AssertionError e) {
  }
  Collector c1=collector(false,FakeScorer.class);
  Collector c2=collector(false,FakeScorer.class);
  MultiCollector.wrap(c1,c2).getLeafCollector(ctx).setScorer(new FakeScorer());
  c1=collector(true,FakeScorer.class);
  c2=collector(false,FakeScorer.class);
  MultiCollector.wrap(c1,c2).getLeafCollector(ctx).setScorer(new FakeScorer());
  c1=collector(true,ScoreCachingWrappingScorer.class);
  c2=collector(true,ScoreCachingWrappingScorer.class);
  MultiCollector.wrap(c1,c2).getLeafCollector(ctx).setScorer(new FakeScorer());
  reader.close();
  dir.close();
}
