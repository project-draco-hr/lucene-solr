{
  SolrParams p=req.getParams();
  String words=p.get("q");
  String cmd=p.get("cmd");
  if (cmd != null) {
    cmd=cmd.trim();
    if (cmd.equals("rebuild")) {
      rebuild(req);
      rsp.add("cmdExecuted","rebuild");
    }
 else     if (cmd.equals("reopen")) {
      reopen();
      rsp.add("cmdExecuted","reopen");
    }
 else {
      throw new SolrException(400,"Unrecognized Command: " + cmd);
    }
  }
  Float accuracy;
  int numSug;
  try {
    accuracy=p.getFloat("accuracy",DEFAULT_ACCURACY);
    spellChecker.setAccuracy(accuracy);
  }
 catch (  NumberFormatException e) {
    throw new RuntimeException("Accuracy must be a valid positive float",e);
  }
  try {
    numSug=p.getInt("suggestionCount",DEFAULT_NUM_SUGGESTIONS);
  }
 catch (  NumberFormatException e) {
    throw new RuntimeException("Spelling suggestion count must be a valid positive integer",e);
  }
  if (null != words && !"".equals(words.trim())) {
    String[] suggestions=spellChecker.suggestSimilar(words,numSug,nullReader,restrictToField,onlyMorePopular);
    rsp.add("suggestions",Arrays.asList(suggestions));
  }
}
