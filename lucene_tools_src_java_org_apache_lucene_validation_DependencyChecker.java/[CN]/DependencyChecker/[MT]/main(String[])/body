{
  String dumpFile=null;
  List<String> dirs=new ArrayList<String>();
  for (int i=0; i < args.length; i++) {
    if (args[i].equalsIgnoreCase("--dump") || args[i].equalsIgnoreCase("-d")) {
      dumpFile=args[++i];
    }
 else     if (args[i].equalsIgnoreCase("--check") || args[i].equalsIgnoreCase("-c")) {
      dirs.add(args[++i]);
    }
  }
  FileWriter writer=null;
  boolean dump=false;
  if (dumpFile != null) {
    File out=new File(dumpFile);
    System.out.println("Dumping to " + out);
    writer=new FileWriter(out);
    dump=true;
  }
  for (  String checkDir : dirs) {
    File dir=new File(checkDir);
    if (dir.exists()) {
      System.out.println("----------------------");
      System.out.println("Starting on dir: " + dir);
      int numFailed=0;
      File[] list=dir.listFiles();
      File[] licFiles=dir.listFiles(new FileFilter(){
        public boolean accept(        File file){
          return file.getName().indexOf("-LICENSE") != -1 && file.getName().endsWith(".txt");
        }
      }
);
      File[] noticeFiles=dir.listFiles(new FileFilter(){
        public boolean accept(        File file){
          return file.getName().indexOf("-NOTICE") != -1 && file.getName().endsWith(".txt");
        }
      }
);
      File[] jarFiles=dir.listFiles(new FileFilter(){
        public boolean accept(        File file){
          return file.getName().endsWith(".jar");
        }
      }
);
      if (licFiles.length == 0 && jarFiles.length != 0) {
        System.out.println("No license files found: " + dir);
        numFailed++;
      }
      if (jarFiles.length != licFiles.length) {
        System.out.println("WARNING: There are missing LICENSE files in: " + dir + " Jar file count: "+ jarFiles.length+ " License Count: "+ licFiles.length);
        printDiffs(jarFiles,licFiles);
        numFailed++;
      }
      if (jarFiles.length != noticeFiles.length) {
        System.out.println("WARNING: There may be missing NOTICE files in: " + dir + ".  Note, not all files require a NOTICE. Jar file count: "+ jarFiles.length+ " Notice Count: "+ noticeFiles.length);
      }
      Map<String,UpdateableInt> licenseNames=new HashMap<String,UpdateableInt>();
      for (int i=0; i < licFiles.length; i++) {
        licenseNames.put(licFiles[i].getName(),new UpdateableInt());
      }
      Map<String,UpdateableInt> noticeNames=new HashMap<String,UpdateableInt>();
      for (int i=0; i < noticeFiles.length; i++) {
        noticeNames.put(noticeFiles[i].getName(),new UpdateableInt());
      }
      for (int i=0; i < list.length; i++) {
        File file=list[i];
        String fileName=file.getName();
        if (fileName.endsWith(".jar") && excludes.contains(fileName) == false) {
          File licFile=getLicenseFile(file,licenseNames);
          if (licFile != null && licFile.exists()) {
            String licName=licFile.getName();
            LicenseType[] types=getLicenseTypes(licName);
            if (types != null && types.length > 0) {
              for (int j=0; j < types.length; j++) {
                LicenseType type=types[j];
                if (dump == true) {
                  writer.write(file.getName() + "," + type.getDisplay()+ LINE_SEPARATOR);
                }
                if (type.isNoticeRequired()) {
                  File noticeFile=getNoticeFile(file,noticeNames);
                  if (noticeFile != null && noticeFile.exists()) {
                  }
 else {
                    System.out.println("!!!!!! Missing NOTICE file for " + file + " and license type: "+ type.getDisplay());
                    if (dump) {
                      writer.write("Missing NOTICE file for " + file + LINE_SEPARATOR);
                    }
                    numFailed++;
                  }
                }
              }
            }
 else {
              System.out.println("!!!!!! Couldn't determine license type for file: " + file);
              if (dump == true) {
                writer.write("Invalid license for file: " + file + LINE_SEPARATOR);
              }
              numFailed++;
            }
          }
 else {
            System.out.println("!!!!!!! Couldn't get license file for " + file);
            if (dump == true) {
              writer.write("Couldn't get license file for " + file + LINE_SEPARATOR);
            }
            numFailed++;
          }
        }
      }
      if (dump == true) {
        writer.write(LINE_SEPARATOR + LINE_SEPARATOR);
        writer.write("Other Licenses (installer, javascript, etc." + LINE_SEPARATOR);
      }
      if (dump == true) {
        for (        Map.Entry<String,UpdateableInt> entry : licenseNames.entrySet()) {
          if (entry.getValue().theInt == 0) {
            LicenseType[] types=getLicenseTypes(entry.getKey());
            if (types != null && types.length > 0) {
              for (int i=0; i < types.length; i++) {
                writer.write(entry.getKey() + "," + types[i].getDisplay()+ LINE_SEPARATOR);
              }
            }
 else {
              System.out.println("Couldn't determine license for: " + entry.getKey());
            }
          }
        }
      }
      if (writer != null) {
        writer.close();
      }
      if (numFailed > 0) {
        System.out.println("At least one file does not have a license, or it's license name is not in the proper format.  See the logs.");
        System.exit(-1);
      }
 else {
        System.out.println("Found a license for every file in " + dir);
      }
    }
 else {
      System.out.println("Could not find directory:" + dir);
    }
  }
}
