{
  LeafReader reader=null;
  try {
    MockAnalyzer analyzer=new MockAnalyzer(random());
    reader=getSampleIndex(analyzer);
    Classifier<BytesRef> classifier=new Classifier<BytesRef>(){
      @Override public ClassificationResult<BytesRef> assignClass(      String text) throws IOException {
        return new ClassificationResult<>(new BytesRef(),1 / (1 + Math.exp(-random().nextInt())));
      }
      @Override public List<ClassificationResult<BytesRef>> getClasses(      String text) throws IOException {
        return null;
      }
      @Override public List<ClassificationResult<BytesRef>> getClasses(      String text,      int max) throws IOException {
        return null;
      }
    }
;
    ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix=ConfusionMatrixGenerator.getConfusionMatrix(reader,classifier,categoryFieldName,textFieldName);
    assertNotNull(confusionMatrix);
    assertNotNull(confusionMatrix.getLinearizedMatrix());
    assertEquals(7,confusionMatrix.getNumberOfEvaluatedDocs());
    double avgClassificationTime=confusionMatrix.getAvgClassificationTime();
    assertTrue(avgClassificationTime >= 0d);
  }
  finally {
    if (reader != null) {
      reader.close();
    }
  }
}
