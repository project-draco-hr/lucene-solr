{
  File path=_TestUtil.createTempFile("mmap" + chunkSize,"tmp",workDir);
  path.delete();
  path.mkdirs();
  MMapDirectory mmapDir=new MMapDirectory(path);
  mmapDir.setMaxChunkSize(chunkSize);
  if (MMapDirectory.UNMAP_SUPPORTED)   mmapDir.setUseUnmap(true);
  MockDirectoryWrapper dir=new MockDirectoryWrapper(random,mmapDir);
  RandomIndexWriter writer=new RandomIndexWriter(random,dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));
  Document doc=new Document();
  Field docid=newField("docid","0",StringField.TYPE_STORED);
  Field junk=newField("junk","",StringField.TYPE_STORED);
  doc.add(docid);
  doc.add(junk);
  int numDocs=100;
  for (int i=0; i < numDocs; i++) {
    docid.setValue("" + i);
    junk.setValue(_TestUtil.randomUnicodeString(random));
    writer.addDocument(doc);
  }
  IndexReader reader=writer.getReader();
  writer.close();
  int numAsserts=atLeast(100);
  for (int i=0; i < numAsserts; i++) {
    int docID=random.nextInt(numDocs);
    assertEquals("" + docID,reader.document(docID).get("docid"));
  }
  reader.close();
  dir.close();
}
