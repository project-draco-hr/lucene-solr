{
  File indexDir1=new File(TEMP_DIR,"lucenetestindex1");
  Directory dir1=FSDirectory.open(indexDir1);
  IndexWriter.unlock(dir1);
  norms=new ArrayList<Float>();
  modifiedNorms=new ArrayList<Float>();
  createIndex(dir1);
  doTestNorms(dir1);
  ArrayList<Float> norms1=norms;
  ArrayList<Float> modifiedNorms1=modifiedNorms;
  int numDocNorms1=numDocNorms;
  norms=new ArrayList<Float>();
  modifiedNorms=new ArrayList<Float>();
  numDocNorms=0;
  File indexDir2=new File(TEMP_DIR,"lucenetestindex2");
  Directory dir2=FSDirectory.open(indexDir2);
  createIndex(dir2);
  doTestNorms(dir2);
  File indexDir3=new File(TEMP_DIR,"lucenetestindex3");
  Directory dir3=FSDirectory.open(indexDir3);
  createIndex(dir3);
  IndexWriter iw=new IndexWriter(dir3,new IndexWriterConfig(TEST_VERSION_CURRENT,anlzr).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(5));
  ((LogMergePolicy)iw.getMergePolicy()).setMergeFactor(3);
  iw.addIndexesNoOptimize(new Directory[]{dir1,dir2});
  iw.optimize();
  iw.close();
  norms1.addAll(norms);
  norms=norms1;
  modifiedNorms1.addAll(modifiedNorms);
  modifiedNorms=modifiedNorms1;
  numDocNorms+=numDocNorms1;
  verifyIndex(dir3);
  doTestNorms(dir3);
  iw=new IndexWriter(dir3,new IndexWriterConfig(TEST_VERSION_CURRENT,anlzr).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(5));
  ((LogMergePolicy)iw.getMergePolicy()).setMergeFactor(3);
  iw.optimize();
  iw.close();
  verifyIndex(dir3);
  dir1.close();
  dir2.close();
  dir3.close();
}
