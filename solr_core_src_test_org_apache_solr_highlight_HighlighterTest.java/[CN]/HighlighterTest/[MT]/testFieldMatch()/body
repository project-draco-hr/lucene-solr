{
  assertU(adoc("t_text1","random words for highlighting tests","id","1","t_text2","more random words for second field"));
  assertU(commit());
  assertU(optimize());
  HashMap<String,String> args=new HashMap<>();
  args.put("hl","true");
  args.put("hl.fl","t_text1 t_text2");
  TestHarness.LocalRequestFactory sumLRF=h.getRequestFactory("standard",0,200,args);
  assertQ("Test Default",sumLRF.makeRequest("t_text1:random OR t_text2:words"),"//lst[@name='highlighting']/lst[@name='1']","//lst[@name='1']/arr[@name='t_text1']/str[.='<em>random</em> <em>words</em> for highlighting tests']","//lst[@name='1']/arr[@name='t_text2']/str[.='more <em>random</em> <em>words</em> for second field']");
  args.put("hl.requireFieldMatch","true");
  sumLRF=h.getRequestFactory("standard",0,200,args);
  assertQ("Test RequireFieldMatch",sumLRF.makeRequest("t_text1:random OR t_text2:words"),"//lst[@name='highlighting']/lst[@name='1']","//lst[@name='1']/arr[@name='t_text1']/str[.='<em>random</em> words for highlighting tests']","//lst[@name='1']/arr[@name='t_text2']/str[.='more random <em>words</em> for second field']");
  assertU(adoc("t_text1","random words for highlighting tests","id","2","t_text2","more random words for second field"));
  assertU(delI("1"));
  assertU(commit());
  sumLRF=h.getRequestFactory("standard",0,200,args);
  assertQ("Test RequireFieldMatch on un-optimized index",sumLRF.makeRequest("t_text1:random OR t_text2:words"),"//lst[@name='highlighting']/lst[@name='2']","//lst[@name='2']/arr[@name='t_text1']/str[.='<em>random</em> words for highlighting tests']","//lst[@name='2']/arr[@name='t_text2']/str[.='more random <em>words</em> for second field']");
}
