{
  assertU(adoc("title","Apache Software Foundation","id","1000","lower","gap1 target","lower","gap2 target","lower","gap3 nothing","lower","gap4 nothing","lower","gap5 target","lower","gap6 target","lower","gap7 nothing","lower","gap8 nothing","lower","gap9 target","lower","gap10 target"));
  assertU(commit());
  assertQ("Counting all MV pairs failed",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=6]");
  assertQ("Off by one by going too far",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_EXAMINE,"4"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=2]");
  assertQ("Off by one by going too far",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_EXAMINE,"0"),"//lst[@name='highlighting']/lst[@name='1000' and count(child::*) = 0]");
  assertQ("Off by one by not going far enough",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_EXAMINE,"2"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=2]");
  assertQ("Not counting exactly 1",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_EXAMINE,"1"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=1]");
  assertQ("Matching 4 should exactly match 4",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_MATCH,"4"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=4]");
  assertQ("Matching 6 should exactly search them all",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_MATCH,"6"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=6]");
  assertQ("Matching 6 should exactly match them all",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_MATCH,"1"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=1]");
  assertQ("Matching 6 should exactly match them all",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_MATCH,"0"),"//lst[@name='highlighting']/lst[@name='1000' and count(child::*) = 0]");
  assertQ("Matching 6 should exactly match them all",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_MATCH,"2",HighlightParams.MAX_MULTIVALUED_TO_EXAMINE,"10"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=2]");
  assertQ("Matching 6 should exactly match them all",req("q","id:1000",HighlightParams.HIGHLIGHT,"true",HighlightParams.FIELDS,"lower",HighlightParams.Q,"target",HighlightParams.SNIPPETS,"100",HighlightParams.MAX_MULTIVALUED_TO_MATCH,"10",HighlightParams.MAX_MULTIVALUED_TO_EXAMINE,"2"),"//lst[@name='highlighting']/lst[@name='1000']/arr[@name='lower' and count(*)=2]");
}
