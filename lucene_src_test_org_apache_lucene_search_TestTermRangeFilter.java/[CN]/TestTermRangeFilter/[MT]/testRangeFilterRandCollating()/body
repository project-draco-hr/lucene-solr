{
  IndexReader reader=unsignedIndexReader;
  IndexSearcher search=new IndexSearcher(reader);
  Collator c=Collator.getInstance(Locale.ENGLISH);
  String minRP=pad(unsignedIndexDir.minR);
  String maxRP=pad(unsignedIndexDir.maxR);
  int numDocs=reader.numDocs();
  assertEquals("num of docs",numDocs,1 + maxId - minId);
  Query q=new TermQuery(new Term("body","body"));
  int numHits=search.search(q,new TermRangeFilter("rand",minRP,maxRP,T,T,c),1000).totalHits;
  assertEquals("find all",numDocs,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",minRP,maxRP,T,F,c),1000).totalHits;
  assertEquals("all but biggest",numDocs - 1,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",minRP,maxRP,F,T,c),1000).totalHits;
  assertEquals("all but smallest",numDocs - 1,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",minRP,maxRP,F,F,c),1000).totalHits;
  assertEquals("all but extremes",numDocs - 2,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",minRP,null,T,F,c),1000).totalHits;
  assertEquals("smallest and up",numDocs,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",null,maxRP,F,T,c),1000).totalHits;
  assertEquals("biggest and down",numDocs,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",minRP,null,F,F,c),1000).totalHits;
  assertEquals("not smallest, but up",numDocs - 1,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",null,maxRP,F,F,c),1000).totalHits;
  assertEquals("not biggest, but down",numDocs - 1,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",minRP,minRP,F,F,c),1000).totalHits;
  assertEquals("min,min,F,F",0,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",maxRP,maxRP,F,F,c),1000).totalHits;
  assertEquals("max,max,F,F",0,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",minRP,minRP,T,T,c),1000).totalHits;
  assertEquals("min,min,T,T",1,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",null,minRP,F,T,c),1000).totalHits;
  assertEquals("nul,min,F,T",1,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",maxRP,maxRP,T,T,c),1000).totalHits;
  assertEquals("max,max,T,T",1,numHits);
  numHits=search.search(q,new TermRangeFilter("rand",maxRP,null,T,F,c),1000).totalHits;
  assertEquals("max,nul,T,T",1,numHits);
}
