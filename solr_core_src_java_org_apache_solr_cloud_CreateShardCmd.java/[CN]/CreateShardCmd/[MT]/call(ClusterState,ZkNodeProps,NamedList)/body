{
  String collectionName=message.getStr(COLLECTION_PROP);
  String sliceName=message.getStr(SHARD_ID_PROP);
  log.info("Create shard invoked: {}",message);
  if (collectionName == null || sliceName == null)   throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"'collection' and 'shard' are required parameters");
  int numSlices=1;
  ShardHandler shardHandler=ocmh.shardHandlerFactory.getShardHandler();
  DocCollection collection=clusterState.getCollection(collectionName);
  int repFactor=message.getInt(REPLICATION_FACTOR,collection.getInt(REPLICATION_FACTOR,1));
  String createNodeSetStr=message.getStr(OverseerCollectionMessageHandler.CREATE_NODE_SET);
  List<Assign.ReplicaCount> sortedNodeList=getNodesForNewReplicas(clusterState,collectionName,sliceName,repFactor,createNodeSetStr,ocmh.overseer.getZkController().getCoreContainer());
  ZkStateReader zkStateReader=ocmh.zkStateReader;
  Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(message));
  TimeOut timeout=new TimeOut(30,TimeUnit.SECONDS);
  boolean created=false;
  while (!timeout.hasTimedOut()) {
    Thread.sleep(100);
    created=zkStateReader.getClusterState().getCollection(collectionName).getSlice(sliceName) != null;
    if (created)     break;
  }
  if (!created)   throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Could not fully create shard: " + message.getStr(NAME));
  String configName=message.getStr(COLL_CONF);
  String async=message.getStr(ASYNC);
  Map<String,String> requestMap=null;
  if (async != null) {
    requestMap=new HashMap<>(repFactor,1.0f);
  }
  for (int j=1; j <= repFactor; j++) {
    String nodeName=sortedNodeList.get(((j - 1)) % sortedNodeList.size()).nodeName;
    String shardName=collectionName + "_" + sliceName+ "_replica"+ j;
    log.info("Creating shard " + shardName + " as part of slice "+ sliceName+ " of collection "+ collectionName+ " on "+ nodeName);
    ModifiableSolrParams params=new ModifiableSolrParams();
    params.set(CoreAdminParams.ACTION,CoreAdminParams.CoreAdminAction.CREATE.toString());
    params.set(CoreAdminParams.NAME,shardName);
    params.set(COLL_CONF,configName);
    params.set(CoreAdminParams.COLLECTION,collectionName);
    params.set(CoreAdminParams.SHARD,sliceName);
    params.set(ZkStateReader.NUM_SHARDS_PROP,numSlices);
    ocmh.addPropertyParams(message,params);
    ocmh.sendShardRequest(nodeName,params,shardHandler,async,requestMap);
  }
  ocmh.processResponses(results,shardHandler,true,"Failed to create shard",async,requestMap,Collections.emptySet());
  log.info("Finished create command on all shards for collection: " + collectionName);
}
