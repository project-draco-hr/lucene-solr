{
  String[] fields=localParams.getParams(CommonParams.FL);
  if (fields == null || fields.length == 0) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,CommonParams.FL + " is not properly specified");
  }
  String pointStr=params.get(SpatialParams.POINT);
  if (pointStr == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,SpatialParams.POINT + " is not properly specified");
  }
  double dist=params.getDouble(SpatialParams.DISTANCE,-1);
  if (dist < 0) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,SpatialParams.DISTANCE + " must be >= 0");
  }
  IndexSchema schema=req.getSchema();
  String measStr=localParams.get(SpatialParams.MEASURE);
  Query result=null;
  if (fields.length == 1) {
    SchemaField sf=schema.getField(fields[0]);
    FieldType type=sf.getType();
    if (type instanceof SpatialQueryable) {
      double radius=localParams.getDouble(SpatialParams.SPHERE_RADIUS,DistanceUtils.EARTH_MEAN_RADIUS_KM);
      SpatialOptions opts=new SpatialOptions(pointStr,dist,sf,measStr,radius,DistanceUnits.KILOMETERS);
      result=((SpatialQueryable)type).createSpatialQuery(this,opts);
    }
 else {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"The field " + fields[0] + " does not support spatial filtering");
    }
  }
 else {
  }
  return result;
}
