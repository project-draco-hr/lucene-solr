{
  final List<AtomicReaderContext> leaves=r.leaves();
  if (leaves.size() == 1) {
    return leaves.get(0).reader().getNumericDocValues(field);
  }
  boolean anyReal=false;
  for (  AtomicReaderContext ctx : leaves) {
    NumericDocValues values=ctx.reader().getNumericDocValues(field);
    if (values != null) {
      anyReal=true;
    }
  }
  if (!anyReal) {
    return null;
  }
 else {
    return new NumericDocValues(){
      @Override public long get(      int docID){
        int subIndex=ReaderUtil.subIndex(docID,leaves);
        NumericDocValues values;
        try {
          values=leaves.get(subIndex).reader().getNumericDocValues(field);
        }
 catch (        IOException ioe) {
          throw new RuntimeException(ioe);
        }
        if (values == null) {
          return 0;
        }
 else {
          return values.get(docID - leaves.get(subIndex).docBase);
        }
      }
    }
;
  }
}
