{
  Random random=random();
  Collection<SearchGroup<T>> searchGroups=firstPassGroupingCollector.getTopGroups(0,false);
  if (FunctionFirstPassGroupingCollector.class.isAssignableFrom(firstPassGroupingCollector.getClass())) {
    return (AbstractDistinctValuesCollector)new FunctionDistinctValuesCollector(new HashMap<>(),new BytesRefFieldSource(groupField),new BytesRefFieldSource(countField),(Collection)searchGroups);
  }
 else {
    return (AbstractDistinctValuesCollector)new TermDistinctValuesCollector(groupField,countField,(Collection)searchGroups);
  }
}
