{
  Random random=random();
  if (dvType != null) {
    if (random.nextBoolean()) {
      return (AbstractFirstPassGroupingCollector<T>)new FunctionFirstPassGroupingCollector(new BytesRefFieldSource(groupField),new HashMap<>(),groupSort,topNGroups);
    }
 else {
      return (AbstractFirstPassGroupingCollector<T>)new TermFirstPassGroupingCollector(groupField,groupSort,topNGroups);
    }
  }
 else {
    if (random.nextBoolean()) {
      return (AbstractFirstPassGroupingCollector<T>)new FunctionFirstPassGroupingCollector(new BytesRefFieldSource(groupField),new HashMap<>(),groupSort,topNGroups);
    }
 else {
      return (AbstractFirstPassGroupingCollector<T>)new TermFirstPassGroupingCollector(groupField,groupSort,topNGroups);
    }
  }
}
