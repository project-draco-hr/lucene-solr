{
  int deleteCount=0;
  int docBase=0;
  int docCount=0;
  MockDirectoryWrapper dir=newMockDirectory();
  final AtomicBoolean shouldFail=new AtomicBoolean();
  dir.failOn(new MockDirectoryWrapper.Failure(){
    @Override public void eval(    MockDirectoryWrapper dir) throws IOException {
      StackTraceElement[] trace=new Exception().getStackTrace();
      if (shouldFail.get()) {
        for (int i=0; i < trace.length; i++) {
          if ("writeLiveDocs".equals(trace[i].getMethodName())) {
            if (random().nextInt(3) == 2) {
              if (VERBOSE) {
                System.out.println("TEST: now fail; exc:");
                new Throwable().printStackTrace(System.out);
              }
              shouldFail.set(false);
              throw new FakeIOException();
            }
 else {
              break;
            }
          }
        }
      }
    }
  }
);
  for (int iter=0; iter < 10 * RANDOM_MULTIPLIER; iter++) {
    int numDocs=atLeast(100);
    if (VERBOSE) {
      System.out.println("\nTEST: iter=" + iter + " numDocs="+ numDocs+ " docBase="+ docBase);
    }
    IndexWriterConfig iwc=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
    IndexWriter w=new IndexWriter(dir,iwc);
    for (int i=0; i < numDocs; i++) {
      Document doc=new Document();
      doc.add(new StringField("id","" + (docBase + i),Field.Store.NO));
      w.addDocument(doc);
    }
    docCount+=numDocs;
    IndexReader r=w.getReader();
    assertEquals(docCount - deleteCount,r.numDocs());
    r.close();
    shouldFail.set(true);
    try {
      for (int i=0; i < numDocs; i++) {
        if (random().nextInt(10) == 7) {
          deleteCount++;
          w.deleteDocuments(new Term("id","" + (docBase + i)));
        }
      }
      w.close();
    }
 catch (    FakeIOException ioe) {
      if (VERBOSE) {
        System.out.println("TEST: w.close() hit expected IOE");
      }
      w.close();
    }
    shouldFail.set(false);
    r=DirectoryReader.open(dir);
    assertEquals(docCount - deleteCount,r.numDocs());
    r.close();
    docBase+=numDocs;
  }
  dir.close();
}
