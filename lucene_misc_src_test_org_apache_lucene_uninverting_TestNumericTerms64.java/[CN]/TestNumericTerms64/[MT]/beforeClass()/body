{
  noDocs=atLeast(4096);
  distance=(1L << 60) / noDocs;
  directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(TestUtil.nextInt(random(),100,1000)).setMergePolicy(newLogMergePolicy()));
  final FieldType storedLong=new FieldType(LongField.TYPE_NOT_STORED);
  storedLong.setStored(true);
  storedLong.freeze();
  final FieldType storedLong8=new FieldType(storedLong);
  storedLong8.setNumericPrecisionStep(8);
  final FieldType storedLong4=new FieldType(storedLong);
  storedLong4.setNumericPrecisionStep(4);
  final FieldType storedLong6=new FieldType(storedLong);
  storedLong6.setNumericPrecisionStep(6);
  final FieldType storedLong2=new FieldType(storedLong);
  storedLong2.setNumericPrecisionStep(2);
  LongField field8=new LongField("field8",0L,storedLong8), field6=new LongField("field6",0L,storedLong6), field4=new LongField("field4",0L,storedLong4), field2=new LongField("field2",0L,storedLong2);
  Document doc=new Document();
  doc.add(field8);
  doc.add(field6);
  doc.add(field4);
  doc.add(field2);
  for (int l=0; l < noDocs; l++) {
    long val=distance * l + startOffset;
    field8.setLongValue(val);
    field6.setLongValue(val);
    field4.setLongValue(val);
    field2.setLongValue(val);
    val=l - (noDocs / 2);
    writer.addDocument(doc);
  }
  Map<String,Type> map=new HashMap<>();
  map.put("field2",Type.LONG);
  map.put("field4",Type.LONG);
  map.put("field6",Type.LONG);
  map.put("field8",Type.LONG);
  reader=UninvertingReader.wrap(writer.getReader(),map);
  searcher=newSearcher(reader);
  writer.shutdown();
}
