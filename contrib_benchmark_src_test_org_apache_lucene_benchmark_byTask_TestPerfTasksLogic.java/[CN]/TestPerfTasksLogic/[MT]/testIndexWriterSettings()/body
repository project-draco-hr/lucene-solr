{
  String algLines[]={"# ----- properties ","doc.maker=" + Reuters20DocMaker.class.getName(),"doc.add.log.step=3","ram.flush.mb=-1","max.buffered=2","compound=cmpnd:true:false","doc.term.vector=vector:false:true","doc.maker.forever=false","directory=RAMDirectory","doc.stored=false","merge.factor=3","doc.tokenized=false","debug.level=1","# ----- alg ","{ \"Rounds\"","  ResetSystemErase","  CreateIndex","  { \"AddDocs\"  AddDoc > : * ","  NewRound","} : 2"};
  Benchmark benchmark=execBenchmark(algLines);
  final IndexWriter writer=benchmark.getRunData().getIndexWriter();
  assertEquals(2,writer.getMaxBufferedDocs());
  assertEquals(IndexWriter.DISABLE_AUTO_FLUSH,(int)writer.getRAMBufferSizeMB());
  assertEquals(3,writer.getMergeFactor());
  assertFalse(writer.getUseCompoundFile());
  writer.close();
  Directory dir=benchmark.getRunData().getDirectory();
  IndexReader reader=IndexReader.open(dir);
  TermFreqVector[] tfv=reader.getTermFreqVectors(0);
  assertNotNull(tfv);
  assertTrue(tfv.length > 0);
  reader.close();
}
