{
  final int NUM_DOCS=20;
  String algLines1[]={"# ----- properties ","analyzer=org.apache.lucene.analysis.WhitespaceAnalyzer","content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource","docs.file=" + getReuters20LinesFile(),"# ----- alg ","{ReadTokens}: " + NUM_DOCS,"ResetSystemErase","CreateIndex","{AddDoc}: " + NUM_DOCS,"CloseIndex"};
  Benchmark benchmark=execBenchmark(algLines1);
  List stats=benchmark.getRunData().getPoints().taskStats();
  int totalTokenCount1=0;
  for (Iterator it=stats.iterator(); it.hasNext(); ) {
    TaskStats stat=(TaskStats)it.next();
    if (stat.getTask().getName().equals("ReadTokens")) {
      totalTokenCount1+=stat.getCount();
    }
  }
  IndexReader reader=IndexReader.open(benchmark.getRunData().getDirectory(),true);
  assertEquals(NUM_DOCS,reader.numDocs());
  TermEnum terms=reader.terms();
  TermDocs termDocs=reader.termDocs();
  int totalTokenCount2=0;
  while (terms.next()) {
    termDocs.seek(terms.term());
    while (termDocs.next())     totalTokenCount2+=termDocs.freq();
  }
  reader.close();
  assertEquals(totalTokenCount1,totalTokenCount2);
}
