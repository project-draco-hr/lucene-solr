{
  SolrParams params=req.getParams();
  if (!isHighlightingEnabled(params))   return null;
  SolrIndexSearcher searcher=req.getSearcher();
  IndexSchema schema=searcher.getSchema();
  SchemaField keyField=schema.getUniqueKeyField();
  if (keyField == null) {
    return null;
  }
  String[] fieldNames=getHighlightFields(query,req,defaultFields);
  Set<String> preFetchFieldNames=getDocPrefetchFieldNames(fieldNames,req);
  if (preFetchFieldNames != null) {
    preFetchFieldNames.add(keyField.getName());
  }
  FastVectorHighlighter fvh=null;
  FieldQuery fvhFieldQuery=null;
  IndexReader reader=new TermVectorReusingLeafReader(req.getSearcher().getLeafReader());
  NamedList fragments=new SimpleOrderedMap();
  DocIterator iterator=docs.iterator();
  for (int i=0; i < docs.size(); i++) {
    int docId=iterator.nextDoc();
    StoredDocument doc=searcher.doc(docId,preFetchFieldNames);
    @SuppressWarnings("rawtypes") NamedList docHighlights=new SimpleOrderedMap();
    for (    String fieldName : fieldNames) {
      SchemaField schemaField=schema.getFieldOrNull(fieldName);
      Object fieldHighlights;
      if (schemaField == null) {
        fieldHighlights=null;
      }
 else       if (schemaField.getType() instanceof org.apache.solr.schema.TrieField) {
        fieldHighlights=null;
      }
 else       if (useFastVectorHighlighter(params,schemaField)) {
        if (fvhFieldQuery == null) {
          fvh=new FastVectorHighlighter(params.getBool(HighlightParams.USE_PHRASE_HIGHLIGHTER,true),params.getBool(HighlightParams.FIELD_MATCH,false));
          fvh.setPhraseLimit(params.getInt(HighlightParams.PHRASE_LIMIT,SolrHighlighter.DEFAULT_PHRASE_LIMIT));
          fvhFieldQuery=fvh.getFieldQuery(query,reader);
        }
        fieldHighlights=doHighlightingByFastVectorHighlighter(doc,docId,schemaField,fvh,fvhFieldQuery,reader,req);
      }
 else {
        fieldHighlights=doHighlightingByHighlighter(doc,docId,schemaField,query,reader,req);
      }
      if (fieldHighlights == null) {
        fieldHighlights=alternateField(doc,fieldName,req);
      }
      if (fieldHighlights != null) {
        docHighlights.add(fieldName,fieldHighlights);
      }
    }
    fragments.add(schema.printableUniqueKey(doc),docHighlights);
  }
  return fragments;
}
