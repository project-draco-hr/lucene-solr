{
  SolrParams params=req.getParams();
  if (!isHighlightingEnabled(params))   return null;
  SolrIndexSearcher searcher=req.getSearcher();
  IndexSchema schema=searcher.getSchema();
  SchemaField keyField=schema.getUniqueKeyField();
  if (keyField == null) {
    return null;
  }
  String[] fieldNames=getHighlightFields(query,req,defaultFields);
  Set<String> preFetchFieldNames=getDocPrefetchFieldNames(fieldNames,req);
  if (preFetchFieldNames != null) {
    preFetchFieldNames.add(keyField.getName());
  }
  FvhContainer fvhContainer=new FvhContainer(null,null);
  IndexReader reader=new TermVectorReusingLeafReader(req.getSearcher().getSlowAtomicReader());
  NamedList fragments=new SimpleOrderedMap();
  DocIterator iterator=docs.iterator();
  for (int i=0; i < docs.size(); i++) {
    int docId=iterator.nextDoc();
    Document doc=searcher.doc(docId,preFetchFieldNames);
    @SuppressWarnings("rawtypes") NamedList docHighlights=new SimpleOrderedMap();
    for (    String fieldName : fieldNames) {
      SchemaField schemaField=schema.getFieldOrNull(fieldName);
      Object fieldHighlights;
      fieldHighlights=doHighlightingOfField(doc,docId,schemaField,fvhContainer,query,reader,req,params);
      if (fieldHighlights == null) {
        fieldHighlights=alternateField(doc,docId,fieldName,fvhContainer,query,reader,req);
      }
      if (fieldHighlights != null) {
        docHighlights.add(fieldName,fieldHighlights);
      }
    }
    fragments.add(schema.printableUniqueKey(doc),docHighlights);
  }
  return fragments;
}
