{
  SolrParams params=req.getParams();
  if (!isHighlightingEnabled(params))   return null;
  SolrIndexSearcher searcher=req.getSearcher();
  IndexSchema schema=searcher.getSchema();
  SchemaField keyField=schema.getUniqueKeyField();
  if (keyField == null) {
    return null;
  }
  String[] fieldNames=getHighlightFields(query,req,defaultFields);
  Set<String> preFetchFieldNames=getDocPrefetchFieldNames(fieldNames,req);
  if (preFetchFieldNames != null) {
    preFetchFieldNames.add(keyField.getName());
  }
  FastVectorHighlighter fvh=null;
  FieldQuery fvhFieldQuery=null;
  NamedList fragments=new SimpleOrderedMap();
  DocIterator iterator=docs.iterator();
  for (int i=0; i < docs.size(); i++) {
    int docId=iterator.nextDoc();
    StoredDocument doc=searcher.doc(docId,preFetchFieldNames);
    NamedList docSummaries=new SimpleOrderedMap();
    for (    String fieldName : fieldNames) {
      if (useFastVectorHighlighter(params,schema,fieldName)) {
        if (fvhFieldQuery == null) {
          fvh=new FastVectorHighlighter(params.getBool(HighlightParams.USE_PHRASE_HIGHLIGHTER,true),params.getBool(HighlightParams.FIELD_MATCH,false));
          fvh.setPhraseLimit(params.getInt(HighlightParams.PHRASE_LIMIT,SolrHighlighter.DEFAULT_PHRASE_LIMIT));
          fvhFieldQuery=fvh.getFieldQuery(query,searcher.getIndexReader());
        }
        doHighlightingByFastVectorHighlighter(fvh,fvhFieldQuery,req,docSummaries,docId,doc,fieldName);
      }
 else {
        doHighlightingByHighlighter(query,req,docSummaries,docId,doc,fieldName);
      }
    }
    fragments.add(schema.printableUniqueKey(doc),docSummaries);
  }
  return fragments;
}
