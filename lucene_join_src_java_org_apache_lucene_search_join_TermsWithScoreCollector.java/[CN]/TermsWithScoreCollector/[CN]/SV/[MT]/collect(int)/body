{
  int ord=collectedTerms.add(fromDocTerms.get(doc));
  if (ord < 0) {
    ord=-ord - 1;
  }
 else {
    if (ord >= scoreSums.length) {
      int begin=scoreSums.length;
      scoreSums=ArrayUtil.grow(scoreSums);
      if (scoreMode == ScoreMode.Min) {
        Arrays.fill(scoreSums,begin,scoreSums.length,Float.POSITIVE_INFINITY);
      }
 else       if (scoreMode == ScoreMode.Max) {
        Arrays.fill(scoreSums,begin,scoreSums.length,Float.NEGATIVE_INFINITY);
      }
    }
  }
  float current=scorer.score();
  float existing=scoreSums[ord];
  if (Float.compare(existing,0.0f) == 0) {
    scoreSums[ord]=current;
  }
 else {
switch (scoreMode) {
case Total:
      scoreSums[ord]=scoreSums[ord] + current;
    break;
case Min:
  if (current < existing) {
    scoreSums[ord]=current;
  }
break;
case Max:
if (current > existing) {
scoreSums[ord]=current;
}
break;
}
}
}
