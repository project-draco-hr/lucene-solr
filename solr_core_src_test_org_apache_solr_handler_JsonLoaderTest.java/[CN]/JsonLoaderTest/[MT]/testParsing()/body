{
  SolrQueryRequest req=req();
  SolrQueryResponse rsp=new SolrQueryResponse();
  BufferingRequestProcessor p=new BufferingRequestProcessor(null);
  JsonLoader loader=new JsonLoader(req,p);
  loader.load(req,rsp,new ContentStreamBase.StringStream(input));
  assertEquals(2,p.addCommands.size());
  AddUpdateCommand add=p.addCommands.get(0);
  SolrInputDocument d=add.solrDoc;
  SolrInputField f=d.getField("boosted");
  assertEquals(6.7f,f.getBoost(),0.1);
  assertEquals(2,f.getValues().size());
  add=p.addCommands.get(1);
  d=add.solrDoc;
  f=d.getField("f1");
  assertEquals(2,f.getValues().size());
  assertEquals(3.45f,d.getDocumentBoost(),0.001);
  assertEquals(false,add.overwrite);
  assertEquals(0,d.getField("f2").getValueCount());
  assertEquals(2,p.commitCommands.size());
  CommitUpdateCommand commit=p.commitCommands.get(0);
  assertFalse(commit.optimize);
  assertTrue(commit.waitSearcher);
  commit=p.commitCommands.get(1);
  assertTrue(commit.optimize);
  assertFalse(commit.waitSearcher);
  assertEquals(4,p.deleteCommands.size());
  DeleteUpdateCommand delete=p.deleteCommands.get(0);
  assertEquals(delete.id,"ID");
  assertEquals(delete.query,null);
  assertEquals(delete.commitWithin,-1);
  delete=p.deleteCommands.get(1);
  assertEquals(delete.id,"ID");
  assertEquals(delete.query,null);
  assertEquals(delete.commitWithin,500);
  delete=p.deleteCommands.get(2);
  assertEquals(delete.id,null);
  assertEquals(delete.query,"QUERY");
  assertEquals(delete.commitWithin,-1);
  delete=p.deleteCommands.get(3);
  assertEquals(delete.id,null);
  assertEquals(delete.query,"QUERY");
  assertEquals(delete.commitWithin,500);
  assertEquals(1,p.rollbackCommands.size());
  req.close();
}
