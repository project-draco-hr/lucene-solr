{
  String doc="\n" + "\n" + "{\"bool\": true,\n"+ " \"f0\": \"v0\",\n"+ " \"f2\": {\n"+ "    \t  \"boost\": 2.3,\n"+ "    \t  \"value\": \"test\"\n"+ "    \t   },\n"+ "\"array\": [ \"aaa\", \"bbb\" ],\n"+ "\"boosted\": {\n"+ "    \t      \"boost\": 6.7,\n"+ "    \t      \"value\": [ \"aaa\", \"bbb\" ]\n"+ "    \t    }\n"+ " }\n"+ "\n"+ "\n"+ " {\"f1\": \"v1\",\n"+ "  \"f1\": \"v2\",\n"+ "   \"f2\": null\n"+ "  }\n";
  SolrQueryRequest req=req("srcField","_src");
  req.getContext().put("path","/update/json/docs");
  SolrQueryResponse rsp=new SolrQueryResponse();
  BufferingRequestProcessor p=new BufferingRequestProcessor(null);
  JsonLoader loader=new JsonLoader();
  loader.load(req,rsp,new ContentStreamBase.StringStream(doc),p);
  assertEquals(2,p.addCommands.size());
  doc="\n" + "\n" + "{\"bool\": true,\n"+ " \"f0\": \"v0\",\n"+ " \"f2\": {\n"+ "    \t  \"boost\": 2.3,\n"+ "    \t  \"value\": \"test\"\n"+ "    \t   },\n"+ "\"array\": [ \"aaa\", \"bbb\" ],\n"+ "\"boosted\": {\n"+ "    \t      \"boost\": 6.7,\n"+ "    \t      \"value\": [ \"aaa\", \"bbb\" ]\n"+ "    \t    }\n"+ " }\n"+ "\n"+ "\n"+ " {\"f1\": \"v1\",\n"+ "  \"f2\": \"v2\",\n"+ "   \"f3\": null\n"+ "  }\n";
  req=req("srcField","_src");
  req.getContext().put("path","/update/json/docs");
  rsp=new SolrQueryResponse();
  p=new BufferingRequestProcessor(null);
  loader=new JsonLoader();
  loader.load(req,rsp,new ContentStreamBase.StringStream(doc),p);
  assertEquals(2,p.addCommands.size());
  String content=(String)p.addCommands.get(0).solrDoc.getFieldValue("_src");
  assertNotNull(content);
  Map obj=(Map)ObjectBuilder.fromJSON(content);
  assertEquals(Boolean.TRUE,obj.get("bool"));
  assertEquals("v0",obj.get("f0"));
  assertNotNull(obj.get("f0"));
  assertNotNull(obj.get("array"));
  assertNotNull(obj.get("boosted"));
  content=(String)p.addCommands.get(1).solrDoc.getFieldValue("_src");
  assertNotNull(content);
  obj=(Map)ObjectBuilder.fromJSON(content);
  assertEquals("v1",obj.get("f1"));
  assertEquals("v2",obj.get("f2"));
  assertTrue(obj.containsKey("f3"));
  doc="[{'id':'1'},{'id':'2'}]".replace('\'','"');
  req=req("srcField","_src");
  req.getContext().put("path","/update/json/docs");
  rsp=new SolrQueryResponse();
  p=new BufferingRequestProcessor(null);
  loader=new JsonLoader();
  loader.load(req,rsp,new ContentStreamBase.StringStream(doc),p);
  assertEquals(2,p.addCommands.size());
  content=(String)p.addCommands.get(0).solrDoc.getFieldValue("_src");
  assertNotNull(content);
  obj=(Map)ObjectBuilder.fromJSON(content);
  assertEquals("1",obj.get("id"));
  content=(String)p.addCommands.get(1).solrDoc.getFieldValue("_src");
  assertNotNull(content);
  obj=(Map)ObjectBuilder.fromJSON(content);
  assertEquals("2",obj.get("id"));
}
