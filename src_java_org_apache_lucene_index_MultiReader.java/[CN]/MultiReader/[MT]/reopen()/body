{
  ensureOpen();
  boolean reopened=false;
  IndexReader[] newSubReaders=new IndexReader[subReaders.length];
  boolean[] newDecrefOnClose=new boolean[subReaders.length];
  boolean success=false;
  try {
    for (int i=0; i < subReaders.length; i++) {
      newSubReaders[i]=subReaders[i].reopen();
      if (newSubReaders[i] != subReaders[i]) {
        reopened=true;
        newDecrefOnClose[i]=false;
      }
    }
    if (reopened) {
      for (int i=0; i < subReaders.length; i++) {
        if (newSubReaders[i] == subReaders[i]) {
          newSubReaders[i].incRef();
          newDecrefOnClose[i]=true;
        }
      }
      MultiReader mr=new MultiReader(newSubReaders);
      mr.decrefOnClose=newDecrefOnClose;
      success=true;
      return mr;
    }
 else {
      success=true;
      return this;
    }
  }
  finally {
    if (!success && reopened) {
      for (int i=0; i < newSubReaders.length; i++) {
        if (newSubReaders[i] != null) {
          try {
            if (newDecrefOnClose[i]) {
              newSubReaders[i].decRef();
            }
 else {
              newSubReaders[i].close();
            }
          }
 catch (          IOException ignore) {
          }
        }
      }
    }
  }
}
