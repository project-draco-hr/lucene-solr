{
  ensureOpen();
  boolean reopened=false;
  IndexReader[] newSubReaders=new IndexReader[subReaders.length];
  boolean success=false;
  try {
    for (int i=0; i < subReaders.length; i++) {
      if (doClone)       newSubReaders[i]=(IndexReader)subReaders[i].clone();
 else       newSubReaders[i]=subReaders[i].reopen();
      if (newSubReaders[i] != subReaders[i]) {
        reopened=true;
      }
    }
    success=true;
  }
  finally {
    if (!success && reopened) {
      for (int i=0; i < newSubReaders.length; i++) {
        if (newSubReaders[i] != subReaders[i]) {
          try {
            newSubReaders[i].close();
          }
 catch (          IOException ignore) {
          }
        }
      }
    }
  }
  if (reopened) {
    boolean[] newDecrefOnClose=new boolean[subReaders.length];
    for (int i=0; i < subReaders.length; i++) {
      if (newSubReaders[i] == subReaders[i]) {
        newSubReaders[i].incRef();
        newDecrefOnClose[i]=true;
      }
    }
    MultiReader mr=new MultiReader(newSubReaders);
    mr.decrefOnClose=newDecrefOnClose;
    return mr;
  }
 else {
    return this;
  }
}
