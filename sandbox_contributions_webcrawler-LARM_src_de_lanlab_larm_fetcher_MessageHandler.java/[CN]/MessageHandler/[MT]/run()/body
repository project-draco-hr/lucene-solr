{
  while (running) {
synchronized (queueMonitor) {
      workingOnMessage=false;
      try {
        queueMonitor.wait();
      }
 catch (      InterruptedException e) {
        System.out.println("MessageHandler: Caught InterruptedException");
      }
      workingOnMessage=true;
    }
    Message m;
    try {
      while (messagesWaiting) {
synchronized (this.queueMonitor) {
          m=(Message)messageQueue.remove();
          if (messageQueue.size() == 0) {
            messagesWaiting=false;
          }
        }
        messageQueueObservable.setChanged();
        messageQueueObservable.notifyObservers(new Integer(-1));
        Iterator i=listeners.iterator();
        while (i.hasNext()) {
          try {
            MessageListener listener=(MessageListener)i.next();
            m=(Message)listener.handleRequest(m);
            if (m == null) {
              messageProcessorObservable.setChanged();
              messageProcessorObservable.notifyObservers(listener);
              break;
            }
          }
 catch (          ClassCastException e) {
            System.out.println("MessageHandler:run: ClassCastException(2): " + e.getMessage());
          }
        }
      }
    }
 catch (    ClassCastException e) {
      System.out.println("MessageHandler:run: ClassCastException: " + e.getMessage());
    }
catch (    UnderflowException e) {
      messagesWaiting=false;
    }
catch (    Exception e) {
      System.out.println("MessageHandler: " + e.getClass() + " "+ e.getMessage());
      e.printStackTrace();
    }
  }
}
