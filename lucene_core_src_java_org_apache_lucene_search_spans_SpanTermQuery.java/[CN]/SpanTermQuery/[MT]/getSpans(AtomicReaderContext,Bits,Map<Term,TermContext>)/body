{
  TermContext termContext=termContexts.get(term);
  final TermState state;
  if (termContext == null) {
    final InvertedFields fields=context.reader().fields();
    if (fields != null) {
      final Terms terms=fields.terms(term.field());
      if (terms != null) {
        final TermsEnum termsEnum=terms.iterator(null);
        if (termsEnum.seekExact(term.bytes(),true)) {
          state=termsEnum.termState();
        }
 else {
          state=null;
        }
      }
 else {
        state=null;
      }
    }
 else {
      state=null;
    }
  }
 else {
    state=termContext.get(context.ord);
  }
  if (state == null) {
    return TermSpans.EMPTY_TERM_SPANS;
  }
  final TermsEnum termsEnum=context.reader().terms(term.field()).iterator(null);
  termsEnum.seekExact(term.bytes(),state);
  final DocsAndPositionsEnum postings=termsEnum.docsAndPositions(acceptDocs,null,false);
  if (postings != null) {
    return new TermSpans(postings,term);
  }
 else {
    throw new IllegalStateException("field \"" + term.field() + "\" was indexed without position data; cannot run SpanTermQuery (term="+ term.text()+ ")");
  }
}
