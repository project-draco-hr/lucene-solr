{
  expandSingleton();
  Set<State> visited;
  if (isDebug())   visited=new LinkedHashSet<State>();
 else   visited=new HashSet<State>();
  LinkedList<State> worklist=new LinkedList<State>();
  worklist.add(initial);
  visited.add(initial);
  while (worklist.size() > 0) {
    State s=worklist.removeFirst();
    Collection<Transition> tr;
    if (isDebug())     tr=s.getSortedTransitions(false);
 else     tr=s.transitions;
    for (    Transition t : tr)     if (!visited.contains(t.to)) {
      visited.add(t.to);
      worklist.add(t.to);
    }
  }
  return visited;
}
