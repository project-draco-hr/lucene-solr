{
  final State[] states=getNumberedStates();
  Set<State> live=new HashSet<State>();
  for (  State q : states) {
    if (q.isAccept()) {
      live.add(q);
    }
  }
  Set<State> map[]=new Set[states.length];
  for (int i=0; i < map.length; i++)   map[i]=new HashSet<State>();
  for (  State s : states) {
    for (int i=0; i < s.numTransitions; i++) {
      map[s.transitionsArray[i].to.number].add(s);
    }
  }
  LinkedList<State> worklist=new LinkedList<State>(live);
  while (worklist.size() > 0) {
    State s=worklist.removeFirst();
    for (    State p : map[s.number])     if (!live.contains(p)) {
      live.add(p);
      worklist.add(p);
    }
  }
  return live.toArray(new State[live.size()]);
}
