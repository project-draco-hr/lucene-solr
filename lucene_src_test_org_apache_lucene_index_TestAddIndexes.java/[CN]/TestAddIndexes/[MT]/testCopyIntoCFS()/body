{
  Directory target=newDirectory();
  LogMergePolicy lmp=newLogMergePolicy(false);
  IndexWriterConfig conf=newIndexWriterConfig(TEST_VERSION_CURRENT,null).setMergePolicy(lmp);
  IndexWriter w=new IndexWriter(target,conf);
  w.addDocument(new Document());
  w.commit();
  assertFalse(w.segmentInfos.info(0).getUseCompoundFile());
  Directory src=newDirectory();
  LogMergePolicy lmp2=newLogMergePolicy(false);
  IndexWriterConfig conf2=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(lmp2);
  IndexWriter w2=new IndexWriter(src,conf2);
  Document doc=new Document();
  doc.add(new Field("c",TextField.TYPE_STORED,"some text"));
  w2.addDocument(doc);
  doc=new Document();
  doc.add(new StringField("d","delete"));
  w2.addDocument(doc);
  w2.commit();
  w2.deleteDocuments(new Term("d","delete"));
  w2.commit();
  w2.close();
  IndexReader r=IndexReader.open(src,false);
  r.setNorm(0,"c",(byte)1);
  r.close();
  assertTrue(".del file not found",src.fileExists("_0_1.del"));
  assertTrue("separate norms file not found",src.fileExists("_0_1.s0"));
  lmp.setUseCompoundFile(true);
  lmp.setNoCFSRatio(1.0);
  w.addIndexes(src);
  w.commit();
  assertFalse("existing segments should not be modified by addIndexes",w.segmentInfos.info(0).getUseCompoundFile());
  assertTrue("segment should have been converted to a CFS by addIndexes",w.segmentInfos.info(1).getUseCompoundFile());
  assertTrue(".del file not found",target.fileExists("_1_1.del"));
  assertTrue("separate norms file not found",target.fileExists("_1_1.s0"));
  lmp.setUseCompoundFile(false);
  w.addIndexes(src);
  w.commit();
  assertFalse("segment should not have been converted to a CFS by addIndexes if MP disallows",w.segmentInfos.info(2).getUseCompoundFile());
  w.close();
  src.close();
  target.close();
}
