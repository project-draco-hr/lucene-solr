{
  Directory dir=newDirectory();
  Directory aux=newDirectory();
  Directory aux2=newDirectory();
  CodecProvider provider=new MockCodecProvider();
  IndexWriter writer=null;
  writer=newWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setCodecProvider(provider));
  addDocs3(writer,100);
  assertEquals(100,writer.maxDoc());
  writer.commit();
  writer.close();
  _TestUtil.checkIndex(dir,provider);
  writer=newWriter(aux,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setCodecProvider(provider));
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setUseCompoundFile(false);
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false);
  addDocs(writer,40);
  assertEquals(40,writer.maxDoc());
  writer.commit();
  writer.close();
  writer=newWriter(aux2,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setCodecProvider(provider));
  addDocs2(writer,50);
  assertEquals(50,writer.maxDoc());
  writer.commit();
  writer.close();
  writer=newWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setOpenMode(OpenMode.APPEND).setCodecProvider(provider));
  assertEquals(100,writer.maxDoc());
  writer.addIndexes(new Directory[]{aux,aux2});
  assertEquals(190,writer.maxDoc());
  writer.close();
  _TestUtil.checkIndex(dir,provider);
  dir.close();
  aux.close();
  aux2.close();
}
