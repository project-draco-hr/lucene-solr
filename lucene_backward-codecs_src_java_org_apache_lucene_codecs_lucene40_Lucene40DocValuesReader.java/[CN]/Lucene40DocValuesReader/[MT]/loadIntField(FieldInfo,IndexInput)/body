{
  CodecUtil.checkHeader(input,Lucene40DocValuesFormat.INTS_CODEC_NAME,Lucene40DocValuesFormat.INTS_VERSION_START,Lucene40DocValuesFormat.INTS_VERSION_CURRENT);
  int valueSize=input.readInt();
  if (valueSize != 4) {
    throw new CorruptIndexException("invalid valueSize: " + valueSize);
  }
  int maxDoc=state.segmentInfo.getDocCount();
  final int values[]=new int[maxDoc];
  for (int i=0; i < values.length; i++) {
    values[i]=input.readInt();
  }
  long bytesUsed=RamUsageEstimator.sizeOf(values);
  instanceInfo.put(field.name,Accountables.namedAccountable("int array",bytesUsed));
  ramBytesUsed.addAndGet(bytesUsed);
  return new NumericDocValues(){
    @Override public long get(    int docID){
      return values[docID];
    }
  }
;
}
