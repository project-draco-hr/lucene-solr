{
  NumericDocValues instance=numericInstances.get(field.name);
  if (instance == null) {
    String fileName=IndexFileNames.segmentFileName(state.segmentInfo.name + "_" + Integer.toString(field.number),segmentSuffix,"dat");
    IndexInput input=dir.openInput(fileName,state.context);
    boolean success=false;
    try {
switch (LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {
case VAR_INTS:
        instance=loadVarIntsField(field,input);
      break;
case FIXED_INTS_8:
    instance=loadByteField(field,input);
  break;
case FIXED_INTS_16:
instance=loadShortField(field,input);
break;
case FIXED_INTS_32:
instance=loadIntField(field,input);
break;
case FIXED_INTS_64:
instance=loadLongField(field,input);
break;
case FLOAT_32:
instance=loadFloatField(field,input);
break;
case FLOAT_64:
instance=loadDoubleField(field,input);
break;
default :
throw new AssertionError();
}
CodecUtil.checkEOF(input);
success=true;
}
  finally {
if (success) {
IOUtils.close(input);
}
 else {
IOUtils.closeWhileHandlingException(input);
}
}
if (!merging) {
numericInstances.put(field.name,instance);
}
}
return instance;
}
