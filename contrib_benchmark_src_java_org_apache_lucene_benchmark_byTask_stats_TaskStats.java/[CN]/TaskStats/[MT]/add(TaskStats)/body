{
  numRuns+=stat2.getNumRuns();
  elapsed+=stat2.getElapsed();
  maxTotMem+=stat2.getMaxTotMem();
  maxUsedMem+=stat2.getMaxUsedMem();
  count+=stat2.getCount();
  if (round != stat2.round) {
    round=-1;
  }
  if (countsByTime != null && stat2.countsByTime != null) {
    if (countsByTimeStepMSec != stat2.countsByTimeStepMSec) {
      throw new IllegalStateException("different by-time msec step");
    }
    if (countsByTime.length != stat2.countsByTime.length) {
      throw new IllegalStateException("different by-time msec count");
    }
    for (int i=0; i < stat2.countsByTime.length; i++) {
      countsByTime[i]+=stat2.countsByTime[i];
    }
  }
}
