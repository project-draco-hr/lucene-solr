{
  Collection<Object> vals=srcField.getValues();
  if (vals == null || vals.isEmpty())   return srcField;
  List<String> messages=null;
  SolrInputField result=new SolrInputField(srcField.getName());
  for (  final Object srcVal : vals) {
    final Object destVal=mutateValue(srcVal);
    if (SKIP_FIELD_VALUE_LIST_SINGLETON == destVal) {
      log.debug("field '{}' {} value '{}' is not mutable, so no values will be mutated",new Object[]{srcField.getName(),srcVal.getClass().getSimpleName(),srcVal});
      return srcField;
    }
    if (DELETE_VALUE_SINGLETON == destVal) {
      if (log.isDebugEnabled()) {
        if (null == messages) {
          messages=new ArrayList<>();
        }
        messages.add(String.format(Locale.ROOT,"removing value from field '%s': %s '%s'",srcField.getName(),srcVal.getClass().getSimpleName(),srcVal));
      }
    }
 else {
      if (log.isDebugEnabled()) {
        if (null == messages) {
          messages=new ArrayList<>();
        }
        messages.add(String.format(Locale.ROOT,"replace value from field '%s': %s '%s' with %s '%s'",srcField.getName(),srcVal.getClass().getSimpleName(),srcVal,destVal.getClass().getSimpleName(),destVal));
      }
      result.addValue(destVal,1.0F);
    }
  }
  result.setBoost(srcField.getBoost());
  if (null != messages && log.isDebugEnabled()) {
    for (    String message : messages) {
      log.debug(message);
    }
  }
  return 0 == result.getValueCount() ? null : result;
}
