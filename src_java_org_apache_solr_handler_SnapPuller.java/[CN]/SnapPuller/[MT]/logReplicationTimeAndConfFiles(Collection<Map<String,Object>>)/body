{
  FileOutputStream outFile=null;
  FileInputStream inFile=null;
  List<String> confFiles=new ArrayList<String>();
  if (modifiedConfFiles != null && !modifiedConfFiles.isEmpty())   for (  Map<String,Object> map1 : modifiedConfFiles)   confFiles.add((String)map1.get(NAME));
  Properties props=new Properties();
  long replicationTime=System.currentTimeMillis();
  try {
    File f=new File(solrCore.getDataDir(),REPLICATION_PROPERTIES);
    int indexCount=1, confFilesCount=1;
    if (f.exists()) {
      inFile=new FileInputStream(f);
      props.load(inFile);
      if (!props.isEmpty()) {
        if (props.containsKey("timesIndexReplicated"))         indexCount=Integer.valueOf(props.getProperty("timesIndexReplicated")) + 1;
        props.setProperty("timesIndexReplicated",String.valueOf(indexCount));
        props.setProperty("indexReplicatedAt",String.valueOf(replicationTime));
        if (modifiedConfFiles != null && !modifiedConfFiles.isEmpty()) {
          props.setProperty("confFilesReplicated",confFiles.toString());
          props.setProperty("confFilesReplicatedAt",String.valueOf(replicationTime));
          if (props.containsKey("timesConfigReplicated"))           confFilesCount=Integer.valueOf(props.getProperty("timesConfigReplicated")) + 1;
          props.setProperty("timesConfigReplicated",String.valueOf(confFilesCount));
        }
      }
 else {
        props.setProperty("timesIndexReplicated",String.valueOf(indexCount));
        props.setProperty("indexReplicatedAt",String.valueOf(replicationTime));
        if (modifiedConfFiles != null && !modifiedConfFiles.isEmpty()) {
          props.setProperty("confFilesReplicated",confFiles.toString());
          props.setProperty("confFilesReplicatedAt",String.valueOf(replicationTime));
          props.setProperty("timesConfigReplicated",String.valueOf(confFilesCount));
        }
      }
    }
 else {
      props.setProperty("timesIndexReplicated",String.valueOf(indexCount));
      props.setProperty("indexReplicatedAt",String.valueOf(replicationTime));
      if (modifiedConfFiles != null && !modifiedConfFiles.isEmpty()) {
        props.setProperty("confFilesReplicated",confFiles.toString());
        props.setProperty("confFilesReplicatedAt",String.valueOf(replicationTime));
        props.setProperty("timesConfigReplicated",String.valueOf(confFilesCount));
      }
    }
    outFile=new FileOutputStream(f);
    props.store(outFile,"Replication details");
  }
 catch (  Exception e) {
    LOG.warn("Exception while updating statistics",e);
  }
 finally {
    closeNoExp(inFile);
    closeNoExp(outFile);
  }
}
