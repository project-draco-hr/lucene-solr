{
  dir=new MockRAMDirectory();
  IndexWriter writer=new IndexWriter(dir,new StandardAnalyzer(),IndexWriter.MaxFieldLength.LIMITED);
  writer.setMaxBufferedDocs(17);
  final Document doc=new Document();
  final Document doc2=new Document();
  final Field id=new Field("id","",Field.Store.YES,Field.Index.NO);
  doc.add(id);
  doc2.add(id);
  final Field contents=new Field("contents","",Field.Store.NO,Field.Index.ANALYZED);
  doc.add(contents);
  doc2.add(contents);
  final Field byteField=new Field("byte","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(byteField);
  doc2.add(byteField);
  final Field shortField=new Field("short","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(shortField);
  doc2.add(shortField);
  final Field intField=new Field("int","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(intField);
  doc2.add(intField);
  final Field longField=new Field("long","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(longField);
  doc2.add(longField);
  final Field floatField=new Field("float","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(floatField);
  doc2.add(floatField);
  final Field doubleField=new Field("double","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(doubleField);
  doc2.add(doubleField);
  final Field stringField=new Field("string","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(stringField);
  final Field stringFieldIdx=new Field("stringIdx","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(stringFieldIdx);
  for (int i=0; i < NUM_DOCS; i++) {
    id.setValue("" + i);
    if (i % 1000 == 0) {
      contents.setValue("a b c z");
    }
 else     if (i % 100 == 0) {
      contents.setValue("a b c y");
    }
 else     if (i % 10 == 0) {
      contents.setValue("a b c x");
    }
 else {
      contents.setValue("a b c");
    }
    byteField.setValue("" + nextInt(Byte.MIN_VALUE,Byte.MAX_VALUE));
    if (nextInt(10) == 3) {
      shortField.setValue("" + Short.MIN_VALUE);
    }
 else     if (nextInt(10) == 7) {
      shortField.setValue("" + Short.MAX_VALUE);
    }
 else {
      shortField.setValue("" + nextInt(Short.MIN_VALUE,Short.MAX_VALUE));
    }
    if (nextInt(10) == 3) {
      intField.setValue("" + Integer.MIN_VALUE);
    }
 else     if (nextInt(10) == 7) {
      intField.setValue("" + Integer.MAX_VALUE);
    }
 else {
      intField.setValue("" + r.nextInt());
    }
    if (nextInt(10) == 3) {
      longField.setValue("" + Long.MIN_VALUE);
    }
 else     if (nextInt(10) == 7) {
      longField.setValue("" + Long.MAX_VALUE);
    }
 else {
      longField.setValue("" + r.nextLong());
    }
    floatField.setValue("" + r.nextFloat());
    doubleField.setValue("" + r.nextDouble());
    if (i % 197 == 0) {
      writer.addDocument(doc2);
    }
 else {
      String r=randomString(nextInt(20));
      stringField.setValue(r);
      stringFieldIdx.setValue(r);
      writer.addDocument(doc);
    }
  }
  writer.close();
  searcherMultiSegment=new IndexSearcher(dir,true);
  searcherMultiSegment.setDefaultFieldSortScoring(true,true);
  dir2=new MockRAMDirectory(dir);
  writer=new IndexWriter(dir2,new StandardAnalyzer(),IndexWriter.MaxFieldLength.LIMITED);
  writer.optimize();
  writer.close();
  searcherSingleSegment=new IndexSearcher(dir2,true);
  searcherSingleSegment.setDefaultFieldSortScoring(true,true);
  dir3=new MockRAMDirectory(dir);
  writer=new IndexWriter(dir3,new StandardAnalyzer(),IndexWriter.MaxFieldLength.LIMITED);
  writer.optimize(3);
  writer.close();
  searcherFewSegment=new IndexSearcher(dir3,true);
  searcherFewSegment.setDefaultFieldSortScoring(true,true);
}
