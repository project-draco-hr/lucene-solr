{
  MultiPhraseQuery mpq=newMultiPhraseQuery();
  mpq.setSlop(slop);
  TermToBytesRefAttribute termAtt=stream.getAttribute(TermToBytesRefAttribute.class);
  PositionIncrementAttribute posIncrAtt=stream.getAttribute(PositionIncrementAttribute.class);
  int position=-1;
  List<Term> multiTerms=new ArrayList<>();
  stream.reset();
  while (stream.incrementToken()) {
    int positionIncrement=posIncrAtt.getPositionIncrement();
    if (positionIncrement > 0 && multiTerms.size() > 0) {
      if (enablePositionIncrements) {
        mpq.add(multiTerms.toArray(new Term[0]),position);
      }
 else {
        mpq.add(multiTerms.toArray(new Term[0]));
      }
      multiTerms.clear();
    }
    position+=positionIncrement;
    multiTerms.add(new Term(field,termAtt.getBytesRef()));
  }
  if (enablePositionIncrements) {
    mpq.add(multiTerms.toArray(new Term[0]),position);
  }
 else {
    mpq.add(multiTerms.toArray(new Term[0]));
  }
  return mpq;
}
