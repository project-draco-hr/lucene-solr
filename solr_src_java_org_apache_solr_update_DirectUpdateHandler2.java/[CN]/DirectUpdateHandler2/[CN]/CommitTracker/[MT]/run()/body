{
  long started=System.currentTimeMillis();
  SolrQueryRequest req=new LocalSolrQueryRequest(core,new ModifiableSolrParams());
  try {
    CommitUpdateCommand command=new CommitUpdateCommand(req,false);
    command.waitFlush=true;
    command.waitSearcher=true;
    commit(command);
    autoCommitCount++;
  }
 catch (  Exception e) {
    log.error("auto commit error...");
    e.printStackTrace();
  }
 finally {
    pending=null;
    req.close();
  }
  if (lastAddedTime > started) {
    if (docsUpperBound > 0 && docsSinceCommit > docsUpperBound) {
      pending=scheduler.schedule(this,100,TimeUnit.MILLISECONDS);
    }
 else     if (timeUpperBound > 0) {
      pending=scheduler.schedule(this,timeUpperBound,TimeUnit.MILLISECONDS);
    }
  }
}
