{
  boolean flushed=threadPool.executePerThread(this,doc,new DocumentsWriterThreadPool.PerThreadTask<Boolean>(){
    @Override public Boolean process(    final DocumentsWriterPerThread perThread) throws IOException {
      long perThreadRAMUsedBeforeAdd=perThread.bytesUsed();
      perThread.addDocument(doc,analyzer);
      sequenceIDLock.lock();
      try {
        ensureOpen();
        if (delTerm != null) {
          deleteTerm(delTerm,true);
        }
        perThread.commitDocument();
        numDocsInRAM.incrementAndGet();
      }
  finally {
        sequenceIDLock.unlock();
      }
      if (finishAddDocument(perThread,perThreadRAMUsedBeforeAdd)) {
        super.clearThreadBindings();
        return true;
      }
      return false;
    }
  }
);
  if (flushed) {
    indexWriter.maybeMerge();
    return true;
  }
  return false;
}
