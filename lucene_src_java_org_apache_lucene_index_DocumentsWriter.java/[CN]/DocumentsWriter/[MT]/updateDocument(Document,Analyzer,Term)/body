{
  ensureOpen();
  SegmentInfo newSegment=null;
  SegmentDeletes segmentDeletes=null;
  ThreadState perThread=perThreadPool.getAndLock(Thread.currentThread(),this,doc);
  try {
    DocumentsWriterPerThread dwpt=perThread.perThread;
    long perThreadRAMUsedBeforeAdd=dwpt.bytesUsed();
    dwpt.updateDocument(doc,analyzer,delTerm);
    numDocsInRAM.incrementAndGet();
    newSegment=finishAddDocument(dwpt,perThreadRAMUsedBeforeAdd);
    if (newSegment != null) {
      fieldInfos.update(dwpt.getFieldInfos());
      if (dwpt.pendingDeletes.any()) {
        segmentDeletes=dwpt.pendingDeletes;
        dwpt.pendingDeletes=new SegmentDeletes();
      }
    }
  }
  finally {
    perThread.unlock();
  }
  if (segmentDeletes != null) {
    pushDeletes(newSegment,segmentDeletes);
  }
  if (newSegment != null) {
    perThreadPool.clearThreadBindings(perThread);
    indexWriter.addFlushedSegment(newSegment);
    return true;
  }
  if (delTerm != null) {
    deleteTerm(delTerm,perThread);
  }
  return false;
}
