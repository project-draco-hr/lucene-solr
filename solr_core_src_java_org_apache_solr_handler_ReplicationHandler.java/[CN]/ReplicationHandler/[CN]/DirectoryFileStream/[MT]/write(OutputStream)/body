{
  createOutputStream(out);
  IndexInput in=null;
  try {
    initWrite();
    RefCounted<SolrIndexSearcher> sref=core.getSearcher();
    Directory dir;
    try {
      SolrIndexSearcher searcher=sref.get();
      dir=searcher.getIndexReader().directory();
    }
  finally {
      sref.decref();
    }
    in=dir.openInput(fileName,IOContext.READONCE);
    if (offset != -1)     in.seek(offset);
    long filelen=dir.fileLength(fileName);
    long maxBytesBeforePause=0;
    while (true) {
      offset=offset == -1 ? 0 : offset;
      int read=(int)Math.min(buf.length,filelen - offset);
      in.readBytes(buf,0,read);
      fos.writeInt(read);
      if (useChecksum) {
        checksum.reset();
        checksum.update(buf,0,read);
        fos.writeLong(checksum.getValue());
      }
      fos.write(buf,0,read);
      fos.flush();
      LOG.debug("Wrote {} bytes for file {}",offset + read,fileName);
      maxBytesBeforePause+=read;
      if (maxBytesBeforePause >= rateLimiter.getMinPauseCheckBytes()) {
        rateLimiter.pause(maxBytesBeforePause);
        maxBytesBeforePause=0;
      }
      if (read != buf.length) {
        writeNothingAndFlush();
        fos.close();
        break;
      }
      offset+=read;
      in.seek(offset);
    }
  }
 catch (  IOException e) {
    LOG.warn("Exception while writing response for params: " + params,e);
  }
 finally {
    if (in != null) {
      in.close();
    }
    extendReserveAndReleaseCommitPoint();
  }
}
