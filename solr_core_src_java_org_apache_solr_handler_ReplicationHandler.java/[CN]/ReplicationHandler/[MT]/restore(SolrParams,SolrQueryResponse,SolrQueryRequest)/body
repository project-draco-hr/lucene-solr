{
  if (restoreFuture != null && !restoreFuture.isDone()) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Restore in progress. Cannot run multiple restore operations" + "for the same core");
  }
  String name=params.get(NAME);
  String location=params.get(CoreAdminParams.BACKUP_LOCATION);
  String repoName=params.get(CoreAdminParams.BACKUP_REPOSITORY);
  CoreContainer cc=core.getCoreDescriptor().getCoreContainer();
  BackupRepository repo=null;
  if (repoName != null) {
    repo=cc.newBackupRepository(Optional.of(repoName));
    location=repo.getBackupLocation(location);
    if (location == null) {
      throw new IllegalArgumentException("location is required");
    }
  }
 else {
    repo=new LocalFileSystemRepository();
  }
  if (location == null) {
    location=core.getDataDir();
  }
  if (name == null) {
    URI basePath=repo.createURI(location);
    String[] filePaths=repo.listAll(basePath);
    List<OldBackupDirectory> dirs=new ArrayList<>();
    for (    String f : filePaths) {
      OldBackupDirectory obd=new OldBackupDirectory(basePath,f);
      if (obd.getTimestamp().isPresent()) {
        dirs.add(obd);
      }
    }
    Collections.sort(dirs);
    if (dirs.size() == 0) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"No backup name specified and none found in " + core.getDataDir());
    }
    name=dirs.get(0).getDirName();
  }
 else {
    name="snapshot." + name;
  }
  RestoreCore restoreCore=new RestoreCore(repo,core,location,name);
  try {
    MDC.put("RestoreCore.core",core.getName());
    MDC.put("RestoreCore.backupLocation",location);
    MDC.put("RestoreCore.backupName",name);
    restoreFuture=restoreExecutor.submit(restoreCore);
    currentRestoreName=name;
  }
  finally {
    MDC.remove("RestoreCore.core");
    MDC.remove("RestoreCore.backupLocation");
    MDC.remove("RestoreCore.backupName");
  }
}
