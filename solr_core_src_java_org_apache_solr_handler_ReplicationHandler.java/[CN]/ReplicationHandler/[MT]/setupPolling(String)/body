{
  pollIntervalStr=intervalStr;
  pollIntervalNs=readIntervalNs(pollIntervalStr);
  if (pollIntervalNs == null || pollIntervalNs <= 0) {
    LOG.info(" No value set for 'pollInterval'. Timer Task not started.");
    return;
  }
  Runnable task=new Runnable(){
    @Override public void run(){
      if (pollDisabled.get()) {
        LOG.info("Poll disabled");
        return;
      }
      try {
        LOG.debug("Polling for index modifications");
        markScheduledExecutionStart();
        doFetch(null,false);
      }
 catch (      Exception e) {
        LOG.error("Exception in fetching index",e);
      }
    }
  }
;
  executorService=Executors.newSingleThreadScheduledExecutor(new DefaultSolrThreadFactory("indexFetcher"));
  long initialDelayNs=new Random().nextLong() % pollIntervalNs + TimeUnit.NANOSECONDS.convert(1,TimeUnit.MILLISECONDS);
  executorService.scheduleAtFixedRate(task,initialDelayNs,pollIntervalNs,TimeUnit.NANOSECONDS);
  LOG.info("Poll scheduled at an interval of {}ms",TimeUnit.MILLISECONDS.convert(pollIntervalNs,TimeUnit.NANOSECONDS));
}
