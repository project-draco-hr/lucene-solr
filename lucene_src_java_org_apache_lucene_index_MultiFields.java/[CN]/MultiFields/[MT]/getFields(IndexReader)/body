{
  final IndexReader[] subs=r.getSequentialSubReaders();
  if (subs == null) {
    return r.fields();
  }
 else   if (subs.length == 0) {
    return null;
  }
 else   if (subs.length == 1) {
    return getFields(subs[0]);
  }
 else {
    Fields currentFields=r.retrieveFields();
    if (currentFields == null) {
      final List<Fields> fields=new ArrayList<Fields>();
      final List<ReaderUtil.Slice> slices=new ArrayList<ReaderUtil.Slice>();
      new ReaderUtil.Gather(r){
        @Override protected void add(        int base,        IndexReader r) throws IOException {
          fields.add(r.fields());
          slices.add(new ReaderUtil.Slice(base,r.maxDoc(),fields.size() - 1));
        }
      }
.run();
      if (fields.size() == 0) {
        return null;
      }
 else       if (fields.size() == 1) {
        currentFields=fields.get(0);
      }
 else {
        currentFields=new MultiFields(fields.toArray(Fields.EMPTY_ARRAY),slices.toArray(ReaderUtil.Slice.EMPTY_ARRAY));
      }
      r.storeFields(currentFields);
    }
    return currentFields;
  }
}
