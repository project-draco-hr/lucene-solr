{
  final Terms result;
  if (!terms.containsKey(field)) {
    final List<Terms> subs2=new ArrayList<Terms>();
    final List<ReaderUtil.Slice> slices2=new ArrayList<ReaderUtil.Slice>();
    for (int i=0; i < subs.length; i++) {
      final Terms terms=subs[i].terms(field);
      if (terms != null) {
        subs2.add(terms);
        slices2.add(subSlices[i]);
      }
    }
    if (subs2.size() == 0) {
      result=null;
    }
 else {
      result=new MultiTerms(subs2.toArray(Terms.EMPTY_ARRAY),slices2.toArray(ReaderUtil.Slice.EMPTY_ARRAY));
    }
    terms.put(field,result);
  }
 else {
    result=terms.get(field);
  }
  return result;
}
