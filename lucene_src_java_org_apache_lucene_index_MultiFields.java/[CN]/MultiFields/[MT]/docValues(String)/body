{
  final DocValues result;
  if (!docValues.containsKey(field)) {
    final List<MultiDocValues.DocValuesIndex> subs2=new ArrayList<MultiDocValues.DocValuesIndex>();
    final List<ReaderUtil.Slice> slices2=new ArrayList<ReaderUtil.Slice>();
    for (int i=0; i < subs.length; i++) {
      final DocValues values=subs[i].docValues(field);
      if (values != null) {
        subs2.add(new MultiDocValues.DocValuesIndex(values,i));
        slices2.add(subSlices[i]);
      }
    }
    result=subs2.isEmpty() ? null : new MultiDocValues(subs2.toArray(DocValuesIndex.EMPTY_ARRAY),slices2.toArray(ReaderUtil.Slice.EMPTY_ARRAY));
    docValues.put(field,result);
  }
 else {
    result=docValues.get(field);
  }
  return result;
}
