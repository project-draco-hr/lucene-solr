{
  PayloadNearQuery query;
  TopDocs hits;
  query=newPhraseQuery("field","twenty two",true,new AveragePayloadFunction());
  QueryUtils.check(query);
  hits=searcher.search(query,null,100);
  assertTrue("hits is null and it shouldn't be",hits != null);
  assertTrue("should be 10 hits",hits.totalHits == 10);
  for (int j=0; j < hits.scoreDocs.length; j++) {
    ScoreDoc doc=hits.scoreDocs[j];
    assertTrue(doc.score + " does not equal: " + 3,doc.score == 3);
  }
  for (int i=1; i < 10; i++) {
    query=newPhraseQuery("field",English.intToEnglish(i) + " hundred",true,new AveragePayloadFunction());
    hits=searcher.search(query,null,100);
    assertTrue("hits is null and it shouldn't be",hits != null);
    assertTrue("should be 100 hits",hits.totalHits == 100);
    for (int j=0; j < hits.scoreDocs.length; j++) {
      ScoreDoc doc=hits.scoreDocs[j];
      assertTrue(doc.score + " does not equal: " + 3,doc.score == 3);
    }
  }
}
