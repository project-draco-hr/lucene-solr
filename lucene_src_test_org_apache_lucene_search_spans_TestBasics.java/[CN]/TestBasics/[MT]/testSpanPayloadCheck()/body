{
  SpanTermQuery term1=new SpanTermQuery(new Term("field","five"));
  Payload pay=new Payload(("pos: " + 5).getBytes());
  SpanQuery query=new SpanPayloadCheckQuery(term1,Collections.singletonList(pay.getData()));
  checkHits(query,new int[]{5});
  assertTrue(searcher.explain(query,5).getValue() > 0.0f);
  SpanTermQuery term2=new SpanTermQuery(new Term("field","hundred"));
  SpanNearQuery snq;
  SpanQuery[] clauses;
  List<byte[]> list;
  Payload pay2;
  clauses=new SpanQuery[2];
  clauses[0]=term1;
  clauses[1]=term2;
  snq=new SpanNearQuery(clauses,0,true);
  pay=new Payload(("pos: " + 1656).getBytes());
  pay2=new Payload(("pos: " + 1657).getBytes());
  list=new ArrayList<byte[]>();
  list.add(pay.getData());
  list.add(pay2.getData());
  query=new SpanNearPayloadCheckQuery(snq,list);
  checkHits(query,new int[]{500});
  clauses=new SpanQuery[3];
  clauses[0]=term1;
  clauses[1]=term2;
  clauses[2]=new SpanTermQuery(new Term("field","five"));
  snq=new SpanNearQuery(clauses,0,true);
  pay=new Payload(("pos: " + 1670).getBytes());
  pay2=new Payload(("pos: " + 1671).getBytes());
  Payload pay3=new Payload(("pos: " + 1672).getBytes());
  list=new ArrayList<byte[]>();
  list.add(pay.getData());
  list.add(pay2.getData());
  list.add(pay3.getData());
  query=new SpanNearPayloadCheckQuery(snq,list);
  checkHits(query,new int[]{505});
}
