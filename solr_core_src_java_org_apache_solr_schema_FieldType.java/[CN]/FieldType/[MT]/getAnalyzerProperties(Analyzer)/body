{
  SimpleOrderedMap<Object> analyzerProps=new SimpleOrderedMap<Object>();
  analyzerProps.add(CLASS_NAME,normalizeSPIname(analyzer.getClass().getName()));
  if (analyzer instanceof TokenizerChain) {
    Map<String,String> factoryArgs;
    TokenizerChain tokenizerChain=(TokenizerChain)analyzer;
    CharFilterFactory[] charFilterFactories=tokenizerChain.getCharFilterFactories();
    if (null != charFilterFactories && charFilterFactories.length > 0) {
      List<SimpleOrderedMap<Object>> charFilterProps=new ArrayList<SimpleOrderedMap<Object>>();
      for (      CharFilterFactory charFilterFactory : charFilterFactories) {
        SimpleOrderedMap<Object> props=new SimpleOrderedMap<Object>();
        props.add(CLASS_NAME,normalizeSPIname(charFilterFactory.getClass().getName()));
        factoryArgs=charFilterFactory.getOriginalArgs();
        if (null != factoryArgs) {
          for (          String key : factoryArgs.keySet()) {
            props.add(key,factoryArgs.get(key));
          }
        }
        charFilterProps.add(props);
      }
      analyzerProps.add(CHAR_FILTERS,charFilterProps);
    }
    SimpleOrderedMap<Object> tokenizerProps=new SimpleOrderedMap<Object>();
    TokenizerFactory tokenizerFactory=tokenizerChain.getTokenizerFactory();
    tokenizerProps.add(CLASS_NAME,normalizeSPIname(tokenizerFactory.getClass().getName()));
    factoryArgs=tokenizerFactory.getOriginalArgs();
    if (null != factoryArgs) {
      for (      String key : factoryArgs.keySet()) {
        tokenizerProps.add(key,factoryArgs.get(key));
      }
    }
    analyzerProps.add(TOKENIZER,tokenizerProps);
    TokenFilterFactory[] filterFactories=tokenizerChain.getTokenFilterFactories();
    if (null != filterFactories && filterFactories.length > 0) {
      List<SimpleOrderedMap<Object>> filterProps=new ArrayList<SimpleOrderedMap<Object>>();
      for (      TokenFilterFactory filterFactory : filterFactories) {
        SimpleOrderedMap<Object> props=new SimpleOrderedMap<Object>();
        props.add(CLASS_NAME,normalizeSPIname(filterFactory.getClass().getName()));
        factoryArgs=filterFactory.getOriginalArgs();
        if (null != factoryArgs) {
          for (          String key : factoryArgs.keySet()) {
            props.add(key,factoryArgs.get(key));
          }
        }
        filterProps.add(props);
      }
      analyzerProps.add(FILTERS,filterProps);
    }
  }
  return analyzerProps;
}
