{
  DIHConfiguration config;
  List<Map<String,String>> functions=new ArrayList<Map<String,String>>();
  Script script=null;
  Map<String,Map<String,String>> dataSources=new HashMap<String,Map<String,String>>();
  NodeList dataConfigTags=xmlDocument.getElementsByTagName("dataConfig");
  if (dataConfigTags == null || dataConfigTags.getLength() == 0) {
    throw new DataImportHandlerException(SEVERE,"the root node '<dataConfig>' is missing");
  }
  Element e=(Element)dataConfigTags.item(0);
  List<Element> documentTags=ConfigParseUtil.getChildNodes(e,"document");
  if (documentTags.isEmpty()) {
    throw new DataImportHandlerException(SEVERE,"DataImportHandler " + "configuration file must have one <document> node.");
  }
  List<Element> scriptTags=ConfigParseUtil.getChildNodes(e,ConfigNameConstants.SCRIPT);
  if (!scriptTags.isEmpty()) {
    script=new Script(scriptTags.get(0));
  }
  List<Element> functionTags=ConfigParseUtil.getChildNodes(e,ConfigNameConstants.FUNCTION);
  if (!functionTags.isEmpty()) {
    for (    Element element : functionTags) {
      String func=ConfigParseUtil.getStringAttribute(element,NAME,null);
      String clz=ConfigParseUtil.getStringAttribute(element,ConfigNameConstants.CLASS,null);
      if (func == null || clz == null) {
        throw new DataImportHandlerException(SEVERE,"<function> must have a 'name' and 'class' attributes");
      }
 else {
        functions.add(ConfigParseUtil.getAllAttributes(element));
      }
    }
  }
  List<Element> dataSourceTags=ConfigParseUtil.getChildNodes(e,DATA_SRC);
  if (!dataSourceTags.isEmpty()) {
    for (    Element element : dataSourceTags) {
      Map<String,String> p=new HashMap<String,String>();
      HashMap<String,String> attrs=ConfigParseUtil.getAllAttributes(element);
      for (      Map.Entry<String,String> entry : attrs.entrySet()) {
        p.put(entry.getKey(),entry.getValue());
      }
      dataSources.put(p.get("name"),p);
    }
  }
  if (dataSources.get(null) == null) {
    for (    Map<String,String> properties : dataSources.values()) {
      dataSources.put(null,properties);
      break;
    }
  }
  return new DIHConfiguration(documentTags.get(0),this,functions,script,dataSources);
}
