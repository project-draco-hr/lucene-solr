{
  DateMathParser dmp=new DateMathParser(DateField.UTC,Locale.US);
synchronized (this) {
    IndexCommit last=commits.get(commits.size() - 1);
    log.info("last commit = " + last.getVersion());
    int numCommitsToDelete=commits.size() - maxCommitsToKeep;
    int i=0;
    for (    IndexCommit commit : commits) {
      if (commit == last) {
        continue;
      }
      if (i < numCommitsToDelete) {
        commit.delete();
        i++;
        continue;
      }
      try {
        if (maxCommitAge != null)         if (commit.getDirectory().fileModified(commit.getSegmentsFileName()) < dmp.parseMath(maxCommitAge).getTime()) {
          commit.delete();
          continue;
        }
      }
 catch (      Exception e) {
        log.warn("Exception while checking commit point's age for deletion",e);
      }
      if (keepOptimizedOnly) {
        if (!commit.isOptimized()) {
          commit.delete();
          log.info("Marking unoptimized index " + getId(commit) + " for deletion.");
        }
      }
    }
  }
}
