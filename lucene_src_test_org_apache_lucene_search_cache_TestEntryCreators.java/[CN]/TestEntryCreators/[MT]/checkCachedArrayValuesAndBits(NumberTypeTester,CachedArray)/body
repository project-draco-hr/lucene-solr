{
  int numDocs=0;
  Set<Number> distinctTerms=new HashSet<Number>();
  for (int i=0; i < NUM_DOCS; i++) {
    Number v=tester.values[i];
    boolean isValid=cachedVals.valid.get(i);
    if (v != null) {
      numDocs++;
      distinctTerms.add(v);
      assertTrue("Valid bit should be true (" + i + "="+ tester.values[i]+ ") "+ tester,isValid);
    }
 else {
      assertFalse("Valid bit should be false (" + i + ") "+ tester,isValid);
    }
  }
  assertEquals("Cached numTerms does not match : " + tester,distinctTerms.size(),cachedVals.numTerms);
  assertEquals("Cached numDocs does not match : " + tester,numDocs,cachedVals.numDocs);
  assertEquals("Ordinal should match numDocs : " + tester,numDocs,((OpenBitSet)cachedVals.valid).cardinality());
}
