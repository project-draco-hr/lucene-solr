{
  super.setUp();
  directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));
  typeTests=new NumberTypeTester[]{new NumberTypeTester("theRandomByte","getBytes",ByteValuesCreator.class,ByteParser.class),new NumberTypeTester("theRandomShort","getShorts",ShortValuesCreator.class,ShortParser.class),new NumberTypeTester("theRandomInt","getInts",IntValuesCreator.class,IntParser.class),new NumberTypeTester("theRandomLong","getLongs",LongValuesCreator.class,LongParser.class),new NumberTypeTester("theRandomFloat","getFloats",FloatValuesCreator.class,FloatParser.class),new NumberTypeTester("theRandomDouble","getDoubles",DoubleValuesCreator.class,DoubleParser.class)};
  for (int i=0; i < NUM_DOCS; i++) {
    Document doc=new Document();
    for (    NumberTypeTester tester : typeTests) {
      if (random.nextInt(20) != 17 && i > 1) {
        tester.values[i]=10 + random.nextInt(20);
        FieldType customType=new FieldType(TextField.TYPE_UNSTORED);
        customType.setTokenized(false);
        doc.add(newField(tester.field,String.valueOf(tester.values[i]),customType));
      }
    }
    writer.addDocument(doc);
  }
  reader=writer.getReader();
  writer.close();
}
