{
  final List<Throwable> failures=new ArrayList<>();
  final String serverUrl=jetty.getBaseUrl().toString() + "/collection1";
  try (ConcurrentUpdateSolrClient concurrentClient=new FailureRecordingConcurrentUpdateSolrClient(serverUrl,2,2)){
    int docId=42;
    for (    UpdateRequest.ACTION action : EnumSet.allOf(UpdateRequest.ACTION.class)) {
      for (      boolean waitSearch : Arrays.asList(true,false)) {
        for (        boolean waitFlush : Arrays.asList(true,false)) {
          UpdateRequest updateRequest=new UpdateRequest();
          SolrInputDocument document=new SolrInputDocument();
          document.addField("id",docId++);
          updateRequest.add(document);
          updateRequest.setAction(action,waitSearch,waitFlush);
          concurrentClient.request(updateRequest);
        }
      }
    }
    concurrentClient.commit();
    concurrentClient.blockUntilFinished();
  }
   if (0 != failures.size()) {
    assertEquals(failures.size() + " Unexpected Exception, starting with...",null,failures.get(0));
  }
}
