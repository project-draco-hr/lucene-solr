{
  final int runBase=runEnd(0);
  if (runBase == hi) {
    return 1;
  }
  int l=1;
  if (compare(runBase,runBase + 1) > 0) {
    while (runBase + l <= hi && compare(runBase + l - 1,runBase + l) > 0) {
      ++l;
    }
    if (l < minRun && runBase + l <= hi) {
      l=Math.min(hi - runBase + 1,minRun);
      binarySort(runBase,runBase + l - 1);
    }
 else {
      for (int i=0, halfL=l >>> 1; i < halfL; ++i) {
        swap(runBase + i,runBase + l - i - 1);
      }
    }
  }
 else {
    while (runBase + l <= hi && compare(runBase + l - 1,runBase + l) <= 0) {
      ++l;
    }
    if (l < minRun && runBase + l <= hi) {
      l=Math.min(hi - runBase + 1,minRun);
      binarySort(runBase,runBase + l - 1);
    }
  }
  return l;
}
