{
  assertLongRangeSplit(-5000L,9500L,4,true,Arrays.asList(new Long[]{Long.valueOf(0x7fffffffffffec78L),Long.valueOf(0x7fffffffffffec7fL),Long.valueOf(0x8000000000002510L),Long.valueOf(0x800000000000251cL),Long.valueOf(0x7fffffffffffec8L),Long.valueOf(0x7fffffffffffecfL),Long.valueOf(0x800000000000250L),Long.valueOf(0x800000000000250L),Long.valueOf(0x7fffffffffffedL),Long.valueOf(0x7fffffffffffefL),Long.valueOf(0x80000000000020L),Long.valueOf(0x80000000000024L),Long.valueOf(0x7ffffffffffffL),Long.valueOf(0x8000000000001L)}).iterator(),Arrays.asList(new Integer[]{Integer.valueOf(0),Integer.valueOf(0),Integer.valueOf(4),Integer.valueOf(4),Integer.valueOf(8),Integer.valueOf(8),Integer.valueOf(12)}).iterator());
  assertLongRangeSplit(-5000L,9500L,64,true,Arrays.asList(new Long[]{Long.valueOf(0x7fffffffffffec78L),Long.valueOf(0x800000000000251cL)}).iterator(),Arrays.asList(new Integer[]{Integer.valueOf(0)}).iterator());
  assertLongRangeSplit(0L,1024L + 63L,4,true,Arrays.asList(new Long[]{Long.valueOf(0x800000000000040L),Long.valueOf(0x800000000000043L),Long.valueOf(0x80000000000000L),Long.valueOf(0x80000000000003L)}).iterator(),Arrays.asList(new Integer[]{Integer.valueOf(4),Integer.valueOf(8)}).iterator());
  assertLongRangeSplit(Long.MIN_VALUE,Long.MAX_VALUE,8,false,Arrays.asList(new Long[]{Long.valueOf(0x00L),Long.valueOf(0xffL)}).iterator(),Arrays.asList(new Integer[]{Integer.valueOf(56)}).iterator());
  assertLongRangeSplit(Long.MIN_VALUE,Long.MAX_VALUE,4,false,Arrays.asList(new Long[]{Long.valueOf(0x0L),Long.valueOf(0xfL)}).iterator(),Arrays.asList(new Integer[]{Integer.valueOf(60)}).iterator());
  assertLongRangeSplit(Long.MIN_VALUE,Long.MAX_VALUE,2,false,Arrays.asList(new Long[]{Long.valueOf(0x0L),Long.valueOf(0x3L)}).iterator(),Arrays.asList(new Integer[]{Integer.valueOf(62)}).iterator());
  assertLongRangeSplit(Long.MIN_VALUE,Long.MAX_VALUE,1,false,Arrays.asList(new Long[]{Long.valueOf(0x0L),Long.valueOf(0x1L)}).iterator(),Arrays.asList(new Integer[]{Integer.valueOf(63)}).iterator());
  assertLongRangeSplit(9500L,-5000L,4,false,Collections.<Long>emptyList().iterator(),Collections.<Integer>emptyList().iterator());
  assertLongRangeSplit(9500L,9500L,4,false,Arrays.asList(new Long[]{Long.valueOf(0x800000000000251cL),Long.valueOf(0x800000000000251cL)}).iterator(),Arrays.asList(new Integer[]{Integer.valueOf(0)}).iterator());
}
