{
  boolean indexHasPositions=fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;
  boolean indexHasOffsets=fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
  boolean indexHasPayloads=fieldInfo.hasPayloads();
  if (indexHasPositions == false || PostingsEnum.featureRequested(flags,PostingsEnum.POSITIONS) == false) {
    BlockDocsEnum docsEnum;
    if (reuse instanceof BlockDocsEnum) {
      docsEnum=(BlockDocsEnum)reuse;
      if (!docsEnum.canReuse(docIn,fieldInfo)) {
        docsEnum=new BlockDocsEnum(fieldInfo);
      }
    }
 else {
      docsEnum=new BlockDocsEnum(fieldInfo);
    }
    return docsEnum.reset((IntBlockTermState)termState,flags);
  }
 else   if ((indexHasOffsets == false || PostingsEnum.featureRequested(flags,PostingsEnum.OFFSETS) == false) && (indexHasPayloads == false || PostingsEnum.featureRequested(flags,PostingsEnum.PAYLOADS) == false)) {
    BlockPostingsEnum docsAndPositionsEnum;
    if (reuse instanceof BlockPostingsEnum) {
      docsAndPositionsEnum=(BlockPostingsEnum)reuse;
      if (!docsAndPositionsEnum.canReuse(docIn,fieldInfo)) {
        docsAndPositionsEnum=new BlockPostingsEnum(fieldInfo);
      }
    }
 else {
      docsAndPositionsEnum=new BlockPostingsEnum(fieldInfo);
    }
    return docsAndPositionsEnum.reset((IntBlockTermState)termState);
  }
 else {
    EverythingEnum everythingEnum;
    if (reuse instanceof EverythingEnum) {
      everythingEnum=(EverythingEnum)reuse;
      if (!everythingEnum.canReuse(docIn,fieldInfo)) {
        everythingEnum=new EverythingEnum(fieldInfo);
      }
    }
 else {
      everythingEnum=new EverythingEnum(fieldInfo);
    }
    return everythingEnum.reset((IntBlockTermState)termState,flags);
  }
}
