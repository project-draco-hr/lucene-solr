{
  CharacterRunAutomaton stopSet=new CharacterRunAutomaton(BasicAutomata.makeString("on"));
  Analyzer oneStopAnalyzer=new MockAnalyzer(random(),MockTokenizer.SIMPLE,true,stopSet);
  PrecedenceQueryParser qp=new PrecedenceQueryParser();
  qp.setAnalyzer(oneStopAnalyzer);
  Query q=qp.parse("on^1.0","field");
  assertNotNull(q);
  q=qp.parse("\"hello\"^2.0","field");
  assertNotNull(q);
  assertEquals(q.getBoost(),(float)2.0,(float)0.5);
  q=qp.parse("hello^2.0","field");
  assertNotNull(q);
  assertEquals(q.getBoost(),(float)2.0,(float)0.5);
  q=qp.parse("\"on\"^1.0","field");
  assertNotNull(q);
  q=getParser(new MockAnalyzer(random(),MockTokenizer.SIMPLE,true,MockTokenFilter.ENGLISH_STOPSET)).parse("the^3","field");
  assertNotNull(q);
}
