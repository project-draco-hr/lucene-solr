{
  ServerBaseEntry e=createServerBaseEntry(ENTRYID,FEEDID);
  e.setUpdated(new DateTime(System.currentTimeMillis() - 200,0));
  StorageEntryWrapper wrapper=new StorageEntryWrapper(e,StorageOperation.INSERT);
  this.buffer.addEntry(wrapper);
  assertEquals(new Long(e.getUpdated().getValue()),this.buffer.getFeedLastModified(FEEDID));
  e.setUpdated(new DateTime(System.currentTimeMillis() - 180,0));
  wrapper=new StorageEntryWrapper(e,StorageOperation.UPDATE);
  this.buffer.addEntry(wrapper);
  Long firstAddTimestamp=new Long(e.getUpdated().getValue());
  assertEquals(firstAddTimestamp,this.buffer.getFeedLastModified(FEEDID));
  e.setUpdated(new DateTime(System.currentTimeMillis() - 160,0));
  assertFalse("updated after add",e.getUpdated().equals(this.buffer.getFeedLastModified(FEEDID)));
  String otherID="someOtherFeedID";
  e.setFeedId(otherID);
  e.setUpdated(new DateTime(System.currentTimeMillis() - 140,0));
  wrapper=new StorageEntryWrapper(e,StorageOperation.INSERT);
  this.buffer.addEntry(wrapper);
  assertEquals(new Long(e.getUpdated().getValue()),this.buffer.getFeedLastModified(otherID));
  assertEquals(firstAddTimestamp,this.buffer.getFeedLastModified(FEEDID));
  assertTrue(firstAddTimestamp.equals(this.buffer.getFeedLastModified(FEEDID)));
  this.buffer.addDeleted(e.getId(),FEEDID);
  assertTrue(firstAddTimestamp < this.buffer.getFeedLastModified(FEEDID));
}
