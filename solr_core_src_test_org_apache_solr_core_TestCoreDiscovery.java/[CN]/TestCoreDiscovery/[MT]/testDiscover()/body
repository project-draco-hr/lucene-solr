{
  setMeUp();
  addSolrXml();
  addCoreWithProps(makeCorePropFile("core1",false,true));
  addCoreWithProps(makeCorePropFile("core2",false,false));
  addCoreWithProps(makeCorePropFile("lazy1",true,false));
  CoreContainer cc=init();
  try {
    Properties props=cc.containerProperties;
    assertEquals("/admin/cores",cc.getAdminPath());
    assertEquals("defcore",cc.getDefaultCoreName());
    assertEquals("222.333.444.555",cc.getHost());
    assertEquals("6000",cc.getHostPort());
    assertEquals("solrprop",cc.getHostContext());
    assertEquals(20,cc.getZkClientTimeout());
    TestLazyCores.checkInCores(cc,"core1");
    TestLazyCores.checkNotInCores(cc,"lazy1","core2","collection1");
    SolrCore core1=cc.getCore("core1");
    CoreDescriptor desc=core1.getCoreDescriptor();
    assertEquals("core1",desc.getProperty("solr.core.name"));
    assertNotNull(desc.getProperty("solr.core.instanceDir"));
    assertEquals("stuffandnonsense",desc.getProperty("solr.core.dataDir"));
    assertEquals("solrconfig-minimal.xml",desc.getProperty("solr.core.configName"));
    assertEquals("schema-tiny.xml",desc.getProperty("solr.core.schemaName"));
    SolrCore core2=cc.getCore("core2");
    SolrCore lazy1=cc.getCore("lazy1");
    TestLazyCores.checkInCores(cc,"core1","core2","lazy1");
    core1.close();
    core2.close();
    lazy1.close();
  }
  finally {
    cc.shutdown();
  }
}
