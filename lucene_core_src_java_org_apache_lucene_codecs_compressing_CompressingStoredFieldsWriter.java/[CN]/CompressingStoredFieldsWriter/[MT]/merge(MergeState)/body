{
  int docCount=0;
  int numReaders=mergeState.maxDocs.length;
  MatchingReaders matching=new MatchingReaders(mergeState);
  for (int readerIndex=0; readerIndex < numReaders; readerIndex++) {
    CompressingStoredFieldsReader matchingFieldsReader=null;
    if (matching.matchingReaders[readerIndex]) {
      final StoredFieldsReader fieldsReader=mergeState.storedFieldsReaders[readerIndex];
      if (fieldsReader != null && fieldsReader instanceof CompressingStoredFieldsReader) {
        matchingFieldsReader=(CompressingStoredFieldsReader)fieldsReader;
      }
    }
    final int maxDoc=mergeState.maxDocs[readerIndex];
    final Bits liveDocs=mergeState.liveDocs[readerIndex];
    if (matchingFieldsReader == null || matchingFieldsReader.getVersion() != VERSION_CURRENT) {
      StoredFieldsReader storedFieldsReader=mergeState.storedFieldsReaders[readerIndex];
      if (storedFieldsReader != null) {
        storedFieldsReader.checkIntegrity();
      }
      for (int docID=0; docID < maxDoc; docID++) {
        if (liveDocs != null && liveDocs.get(docID) == false) {
          continue;
        }
        DocumentStoredFieldVisitor visitor=new DocumentStoredFieldVisitor();
        storedFieldsReader.visitDocument(docID,visitor);
        addDocument(visitor.getDocument(),mergeState.mergeFieldInfos);
        ++docCount;
        mergeState.checkAbort.work(300);
      }
    }
 else {
      matchingFieldsReader.checkIntegrity();
      for (int docID=0; docID < maxDoc; docID++) {
        if (liveDocs != null && liveDocs.get(docID) == false) {
          continue;
        }
        SerializedDocument doc=matchingFieldsReader.document(docID);
        startDocument();
        bufferedDocs.copyBytes(doc.in,doc.length);
        numStoredFieldsInDoc=doc.numStoredFields;
        finishDocument();
        ++docCount;
        mergeState.checkAbort.work(300);
      }
    }
  }
  finish(mergeState.mergeFieldInfos,docCount);
  return docCount;
}
