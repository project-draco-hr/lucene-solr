{
  final int numBits=TestUtil.nextInt(random(),100,1 << 20);
  for (  float percentSet : new float[]{0f,0.0001f,random().nextFloat() / 2,0.9f,1f}) {
    final BitSet set=randomSet(numBits,percentSet);
    final T copy=copyOf(set,numBits);
    assertEquals(numBits,set,copy);
  }
  BitSet set=new BitSet(numBits);
  set.set(0);
  T copy=copyOf(set,numBits);
  assertEquals(numBits,set,copy);
  set.clear(0);
  set.set(random().nextInt(numBits));
  copy=copyOf(set,numBits);
  assertEquals(numBits,set,copy);
  for (int inc=2; inc < 1000; inc+=TestUtil.nextInt(random(),1,100)) {
    set=new BitSet(numBits);
    for (int d=random().nextInt(10); d < numBits; d+=inc) {
      set.set(d);
    }
    copy=copyOf(set,numBits);
    assertEquals(numBits,set,copy);
  }
}
