{
  final int iters=atLeast(100);
  for (int iter=0; iter < iters; ++iter) {
    final int maxDoc=TestUtil.nextInt(random(),100,10000);
    final int numIterators=TestUtil.nextInt(random(),2,5);
    final FixedBitSet[] sets=new FixedBitSet[numIterators];
    final Scorer[] iterators=new Scorer[numIterators];
    for (int i=0; i < iterators.length; ++i) {
      final FixedBitSet set=randomSet(maxDoc);
switch (random().nextInt(3)) {
case 0:
        sets[i]=set;
      iterators[i]=new ConstantScoreScorer(null,0f,anonymizeIterator(new BitDocIdSet(set).iterator()));
    break;
case 1:
  sets[i]=set;
iterators[i]=new ConstantScoreScorer(null,0f,new BitDocIdSet(set).iterator());
break;
default :
final FixedBitSet confirmed=clearRandomBits(set);
sets[i]=confirmed;
final TwoPhaseIterator approximation=approximation(new BitDocIdSet(set).iterator(),confirmed);
iterators[i]=scorer(approximation);
break;
}
}
final DocIdSetIterator conjunction=ConjunctionDISI.intersectScorers(Arrays.asList(iterators));
assertEquals(intersect(sets),toBitSet(maxDoc,conjunction));
}
}
