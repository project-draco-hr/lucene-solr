{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())));
  Document doc=new Document();
  FieldType type=new FieldType(TextField.TYPE_NOT_STORED);
  type.setStoreTermVectorOffsets(true);
  type.setStoreTermVectorPositions(true);
  type.setStoreTermVectors(true);
  type.freeze();
  Token syn=new Token("httpwwwfacebookcom",6,29);
  syn.setPositionIncrement(0);
  CannedTokenStream ts=new CannedTokenStream(new Token("test",0,4),new Token("http",6,10),syn,new Token("www",13,16),new Token("facebook",17,25),new Token("com",26,29));
  Field field=new Field("field",ts,type);
  doc.add(field);
  doc.add(new StoredField("field","Test: http://www.facebook.com"));
  writer.addDocument(doc);
  FastVectorHighlighter highlighter=new FastVectorHighlighter();
  IndexReader reader=DirectoryReader.open(writer);
  int docId=0;
  PhraseQuery pq=new PhraseQuery("field","test","http","www","facebook","com");
  FieldQuery fieldQuery=highlighter.getFieldQuery(pq,reader);
  String[] bestFragments=highlighter.getBestFragments(fieldQuery,reader,docId,"field",54,1);
  assertEquals("<b>Test: http://www.facebook.com</b>",bestFragments[0]);
  PhraseQuery pq2=new PhraseQuery("field","test","httpwwwfacebookcom","www","facebook","com");
  fieldQuery=highlighter.getFieldQuery(pq2,reader);
  bestFragments=highlighter.getBestFragments(fieldQuery,reader,docId,"field",54,1);
  assertEquals("<b>Test: http://www.facebook.com</b>",bestFragments[0]);
  BooleanQuery.Builder bq=new BooleanQuery.Builder();
  bq.add(pq,BooleanClause.Occur.SHOULD);
  bq.add(pq2,BooleanClause.Occur.SHOULD);
  fieldQuery=highlighter.getFieldQuery(bq.build(),reader);
  bestFragments=highlighter.getBestFragments(fieldQuery,reader,docId,"field",54,1);
  assertEquals("<b>Test: http://www.facebook.com</b>",bestFragments[0]);
  reader.close();
  writer.close();
  dir.close();
}
