{
  String[] doc={"id","1","term_s","YYYY",group,"1","test_ti","5","test_tl","10","test_tf","2000"};
  assertU(adoc(doc));
  assertU(commit());
  String[] doc1={"id","2","term_s","YYYY",group,"1","test_ti","50","test_tl","100","test_tf","200"};
  assertU(adoc(doc1));
  String[] doc2={"id","3","term_s","YYYY","test_ti","5000","test_tl","100","test_tf","200"};
  assertU(adoc(doc2));
  assertU(commit());
  String[] doc3={"id","4","term_s","YYYY","test_ti","500","test_tl","1000","test_tf","2000"};
  assertU(adoc(doc3));
  String[] doc4={"id","5","term_s","YYYY",group,"2","test_ti","4","test_tl","10","test_tf","2000"};
  assertU(adoc(doc4));
  assertU(commit());
  String[] doc5={"id","6","term_s","YYYY",group,"2","test_ti","10","test_tl","100","test_tf","200"};
  assertU(adoc(doc5));
  assertU(commit());
  String[] doc6={"id","7","term_s","YYYY",group,"1","test_ti","8","test_tl","50","test_tf","300"};
  assertU(adoc(doc6));
  assertU(commit());
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + ""+ hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  assertQ(req(params,"indent","on"),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='2.0']","//result/doc[2]/float[@name='id'][.='6.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " nullPolicy=expand min=test_tf"+ hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  params.add("sort","");
  assertQ(req(params),"*[count(//doc)=4]","//result/doc[1]/float[@name='id'][.='3.0']","//result/doc[2]/float[@name='id'][.='4.0']","//result/doc[3]/float[@name='id'][.='2.0']","//result/doc[4]/float[@name='id'][.='6.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " nullPolicy=collapse min=field(test_ti)"+ hint+ "}");
  params.add("sort","test_ti desc");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='4.0']","//result/doc[2]/float[@name='id'][.='1.0']","//result/doc[3]/float[@name='id'][.='5.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " nullPolicy=collapse min=cscore()"+ hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='4.0']","//result/doc[2]/float[@name='id'][.='1.0']","//result/doc[3]/float[@name='id'][.='5.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " nullPolicy=collapse min=cscore()"+ hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  params.add("fl","id");
  params.add("sort","id desc");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='4.0']","//result/doc[3]/float[@name='id'][.='1.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " nullPolicy=collapse min=sum(cscore(),field(test_ti))"+ hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='4.0']","//result/doc[2]/float[@name='id'][.='1.0']","//result/doc[3]/float[@name='id'][.='5.0']");
  params=new ModifiableSolrParams();
  params.add("q","YYYY");
  params.add("fq","{!collapse field=" + group + " nullPolicy=collapse"+ hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  params.add("qf","term_s");
  params.add("qt","/elevate");
  assertQ(req(params),"*[count(//doc)=4]","//result/doc[1]/float[@name='id'][.='1.0']","//result/doc[2]/float[@name='id'][.='2.0']","//result/doc[3]/float[@name='id'][.='3.0']","//result/doc[4]/float[@name='id'][.='6.0']");
  for (  String maxscore : new String[]{"  "," sort='score desc' "}) {
    params=new ModifiableSolrParams();
    params.add("q","YYYY");
    params.add("fq","{!collapse field=" + group + maxscore+ " nullPolicy=collapse"+ hint+ "}");
    params.add("defType","edismax");
    params.add("bf","field(test_ti)");
    params.add("qf","term_s");
    params.add("qt","/elevate");
    params.add("elevateIds","1,5");
    assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='1.0']","//result/doc[2]/float[@name='id'][.='5.0']","//result/doc[3]/float[@name='id'][.='3.0']");
  }
  for (  String max : new String[]{" max=test_ti "," sort='test_ti desc' "}) {
    params=new ModifiableSolrParams();
    params.add("q","YYYY");
    params.add("fq","{!collapse field=" + group + max+ "nullPolicy=collapse"+ hint+ "}");
    params.add("defType","edismax");
    params.add("bf","field(test_ti)");
    params.add("qf","term_s");
    params.add("qt","/elevate");
    params.add("elevateIds","1,5");
    assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='1.0']","//result/doc[2]/float[@name='id'][.='5.0']","//result/doc[3]/float[@name='id'][.='3.0']");
  }
  for (  String min : new String[]{" min=test_ti "," sort='test_ti asc' "}) {
    params=new ModifiableSolrParams();
    params.add("q","YYYY");
    params.add("fq","{!collapse field=" + group + min+ "nullPolicy=collapse"+ hint+ "}");
    params.add("defType","edismax");
    params.add("bf","field(test_ti)");
    params.add("qf","term_s");
    params.add("qt","/elevate");
    params.add("elevateIds","1,5");
    assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='1.0']","//result/doc[2]/float[@name='id'][.='5.0']","//result/doc[3]/float[@name='id'][.='4.0']");
  }
  params=new ModifiableSolrParams();
  params.add("q","YYYY");
  params.add("fq","{!collapse field=" + group + ""+ hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  params.add("qf","term_s");
  params.add("qt","/elevate");
  params.add("elevateIds","3,4");
  assertQ(req(params),"*[count(//doc)=4]","//result/doc[1]/float[@name='id'][.='3.0']","//result/doc[2]/float[@name='id'][.='4.0']","//result/doc[3]/float[@name='id'][.='2.0']","//result/doc[4]/float[@name='id'][.='6.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " nullPolicy=collapse sort='term_s asc, test_ti asc' "+ hint+ "}");
  params.add("sort","id desc");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='4.0']","//result/doc[3]/float[@name='id'][.='1.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " nullPolicy=collapse sort='term_s asc, test_ti desc' "+ hint+ "}");
  params.add("sort","id desc");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='6.0']","//result/doc[2]/float[@name='id'][.='3.0']","//result/doc[3]/float[@name='id'][.='2.0']");
  for (  String min : new String[]{" min=test_ti "," sort='test_ti asc' "}) {
    params=new ModifiableSolrParams();
    params.add("q","*:*");
    params.add("fq","{!collapse field=" + group + min+ hint+ "}");
    params.add("sort","id desc");
    assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='1.0']");
    params=new ModifiableSolrParams();
    params.add("q","*:*");
    params.add("fq","{!collapse field=" + group + min+ hint+ "}");
    params.add("sort","id asc");
    assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='1.0']","//result/doc[2]/float[@name='id'][.='5.0']");
    params=new ModifiableSolrParams();
    params.add("q","*:*");
    params.add("fq","{!collapse field=" + group + min+ hint+ "}");
    params.add("sort","test_tl asc,id desc");
    assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='1.0']");
    params=new ModifiableSolrParams();
    params.add("q","*:*");
    params.add("fq","{!collapse field=" + group + min+ hint+ "}");
    params.add("sort","score desc,id asc");
    params.add("defType","edismax");
    params.add("bf","field(id)");
    assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='1.0']");
  }
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " max=test_ti"+ hint+ "}");
  params.add("sort","test_ti asc");
  assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='6.0']","//result/doc[2]/float[@name='id'][.='2.0']");
  try {
    params=new ModifiableSolrParams();
    params.add("q","*:*");
    params.add("fq","{!collapse field=" + group + " min=test_tl"+ hint+ "}");
    params.add("sort","test_ti desc");
    assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='1.0']","//result/doc[2]/float[@name='id'][.='5.0']");
    params=new ModifiableSolrParams();
    params.add("q","*:*");
    params.add("fq","{!collapse field=" + group + " max=test_tl"+ hint+ "}");
    params.add("sort","test_ti desc");
    assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='2.0']","//result/doc[2]/float[@name='id'][.='6.0']");
  }
 catch (  Exception e) {
    if (!numeric) {
      throw e;
    }
  }
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " min=test_tf"+ hint+ "}");
  params.add("sort","test_ti desc");
  assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='2.0']","//result/doc[2]/float[@name='id'][.='6.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " max=test_tf"+ hint+ "}");
  params.add("sort","test_ti asc");
  assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='1.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " max=test_tf"+ hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(id)");
  params.add("fl","score, id");
  params.add("facet","true");
  params.add("fq","{!tag=test}term_s:YYYY");
  params.add("facet.field","{!ex=test}term_s");
  assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='1.0']");
  for (  String selector : new String[]{" min=bogus_ti "," sort='bogus_ti asc' "," max=bogus_ti "," sort='bogus_ti desc' "," min=bogus_tf "," sort='bogus_tf asc' "," max=bogus_tf "," sort='bogus_tf desc' "," sort='bogus_td asc' "," sort='bogus_td desc' "," sort='bogus_s asc' "," sort='bogus_s desc' "}) {
    params=new ModifiableSolrParams();
    params.add("q","*:*");
    params.add("fq","{!collapse field=" + group + selector+ hint+ "}");
    params.add("sort",group + " asc");
    assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/*[@name='" + group + "'][starts-with(.,'1')]","//result/doc[2]/*[@name='" + group + "'][starts-with(.,'2')]");
  }
  assertQEx("expected error trying to sort on a function that includes cscore()",req(params("q","{!func}sub(sub(test_tl,1000),id)","fq","{!collapse field=" + group + " sort='abs(cscore()) asc, id asc'}","sort","score asc")),SolrException.ErrorCode.BAD_REQUEST);
  for (  String bad : new String[]{"{!collapse field=" + group + " min=test_tf max=test_tf}","{!collapse field=" + group + " min=test_tf sort='test_tf asc'}","{!collapse field=" + group + " max=test_tf sort='test_tf asc'}"}) {
    assertQEx("Expected error: " + bad,req(params("q","*:*","fq",bad)),SolrException.ErrorCode.BAD_REQUEST);
  }
  for (  SolrParams collapse : new SolrParams[]{params("fq","{!collapse field=" + group + " nullPolicy=collapse sort='test_ti asc'"+ hint+ "}"),params("fq","{!collapse field=" + group + " nullPolicy=collapse min='' sort='test_ti asc'"+ hint+ "}"),params("fq","{!collapse field=" + group + " nullPolicy=collapse max='' sort='test_ti asc'"+ hint+ "}"),params("fq","{!collapse field=" + group + " nullPolicy=collapse min=$x sort='test_ti asc'"+ hint+ "}"),params("fq","{!collapse field=" + group + " nullPolicy=collapse min=$x sort='test_ti asc'"+ hint+ "}","x","")}) {
    assertQ(req(collapse,"q","*:*","sort","test_ti desc"),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='4.0']","//result/doc[2]/float[@name='id'][.='1.0']","//result/doc[3]/float[@name='id'][.='5.0']");
  }
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " max=test_tf nullPolicy=expand"+ hint+ "}");
  params.add("sort","id desc");
  assertQ(req(params),"*[count(//doc)=4]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='4.0']","//result/doc[3]/float[@name='id'][.='3.0']","//result/doc[4]/float[@name='id'][.='1.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + " max=test_tf nullPolicy=collapse"+ hint+ "}");
  params.add("sort","id desc");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='5.0']","//result/doc[2]/float[@name='id'][.='4.0']","//result/doc[3]/float[@name='id'][.='1.0']");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + hint+ "}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  params.add("fq","{!tag=test_ti}id:5");
  params.add("facet","true");
  params.add("facet.field","{!ex=test_ti}test_ti");
  params.add("facet.mincount","1");
  assertQ(req(params),"*[count(//doc)=1]","*[count(//lst[@name='facet_fields']/lst[@name='test_ti']/int)=2]");
  params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("fq","{!collapse field=" + group + hint+ "}");
  params.add("group","true");
  params.add("group.field","id");
  assertQ(req(params),"*[count(//doc)=2]");
  assertU(delI("1"));
  assertU(delI("2"));
  assertU(commit());
  params=new ModifiableSolrParams();
  params.add("q","YYYY");
  params.add("fq","{!collapse field=" + group + hint+ " nullPolicy=collapse}");
  params.add("defType","edismax");
  params.add("bf","field(test_ti)");
  params.add("qf","term_s");
  params.add("qt","/elevate");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='3.0']","//result/doc[2]/float[@name='id'][.='6.0']","//result/doc[3]/float[@name='id'][.='7.0']");
}
