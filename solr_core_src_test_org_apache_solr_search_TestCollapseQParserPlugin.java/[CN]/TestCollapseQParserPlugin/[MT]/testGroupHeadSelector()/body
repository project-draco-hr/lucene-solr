{
  GroupHeadSelector s;
  try {
    s=GroupHeadSelector.build(params("sort","foo_s asc","min","bar_s"));
    fail("no exception with multi criteria");
  }
 catch (  SolrException e) {
  }
  s=GroupHeadSelector.build(params("min","foo_s"));
  assertEquals(GroupHeadSelectorType.MIN,s.type);
  assertEquals("foo_s",s.selectorText);
  s=GroupHeadSelector.build(params("max","foo_s"));
  assertEquals(GroupHeadSelectorType.MAX,s.type);
  assertEquals("foo_s",s.selectorText);
  assertFalse(s.equals(GroupHeadSelector.build(params("min","foo_s","other","stuff"))));
  s=GroupHeadSelector.build(params());
  assertEquals(GroupHeadSelectorType.SCORE,s.type);
  assertNotNull(s.selectorText);
  assertEquals(GroupHeadSelector.build(params()),s);
  assertFalse(s.equals(GroupHeadSelector.build(params("min","BAR_s"))));
  s=GroupHeadSelector.build(params("sort","foo_s asc"));
  assertEquals(GroupHeadSelectorType.SORT,s.type);
  assertEquals("foo_s asc",s.selectorText);
  assertEquals(GroupHeadSelector.build(params("sort","foo_s asc")),s);
  assertFalse(s.equals(GroupHeadSelector.build(params("sort","BAR_s asc"))));
  assertFalse(s.equals(GroupHeadSelector.build(params("min","BAR_s"))));
  assertFalse(s.equals(GroupHeadSelector.build(params())));
  assertEquals(GroupHeadSelector.build(params("sort","foo_s asc")).hashCode(),GroupHeadSelector.build(params("sort","foo_s asc","other","stuff")).hashCode());
}
