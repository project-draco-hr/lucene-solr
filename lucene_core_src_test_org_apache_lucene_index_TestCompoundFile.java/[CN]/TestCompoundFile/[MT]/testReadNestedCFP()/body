{
  Directory newDir=newDirectory();
  if (newDir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)newDir).setEnableVirusScanner(false);
  }
  CompoundFileDirectory csw=new CompoundFileDirectory(newDir,"d.cfs",newIOContext(random()),true);
  CompoundFileDirectory nested=new CompoundFileDirectory(newDir,"b.cfs",newIOContext(random()),true);
  IndexOutput out=nested.createOutput("b.xyz",newIOContext(random()));
  IndexOutput out1=nested.createOutput("b_1.xyz",newIOContext(random()));
  out.writeInt(0);
  out1.writeInt(1);
  out.close();
  out1.close();
  nested.close();
  newDir.copy(csw,"b.cfs","b.cfs",newIOContext(random()));
  newDir.copy(csw,"b.cfe","b.cfe",newIOContext(random()));
  newDir.deleteFile("b.cfs");
  newDir.deleteFile("b.cfe");
  csw.close();
  assertEquals(2,newDir.listAll().length);
  csw=new CompoundFileDirectory(newDir,"d.cfs",newIOContext(random()),false);
  assertEquals(2,csw.listAll().length);
  nested=new CompoundFileDirectory(csw,"b.cfs",newIOContext(random()),false);
  assertEquals(2,nested.listAll().length);
  IndexInput openInput=nested.openInput("b.xyz",newIOContext(random()));
  assertEquals(0,openInput.readInt());
  openInput.close();
  openInput=nested.openInput("b_1.xyz",newIOContext(random()));
  assertEquals(1,openInput.readInt());
  openInput.close();
  nested.close();
  csw.close();
  newDir.close();
}
