{
  final RollingBuffer<Position> buffer=new RollingBuffer<Position>(){
    @Override protected Position newInstance(){
      final Position pos=new Position();
      pos.pos=-1;
      return pos;
    }
  }
;
  for (int iter=0; iter < 100 * RANDOM_MULTIPLIER; iter++) {
    int freeBeforePos=0;
    final int maxPos=atLeast(10000);
    final FixedBitSet posSet=new FixedBitSet(maxPos + 1000);
    int posUpto=0;
    Random random=random();
    while (freeBeforePos < maxPos) {
      if (random.nextInt(4) == 1) {
        final int limit=rarely() ? 1000 : 20;
        final int inc=random.nextInt(limit);
        final int pos=freeBeforePos + inc;
        posUpto=Math.max(posUpto,pos);
        if (VERBOSE) {
          System.out.println("  check pos=" + pos + " posUpto="+ posUpto);
        }
        final Position posData=buffer.get(pos);
        if (!posSet.getAndSet(pos)) {
          assertEquals(-1,posData.pos);
          posData.pos=pos;
        }
 else {
          assertEquals(pos,posData.pos);
        }
      }
 else {
        if (posUpto > freeBeforePos) {
          freeBeforePos+=random.nextInt(posUpto - freeBeforePos);
        }
        if (VERBOSE) {
          System.out.println("  freeBeforePos=" + freeBeforePos);
        }
        buffer.freeBefore(freeBeforePos);
      }
    }
    buffer.reset();
  }
}
