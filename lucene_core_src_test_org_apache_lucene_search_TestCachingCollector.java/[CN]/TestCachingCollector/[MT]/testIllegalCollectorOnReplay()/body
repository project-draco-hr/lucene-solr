{
  CachingCollector cc=CachingCollector.create(new NoOpCollector(false),true,100 * ONE_BYTE);
  LeafCollector acc=cc.getLeafCollector(null);
  acc.setScorer(new MockScorer());
  for (int i=0; i < 10; i++)   acc.collect(i);
  cc.replay(new NoOpCollector(true));
  cc.replay(new NoOpCollector(false));
  cc=CachingCollector.create(new NoOpCollector(true),true,100 * ONE_BYTE);
  acc=cc.getLeafCollector(null);
  acc.setScorer(new MockScorer());
  for (int i=0; i < 10; i++)   acc.collect(i);
  cc.replay(new NoOpCollector(true));
  try {
    cc.replay(new NoOpCollector(false));
    fail("should have failed if an in-order Collector was given to replay(), " + "while CachingCollector was initialized with out-of-order collection");
  }
 catch (  IllegalArgumentException e) {
  }
}
