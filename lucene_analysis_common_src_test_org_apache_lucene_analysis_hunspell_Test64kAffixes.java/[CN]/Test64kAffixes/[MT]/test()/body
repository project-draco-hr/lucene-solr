{
  Path tempDir=createTempDir("64kaffixes");
  Path affix=tempDir.resolve("64kaffixes.aff");
  Path dict=tempDir.resolve("64kaffixes.dic");
  BufferedWriter affixWriter=Files.newBufferedWriter(affix,StandardCharsets.UTF_8);
  affixWriter.write("SET UTF-8\nFLAG num\nSFX 1 Y 65536\n");
  for (int i=0; i < 65536; i++) {
    affixWriter.write("SFX 1 0 " + Integer.toHexString(i) + " .\n");
  }
  affixWriter.write("SFX 2 Y 1\nSFX 2 0 s\n");
  affixWriter.close();
  BufferedWriter dictWriter=Files.newBufferedWriter(dict,StandardCharsets.UTF_8);
  dictWriter.write("1\ndrink/2\n");
  dictWriter.close();
  try (InputStream affStream=Files.newInputStream(affix);InputStream dictStream=Files.newInputStream(dict);Directory tempDir2=newDirectory()){
    Dictionary dictionary=new Dictionary(tempDir2,"dictionary",affStream,dictStream);
    Stemmer stemmer=new Stemmer(dictionary);
    List<CharsRef> stems=stemmer.stem("drinks");
    assertEquals(1,stems.size());
    assertEquals("drink",stems.get(0).toString());
  }
 }
