{
  final String fileName=IndexFileNames.segmentFileName(info.name,"",IndexFileNames.COMPOUND_FILE_EXTENSION);
  if (infoStream.isEnabled("IW")) {
    infoStream.message("IW","create compound file " + fileName);
  }
  Collection<String> files=info.files();
  CompoundFileDirectory cfsDir=new CompoundFileDirectory(info.getId(),directory,fileName,context,true);
  boolean success=false;
  try {
    for (    String file : files) {
      directory.copy(cfsDir,file,file,context);
      checkAbort.work(directory.fileLength(file));
    }
    success=true;
  }
  finally {
    if (success) {
      IOUtils.close(cfsDir);
    }
 else {
      IOUtils.closeWhileHandlingException(cfsDir);
      try {
        directory.deleteFile(fileName);
      }
 catch (      Throwable t) {
      }
      try {
        directory.deleteFile(IndexFileNames.segmentFileName(info.name,"",IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));
      }
 catch (      Throwable t) {
      }
    }
  }
  Set<String> siFiles=new HashSet<>();
  siFiles.add(fileName);
  siFiles.add(IndexFileNames.segmentFileName(info.name,"",IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));
  info.setFiles(siFiles);
  return files;
}
