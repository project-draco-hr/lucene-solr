{
  boolean success=false;
  final long t0=System.currentTimeMillis();
  final MergePolicy mergePolicy=config.getMergePolicy();
  try {
    try {
      try {
        mergeInit(merge);
        if (infoStream.isEnabled("IW")) {
          infoStream.message("IW","now merge\n  merge=" + segString(merge.segments) + "\n  index="+ segString());
        }
        mergeMiddle(merge,mergePolicy);
        mergeSuccess(merge);
        success=true;
      }
 catch (      Throwable t) {
        handleMergeException(t,merge);
      }
    }
  finally {
synchronized (this) {
        mergeFinish(merge);
        if (!success) {
          if (infoStream.isEnabled("IW")) {
            infoStream.message("IW","hit exception during merge");
          }
          if (merge.info != null && !segmentInfos.contains(merge.info)) {
            deleter.refresh(merge.info.info.name);
          }
        }
        if (success && !merge.isAborted() && (merge.maxNumSegments != -1 || (!closed && !closing))) {
          updatePendingMerges(mergePolicy,MergeTrigger.MERGE_FINISHED,merge.maxNumSegments);
        }
      }
    }
  }
 catch (  OutOfMemoryError oom) {
    tragicEvent(oom,"merge");
  }
  if (merge.info != null && !merge.isAborted()) {
    if (infoStream.isEnabled("IW")) {
      infoStream.message("IW","merge time " + (System.currentTimeMillis() - t0) + " msec for "+ merge.info.info.getDocCount()+ " docs");
    }
  }
}
