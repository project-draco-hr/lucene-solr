{
  String line=null;
  while ((line=in.readLine()) != null) {
    if (line.length() == 0 || line.charAt(0) == '#') {
      continue;
    }
    String sides[]=split(line,"=>");
    if (sides.length > 1) {
      if (sides.length != 2) {
        throw new IllegalArgumentException("more than one explicit mapping specified on the same line");
      }
      String inputStrings[]=split(sides[0],",");
      CharsRef[] inputs=new CharsRef[inputStrings.length];
      for (int i=0; i < inputs.length; i++) {
        inputs[i]=analyze(unescape(inputStrings[i]).trim(),new CharsRefBuilder());
      }
      String outputStrings[]=split(sides[1],",");
      CharsRef[] outputs=new CharsRef[outputStrings.length];
      for (int i=0; i < outputs.length; i++) {
        outputs[i]=analyze(unescape(outputStrings[i]).trim(),new CharsRefBuilder());
      }
      for (int i=0; i < inputs.length; i++) {
        for (int j=0; j < outputs.length; j++) {
          add(inputs[i],outputs[j],false);
        }
      }
    }
 else {
      String inputStrings[]=split(line,",");
      CharsRef[] inputs=new CharsRef[inputStrings.length];
      for (int i=0; i < inputs.length; i++) {
        inputs[i]=analyze(unescape(inputStrings[i]).trim(),new CharsRefBuilder());
      }
      if (expand) {
        for (int i=0; i < inputs.length; i++) {
          for (int j=0; j < inputs.length; j++) {
            if (i != j) {
              add(inputs[i],inputs[j],true);
            }
          }
        }
      }
 else {
        for (int i=0; i < inputs.length; i++) {
          add(inputs[i],inputs[0],false);
        }
      }
    }
  }
}
