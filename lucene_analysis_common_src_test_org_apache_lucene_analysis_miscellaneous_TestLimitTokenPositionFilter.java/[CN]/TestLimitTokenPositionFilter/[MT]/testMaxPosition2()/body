{
  for (  final boolean consumeAll : new boolean[]{true,false}) {
    Analyzer a=new Analyzer(){
      @Override protected TokenStreamComponents createComponents(      String fieldName,      Reader reader){
        MockTokenizer tokenizer=new MockTokenizer(reader,MockTokenizer.WHITESPACE,false);
        tokenizer.setEnableChecks(consumeAll);
        return new TokenStreamComponents(tokenizer,new LimitTokenPositionFilter(tokenizer,2,consumeAll));
      }
    }
;
    assertTokenStreamContents(a.tokenStream("dummy","1  2     3  4  5"),new String[]{"1","2"},new int[]{0,3},new int[]{1,4},consumeAll ? 16 : null);
    assertTokenStreamContents(a.tokenStream("dummy",new StringReader("1 2 3 4 5")),new String[]{"1","2"},new int[]{0,2},new int[]{1,3},consumeAll ? 9 : null);
    assertTokenStreamContents(a.tokenStream("dummy","1  "),new String[]{"1"},new int[]{0},new int[]{1},consumeAll ? 3 : null);
    assertTokenStreamContents(a.tokenStream("dummy","1  2  "),new String[]{"1","2"},new int[]{0,3},new int[]{1,4},consumeAll ? 6 : null);
  }
}
