{
  FieldType ft=loader.newInstance(className,FieldType.class);
  ft.setTypeName(name);
  String expression="./analyzer[@type='query']";
  Node anode=(Node)xpath.evaluate(expression,node,XPathConstants.NODE);
  Analyzer queryAnalyzer=readAnalyzer(anode);
  expression="./analyzer[@type='multiterm']";
  anode=(Node)xpath.evaluate(expression,node,XPathConstants.NODE);
  Analyzer multiAnalyzer=readAnalyzer(anode);
  expression="./analyzer[not(@type)] | ./analyzer[@type='index']";
  anode=(Node)xpath.evaluate(expression,node,XPathConstants.NODE);
  Analyzer analyzer=readAnalyzer(anode);
  expression="./similarity";
  anode=(Node)xpath.evaluate(expression,node,XPathConstants.NODE);
  SimilarityFactory simFactory=IndexSchema.readSimilarity(loader,anode);
  if (null != simFactory) {
    ft.setSimilarity(simFactory);
  }
  if (null == queryAnalyzer) {
    queryAnalyzer=analyzer;
    ft.setIsExplicitQueryAnalyzer(false);
  }
 else {
    ft.setIsExplicitQueryAnalyzer(true);
  }
  if (null == analyzer) {
    analyzer=queryAnalyzer;
    ft.setIsExplicitAnalyzer(false);
  }
 else {
    ft.setIsExplicitAnalyzer(true);
  }
  if (null != analyzer) {
    ft.setAnalyzer(analyzer);
    ft.setQueryAnalyzer(queryAnalyzer);
    if (ft instanceof TextField) {
      if (null == multiAnalyzer) {
        multiAnalyzer=constructMultiTermAnalyzer(queryAnalyzer);
        ((TextField)ft).setIsExplicitMultiTermAnalyzer(false);
      }
 else {
        ((TextField)ft).setIsExplicitMultiTermAnalyzer(true);
      }
      ((TextField)ft).setMultiTermAnalyzer(multiAnalyzer);
    }
  }
  if (ft instanceof SchemaAware) {
    schemaAware.add((SchemaAware)ft);
  }
  return ft;
}
