{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(null);
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir,iwc);
  IndexReader reader=writer.getReader();
  writer.close();
  IndexSearcher searcher=newSearcher(reader);
  final boolean reverse=random().nextBoolean();
  ValueSource vs;
  SortField sf, vssf;
  vs=new IntFieldSource("int_field");
  sf=new SortField("int_field",Type.INT,reverse);
  vssf=vs.getSortField(reverse);
  assertEquals(sf,vssf);
  sf=sf.rewrite(searcher);
  vssf=vssf.rewrite(searcher);
  assertEquals(sf,vssf);
  vs=new FloatFieldSource("float_field");
  sf=new SortField("float_field",Type.FLOAT,reverse);
  vssf=vs.getSortField(reverse);
  assertEquals(sf,vssf);
  sf=sf.rewrite(searcher);
  vssf=vssf.rewrite(searcher);
  assertEquals(sf,vssf);
  vs=new DoubleFieldSource("double_field");
  sf=new SortField("double_field",Type.DOUBLE,reverse);
  vssf=vs.getSortField(reverse);
  assertEquals(sf,vssf);
  sf=sf.rewrite(searcher);
  vssf=vssf.rewrite(searcher);
  assertEquals(sf,vssf);
  vs=new LongFieldSource("long_field");
  sf=new SortField("long_field",Type.LONG,reverse);
  vssf=vs.getSortField(reverse);
  assertEquals(sf,vssf);
  sf=sf.rewrite(searcher);
  vssf=vssf.rewrite(searcher);
  assertEquals(sf,vssf);
  reader.close();
  dir.close();
}
