{
  if (computeCount) {
    count+=(Long)stv.get("count");
  }
  if (computeMissing) {
    missing+=(Long)stv.get("missing");
  }
  if (computeCalcDistinct) {
    distinctValues.addAll((Collection<T>)stv.get("distinctValues"));
    countDistinct=distinctValues.size();
  }
  if (computeMinOrMax) {
    updateMinMax((T)stv.get("min"),(T)stv.get("max"));
  }
  if (computeCardinality) {
    byte[] data=(byte[])stv.get("cardinality");
    hll.union(HLL.fromBytes(data));
  }
  updateTypeSpecificStats(stv);
  NamedList f=(NamedList)stv.get(FACETS);
  if (f == null) {
    return;
  }
  for (int i=0; i < f.size(); i++) {
    String field=f.getName(i);
    NamedList vals=(NamedList)f.getVal(i);
    Map<String,StatsValues> addTo=facets.get(field);
    if (addTo == null) {
      addTo=new HashMap<>();
      facets.put(field,addTo);
    }
    for (int j=0; j < vals.size(); j++) {
      String val=vals.getName(j);
      StatsValues vvals=addTo.get(val);
      if (vvals == null) {
        vvals=StatsValuesFactory.createStatsValues(statsField);
        addTo.put(val,vvals);
      }
      vvals.accumulate((NamedList)vals.getVal(j));
    }
  }
}
