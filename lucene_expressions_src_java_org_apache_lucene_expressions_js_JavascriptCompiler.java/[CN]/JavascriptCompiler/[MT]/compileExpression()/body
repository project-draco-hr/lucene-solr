{
  try {
    Tree antlrTree=getAntlrComputedExpressionTree();
    beginCompile();
    recursiveCompile(antlrTree,ComputedType.DOUBLE);
    endCompile();
    Class<? extends Expression> evaluatorClass=new Loader(getClass().getClassLoader()).define(COMPILED_EXPRESSION_CLASS,classWriter.toByteArray());
    Constructor<? extends Expression> constructor=evaluatorClass.getConstructor(String.class,String[].class);
    return constructor.newInstance(sourceText,externalsMap.keySet().toArray(new String[externalsMap.size()]));
  }
 catch (  InstantiationException|IllegalAccessException|NoSuchMethodException|InvocationTargetException exception) {
    throw new IllegalStateException("An internal error occurred attempting to compile the expression (" + sourceText + ").",exception);
  }
}
