{
  final Map<String,Integer> externalsMap=new LinkedHashMap<>();
  final ClassWriter classWriter=new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS);
  generateClass(getAntlrParseTree(),classWriter,externalsMap);
  try {
    final Class<? extends Expression> evaluatorClass=new Loader(parent).define(COMPILED_EXPRESSION_CLASS,classWriter.toByteArray());
    final Constructor<? extends Expression> constructor=evaluatorClass.getConstructor(String.class,String[].class);
    return constructor.newInstance(sourceText,externalsMap.keySet().toArray(new String[externalsMap.size()]));
  }
 catch (  ReflectiveOperationException exception) {
    throw new IllegalStateException("An internal error occurred attempting to compile the expression (" + sourceText + ").",exception);
  }
}
