{
  File solrHomeDirectory=new File(initCoreDataDir,getClass().getName() + "-corex-" + System.nanoTime());
  solrHomeDirectory.mkdirs();
  copySolrHomeToTemp(solrHomeDirectory,"corex",true);
  File corex=new File(solrHomeDirectory,"corex");
  FileUtils.write(new File(corex,"core.properties"),"",Charsets.UTF_8.toString());
  JettySolrRunner runner=new JettySolrRunner(solrHomeDirectory.getAbsolutePath(),buildJettyConfig("/solr"));
  runner.start();
  try (HttpSolrClient client=new HttpSolrClient(runner.getBaseUrl() + "/corex")){
    client.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);
    client.setSoTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);
    SolrInputDocument doc=new SolrInputDocument();
    doc.addField("id","123");
    client.add(doc);
    client.commit();
  }
   try (HttpSolrClient client=new HttpSolrClient(runner.getBaseUrl().toString())){
    client.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);
    client.setSoTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);
    CoreAdminRequest.Unload req=new CoreAdminRequest.Unload(false);
    req.setDeleteInstanceDir(true);
    req.setCoreName("corex");
    req.process(client);
  }
   runner.stop();
  assertFalse("Instance directory exists after core unload with deleteInstanceDir=true : " + corex,corex.exists());
}
