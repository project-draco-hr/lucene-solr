{
  final File workDir=new File(TEMP_DIR,this.getClass().getName());
  if (workDir.exists()) {
    FileUtils.deleteDirectory(workDir);
  }
  assertTrue("Failed to mkdirs workDir",workDir.mkdirs());
  final CoreContainer cores=h.getCoreContainer();
  final CoreAdminHandler admin=new CoreAdminHandler(cores);
  String instDir=null;
{
    SolrCore template=null;
    try {
      template=cores.getCore("collection1");
      instDir=template.getCoreDescriptor().getInstanceDir();
    }
  finally {
      if (null != template)       template.close();
    }
  }
  final File instDirFile=new File(instDir);
  assertTrue("instDir doesn't exist: " + instDir,instDirFile.exists());
  final File instPropFile=new File(workDir,"instProp");
  FileUtils.copyDirectory(instDirFile,instPropFile);
  SolrQueryResponse resp=new SolrQueryResponse();
  admin.handleRequestBody(req(CoreAdminParams.ACTION,CoreAdminParams.CoreAdminAction.CREATE.toString(),CoreAdminParams.INSTANCE_DIR,instPropFile.getAbsolutePath(),CoreAdminParams.NAME,"props",CoreAdminParams.PROPERTY_PREFIX + "hoss","man",CoreAdminParams.PROPERTY_PREFIX + "foo","baz"),resp);
  assertNull("Exception on create",resp.getException());
  CoreDescriptor cd=cores.getCoreDescriptor("props");
  assertNotNull("Core not added!",cd);
  assertEquals(cd.getCoreProperty("hoss",null),"man");
  assertEquals(cd.getCoreProperty("foo",null),"baz");
  ignoreException("Could not load config");
  try {
    resp=new SolrQueryResponse();
    admin.handleRequestBody(req(CoreAdminParams.ACTION,CoreAdminParams.CoreAdminAction.CREATE.toString(),CoreAdminParams.NAME,"bogus_dir_core",CoreAdminParams.INSTANCE_DIR,"dir_does_not_exist_127896"),resp);
    fail("bogus collection created ok");
  }
 catch (  SolrException e) {
  }
  unIgnoreException("Could not load config");
  resp=new SolrQueryResponse();
  admin.handleRequestBody(req(CoreAdminParams.ACTION,CoreAdminParams.CoreAdminAction.STATUS.toString(),CoreAdminParams.CORE,"bogus_dir_core"),resp);
  Map<String,Exception> failures=(Map<String,Exception>)resp.getValues().get("initFailures");
  assertNotNull("core failures is null",failures);
  NamedList<Object> status=(NamedList<Object>)resp.getValues().get("status");
  assertNotNull("core status is null",status);
  assertEquals("wrong number of core failures",1,failures.size());
  Exception fail=failures.get("bogus_dir_core");
  assertNotNull("null failure for test core",fail);
  assertTrue("init failure doesn't mention problem: " + fail.getCause().getMessage(),0 < fail.getCause().getMessage().indexOf("dir_does_not_exist"));
  assertEquals("bogus_dir_core status isn't empty",0,((NamedList)status.get("bogus_dir_core")).size());
  FileUtils.deleteDirectory(workDir);
}
