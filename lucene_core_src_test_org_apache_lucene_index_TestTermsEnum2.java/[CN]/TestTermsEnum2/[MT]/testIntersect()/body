{
  for (int i=0; i < numIterations; i++) {
    String reg=AutomatonTestUtil.randomRegexp(random());
    LightAutomaton automaton=new RegExp(reg,RegExp.NONE).toLightAutomaton();
    CompiledAutomaton ca=new CompiledAutomaton(automaton,SpecialOperations.isFinite(automaton),false);
    TermsEnum te=MultiFields.getTerms(reader,"field").intersect(ca,null);
    LightAutomaton expected=BasicOperations.determinize(BasicOperations.intersectionLight(termsAutomaton,automaton));
    TreeSet<BytesRef> found=new TreeSet<>();
    while (te.next() != null) {
      found.add(BytesRef.deepCopyOf(te.term()));
    }
    LightAutomaton actual=BasicOperations.determinize(BasicAutomata.makeStringUnionLight(found));
    assertTrue(BasicOperations.sameLanguage(expected,actual));
  }
}
