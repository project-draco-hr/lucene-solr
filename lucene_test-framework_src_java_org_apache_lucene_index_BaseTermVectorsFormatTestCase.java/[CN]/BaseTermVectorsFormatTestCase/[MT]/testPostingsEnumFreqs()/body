{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=new IndexWriterConfig(new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      return new TokenStreamComponents(new MockTokenizer());
    }
  }
);
  IndexWriter iw=new IndexWriter(dir,iwc);
  Document doc=new Document();
  FieldType ft=new FieldType(TextField.TYPE_NOT_STORED);
  ft.setStoreTermVectors(true);
  doc.add(new Field("foo","bar bar",ft));
  iw.addDocument(doc);
  DirectoryReader reader=DirectoryReader.open(iw,false);
  Terms terms=getOnlySegmentReader(reader).getTermVector(0,"foo");
  TermsEnum termsEnum=terms.iterator();
  assertNotNull(termsEnum);
  assertEquals(new BytesRef("bar"),termsEnum.next());
  PostingsEnum postings=termsEnum.postings(null,null);
  assertEquals(-1,postings.docID());
  assertEquals(0,postings.nextDoc());
  assertEquals(2,postings.freq());
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,postings.nextDoc());
  PostingsEnum postings2=termsEnum.postings(null,postings);
  assertNotNull(postings2);
  assertEquals(-1,postings2.docID());
  assertEquals(0,postings2.nextDoc());
  assertEquals(2,postings2.freq());
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,postings2.nextDoc());
  PostingsEnum docsOnly=termsEnum.postings(null,null,PostingsEnum.NONE);
  assertEquals(-1,docsOnly.docID());
  assertEquals(0,docsOnly.nextDoc());
  assertTrue(docsOnly.freq() == 1 || docsOnly.freq() == 2);
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsOnly.nextDoc());
  PostingsEnum docsOnly2=termsEnum.postings(null,docsOnly,PostingsEnum.NONE);
  assertNotNull(docsOnly2);
  assertEquals(-1,docsOnly2.docID());
  assertEquals(0,docsOnly2.nextDoc());
  assertTrue(docsOnly.freq() == 1 || docsOnly.freq() == 2);
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsOnly2.nextDoc());
  for (  int flag : new int[]{NONE,FREQS,POSITIONS,PAYLOADS,OFFSETS,ALL}) {
    postings=termsEnum.postings(null,null,flag);
    assertEquals(-1,postings.docID());
    assertEquals(0,postings.nextDoc());
    if (flag != NONE) {
      assertEquals(2,postings.freq());
    }
    assertEquals(DocIdSetIterator.NO_MORE_DOCS,postings.nextDoc());
    postings2=termsEnum.postings(null,postings,flag);
    assertNotNull(postings2);
    assertEquals(-1,postings2.docID());
    assertEquals(0,postings2.nextDoc());
    if (flag != NONE) {
      assertEquals(2,postings2.freq());
    }
    assertEquals(DocIdSetIterator.NO_MORE_DOCS,postings2.nextDoc());
  }
  iw.close();
  reader.close();
  dir.close();
}
