{
  String coreUrl;
  Set<String> liveNodes=clusterState.getLiveNodes();
  List<Slice> randomizedSlices=new ArrayList<>(slices.size());
  randomizedSlices.addAll(slices);
  Collections.shuffle(randomizedSlices,random);
  for (  Slice slice : randomizedSlices) {
    List<Replica> randomizedReplicas=new ArrayList<>();
    randomizedReplicas.addAll(slice.getReplicas());
    Collections.shuffle(randomizedReplicas,random);
    for (    Replica replica : randomizedReplicas) {
      if (!activeReplicas || (liveNodes.contains(replica.getNodeName()) && replica.getState() == Replica.State.ACTIVE)) {
        if (byCoreName && !collectionName.equals(replica.getStr(CORE_NAME_PROP))) {
          continue;
        }
        if (replica.getStr(BASE_URL_PROP).equals(cores.getZkController().getBaseUrl())) {
          continue;
        }
        if (origCorename != null) {
          coreUrl=replica.getStr(BASE_URL_PROP) + "/" + origCorename;
        }
 else {
          coreUrl=replica.getCoreUrl();
          if (coreUrl.endsWith("/")) {
            coreUrl=coreUrl.substring(0,coreUrl.length() - 1);
          }
        }
        return coreUrl;
      }
    }
  }
  return null;
}
