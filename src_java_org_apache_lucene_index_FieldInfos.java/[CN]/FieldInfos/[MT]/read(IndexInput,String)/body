{
  int firstInt=input.readVInt();
  if (firstInt < 0) {
    format=firstInt;
  }
 else {
    format=FORMAT_PRE;
  }
  if (format != FORMAT_PRE & format != FORMAT_START) {
    throw new CorruptIndexException("unrecognized format " + format + " in file \""+ fileName+ "\"");
  }
  int size;
  if (format == FORMAT_PRE) {
    size=firstInt;
  }
 else {
    size=input.readVInt();
  }
  for (int i=0; i < size; i++) {
    String name=input.readString().intern();
    byte bits=input.readByte();
    boolean isIndexed=(bits & IS_INDEXED) != 0;
    boolean storeTermVector=(bits & STORE_TERMVECTOR) != 0;
    boolean storePositionsWithTermVector=(bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;
    boolean storeOffsetWithTermVector=(bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;
    boolean omitNorms=(bits & OMIT_NORMS) != 0;
    boolean storePayloads=(bits & STORE_PAYLOADS) != 0;
    boolean omitTermFreqAndPositions=(bits & OMIT_TERM_FREQ_AND_POSITIONS) != 0;
    addInternal(name,isIndexed,storeTermVector,storePositionsWithTermVector,storeOffsetWithTermVector,omitNorms,storePayloads,omitTermFreqAndPositions);
  }
  if (input.getFilePointer() != input.length()) {
    throw new CorruptIndexException("did not read all bytes from file \"" + fileName + "\": read "+ input.getFilePointer()+ " vs size "+ input.length());
  }
}
