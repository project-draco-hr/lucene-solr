{
  final FieldSortedHitQueue hq=new FieldSortedHitQueue(reader,sort.getSort(),nDocs);
  DocIterator iter=set.iterator();
  int hits=0;
  FieldDoc reusableFD=null;
  while (iter.hasNext()) {
    int doc=iter.nextDoc();
    hits++;
    if (reusableFD == null) {
      reusableFD=new FieldDoc(doc,1.0f);
    }
 else {
      reusableFD.doc=doc;
    }
    reusableFD=(FieldDoc)hq.insertWithOverflow(reusableFD);
  }
  int numCollected=hq.size();
  int[] ids=new int[numCollected];
  for (int i=numCollected - 1; i >= 0; i--) {
    FieldDoc fieldDoc=(FieldDoc)hq.pop();
    ids[i]=fieldDoc.doc;
  }
  return new DocSlice(0,numCollected,ids,null,hits,0.0f);
}
