{
  if (queries == null)   return null;
  if (queries.size() == 1)   return getDocSet(queries.get(0));
  DocSet answer=null;
  boolean[] neg=new boolean[queries.size()];
  DocSet[] sets=new DocSet[queries.size()];
  int smallestIndex=-1;
  int smallestCount=Integer.MAX_VALUE;
  for (int i=0; i < sets.length; i++) {
    Query q=queries.get(i);
    Query posQuery=QueryUtils.getAbs(q);
    sets[i]=getPositiveDocSet(posQuery);
    if (q == posQuery) {
      neg[i]=false;
      int sz=sets[i].size();
      if (sz < smallestCount) {
        smallestCount=sz;
        smallestIndex=i;
        answer=sets[i];
      }
    }
 else {
      neg[i]=true;
    }
  }
  if (answer == null)   answer=getPositiveDocSet(matchAllDocsQuery);
  for (int i=0; i < sets.length; i++) {
    if (neg[i])     answer=answer.andNot(sets[i]);
  }
  for (int i=0; i < sets.length; i++) {
    if (!neg[i] && i != smallestIndex)     answer=answer.intersection(sets[i]);
  }
  return answer;
}
