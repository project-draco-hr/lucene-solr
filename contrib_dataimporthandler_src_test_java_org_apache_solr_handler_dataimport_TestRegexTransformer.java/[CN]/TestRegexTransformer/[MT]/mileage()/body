{
  List<Map<String,String>> fields=getFields();
  Map<String,String> fld=getField("hltCityMPG","string",".*(${e.city_mileage})","rowdata",null);
  fld.put(REPLACE_WITH,"*** $1 ***");
  fields.add(fld);
  fld=getField("t1","string","duff","rowdata",null);
  fields.add(fld);
  fld=getField("t2","string","duff","rowdata",null);
  fld.put(REPLACE_WITH,"60");
  fields.add(fld);
  fld=getField("t3","string","(Range)","rowdata",null);
  fld.put(REPLACE_WITH,"range");
  fld.put(GROUP_NAMES,"t4,t5");
  fields.add(fld);
  Map<String,Object> row=new HashMap<String,Object>();
  String s="Fuel Economy Range: 26 mpg Hwy, 19 mpg City";
  row.put("rowdata",s);
  VariableResolverImpl resolver=new VariableResolverImpl();
  resolver.addNamespace("e",row);
  Map<String,String> eAttrs=AbstractDataImportHandlerTest.createMap("name","e");
  Context context=AbstractDataImportHandlerTest.getContext(null,resolver,null,Context.FULL_DUMP,fields,eAttrs);
  Map<String,Object> result=new RegexTransformer().transformRow(row,context);
  Assert.assertEquals(5,result.size());
  Assert.assertEquals(s,result.get("rowdata"));
  Assert.assertEquals("26",result.get("highway_mileage"));
  Assert.assertEquals("19",result.get("city_mileage"));
  Assert.assertEquals("*** 19 *** mpg City",result.get("hltCityMPG"));
  Assert.assertEquals("Fuel Economy range: 26 mpg Hwy, 19 mpg City",result.get("t3"));
}
