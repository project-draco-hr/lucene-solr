{
  Lookup lookup=lookupClass.newInstance();
  TermFreq[] keys=new TermFreq[this.keys.length];
  for (int i=0; i < keys.length; i++)   keys[i]=new TermFreq(this.keys[i],(float)i);
  lookup.build(new TermFreqArrayIterator(keys));
  File storeDir=TEMP_DIR;
  lookup.store(storeDir);
  lookup=lookupClass.newInstance();
  lookup.load(storeDir);
  float previous=Float.NEGATIVE_INFINITY;
  for (  TermFreq k : keys) {
    Float val=(Float)lookup.get(k.term.utf8ToString());
    assertNotNull(k.term.utf8ToString(),val);
    if (supportsExactWeights) {
      assertEquals(k.term.utf8ToString(),Float.valueOf(k.v),val);
    }
 else {
      assertTrue(val + ">=" + previous,val >= previous);
      previous=val.floatValue();
    }
  }
}
