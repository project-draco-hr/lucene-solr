{
  final PagedMutable docs=this.docs;
  final PagedGrowableWriter values=this.values;
  final FixedBitSet docsWithField=this.docsWithField;
  new InPlaceMergeSorter(){
    @Override protected void swap(    int i,    int j){
      long tmpDoc=docs.get(j);
      docs.set(j,docs.get(i));
      docs.set(i,tmpDoc);
      long tmpVal=values.get(j);
      values.set(j,values.get(i));
      values.set(i,tmpVal);
      boolean tmpBool=docsWithField.get(j);
      if (docsWithField.get(i)) {
        docsWithField.set(j);
      }
 else {
        docsWithField.clear(j);
      }
      if (tmpBool) {
        docsWithField.set(i);
      }
 else {
        docsWithField.clear(i);
      }
    }
    @Override protected int compare(    int i,    int j){
      int x=(int)docs.get(i);
      int y=(int)docs.get(j);
      return (x < y) ? -1 : ((x == y) ? 0 : 1);
    }
  }
.sort(0,size);
  return new Iterator(size,values,docsWithField,docs);
}
