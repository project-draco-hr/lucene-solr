{
  super.setContext(context);
  if (context == null) {
    return;
  }
  if (context.getRequest() == null) {
    return;
  }
  searcher=context.getSearcher();
  if (searcher == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"searcher is null");
  }
  leafContexts=searcher.getTopReaderContext().leaves();
  scoringQuery=SolrQueryRequestContextUtils.getScoringQuery(req);
  docsWereNotReranked=(scoringQuery == null);
  String featureStoreName=SolrQueryRequestContextUtils.getFvStoreName(req);
  if (docsWereNotReranked || (featureStoreName != null && (!featureStoreName.equals(scoringQuery.getScoringModel().getFeatureStoreName())))) {
    final ManagedFeatureStore fr=ManagedFeatureStore.getManagedFeatureStore(req.getCore());
    final FeatureStore store=fr.getFeatureStore(featureStoreName);
    featureStoreName=store.getName();
    try {
      final LoggingModel lm=new LoggingModel(loggingModelName,featureStoreName,store.getFeatures());
      scoringQuery=new LTRScoringQuery(lm,LTRQParserPlugin.extractEFIParams(params),true,threadManager);
      scoringQuery.setOriginalQuery(context.getQuery());
    }
 catch (    final Exception e) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"retrieving the feature store " + featureStoreName,e);
    }
  }
  if (scoringQuery.getFeatureLogger() == null) {
    scoringQuery.setFeatureLogger(SolrQueryRequestContextUtils.getFeatureLogger(req));
  }
  scoringQuery.setRequest(req);
  featureLogger=scoringQuery.getFeatureLogger();
  try {
    modelWeight=scoringQuery.createWeight(searcher,true,1f);
  }
 catch (  final IOException e) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,e.getMessage(),e);
  }
  if (modelWeight == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"error logging the features, model weight is null");
  }
}
