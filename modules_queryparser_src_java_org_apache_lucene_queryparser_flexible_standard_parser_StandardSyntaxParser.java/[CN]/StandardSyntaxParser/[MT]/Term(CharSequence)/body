{
  Token term, boost=null, fuzzySlop=null, goop1, goop2;
  boolean fuzzy=false;
  boolean regexp=false;
  boolean startInc=false;
  boolean endInc=false;
  QueryNode q=null;
  ParametricQueryNode qLower, qUpper;
  float defaultMinSimilarity=org.apache.lucene.search.FuzzyQuery.defaultMinSimilarity;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TERM:
case REGEXPTERM:
case NUMBER:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TERM:
      term=jj_consume_token(TERM);
    q=new FieldQueryNode(field,EscapeQuerySyntaxImpl.discardEscapeChar(term.image),term.beginColumn,term.endColumn);
  break;
case REGEXPTERM:
term=jj_consume_token(REGEXPTERM);
regexp=true;
break;
case NUMBER:
term=jj_consume_token(NUMBER);
break;
default :
jj_la1[15]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case FUZZY_SLOP:
fuzzySlop=jj_consume_token(FUZZY_SLOP);
fuzzy=true;
break;
default :
jj_la1[16]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CARAT:
jj_consume_token(CARAT);
boost=jj_consume_token(NUMBER);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case FUZZY_SLOP:
fuzzySlop=jj_consume_token(FUZZY_SLOP);
fuzzy=true;
break;
default :
jj_la1[17]=jj_gen;
;
}
break;
default :
jj_la1[18]=jj_gen;
;
}
if (fuzzy) {
float fms=defaultMinSimilarity;
try {
fms=Float.valueOf(fuzzySlop.image.substring(1)).floatValue();
}
 catch (Exception ignored) {
}
if (fms < 0.0f) {
{
if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));
}
}
 else if (fms >= 1.0f && fms != (int)fms) {
{
if (true) throw new ParseException(new MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS));
}
}
q=new FuzzyQueryNode(field,EscapeQuerySyntaxImpl.discardEscapeChar(term.image),fms,term.beginColumn,term.endColumn);
}
 else if (regexp) {
q=new RegexpQueryNode(field,term.image,term.beginColumn,term.endColumn - 1);
}
break;
case RANGEIN_START:
case RANGEEX_START:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RANGEIN_START:
jj_consume_token(RANGEIN_START);
startInc=true;
break;
case RANGEEX_START:
jj_consume_token(RANGEEX_START);
break;
default :
jj_la1[19]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RANGE_GOOP:
goop1=jj_consume_token(RANGE_GOOP);
break;
case RANGE_QUOTED:
goop1=jj_consume_token(RANGE_QUOTED);
break;
default :
jj_la1[20]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RANGE_TO:
jj_consume_token(RANGE_TO);
break;
default :
jj_la1[21]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RANGE_GOOP:
goop2=jj_consume_token(RANGE_GOOP);
break;
case RANGE_QUOTED:
goop2=jj_consume_token(RANGE_QUOTED);
break;
default :
jj_la1[22]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RANGEIN_END:
jj_consume_token(RANGEIN_END);
endInc=true;
break;
case RANGEEX_END:
jj_consume_token(RANGEEX_END);
break;
default :
jj_la1[23]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CARAT:
jj_consume_token(CARAT);
boost=jj_consume_token(NUMBER);
break;
default :
jj_la1[24]=jj_gen;
;
}
if (goop1.kind == RANGE_QUOTED) {
goop1.image=goop1.image.substring(1,goop1.image.length() - 1);
}
if (goop2.kind == RANGE_QUOTED) {
goop2.image=goop2.image.substring(1,goop2.image.length() - 1);
}
qLower=new ParametricQueryNode(field,startInc ? ParametricQueryNode.CompareOperator.GE : ParametricQueryNode.CompareOperator.GT,EscapeQuerySyntaxImpl.discardEscapeChar(goop1.image),goop1.beginColumn,goop1.endColumn);
qUpper=new ParametricQueryNode(field,endInc ? ParametricQueryNode.CompareOperator.LE : ParametricQueryNode.CompareOperator.LT,EscapeQuerySyntaxImpl.discardEscapeChar(goop2.image),goop2.beginColumn,goop2.endColumn);
q=new ParametricRangeQueryNode(qLower,qUpper);
break;
case QUOTED:
term=jj_consume_token(QUOTED);
q=new QuotedFieldQueryNode(field,EscapeQuerySyntaxImpl.discardEscapeChar(term.image.substring(1,term.image.length() - 1)),term.beginColumn + 1,term.endColumn - 1);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case FUZZY_SLOP:
fuzzySlop=jj_consume_token(FUZZY_SLOP);
break;
default :
jj_la1[25]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CARAT:
jj_consume_token(CARAT);
boost=jj_consume_token(NUMBER);
break;
default :
jj_la1[26]=jj_gen;
;
}
int phraseSlop=0;
if (fuzzySlop != null) {
try {
phraseSlop=Float.valueOf(fuzzySlop.image.substring(1)).intValue();
q=new SlopQueryNode(q,phraseSlop);
}
 catch (Exception ignored) {
}
}
break;
default :
jj_la1[27]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
if (boost != null) {
float f=(float)1.0;
try {
f=Float.valueOf(boost.image).floatValue();
if (q != null) {
q=new BoostQueryNode(q,f);
}
}
 catch (Exception ignored) {
}
}
{
if (true) return q;
}
throw new Error("Missing return statement in function");
}
