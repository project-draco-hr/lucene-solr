{
  Similarity.SimScorer simScorer=similarity.simScorer(simWeight,context);
  List<Scorer> subScorers=new ArrayList<>();
  for (int i=0; i < terms.length; i++) {
    TermState state=termContexts[i].get(context.ord);
    if (state != null) {
      TermsEnum termsEnum=context.reader().terms(terms[i].field()).iterator();
      termsEnum.seekExact(terms[i].bytes(),state);
      PostingsEnum postings=termsEnum.postings(null,PostingsEnum.FREQS);
      subScorers.add(new TermScorer(this,postings,simScorer));
    }
  }
  if (subScorers.isEmpty()) {
    return null;
  }
 else   if (subScorers.size() == 1) {
    return subScorers.get(0);
  }
 else {
    return new SynonymScorer(simScorer,this,subScorers);
  }
}
