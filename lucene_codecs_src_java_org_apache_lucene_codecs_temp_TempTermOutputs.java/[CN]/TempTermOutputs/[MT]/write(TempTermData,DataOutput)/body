{
  int bit0=allZero(data.longs) ? 0 : 1;
  int bit1=((data.bytes == null || data.bytes.length == 0) ? 0 : 1) << 1;
  int bit2=((data.docFreq == 0) ? 0 : 1) << 2;
  int bits=bit0 | bit1 | bit2;
  if (bit1 > 0) {
    if (data.bytes.length < 32) {
      bits|=(data.bytes.length << 3);
      out.writeByte((byte)bits);
    }
 else {
      out.writeByte((byte)bits);
      out.writeVInt(data.bytes.length);
    }
  }
 else {
    out.writeByte((byte)bits);
  }
  if (bit0 > 0) {
    for (int pos=0; pos < longsSize; pos++) {
      out.writeVLong(data.longs[pos]);
    }
  }
  if (bit1 > 0) {
    out.writeBytes(data.bytes,0,data.bytes.length);
  }
  if (bit2 > 0) {
    if (hasPos) {
      if (data.docFreq == data.totalTermFreq) {
        out.writeVInt((data.docFreq << 1) | 1);
      }
 else {
        out.writeVInt((data.docFreq << 1));
        out.writeVLong(data.totalTermFreq - data.docFreq);
      }
    }
 else {
      out.writeVInt(data.docFreq);
    }
  }
}
