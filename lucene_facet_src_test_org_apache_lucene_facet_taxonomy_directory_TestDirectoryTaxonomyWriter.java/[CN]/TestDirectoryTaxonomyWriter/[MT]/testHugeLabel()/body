{
  Directory indexDir=newDirectory(), taxoDir=newDirectory();
  IndexWriter indexWriter=new IndexWriter(indexDir,newIndexWriterConfig(new MockAnalyzer(random())));
  DirectoryTaxonomyWriter taxoWriter=new DirectoryTaxonomyWriter(taxoDir,OpenMode.CREATE,new Cl2oTaxonomyWriterCache(2,1f,1));
  FacetsConfig config=new FacetsConfig();
  String bigs=null;
  int ordinal=-1;
  int len=FacetLabel.MAX_CATEGORY_PATH_LENGTH - 4;
  bigs=TestUtil.randomSimpleString(random(),len,len);
  FacetField ff=new FacetField("dim",bigs);
  FacetLabel cp=new FacetLabel("dim",bigs);
  ordinal=taxoWriter.addCategory(cp);
  Document doc=new Document();
  doc.add(ff);
  indexWriter.addDocument(config.build(taxoWriter,doc));
  for (int i=0; i < 3; i++) {
    String s=TestUtil.randomSimpleString(random(),1,10);
    taxoWriter.addCategory(new FacetLabel("dim",s));
    doc=new Document();
    doc.add(new FacetField("dim",s));
    indexWriter.addDocument(config.build(taxoWriter,doc));
  }
  assertEquals(ordinal,taxoWriter.addCategory(cp));
  indexWriter.close();
  IOUtils.close(taxoWriter);
  DirectoryReader indexReader=DirectoryReader.open(indexDir);
  TaxonomyReader taxoReader=new DirectoryTaxonomyReader(taxoDir);
  IndexSearcher searcher=new IndexSearcher(indexReader);
  DrillDownQuery ddq=new DrillDownQuery(new FacetsConfig());
  ddq.add("dim",bigs);
  assertEquals(1,searcher.search(ddq,10).totalHits);
  IOUtils.close(indexReader,taxoReader,indexDir,taxoDir);
}
