{
  Codec cp=_TestUtil.alwaysPostingsFormat(new Pulsing41PostingsFormat(1));
  File f=_TestUtil.getTempDir("10kpulsed");
  BaseDirectoryWrapper dir=newFSDirectory(f);
  dir.setCheckIndexOnClose(false);
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setCodec(cp));
  Document document=new Document();
  FieldType ft=new FieldType(TextField.TYPE_STORED);
switch (_TestUtil.nextInt(random(),0,2)) {
case 0:
    ft.setIndexOptions(IndexOptions.DOCS_ONLY);
  break;
case 1:
ft.setIndexOptions(IndexOptions.DOCS_AND_FREQS);
break;
default :
ft.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);
break;
}
Field field=newField("field","",ft);
document.add(field);
NumberFormat df=new DecimalFormat("00000",new DecimalFormatSymbols(Locale.ROOT));
for (int i=0; i < 10050; i++) {
field.setStringValue(df.format(i));
iw.addDocument(document);
}
IndexReader ir=iw.getReader();
iw.close();
TermsEnum te=MultiFields.getTerms(ir,"field").iterator(null);
DocsEnum de=null;
for (int i=0; i < 10050; i++) {
String expected=df.format(i);
assertEquals(expected,te.next().utf8ToString());
de=_TestUtil.docs(random(),te,null,de,0);
assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
assertEquals(DocIdSetIterator.NO_MORE_DOCS,de.nextDoc());
}
ir.close();
_TestUtil.checkIndex(dir);
dir.close();
}
