{
  if (field == null) {
    throw new IllegalArgumentException("field can only be null when type is SCORE or DOC");
  }
  this.field=StringHelper.intern(field);
  this.reverse=reverse;
  if (parser instanceof FieldCache.IntParser) {
    this.type=INT;
    this.creator=new IntValuesCreator(field,(FieldCache.IntParser)parser);
  }
 else   if (parser instanceof FieldCache.FloatParser) {
    this.type=FLOAT;
    this.creator=new FloatValuesCreator(field,(FieldCache.FloatParser)parser);
  }
 else   if (parser instanceof FieldCache.ShortParser) {
    this.type=SHORT;
    this.creator=new ShortValuesCreator(field,(FieldCache.ShortParser)parser);
  }
 else   if (parser instanceof FieldCache.ByteParser) {
    this.type=BYTE;
    this.creator=new ByteValuesCreator(field,(FieldCache.ByteParser)parser);
  }
 else   if (parser instanceof FieldCache.LongParser) {
    this.type=LONG;
    this.creator=new LongValuesCreator(field,(FieldCache.LongParser)parser);
  }
 else   if (parser instanceof FieldCache.DoubleParser) {
    this.type=DOUBLE;
    this.creator=new DoubleValuesCreator(field,(FieldCache.DoubleParser)parser);
  }
 else   throw new IllegalArgumentException("Parser instance does not subclass existing numeric parser from FieldCache (got " + parser + ")");
}
