{
  TopOrdCountQueue q=new TopOrdCountQueue(topN);
  int bottomCount=0;
  int ord=children[dimOrd];
  int totCount=0;
  TopOrdCountQueue.OrdAndCount reuse=null;
  while (ord != TaxonomyReader.INVALID_ORDINAL) {
    if (counts[ord] > 0) {
      totCount+=counts[ord];
      if (counts[ord] > bottomCount) {
        if (reuse == null) {
          reuse=new TopOrdCountQueue.OrdAndCount();
        }
        reuse.ord=ord;
        reuse.count=counts[ord];
        reuse=q.insertWithOverflow(reuse);
        if (q.size() == topN) {
          bottomCount=q.top().count;
        }
      }
    }
    ord=siblings[ord];
  }
  if (totCount == 0) {
    return null;
  }
  FacetsConfig.DimConfig ft=facetsConfig.getDimConfig(path.components[0]);
  if (ft.hierarchical && ft.multiValued) {
    totCount=counts[dimOrd];
  }
  LabelAndValue[] labelValues=new LabelAndValue[q.size()];
  for (int i=labelValues.length - 1; i >= 0; i--) {
    TopOrdCountQueue.OrdAndCount ordAndCount=q.pop();
    FacetLabel child=taxoReader.getPath(ordAndCount.ord);
    labelValues[i]=new LabelAndValue(child.components[path.length],ordAndCount.count);
  }
  return new SimpleFacetResult(path,totCount,labelValues);
}
