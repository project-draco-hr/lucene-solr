{
  if (str.length() < 1) {
    throw new InvalidShapeException(str);
  }
  if (Character.isLetter(str.charAt(0))) {
    if (str.startsWith("Circle(")) {
      int idx=str.lastIndexOf(')');
      if (idx > 0) {
        String body=str.substring("Circle(".length(),idx);
        StringTokenizer st=new StringTokenizer(body," ");
        String token=st.nextToken();
        Point pt;
        if (token.indexOf(',') != -1) {
          pt=readLatCommaLonPoint(token);
        }
 else {
          double x=Double.parseDouble(token);
          double y=Double.parseDouble(st.nextToken());
          pt=makePoint(x,y);
        }
        Double d=null;
        String arg=st.nextToken();
        idx=arg.indexOf('=');
        if (idx > 0) {
          String k=arg.substring(0,idx);
          if (k.equals("d") || k.equals("distance")) {
            d=Double.parseDouble(arg.substring(idx + 1));
          }
 else {
            throw new InvalidShapeException("unknown arg: " + k + " :: "+ str);
          }
        }
 else {
          d=Double.parseDouble(arg);
        }
        if (st.hasMoreTokens()) {
          throw new InvalidShapeException("Extra arguments: " + st.nextToken() + " :: "+ str);
        }
        if (d == null) {
          throw new InvalidShapeException("Missing Distance: " + str);
        }
        return makeCircle(pt,d);
      }
    }
    return null;
  }
  if (str.indexOf(',') != -1)   return readLatCommaLonPoint(str);
  StringTokenizer st=new StringTokenizer(str," ");
  double p0=Double.parseDouble(st.nextToken());
  double p1=Double.parseDouble(st.nextToken());
  if (st.hasMoreTokens()) {
    double p2=Double.parseDouble(st.nextToken());
    double p3=Double.parseDouble(st.nextToken());
    if (st.hasMoreTokens())     throw new InvalidShapeException("Only 4 numbers supported (rect) but found more: " + str);
    return makeRect(p0,p2,p1,p3);
  }
  return makePoint(p0,p1);
}
