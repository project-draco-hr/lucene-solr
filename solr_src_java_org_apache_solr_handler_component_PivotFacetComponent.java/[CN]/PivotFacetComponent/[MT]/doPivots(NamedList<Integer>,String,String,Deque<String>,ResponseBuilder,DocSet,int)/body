{
  SolrIndexSearcher searcher=rb.req.getSearcher();
  FieldType ftype=searcher.getSchema().getField(field).getType();
  Field f=new Field(field,"X",Store.YES,Index.ANALYZED);
  String nextField=fnames.poll();
  List<NamedList<Object>> values=new ArrayList<NamedList<Object>>(superFacets.size());
  for (  Map.Entry<String,Integer> kv : superFacets) {
    if (kv.getValue() > minMatch) {
      String internal=ftype.toInternal(kv.getKey());
      f.setValue(internal);
      SimpleOrderedMap<Object> pivot=new SimpleOrderedMap<Object>();
      pivot.add("field",field);
      pivot.add("value",ftype.toObject(f));
      pivot.add("count",kv.getValue());
      if (subField == null) {
        values.add(pivot);
      }
 else {
        Query query=new TermQuery(new Term(field,internal));
        DocSet subset=searcher.getDocSet(query,docs);
        SimpleFacets sf=getFacetImplementation(rb.req,subset,rb.req.getParams());
        NamedList<Integer> nl=sf.getTermCounts(subField);
        if (nl.size() > minMatch) {
          pivot.add("pivot",doPivots(nl,subField,nextField,fnames,rb,subset,minMatch));
          values.add(pivot);
        }
      }
    }
  }
  fnames.push(nextField);
  return values;
}
