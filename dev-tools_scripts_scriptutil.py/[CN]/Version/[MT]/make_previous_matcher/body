def make_previous_matcher(self, prefix='', suffix='', sep='\\.'):
    if self.is_bugfix_release():
        pattern = ('%s%s%s%s%d' % (self.major, sep, self.minor, sep, (self.bugfix - 1)))
    elif self.is_minor_release():
        pattern = ('%s%s%d%s\\d+' % (self.major, sep, (self.minor - 1), sep))
    else:
        pattern = ('%d%s\\d+%s\\d+' % ((self.major - 1), sep, sep))
    return re.compile(((((prefix + '(') + pattern) + ')') + suffix))
