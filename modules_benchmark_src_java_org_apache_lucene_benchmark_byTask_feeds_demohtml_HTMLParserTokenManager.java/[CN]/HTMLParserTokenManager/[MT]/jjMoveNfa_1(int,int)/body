{
  int startsAt=0;
  jjnewStateCnt=12;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 1:
          if ((0xafffffffffffffffL & l) != 0L) {
            if (kind > 14)             kind=14;
            jjCheckNAdd(0);
          }
 else           if ((0x5000000000000000L & l) != 0L) {
            if (kind > 14)             kind=14;
          }
        if (curChar == 60)         jjstateSet[jjnewStateCnt++]=10;
      break;
case 0:
    if ((0xafffffffffffffffL & l) == 0L)     break;
  if (kind > 14)   kind=14;
jjCheckNAdd(0);
break;
case 3:
if ((0xafffffffffffffffL & l) != 0L) jjAddStates(18,19);
break;
case 4:
if (curChar == 62 && kind > 15) kind=15;
break;
case 10:
if (curChar == 47) jjstateSet[jjnewStateCnt++]=9;
break;
case 11:
if (curChar == 60) jjstateSet[jjnewStateCnt++]=10;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 1:
case 0:
if (kind > 14) kind=14;
jjCheckNAdd(0);
break;
case 2:
if (curChar == 116) jjCheckNAddTwoStates(3,4);
break;
case 3:
jjCheckNAddTwoStates(3,4);
break;
case 5:
if (curChar == 112) jjstateSet[jjnewStateCnt++]=2;
break;
case 6:
if (curChar == 105) jjstateSet[jjnewStateCnt++]=5;
break;
case 7:
if (curChar == 114) jjstateSet[jjnewStateCnt++]=6;
break;
case 8:
if (curChar == 99) jjstateSet[jjnewStateCnt++]=7;
break;
case 9:
if (curChar == 115) jjstateSet[jjnewStateCnt++]=8;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int hiByte=(curChar >> 8);
int i1=hiByte >> 6;
long l1=1L << (hiByte & 077);
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 1:
case 0:
if (!jjCanMove_0(hiByte,i1,i2,l1,l2)) break;
if (kind > 14) kind=14;
jjCheckNAdd(0);
break;
case 3:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(18,19);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=12 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
