{
  CharsetDecoder decoder=StandardCharsets.UTF_8.newDecoder().onMalformedInput(CodingErrorAction.REPORT).onUnmappableCharacter(CodingErrorAction.REPORT);
  SynonymMap.Parser parser;
  Class<? extends SynonymMap.Parser> clazz=loader.findClass(cname,SynonymMap.Parser.class);
  try {
    parser=clazz.getConstructor(boolean.class,boolean.class,Analyzer.class).newInstance(dedup,expand,analyzer);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  List<String> files=splitFileNames(synonyms);
  for (  String file : files) {
    decoder.reset();
    try (final Reader isr=new InputStreamReader(loader.openResource(file),decoder)){
      parser.parse(isr);
    }
   }
  return parser.build();
}
