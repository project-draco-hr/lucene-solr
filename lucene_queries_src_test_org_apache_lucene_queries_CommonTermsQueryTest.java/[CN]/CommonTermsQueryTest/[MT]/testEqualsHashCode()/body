{
  CommonTermsQuery query=new CommonTermsQuery(randomOccur(random()),randomOccur(random()),random().nextFloat(),random().nextBoolean());
  int terms=atLeast(2);
  for (int i=0; i < terms; i++) {
    query.add(new Term(_TestUtil.randomRealisticUnicodeString(random()),_TestUtil.randomRealisticUnicodeString(random())));
  }
  QueryUtils.checkHashEquals(query);
  QueryUtils.checkUnequal(new CommonTermsQuery(randomOccur(random()),randomOccur(random()),random().nextFloat(),random().nextBoolean()),query);
{
    final long seed=random().nextLong();
    Random r=new Random(seed);
    CommonTermsQuery left=new CommonTermsQuery(randomOccur(r),randomOccur(r),r.nextFloat(),r.nextBoolean());
    int leftTerms=atLeast(r,2);
    for (int i=0; i < leftTerms; i++) {
      left.add(new Term(_TestUtil.randomRealisticUnicodeString(r),_TestUtil.randomRealisticUnicodeString(r)));
    }
    r=new Random(seed);
    CommonTermsQuery right=new CommonTermsQuery(randomOccur(r),randomOccur(r),r.nextFloat(),r.nextBoolean());
    int rightTerms=atLeast(r,2);
    for (int i=0; i < rightTerms; i++) {
      right.add(new Term(_TestUtil.randomRealisticUnicodeString(r),_TestUtil.randomRealisticUnicodeString(r)));
    }
    QueryUtils.checkEqual(left,right);
  }
}
