{
  try {
    DistanceCount dc=new DistanceCount(args[0]);
    boolean running=true;
    BufferedReader in=new BufferedReader(new InputStreamReader(System.in),400);
    while (running) {
      System.out.print("\n\nCommand (? for help) > ");
      String newL;
      String input="";
      input=in.readLine();
      StringTokenizer st=new StringTokenizer(input," ");
      String command;
      boolean printHelp=false;
      if (!st.hasMoreTokens()) {
        printHelp=true;
        command="?";
      }
 else {
        command=st.nextToken();
      }
      try {
        if ("?".equals(command)) {
          printHelp=true;
        }
 else         if ("d".equals(command)) {
          String from=st.nextToken();
          String to=st.nextToken();
          dc.printDistance(from,to);
        }
 else         if ("q".equals(command)) {
          running=false;
        }
 else         if ("r".equals(command)) {
          dc.printRandomRoute();
        }
 else {
          System.out.println("unknown command '" + command + "'");
        }
      }
 catch (      java.util.NoSuchElementException e) {
        System.out.println("Syntax error");
        e.printStackTrace();
        printHelp=true;
      }
catch (      Exception e) {
        e.printStackTrace();
      }
      if (printHelp) {
        System.out.println("\nSyntax\n" + "?   print this help message\n" + "d <page1> <page2>   print shortest route from page1 to page2\n"+ "r                   print random walk\n"+ "q                   quit");
      }
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
catch (  ArrayIndexOutOfBoundsException e) {
    System.out.println("Syntax: java ... store.log");
  }
}
