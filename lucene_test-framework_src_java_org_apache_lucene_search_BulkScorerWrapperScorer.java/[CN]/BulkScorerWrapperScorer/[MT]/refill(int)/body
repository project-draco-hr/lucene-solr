{
  bufferLength=0;
  while (next != DocIdSetIterator.NO_MORE_DOCS && bufferLength == 0) {
    final int min=Math.max(target,next);
    final int max=min + docs.length;
    next=scorer.score(new LeafCollector(){
      Scorer scorer;
      @Override public void setScorer(      Scorer scorer) throws IOException {
        this.scorer=scorer;
      }
      @Override public void collect(      int doc) throws IOException {
        docs[bufferLength]=doc;
        freqs[bufferLength]=scorer.freq();
        scores[bufferLength]=scorer.score();
        bufferLength+=1;
      }
    }
,min,max);
  }
  i=-1;
}
