{
  assertTrue(dir != null);
  assertTrue(fieldInfos != null);
  FieldsReader reader=new FieldsReader(dir,TEST_SEGMENT_NAME,fieldInfos);
  assertTrue(reader.size() == 1);
  Set<String> loadFieldNames=new HashSet<String>();
  loadFieldNames.add(DocHelper.TEXT_FIELD_1_KEY);
  loadFieldNames.add(DocHelper.TEXT_FIELD_UTF1_KEY);
  Set<String> lazyFieldNames=new HashSet<String>();
  lazyFieldNames.add(DocHelper.LARGE_LAZY_FIELD_KEY);
  lazyFieldNames.add(DocHelper.LAZY_FIELD_KEY);
  lazyFieldNames.add(DocHelper.LAZY_FIELD_BINARY_KEY);
  lazyFieldNames.add(DocHelper.TEXT_FIELD_UTF2_KEY);
  SetBasedFieldSelector fieldSelector=new SetBasedFieldSelector(loadFieldNames,lazyFieldNames);
  Document doc=reader.doc(0,fieldSelector);
  assertTrue("doc is null and it shouldn't be",doc != null);
  Fieldable field=doc.getFieldable(DocHelper.LAZY_FIELD_KEY);
  assertTrue("field is null and it shouldn't be",field != null);
  assertTrue("field is not lazy and it should be",field.isLazy());
  reader.close();
  try {
    field.stringValue();
    fail("did not hit AlreadyClosedException as expected");
  }
 catch (  AlreadyClosedException e) {
  }
}
