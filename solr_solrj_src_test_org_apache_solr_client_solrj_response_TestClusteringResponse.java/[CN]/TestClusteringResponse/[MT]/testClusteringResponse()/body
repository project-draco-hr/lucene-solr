{
  XMLResponseParser parser=new XMLResponseParser();
  InputStream is=new SolrResourceLoader().openResource("solrj/sampleClusteringResponse.xml");
  assertNotNull(is);
  Reader in=new InputStreamReader(is,StandardCharsets.UTF_8);
  NamedList<Object> response=parser.processResponse(in);
  in.close();
  QueryResponse qr=new QueryResponse(response,null);
  ClusteringResponse clusteringResponse=qr.getClusteringResponse();
  List<Cluster> clusters=clusteringResponse.getClusters();
  Assert.assertEquals(4,clusters.size());
  Cluster cluster1=clusters.get(0);
  List<String> expectedLabel1=new LinkedList<String>();
  expectedLabel1.add("label1");
  List<String> expectedDocs1=new LinkedList<String>();
  expectedDocs1.add("id1");
  expectedDocs1.add("id2");
  expectedDocs1.add("id3");
  Assert.assertEquals(expectedLabel1,cluster1.getLabels());
  Assert.assertEquals(expectedDocs1,cluster1.getDocs());
  Assert.assertEquals(expectedLabel1,cluster1.getLabels());
  Assert.assertEquals(0.6,cluster1.getScore(),0);
  Cluster cluster2=clusters.get(1);
  List<String> expectedLabel2=new LinkedList<String>();
  expectedLabel2.add("label2");
  List<String> expectedDocs2=new LinkedList<String>();
  expectedDocs2.add("id5");
  expectedDocs2.add("id6");
  Assert.assertEquals(expectedLabel2,cluster2.getLabels());
  Assert.assertEquals(expectedDocs2,cluster2.getDocs());
  Assert.assertEquals(expectedLabel2,cluster2.getLabels());
  Assert.assertEquals(0.93,cluster2.getScore(),0);
  Cluster cluster3=clusters.get(2);
  List<String> expectedLabel3=new LinkedList<String>();
  expectedLabel3.add("label3");
  List<String> expectedDocs3=new LinkedList<String>();
  expectedDocs3.add("id7");
  expectedDocs3.add("id8");
  Assert.assertEquals(expectedLabel3,cluster3.getLabels());
  Assert.assertEquals(expectedDocs3,cluster3.getDocs());
  Assert.assertEquals(expectedLabel3,cluster3.getLabels());
  Assert.assertEquals(1.26,cluster3.getScore(),0);
  Cluster cluster4=clusters.get(3);
  List<String> expectedLabel4=new LinkedList<String>();
  expectedLabel4.add("label4");
  List<String> expectedDocs4=new LinkedList<String>();
  expectedDocs4.add("id9");
  Assert.assertEquals(expectedLabel4,cluster4.getLabels());
  Assert.assertEquals(expectedDocs4,cluster4.getDocs());
  Assert.assertEquals(expectedLabel4,cluster4.getLabels());
  Assert.assertEquals(0.0,cluster4.getScore(),0);
}
