{
  MockDirectoryWrapper dir=newMockDirectory();
  dir.setThrottling(MockDirectoryWrapper.Throttling.NEVER);
  dir.setUseSlowOpenClosers(false);
  final AtomicBoolean doFailExc=new AtomicBoolean();
  dir.failOn(new MockDirectoryWrapper.Failure(){
    @Override public void eval(    MockDirectoryWrapper dir) throws IOException {
      if (doFailExc.get() && random().nextInt(4) == 1) {
        Exception e=new Exception();
        StackTraceElement stack[]=e.getStackTrace();
        for (int i=0; i < stack.length; i++) {
          if (stack[i].getClassName().equals(IndexFileDeleter.class.getName()) && stack[i].getMethodName().equals("decRef")) {
            throw new RuntimeException("fake fail");
          }
        }
      }
    }
  }
);
  IndexWriterConfig iwc=newIndexWriterConfig(new MockAnalyzer(random()));
  MergeScheduler ms=iwc.getMergeScheduler();
  if (ms instanceof ConcurrentMergeScheduler) {
    final ConcurrentMergeScheduler suppressFakeFail=new ConcurrentMergeScheduler(){
      @Override protected void handleMergeException(      Throwable exc){
        if (exc instanceof RuntimeException && exc.getMessage().equals("fake fail")) {
        }
 else {
          super.handleMergeException(exc);
        }
      }
    }
;
    final ConcurrentMergeScheduler cms=(ConcurrentMergeScheduler)ms;
    suppressFakeFail.setMaxMergesAndThreads(cms.getMaxMergeCount(),cms.getMaxThreadCount());
    suppressFakeFail.setMergeThreadPriority(cms.getMergeThreadPriority());
    iwc.setMergeScheduler(suppressFakeFail);
  }
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,iwc);
  w.setDoRandomForceMergeAssert(false);
  doFailExc.set(true);
  int ITERS=atLeast(1000);
  for (int iter=0; iter < ITERS; iter++) {
    try {
      if (random().nextInt(10) == 5) {
        w.commit();
      }
 else       if (random().nextInt(10) == 7) {
        w.getReader().close();
      }
 else {
        Document doc=new Document();
        doc.add(newTextField("field","some text",Field.Store.NO));
        w.addDocument(doc);
      }
    }
 catch (    IOException ioe) {
      if (ioe.getMessage().contains("background merge hit exception")) {
        Throwable cause=ioe.getCause();
        if (cause != null && cause instanceof RuntimeException && ((RuntimeException)cause).getMessage().equals("fake fail")) {
        }
 else {
          throw ioe;
        }
      }
 else {
        throw ioe;
      }
    }
catch (    RuntimeException re) {
      if (re.getMessage().equals("fake fail")) {
      }
 else {
        throw re;
      }
    }
  }
  doFailExc.set(false);
  w.close();
  dir.close();
}
