{
  Directory dir=newDirectory();
  if (dir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)dir).setPreventDoubleWrite(false);
    ((MockDirectoryWrapper)dir).setEnableVirusScanner(false);
  }
  MergePolicy mergePolicy=newLogMergePolicy(true,10);
  mergePolicy.setNoCFSRatio(1.0);
  mergePolicy.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(10).setMergePolicy(mergePolicy).setUseCompoundFile(true));
  int i;
  for (i=0; i < 35; i++) {
    addDoc(writer,i);
  }
  writer.getConfig().getMergePolicy().setNoCFSRatio(0.0);
  writer.getConfig().setUseCompoundFile(false);
  for (; i < 45; i++) {
    addDoc(writer,i);
  }
  writer.close();
  writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE).setUseCompoundFile(true));
  Term searchTerm=new Term("id","7");
  writer.deleteDocuments(searchTerm);
  writer.close();
  String[] files=dir.listAll();
  String ext=".liv";
  copyFile(dir,"_0_1" + ext,"_0_2" + ext);
  copyFile(dir,"_0_1" + ext,"_1_1" + ext);
  copyFile(dir,"_0_1" + ext,"_188_1" + ext);
  copyFile(dir,"_0.cfs","_188.cfs");
  copyFile(dir,"_0.cfs","_0.fnm");
  copyFile(dir,"segments_2","segments");
  copyFile(dir,"segments_2","segments_1");
  assertTrue(slowFileExists(dir,"_3.fdt") || slowFileExists(dir,"_3.fld"));
  assertTrue(!slowFileExists(dir,"_3.cfs"));
  copyFile(dir,"_1.cfs","_3.cfs");
  String[] filesPre=dir.listAll();
  writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));
  writer.close();
  String[] files2=dir.listAll();
  dir.close();
  Arrays.sort(files);
  Arrays.sort(files2);
  Set<String> dif=difFiles(files,files2);
  if (!Arrays.equals(files,files2)) {
    fail("IndexFileDeleter failed to delete unreferenced extra files: should have deleted " + (filesPre.length - files.length) + " files but only deleted "+ (filesPre.length - files2.length)+ "; expected files:\n    "+ asString(files)+ "\n  actual files:\n    "+ asString(files2)+ "\ndiff: "+ dif);
  }
}
