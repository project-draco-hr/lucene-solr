{
  final ArrayList<Completion> res=new ArrayList<Completion>(Math.min(10,num));
  final BytesRef output=BytesRef.deepCopyOf(key);
  for (int i=0; i < rootArcs.length; i++) {
    final FST.Arc<Object> rootArc=rootArcs[i];
    final FST.Arc<Object> arc=new FST.Arc<Object>().copyFrom(rootArc);
    if (descendWithPrefix(arc,key)) {
      output.length=key.length - 1;
      if (collect(res,num,rootArc.label,output,arc) && !collectAll) {
        if (exactFirst) {
          if (!checkExistingAndReorder(res,key)) {
            Integer exactMatchBucket=getExactMatchStartingFromRootArc(i,key);
            if (exactMatchBucket != null) {
              while (res.size() >= num) {
                res.remove(res.size() - 1);
              }
              res.add(0,new Completion(key,exactMatchBucket));
            }
          }
        }
        break;
      }
    }
  }
  return res;
}
