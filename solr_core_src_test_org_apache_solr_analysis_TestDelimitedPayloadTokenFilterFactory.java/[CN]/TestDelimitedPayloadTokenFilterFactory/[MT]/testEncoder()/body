{
  Map<String,String> args=new HashMap<String,String>();
  args.put(DelimitedPayloadTokenFilterFactory.ENCODER_ATTR,"float");
  DelimitedPayloadTokenFilterFactory factory=new DelimitedPayloadTokenFilterFactory();
  factory.init(args);
  ResourceLoader loader=new SolrResourceLoader(null,null);
  factory.inform(loader);
  TokenStream input=new WhitespaceTokenizer(DEFAULT_VERSION,new StringReader("the|0.1 quick|0.1 red|0.1"));
  DelimitedPayloadTokenFilter tf=factory.create(input);
  while (tf.incrementToken()) {
    PayloadAttribute payAttr=tf.getAttribute(PayloadAttribute.class);
    assertTrue("payAttr is null and it shouldn't be",payAttr != null);
    byte[] payData=payAttr.getPayload().getData();
    assertTrue("payData is null and it shouldn't be",payData != null);
    assertTrue("payData is null and it shouldn't be",payData != null);
    float payFloat=PayloadHelper.decodeFloat(payData);
    assertTrue(payFloat + " does not equal: " + 0.1f,payFloat == 0.1f);
  }
}
