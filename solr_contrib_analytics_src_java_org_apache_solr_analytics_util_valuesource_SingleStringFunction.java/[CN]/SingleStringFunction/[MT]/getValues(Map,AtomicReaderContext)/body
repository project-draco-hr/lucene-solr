{
  final FunctionValues vals=source.getValues(context,readerContext);
  return new StrDocValues(this){
    @Override public String strVal(    int doc){
      CharSequence cs=func(doc,vals);
      return cs != null ? cs.toString() : null;
    }
    @Override public boolean bytesVal(    int doc,    BytesRefBuilder bytes){
      CharSequence cs=func(doc,vals);
      if (cs != null) {
        bytes.copyChars(func(doc,vals));
        return true;
      }
 else {
        bytes.clear();
        return false;
      }
    }
    @Override public Object objectVal(    int doc){
      return strVal(doc);
    }
    @Override public boolean exists(    int doc){
      return vals.exists(doc);
    }
    @Override public String toString(    int doc){
      return name() + '(' + strVal(doc)+ ')';
    }
    @Override public ValueFiller getValueFiller(){
      return new ValueFiller(){
        private final MutableValueStr mval=new MutableValueStr();
        @Override public MutableValue getValue(){
          return mval;
        }
        @Override public void fillValue(        int doc){
          mval.exists=bytesVal(doc,mval.value);
        }
      }
;
    }
  }
;
}
