{
  int n=atLeast(4);
  for (int i=0; i < n; i++) {
    Filter odd=new QueryWrapperFilter(new TermQuery(new Term("oddeven","odd")));
    assertQuery(new MatchAllDocsQuery(),null);
    assertQuery(new TermQuery(new Term("english","one")),null);
    assertQuery(new MatchAllDocsQuery(),odd);
    assertQuery(new TermQuery(new Term("english","four")),odd);
    BooleanQuery bq=new BooleanQuery();
    bq.add(new TermQuery(new Term("english","one")),BooleanClause.Occur.SHOULD);
    bq.add(new TermQuery(new Term("oddeven","even")),BooleanClause.Occur.SHOULD);
    assertQuery(bq,null);
    bq.add(new TermQuery(new Term("english","two")),BooleanClause.Occur.SHOULD);
    bq.setMinimumNumberShouldMatch(2);
    assertQuery(bq,null);
  }
}
