{
  for (int i=0; i < 10; i++) {
    boolean reversed=random().nextBoolean();
    SortField fields[]=new SortField[]{new SortField("int",SortField.Type.INT,reversed),new SortField("long",SortField.Type.LONG,reversed),new SortField("float",SortField.Type.FLOAT,reversed),new SortField("double",SortField.Type.DOUBLE,reversed),new SortField("intdocvalues",SortField.Type.INT,reversed),new SortField("floatdocvalues",SortField.Type.FLOAT,reversed),new SortField("score",SortField.Type.SCORE)};
    Collections.shuffle(Arrays.asList(fields),random());
    int numSorts=TestUtil.nextInt(random(),1,fields.length);
    assertQuery(query,filter,new Sort(Arrays.copyOfRange(fields,0,numSorts)));
  }
}
