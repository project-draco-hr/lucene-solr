{
  final DocValues[] valsArr1=new DocValues[sources1.size()];
  int i=0;
  for (  ValueSource source : sources1) {
    valsArr1[i++]=source.getValues(context,reader);
  }
  final DocValues[] valsArr2=new DocValues[sources2.size()];
  i=0;
  for (  ValueSource source : sources2) {
    valsArr2[i++]=source.getValues(context,reader);
  }
  return new DocValues(){
    public float floatVal(    int doc){
      return (float)doubleVal(doc);
    }
    public int intVal(    int doc){
      return (int)doubleVal(doc);
    }
    public long longVal(    int doc){
      return (long)doubleVal(doc);
    }
    public double doubleVal(    int doc){
      return distance(doc,valsArr1,valsArr2);
    }
    public String strVal(    int doc){
      return Double.toString(doubleVal(doc));
    }
    @Override public String toString(    int doc){
      StringBuilder sb=new StringBuilder();
      sb.append(name()).append('(').append(power).append(',');
      boolean firstTime=true;
      for (      DocValues vals : valsArr1) {
        if (firstTime) {
          firstTime=false;
        }
 else {
          sb.append(',');
        }
        sb.append(vals.toString(doc));
      }
      for (      DocValues vals : valsArr2) {
        sb.append(',');
        sb.append(vals.toString(doc));
      }
      sb.append(')');
      return sb.toString();
    }
  }
;
}
