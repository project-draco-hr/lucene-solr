{
  parent=findAncestorWithClass(this,com.netwebapps.taglib.search.SearchTag.class);
  if (runOnce && getLoopCount() > 1) {
    abort=true;
    return SKIP_BODY;
  }
  try {
    getFieldsMethod=(Method)parent.getClass().getMethod("getFields",null);
    fieldSet=(Set)getFieldsMethod.invoke(parent,null);
  }
 catch (  SecurityException e) {
    if (throwOnException) {
      throw new JspException("A security violation occurred: " + e);
    }
    abort=true;
  }
catch (  IllegalArgumentException e) {
    if (throwOnException) {
      throw new JspException("IllegalArgumentException: " + e);
    }
    abort=true;
  }
catch (  NoSuchMethodException e) {
    if (throwOnException) {
      throw new JspException("Unable to declair the getField method : " + e);
    }
    abort=true;
  }
catch (  IllegalAccessException e) {
    if (throwOnException) {
      throw new JspException("Access denied: " + e);
    }
    abort=true;
  }
catch (  InvocationTargetException e) {
    if (throwOnException) {
      throw new JspException("This tag must be nested in a Search tag in order to work: " + e);
    }
    abort=true;
  }
catch (  NullPointerException e) {
    if (throwOnException) {
      throw new JspException(e);
    }
    abort=true;
  }
  if (abort) {
    return SKIP_BODY;
  }
  if (fieldSet != null) {
    nextField=fieldSet.iterator();
    while (nextField.hasNext()) {
      fieldArray.add(nextField.next());
    }
    columnCount=fieldSet.size();
    pageContext.setAttribute(getId(),this,PageContext.PAGE_SCOPE);
    return EVAL_BODY_AGAIN;
  }
  return SKIP_BODY;
}
