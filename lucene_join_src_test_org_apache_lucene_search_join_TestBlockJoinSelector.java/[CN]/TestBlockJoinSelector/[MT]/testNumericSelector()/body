{
  final BitSet parents=new FixedBitSet(20);
  parents.set(0);
  parents.set(5);
  parents.set(6);
  parents.set(10);
  parents.set(15);
  parents.set(19);
  final BitSet children=new FixedBitSet(20);
  children.set(2);
  children.set(3);
  children.set(4);
  children.set(12);
  children.set(17);
  final long[] longs=new long[20];
  final BitSet docsWithValue=new FixedBitSet(20);
  docsWithValue.set(2);
  longs[2]=5;
  docsWithValue.set(3);
  longs[3]=7;
  docsWithValue.set(4);
  longs[4]=3;
  docsWithValue.set(12);
  longs[12]=10;
  docsWithValue.set(18);
  longs[18]=10;
  final NumericDocValues values=new NumericDocValues(){
    @Override public long get(    int docID){
      return longs[docID];
    }
  }
;
  final NumericDocValues mins=BlockJoinSelector.wrap(DocValues.singleton(values,docsWithValue),BlockJoinSelector.Type.MIN,parents,children);
  assertEquals(0,mins.get(0));
  assertEquals(3,mins.get(5));
  assertEquals(0,mins.get(6));
  assertEquals(0,mins.get(10));
  assertEquals(10,mins.get(15));
  assertEquals(0,mins.get(19));
  final NumericDocValues maxs=BlockJoinSelector.wrap(DocValues.singleton(values,docsWithValue),BlockJoinSelector.Type.MAX,parents,children);
  assertEquals(0,maxs.get(0));
  assertEquals(7,maxs.get(5));
  assertEquals(0,maxs.get(6));
  assertEquals(0,maxs.get(10));
  assertEquals(10,maxs.get(15));
  assertEquals(0,maxs.get(19));
}
