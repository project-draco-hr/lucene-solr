{
  final BitSet parents=new FixedBitSet(20);
  parents.set(0);
  parents.set(5);
  parents.set(6);
  parents.set(10);
  parents.set(15);
  parents.set(19);
  final BitSet children=new FixedBitSet(20);
  children.set(2);
  children.set(3);
  children.set(4);
  children.set(12);
  children.set(17);
  final int[] ords=new int[20];
  Arrays.fill(ords,-1);
  ords[2]=5;
  ords[3]=7;
  ords[4]=3;
  ords[12]=10;
  ords[18]=10;
  final SortedDocValues values=new SortedDocValues(){
    @Override public int getOrd(    int docID){
      return ords[docID];
    }
    @Override public BytesRef lookupOrd(    int ord){
      throw new UnsupportedOperationException();
    }
    @Override public int getValueCount(){
      return 11;
    }
  }
;
  final SortedDocValues mins=BlockJoinSelector.wrap(DocValues.singleton(values),BlockJoinSelector.Type.MIN,parents,children);
  assertEquals(-1,mins.getOrd(0));
  assertEquals(3,mins.getOrd(5));
  assertEquals(-1,mins.getOrd(6));
  assertEquals(-1,mins.getOrd(10));
  assertEquals(10,mins.getOrd(15));
  assertEquals(-1,mins.getOrd(19));
  final SortedDocValues maxs=BlockJoinSelector.wrap(DocValues.singleton(values),BlockJoinSelector.Type.MAX,parents,children);
  assertEquals(-1,maxs.getOrd(0));
  assertEquals(7,maxs.getOrd(5));
  assertEquals(-1,maxs.getOrd(6));
  assertEquals(-1,maxs.getOrd(10));
  assertEquals(10,maxs.getOrd(15));
  assertEquals(-1,maxs.getOrd(19));
}
