{
  final BitSet parents=new FixedBitSet(20);
  parents.set(0);
  parents.set(5);
  parents.set(6);
  parents.set(10);
  parents.set(15);
  parents.set(19);
  final BitSet children=new FixedBitSet(20);
  children.set(2);
  children.set(3);
  children.set(4);
  children.set(12);
  children.set(17);
  final int[] ords=new int[20];
  Arrays.fill(ords,-1);
  ords[2]=5;
  ords[3]=7;
  ords[4]=3;
  ords[12]=10;
  ords[18]=10;
  final SortedDocValues mins=BlockJoinSelector.wrap(DocValues.singleton(new CannedSortedDocValues(ords)),BlockJoinSelector.Type.MIN,parents,children);
  assertEquals(5,mins.nextDoc());
  assertEquals(3,mins.ordValue());
  assertEquals(15,mins.nextDoc());
  assertEquals(10,mins.ordValue());
  assertEquals(19,mins.nextDoc());
  assertEquals(10,mins.ordValue());
  assertEquals(NO_MORE_DOCS,mins.nextDoc());
  final SortedDocValues maxs=BlockJoinSelector.wrap(DocValues.singleton(new CannedSortedDocValues(ords)),BlockJoinSelector.Type.MAX,parents,children);
  assertEquals(5,maxs.nextDoc());
  assertEquals(7,maxs.ordValue());
  assertEquals(15,maxs.nextDoc());
  assertEquals(10,maxs.ordValue());
  assertEquals(19,maxs.nextDoc());
  assertEquals(10,maxs.ordValue());
  assertEquals(NO_MORE_DOCS,maxs.nextDoc());
}
