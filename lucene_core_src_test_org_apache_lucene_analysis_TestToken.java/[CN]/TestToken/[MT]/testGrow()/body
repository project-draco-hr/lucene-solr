{
  Token t=new Token();
  StringBuilder buf=new StringBuilder("ab");
  for (int i=0; i < 20; i++) {
    char[] content=buf.toString().toCharArray();
    t.copyBuffer(content,0,content.length);
    assertEquals(buf.length(),t.length());
    assertEquals(buf.toString(),t.toString());
    buf.append(buf.toString());
  }
  assertEquals(1048576,t.length());
  t=new Token();
  buf=new StringBuilder("ab");
  for (int i=0; i < 20; i++) {
    t.setEmpty().append(buf);
    String content=buf.toString();
    assertEquals(content.length(),t.length());
    assertEquals(content,t.toString());
    buf.append(content);
  }
  assertEquals(1048576,t.length());
  t=new Token();
  buf=new StringBuilder("a");
  for (int i=0; i < 20000; i++) {
    t.setEmpty().append(buf);
    String content=buf.toString();
    assertEquals(content.length(),t.length());
    assertEquals(content,t.toString());
    buf.append("a");
  }
  assertEquals(20000,t.length());
  t=new Token();
  buf=new StringBuilder("a");
  for (int i=0; i < 20000; i++) {
    t.setEmpty().append(buf);
    String content=buf.toString();
    assertEquals(content.length(),t.length());
    assertEquals(content,t.toString());
    buf.append("a");
  }
  assertEquals(20000,t.length());
}
