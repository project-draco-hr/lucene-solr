{
  numHighlights=0;
  query=new WildcardQuery(new Term(FIELD_NAME,"ken*"));
  ((WildcardQuery)query).setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);
  searcher=new IndexSearcher(ramDir);
  System.out.println("Searching for: " + query.toString(FIELD_NAME));
  hits=searcher.search(query);
  for (int i=0; i < hits.length(); i++) {
    String text=hits.doc(i).get(HighlighterTest.FIELD_NAME);
    int maxNumFragmentsRequired=2;
    String fragmentSeparator="...";
    QueryScorer scorer=null;
    TokenStream tokenStream=null;
    tokenStream=analyzer.tokenStream(HighlighterTest.FIELD_NAME,new StringReader(text));
    scorer=new QueryScorer(query,HighlighterTest.FIELD_NAME);
    Highlighter highlighter=new Highlighter(this,scorer);
    highlighter.setTextFragmenter(new SimpleFragmenter(20));
    String result=highlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired,fragmentSeparator);
    System.out.println("\t" + result);
  }
  assertTrue("Failed to find correct number of highlights " + numHighlights + " found",numHighlights == 5);
  hits=searcher.search(query);
  numHighlights=0;
  for (int i=0; i < hits.length(); i++) {
    String text=hits.doc(i).get(HighlighterTest.FIELD_NAME);
    int maxNumFragmentsRequired=2;
    String fragmentSeparator="...";
    QueryScorer scorer=null;
    TokenStream tokenStream=null;
    tokenStream=analyzer.tokenStream(HighlighterTest.FIELD_NAME,new StringReader(text));
    scorer=new QueryScorer(query,null);
    Highlighter highlighter=new Highlighter(this,scorer);
    highlighter.setTextFragmenter(new SimpleFragmenter(20));
    String result=highlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired,fragmentSeparator);
    System.out.println("\t" + result);
  }
  assertTrue("Failed to find correct number of highlights " + numHighlights + " found",numHighlights == 5);
  hits=searcher.search(query);
  numHighlights=0;
  for (int i=0; i < hits.length(); i++) {
    String text=hits.doc(i).get(HighlighterTest.FIELD_NAME);
    int maxNumFragmentsRequired=2;
    String fragmentSeparator="...";
    QueryScorer scorer=null;
    TokenStream tokenStream=null;
    tokenStream=analyzer.tokenStream(HighlighterTest.FIELD_NAME,new StringReader(text));
    scorer=new QueryScorer(query,"random_field",HighlighterTest.FIELD_NAME);
    Highlighter highlighter=new Highlighter(this,scorer);
    highlighter.setTextFragmenter(new SimpleFragmenter(20));
    String result=highlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired,fragmentSeparator);
    System.out.println("\t" + result);
  }
  assertTrue("Failed to find correct number of highlights " + numHighlights + " found",numHighlights == 5);
}
