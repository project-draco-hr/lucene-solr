{
  RAMDirectory ramDir1=new RAMDirectory();
  IndexWriter writer1=new IndexWriter(ramDir1,new StandardAnalyzer(),true);
  Document d=new Document();
  Field f=new Field(FIELD_NAME,"multiOne",Field.Store.YES,Field.Index.TOKENIZED);
  d.add(f);
  writer1.addDocument(d);
  writer1.optimize();
  writer1.close();
  IndexReader reader1=IndexReader.open(ramDir1);
  RAMDirectory ramDir2=new RAMDirectory();
  IndexWriter writer2=new IndexWriter(ramDir2,new StandardAnalyzer(),true);
  d=new Document();
  f=new Field(FIELD_NAME,"multiTwo",Field.Store.YES,Field.Index.TOKENIZED);
  d.add(f);
  writer2.addDocument(d);
  writer2.optimize();
  writer2.close();
  IndexReader reader2=IndexReader.open(ramDir2);
  IndexSearcher searchers[]=new IndexSearcher[2];
  searchers[0]=new IndexSearcher(ramDir1);
  searchers[1]=new IndexSearcher(ramDir2);
  MultiSearcher multiSearcher=new MultiSearcher(searchers);
  QueryParser parser=new QueryParser(FIELD_NAME,new StandardAnalyzer());
  query=parser.parse("multi*");
  System.out.println("Searching for: " + query.toString(FIELD_NAME));
  hits=multiSearcher.search(query);
  Query expandedQueries[]=new Query[2];
  expandedQueries[0]=query.rewrite(reader1);
  expandedQueries[1]=query.rewrite(reader2);
  query=query.combine(expandedQueries);
  Highlighter highlighter=new Highlighter(this,new QueryScorer(query));
  for (int i=0; i < hits.length(); i++) {
    String text=hits.doc(i).get(FIELD_NAME);
    TokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));
    String highlightedText=highlighter.getBestFragment(tokenStream,text);
    System.out.println(highlightedText);
  }
  assertTrue("Failed to find correct number of highlights " + numHighlights + " found",numHighlights == 2);
}
