{
  TestHighlightRunner helper=new TestHighlightRunner(){
    public void run() throws Exception {
      String goodWord="goodtoken";
      Set stopWords=new HashSet(1);
      stopWords.add("stoppedtoken");
      TermQuery query=new TermQuery(new Term("data",goodWord));
      String match=null;
      StringBuilder sb=new StringBuilder();
      sb.append(goodWord);
      for (int i=0; i < 10000; i++) {
        sb.append(" ");
        sb.append(stopWords.iterator().next());
      }
      SimpleHTMLFormatter fm=new SimpleHTMLFormatter();
      Highlighter hg=getHighlighter(query,"data",new StandardAnalyzer(TEST_VERSION,stopWords).tokenStream("data",new StringReader(sb.toString())),fm);
      hg.setTextFragmenter(new NullFragmenter());
      hg.setMaxDocBytesToAnalyze(100);
      match=hg.getBestFragment(new StandardAnalyzer(TEST_VERSION,stopWords),"data",sb.toString());
      assertTrue("Matched text should be no more than 100 chars in length ",match.length() < hg.getMaxDocBytesToAnalyze());
      sb.append(" ");
      sb.append(goodWord);
      match=hg.getBestFragment(new StandardAnalyzer(TEST_VERSION,stopWords),"data",sb.toString());
      assertTrue("Matched text should be no more than 100 chars in length ",match.length() < hg.getMaxDocBytesToAnalyze());
    }
  }
;
  helper.start();
}
