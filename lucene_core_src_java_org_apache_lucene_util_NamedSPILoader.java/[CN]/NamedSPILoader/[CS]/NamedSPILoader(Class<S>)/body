{
  this.clazz=clazz;
  final SPIClassIterator<S> loader=SPIClassIterator.get(clazz);
  final LinkedHashMap<String,S> services=new LinkedHashMap<String,S>();
  while (loader.hasNext()) {
    final Class<? extends S> c=loader.next();
    try {
      final S service=c.newInstance();
      final String name=service.getName();
      if (!services.containsKey(name)) {
        checkServiceName(name);
        services.put(name,service);
      }
    }
 catch (    Exception e) {
      throw new ServiceConfigurationError("Cannot instantiate SPI class: " + c.getName(),e);
    }
  }
  this.services=Collections.unmodifiableMap(services);
}
