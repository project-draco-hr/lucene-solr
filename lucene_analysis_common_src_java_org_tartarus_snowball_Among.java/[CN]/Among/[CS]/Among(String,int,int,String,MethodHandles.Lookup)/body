{
  this.s_size=s.length();
  this.s=s.toCharArray();
  this.substring_i=substring_i;
  this.result=result;
  if (methodname.isEmpty()) {
    this.method=null;
  }
 else {
    final Class<? extends SnowballProgram> clazz=methodobject.lookupClass().asSubclass(SnowballProgram.class);
    try {
      this.method=methodobject.findVirtual(clazz,methodname,MethodType.methodType(boolean.class)).asType(MethodType.methodType(boolean.class,SnowballProgram.class));
    }
 catch (    NoSuchMethodException|IllegalAccessException e) {
      throw new RuntimeException(String.format(Locale.ENGLISH,"Snowball program '%s' is broken, cannot access method: boolean %s()",clazz.getSimpleName(),methodname),e);
    }
  }
}
