{
  char[] a=" a ".toCharArray();
  char[] b="b   ".toCharArray();
  char[] ccc="cCc".toCharArray();
  char[] whitespace="   ".toCharArray();
  char[] empty="".toCharArray();
  TrimFilterFactory factory=new TrimFilterFactory();
  Map<String,String> args=new HashMap<String,String>();
  args.put("updateOffsets","false");
  factory.init(args);
  TokenStream ts=factory.create(new IterTokenStream(new Token(a,0,a.length,1,5),new Token(b,0,b.length,6,10),new Token(ccc,0,ccc.length,11,15),new Token(whitespace,0,whitespace.length,16,20),new Token(empty,0,empty.length,21,21)));
  assertTokenStreamContents(ts,new String[]{"a","b","cCc","",""});
  a=" a".toCharArray();
  b="b ".toCharArray();
  ccc=" c ".toCharArray();
  whitespace="   ".toCharArray();
  factory=new TrimFilterFactory();
  args=new HashMap<String,String>();
  args.put("updateOffsets","true");
  factory.init(args);
  ts=factory.create(new IterTokenStream(new Token(a,0,a.length,0,2),new Token(b,0,b.length,0,2),new Token(ccc,0,ccc.length,0,3),new Token(whitespace,0,whitespace.length,0,3)));
  assertTokenStreamContents(ts,new String[]{"a","b","c",""},new int[]{1,0,1,3},new int[]{2,1,2,3},new int[]{1,1,1,1});
}
