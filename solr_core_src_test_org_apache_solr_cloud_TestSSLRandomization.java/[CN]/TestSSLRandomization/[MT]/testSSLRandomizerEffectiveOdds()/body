{
  assertEquals(RandomizeSSL.DEFAULT_ODDS,SSLRandomizer.getEffectiveOdds(RandomizeSSL.DEFAULT_ODDS,false,1),0.0005D);
  assertEquals(0.2727D,SSLRandomizer.getEffectiveOdds(RandomizeSSL.DEFAULT_ODDS,true,1),0.0005D);
  assertEquals(0.0100D,SSLRandomizer.getEffectiveOdds(0.01D,false,1),0.0005D);
  assertEquals(0.1000D,SSLRandomizer.getEffectiveOdds(0.01D,true,1),0.0005D);
  assertEquals(0.6206D,SSLRandomizer.getEffectiveOdds(0.01D,false,5),0.0005D);
  assertEquals(0.5000D,SSLRandomizer.getEffectiveOdds(0.5D,false,1),0.0005D);
  assertEquals(0.5454D,SSLRandomizer.getEffectiveOdds(0.5D,true,1),0.0005D);
  assertEquals(0.8083D,SSLRandomizer.getEffectiveOdds(0.5D,false,5),0.0005D);
  assertEquals(0.8000D,SSLRandomizer.getEffectiveOdds(0.8D,false,1),0.0005D);
  assertEquals(0.8181D,SSLRandomizer.getEffectiveOdds(0.8D,true,1),0.0005D);
  assertEquals(0.9233D,SSLRandomizer.getEffectiveOdds(0.8D,false,5),0.0005D);
  assertEquals(0.0D,SSLRandomizer.getEffectiveOdds(0.0D,false,1),0.0D);
  assertEquals(0.0D,SSLRandomizer.getEffectiveOdds(0.0D,true,100),0.0D);
  assertEquals(0.0D,SSLRandomizer.getEffectiveOdds(0.0D,false,100),0.0D);
  assertEquals(0.0D,SSLRandomizer.getEffectiveOdds(0.0D,true,10000),0.0D);
  assertEquals(0.0D,SSLRandomizer.getEffectiveOdds(0.0D,false,10000),0.0D);
  assertEquals(0.0D,SSLRandomizer.getEffectiveOdds(0.0D,random().nextBoolean(),random().nextInt()),0.0D);
  assertEquals(1.0D,SSLRandomizer.getEffectiveOdds(1.0D,false,1),0.0D);
  assertEquals(1.0D,SSLRandomizer.getEffectiveOdds(1.0D,true,100),0.0D);
  assertEquals(1.0D,SSLRandomizer.getEffectiveOdds(1.0D,false,100),0.0D);
  assertEquals(1.0D,SSLRandomizer.getEffectiveOdds(1.0D,true,10000),0.0D);
  assertEquals(1.0D,SSLRandomizer.getEffectiveOdds(1.0D,false,10000),0.0D);
  assertEquals(1.0D,SSLRandomizer.getEffectiveOdds(1.0D,random().nextBoolean(),random().nextInt()),0.0D);
}
