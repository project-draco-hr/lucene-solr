{
  int startsAt=0;
  jjnewStateCnt=33;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 0:
          if ((0x8bffd4f8ffffd9ffL & l) != 0L) {
            if (kind > 23)             kind=23;
            jjCheckNAddTwoStates(20,21);
          }
 else           if ((0x100002600L & l) != 0L) {
            if (kind > 7)             kind=7;
          }
 else           if (curChar == 34)           jjCheckNAddStates(0,2);
 else           if (curChar == 33) {
            if (kind > 10)             kind=10;
          }
        if (curChar == 47)         jjCheckNAddStates(3,5);
 else         if (curChar == 38)         jjstateSet[jjnewStateCnt++]=4;
      break;
case 4:
    if (curChar == 38 && kind > 8)     kind=8;
  break;
case 5:
if (curChar == 38) jjstateSet[jjnewStateCnt++]=4;
break;
case 13:
if (curChar == 33 && kind > 10) kind=10;
break;
case 14:
if (curChar == 34) jjCheckNAddStates(0,2);
break;
case 15:
if ((0xfffffffbffffffffL & l) != 0L) jjCheckNAddStates(0,2);
break;
case 17:
jjCheckNAddStates(0,2);
break;
case 18:
if (curChar == 34 && kind > 22) kind=22;
break;
case 19:
if ((0x8bffd4f8ffffd9ffL & l) == 0L) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
break;
case 20:
if ((0x8bfffcf8ffffd9ffL & l) == 0L) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
break;
case 22:
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
break;
case 25:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 24) kind=24;
jjAddStates(6,7);
break;
case 26:
if (curChar == 46) jjCheckNAdd(27);
break;
case 27:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 24) kind=24;
jjCheckNAdd(27);
break;
case 28:
case 30:
if (curChar == 47) jjCheckNAddStates(3,5);
break;
case 29:
if ((0xffff7fffffffffffL & l) != 0L) jjCheckNAddStates(3,5);
break;
case 32:
if (curChar == 47 && kind > 25) kind=25;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 0:
if ((0x97ffffff87ffffffL & l) != 0L) {
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
}
 else if (curChar == 126) {
if (kind > 24) kind=24;
jjstateSet[jjnewStateCnt++]=25;
}
 else if (curChar == 92) jjCheckNAdd(22);
if (curChar == 78) jjstateSet[jjnewStateCnt++]=11;
 else if (curChar == 124) jjstateSet[jjnewStateCnt++]=8;
 else if (curChar == 79) jjstateSet[jjnewStateCnt++]=6;
 else if (curChar == 65) jjstateSet[jjnewStateCnt++]=2;
break;
case 1:
if (curChar == 68 && kind > 8) kind=8;
break;
case 2:
if (curChar == 78) jjstateSet[jjnewStateCnt++]=1;
break;
case 3:
if (curChar == 65) jjstateSet[jjnewStateCnt++]=2;
break;
case 6:
if (curChar == 82 && kind > 9) kind=9;
break;
case 7:
if (curChar == 79) jjstateSet[jjnewStateCnt++]=6;
break;
case 8:
if (curChar == 124 && kind > 9) kind=9;
break;
case 9:
if (curChar == 124) jjstateSet[jjnewStateCnt++]=8;
break;
case 10:
if (curChar == 84 && kind > 10) kind=10;
break;
case 11:
if (curChar == 79) jjstateSet[jjnewStateCnt++]=10;
break;
case 12:
if (curChar == 78) jjstateSet[jjnewStateCnt++]=11;
break;
case 15:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAddStates(0,2);
break;
case 16:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=17;
break;
case 17:
jjCheckNAddStates(0,2);
break;
case 19:
case 20:
if ((0x97ffffff87ffffffL & l) == 0L) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
break;
case 21:
if (curChar == 92) jjCheckNAddTwoStates(22,22);
break;
case 22:
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
break;
case 23:
if (curChar == 92) jjCheckNAdd(22);
break;
case 24:
if (curChar != 126) break;
if (kind > 24) kind=24;
jjstateSet[jjnewStateCnt++]=25;
break;
case 29:
jjAddStates(3,5);
break;
case 31:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=30;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int hiByte=(curChar >> 8);
int i1=hiByte >> 6;
long l1=1L << (hiByte & 077);
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 0:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) {
if (kind > 7) kind=7;
}
if (jjCanMove_2(hiByte,i1,i2,l1,l2)) {
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
}
break;
case 15:
case 17:
if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(0,2);
break;
case 19:
case 20:
if (!jjCanMove_2(hiByte,i1,i2,l1,l2)) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
break;
case 22:
if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(20,21);
break;
case 29:
if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjAddStates(3,5);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=33 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
