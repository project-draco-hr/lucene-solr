{
  AbstractFirstPassGroupingCollector selected;
  if (canUseIDV && random.nextBoolean()) {
    boolean diskResident=random.nextBoolean();
    selected=DVFirstPassGroupingCollector.create(groupSort,topDocs,groupField,ValueType.BYTES_VAR_SORTED,diskResident);
  }
 else   if (random.nextBoolean()) {
    ValueSource vs=new BytesRefFieldSource(groupField);
    selected=new FunctionFirstPassGroupingCollector(vs,new HashMap(),groupSort,topDocs);
  }
 else {
    selected=new TermFirstPassGroupingCollector(groupField,groupSort,topDocs);
  }
  if (VERBOSE) {
    System.out.println("Selected implementation: " + selected.getClass().getName());
  }
  return selected;
}
