{
  if (expected == null) {
    assertNull(actual);
    return;
  }
  assertNotNull(actual);
  assertEquals(expected.groups.length,actual.groups.length);
  assertEquals(expected.totalHitCount,actual.totalHitCount);
  assertEquals(expected.totalGroupedHitCount,actual.totalGroupedHitCount);
  if (expected.totalGroupCount != null) {
    assertEquals(expected.totalGroupCount,actual.totalGroupCount);
  }
  for (int groupIDX=0; groupIDX < expected.groups.length; groupIDX++) {
    if (VERBOSE) {
      System.out.println("  check groupIDX=" + groupIDX);
    }
    final GroupDocs expectedGroup=expected.groups[groupIDX];
    final GroupDocs actualGroup=actual.groups[groupIDX];
    assertEquals(expectedGroup.groupValue,actualGroup.groupValue);
    assertArrayEquals(expectedGroup.groupSortValues,actualGroup.groupSortValues);
    assertEquals(expectedGroup.totalHits,actualGroup.totalHits);
    final ScoreDoc[] expectedFDs=expectedGroup.scoreDocs;
    final ScoreDoc[] actualFDs=actualGroup.scoreDocs;
    assertEquals(expectedFDs.length,actualFDs.length);
    for (int docIDX=0; docIDX < expectedFDs.length; docIDX++) {
      final FieldDoc expectedFD=(FieldDoc)expectedFDs[docIDX];
      final FieldDoc actualFD=(FieldDoc)actualFDs[docIDX];
      assertEquals(expectedFD.doc,docIDtoID[actualFD.doc]);
      assertArrayEquals(expectedFD.fields,actualFD.fields);
    }
  }
}
