{
  ArrayList<Token> result=new ArrayList<Token>();
  ViterbiNode[][][] lattice;
  try {
    lattice=viterbi.build(sentence,sentenceOffset,sentenceLength);
  }
 catch (  IOException impossible) {
    throw new RuntimeException(impossible);
  }
  List<ViterbiNode> bestPath=viterbi.search(lattice);
  for (  ViterbiNode node : bestPath) {
    int wordId=node.getWordId();
    if (node.getType() == Type.KNOWN && wordId == -1) {
      continue;
    }
 else     if (discardPunctuation && node.getLength() > 0 && isPunctuation(node.getSurfaceForm()[node.getOffset()])) {
      continue;
    }
    Token token=new Token(wordId,node.getSurfaceForm(),node.getOffset(),node.getLength(),node.getType(),offset + node.getStartIndex(),dictionaryMap.get(node.getType()));
    result.add(token);
  }
  return result;
}
