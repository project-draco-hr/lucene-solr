{
  String payload="{\n" + "'create-requesthandler' : { 'name' : '/x', 'class': 'org.apache.solr.handler.DumpRequestHandler' , 'startup' : 'lazy'}\n" + "}";
  runConfigCommand(writeHarness,"/config?wt=json",payload);
  boolean success=false;
  long startTime=System.nanoTime();
  long maxTimeoutSeconds=10;
  while (TimeUnit.SECONDS.convert(System.nanoTime() - startTime,TimeUnit.NANOSECONDS) < maxTimeoutSeconds) {
    String uri="/config/overlay?wt=json";
    Map m=testServerBaseUrl == null ? getRespMap(uri,writeHarness) : TestSolrConfigHandlerConcurrent.getAsMap(testServerBaseUrl + uri,cloudSolrServer);
    if ("lazy".equals(ConfigOverlay.getObjectByPath(m,true,Arrays.asList("overlay","requestHandler","/x","startup")))) {
      Map map=getRespMap("/x?wt=json",writeHarness);
      if (map.containsKey("params")) {
        success=true;
        break;
      }
    }
    Thread.sleep(100);
  }
  assertTrue("Could not register requestHandler  ",success);
  payload="{\n" + "'update-requesthandler' : { 'name' : '/x', 'class': 'org.apache.solr.handler.DumpRequestHandler' , 'startup' : 'lazy' , 'a':'b'}\n" + "}";
  runConfigCommand(writeHarness,"/config?wt=json",payload);
  success=false;
  startTime=System.nanoTime();
  maxTimeoutSeconds=10;
  while (TimeUnit.SECONDS.convert(System.nanoTime() - startTime,TimeUnit.NANOSECONDS) < maxTimeoutSeconds) {
    String uri="/config/overlay?wt=json";
    Map m=testServerBaseUrl == null ? getRespMap(uri,writeHarness) : TestSolrConfigHandlerConcurrent.getAsMap(testServerBaseUrl + uri,cloudSolrServer);
    if ("b".equals(ConfigOverlay.getObjectByPath(m,true,Arrays.asList("overlay","requestHandler","/x","a")))) {
      success=true;
      break;
    }
    Thread.sleep(100);
  }
  assertTrue("Could not update requestHandler  ",success);
  payload="{\n" + "'delete-requesthandler' : '/x'" + "}";
  runConfigCommand(writeHarness,"/config?wt=json",payload);
  success=false;
  startTime=System.nanoTime();
  maxTimeoutSeconds=10;
  while (TimeUnit.SECONDS.convert(System.nanoTime() - startTime,TimeUnit.NANOSECONDS) < maxTimeoutSeconds) {
    String uri="/config/overlay?wt=json";
    Map m=testServerBaseUrl == null ? getRespMap(uri,writeHarness) : TestSolrConfigHandlerConcurrent.getAsMap(testServerBaseUrl + uri,cloudSolrServer);
    if (null == ConfigOverlay.getObjectByPath(m,true,Arrays.asList("overlay","requestHandler","/x","a"))) {
      success=true;
      break;
    }
    Thread.sleep(100);
  }
  assertTrue("Could not delete requestHandler  ",success);
}
