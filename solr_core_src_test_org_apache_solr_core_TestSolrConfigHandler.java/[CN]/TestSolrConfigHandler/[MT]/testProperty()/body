{
  String payload="{\n" + " 'set-property' : { 'updateHandler.autoCommit.maxDocs':100, 'updateHandler.autoCommit.maxTime':10 } \n" + " }";
  RestTestHarness harness=restTestHarness;
  String response=harness.post("/config?wt=json",SolrTestCaseJ4.json(payload));
  Map map=(Map)ObjectBuilder.getVal(new JSONParser(new StringReader(response)));
  assertNull(response,map.get("errors"));
  Map m=(Map)getRespMap("/config/overlay?wt=json",harness).get("overlay");
  Map props=(Map)m.get("props");
  assertNotNull(props);
  assertEquals("100",String.valueOf(getObjectByPath(props,true,ImmutableList.of("updateHandler","autoCommit","maxDocs"))));
  assertEquals("10",String.valueOf(getObjectByPath(props,true,ImmutableList.of("updateHandler","autoCommit","maxTime"))));
  m=(Map)getRespMap("/config?wt=json",harness).get("solrConfig");
  assertNotNull(m);
  assertEquals("100",String.valueOf(getObjectByPath(m,true,ImmutableList.of("updateHandler","autoCommit","maxDocs"))));
  assertEquals("10",String.valueOf(getObjectByPath(m,true,ImmutableList.of("updateHandler","autoCommit","maxTime"))));
  payload="{\n" + " 'unset-property' :  'updateHandler.autoCommit.maxDocs'} \n" + " }";
  response=harness.post("/config?wt=json",SolrTestCaseJ4.json(payload));
  map=(Map)ObjectBuilder.getVal(new JSONParser(new StringReader(response)));
  assertNull(response,map.get("errors"));
  m=(Map)getRespMap("/config/overlay?wt=json",harness).get("overlay");
  props=(Map)m.get("props");
  assertNotNull(props);
  assertNull(getObjectByPath(props,true,ImmutableList.of("updateHandler","autoCommit","maxDocs")));
  assertEquals("10",String.valueOf(getObjectByPath(props,true,ImmutableList.of("updateHandler","autoCommit","maxTime"))));
}
