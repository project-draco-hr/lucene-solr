{
  RestTestHarness harness=restTestHarness;
  Map confMap=getRespMap("/config?wt=json",harness);
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/luke")));
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/system")));
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/mbeans")));
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/plugins")));
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/threads")));
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/properties")));
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/logging")));
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/file")));
  assertNotNull(getObjectByPath(confMap,false,Arrays.asList("config","requestHandler","/admin/ping")));
  String payload="{\n" + " 'set-property' : { 'updateHandler.autoCommit.maxDocs':100, 'updateHandler.autoCommit.maxTime':10 , 'requestDispatcher.requestParsers.addHttpRequestToContext':true} \n" + " }";
  runConfigCommand(harness,"/config?wt=json",payload);
  Map m=(Map)getRespMap("/config/overlay?wt=json",harness).get("overlay");
  Map props=(Map)m.get("props");
  assertNotNull(props);
  assertEquals("100",String.valueOf(getObjectByPath(props,true,ImmutableList.of("updateHandler","autoCommit","maxDocs"))));
  assertEquals("10",String.valueOf(getObjectByPath(props,true,ImmutableList.of("updateHandler","autoCommit","maxTime"))));
  m=getRespMap("/config/updateHandler?wt=json",harness);
  assertNotNull(getObjectByPath(m,true,ImmutableList.of("config","updateHandler","commitWithin","softCommit")));
  m=(Map)getRespMap("/config?wt=json",harness).get("config");
  assertNotNull(m);
  assertEquals("100",String.valueOf(getObjectByPath(m,true,ImmutableList.of("updateHandler","autoCommit","maxDocs"))));
  assertEquals("10",String.valueOf(getObjectByPath(m,true,ImmutableList.of("updateHandler","autoCommit","maxTime"))));
  assertEquals("true",String.valueOf(getObjectByPath(m,true,ImmutableList.of("requestDispatcher","requestParsers","addHttpRequestToContext"))));
  payload="{\n" + " 'unset-property' :  'updateHandler.autoCommit.maxDocs'} \n" + " }";
  runConfigCommand(harness,"/config?wt=json",payload);
  m=(Map)getRespMap("/config/overlay?wt=json",harness).get("overlay");
  props=(Map)m.get("props");
  assertNotNull(props);
  assertNull(getObjectByPath(props,true,ImmutableList.of("updateHandler","autoCommit","maxDocs")));
  assertEquals("10",String.valueOf(getObjectByPath(props,true,ImmutableList.of("updateHandler","autoCommit","maxTime"))));
}
