{
  Collection<Token> result=new HashSet<Token>();
  WhitespaceAnalyzer analyzer=new WhitespaceAnalyzer(Version.LUCENE_40);
  try (TokenStream ts=analyzer.tokenStream("",origQuery)){
    CharTermAttribute termAtt=ts.addAttribute(CharTermAttribute.class);
    OffsetAttribute offsetAtt=ts.addAttribute(OffsetAttribute.class);
    TypeAttribute typeAtt=ts.addAttribute(TypeAttribute.class);
    FlagsAttribute flagsAtt=ts.addAttribute(FlagsAttribute.class);
    PayloadAttribute payloadAtt=ts.addAttribute(PayloadAttribute.class);
    PositionIncrementAttribute posIncAtt=ts.addAttribute(PositionIncrementAttribute.class);
    ts.reset();
    while (ts.incrementToken()) {
      Token tok=new Token();
      tok.copyBuffer(termAtt.buffer(),0,termAtt.length());
      tok.setOffset(offsetAtt.startOffset(),offsetAtt.endOffset());
      tok.setFlags(flagsAtt.getFlags());
      tok.setPayload(payloadAtt.getPayload());
      tok.setPositionIncrement(posIncAtt.getPositionIncrement());
      tok.setType(typeAtt.type());
      result.add(tok);
    }
    ts.end();
    return result;
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
