{
  List<TypeMapping> typeMappings=new ArrayList<TypeMapping>();
  List<Object> typeMappingsParams=args.getAll(TYPE_MAPPING_PARAM);
  for (  Object typeMappingObj : typeMappingsParams) {
    if (null == typeMappingObj) {
      throw new SolrException(SERVER_ERROR,"'" + TYPE_MAPPING_PARAM + "' init param cannot be null");
    }
    if (!(typeMappingObj instanceof NamedList)) {
      throw new SolrException(SERVER_ERROR,"'" + TYPE_MAPPING_PARAM + "' init param must be a <lst>");
    }
    NamedList typeMappingNamedList=(NamedList)typeMappingObj;
    Object fieldTypeObj=typeMappingNamedList.remove(FIELD_TYPE_PARAM);
    if (null == fieldTypeObj) {
      throw new SolrException(SERVER_ERROR,"Each '" + TYPE_MAPPING_PARAM + "' <lst/> must contain a '"+ FIELD_TYPE_PARAM+ "' <str>");
    }
    if (!(fieldTypeObj instanceof CharSequence)) {
      throw new SolrException(SERVER_ERROR,"'" + FIELD_TYPE_PARAM + "' init param must be a <str>");
    }
    if (null != typeMappingNamedList.get(FIELD_TYPE_PARAM)) {
      throw new SolrException(SERVER_ERROR,"Each '" + TYPE_MAPPING_PARAM + "' <lst/> must contain a '"+ FIELD_TYPE_PARAM+ "' <str>");
    }
    String fieldType=fieldTypeObj.toString();
    Collection<String> valueClasses=FieldMutatingUpdateProcessorFactory.oneOrMany(typeMappingNamedList,VALUE_CLASS_PARAM);
    if (valueClasses.isEmpty()) {
      throw new SolrException(SERVER_ERROR,"Each '" + TYPE_MAPPING_PARAM + "' <lst/> must contain at least one '"+ VALUE_CLASS_PARAM+ "' <str>");
    }
    typeMappings.add(new TypeMapping(fieldType,valueClasses));
    if (0 != typeMappingNamedList.size()) {
      throw new SolrException(SERVER_ERROR,"Unexpected '" + TYPE_MAPPING_PARAM + "' init sub-param(s): '"+ typeMappingNamedList.toString()+ "'");
    }
    args.remove(TYPE_MAPPING_PARAM);
  }
  return typeMappings;
}
