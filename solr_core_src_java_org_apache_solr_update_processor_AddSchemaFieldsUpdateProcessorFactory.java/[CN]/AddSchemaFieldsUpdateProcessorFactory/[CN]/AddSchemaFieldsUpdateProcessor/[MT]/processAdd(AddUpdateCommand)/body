{
  if (!cmd.getReq().getCore().getLatestSchema().isMutable()) {
    final String message="This IndexSchema is not mutable.";
    throw new SolrException(BAD_REQUEST,message);
  }
  final SolrInputDocument doc=cmd.getSolrInputDocument();
  final SolrCore core=cmd.getReq().getCore();
  for (; ; ) {
    final IndexSchema oldSchema=core.getLatestSchema();
    List<SchemaField> newFields=new ArrayList<>();
    for (    final String fieldName : doc.getFieldNames()) {
      if (selector.shouldMutate(fieldName)) {
        String fieldTypeName=mapValueClassesToFieldType(doc.getField(fieldName));
        newFields.add(oldSchema.newField(fieldName,fieldTypeName,Collections.<String,Object>emptyMap()));
      }
    }
    if (newFields.isEmpty()) {
      log.debug("No fields to add to the schema.");
      break;
    }
    if (log.isDebugEnabled()) {
      StringBuilder builder=new StringBuilder();
      builder.append("Fields to be added to the schema: [");
      boolean isFirst=true;
      for (      SchemaField field : newFields) {
        builder.append(isFirst ? "" : ",");
        isFirst=false;
        builder.append(field.getName());
        builder.append("{type=").append(field.getType().getTypeName()).append("}");
      }
      builder.append("]");
      log.debug(builder.toString());
    }
    try {
      IndexSchema newSchema=oldSchema.addFields(newFields);
      cmd.getReq().getCore().setLatestSchema(newSchema);
      cmd.getReq().updateSchemaToLatest();
      log.debug("Successfully added field(s) to the schema.");
      break;
    }
 catch (    ManagedIndexSchema.FieldExistsException e) {
      log.debug("At least one field to be added already exists in the schema - retrying.");
    }
catch (    ManagedIndexSchema.SchemaChangedInZkException e) {
      log.debug("Schema changed while processing request - retrying.");
    }
  }
  super.processAdd(cmd);
}
