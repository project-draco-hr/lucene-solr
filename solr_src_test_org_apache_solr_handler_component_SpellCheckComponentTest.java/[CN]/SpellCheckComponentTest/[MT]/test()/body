{
  SolrCore core=h.getCore();
  SearchComponent speller=core.getSearchComponent("spellcheck");
  assertTrue("speller is null and it shouldn't be",speller != null);
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add(CommonParams.QT,"spellCheckCompRH");
  params.add(SpellCheckComponent.SPELLCHECK_BUILD,"true");
  params.add(CommonParams.Q,"documemt");
  params.add(SpellCheckComponent.COMPONENT_NAME,"true");
  SolrRequestHandler handler=core.getRequestHandler("spellCheckCompRH");
  SolrQueryResponse rsp=new SolrQueryResponse();
  handler.handleRequest(new LocalSolrQueryRequest(core,params),rsp);
  NamedList values=rsp.getValues();
  String cmdExec=(String)values.get("command");
  assertTrue("command is null and it shouldn't be",cmdExec != null);
  assertTrue(cmdExec + " is not equal to " + "build",cmdExec.equals("build") == true);
  NamedList spellCheck=(NamedList)values.get("spellcheck");
  assertTrue("spellCheck is null and it shouldn't be",spellCheck != null);
  NamedList suggestions=(NamedList)spellCheck.get("suggestions");
  assertTrue("suggestions is null and it shouldn't be",suggestions != null);
  NamedList document=(NamedList)suggestions.get("documemt");
  assertEquals(1,document.get("numFound"));
  assertEquals(0,document.get("startOffset"));
  assertEquals(document.get("endOffset"),"documemt".length());
  Collection<String> theSuggestion=(Collection<String>)document.get("suggestion");
  assertEquals(1,theSuggestion.size());
  assertEquals("document",theSuggestion.iterator().next());
}
