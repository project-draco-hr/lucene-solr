{
  SolrCore core=h.getCore();
  SpellCheckComponent scc=new SpellCheckComponent();
  NamedList args=new NamedList();
  NamedList spellchecker=new NamedList();
  spellchecker.add("classname",IndexBasedSpellChecker.class.getName());
  spellchecker.add("name","default");
  spellchecker.add("field","lowerfilt");
  spellchecker.add("spellcheckIndexDir","./spellchecker");
  args.add("spellchecker",spellchecker);
  NamedList altSC=new NamedList();
  altSC.add("classname",IndexBasedSpellChecker.class.getName());
  altSC.add("name","alternate");
  altSC.add("field","lowerfilt");
  altSC.add("spellcheckIndexDir","./spellchecker");
  args.add("spellchecker",altSC);
  args.add("queryAnalyzerFieldType","lowerfilt");
  NamedList defaults=new NamedList();
  defaults.add(SpellCheckComponent.SPELLCHECK_COLLATE,true);
  defaults.add(SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,false);
  defaults.add(SpellCheckComponent.SPELLCHECK_COUNT,2);
  args.add("defaults",defaults);
  scc.init(args);
  scc.inform(core);
  args.add("spellchecker",spellchecker);
  scc=new SpellCheckComponent();
  scc.init(args);
  try {
    scc.inform(core);
    assertTrue(false);
  }
 catch (  Exception e) {
  }
}
