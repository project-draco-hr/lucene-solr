{
  SpanNearQuery q=SpanNearQuery.newOrderedNearQuery(FIELD).addClause(new SpanTermQuery(new Term(FIELD,"w1"))).addGap(1).addClause(new SpanTermQuery(new Term(FIELD,"w2"))).build();
  Spans spans=q.createWeight(searcher,false,1f).getSpans(searcher.getIndexReader().leaves().get(0),SpanWeight.Postings.POSITIONS);
  assertNext(spans,1,0,3);
  assertNext(spans,2,0,3);
  assertFinished(spans);
  q=SpanNearQuery.newOrderedNearQuery(FIELD).addClause(new SpanTermQuery(new Term(FIELD,"w1"))).addGap(1).addClause(new SpanTermQuery(new Term(FIELD,"w2"))).addGap(1).addClause(new SpanTermQuery(new Term(FIELD,"w3"))).setSlop(1).build();
  spans=q.createWeight(searcher,false,1f).getSpans(searcher.getIndexReader().leaves().get(0),SpanWeight.Postings.POSITIONS);
  assertNext(spans,2,0,5);
  assertNext(spans,3,0,6);
  assertFinished(spans);
}
