{
  final HashMap bufferedDeleteTerms=docWriter.getBufferedDeleteTerms();
  final List bufferedDeleteDocIDs=docWriter.getBufferedDeleteDocIDs();
  if (infoStream != null)   message("flush " + docWriter.getNumBufferedDeleteTerms() + " buffered deleted terms and "+ bufferedDeleteDocIDs.size()+ " deleted docIDs on "+ segmentInfos.size()+ " segments.");
  if (newSegment != null) {
    IndexReader reader=null;
    try {
      reader=SegmentReader.get(newSegment,false);
      applyDeletesSelectively(bufferedDeleteTerms,bufferedDeleteDocIDs,reader);
    }
  finally {
      if (reader != null) {
        try {
          reader.doCommit();
        }
  finally {
          reader.doClose();
        }
      }
    }
  }
  final int infosEnd=segmentInfos.size();
  for (int i=0; i < infosEnd; i++) {
    IndexReader reader=null;
    try {
      reader=SegmentReader.get(segmentInfos.info(i),false);
      applyDeletes(bufferedDeleteTerms,reader);
    }
  finally {
      if (reader != null) {
        try {
          reader.doCommit();
        }
  finally {
          reader.doClose();
        }
      }
    }
  }
}
