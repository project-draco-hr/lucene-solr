{
  long lowerBound=-1;
  long upperBound=startUpperBound;
  while (upperBound < maxMergeDocs) {
    int minSegment=segmentInfos.size();
    int maxSegment=-1;
    while (--minSegment >= 0) {
      SegmentInfo si=segmentInfos.info(minSegment);
      if (maxSegment == -1 && si.docCount > lowerBound && si.docCount <= upperBound) {
        maxSegment=minSegment;
      }
 else       if (si.docCount > upperBound) {
        break;
      }
    }
    minSegment++;
    maxSegment++;
    int numSegments=maxSegment - minSegment;
    if (numSegments < mergeFactor) {
      break;
    }
 else {
      boolean exceedsUpperLimit=false;
      while (numSegments >= mergeFactor) {
        int docCount=mergeSegments(minSegment,minSegment + mergeFactor);
        numSegments-=mergeFactor;
        if (docCount > upperBound) {
          minSegment++;
          exceedsUpperLimit=true;
        }
 else {
          numSegments++;
        }
      }
      if (!exceedsUpperLimit) {
        break;
      }
    }
    lowerBound=upperBound;
    upperBound*=mergeFactor;
  }
}
