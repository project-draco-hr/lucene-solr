{
  FileStatus stats;
  try {
    stats=parts.getFileStatus();
  }
 catch (  IOException e) {
    stats=null;
  }
  if (stats == null) {
    LOG.warn("Ignoring file that somehow has become unavailable since the job was submitted: {}",parts.getUploadURL());
    return null;
  }
  Record headers=new Record();
  headers.put(Fields.BASE_ID,parts.getId());
  headers.put(Fields.ATTACHMENT_NAME,parts.getName());
  headers.put(HdfsFileFieldNames.FILE_UPLOAD_URL,parts.getUploadURL());
  headers.put(HdfsFileFieldNames.FILE_DOWNLOAD_URL,parts.getDownloadURL());
  headers.put(HdfsFileFieldNames.FILE_SCHEME,parts.getScheme());
  headers.put(HdfsFileFieldNames.FILE_HOST,parts.getHost());
  headers.put(HdfsFileFieldNames.FILE_PORT,String.valueOf(parts.getPort()));
  headers.put(HdfsFileFieldNames.FILE_PATH,parts.getURIPath());
  headers.put(HdfsFileFieldNames.FILE_NAME,parts.getName());
  headers.put(HdfsFileFieldNames.FILE_LAST_MODIFIED,String.valueOf(stats.getModificationTime()));
  headers.put(HdfsFileFieldNames.FILE_LENGTH,String.valueOf(stats.getLen()));
  headers.put(HdfsFileFieldNames.FILE_OWNER,stats.getOwner());
  headers.put(HdfsFileFieldNames.FILE_GROUP,stats.getGroup());
  headers.put(HdfsFileFieldNames.FILE_PERMISSIONS_USER,stats.getPermission().getUserAction().SYMBOL);
  headers.put(HdfsFileFieldNames.FILE_PERMISSIONS_GROUP,stats.getPermission().getGroupAction().SYMBOL);
  headers.put(HdfsFileFieldNames.FILE_PERMISSIONS_OTHER,stats.getPermission().getOtherAction().SYMBOL);
  headers.put(HdfsFileFieldNames.FILE_PERMISSIONS_STICKYBIT,String.valueOf(stats.getPermission().getStickyBit()));
  return headers;
}
