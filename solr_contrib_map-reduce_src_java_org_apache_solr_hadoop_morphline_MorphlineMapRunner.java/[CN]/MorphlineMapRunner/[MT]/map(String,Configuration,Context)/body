{
  LOG.info("Processing file {}",value);
  InputStream in=null;
  Record record=null;
  Timer.Context timerContext=elapsedTime.time();
  try {
    PathParts parts=new PathParts(value.toString(),configuration);
    record=getRecord(parts);
    if (record == null) {
      return;
    }
    for (    Map.Entry<String,String> entry : commandLineMorphlineHeaders.entrySet()) {
      record.replaceValues(entry.getKey(),entry.getValue());
    }
    long fileLength=parts.getFileStatus().getLen();
    if (disableFileOpen) {
      in=new ByteArrayInputStream(new byte[0]);
    }
 else {
      in=new BufferedInputStream(parts.getFileSystem().open(parts.getUploadPath()));
    }
    record.put(Fields.ATTACHMENT_BODY,in);
    Notifications.notifyStartSession(morphline);
    if (!morphline.process(record)) {
      LOG.warn("Morphline {} failed to process record: {}",morphlineFileAndId,record);
    }
    if (context != null) {
      context.getCounter(MorphlineCounters.class.getName(),MorphlineCounters.FILES_READ.toString()).increment(1);
      context.getCounter(MorphlineCounters.class.getName(),MorphlineCounters.FILE_BYTES_READ.toString()).increment(fileLength);
    }
  }
 catch (  Exception e) {
    LOG.error("Unable to process file " + value,e);
    if (context != null) {
      context.getCounter(getClass().getName() + ".errors",e.getClass().getName()).increment(1);
    }
    morphlineContext.getExceptionHandler().handleException(e,record);
  }
 finally {
    timerContext.stop();
    if (in != null) {
      in.close();
    }
  }
}
