{
  int nDocs=indexDocs();
  Path[] snapDir=new Path[5];
  snapDir[0]=Files.newDirectoryStream(Paths.get(master.getDataDir()),"snapshot*").iterator().next();
  boolean namedBackup=random().nextBoolean();
  String firstBackupTimestamp=null;
  String[] backupNames=null;
  if (namedBackup) {
    backupNames=new String[4];
  }
  for (int i=0; i < 4; i++) {
    BackupCommand backupCommand;
    final String backupName=TestUtil.randomSimpleString(random(),1,20);
    if (!namedBackup) {
      backupCommand=new BackupCommand(addNumberToKeepInRequest,backupKeepParamName,ReplicationHandler.CMD_BACKUP);
    }
 else {
      backupCommand=new BackupCommand(backupName,ReplicationHandler.CMD_BACKUP);
      backupNames[i]=backupName;
    }
    backupCommand.runCommand();
    if (backupCommand.fail != null) {
      fail(backupCommand.fail);
    }
    CheckBackupStatus checkBackupStatus=new CheckBackupStatus((HttpSolrClient)masterClient,firstBackupTimestamp);
    while (!checkBackupStatus.success) {
      checkBackupStatus.fetchStatus();
      Thread.sleep(1000);
    }
    if (i == 0) {
      firstBackupTimestamp=checkBackupStatus.backupTimestamp;
    }
    if (!namedBackup) {
      snapDir[i + 1]=Files.newDirectoryStream(Paths.get(master.getDataDir()),"snapshot*").iterator().next();
    }
 else {
      snapDir[i + 1]=Files.newDirectoryStream(Paths.get(master.getDataDir()),"snapshot." + backupName).iterator().next();
    }
    verify(snapDir[i + 1],nDocs);
  }
  if (namedBackup) {
    testDeleteNamedBackup(backupNames);
  }
 else {
    int count=0;
    Iterator<Path> iter=Files.newDirectoryStream(Paths.get(master.getDataDir()),"snapshot*").iterator();
    while (iter.hasNext()) {
      iter.next();
      count++;
    }
    if (backupKeepParamName.equals(ReplicationHandler.NUMBER_BACKUPS_TO_KEEP_REQUEST_PARAM)) {
      assertEquals(2,count);
      if (Files.exists(snapDir[0]) || Files.exists(snapDir[1]) || Files.exists(snapDir[2])) {
        fail("Backup should have been cleaned up because " + backupKeepParamName + " was set to 2.");
      }
    }
 else {
      assertEquals(1,count);
      if (Files.exists(snapDir[0]) || Files.exists(snapDir[1]) || Files.exists(snapDir[2])|| Files.exists(snapDir[3])) {
        fail("Backup should have been cleaned up because " + backupKeepParamName + " was set to 1.");
      }
    }
  }
}
