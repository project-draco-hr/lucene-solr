{
  if (optionalScorers.size() == 0) {
    return new NonMatchingScorer();
  }
 else {
    int nrOptRequired=(minNrShouldMatch < 1) ? 1 : minNrShouldMatch;
    if (optionalScorers.size() < nrOptRequired) {
      return new NonMatchingScorer();
    }
 else {
      Scorer requiredCountingSumScorer=(optionalScorers.size() > nrOptRequired) ? countingDisjunctionSumScorer(optionalScorers,nrOptRequired) : (optionalScorers.size() == 1) ? new SingleMatchScorer((Scorer)optionalScorers.get(0)) : countingConjunctionSumScorer(optionalScorers);
      return addProhibitedScorers(requiredCountingSumScorer);
    }
  }
}
