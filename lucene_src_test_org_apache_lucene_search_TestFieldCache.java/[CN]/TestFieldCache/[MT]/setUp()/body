{
  super.setUp();
  NUM_DOCS=atLeast(1000);
  System.out.println("WARNING: NUM_ORDS is wired to 2, test fails otherwise!!!!!!!!!!!!!!!!!!!!!");
  NUM_ORDS=2;
  directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));
  long theLong=Long.MAX_VALUE;
  double theDouble=Double.MAX_VALUE;
  byte theByte=Byte.MAX_VALUE;
  short theShort=Short.MAX_VALUE;
  int theInt=Integer.MAX_VALUE;
  float theFloat=Float.MAX_VALUE;
  unicodeStrings=new String[NUM_DOCS];
  multiValued=new BytesRef[NUM_DOCS][NUM_ORDS];
  if (VERBOSE) {
    System.out.println("TEST: setUp");
  }
  writer.w.setInfoStream(VERBOSE ? System.out : null);
  for (int i=0; i < NUM_DOCS; i++) {
    Document doc=new Document();
    doc.add(newField("theLong",String.valueOf(theLong--),Field.Store.NO,Field.Index.NOT_ANALYZED));
    doc.add(newField("theDouble",String.valueOf(theDouble--),Field.Store.NO,Field.Index.NOT_ANALYZED));
    doc.add(newField("theByte",String.valueOf(theByte--),Field.Store.NO,Field.Index.NOT_ANALYZED));
    doc.add(newField("theShort",String.valueOf(theShort--),Field.Store.NO,Field.Index.NOT_ANALYZED));
    doc.add(newField("theInt",String.valueOf(theInt--),Field.Store.NO,Field.Index.NOT_ANALYZED));
    doc.add(newField("theFloat",String.valueOf(theFloat--),Field.Store.NO,Field.Index.NOT_ANALYZED));
    if (random.nextInt(40) != 17) {
      unicodeStrings[i]=generateString(i);
      doc.add(newField("theRandomUnicodeString",unicodeStrings[i],Field.Store.YES,Field.Index.NOT_ANALYZED_NO_NORMS));
    }
    if (random.nextInt(10) != 8) {
      for (int j=0; j < NUM_ORDS; j++) {
        String newValue=generateString(i);
        multiValued[i][j]=new BytesRef(newValue);
        doc.add(newField("theRandomUnicodeMultiValuedField",newValue,Field.Store.YES,Field.Index.NOT_ANALYZED_NO_NORMS));
      }
      Arrays.sort(multiValued[i]);
    }
    writer.addDocument(doc);
  }
  reader=writer.getReader();
  writer.close();
}
