{
  final Map<String,FileEntry> entries=new HashMap<String,FileEntry>();
  final int count;
  final boolean stripSegmentName;
  if (firstInt < CompoundFileWriter.FORMAT_PRE_VERSION) {
    if (firstInt < CompoundFileWriter.FORMAT_CURRENT) {
      throw new CorruptIndexException("Incompatible format version: " + firstInt + " expected "+ CompoundFileWriter.FORMAT_CURRENT);
    }
    count=stream.readVInt();
    stripSegmentName=false;
  }
 else {
    count=firstInt;
    stripSegmentName=true;
  }
  long streamLength=stream.length();
  FileEntry entry=null;
  for (int i=0; i < count; i++) {
    long offset=stream.readLong();
    if (offset < 0 || offset > streamLength) {
      throw new CorruptIndexException("Invalid CFS entry offset: " + offset);
    }
    String id=stream.readString();
    if (stripSegmentName) {
      id=IndexFileNames.stripSegmentName(id);
    }
    if (entry != null) {
      entry.length=offset - entry.offset;
    }
    entry=new FileEntry();
    entry.offset=offset;
    entries.put(id,entry);
  }
  if (entry != null) {
    entry.length=streamLength - entry.offset;
  }
  return entries;
}
