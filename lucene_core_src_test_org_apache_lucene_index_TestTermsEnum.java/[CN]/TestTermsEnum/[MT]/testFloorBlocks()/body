{
  final String[] terms=new String[]{"aa0","aa1","aa2","aa3","aa4","aa5","aa6","aa7","aa8","aa9","aa","xx"};
  r=makeIndex(terms);
  assertEquals(1,docFreq(r,"aa0"));
  assertEquals(1,docFreq(r,"aa4"));
  assertEquals(0,docFreq(r,"bb0"));
  assertEquals(1,docFreq(r,"aa4"));
  assertEquals(1,docFreq(r,"aa0"));
  assertEquals(1,docFreq(r,"aa9"));
  assertEquals(0,docFreq(r,"a"));
  assertEquals(1,docFreq(r,"aa"));
  assertEquals(0,docFreq(r,"a"));
  assertEquals(1,docFreq(r,"aa"));
  assertEquals(1,docFreq(r,"xx"));
  assertEquals(1,docFreq(r,"aa1"));
  assertEquals(0,docFreq(r,"yy"));
  assertEquals(1,docFreq(r,"xx"));
  assertEquals(1,docFreq(r,"aa9"));
  assertEquals(1,docFreq(r,"xx"));
  assertEquals(1,docFreq(r,"aa4"));
  final TermsEnum te=MultiFields.getTerms(r,FIELD).iterator();
  while (te.next() != null) {
  }
  assertTrue(seekExact(te,"aa1"));
  assertEquals("aa2",next(te));
  assertTrue(seekExact(te,"aa8"));
  assertEquals("aa9",next(te));
  assertEquals("xx",next(te));
  testRandomSeeks(r,terms);
  close();
}
