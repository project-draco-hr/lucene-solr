{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  iwc.setMergePolicy(new LogDocMergePolicy());
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,iwc);
  Document doc=new Document();
  doc.add(newStringField("field","abc",Field.Store.NO));
  w.addDocument(doc);
  doc=new Document();
  doc.add(newStringField("field","abd",Field.Store.NO));
  w.addDocument(doc);
  doc=new Document();
  doc.add(newStringField("field","acd",Field.Store.NO));
  w.addDocument(doc);
  doc=new Document();
  doc.add(newStringField("field","bcd",Field.Store.NO));
  w.addDocument(doc);
  w.forceMerge(1);
  DirectoryReader r=w.getReader();
  w.shutdown();
  AtomicReader sub=getOnlySegmentReader(r);
  Terms terms=sub.fields().terms("field");
  LightAutomaton automaton=new RegExp(".*d",RegExp.NONE).toLightAutomaton();
  CompiledAutomaton ca=new CompiledAutomaton(automaton,false,false);
  TermsEnum te;
  te=terms.intersect(ca,new BytesRef("aad"));
  assertEquals("abd",te.next().utf8ToString());
  assertEquals(1,te.docs(null,null,DocsEnum.FLAG_NONE).nextDoc());
  assertEquals("acd",te.next().utf8ToString());
  assertEquals(2,te.docs(null,null,DocsEnum.FLAG_NONE).nextDoc());
  assertEquals("bcd",te.next().utf8ToString());
  assertEquals(3,te.docs(null,null,DocsEnum.FLAG_NONE).nextDoc());
  assertNull(te.next());
  te=terms.intersect(ca,new BytesRef("add"));
  assertEquals("bcd",te.next().utf8ToString());
  assertEquals(3,te.docs(null,null,DocsEnum.FLAG_NONE).nextDoc());
  assertNull(te.next());
  te=terms.intersect(ca,new BytesRef("bcd"));
  assertNull(te.next());
  te=terms.intersect(ca,new BytesRef("ddd"));
  assertNull(te.next());
  r.close();
  dir.close();
}
