{
  for (int i=0; i < iterations; ++i) {
    final long block0=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(block0 >>> 41);
    values[valuesOffset++]=(int)((block0 >>> 18) & 8388607L);
    final long block1=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block0 & 262143L) << 5) | (block1 >>> 59));
    values[valuesOffset++]=(int)((block1 >>> 36) & 8388607L);
    values[valuesOffset++]=(int)((block1 >>> 13) & 8388607L);
    final long block2=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block1 & 8191L) << 10) | (block2 >>> 54));
    values[valuesOffset++]=(int)((block2 >>> 31) & 8388607L);
    values[valuesOffset++]=(int)((block2 >>> 8) & 8388607L);
    final long block3=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block2 & 255L) << 15) | (block3 >>> 49));
    values[valuesOffset++]=(int)((block3 >>> 26) & 8388607L);
    values[valuesOffset++]=(int)((block3 >>> 3) & 8388607L);
    final long block4=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block3 & 7L) << 20) | (block4 >>> 44));
    values[valuesOffset++]=(int)((block4 >>> 21) & 8388607L);
    final long block5=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block4 & 2097151L) << 2) | (block5 >>> 62));
    values[valuesOffset++]=(int)((block5 >>> 39) & 8388607L);
    values[valuesOffset++]=(int)((block5 >>> 16) & 8388607L);
    final long block6=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block5 & 65535L) << 7) | (block6 >>> 57));
    values[valuesOffset++]=(int)((block6 >>> 34) & 8388607L);
    values[valuesOffset++]=(int)((block6 >>> 11) & 8388607L);
    final long block7=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block6 & 2047L) << 12) | (block7 >>> 52));
    values[valuesOffset++]=(int)((block7 >>> 29) & 8388607L);
    values[valuesOffset++]=(int)((block7 >>> 6) & 8388607L);
    final long block8=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block7 & 63L) << 17) | (block8 >>> 47));
    values[valuesOffset++]=(int)((block8 >>> 24) & 8388607L);
    values[valuesOffset++]=(int)((block8 >>> 1) & 8388607L);
    final long block9=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block8 & 1L) << 22) | (block9 >>> 42));
    values[valuesOffset++]=(int)((block9 >>> 19) & 8388607L);
    final long block10=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block9 & 524287L) << 4) | (block10 >>> 60));
    values[valuesOffset++]=(int)((block10 >>> 37) & 8388607L);
    values[valuesOffset++]=(int)((block10 >>> 14) & 8388607L);
    final long block11=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block10 & 16383L) << 9) | (block11 >>> 55));
    values[valuesOffset++]=(int)((block11 >>> 32) & 8388607L);
    values[valuesOffset++]=(int)((block11 >>> 9) & 8388607L);
    final long block12=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block11 & 511L) << 14) | (block12 >>> 50));
    values[valuesOffset++]=(int)((block12 >>> 27) & 8388607L);
    values[valuesOffset++]=(int)((block12 >>> 4) & 8388607L);
    final long block13=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block12 & 15L) << 19) | (block13 >>> 45));
    values[valuesOffset++]=(int)((block13 >>> 22) & 8388607L);
    final long block14=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block13 & 4194303L) << 1) | (block14 >>> 63));
    values[valuesOffset++]=(int)((block14 >>> 40) & 8388607L);
    values[valuesOffset++]=(int)((block14 >>> 17) & 8388607L);
    final long block15=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block14 & 131071L) << 6) | (block15 >>> 58));
    values[valuesOffset++]=(int)((block15 >>> 35) & 8388607L);
    values[valuesOffset++]=(int)((block15 >>> 12) & 8388607L);
    final long block16=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block15 & 4095L) << 11) | (block16 >>> 53));
    values[valuesOffset++]=(int)((block16 >>> 30) & 8388607L);
    values[valuesOffset++]=(int)((block16 >>> 7) & 8388607L);
    final long block17=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block16 & 127L) << 16) | (block17 >>> 48));
    values[valuesOffset++]=(int)((block17 >>> 25) & 8388607L);
    values[valuesOffset++]=(int)((block17 >>> 2) & 8388607L);
    final long block18=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block17 & 3L) << 21) | (block18 >>> 43));
    values[valuesOffset++]=(int)((block18 >>> 20) & 8388607L);
    final long block19=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block18 & 1048575L) << 3) | (block19 >>> 61));
    values[valuesOffset++]=(int)((block19 >>> 38) & 8388607L);
    values[valuesOffset++]=(int)((block19 >>> 15) & 8388607L);
    final long block20=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block19 & 32767L) << 8) | (block20 >>> 56));
    values[valuesOffset++]=(int)((block20 >>> 33) & 8388607L);
    values[valuesOffset++]=(int)((block20 >>> 10) & 8388607L);
    final long block21=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block20 & 1023L) << 13) | (block21 >>> 51));
    values[valuesOffset++]=(int)((block21 >>> 28) & 8388607L);
    values[valuesOffset++]=(int)((block21 >>> 5) & 8388607L);
    final long block22=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block21 & 31L) << 18) | (block22 >>> 46));
    values[valuesOffset++]=(int)((block22 >>> 23) & 8388607L);
    values[valuesOffset++]=(int)(block22 & 8388607L);
  }
}
