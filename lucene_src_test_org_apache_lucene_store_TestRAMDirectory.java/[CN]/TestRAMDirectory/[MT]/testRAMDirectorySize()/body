{
  Directory dir=newFSDirectory(indexDir);
  final MockDirectoryWrapper ramDir=new MockDirectoryWrapper(random,new RAMDirectory(dir,newIOContext(random)));
  dir.close();
  final IndexWriter writer=new IndexWriter(ramDir,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));
  writer.optimize();
  assertEquals(ramDir.sizeInBytes(),ramDir.getRecomputedSizeInBytes());
  Thread[] threads=new Thread[numThreads];
  for (int i=0; i < numThreads; i++) {
    final int num=i;
    threads[i]=new Thread(){
      @Override public void run(){
        for (int j=1; j < docsPerThread; j++) {
          Document doc=new Document();
          doc.add(newField("sizeContent",English.intToEnglish(num * docsPerThread + j).trim(),StringField.TYPE_STORED));
          try {
            writer.addDocument(doc);
          }
 catch (          IOException e) {
            throw new RuntimeException(e);
          }
        }
      }
    }
;
  }
  for (int i=0; i < numThreads; i++)   threads[i].start();
  for (int i=0; i < numThreads; i++)   threads[i].join();
  writer.optimize();
  assertEquals(ramDir.sizeInBytes(),ramDir.getRecomputedSizeInBytes());
  writer.close();
}
