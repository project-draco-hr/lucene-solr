{
  noDocs=atLeast(4096);
  directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMaxBufferedDocs(_TestUtil.nextInt(random,100,1000)).setMergePolicy(newLogMergePolicy()));
  NumericField field8=new NumericField("field8",8,NumericField.TYPE_STORED), field4=new NumericField("field4",4,NumericField.TYPE_STORED), field2=new NumericField("field2",2,NumericField.TYPE_STORED), fieldNoTrie=new NumericField("field" + Integer.MAX_VALUE,Integer.MAX_VALUE,rarely() ? NumericField.TYPE_STORED : NumericField.TYPE_UNSTORED), ascfield8=new NumericField("ascfield8",8,NumericField.TYPE_UNSTORED), ascfield4=new NumericField("ascfield4",4,NumericField.TYPE_UNSTORED), ascfield2=new NumericField("ascfield2",2,NumericField.TYPE_UNSTORED);
  Document doc=new Document();
  doc.add(field8);
  doc.add(field4);
  doc.add(field2);
  doc.add(fieldNoTrie);
  doc.add(ascfield8);
  doc.add(ascfield4);
  doc.add(ascfield2);
  for (int l=0; l < noDocs; l++) {
    int val=distance * l + startOffset;
    field8.setIntValue(val);
    field4.setIntValue(val);
    field2.setIntValue(val);
    fieldNoTrie.setIntValue(val);
    val=l - (noDocs / 2);
    ascfield8.setIntValue(val);
    ascfield4.setIntValue(val);
    ascfield2.setIntValue(val);
    writer.addDocument(doc);
  }
  reader=writer.getReader();
  searcher=newSearcher(reader);
  writer.close();
}
