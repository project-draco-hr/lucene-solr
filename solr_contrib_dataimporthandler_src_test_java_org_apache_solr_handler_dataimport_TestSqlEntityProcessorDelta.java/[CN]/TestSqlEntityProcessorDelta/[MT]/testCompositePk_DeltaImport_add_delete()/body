{
  add1document();
  MockDataSource.clearCache();
  List deltaRow=new ArrayList();
  deltaRow.add(createMap("id","2"));
  MockDataSource.setIterator(DELTA_QUERY,deltaRow.iterator());
  List deletedRow=new ArrayList();
  deletedRow.add(createMap("id","1"));
  MockDataSource.setIterator(DELETED_PK_QUERY,deletedRow.iterator());
  List parentRow=new ArrayList();
  parentRow.add(createMap("id","2"));
  MockDataSource.setIterator("select * from x where id='2'",parentRow.iterator());
  List childRow=new ArrayList();
  childRow.add(createMap("desc","goodbye"));
  MockDataSource.setIterator("select * from y where y.A='2'",childRow.iterator());
  runDeltaImport(dataConfig_delta);
  assertQ(req("*:* OR XtestCompositePk_DeltaImport_add_delete"),"//*[@numFound='1']");
  assertQ(req("id:2"),"//*[@numFound='1']");
  assertQ(req("desc:hello"),"//*[@numFound='0']");
  assertQ(req("desc:goodbye"),"//*[@numFound='1']");
}
