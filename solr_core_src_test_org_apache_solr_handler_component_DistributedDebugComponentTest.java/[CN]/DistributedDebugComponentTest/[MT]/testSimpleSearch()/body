{
  SolrQuery query=new SolrQuery();
  query.setQuery("*:*");
  query.set("debug","track");
  query.set("distrib","true");
  query.setFields("id","text");
  query.set("shards",shard1 + "," + shard2);
  QueryResponse response=collection1.query(query);
  NamedList<Object> track=(NamedList<Object>)response.getDebugMap().get("track");
  assertNotNull(track);
  assertNotNull(track.get("rid"));
  assertNotNull(track.get("EXECUTE_QUERY"));
  assertNotNull(((NamedList<Object>)track.get("EXECUTE_QUERY")).get(shard1));
  assertNotNull(((NamedList<Object>)track.get("EXECUTE_QUERY")).get(shard2));
  assertNotNull(((NamedList<Object>)track.get("GET_FIELDS")).get(shard1));
  assertNotNull(((NamedList<Object>)track.get("GET_FIELDS")).get(shard2));
  assertElementsPresent((NamedList<String>)((NamedList<Object>)track.get("EXECUTE_QUERY")).get(shard1),"QTime","ElapsedTime","RequestPurpose","NumFound","Response");
  assertElementsPresent((NamedList<String>)((NamedList<Object>)track.get("EXECUTE_QUERY")).get(shard2),"QTime","ElapsedTime","RequestPurpose","NumFound","Response");
  assertElementsPresent((NamedList<String>)((NamedList<Object>)track.get("GET_FIELDS")).get(shard1),"QTime","ElapsedTime","RequestPurpose","NumFound","Response");
  assertElementsPresent((NamedList<String>)((NamedList<Object>)track.get("GET_FIELDS")).get(shard2),"QTime","ElapsedTime","RequestPurpose","NumFound","Response");
  query.add("omitHeader","true");
  response=collection1.query(query);
  assertNull("QTime is not included in the response when omitHeader is set to true",((NamedList<Object>)response.getDebugMap().get("track")).findRecursive("EXECUTE_QUERY",shard1,"QTime"));
  assertNull("QTime is not included in the response when omitHeader is set to true",((NamedList<Object>)response.getDebugMap().get("track")).findRecursive("GET_FIELDS",shard2,"QTime"));
  query.setQuery("id:1");
  response=collection1.query(query);
  track=(NamedList<Object>)response.getDebugMap().get("track");
  assertNotNull(((NamedList<Object>)track.get("EXECUTE_QUERY")).get(shard1));
  assertNotNull(((NamedList<Object>)track.get("EXECUTE_QUERY")).get(shard2));
  assertNotNull(((NamedList<Object>)track.get("GET_FIELDS")).get(shard1));
  assertNull(((NamedList<Object>)track.get("GET_FIELDS")).get(shard2));
}
