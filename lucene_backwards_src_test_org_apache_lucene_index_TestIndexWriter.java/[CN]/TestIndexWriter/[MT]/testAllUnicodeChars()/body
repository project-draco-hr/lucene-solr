{
  BytesRef utf8=new BytesRef(10);
  UnicodeUtil.UTF16Result utf16=new UnicodeUtil.UTF16Result();
  char[] chars=new char[2];
  for (int ch=0; ch < 0x0010FFFF; ch++) {
    if (ch == 0xd800)     ch=0xe000;
    int len=0;
    if (ch <= 0xffff) {
      chars[len++]=(char)ch;
    }
 else {
      chars[len++]=(char)(((ch - 0x0010000) >> 10) + UnicodeUtil.UNI_SUR_HIGH_START);
      chars[len++]=(char)(((ch - 0x0010000) & 0x3FFL) + UnicodeUtil.UNI_SUR_LOW_START);
    }
    UnicodeUtil.UTF16toUTF8(chars,0,len,utf8);
    String s1=new String(chars,0,len);
    String s2=new String(utf8.bytes,0,utf8.length,"UTF-8");
    assertEquals("codepoint " + ch,s1,s2);
    UnicodeUtil.UTF8toUTF16(utf8.bytes,0,utf8.length,utf16);
    assertEquals("codepoint " + ch,s1,new String(utf16.result,0,utf16.length));
    byte[] b=s1.getBytes("UTF-8");
    assertEquals(utf8.length,b.length);
    for (int j=0; j < utf8.length; j++)     assertEquals(utf8.bytes[j],b[j]);
  }
}
