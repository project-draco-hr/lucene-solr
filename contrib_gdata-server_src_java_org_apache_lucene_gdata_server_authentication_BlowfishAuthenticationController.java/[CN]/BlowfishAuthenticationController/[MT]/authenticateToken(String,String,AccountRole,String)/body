{
  if (LOG.isInfoEnabled())   LOG.info("authenticate Token " + token + " for requestIp: "+ requestIp);
  if (token == null || requestIp == null)   return false;
  String passIp=requestIp.substring(0,requestIp.lastIndexOf('.'));
  String authString=null;
  try {
    authString=deCryptAuthToken(token);
  }
 catch (  Exception e) {
    throw new AuthenticatorException("Can not decrypt token -- " + e.getMessage(),e);
  }
  if (authString == null)   return false;
  try {
    StringTokenizer tokenizer=new StringTokenizer(authString,TOKEN_LIMITER);
    if (!tokenizer.nextToken().equals(passIp))     return false;
    String tempAccountName=tokenizer.nextToken();
    int intRole=Integer.parseInt(tokenizer.nextToken());
    if (tempAccountName == null || (!tempAccountName.equals(accountName) && !GDataAccount.isInRole(intRole,role)))     return false;
    long timeout=Long.parseLong(tokenizer.nextToken());
    return (timeout + this.milisecondOffset) > System.currentTimeMillis();
  }
 catch (  Exception e) {
    LOG.error("Error occured while encrypting token " + e.getMessage(),e);
    return false;
  }
}
