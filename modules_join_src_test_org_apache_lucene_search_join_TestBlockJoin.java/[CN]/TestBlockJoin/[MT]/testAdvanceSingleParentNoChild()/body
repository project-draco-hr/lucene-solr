{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random,dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(new LogDocMergePolicy()));
  Document parentDoc=new Document();
  parentDoc.add(newField("parent","1",StringField.TYPE_UNSTORED));
  parentDoc.add(newField("isparent","yes",StringField.TYPE_UNSTORED));
  w.addDocuments(Arrays.asList(new Document[]{parentDoc}));
  parentDoc=new Document();
  parentDoc.add(newField("parent","2",StringField.TYPE_UNSTORED));
  parentDoc.add(newField("isparent","yes",StringField.TYPE_UNSTORED));
  Document childDoc=new Document();
  childDoc.add(newField("child","2",StringField.TYPE_UNSTORED));
  w.addDocuments(Arrays.asList(new Document[]{childDoc,parentDoc}));
  w.forceMerge(1);
  IndexReader r=w.getReader();
  w.close();
  IndexSearcher s=newSearcher(r);
  Query tq=new TermQuery(new Term("child","2"));
  Filter parentFilter=new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term("isparent","yes"))));
  BlockJoinQuery q=new BlockJoinQuery(tq,parentFilter,BlockJoinQuery.ScoreMode.Avg);
  Weight weight=s.createNormalizedWeight(q);
  DocIdSetIterator disi=weight.scorer(ReaderUtil.leaves(s.getIndexReader().getTopReaderContext())[0],true,true,null);
  assertEquals(2,disi.advance(0));
  s.close();
  r.close();
  dir.close();
}
