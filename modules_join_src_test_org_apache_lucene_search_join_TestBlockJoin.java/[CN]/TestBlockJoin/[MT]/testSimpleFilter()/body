{
  final Directory dir=newDirectory();
  final RandomIndexWriter w=new RandomIndexWriter(random,dir);
  final List<Document> docs=new ArrayList<Document>();
  docs.add(makeJob("java",2007));
  docs.add(makeJob("python",2010));
  docs.add(makeResume("Lisa","United Kingdom"));
  w.addDocuments(docs);
  docs.clear();
  docs.add(makeJob("ruby",2005));
  docs.add(makeJob("java",2006));
  docs.add(makeResume("Frank","United States"));
  w.addDocuments(docs);
  IndexReader r=w.getReader();
  w.close();
  IndexSearcher s=newSearcher(r);
  Filter parentsFilter=new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term("docType","resume"))));
  BooleanQuery childQuery=new BooleanQuery();
  childQuery.add(new BooleanClause(new TermQuery(new Term("skill","java")),Occur.MUST));
  childQuery.add(new BooleanClause(NumericRangeQuery.newIntRange("year",2006,2011,true,true),Occur.MUST));
  Query parentQuery=new TermQuery(new Term("country","United Kingdom"));
  ToParentBlockJoinQuery childJoinQuery=new ToParentBlockJoinQuery(childQuery,parentsFilter,ToParentBlockJoinQuery.ScoreMode.Avg);
  assertEquals("no filter - both passed",2,s.search(childJoinQuery,10).totalHits);
  assertEquals("dummy filter passes everyone ",2,s.search(childJoinQuery,parentsFilter,10).totalHits);
  assertEquals("dummy filter passes everyone ",2,s.search(childJoinQuery,new QueryWrapperFilter(new TermQuery(new Term("docType","resume"))),10).totalHits);
  assertEquals("noone live there",0,s.search(childJoinQuery,new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term("country","Oz")))),1).totalHits);
  assertEquals("noone live there",0,s.search(childJoinQuery,new QueryWrapperFilter(new TermQuery(new Term("country","Oz"))),1).totalHits);
  TopDocs ukOnly=s.search(childJoinQuery,new QueryWrapperFilter(parentQuery),1);
  assertEquals("has filter - single passed",1,ukOnly.totalHits);
  assertEquals("Lisa",r.document(ukOnly.scoreDocs[0].doc).get("name"));
  TopDocs usThen=s.search(childJoinQuery,new QueryWrapperFilter(new TermQuery(new Term("country","United States"))),1);
  assertEquals("has filter - single passed",1,usThen.totalHits);
  assertEquals("Frank",r.document(usThen.scoreDocs[0].doc).get("name"));
  r.close();
  dir.close();
}
