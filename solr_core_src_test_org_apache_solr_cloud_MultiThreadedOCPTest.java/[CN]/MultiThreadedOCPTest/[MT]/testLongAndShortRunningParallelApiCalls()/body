{
  Thread indexThread=new Thread(){
    @Override public void run(){
      Random random=random();
      int max=atLeast(random,200);
      for (int id=101; id < max; id++) {
        try {
          doAddDoc(String.valueOf(id));
        }
 catch (        Exception e) {
          log.error("Exception while adding docs",e);
        }
      }
    }
  }
;
  indexThread.start();
  try {
    SolrServer server=createNewSolrServer("",getBaseUrl((HttpSolrServer)clients.get(0)));
    CollectionAdminRequest.splitShard("collection1",SHARD1,server,"2000");
    String state=getRequestState("2000",server);
    while (state.equals("submitted")) {
      state=getRequestState("2000",server);
      Thread.sleep(10);
    }
    assertTrue("SplitShard task [2000] was supposed to be in [running] but isn't. It is [" + state + "]",state.equals("running"));
    invokeCollectionApi("action",CollectionParams.CollectionAction.OVERSEERSTATUS.toLower());
    state=getRequestState("2000",server);
    assertTrue("After invoking OVERSEERSTATUS, SplitShard task [2000] was still supposed to be in [running] but isn't." + "It is [" + state + "]",state.equals("running"));
  }
  finally {
    try {
      indexThread.join();
    }
 catch (    InterruptedException e) {
      log.warn("Indexing thread interrupted.");
    }
  }
}
