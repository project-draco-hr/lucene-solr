{
  try (SolrClient client=createNewSolrClient("",getBaseUrl((HttpSolrClient)clients.get(0)))){
    DistributedQueue distributedQueue=new DistributedQueue(cloudClient.getZkStateReader().getZkClient(),"/overseer/collection-queue-work",new Overseer.Stats());
    for (int i=0; i < MAX_PARALLEL_TASKS + 5; i++) {
      distributedQueue.offer(Utils.toJSON(Utils.makeMap("collection","A_COLL",QUEUE_OPERATION,MOCK_COLL_TASK.toLower(),ASYNC,String.valueOf(i),"sleep",(i == 0 ? "1000" : "1"))));
      log.info("MOCK task added {}",i);
    }
    Thread.sleep(10);
    distributedQueue.offer(Utils.toJSON(Utils.makeMap("collection","B_COLL",QUEUE_OPERATION,MOCK_COLL_TASK.toLower(),ASYNC,"200","sleep","1")));
    Long acoll=null, bcoll=null;
    for (int i=0; i < 100; i++) {
      if (bcoll == null) {
        CollectionAdminResponse statusResponse=getStatusResponse("200",client);
        bcoll=(Long)statusResponse.getResponse().get("MOCK_FINISHED");
      }
      if (acoll == null) {
        CollectionAdminResponse statusResponse=getStatusResponse("2",client);
        acoll=(Long)statusResponse.getResponse().get("MOCK_FINISHED");
      }
      if (acoll != null && bcoll != null)       break;
      Thread.sleep(100);
    }
    assertTrue(acoll != null && bcoll != null);
    assertTrue(acoll > bcoll);
  }
 }
