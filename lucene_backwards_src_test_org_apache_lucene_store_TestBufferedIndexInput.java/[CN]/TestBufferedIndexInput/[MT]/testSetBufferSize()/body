{
  File indexDir=new File(System.getProperty("tempDir"),"testSetBufferSize");
  indexDir.mkdirs();
  MockFSDirectory dir=new MockFSDirectory(indexDir,newRandom());
  try {
    IndexWriter writer=new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED);
    writer.setUseCompoundFile(false);
    for (int i=0; i < 37; i++) {
      Document doc=new Document();
      doc.add(new Field("content","aaa bbb ccc ddd" + i,Field.Store.YES,Field.Index.ANALYZED));
      doc.add(new Field("id","" + i,Field.Store.YES,Field.Index.ANALYZED));
      writer.addDocument(doc);
    }
    writer.close();
    dir.allIndexInputs.clear();
    IndexReader reader=IndexReader.open(dir,false);
    Term aaa=new Term("content","aaa");
    Term bbb=new Term("content","bbb");
    Term ccc=new Term("content","ccc");
    assertEquals(37,reader.docFreq(ccc));
    reader.deleteDocument(0);
    assertEquals(37,reader.docFreq(aaa));
    dir.tweakBufferSizes();
    reader.deleteDocument(4);
    assertEquals(reader.docFreq(bbb),37);
    dir.tweakBufferSizes();
    IndexSearcher searcher=new IndexSearcher(reader);
    ScoreDoc[] hits=searcher.search(new TermQuery(bbb),null,1000).scoreDocs;
    dir.tweakBufferSizes();
    assertEquals(35,hits.length);
    dir.tweakBufferSizes();
    hits=searcher.search(new TermQuery(new Term("id","33")),null,1000).scoreDocs;
    dir.tweakBufferSizes();
    assertEquals(1,hits.length);
    hits=searcher.search(new TermQuery(aaa),null,1000).scoreDocs;
    dir.tweakBufferSizes();
    assertEquals(35,hits.length);
    searcher.close();
    reader.close();
  }
  finally {
    _TestUtil.rmDir(indexDir);
  }
}
