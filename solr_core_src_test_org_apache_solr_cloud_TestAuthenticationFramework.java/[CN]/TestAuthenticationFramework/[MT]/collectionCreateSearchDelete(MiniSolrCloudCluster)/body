{
  final String collectionName="testcollection";
  final CloudSolrClient cloudSolrClient=miniCluster.getSolrClient();
  assertNotNull(miniCluster.getZkServer());
  List<JettySolrRunner> jettys=miniCluster.getJettySolrRunners();
  assertEquals(NUM_SERVERS,jettys.size());
  for (  JettySolrRunner jetty : jettys) {
    assertTrue(jetty.isRunning());
  }
  log.info("#### Creating a collection");
  final String asyncId=(random().nextBoolean() ? null : "asyncId(" + collectionName + ".create)="+ random().nextInt());
  createCollection(miniCluster,collectionName,asyncId);
  if (asyncId != null) {
    final RequestStatusState state=AbstractFullDistribZkTestBase.getRequestStateAfterCompletion(asyncId,330,cloudSolrClient);
    assertSame("did not see async createCollection completion",RequestStatusState.COMPLETED,state);
  }
  ZkStateReader zkStateReader=miniCluster.getSolrClient().getZkStateReader();
  AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName,zkStateReader,true,true,330);
  log.info("#### updating a querying collection");
  cloudSolrClient.setDefaultCollection(collectionName);
  SolrInputDocument doc=new SolrInputDocument();
  doc.setField("id","1");
  cloudSolrClient.add(doc);
  cloudSolrClient.commit();
  SolrQuery query=new SolrQuery();
  query.setQuery("*:*");
  QueryResponse rsp=cloudSolrClient.query(query);
  assertEquals(1,rsp.getResults().getNumFound());
  miniCluster.deleteCollection(collectionName);
  AbstractDistribZkTestBase.waitForCollectionToDisappear(collectionName,zkStateReader,true,true,330);
  String asyncId2=(random().nextBoolean() ? null : "asyncId(" + collectionName + ".create)="+ random().nextInt());
  createCollection(miniCluster,collectionName,asyncId2);
  if (asyncId2 != null) {
    final RequestStatusState state=AbstractFullDistribZkTestBase.getRequestStateAfterCompletion(asyncId2,330,cloudSolrClient);
    assertSame("did not see async createCollection completion",RequestStatusState.COMPLETED,state);
  }
  AbstractDistribZkTestBase.waitForRecoveriesToFinish(collectionName,zkStateReader,true,true,330);
  assertEquals(0,cloudSolrClient.query(new SolrQuery("*:*")).getResults().getNumFound());
  cloudSolrClient.add(doc);
  cloudSolrClient.commit();
  assertEquals(1,cloudSolrClient.query(new SolrQuery("*:*")).getResults().getNumFound());
}
