{
  indexWriter.addDocument(newDoc("alpha bravo charlie - charlie bravo alpha"));
  initReaderSearcherHighlighter();
  SpanNearQuery snq=new SpanNearQuery(new SpanQuery[]{new SpanTermQuery(new Term("body","bravo")),new SpanTermQuery(new Term("body","charlie"))},0,true);
  BooleanQuery query=new BooleanQuery.Builder().add(snq,BooleanClause.Occur.MUST).add(new PrefixQuery(new Term("body","al")),BooleanClause.Occur.MUST).add(newPhraseQuery("body","alpha bravo"),BooleanClause.Occur.MUST).add(newPhraseQuery("title","bravo alpha"),BooleanClause.Occur.SHOULD).build();
  TopDocs topDocs=searcher.search(query,10,Sort.INDEXORDER);
  String[] snippets=highlighter.highlight("body",query,topDocs);
  assertArrayEquals(new String[]{"<b>alpha</b> <b>bravo</b> <b>charlie</b> - charlie bravo <b>alpha</b>"},snippets);
  highlighter.setHandleMultiTermQuery(false);
  topDocs=searcher.search(query,10,Sort.INDEXORDER);
  snippets=highlighter.highlight("body",query,topDocs);
  assertArrayEquals(new String[]{"<b>alpha</b> <b>bravo</b> <b>charlie</b> - charlie bravo alpha"},snippets);
}
