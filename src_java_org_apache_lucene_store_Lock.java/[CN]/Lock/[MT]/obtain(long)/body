{
  failureReason=null;
  boolean locked=obtain();
  int maxSleepCount=(int)(lockWaitTimeout / LOCK_POLL_INTERVAL);
  int sleepCount=0;
  while (!locked) {
    if (sleepCount++ == maxSleepCount) {
      String reason="Lock obtain timed out: " + this.toString();
      if (failureReason != null) {
        reason+=": " + failureReason;
      }
      IOException e=new IOException(reason);
      if (failureReason != null) {
        e.initCause(failureReason);
      }
      throw e;
    }
    try {
      Thread.sleep(LOCK_POLL_INTERVAL);
    }
 catch (    InterruptedException e) {
      throw new IOException(e.toString());
    }
    locked=obtain();
  }
  return locked;
}
