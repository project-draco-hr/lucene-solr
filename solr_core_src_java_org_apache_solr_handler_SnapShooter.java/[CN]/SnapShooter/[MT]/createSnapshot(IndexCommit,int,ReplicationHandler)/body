{
  LOG.info("Creating backup snapshot...");
  NamedList<Object> details=new NamedList<Object>();
  details.add("startTime",new Date().toString());
  File snapShotDir=null;
  String directoryName=null;
  Lock lock=null;
  try {
    if (numberToKeep < Integer.MAX_VALUE) {
      deleteOldBackups(numberToKeep);
    }
    SimpleDateFormat fmt=new SimpleDateFormat(DATE_FMT,Locale.ROOT);
    directoryName="snapshot." + fmt.format(new Date());
    lock=lockFactory.makeLock(directoryName + ".lock");
    if (lock.isLocked())     return;
    snapShotDir=new File(snapDir,directoryName);
    if (!snapShotDir.mkdir()) {
      LOG.warn("Unable to create snapshot directory: " + snapShotDir.getAbsolutePath());
      return;
    }
    Collection<String> files=indexCommit.getFileNames();
    FileCopier fileCopier=new FileCopier();
    Directory dir=solrCore.getDirectoryFactory().get(solrCore.getNewIndexDir(),solrCore.getSolrConfig().indexConfig.lockType);
    try {
      fileCopier.copyFiles(dir,files,snapShotDir);
    }
  finally {
      solrCore.getDirectoryFactory().release(dir);
    }
    details.add("fileCount",files.size());
    details.add("status","success");
    details.add("snapshotCompletedAt",new Date().toString());
  }
 catch (  Exception e) {
    SnapPuller.delTree(snapShotDir);
    LOG.error("Exception while creating snapshot",e);
    details.add("snapShootException",e.getMessage());
  }
 finally {
    replicationHandler.core.getDeletionPolicy().releaseCommitPoint(indexCommit.getGeneration());
    replicationHandler.snapShootDetails=details;
    if (lock != null) {
      try {
        lock.release();
      }
 catch (      IOException e) {
        LOG.error("Unable to release snapshoot lock: " + directoryName + ".lock");
      }
    }
  }
}
