{
  LOG.info("Creating backup snapshot...");
  NamedList<Object> details=new NamedList<>();
  details.add("startTime",new Date().toString());
  String directoryName=null;
  try {
    Collection<String> files=indexCommit.getFileNames();
    Directory dir=solrCore.getDirectoryFactory().get(solrCore.getIndexDir(),DirContext.DEFAULT,solrCore.getSolrConfig().indexConfig.lockType);
    try {
      copyFiles(dir,files,snapShotDir);
    }
  finally {
      solrCore.getDirectoryFactory().release(dir);
    }
    details.add("fileCount",files.size());
    details.add("status","success");
    details.add("snapshotCompletedAt",new Date().toString());
    details.add("snapshotName",snapshotName);
    LOG.info("Done creating backup snapshot: " + (snapshotName == null ? "<not named>" : snapshotName));
  }
 catch (  Exception e) {
    SnapPuller.delTree(snapShotDir.getDirectory().toFile());
    LOG.error("Exception while creating snapshot",e);
    details.add("snapShootException",e.getMessage());
  }
 finally {
    replicationHandler.core.getDeletionPolicy().releaseCommitPoint(indexCommit.getGeneration());
    replicationHandler.snapShootDetails=details;
    if (lock != null) {
      try {
        lock.close();
      }
 catch (      IOException e) {
        LOG.error("Unable to release snapshoot lock: " + directoryName + ".lock");
      }
    }
  }
}
