{
  Query qMinY=LegacyNumericRangeQuery.newDoubleRange(field_minY,getPrecisionStep(),bbox.getMinY(),null,true,false);
  Query qMaxY=LegacyNumericRangeQuery.newDoubleRange(field_maxY,getPrecisionStep(),null,bbox.getMaxY(),false,true);
  Query yConditions=this.makeQuery(BooleanClause.Occur.MUST,qMinY,qMaxY);
  Query xConditions;
  if (ctx.isGeo() && bbox.getMinX() == -180.0 && bbox.getMaxX() == 180.0) {
    return yConditions;
  }
 else   if (!bbox.getCrossesDateLine()) {
    Query qMinX=LegacyNumericRangeQuery.newDoubleRange(field_minX,getPrecisionStep(),bbox.getMinX(),null,true,false);
    Query qMaxX=LegacyNumericRangeQuery.newDoubleRange(field_maxX,getPrecisionStep(),null,bbox.getMaxX(),false,true);
    Query qMinMax=this.makeQuery(BooleanClause.Occur.MUST,qMinX,qMaxX);
    double edge=0;
    if (bbox.getMinX() == -180.0)     edge=180;
 else     if (bbox.getMaxX() == 180.0)     edge=-180;
    if (edge != 0 && ctx.isGeo()) {
      Query edgeQ=makeQuery(BooleanClause.Occur.MUST,makeNumberTermQuery(field_minX,edge),makeNumberTermQuery(field_maxX,edge));
      qMinMax=makeQuery(BooleanClause.Occur.SHOULD,qMinMax,edgeQ);
    }
    xConditions=this.makeXDL(false,qMinMax);
  }
 else {
    Query qMinXLeft=LegacyNumericRangeQuery.newDoubleRange(field_minX,getPrecisionStep(),bbox.getMinX(),null,true,false);
    Query qMaxXLeft=LegacyNumericRangeQuery.newDoubleRange(field_maxX,getPrecisionStep(),null,180.0,false,true);
    Query qLeft=this.makeQuery(BooleanClause.Occur.MUST,qMinXLeft,qMaxXLeft);
    Query qMinXRight=LegacyNumericRangeQuery.newDoubleRange(field_minX,getPrecisionStep(),-180.0,null,true,false);
    Query qMaxXRight=LegacyNumericRangeQuery.newDoubleRange(field_maxX,getPrecisionStep(),null,bbox.getMaxX(),false,true);
    Query qRight=this.makeQuery(BooleanClause.Occur.MUST,qMinXRight,qMaxXRight);
    Query qLeftRight=this.makeQuery(BooleanClause.Occur.SHOULD,qLeft,qRight);
    Query qNonXDL=this.makeXDL(false,qLeftRight);
    Query qXDLLeft=LegacyNumericRangeQuery.newDoubleRange(field_minX,getPrecisionStep(),bbox.getMinX(),null,true,false);
    Query qXDLRight=LegacyNumericRangeQuery.newDoubleRange(field_maxX,getPrecisionStep(),null,bbox.getMaxX(),false,true);
    Query qXDLLeftRight=this.makeQuery(BooleanClause.Occur.MUST,qXDLLeft,qXDLRight);
    Query qXDL=this.makeXDL(true,qXDLLeftRight);
    xConditions=this.makeQuery(BooleanClause.Occur.SHOULD,qNonXDL,qXDL);
  }
  return this.makeQuery(BooleanClause.Occur.MUST,xConditions,yConditions);
}
