{
  Query qMinY=NumericRangeQuery.newDoubleRange(field_minY,precisionStep,null,bbox.getMinY(),false,true);
  Query qMaxY=NumericRangeQuery.newDoubleRange(field_maxY,precisionStep,bbox.getMaxY(),null,true,false);
  Query yConditions=this.makeQuery(new Query[]{qMinY,qMaxY},BooleanClause.Occur.MUST);
  Query xConditions=null;
  if (!bbox.getCrossesDateLine()) {
    Query qMinX=NumericRangeQuery.newDoubleRange(field_minX,precisionStep,null,bbox.getMinX(),false,true);
    Query qMaxX=NumericRangeQuery.newDoubleRange(field_maxX,precisionStep,bbox.getMaxX(),null,true,false);
    Query qMinMax=this.makeQuery(new Query[]{qMinX,qMaxX},BooleanClause.Occur.MUST);
    Query qNonXDL=this.makeXDL(false,qMinMax);
    Query qXDLLeft=NumericRangeQuery.newDoubleRange(field_minX,precisionStep,null,bbox.getMinX(),false,true);
    Query qXDLRight=NumericRangeQuery.newDoubleRange(field_maxX,precisionStep,bbox.getMaxX(),null,true,false);
    Query qXDLLeftRight=this.makeQuery(new Query[]{qXDLLeft,qXDLRight},BooleanClause.Occur.SHOULD);
    Query qXDL=this.makeXDL(true,qXDLLeftRight);
    xConditions=this.makeQuery(new Query[]{qNonXDL,qXDL},BooleanClause.Occur.SHOULD);
  }
 else {
    Query qXDLLeft=NumericRangeQuery.newDoubleRange(field_minX,precisionStep,null,bbox.getMinX(),false,true);
    Query qXDLRight=NumericRangeQuery.newDoubleRange(field_maxX,precisionStep,bbox.getMaxX(),null,true,false);
    Query qXDLLeftRight=this.makeQuery(new Query[]{qXDLLeft,qXDLRight},BooleanClause.Occur.MUST);
    xConditions=this.makeXDL(true,qXDLLeftRight);
  }
  return this.makeQuery(new Query[]{xConditions,yConditions},BooleanClause.Occur.MUST);
}
