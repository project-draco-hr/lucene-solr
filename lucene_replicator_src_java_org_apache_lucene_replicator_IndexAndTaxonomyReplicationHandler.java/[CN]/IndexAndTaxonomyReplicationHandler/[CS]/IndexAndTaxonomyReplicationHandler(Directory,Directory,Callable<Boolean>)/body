{
  this.callback=callback;
  this.indexDir=indexDir;
  this.taxoDir=taxoDir;
  currentRevisionFiles=null;
  currentVersion=null;
  final boolean indexExists=DirectoryReader.indexExists(indexDir);
  final boolean taxoExists=DirectoryReader.indexExists(taxoDir);
  if (indexExists != taxoExists) {
    throw new IllegalStateException("search and taxonomy indexes must either both exist or not: index=" + indexExists + " taxo="+ taxoExists);
  }
  if (indexExists) {
    final IndexCommit indexCommit=IndexReplicationHandler.getLastCommit(indexDir);
    final IndexCommit taxoCommit=IndexReplicationHandler.getLastCommit(taxoDir);
    currentRevisionFiles=IndexAndTaxonomyRevision.revisionFiles(indexCommit,taxoCommit);
    currentVersion=IndexAndTaxonomyRevision.revisionVersion(indexCommit,taxoCommit);
    final InfoStream infoStream=InfoStream.getDefault();
    if (infoStream.isEnabled(INFO_STREAM_COMPONENT)) {
      infoStream.message(INFO_STREAM_COMPONENT,"constructor(): currentVersion=" + currentVersion + " currentRevisionFiles="+ currentRevisionFiles);
      infoStream.message(INFO_STREAM_COMPONENT,"constructor(): indexCommit=" + indexCommit + " taxoCommit="+ taxoCommit);
    }
  }
}
