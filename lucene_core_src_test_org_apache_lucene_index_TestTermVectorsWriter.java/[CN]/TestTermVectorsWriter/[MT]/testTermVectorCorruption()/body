{
  Directory dir=newDirectory();
  for (int iter=0; iter < 2; iter++) {
    IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(2).setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(new SerialMergeScheduler()).setMergePolicy(new LogDocMergePolicy()));
    Document document=new Document();
    FieldType customType=new FieldType();
    customType.setStored(true);
    Field storedField=newField("stored","stored",customType);
    document.add(storedField);
    writer.addDocument(document);
    writer.addDocument(document);
    document=new Document();
    document.add(storedField);
    FieldType customType2=new FieldType(StringField.TYPE_NOT_STORED);
    customType2.setStoreTermVectors(true);
    customType2.setStoreTermVectorPositions(true);
    customType2.setStoreTermVectorOffsets(true);
    Field termVectorField=newField("termVector","termVector",customType2);
    document.add(termVectorField);
    writer.addDocument(document);
    writer.forceMerge(1);
    writer.shutdown();
    IndexReader reader=DirectoryReader.open(dir);
    for (int i=0; i < reader.numDocs(); i++) {
      reader.document(i);
      reader.getTermVectors(i);
    }
    reader.close();
    writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(2).setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(new SerialMergeScheduler()).setMergePolicy(new LogDocMergePolicy()));
    Directory[] indexDirs={new MockDirectoryWrapper(random(),new RAMDirectory(dir,newIOContext(random())))};
    writer.addIndexes(indexDirs);
    writer.forceMerge(1);
    writer.shutdown();
  }
  dir.close();
}
