{
  ServerBaseEntry entry=buildEntry(request,response);
  entry.setFeedId(request.getFeedId());
  entry.setServiceConfig(request.getConfigurator());
  if (LOGGER.isInfoEnabled())   LOGGER.info("update Entry" + entry.getId() + " for feedId: "+ request.getFeedId());
  if (entry.getId() == null) {
    response.setError(HttpServletResponse.SC_BAD_REQUEST);
    throw new ServiceException("Entry id is null can not update entry");
  }
  if (!entry.getId().equals(request.getEntryId())) {
    if (LOGGER.isInfoEnabled())     LOGGER.info("Entry id in the entry xml does not match the requested resource -- XML-ID:" + entry.getId() + "; Requested resource: "+ request.getEntryId());
    response.setError(HttpServletResponse.SC_BAD_REQUEST);
    throw new ServiceException("Entry id in the entry xml does not match the requested resource");
  }
  setTimeStamps(entry.getEntry());
  BaseEntry retVal=null;
  try {
    retVal=this.storage.updateEntry(entry);
  }
 catch (  ResourceNotFoundException e) {
    response.setError(HttpServletResponse.SC_BAD_REQUEST);
    ServiceException ex=new ServiceException("Could not update entry",e);
    ex.setStackTrace(e.getStackTrace());
    throw ex;
  }
catch (  StorageException e) {
    response.setError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    ServiceException ex=new ServiceException("Could not update entry",e);
    ex.setStackTrace(e.getStackTrace());
    throw ex;
  }
  return retVal;
}
