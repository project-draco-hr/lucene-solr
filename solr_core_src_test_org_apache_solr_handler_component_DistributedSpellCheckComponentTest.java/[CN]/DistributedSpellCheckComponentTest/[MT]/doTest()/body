{
  del("*:*");
  index(id,"1","lowerfilt","toyota");
  index(id,"2","lowerfilt","chevrolet");
  index(id,"3","lowerfilt","suzuki");
  index(id,"4","lowerfilt","ford");
  index(id,"5","lowerfilt","ferrari");
  index(id,"6","lowerfilt","jaguar");
  index(id,"7","lowerfilt","mclaren");
  index(id,"8","lowerfilt","sonata");
  index(id,"9","lowerfilt","The quick red fox jumped over the lazy brown dogs.");
  index(id,"10","lowerfilt","blue");
  index(id,"12","lowerfilt","glue");
  index(id,"13","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"14","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"15","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"16","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"17","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"18","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"19","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"20","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"21","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"22","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"23","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"24","lowerfilt","The quote red fox jumped over the lazy brown dogs.");
  index(id,"25","lowerfilt","rod fix");
  commit();
  handle.clear();
  handle.put("timestamp",SKIPVAL);
  handle.put("maxScore",SKIPVAL);
  handle.put("response",SKIP);
  handle.put("grouped",SKIP);
  String requestHandlerName="spellCheckCompRH_Direct";
  String reqHandlerWithWordbreak="spellCheckWithWordbreak_Direct";
  if (random().nextBoolean()) {
    requestHandlerName="spellCheckCompRH";
    reqHandlerWithWordbreak="spellCheckWithWordbreak";
  }
  String build=SpellingParams.SPELLCHECK_BUILD;
  String extended=SpellingParams.SPELLCHECK_EXTENDED_RESULTS;
  String count=SpellingParams.SPELLCHECK_COUNT;
  String collate=SpellingParams.SPELLCHECK_COLLATE;
  String collateExtended=SpellingParams.SPELLCHECK_COLLATE_EXTENDED_RESULTS;
  String maxCollationTries=SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES;
  String maxCollations=SpellingParams.SPELLCHECK_MAX_COLLATIONS;
  String altTermCount=SpellingParams.SPELLCHECK_ALTERNATIVE_TERM_COUNT;
  String maxResults=SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST;
  q(buildRequest("*:*",false,"spellCheckCompRH",false,build,"true"));
  query(buildRequest("toyata",true,requestHandlerName,random().nextBoolean(),(String[])null));
  query(buildRequest("toyata",true,requestHandlerName,random().nextBoolean(),extended,"true"));
  query(buildRequest("bluo",true,requestHandlerName,random().nextBoolean(),extended,"true",count,"4"));
  query(buildRequest("The quick reb fox jumped over the lazy brown dogs",false,requestHandlerName,random().nextBoolean(),extended,"true",count,"4",collate,"true"));
  query(buildRequest("lowerfilt:(+quock +reb)",false,requestHandlerName,random().nextBoolean(),extended,"true",count,"10",collate,"true",maxCollationTries,"10",maxCollations,"10",collateExtended,"true"));
  query(buildRequest("lowerfilt:(+quock +reb)",false,requestHandlerName,random().nextBoolean(),extended,"true",count,"10",collate,"true",maxCollationTries,"10",maxCollations,"10",collateExtended,"false"));
  query(buildRequest("lowerfilt:(+quock +reb)",false,requestHandlerName,random().nextBoolean(),extended,"true",count,"10",collate,"true",maxCollationTries,"0",maxCollations,"1",collateExtended,"false"));
  query(buildRequest("lowerfilt:(\"quote red fox\")",false,requestHandlerName,random().nextBoolean(),extended,"true",count,"10",collate,"true",maxCollationTries,"10",maxCollations,"1",collateExtended,"false",altTermCount,"5",maxResults,"10"));
  query(buildRequest("lowerfilt:(\"rod fix\")",false,requestHandlerName,random().nextBoolean(),extended,"true",count,"10",collate,"true",maxCollationTries,"10",maxCollations,"1",collateExtended,"false",altTermCount,"5",maxResults,"10"));
  query(buildRequest("lowerfilt:(+quock +redfox +jum +ped)",false,reqHandlerWithWordbreak,random().nextBoolean(),extended,"true",count,"10",collate,"true",maxCollationTries,"0",maxCollations,"1",collateExtended,"true"));
}
