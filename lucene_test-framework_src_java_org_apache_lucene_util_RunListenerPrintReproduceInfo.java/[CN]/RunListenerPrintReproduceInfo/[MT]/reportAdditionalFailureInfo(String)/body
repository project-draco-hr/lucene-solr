{
  if (TEST_LINE_DOCS_FILE.endsWith(JENKINS_LARGE_LINE_DOCS_FILE)) {
    System.err.println("NOTE: download the large Jenkins line-docs file by running " + "'ant get-jenkins-line-docs' in the lucene directory.");
  }
  final StringBuilder b=new StringBuilder();
  b.append("NOTE: reproduce with: ant test ");
  addVmOpt(b,"testcase",RandomizedContext.current().getTargetClass().getSimpleName());
  addVmOpt(b,"tests.method",testName);
  addVmOpt(b,"tests.seed",RandomizedContext.current().getRunnerSeedAsString());
  if (RANDOM_MULTIPLIER > 1)   addVmOpt(b,"tests.multiplier",RANDOM_MULTIPLIER);
  if (TEST_NIGHTLY)   addVmOpt(b,SYSPROP_NIGHTLY,TEST_NIGHTLY);
  if (TEST_WEEKLY)   addVmOpt(b,SYSPROP_WEEKLY,TEST_WEEKLY);
  if (TEST_SLOW)   addVmOpt(b,SYSPROP_SLOW,TEST_SLOW);
  if (TEST_AWAITSFIX)   addVmOpt(b,SYSPROP_AWAITSFIX,TEST_AWAITSFIX);
  if (!TEST_CODEC.equals("random"))   addVmOpt(b,"tests.codec",TEST_CODEC);
  if (!TEST_POSTINGSFORMAT.equals("random"))   addVmOpt(b,"tests.postingsformat",TEST_POSTINGSFORMAT);
  if (!TEST_DIRECTORY.equals("random"))   addVmOpt(b,"tests.directory",TEST_DIRECTORY);
  if (!TEST_LINE_DOCS_FILE.equals(DEFAULT_LINE_DOCS_FILE))   addVmOpt(b,"tests.linedocsfile",TEST_LINE_DOCS_FILE);
  if (classEnvRule != null) {
    addVmOpt(b,"tests.locale",classEnvRule.locale);
    if (classEnvRule.timeZone != null) {
      addVmOpt(b,"tests.timezone",classEnvRule.timeZone.getID());
    }
  }
  addVmOpt(b,"tests.file.encoding",System.getProperty("file.encoding"));
  System.err.println(b.toString());
}
