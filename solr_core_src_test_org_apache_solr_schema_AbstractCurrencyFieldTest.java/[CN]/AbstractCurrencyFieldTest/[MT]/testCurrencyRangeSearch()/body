{
  clearIndex();
  final int emptyDocs=atLeast(50);
  final int negDocs=atLeast(5);
  assertU(adoc("id","0",field(),"0,USD"));
  for (int i=100; i <= 100 + emptyDocs; i++) {
    assertU(adoc("id","" + i));
  }
  for (int i=1; i <= 10; i++) {
    assertU(adoc("id","" + i,field(),i + ",USD"));
  }
  for (int i=500; i <= 500 + emptyDocs; i++) {
    assertU(adoc("id","" + i));
  }
  for (int i=-100; i > -100 - negDocs; i--) {
    assertU(adoc("id","" + i,field(),i + ",USD"));
  }
  assertU(adoc("id","40",field(),"0,USD"));
  assertU(commit());
  assertQ(req("fl","*,score","q",field() + ":[2.00,USD TO 5.00,USD]"),"//*[@numFound='4']");
  assertQ(req("fl","*,score","q",field() + ":[0.50,USD TO 1.00,USD]"),"//*[@numFound='1']");
  assertQ(req("fl","*,score","q",field() + ":[24.00,USD TO 25.00,USD]"),"//*[@numFound='0']");
  assertQ(req("fl","*,score","q",field() + ":[0.50,GBP TO 1.00,GBP]"),"//*[@numFound='2']");
  assertQ(req("fl","*,score","q",field() + ":[24.00,EUR TO 25.00,EUR]"),"//*[@numFound='1']");
  assertQ(req("fl","*,score","q",field() + ":[24.99,EUR TO 25.01,EUR]"),"//*[@numFound='1']");
  assertQ(req("fl","*,score","q",field() + ":[* TO *]"),"//*[@numFound='" + (2 + 10 + negDocs) + "']");
  assertQ(req("fl","*,score","q",field() + ":[*,EUR TO *,EUR]"),"//*[@numFound='" + (2 + 10 + negDocs) + "']");
  assertQ(req("fl","*,score","q",field() + ":[* TO 5,USD]"),"//*[@numFound='" + (2 + 5 + negDocs) + "']");
  assertQ(req("fl","*,score","q",field() + ":[*,USD TO 5,USD]"),"//*[@numFound='" + (2 + 5 + negDocs) + "']");
  assertQ(req("fl","*,score","q",field() + ":[3 TO *]"),"//*[@numFound='8']");
}
