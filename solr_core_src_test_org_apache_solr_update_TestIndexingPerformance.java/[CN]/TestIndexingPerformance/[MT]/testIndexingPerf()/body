{
  int iter=1000;
  String iterS=System.getProperty("iter");
  if (iterS != null)   iter=Integer.parseInt(iterS);
  boolean overwrite=Boolean.parseBoolean(System.getProperty("overwrite","false"));
  String doc=System.getProperty("doc");
  if (doc != null) {
    StrUtils.splitSmart(doc,",",true);
  }
  SolrQueryRequest req=lrf.makeRequest();
  UpdateHandler updateHandler=req.getCore().getUpdateHandler();
  String field="textgap";
  String[] fields={field,"simple",field,"test",field,"how now brown cow",field,"what's that?",field,"radical!",field,"what's all this about, anyway?",field,"just how fast is this text indexing?"};
  long start=System.currentTimeMillis();
  AddUpdateCommand add=new AddUpdateCommand(req);
  add.overwrite=overwrite;
  for (int i=0; i < iter; i++) {
    add.clear();
    add.solrDoc=new SolrInputDocument();
    add.solrDoc.addField("id",Integer.toString(i));
    for (int j=0; j < fields.length; j+=2) {
      String f=fields[j];
      String val=fields[j + 1];
      add.solrDoc.addField(f,val);
    }
    updateHandler.addDoc(add);
  }
  long end=System.currentTimeMillis();
  log.info("doc=" + Arrays.toString(fields));
  log.info("iter=" + iter + " time="+ (end - start)+ " throughput="+ ((long)iter * 1000) / (end - start));
  updateHandler.rollback(new RollbackUpdateCommand(req));
  req.close();
}
