{
  del("*:*");
  commit();
  handle.clear();
  handle.put("QTime",SKIPVAL);
  handle.put("timestamp",SKIPVAL);
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","hl","true","hl.fl",t1);
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","facet","true","facet.field",t1);
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","stats","true","stats.field",i1);
  query("q","kings","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","spellcheck","true","spellcheck.build","true","qt","spellCheckCompRH");
  query("q","*:*","fq",s1 + ":a","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","group.truncate","true","facet","true","facet.field",t1);
  indexr(id,1,i1,100,tlong,100,t1,"now is the time for all good men",tdate_a,"2010-04-20T11:00:00Z",tdate_b,"2009-08-20T11:00:00Z","foo_f",1.414f,"foo_b","true","foo_d",1.414d);
  indexr(id,2,i1,50,tlong,50,t1,"to come to the aid of their country.",tdate_a,"2010-05-02T11:00:00Z",tdate_b,"2009-11-02T11:00:00Z");
  indexr(id,3,i1,2,tlong,2,t1,"how now brown cow",tdate_a,"2010-05-03T11:00:00Z");
  indexr(id,4,i1,-100,tlong,101,t1,"the quick fox jumped over the lazy dog",tdate_a,"2010-05-03T11:00:00Z",tdate_b,"2010-05-03T11:00:00Z");
  indexr(id,5,i1,500,tlong,500,t1,"the quick fox jumped way over the lazy dog",tdate_a,"2010-05-05T11:00:00Z");
  indexr(id,6,i1,-600,tlong,600,t1,"humpty dumpy sat on a wall");
  indexr(id,7,i1,123,tlong,123,t1,"humpty dumpy had a great fall");
  indexr(id,8,i1,876,tlong,876,tdate_b,"2010-01-05T11:00:00Z",t1,"all the kings horses and all the kings men");
  indexr(id,9,i1,7,tlong,7,t1,"couldn't put humpty together again");
  indexr(id,10,i1,4321,tlong,4321,t1,"this too shall pass");
  indexr(id,11,i1,-987,tlong,987,t1,"An eye for eye only ends up making the whole world blind.");
  indexr(id,12,i1,379,tlong,379,t1,"Great works are performed, not by strength, but by perseverance.");
  indexr(id,13,i1,232,tlong,232,t1,"no eggs on wall, lesson learned",oddField,"odd man out");
  indexr(id,14,"SubjectTerms_mfacet",new String[]{"mathematical models","mathematical analysis"});
  indexr(id,15,"SubjectTerms_mfacet",new String[]{"test 1","test 2","test3"});
  indexr(id,16,"SubjectTerms_mfacet",new String[]{"test 1","test 2","test3"});
  String[] vals=new String[100];
  for (int i=0; i < 100; i++) {
    vals[i]="test " + i;
  }
  indexr(id,17,"SubjectTerms_mfacet",vals);
  for (int i=100; i < 150; i++) {
    indexr(id,i);
  }
  int[] values=new int[]{9999,99999,999999,9999999};
  for (int shard=0; shard < clients.size(); shard++) {
    int groupValue=values[shard];
    for (int i=500; i < 600; i++) {
      index_specific(shard,i1,groupValue,s1,"a",id,i * (shard + 1),t1,shard);
    }
  }
  commit();
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort","id asc, _docid_ asc");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort","{!func}add(" + i1 + ",5) asc, id asc");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","facet","true","facet.field",t1);
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","stats","true","stats.field",i1);
  query("q","kings","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","spellcheck","true","spellcheck.build","true","qt","spellCheckCompRH");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","facet","true","hl","true","hl.fl",t1);
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","group.sort","id desc");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.offset",5,"group.limit",5,"sort",i1 + " asc, id asc");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"offset",5,"rows",5,"group.offset",5,"group.limit",5,"sort",i1 + " asc, id asc");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"offset",5,"rows",5,"sort",i1 + " asc, id asc","group.format","simple");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"offset",5,"rows",5,"sort",i1 + " asc, id asc","group.main","true");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.offset",5,"group.limit",5,"sort",i1 + " asc, id asc","group.format","simple","offset",5,"rows",5);
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.offset",5,"group.limit",5,"sort",i1 + " asc, id asc","group.main","true","offset",5,"rows",5);
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.query",t1 + ":kings OR " + t1+ ":eggs","group.limit",10,"sort",i1 + " asc, id asc");
  query("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.query",t1 + ":kings OR " + t1+ ":eggs","group.limit",10,"sort",i1 + " asc, id asc");
  query("q","*:*","fq",s1 + ":a","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","group.ngroups","true");
  query("q","*:*","fq",s1 + ":a","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","group.truncate","true");
  query("q","*:*","fq",s1 + ":a","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " asc, id asc","group.truncate","true","facet","true","facet.field",t1);
  simpleQuery("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort",i1 + " desc","group.sort","score desc");
  simpleQuery("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10,"sort","score desc, _docid_ asc, id asc");
  simpleQuery("q","*:*","rows",100,"fl","id," + i1,"group","true","group.field",i1,"group.limit",10);
}
