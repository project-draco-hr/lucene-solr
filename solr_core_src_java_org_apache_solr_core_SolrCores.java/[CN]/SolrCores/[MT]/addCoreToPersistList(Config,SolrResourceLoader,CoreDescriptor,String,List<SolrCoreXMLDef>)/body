{
  Map<String,String> coreAttribs=new HashMap<String,String>();
  Properties newProps=new Properties();
  if (dcore.getCreatedProperties().size() > 0) {
    final List<String> stdNames=new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));
    coreAttribs.put(CoreDescriptor.CORE_NAME,dcore.getName());
    for (    String key : dcore.getCreatedProperties().stringPropertyNames()) {
      if (!stdNames.contains(key) && !key.startsWith(CoreAdminParams.PROPERTY_PREFIX))       continue;
      if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {
        newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()),dcore.getCreatedProperties().getProperty(key));
      }
 else       if (!CoreDescriptor.CORE_NAME.equals(key)) {
        coreAttribs.put(key,dcore.getCreatedProperties().getProperty(key));
      }
    }
    if (!dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {
      coreAttribs.put(CoreDescriptor.CORE_INSTDIR,dcore.getProperty(CoreDescriptor.CORE_INSTDIR));
    }
  }
 else {
    String coreName=dcore.getProperty(CoreDescriptor.CORE_NAME);
    CloudDescriptor cd=dcore.getCloudDescriptor();
    String collection=null;
    if (cd != null)     collection=cd.getCollectionName();
    if (origCoreName == null) {
      origCoreName=coreName;
    }
    Node node=null;
    if (cfg != null) {
      node=cfg.getNode("/solr/cores/core[@name='" + origCoreName + "']",false);
    }
    coreAttribs.put(CoreDescriptor.CORE_NAME,coreName);
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_INSTDIR,dcore.getRawInstanceDir(),null);
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_COLLECTION,StringUtils.isNotBlank(collection) ? collection : dcore.getName());
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_DATADIR,dcore.getDataDir());
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_ULOGDIR,dcore.getUlogDir());
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_TRANSIENT,Boolean.toString(dcore.isTransient()));
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_LOADONSTARTUP,Boolean.toString(dcore.isLoadOnStartup()));
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_CONFIG,dcore.getConfigName());
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_SCHEMA,dcore.getSchemaName());
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_COLLECTION,collection,dcore.getName());
    String shard=null;
    String roles=null;
    String node_name=null;
    if (cd != null) {
      shard=cd.getShardId();
      roles=cd.getRoles();
      node_name=cd.getCoreNodeName();
    }
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_SHARD,shard);
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_ROLES,roles);
    addCoreProperty(coreAttribs,loader,node,CoreDescriptor.CORE_NODE_NAME,node_name);
    for (    Object key : dcore.getCoreProperties().keySet()) {
      if (cfg != null) {
        Node propNode=cfg.getNode("/solr/cores/core[@name='" + origCoreName + "']/property[@name='"+ key+ "']",false);
        if (propNode != null) {
          newProps.put(DOMUtil.getAttr(propNode,"name",null),DOMUtil.getAttr(propNode,"value",null));
        }
      }
    }
  }
  SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef=new SolrXMLSerializer.SolrCoreXMLDef();
  solrCoreXMLDef.coreAttribs=coreAttribs;
  solrCoreXMLDef.coreProperties=newProps;
  solrCoreXMLDefs.add(solrCoreXMLDef);
}
