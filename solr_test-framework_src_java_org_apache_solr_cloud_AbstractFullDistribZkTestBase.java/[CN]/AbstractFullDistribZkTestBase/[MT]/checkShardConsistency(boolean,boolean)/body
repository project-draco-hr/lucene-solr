{
  long docs=controlClient.query(new SolrQuery("*:*")).getResults().getNumFound();
  if (verbose)   System.err.println("Control Docs:" + docs);
  updateMappingsFromZk(jettys,clients);
  Set<String> theShards=shardToJetty.keySet();
  String failMessage=null;
  for (  String shard : theShards) {
    String shardFailMessage=checkShardConsistency(shard,verbose);
    if (shardFailMessage != null && failMessage == null) {
      failMessage=shardFailMessage;
    }
  }
  if (failMessage != null) {
    fail(failMessage);
  }
  if (checkVsControl) {
    theShards=shardToJetty.keySet();
    int cnt=0;
    for (    String s : theShards) {
      int times=shardToJetty.get(s).size();
      for (int i=0; i < times; i++) {
        try {
          CloudJettyRunner cjetty=shardToJetty.get(s).get(i);
          ZkNodeProps props=cjetty.info;
          SolrServer client=cjetty.client.solrClient;
          boolean active=props.getStr(ZkStateReader.STATE_PROP).equals(ZkStateReader.ACTIVE);
          if (active) {
            SolrQuery query=new SolrQuery("*:*");
            query.set("distrib",false);
            long results=client.query(query).getResults().getNumFound();
            if (verbose)             System.err.println(new ZkCoreNodeProps(props).getCoreUrl() + " : " + results);
            if (verbose)             System.err.println("shard:" + props.getStr(ZkStateReader.SHARD_ID_PROP));
            cnt+=results;
            break;
          }
        }
 catch (        Exception e) {
          if (i == times - 1) {
            throw e;
          }
        }
      }
    }
    SolrQuery q=new SolrQuery("*:*");
    long cloudClientDocs=cloudClient.query(q).getResults().getNumFound();
    assertEquals("adding up the # of docs on each shard does not match the control - cloud client returns:" + cloudClientDocs,docs,cnt);
  }
}
