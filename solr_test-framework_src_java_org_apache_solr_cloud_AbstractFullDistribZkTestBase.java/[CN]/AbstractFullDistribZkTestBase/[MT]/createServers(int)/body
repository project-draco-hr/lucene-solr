{
  System.setProperty("collection","control_collection");
  String numShards=System.getProperty(ZkStateReader.NUM_SHARDS_PROP);
  System.setProperty(ZkStateReader.NUM_SHARDS_PROP,"1");
  File controlJettyDir=new File(TEMP_DIR,getClass().getName() + "-controljetty-" + System.currentTimeMillis());
  org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()),controlJettyDir);
  controlJetty=createJetty(controlJettyDir,testDir + "/control/data");
  System.clearProperty("collection");
  if (numShards != null) {
    System.setProperty(ZkStateReader.NUM_SHARDS_PROP,numShards);
  }
 else {
    System.clearProperty(ZkStateReader.NUM_SHARDS_PROP);
  }
  controlClient=createNewSolrServer(controlJetty.getLocalPort());
  initCloud();
  createJettys(numServers,true);
  ZkStateReader zkStateReader=cloudClient.getZkStateReader();
  int cnt=30;
  while (!zkStateReader.getClusterState().getCollections().contains(DEFAULT_COLLECTION)) {
    if (cnt == 0) {
      throw new RuntimeException("timeout waiting for collection1 in cluster state");
    }
    cnt--;
    Thread.sleep(500);
  }
  cnt=30;
  while (zkStateReader.getClusterState().getSlices(DEFAULT_COLLECTION).size() != sliceCount) {
    if (cnt == 0) {
      throw new RuntimeException("timeout waiting for collection shards to come up");
    }
    cnt--;
    Thread.sleep(500);
  }
}
