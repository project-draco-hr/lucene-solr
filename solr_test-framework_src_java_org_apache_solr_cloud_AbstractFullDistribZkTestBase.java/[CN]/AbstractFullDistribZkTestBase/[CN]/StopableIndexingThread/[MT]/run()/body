{
  int i=startI;
  int numDeletes=0;
  int numAdds=0;
  while (true && !stop) {
    ++i;
    boolean addFailed=false;
    if (doDeletes && random().nextBoolean() && deletes.size() > 0) {
      Integer delete=deletes.remove(0);
      try {
        numDeletes++;
        controlClient.deleteById(Integer.toString(delete));
        cloudClient.deleteById(Integer.toString(delete));
      }
 catch (      Exception e) {
        System.err.println("REQUEST FAILED:");
        e.printStackTrace();
        if (e instanceof SolrServerException) {
          System.err.println("ROOT CAUSE:");
          ((SolrServerException)e).getRootCause().printStackTrace();
        }
        fails.incrementAndGet();
      }
    }
    try {
      numAdds++;
      indexr(id,i,i1,50,tlong,50,t1,"to come to the aid of their country.");
    }
 catch (    Exception e) {
      addFailed=true;
      System.err.println("REQUEST FAILED:");
      e.printStackTrace();
      if (e instanceof SolrServerException) {
        System.err.println("ROOT CAUSE:");
        ((SolrServerException)e).getRootCause().printStackTrace();
      }
      fails.incrementAndGet();
    }
    if (!addFailed && doDeletes && random().nextBoolean()) {
      deletes.add(i);
    }
  }
  System.err.println("added docs:" + numAdds + " with "+ fails+ " fails"+ " deletes:"+ numDeletes);
}
