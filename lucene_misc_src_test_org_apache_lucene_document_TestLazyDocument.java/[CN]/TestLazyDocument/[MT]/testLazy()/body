{
  final int id=random().nextInt(NUM_DOCS);
  IndexReader reader=DirectoryReader.open(dir);
  try {
    Query q=new TermQuery(new Term("docid","" + id));
    IndexSearcher searcher=newSearcher(reader);
    ScoreDoc[] hits=searcher.search(q,100).scoreDocs;
    assertEquals("Too many docs",1,hits.length);
    LazyTestingStoredFieldVisitor visitor=new LazyTestingStoredFieldVisitor(new LazyDocument(reader,hits[0].doc),FIELDS);
    reader.document(hits[0].doc,visitor);
    StoredDocument d=visitor.doc;
    int numFieldValues=0;
    Map<String,Integer> fieldValueCounts=new HashMap<>();
    for (    StorableField f : d) {
      numFieldValues++;
      if (f.name().equals("never_load")) {
        fail("never_load was loaded");
      }
      if (f.name().equals("load_later")) {
        fail("load_later was loaded on first pass");
      }
      if (f.name().equals("docid")) {
        assertFalse(f.name(),f instanceof LazyDocument.LazyField);
      }
 else {
        int count=fieldValueCounts.containsKey(f.name()) ? fieldValueCounts.get(f.name()) : 0;
        count++;
        fieldValueCounts.put(f.name(),count);
        assertTrue(f.name() + " is " + f.getClass(),f instanceof LazyDocument.LazyField);
        LazyDocument.LazyField lf=(LazyDocument.LazyField)f;
        assertFalse(f.name() + " is loaded",lf.hasBeenLoaded());
      }
    }
    if (VERBOSE)     System.out.println("numFieldValues == " + numFieldValues);
    assertEquals("numFieldValues",1 + (NUM_VALUES * FIELDS.length),numFieldValues);
    for (    String fieldName : fieldValueCounts.keySet()) {
      assertEquals("fieldName count: " + fieldName,NUM_VALUES,(int)fieldValueCounts.get(fieldName));
    }
    final String fieldName=FIELDS[random().nextInt(FIELDS.length)];
    final StorableField[] fieldValues=d.getFields(fieldName);
    assertEquals("#vals in field: " + fieldName,NUM_VALUES,fieldValues.length);
    final int valNum=random().nextInt(fieldValues.length);
    assertEquals(id + "_" + fieldName+ "_"+ valNum,fieldValues[valNum].stringValue());
    for (    StorableField f : d) {
      if (f.name().equals("never_load")) {
        fail("never_load was loaded");
      }
      if (f.name().equals("load_later")) {
        fail("load_later was loaded too soon");
      }
      if (f.name().equals("docid")) {
        assertFalse(f.name(),f instanceof LazyDocument.LazyField);
      }
 else {
        assertTrue(f.name() + " is " + f.getClass(),f instanceof LazyDocument.LazyField);
        LazyDocument.LazyField lf=(LazyDocument.LazyField)f;
        assertEquals(f.name() + " is loaded?",lf.name().equals(fieldName),lf.hasBeenLoaded());
      }
    }
    visitor=new LazyTestingStoredFieldVisitor(new LazyDocument(reader,hits[0].doc),"load_later");
    reader.document(hits[0].doc,visitor);
    d=visitor.doc;
    for (    StorableField f : d) {
      if (f.name().equals("never_load")) {
        fail("never_load was loaded");
      }
      if (f.name().equals("docid")) {
        assertFalse(f.name(),f instanceof LazyDocument.LazyField);
      }
 else {
        assertTrue(f.name() + " is " + f.getClass(),f instanceof LazyDocument.LazyField);
        LazyDocument.LazyField lf=(LazyDocument.LazyField)f;
        assertEquals(f.name() + " is loaded?",lf.name().equals(fieldName),lf.hasBeenLoaded());
      }
    }
    assertNull("never_load was loaded in wrapped doc",visitor.lazyDoc.getDocument().getField("never_load"));
  }
  finally {
    reader.close();
  }
}
