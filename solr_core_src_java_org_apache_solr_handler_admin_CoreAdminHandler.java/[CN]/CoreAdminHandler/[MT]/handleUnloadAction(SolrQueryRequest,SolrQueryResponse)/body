{
  SolrParams params=req.getParams();
  String cname=params.get(CoreAdminParams.CORE);
  SolrCore core=coreContainer.remove(cname);
  if (core == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"No such core exists '" + cname + "'");
  }
 else {
    if (coreContainer.getZkController() != null) {
      log.info("Unregistering core " + cname + " from cloudstate.");
      try {
        coreContainer.getZkController().unregister(cname,core.getCoreDescriptor().getCloudDescriptor());
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Could not unregister core " + cname + " from cloudstate: "+ e.getMessage(),e);
      }
catch (      KeeperException e) {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Could not unregister core " + cname + " from cloudstate: "+ e.getMessage(),e);
      }
    }
  }
  if (params.getBool(CoreAdminParams.DELETE_INDEX,false)) {
    core.addCloseHook(new CloseHook(){
      @Override public void preClose(      SolrCore core){
      }
      @Override public void postClose(      SolrCore core){
        File dataDir=new File(core.getIndexDir());
        File[] files=dataDir.listFiles();
        if (files != null) {
          for (          File file : files) {
            if (!file.delete()) {
              log.error(file.getAbsolutePath() + " could not be deleted on core unload");
            }
          }
          if (!dataDir.delete())           log.error(dataDir.getAbsolutePath() + " could not be deleted on core unload");
        }
 else {
          log.error(dataDir.getAbsolutePath() + " could not be deleted on core unload");
        }
      }
    }
);
  }
  core.close();
  return coreContainer.isPersistent();
}
