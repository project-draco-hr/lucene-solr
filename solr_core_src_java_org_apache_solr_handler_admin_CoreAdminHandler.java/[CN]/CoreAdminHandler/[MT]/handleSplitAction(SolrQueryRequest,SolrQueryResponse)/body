{
  SolrParams params=adminReq.getParams();
  List<DocRouter.Range> ranges=null;
  String[] pathsArr=params.getParams("path");
  String rangesStr=params.get("ranges");
  String[] newCoreNames=params.getParams("targetCore");
  String cname=params.get(CoreAdminParams.CORE,"");
  log.info("Invoked split action for core: " + cname);
  SolrCore core=coreContainer.getCore(cname);
  SolrQueryRequest req=new LocalSolrQueryRequest(core,params);
  List<SolrCore> newCores=null;
  try {
    List<String> paths=null;
    int partitions=pathsArr != null ? pathsArr.length : params.getInt("partitions",2);
    ClusterState clusterState=coreContainer.getZkController().getClusterState();
    String collectionName=req.getCore().getCoreDescriptor().getCloudDescriptor().getCollectionName();
    DocCollection collection=clusterState.getCollection(collectionName);
    String sliceName=req.getCore().getCoreDescriptor().getCloudDescriptor().getShardId();
    Slice slice=clusterState.getSlice(collectionName,sliceName);
    DocRouter.Range currentRange=slice.getRange() == null ? new DocRouter.Range(Integer.MIN_VALUE,Integer.MAX_VALUE) : slice.getRange();
    DocRouter hp=collection.getRouter() != null ? collection.getRouter() : DocRouter.DEFAULT;
    ranges=hp.partitionRange(partitions,currentRange);
    if (pathsArr == null) {
      newCores=new ArrayList<SolrCore>(partitions);
      for (      String newCoreName : newCoreNames) {
        SolrCore newcore=coreContainer.getCore(newCoreName);
        if (newcore != null) {
          newCores.add(newcore);
        }
 else {
          throw new SolrException(ErrorCode.BAD_REQUEST,"Core with core name " + newCoreName + " expected but doesn't exist.");
        }
      }
    }
 else {
      paths=Arrays.asList(pathsArr);
    }
    SplitIndexCommand cmd=new SplitIndexCommand(req,paths,newCores,ranges);
    core.getUpdateHandler().split(cmd);
  }
 catch (  Exception e) {
    log.error("ERROR executing split:",e);
    throw new RuntimeException(e);
  }
 finally {
    if (req != null)     req.close();
    if (core != null)     core.close();
    if (newCores != null) {
      for (      SolrCore newCore : newCores) {
        newCore.close();
      }
    }
  }
  return false;
}
