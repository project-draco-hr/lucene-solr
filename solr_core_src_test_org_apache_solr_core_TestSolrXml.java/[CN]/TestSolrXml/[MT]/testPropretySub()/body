{
  String coreRoot=System.getProperty("coreRootDirectory");
  String hostPort=System.getProperty("hostPort");
  String shareSchema=System.getProperty("shareSchema");
  String socketTimeout=System.getProperty("socketTimeout");
  String connTimeout=System.getProperty("connTimeout");
  System.setProperty("coreRootDirectory","myCoreRoot");
  System.setProperty("hostPort","8888");
  System.setProperty("shareSchema","newShareSchema");
  System.setProperty("socketTimeout","220");
  System.setProperty("connTimeout","200");
  CoreContainer cc=null;
  File testSrcRoot=new File(SolrTestCaseJ4.TEST_HOME());
  FileUtils.copyFile(new File(testSrcRoot,"solr-50-all.xml"),new File(solrHome,"solr.xml"));
  try {
    InputStream is=new FileInputStream(new File(solrHome,"solr.xml"));
    Config config=new Config(new SolrResourceLoader("solr/collection1"),null,new InputSource(is),null,false);
    boolean oldStyle=(config.getNode("solr/cores",false) != null);
    ConfigSolr cfg;
    if (oldStyle) {
      cfg=new ConfigSolrXmlOld(config);
    }
 else {
      cfg=new ConfigSolrXml(config,cc);
    }
    assertEquals("Did not find expected value",cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY,null),"myCoreRoot");
    assertEquals("Did not find expected value",cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT,0),8888);
    assertEquals("Did not find expected value",cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA,null),"newShareSchema");
  }
  finally {
    if (cc != null)     cc.shutdown();
    if (coreRoot != null)     System.setProperty("coreRootDirectory",coreRoot);
 else     System.clearProperty("coreRootDirectory");
    if (hostPort != null)     System.setProperty("hostPort",hostPort);
 else     System.clearProperty("hostPort");
    if (shareSchema != null)     System.setProperty("shareSchema",shareSchema);
 else     System.clearProperty("shareSchema");
    if (socketTimeout != null)     System.setProperty("socketTimeout",socketTimeout);
 else     System.clearProperty("socketTimeout");
    if (connTimeout != null)     System.setProperty("connTimeout",connTimeout);
 else     System.clearProperty("connTimeout");
  }
}
