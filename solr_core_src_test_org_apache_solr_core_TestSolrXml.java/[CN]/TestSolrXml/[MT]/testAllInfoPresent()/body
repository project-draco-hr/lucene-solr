{
  File testSrcRoot=new File(SolrTestCaseJ4.TEST_HOME());
  FileUtils.copyFile(new File(testSrcRoot,"solr-50-all.xml"),new File(solrHome,"solr.xml"));
  ConfigSolr cfg=ConfigSolr.fromSolrHome(loader,solrHome.getAbsolutePath());
  assertEquals("core admin handler class","testAdminHandler",cfg.getCoreAdminHandlerClass());
  assertEquals("collection handler class","testCollectionsHandler",cfg.getCollectionsHandlerClass());
  assertEquals("info handler class","testInfoHandler",cfg.getInfoHandlerClass());
  assertEquals("core load threads",11,cfg.getCoreLoadThreadCount());
  assertEquals("core root dir","testCoreRootDirectory",cfg.getCoreRootDirectory());
  assertEquals("distrib conn timeout",22,cfg.getDistributedConnectionTimeout());
  assertEquals("distrib socket timeout",33,cfg.getDistributedSocketTimeout());
  assertEquals("max update conn",3,cfg.getMaxUpdateConnections());
  assertEquals("max update conn/host",37,cfg.getMaxUpdateConnectionsPerHost());
  assertEquals("host","testHost",cfg.getHost());
  assertEquals("zk host context","testHostContext",cfg.getZkHostContext());
  assertEquals("zk host port","44",cfg.getZkHostPort());
  assertEquals("leader vote wait",55,cfg.getLeaderVoteWait());
  assertEquals("logging class","testLoggingClass",cfg.getLogWatcherConfig().getLoggingClass());
  assertEquals("log watcher",true,cfg.getLogWatcherConfig().isEnabled());
  assertEquals("log watcher size",88,cfg.getLogWatcherConfig().getWatcherSize());
  assertEquals("log watcher thresh","99",cfg.getLogWatcherConfig().getWatcherThreshold());
  assertEquals("manage path","testManagementPath",cfg.getManagementPath());
  assertEquals("shardLib","testSharedLib",cfg.getSharedLibDirectory());
  assertEquals("schema cache",true,cfg.hasSchemaCache());
  assertEquals("trans cache size",66,cfg.getTransientCacheSize());
  assertEquals("zk client timeout",77,cfg.getZkClientTimeout());
  assertEquals("zk host","testZkHost",cfg.getZkHost());
  assertEquals("persistent",true,cfg.isPersistent());
  assertEquals("core admin path",ConfigSolr.DEFAULT_CORE_ADMIN_PATH,cfg.getAdminPath());
}
