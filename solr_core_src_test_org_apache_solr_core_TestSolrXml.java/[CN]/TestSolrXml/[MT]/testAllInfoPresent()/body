{
  File testSrcRoot=new File(SolrTestCaseJ4.TEST_HOME());
  FileUtils.copyFile(new File(testSrcRoot,"solr-50-all.xml"),new File(solrHome,"solr.xml"));
  NodeConfig cfg=SolrXmlConfig.fromSolrHome(loader,solrHome.getAbsolutePath());
  CloudConfig ccfg=cfg.getCloudConfig();
  UpdateShardHandlerConfig ucfg=cfg.getUpdateShardHandlerConfig();
  assertEquals("core admin handler class","testAdminHandler",cfg.getCoreAdminHandlerClass());
  assertEquals("collection handler class","testCollectionsHandler",cfg.getCollectionsHandlerClass());
  assertEquals("info handler class","testInfoHandler",cfg.getInfoHandlerClass());
  assertEquals("core load threads",11,cfg.getCoreLoadThreadCount());
  assertThat("core root dir",cfg.getCoreRootDirectory(),containsString("testCoreRootDirectory"));
  assertEquals("distrib conn timeout",22,cfg.getDistributedConnectionTimeout());
  assertEquals("distrib conn timeout",22,cfg.getUpdateShardHandlerConfig().getDistributedConnectionTimeout());
  assertEquals("distrib socket timeout",33,cfg.getDistributedSocketTimeout());
  assertEquals("distrib socket timeout",33,cfg.getUpdateShardHandlerConfig().getDistributedSocketTimeout());
  assertEquals("max update conn",3,cfg.getMaxUpdateConnections());
  assertEquals("max update conn",3,cfg.getUpdateShardHandlerConfig().getMaxUpdateConnections());
  assertEquals("max update conn/host",37,cfg.getMaxUpdateConnectionsPerHost());
  assertEquals("max update conn/host",37,cfg.getUpdateShardHandlerConfig().getMaxUpdateConnectionsPerHost());
  assertEquals("distrib conn timeout",22,ucfg.getDistributedConnectionTimeout());
  assertEquals("distrib socket timeout",33,ucfg.getDistributedSocketTimeout());
  assertEquals("max update conn",3,ucfg.getMaxUpdateConnections());
  assertEquals("max update conn/host",37,ucfg.getMaxUpdateConnectionsPerHost());
  assertEquals("host","testHost",ccfg.getHost());
  assertEquals("zk host context","testHostContext",ccfg.getSolrHostContext());
  assertEquals("solr host port",44,ccfg.getSolrHostPort());
  assertEquals("leader vote wait",55,ccfg.getLeaderVoteWait());
  assertEquals("logging class","testLoggingClass",cfg.getLogWatcherConfig().getLoggingClass());
  assertEquals("log watcher",true,cfg.getLogWatcherConfig().isEnabled());
  assertEquals("log watcher size",88,cfg.getLogWatcherConfig().getWatcherSize());
  assertEquals("log watcher thresh","99",cfg.getLogWatcherConfig().getWatcherThreshold());
  assertEquals("manage path","testManagementPath",cfg.getManagementPath());
  assertEquals("shardLib","testSharedLib",cfg.getSharedLibDirectory());
  assertEquals("schema cache",true,cfg.hasSchemaCache());
  assertEquals("trans cache size",66,cfg.getTransientCacheSize());
  assertEquals("zk client timeout",77,ccfg.getZkClientTimeout());
  assertEquals("zk host","testZkHost",ccfg.getZkHost());
  assertEquals("zk ACL provider","DefaultZkACLProvider",ccfg.getZkACLProviderClass());
  assertEquals("zk credentials provider","DefaultZkCredentialsProvider",ccfg.getZkCredentialsProviderClass());
}
