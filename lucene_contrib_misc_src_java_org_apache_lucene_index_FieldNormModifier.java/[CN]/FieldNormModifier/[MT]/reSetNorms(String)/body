{
  String fieldName=StringHelper.intern(field);
  IndexReader reader=null;
  try {
    reader=IndexReader.open(dir,false);
    final List<IndexReader> subReaders=new ArrayList<IndexReader>();
    ReaderUtil.gatherSubReaders(subReaders,reader);
    for (    IndexReader subReader : subReaders) {
      final Bits delDocs=subReader.getDeletedDocs();
      int[] termCounts=new int[subReader.maxDoc()];
      Fields fields=subReader.fields();
      if (fields != null) {
        Terms terms=fields.terms(field);
        if (terms != null) {
          TermsEnum termsEnum=terms.iterator();
          DocsEnum docs=null;
          while (termsEnum.next() != null) {
            docs=termsEnum.docs(delDocs,docs);
            while (true) {
              int docID=docs.nextDoc();
              if (docID != docs.NO_MORE_DOCS) {
                termCounts[docID]+=docs.freq();
              }
 else {
                break;
              }
            }
          }
        }
      }
      for (int d=0; d < termCounts.length; d++) {
        if (delDocs == null || !delDocs.get(d)) {
          subReader.setNorm(d,fieldName,sim.encodeNormValue(sim.lengthNorm(fieldName,termCounts[d])));
        }
      }
    }
  }
  finally {
    if (null != reader)     reader.close();
  }
}
