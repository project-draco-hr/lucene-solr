{
  try {
    int _type=HEX;
    int _channel=DEFAULT_TOKEN_CHANNEL;
{
      int alt10=2;
      int LA10_0=input.LA(1);
      if ((LA10_0 == '0')) {
        int LA10_1=input.LA(2);
        if ((LA10_1 == 'x')) {
          alt10=1;
        }
 else         if ((LA10_1 == 'X')) {
          alt10=2;
        }
 else {
          int nvaeMark=input.mark();
          try {
            input.consume();
            NoViableAltException nvae=new NoViableAltException("",10,1,input);
            throw nvae;
          }
  finally {
            input.rewind(nvaeMark);
          }
        }
      }
 else {
        NoViableAltException nvae=new NoViableAltException("",10,0,input);
        throw nvae;
      }
switch (alt10) {
case 1:
{
          match("0x");
        }
      break;
case 2:
{
      match("0X");
    }
  break;
}
int cnt11=0;
loop11: while (true) {
int alt11=2;
int LA11_0=input.LA(1);
if (((LA11_0 >= '0' && LA11_0 <= '9') || (LA11_0 >= 'A' && LA11_0 <= 'F') || (LA11_0 >= 'a' && LA11_0 <= 'f'))) {
  alt11=1;
}
switch (alt11) {
case 1:
{
    if ((input.LA(1) >= '0' && input.LA(1) <= '9') || (input.LA(1) >= 'A' && input.LA(1) <= 'F') || (input.LA(1) >= 'a' && input.LA(1) <= 'f')) {
      input.consume();
    }
 else {
      MismatchedSetException mse=new MismatchedSetException(null,input);
      recover(mse);
      throw mse;
    }
  }
break;
default :
if (cnt11 >= 1) break loop11;
EarlyExitException eee=new EarlyExitException(11,input);
throw eee;
}
cnt11++;
}
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
