{
  try {
    int _type=HEX;
    int _channel=DEFAULT_TOKEN_CHANNEL;
{
      int alt11=2;
      int LA11_0=input.LA(1);
      if ((LA11_0 == '0')) {
        int LA11_1=input.LA(2);
        if ((LA11_1 == 'x')) {
          alt11=1;
        }
 else         if ((LA11_1 == 'X')) {
          alt11=2;
        }
 else {
          int nvaeMark=input.mark();
          try {
            input.consume();
            NoViableAltException nvae=new NoViableAltException("",11,1,input);
            throw nvae;
          }
  finally {
            input.rewind(nvaeMark);
          }
        }
      }
 else {
        NoViableAltException nvae=new NoViableAltException("",11,0,input);
        throw nvae;
      }
switch (alt11) {
case 1:
{
          match("0x");
        }
      break;
case 2:
{
      match("0X");
    }
  break;
}
int cnt12=0;
loop12: while (true) {
int alt12=2;
int LA12_0=input.LA(1);
if (((LA12_0 >= '0' && LA12_0 <= '9') || (LA12_0 >= 'A' && LA12_0 <= 'F') || (LA12_0 >= 'a' && LA12_0 <= 'f'))) {
  alt12=1;
}
switch (alt12) {
case 1:
{
    if ((input.LA(1) >= '0' && input.LA(1) <= '9') || (input.LA(1) >= 'A' && input.LA(1) <= 'F') || (input.LA(1) >= 'a' && input.LA(1) <= 'f')) {
      input.consume();
    }
 else {
      MismatchedSetException mse=new MismatchedSetException(null,input);
      recover(mse);
      throw mse;
    }
  }
break;
default :
if (cnt12 >= 1) break loop12;
EarlyExitException eee=new EarlyExitException(12,input);
throw eee;
}
cnt12++;
}
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
