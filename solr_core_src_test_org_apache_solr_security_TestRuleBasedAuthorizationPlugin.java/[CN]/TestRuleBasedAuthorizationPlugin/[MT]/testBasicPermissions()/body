{
  int STATUS_OK=200;
  int FORBIDDEN=403;
  int PROMPT_FOR_CREDENTIALS=401;
  checkRules(makeMap("resource","/update/json/docs","httpMethod","POST","userPrincipal","unknownuser","collectionRequests","freeforall","handler",new UpdateRequestHandler()),STATUS_OK);
  checkRules(makeMap("resource","/update/json/docs","httpMethod","POST","userPrincipal","tim","collectionRequests","mycoll","handler",new UpdateRequestHandler()),STATUS_OK);
  checkRules(makeMap("resource","/update/json/docs","httpMethod","POST","collectionRequests","mycoll","handler",new UpdateRequestHandler()),PROMPT_FOR_CREDENTIALS);
  checkRules(makeMap("resource","/schema","userPrincipal","somebody","collectionRequests","mycoll","httpMethod","POST","handler",new SchemaHandler()),FORBIDDEN);
  checkRules(makeMap("resource","/schema","userPrincipal","somebody","collectionRequests","mycoll","httpMethod","GET","handler",new SchemaHandler()),STATUS_OK);
  checkRules(makeMap("resource","/schema/fields","userPrincipal","somebody","collectionRequests","mycoll","httpMethod","GET","handler",new SchemaHandler()),STATUS_OK);
  checkRules(makeMap("resource","/schema","userPrincipal","somebody","collectionRequests","mycoll","httpMethod","POST","handler",new SchemaHandler()),FORBIDDEN);
  checkRules(makeMap("resource","/admin/collections","userPrincipal","tim","requestType",RequestType.ADMIN,"collectionRequests",null,"httpMethod","GET","handler",new CollectionsHandler(),"params",new MapSolrParams(singletonMap("action","LIST"))),STATUS_OK);
  checkRules(makeMap("resource","/admin/collections","userPrincipal",null,"requestType",RequestType.ADMIN,"collectionRequests",null,"httpMethod","GET","handler",new CollectionsHandler(),"params",new MapSolrParams(singletonMap("action","LIST"))),STATUS_OK);
  checkRules(makeMap("resource","/admin/collections","userPrincipal",null,"requestType",RequestType.ADMIN,"collectionRequests",null,"handler",new CollectionsHandler(),"params",new MapSolrParams(singletonMap("action","CREATE"))),PROMPT_FOR_CREDENTIALS);
  checkRules(makeMap("resource","/admin/collections","userPrincipal",null,"requestType",RequestType.ADMIN,"collectionRequests",null,"handler",new CollectionsHandler(),"params",new MapSolrParams(singletonMap("action","RELOAD"))),PROMPT_FOR_CREDENTIALS);
  checkRules(makeMap("resource","/admin/collections","userPrincipal","somebody","requestType",RequestType.ADMIN,"collectionRequests",null,"handler",new CollectionsHandler(),"params",new MapSolrParams(singletonMap("action","CREATE"))),FORBIDDEN);
  checkRules(makeMap("resource","/admin/collections","userPrincipal","tim","requestType",RequestType.ADMIN,"collectionRequests",null,"handler",new CollectionsHandler(),"params",new MapSolrParams(singletonMap("action","CREATE"))),STATUS_OK);
  checkRules(makeMap("resource","/select","httpMethod","GET","handler",new SearchHandler(),"collectionRequests",singletonList(new CollectionRequest("mycoll")),"userPrincipal","joe"),FORBIDDEN);
  Map rules=(Map)Utils.fromJSONString(permissions);
  ((Map)rules.get("user-role")).put("cio","su");
  ((List)rules.get("permissions")).add(makeMap("name","all","role","su"));
  checkRules(makeMap("resource",ReplicationHandler.PATH,"httpMethod","POST","userPrincipal","tim","handler",new ReplicationHandler(),"collectionRequests",singletonList(new CollectionRequest("mycoll"))),FORBIDDEN,rules);
  checkRules(makeMap("resource",ReplicationHandler.PATH,"httpMethod","POST","userPrincipal","cio","handler",new ReplicationHandler(),"collectionRequests",singletonList(new CollectionRequest("mycoll"))),STATUS_OK,rules);
  checkRules(makeMap("resource","/admin/collections","userPrincipal","tim","requestType",AuthorizationContext.RequestType.ADMIN,"collectionRequests",null,"handler",new CollectionsHandler(),"params",new MapSolrParams(singletonMap("action","CREATE"))),STATUS_OK,rules);
  rules=(Map)Utils.fromJSONString(permissions);
  ((List)rules.get("permissions")).add(makeMap("name","core-admin-edit","role","su"));
  ((List)rules.get("permissions")).add(makeMap("name","core-admin-read","role","user"));
  ((Map)rules.get("user-role")).put("cio","su");
  ((List)rules.get("permissions")).add(makeMap("name","all","role","su"));
  permissions=Utils.toJSONString(rules);
  checkRules(makeMap("resource","/admin/cores","userPrincipal",null,"requestType",RequestType.ADMIN,"collectionRequests",null,"handler",new CoreAdminHandler(null),"params",new MapSolrParams(singletonMap("action","CREATE"))),PROMPT_FOR_CREDENTIALS);
  checkRules(makeMap("resource","/admin/cores","userPrincipal","joe","requestType",RequestType.ADMIN,"collectionRequests",null,"handler",new CoreAdminHandler(null),"params",new MapSolrParams(singletonMap("action","CREATE"))),FORBIDDEN);
  checkRules(makeMap("resource","/admin/cores","userPrincipal","joe","requestType",RequestType.ADMIN,"collectionRequests",null,"handler",new CoreAdminHandler(null),"params",new MapSolrParams(singletonMap("action","STATUS"))),STATUS_OK);
  checkRules(makeMap("resource","/admin/cores","userPrincipal","cio","requestType",RequestType.ADMIN,"collectionRequests",null,"handler",new CoreAdminHandler(null),"params",new MapSolrParams(singletonMap("action","CREATE"))),STATUS_OK);
}
