{
  String parentId;
  Object parentIdField=doc.get(idField);
  if (parentIdField instanceof StoredField) {
    parentId=((StoredField)parentIdField).stringValue();
  }
 else   if (parentIdField instanceof Field) {
    parentId=((Field)parentIdField).stringValue();
    if (parentId == null) {
      parentId=((Field)parentIdField).binaryValue().utf8ToString();
    }
  }
 else {
    parentId=(String)parentIdField;
  }
  try {
    Query parentQuery=new TermQuery(new Term(idField,schema.getFieldType(idField).readableToIndexed(parentId)));
    Query query=new ToChildBlockJoinQuery(parentQuery,parentsFilter,false);
    DocList children=context.searcher.getDocList(query,childFilterQuery,new Sort(),0,limit);
    if (children.matches() > 0) {
      DocIterator i=children.iterator();
      while (i.hasNext()) {
        Integer childDocNum=i.next();
        StoredDocument childDoc=context.searcher.doc(childDocNum);
        SolrDocument solrChildDoc=ResponseWriterUtil.toSolrDocument(childDoc,schema);
        doc.addChildDocument(solrChildDoc);
      }
    }
  }
 catch (  IOException e) {
    doc.put(name,"Could not fetch child Documents");
  }
}
