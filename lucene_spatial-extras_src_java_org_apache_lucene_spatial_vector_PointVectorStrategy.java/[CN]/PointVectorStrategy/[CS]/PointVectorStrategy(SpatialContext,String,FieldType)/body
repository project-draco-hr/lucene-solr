{
  super(ctx,fieldNamePrefix);
  this.fieldNameX=fieldNamePrefix + SUFFIX_X;
  this.fieldNameY=fieldNamePrefix + SUFFIX_Y;
  int numPairs=0;
  if ((this.hasStored=fieldType.stored())) {
    numPairs++;
  }
  if ((this.hasDocVals=fieldType.docValuesType() != DocValuesType.NONE)) {
    numPairs++;
  }
  if ((this.hasPointVals=fieldType.pointDimensionCount() > 0)) {
    numPairs++;
  }
  if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {
    if (hasPointVals) {
      throw new IllegalArgumentException("pointValues and LegacyNumericType are mutually exclusive");
    }
    final LegacyFieldType legacyType=(LegacyFieldType)fieldType;
    if (legacyType.numericType() != LegacyNumericType.DOUBLE) {
      throw new IllegalArgumentException(getClass() + " does not support " + legacyType.numericType());
    }
    numPairs++;
    legacyNumericFieldType=new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);
    legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());
    legacyNumericFieldType.freeze();
  }
 else {
    legacyNumericFieldType=null;
  }
  this.fieldsLen=numPairs * 2;
}
