{
  Thread[] threadArray=new Thread[N_THREADS];
  final BitSet success=new BitSet(N_THREADS);
  for (int i=0; i < threadArray.length; ++i) {
    final int num=i;
    threadArray[num]=new Thread(){
      public void run(){
        if (withTimeout) {
          doTestTimeout(true);
        }
 else {
          doTestSearch();
        }
        success.set(num);
      }
    }
;
  }
  for (int i=0; i < threadArray.length; ++i) {
    threadArray[i].start();
  }
  boolean interrupted=false;
  for (int i=0; i < threadArray.length; ++i) {
    try {
      threadArray[i].join();
    }
 catch (    InterruptedException e) {
      interrupted=true;
    }
  }
  if (interrupted) {
    Thread.currentThread().interrupt();
  }
  assertEquals(N_THREADS,success.cardinality());
}
