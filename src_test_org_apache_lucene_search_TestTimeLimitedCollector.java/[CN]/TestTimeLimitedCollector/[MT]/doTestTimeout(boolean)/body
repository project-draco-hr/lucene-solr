{
  MyHitCollector myHc=new MyHitCollector();
  myHc.setSlowDown(SLOW_DOWN);
  long timeAllowed=timeAllowed(multiThreaded);
  HitCollector tlCollector=new TimeLimitedCollector(myHc,timeAllowed);
  TimeLimitedCollector.TimeExceededException exception=null;
  try {
    search(tlCollector);
  }
 catch (  TimeLimitedCollector.TimeExceededException x) {
    exception=x;
  }
catch (  Exception e) {
    assertTrue("Unexpected exception: " + e,false);
  }
  assertNotNull("Timeout expected!",exception);
  assertTrue("no hits found!",myHc.hitCount() > 0);
  assertTrue("last doc collected cannot be 0!",exception.getLastDocCollected() > 0);
  assertEquals(exception.getTimeAllowed(),timeAllowed);
  assertTrue("elapsed=" + exception.getTimeElapsed() + " <= (allowed-resolution)="+ (timeAllowed - TimeLimitedCollector.getResolution()),exception.getTimeElapsed() > timeAllowed - TimeLimitedCollector.getResolution());
  assertTrue("lastDoc=" + exception.getLastDocCollected() + " ,&& elapsed="+ exception.getTimeElapsed()+ " >= (allowed+resolution+slowdown)="+ (timeAllowed + TimeLimitedCollector.getResolution() + SLOW_DOWN),exception.getTimeElapsed() < timeAllowed + TimeLimitedCollector.getResolution() + SLOW_DOWN);
}
