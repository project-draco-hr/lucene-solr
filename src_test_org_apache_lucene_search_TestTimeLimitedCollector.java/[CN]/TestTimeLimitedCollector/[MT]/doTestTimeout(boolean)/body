{
  MyHitCollector myHc=new MyHitCollector();
  myHc.setSlowDown(SLOW_DOWN);
  HitCollector tlCollector=new TimeLimitedCollector(myHc,TIME_ALLOWED);
  TimeLimitedCollector.TimeExceededException exception=null;
  try {
    search(tlCollector);
  }
 catch (  TimeLimitedCollector.TimeExceededException x) {
    exception=x;
  }
catch (  Exception e) {
    assertTrue("Unexpected exception: " + e,false);
  }
  assertNotNull("Timeout expected!",exception);
  assertTrue("no hits found!",myHc.hitCount() > 0);
  assertTrue("last doc collected cannot be 0!",exception.getLastDocCollected() > 0);
  assertEquals(exception.getTimeAllowed(),TIME_ALLOWED);
  assertTrue("elapsed=" + exception.getTimeElapsed() + " <= (allowed-resolution)="+ (TIME_ALLOWED - TimeLimitedCollector.getResolution()),exception.getTimeElapsed() > TIME_ALLOWED - TimeLimitedCollector.getResolution());
  assertTrue("lastDoc=" + exception.getLastDocCollected() + " ,&& allowed="+ exception.getTimeAllowed()+ " ,&& elapsed="+ exception.getTimeElapsed()+ " >= "+ maxTimeStr(multiThreaded),exception.getTimeElapsed() < maxTime(multiThreaded));
}
