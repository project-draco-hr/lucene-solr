{
  PositionBasedTermVectorMapper mapper=new PositionBasedTermVectorMapper();
  mapper.setExpectations("test",tokens.length,true,true);
  for (int i=0; i < tokens.length; i++) {
    String token=tokens[i];
    mapper.map(new BytesRef(token),1,null,thePositions[i]);
  }
  Map<String,Map<Integer,PositionBasedTermVectorMapper.TVPositionInfo>> map=mapper.getFieldToTerms();
  assertTrue("map is null and it shouldn't be",map != null);
  assertTrue("map Size: " + map.size() + " is not: "+ 1,map.size() == 1);
  Map<Integer,PositionBasedTermVectorMapper.TVPositionInfo> positions=map.get("test");
  assertTrue("thePositions is null and it shouldn't be",positions != null);
  assertTrue("thePositions Size: " + positions.size() + " is not: "+ numPositions,positions.size() == numPositions);
  BitSet bits=new BitSet(numPositions);
  for (  Map.Entry<Integer,PositionBasedTermVectorMapper.TVPositionInfo> entry : positions.entrySet()) {
    PositionBasedTermVectorMapper.TVPositionInfo info=entry.getValue();
    assertTrue("info is null and it shouldn't be",info != null);
    int pos=entry.getKey().intValue();
    bits.set(pos);
    assertTrue(info.getPosition() + " does not equal: " + pos,info.getPosition() == pos);
    assertTrue("info.getOffsets() is null and it shouldn't be",info.getOffsets() != null);
    if (pos == 0) {
      assertTrue("info.getTerms() Size: " + info.getTerms().size() + " is not: "+ 2,info.getTerms().size() == 2);
      assertTrue("info.getOffsets() Size: " + info.getOffsets().size() + " is not: "+ 2,info.getOffsets().size() == 2);
    }
 else {
      assertTrue("info.getTerms() Size: " + info.getTerms().size() + " is not: "+ 1,info.getTerms().size() == 1);
      assertTrue("info.getOffsets() Size: " + info.getOffsets().size() + " is not: "+ 1,info.getOffsets().size() == 1);
    }
  }
  assertTrue("Bits are not all on",bits.cardinality() == numPositions);
}
