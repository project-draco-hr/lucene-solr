{
  VelocityContext context=new VelocityContext();
  context.put("log",log);
  context.put("esc",new EscapeTool());
  context.put("date",new ComparisonDateTool());
  context.put("list",new ListTool());
  context.put("math",new MathTool());
  context.put("number",new NumberTool());
  context.put("sort",new SortTool());
  context.put("display",new DisplayTool());
  context.put("resource",new SolrVelocityResourceTool(request.getCore().getSolrConfig().getResourceLoader().getClassLoader(),request.getParams().get(LOCALE)));
  for (  String name : customTools.keySet()) {
    context.put(name,SolrCore.createInstance(customTools.get(name),Object.class,"VrW custom tool",request.getCore(),request.getCore().getResourceLoader()));
  }
  SolrResponse rsp=new QueryResponse();
  NamedList<Object> parsedResponse=BinaryResponseWriter.getParsedResponse(request,response);
  try {
    rsp.setResponse(parsedResponse);
    context.put("page",new PageTool(request,response));
    context.put("debug",((QueryResponse)rsp).getDebugMap());
  }
 catch (  ClassCastException e) {
    rsp=new SolrResponseBase();
    rsp.setResponse(parsedResponse);
  }
  context.put("request",request);
  context.put("response",rsp);
  return context;
}
