{
  final DocsAndFreqs[] docsAndFreqs=new DocsAndFreqs[weights.size()];
  for (int i=0; i < docsAndFreqs.length; i++) {
    final TermWeight weight=(TermWeight)weights.get(i);
    final Scorer scorer=weight.scorer(context,true,false,acceptDocs);
    if (scorer == null) {
      return null;
    }
    if (scorer instanceof TermScorer) {
      docsAndFreqs[i]=new DocsAndFreqs((TermScorer)scorer);
    }
 else {
      docsAndFreqs[i]=new DocsAndFreqs((MatchOnlyTermScorer)scorer);
    }
  }
  return new ConjunctionTermScorer(this,disableCoord ? 1.0f : coord(docsAndFreqs.length,docsAndFreqs.length),docsAndFreqs);
}
