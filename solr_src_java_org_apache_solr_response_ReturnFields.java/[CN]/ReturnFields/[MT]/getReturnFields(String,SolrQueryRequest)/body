{
  ReturnFields rf=new ReturnFields();
  rf.wantsScore=false;
  rf.fields=new LinkedHashSet<String>();
  boolean allFields=false;
  DocTransformers augmenters=new DocTransformers();
  if (fl != null) {
    String[] flst=SolrPluginUtils.split(fl);
    if (flst.length > 0 && !(flst.length == 1 && flst[0].length() == 0)) {
      IndexSchema schema=req.getSchema();
      for (      String name : flst) {
        if ("*".equals(name)) {
          allFields=true;
        }
 else         if (SCORE.equals(name)) {
          rf.fields.add(name);
          rf.wantsScore=true;
          augmenters.addTransformer(new ScoreAugmenter(SCORE));
        }
 else {
          rf.fields.add(name);
          SchemaField sf=schema.getFieldOrNull(name);
          if (sf == null) {
            if (DOCID.equals(name)) {
              augmenters.addTransformer(new DocIdAugmenter(DOCID));
            }
 else             if (SHARD.equals(name)) {
              String id="getshardid???";
              augmenters.addTransformer(new ValueAugmenter(SHARD,id));
            }
 else             if (EXPLAIN.equals(name)) {
              augmenters.addTransformer(new ExplainAugmenter(EXPLAIN));
            }
 else             if (name.startsWith("{!func}")) {
              augmenters.addTransformer(new ValueAugmenter(name,"TODO:" + name));
            }
 else {
            }
          }
        }
      }
    }
  }
  if (rf.fields.size() == 1 && rf.wantsScore) {
    allFields=true;
  }
  if (allFields || rf.fields.isEmpty()) {
    rf.fields=null;
  }
  if (augmenters.size() == 1) {
    rf.transformer=augmenters.getTransformer(0);
  }
 else   if (augmenters.size() > 1) {
    rf.transformer=augmenters;
  }
  return rf;
}
