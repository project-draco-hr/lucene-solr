{
  final boolean singleCoreMode=random().nextBoolean();
  if (singleCoreMode) {
    FL_VALIDATORS.addAll(Arrays.asList(new FunctionValidator("aaa_i"),new FunctionValidator("aaa_i","func_aaa_alias"),new RenameFieldValueValidator("id","my_id_alias"),new RenameFieldValueValidator("bbb_i","my_int_field_alias"),new RenameFieldValueValidator("ddd_s","my_str_field_alias")));
    FL_VALIDATORS.add(new DocIdValidator());
    FL_VALIDATORS.add(new DocIdValidator("my_docid_alias"));
  }
 else {
  }
  final int repFactor=singleCoreMode ? 1 : (usually() ? 1 : 2);
  final int numShards=singleCoreMode ? 1 : 2;
  final int numNodes=1 + (singleCoreMode ? 0 : (numShards * repFactor));
  final String configName=DEBUG_LABEL + "_config-set";
  final Path configDir=Paths.get(TEST_HOME(),"collection1","conf");
  configureCluster(numNodes).addConfig(configName,configDir).configure();
  Map<String,String> collectionProperties=new HashMap<>();
  collectionProperties.put("config","solrconfig-tlog.xml");
  collectionProperties.put("schema","schema-psuedo-fields.xml");
  assertNotNull(cluster.createCollection(COLLECTION_NAME,numShards,repFactor,configName,null,null,collectionProperties));
  CLOUD_CLIENT=cluster.getSolrClient();
  CLOUD_CLIENT.setDefaultCollection(COLLECTION_NAME);
  waitForRecoveriesToFinish(CLOUD_CLIENT);
  for (  JettySolrRunner jetty : cluster.getJettySolrRunners()) {
    CLIENTS.add(getHttpSolrClient(jetty.getBaseUrl() + "/" + COLLECTION_NAME+ "/"));
  }
}
