{
  Integer minValue=stringValueToIntValue(min);
  Integer maxValue=stringValueToIntValue(max);
  if (field.multiValued() && field.hasDocValues() && !field.indexed()) {
    return super.getRangeQuery(parser,field,minValue.toString(),maxValue.toString(),minInclusive,maxInclusive);
  }
  Query query=null;
  final boolean matchOnly=field.hasDocValues() && !field.indexed();
  if (matchOnly) {
    query=new ConstantScoreQuery(DocValuesRangeQuery.newLongRange(field.getName(),min == null ? null : minValue.longValue(),max == null ? null : maxValue.longValue(),minInclusive,maxInclusive));
  }
 else {
    query=NumericRangeQuery.newIntRange(field.getName(),DEFAULT_PRECISION_STEP,min == null ? null : minValue,max == null ? null : maxValue,minInclusive,maxInclusive);
  }
  return query;
}
