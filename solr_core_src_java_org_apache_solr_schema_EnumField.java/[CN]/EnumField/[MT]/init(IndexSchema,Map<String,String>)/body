{
  super.init(schema,args);
  enumsConfigFile=args.get(PARAM_ENUMS_CONFIG);
  if (enumsConfigFile == null) {
    throw new SolrException(SolrException.ErrorCode.NOT_FOUND,"No enums config file was configured.");
  }
  enumName=args.get(PARAM_ENUM_NAME);
  if (enumName == null) {
    throw new SolrException(SolrException.ErrorCode.NOT_FOUND,"No enum name was configured.");
  }
  InputStream is=null;
  try {
    is=schema.getResourceLoader().openResource(enumsConfigFile);
    final DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
    try {
      final Document doc=dbf.newDocumentBuilder().parse(is);
      final XPathFactory xpathFactory=XPathFactory.newInstance();
      final XPath xpath=xpathFactory.newXPath();
      final String xpathStr=String.format(LOCALE,"/enumsConfig/enum[@name='%s']",enumName);
      final NodeList nodes=(NodeList)xpath.evaluate(xpathStr,doc,XPathConstants.NODESET);
      final int nodesLength=nodes.getLength();
      if (nodesLength == 0) {
        String exceptionMessage=String.format(LOCALE,"No enum configuration found for enum '%s' in %s.",enumName,enumsConfigFile);
        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,exceptionMessage);
      }
      if (nodesLength > 1) {
        if (log.isWarnEnabled())         log.warn("More than one enum configuration found for enum '{}' in {}. The last one was taken.",enumName,enumsConfigFile);
      }
      final Node enumNode=nodes.item(nodesLength - 1);
      final NodeList valueNodes=(NodeList)xpath.evaluate("value",enumNode,XPathConstants.NODESET);
      for (int i=0; i < valueNodes.getLength(); i++) {
        final Node valueNode=valueNodes.item(i);
        final String valueStr=valueNode.getTextContent();
        if ((valueStr == null) || (valueStr.length() == 0)) {
          final String exceptionMessage=String.format(LOCALE,"A value was defined with an no value in enum '%s' in %s.",enumName,enumsConfigFile);
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,exceptionMessage);
        }
        if (enumStringToIntMap.containsKey(valueStr)) {
          final String exceptionMessage=String.format(LOCALE,"A duplicated definition was found for value '%s' in enum '%s' in %s.",valueStr,enumName,enumsConfigFile);
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,exceptionMessage);
        }
        enumIntToStringMap.put(i,valueStr);
        enumStringToIntMap.put(valueStr,i);
      }
    }
 catch (    ParserConfigurationException|XPathExpressionException|SAXException e) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Error parsing enums config.",e);
    }
  }
 catch (  IOException e) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Error while opening enums config.",e);
  }
 finally {
    try {
      if (is != null) {
        is.close();
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
  }
  if ((enumStringToIntMap.size() == 0) || (enumIntToStringMap.size() == 0)) {
    String exceptionMessage=String.format(LOCALE,"Invalid configuration was defined for enum '%s' in %s.",enumName,enumsConfigFile);
    throw new SolrException(SolrException.ErrorCode.NOT_FOUND,exceptionMessage);
  }
  args.remove(PARAM_ENUMS_CONFIG);
  args.remove(PARAM_ENUM_NAME);
}
