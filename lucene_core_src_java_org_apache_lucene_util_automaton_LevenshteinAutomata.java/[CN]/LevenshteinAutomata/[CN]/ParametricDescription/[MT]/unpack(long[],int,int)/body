{
  final long bitLoc=bitsPerValue * index;
  final int dataLoc=(int)(bitLoc >> 6);
  final int bitStart=(int)(bitLoc & 63);
  if (bitStart + bitsPerValue <= 64) {
    return (int)((data[dataLoc] >> bitStart) & MASKS[bitsPerValue - 1]);
  }
 else {
    final int part=64 - bitStart;
    return (int)(((data[dataLoc] >> bitStart) & MASKS[part - 1]) + ((data[1 + dataLoc] & MASKS[bitsPerValue - part - 1]) << part));
  }
}
