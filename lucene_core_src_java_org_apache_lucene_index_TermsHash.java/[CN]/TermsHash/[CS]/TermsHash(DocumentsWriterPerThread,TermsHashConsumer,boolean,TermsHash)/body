{
  this.docState=docWriter.docState;
  this.consumer=consumer;
  this.trackAllocations=trackAllocations;
  this.nextTermsHash=nextTermsHash;
  this.bytesUsed=trackAllocations ? docWriter.bytesUsed : Counter.newCounter();
  intPool=new IntBlockPool(docWriter.intBlockAllocator);
  bytePool=new ByteBlockPool(docWriter.byteBlockAllocator);
  if (nextTermsHash != null) {
    primary=true;
    termBytePool=bytePool;
    nextTermsHash.termBytePool=bytePool;
  }
 else {
    primary=false;
  }
}
