{
  final TermDocs termDocs;
synchronized (reader) {
    termDocs=(mayUseTermDocs && reader.hasDeletions()) ? reader.termDocs(null) : null;
  }
  if (termDocs != null) {
    return new DocIdSetIterator(){
      private int doc=-1;
      /** 
 * @deprecated use {@link #nextDoc()} instead. 
 */
      public boolean next() throws IOException {
        return nextDoc() != NO_MORE_DOCS;
      }
      /** 
 * @deprecated use {@link #advance(int)} instead. 
 */
      public boolean skipTo(      int target) throws IOException {
        return advance(target) != NO_MORE_DOCS;
      }
      /** 
 * @deprecated use {@link #docID()} instead. 
 */
      public int doc(){
        return termDocs.doc();
      }
      public int docID(){
        return doc;
      }
      public int nextDoc() throws IOException {
        do {
          if (!termDocs.next())           return doc=NO_MORE_DOCS;
        }
 while (!matchDoc(doc=termDocs.doc()));
        return doc;
      }
      public int advance(      int target) throws IOException {
        if (!termDocs.skipTo(target))         return doc=NO_MORE_DOCS;
        while (!matchDoc(doc=termDocs.doc())) {
          if (!termDocs.next())           return doc=NO_MORE_DOCS;
        }
        return doc;
      }
    }
;
  }
 else {
    return new DocIdSetIterator(){
      private int doc=-1;
      /** 
 * @deprecated use {@link #nextDoc()} instead. 
 */
      public boolean next() throws IOException {
        return nextDoc() != NO_MORE_DOCS;
      }
      /** 
 * @deprecated use {@link #advance(int)} instead. 
 */
      public boolean skipTo(      int target) throws IOException {
        return advance(target) != NO_MORE_DOCS;
      }
      /** 
 * @deprecated use {@link #docID()} instead. 
 */
      public int doc(){
        return doc;
      }
      public int docID(){
        return doc;
      }
      public int nextDoc(){
        try {
          do {
            doc++;
          }
 while (!matchDoc(doc));
          return doc;
        }
 catch (        ArrayIndexOutOfBoundsException e) {
          return doc=NO_MORE_DOCS;
        }
      }
      public int advance(      int target){
        try {
          doc=target;
          while (!matchDoc(doc)) {
            doc++;
          }
          return doc;
        }
 catch (        ArrayIndexOutOfBoundsException e) {
          return doc=NO_MORE_DOCS;
        }
      }
    }
;
  }
}
