{
  SolrParams localParams=QueryParsing.getLocalParams(param,req.getParams());
  DocSet docs=docsOrig;
  String facetValue=param;
  String key=param;
  List<String> tags=Collections.emptyList();
  int threads=-1;
  if (localParams == null) {
    SolrParams params=global;
    SolrParams required=new RequiredSolrParams(params);
    return new ParsedParams(localParams,params,required,facetValue,docs,key,tags,threads);
  }
  SolrParams params=SolrParams.wrapDefaults(localParams,global);
  SolrParams required=new RequiredSolrParams(params);
  if (type != FacetParams.FACET_QUERY) {
    facetValue=localParams.get(CommonParams.VALUE);
  }
  key=facetValue;
  key=localParams.get(CommonParams.OUTPUT_KEY,key);
  String tagStr=localParams.get(CommonParams.TAG);
  tags=tagStr == null ? Collections.<String>emptyList() : StrUtils.splitSmart(tagStr,',');
  String threadStr=localParams.get(CommonParams.THREADS);
  if (threadStr != null) {
    threads=Integer.parseInt(threadStr);
  }
  String excludeStr=localParams.get(CommonParams.EXCLUDE);
  if (excludeStr == null)   return new ParsedParams(localParams,params,required,facetValue,docs,key,tags,threads);
  List<String> excludeTagList=StrUtils.splitSmart(excludeStr,',');
  docs=computeDocSet(docs,excludeTagList);
  return new ParsedParams(localParams,params,required,facetValue,docs,key,tags,threads);
}
