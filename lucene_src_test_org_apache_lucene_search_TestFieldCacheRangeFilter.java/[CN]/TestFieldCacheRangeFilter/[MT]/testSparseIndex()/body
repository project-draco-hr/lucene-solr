{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)));
  for (int d=-20; d <= 20; d++) {
    Document doc=new Document();
    doc.add(newField("id",Integer.toString(d),StringField.TYPE_UNSTORED));
    doc.add(newField("body","body",StringField.TYPE_UNSTORED));
    writer.addDocument(doc);
  }
  writer.optimize();
  writer.deleteDocuments(new Term("id","0"));
  writer.close();
  IndexReader reader=IndexReader.open(dir,true);
  IndexSearcher search=newSearcher(reader);
  assertTrue(reader.hasDeletions());
  ScoreDoc[] result;
  Query q=new TermQuery(new Term("body","body"));
  result=search.search(q,FieldCacheRangeFilter.newByteRange("id",Byte.valueOf((byte)-20),Byte.valueOf((byte)20),T,T),100).scoreDocs;
  assertEquals("find all",40,result.length);
  result=search.search(q,FieldCacheRangeFilter.newByteRange("id",Byte.valueOf((byte)0),Byte.valueOf((byte)20),T,T),100).scoreDocs;
  assertEquals("find all",20,result.length);
  result=search.search(q,FieldCacheRangeFilter.newByteRange("id",Byte.valueOf((byte)-20),Byte.valueOf((byte)0),T,T),100).scoreDocs;
  assertEquals("find all",20,result.length);
  result=search.search(q,FieldCacheRangeFilter.newByteRange("id",Byte.valueOf((byte)10),Byte.valueOf((byte)20),T,T),100).scoreDocs;
  assertEquals("find all",11,result.length);
  result=search.search(q,FieldCacheRangeFilter.newByteRange("id",Byte.valueOf((byte)-20),Byte.valueOf((byte)-10),T,T),100).scoreDocs;
  assertEquals("find all",11,result.length);
  search.close();
  reader.close();
  dir.close();
}
