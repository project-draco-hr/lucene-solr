{
  List fields=new ArrayList();
  fields.add(AbstractDataImportHandlerTest.createMap("column","id"));
  fields.add(AbstractDataImportHandlerTest.createMap("column","desc"));
  String q="select * from x";
  Map<String,String> entityAttrs=AbstractDataImportHandlerTest.createMap("query",q,"where","id=x.id");
  MockDataSource ds=new MockDataSource();
  VariableResolverImpl vr=new VariableResolverImpl();
  Map xNamespace=AbstractDataImportHandlerTest.createMap("id",0);
  vr.addNamespace("x",xNamespace);
  Context context=AbstractDataImportHandlerTest.getContext(null,vr,ds,0,fields,entityAttrs);
  List<Map<String,Object>> rows=new ArrayList<Map<String,Object>>();
  rows.add(AbstractDataImportHandlerTest.createMap("id",1,"desc","one"));
  rows.add(AbstractDataImportHandlerTest.createMap("id",2,"desc","two"));
  rows.add(AbstractDataImportHandlerTest.createMap("id",2,"desc","another two"));
  rows.add(AbstractDataImportHandlerTest.createMap("id",3,"desc","three"));
  rows.add(AbstractDataImportHandlerTest.createMap("id",3,"desc","another three"));
  rows.add(AbstractDataImportHandlerTest.createMap("id",3,"desc","another another three"));
  MockDataSource.setIterator(q,rows.iterator());
  CachedSqlEntityProcessor csep=new CachedSqlEntityProcessor();
  csep.init(context);
  rows=new ArrayList<Map<String,Object>>();
  while (true) {
    Map<String,Object> r=csep.nextRow();
    if (r == null)     break;
    rows.add(r);
  }
  Assert.assertEquals(0,rows.size());
  ds.close();
  csep.init(context);
  rows=new ArrayList<Map<String,Object>>();
  xNamespace.put("id",2);
  while (true) {
    Map<String,Object> r=csep.nextRow();
    if (r == null)     break;
    rows.add(r);
  }
  Assert.assertEquals(2,rows.size());
  csep.init(context);
  rows=new ArrayList<Map<String,Object>>();
  xNamespace.put("id",3);
  while (true) {
    Map<String,Object> r=csep.nextRow();
    if (r == null)     break;
    rows.add(r);
  }
  Assert.assertEquals(3,rows.size());
}
