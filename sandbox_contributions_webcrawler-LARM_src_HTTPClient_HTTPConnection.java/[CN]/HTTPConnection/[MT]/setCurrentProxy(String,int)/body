{
  if (host == null || host.trim().length() == 0) {
    Proxy_Host=null;
  }
 else {
    Proxy_Host=host.trim().toLowerCase();
    if (port <= 0) {
      Proxy_Port=80;
    }
 else {
      Proxy_Port=port;
    }
  }
switch (Protocol) {
case HTTP:
case HTTPS:
    if (force_1_0) {
      ServerProtocolVersion=HTTP_1_0;
      ServProtVersKnown=true;
      RequestProtocolVersion="HTTP/1.0";
    }
 else {
      ServerProtocolVersion=HTTP_1_1;
      ServProtVersKnown=false;
      RequestProtocolVersion="HTTP/1.1";
    }
  break;
case HTTP_NG:
ServerProtocolVersion=-1;
ServProtVersKnown=false;
RequestProtocolVersion="";
break;
case SHTTP:
ServerProtocolVersion=-1;
ServProtVersKnown=false;
RequestProtocolVersion="Secure-HTTP/1.3";
break;
default :
throw new Error("HTTPClient Internal Error: invalid protocol " + Protocol);
}
keepAliveUnknown=true;
doesKeepAlive=false;
input_demux=null;
early_stall=null;
late_stall=null;
prev_resp=null;
}
