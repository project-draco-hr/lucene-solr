{
  ConfigEditablePlugin configEditablePlugin=null;
  if (plugin == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"No " + key + " plugin configured");
  }
  if (plugin instanceof ConfigEditablePlugin) {
    configEditablePlugin=(ConfigEditablePlugin)plugin;
  }
 else {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,key + " plugin is not editable");
  }
  if (req.getContentStreams() == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"No contentStream");
  }
  List<CommandOperation> ops=CommandOperation.readCommands(req.getContentStreams(),rsp);
  if (ops == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"No commands");
  }
  for (; ; ) {
    ConfigData data=getSecurityProps(true);
    Map<String,Object> latestConf=(Map<String,Object>)data.data.get(key);
    if (latestConf == null) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"No configuration present for " + key);
    }
    List<CommandOperation> commandsCopy=CommandOperation.clone(ops);
    Map<String,Object> out=configEditablePlugin.edit(Utils.getDeepCopy(latestConf,4),commandsCopy);
    if (out == null) {
      List<Map> errs=CommandOperation.captureErrors(commandsCopy);
      if (!errs.isEmpty()) {
        rsp.add(CommandOperation.ERR_MSGS,errs);
        return;
      }
      return;
    }
 else {
      if (!Objects.equals(latestConf.get("class"),out.get("class"))) {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"class cannot be modified");
      }
      Map meta=getMapValue(out,"");
      meta.put("v",data.version + 1);
      data.data.put(key,out);
      if (persistConf("/security.json",Utils.toJSON(data.data),data.version))       return;
    }
  }
}
