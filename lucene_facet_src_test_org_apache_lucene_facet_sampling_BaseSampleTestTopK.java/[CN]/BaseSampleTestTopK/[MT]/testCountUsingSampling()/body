{
  boolean useRandomSampler=random().nextBoolean();
  for (  int partitionSize : partitionSizes) {
    try {
      FacetIndexingParams fip=getFacetIndexingParams(partitionSize,true);
      initIndex(fip);
      Query q=new TermQuery(new Term(CONTENT_FIELD,BETA));
      FacetSearchParams expectedSearchParams=searchParamsWithRequests(K,fip);
      FacetsCollector fc=FacetsCollector.create(expectedSearchParams,indexReader,taxoReader);
      searcher.search(q,fc);
      List<FacetResult> expectedResults=fc.getFacetResults();
      FacetSearchParams samplingSearchParams=searchParamsWithRequests(K,fip);
      for (int nTrial=0; nTrial < RETRIES; nTrial++) {
        try {
          final Sampler sampler=createSampler(nTrial,useRandomSampler,samplingSearchParams);
          assertSampling(expectedResults,q,sampler,samplingSearchParams,false);
          assertSampling(expectedResults,q,sampler,samplingSearchParams,true);
          break;
        }
 catch (        AssertionError e) {
          if (nTrial >= RETRIES - 1) {
            throw e;
          }
        }
      }
    }
  finally {
      closeAll();
    }
  }
}
