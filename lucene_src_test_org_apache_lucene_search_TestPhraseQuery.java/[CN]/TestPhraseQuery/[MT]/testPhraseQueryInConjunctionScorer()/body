{
  Directory directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,directory);
  Document doc=new Document();
  doc.add(newField("source","marketing info",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(doc);
  doc=new Document();
  doc.add(newField("contents","foobar",Field.Store.YES,Field.Index.ANALYZED));
  doc.add(newField("source","marketing info",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(doc);
  IndexReader reader=writer.getReader();
  writer.close();
  IndexSearcher searcher=newSearcher(reader);
  PhraseQuery phraseQuery=new PhraseQuery();
  phraseQuery.add(new Term("source","marketing"));
  phraseQuery.add(new Term("source","info"));
  ScoreDoc[] hits=searcher.search(phraseQuery,null,1000).scoreDocs;
  assertEquals(2,hits.length);
  QueryUtils.check(random,phraseQuery,searcher);
  TermQuery termQuery=new TermQuery(new Term("contents","foobar"));
  BooleanQuery booleanQuery=new BooleanQuery();
  booleanQuery.add(termQuery,BooleanClause.Occur.MUST);
  booleanQuery.add(phraseQuery,BooleanClause.Occur.MUST);
  hits=searcher.search(booleanQuery,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  QueryUtils.check(random,termQuery,searcher);
  searcher.close();
  reader.close();
  writer=new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));
  doc=new Document();
  doc.add(newField("contents","map entry woo",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(doc);
  doc=new Document();
  doc.add(newField("contents","woo map entry",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(doc);
  doc=new Document();
  doc.add(newField("contents","map foobarword entry woo",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(doc);
  reader=writer.getReader();
  writer.close();
  searcher=newSearcher(reader);
  termQuery=new TermQuery(new Term("contents","woo"));
  phraseQuery=new PhraseQuery();
  phraseQuery.add(new Term("contents","map"));
  phraseQuery.add(new Term("contents","entry"));
  hits=searcher.search(termQuery,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  hits=searcher.search(phraseQuery,null,1000).scoreDocs;
  assertEquals(2,hits.length);
  booleanQuery=new BooleanQuery();
  booleanQuery.add(termQuery,BooleanClause.Occur.MUST);
  booleanQuery.add(phraseQuery,BooleanClause.Occur.MUST);
  hits=searcher.search(booleanQuery,null,1000).scoreDocs;
  assertEquals(2,hits.length);
  booleanQuery=new BooleanQuery();
  booleanQuery.add(phraseQuery,BooleanClause.Occur.MUST);
  booleanQuery.add(termQuery,BooleanClause.Occur.MUST);
  hits=searcher.search(booleanQuery,null,1000).scoreDocs;
  assertEquals(2,hits.length);
  QueryUtils.check(random,booleanQuery,searcher);
  searcher.close();
  reader.close();
  directory.close();
}
