{
  FieldType fieldType=schema.getFieldTypeByName(numberFieldName);
  if (fieldType == null) {
    throw new RuntimeException("Can not find number field: " + numberFieldName);
  }
  if (!(fieldType instanceof TrieDoubleField)) {
    throw new RuntimeException("field type must be TrieDoubleField: " + fieldType);
  }
  precisionStep=((TrieField)fieldType).getPrecisionStep();
  final int p=(INDEXED | TOKENIZED | OMIT_NORMS| OMIT_TF_POSITIONS);
  List<SchemaField> newFields=new ArrayList<>();
  for (  SchemaField sf : schema.getFields().values()) {
    if (sf.getType() == this) {
      String name=sf.getName();
      newFields.add(new SchemaField(name + PointVectorStrategy.SUFFIX_X,fieldType,p,null));
      newFields.add(new SchemaField(name + PointVectorStrategy.SUFFIX_Y,fieldType,p,null));
    }
  }
  for (  SchemaField newField : newFields) {
    schema.getFields().put(newField.getName(),newField);
  }
}
