def checkClassDetails(fullPath):
    '\n  Checks for invalid HTML in the full javadocs under each field/method.\n  '
    with open(fullPath, encoding='UTF-8') as f:
        desc = None
        cat = None
        item = None
        errors = []
        for line in f.readlines():
            m = reH3.search(line)
            if (m is not None):
                if (desc is not None):
                    desc = ''.join(desc)
                    if (True or (cat == 'Constructor Detail')):
                        idx = desc.find('</div>')
                        if (idx == (-1)):
                            desc = None
                            continue
                        desc = desc[:(idx + 6)]
                    else:
                        desc = ('<ul>%s</ul>' % ''.join(desc))
                    try:
                        verifyHTML(desc)
                    except RuntimeError as re:
                        errors.append((cat, item, str(re)))
                    desc = None
                cat = m.group(1)
                continue
            m = reH4.search(line)
            if (m is not None):
                if (desc is not None):
                    desc = ('<ul>%s</ul>' % ''.join(desc))
                    try:
                        verifyHTML(desc)
                    except RuntimeError as re:
                        errors.append((cat, item, str(re)))
                item = m.group(1)
                desc = []
                continue
            if (desc is not None):
                desc.append(line)
    if (len(errors) != 0):
        print ()
        print fullPath
        for (cat, item, message) in errors:
            print ('  broken details HTML: %s: %s: %s' % (cat, item, message))
