def checkClassSummaries(fullPath):
    f = open(fullPath, encoding='UTF-8')
    missing = []
    broken = []
    inThing = False
    lastCaption = None
    lastItem = None
    desc = None
    foundMethodDetail = False
    lastMethodAnchor = None
    lineCount = 0
    for line in f.readlines():
        m = reMethodDetail.search(line)
        lineCount += 1
        if (m is not None):
            foundMethodDetail = True
            continue
        if foundMethodDetail:
            m = reMethodDetailAnchor.search(line)
            if (m is not None):
                lastMethodAnchor = m.group(1)
                continue
            isOverrides = (('>Overrides:<' in line) or ('>Specified by:<' in line))
            if (isOverrides and (('Methods', lastMethodAnchor) in missing)):
                missing.remove(('Methods', lastMethodAnchor))
        m = reCaption.search(line)
        if (m is not None):
            lastCaption = m.group(1)
        else:
            m = reJ8Caption.search(line)
            if (m is not None):
                lastCaption = m.group(1)
                if (not lastCaption.endswith('s')):
                    lastCaption += 's'
        for matcher in (reTDLastNested, reTDLast, reColOne, reMemberNameLink, reNestedClassMemberNameLink, reMemberNameOneLink):
            m = matcher.search(line)
            if (m is not None):
                lastItem = m.group(1)
                break
        lineLower = line.strip().lower()
        if ((lineLower.find('<tr class="') != (-1)) or (lineLower.find('<tr id="') != (-1))):
            inThing = True
            hasDesc = False
            continue
        if inThing:
            if (lineLower.find('</tr>') != (-1)):
                if (not hasDesc):
                    if (lastItem is None):
                        raise RuntimeError(('failed to locate javadoc item in %s, line %d? last line: %s' % (fullPath, lineCount, line.rstrip())))
                    missing.append((lastCaption, unEscapeURL(lastItem)))
                inThing = False
                continue
            else:
                if (line.find('<div class="block">') != (-1)):
                    desc = []
                if (desc is not None):
                    desc.append(line)
                    if (line.find('</div>') != (-1)):
                        desc = ''.join(desc)
                        try:
                            verifyHTML(desc)
                        except RuntimeError as e:
                            broken.append((lastCaption, lastItem, str(e)))
                        desc = desc.replace('<div class="block">', '')
                        desc = desc.replace('</div>', '')
                        desc = desc.strip()
                        hasDesc = (len(desc) > 0)
                        desc = None
    f.close()
    if ((len(missing) > 0) or (len(broken) > 0)):
        print ()
        print fullPath
        for (caption, item) in missing:
            print ('  missing %s: %s' % (caption, item))
        for (caption, item, why) in broken:
            print ('  broken HTML: %s: %s: %s' % (caption, item, why))
        return True
    else:
        return False
