{
  SqlParser parser=new SqlParser();
  String sql="select a from b where c = 'd'";
  Statement statement=parser.createStatement(sql);
  SQLHandler.SQLVisitor sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("(c:\"d\")"));
  parser=new SqlParser();
  sql="select a from b where (c = 'd')";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("(c:\"d\")"));
  parser=new SqlParser();
  sql="select a from b where (c = 'd d')";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("(c:\"d d\")"));
  parser=new SqlParser();
  sql="select a from b where ((c = 'd') AND (l = 'z'))";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("((c:\"d\") AND (l:\"z\"))"));
  parser=new SqlParser();
  sql="select a from b where ((c = 'd') OR (l = 'z'))";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("((c:\"d\") OR (l:\"z\"))"));
  parser=new SqlParser();
  sql="select a from b where ((c = 'd') AND NOT (l = 'z'))";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("((c:\"d\") AND -(l:\"z\"))"));
  parser=new SqlParser();
  sql="select a from b where ((c = 'd') OR ((l = 'z') AND (m = 'j')))";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("((c:\"d\") OR ((l:\"z\") AND (m:\"j\")))"));
  parser=new SqlParser();
  sql="select a from b where ((c = 'd') OR ((l = 'z') AND NOT (m = 'j')))";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("((c:\"d\") OR ((l:\"z\") AND -(m:\"j\")))"));
  parser=new SqlParser();
  sql="select a from b where ((c = '[0 TO 100]') OR ((l = '(z)') AND (m = 'j')))";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("((c:[0 TO 100]) OR ((l:(z)) AND (m:\"j\")))"));
  parser=new SqlParser();
  sql="select a from b where ((c = '[0 TO 100]') OR ((l = '(z*)') AND (m = 'j')))";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("((c:[0 TO 100]) OR ((l:(z*)) AND (m:\"j\")))"));
  parser=new SqlParser();
  sql="select a from b where ((c = '[0 TO 100]') OR ((l = '(z*)') AND (m = '(j OR (k NOT s))')))";
  statement=parser.createStatement(sql);
  sqlVistor=new SQLHandler.SQLVisitor(new StringBuilder());
  sqlVistor.process(statement,new Integer(0));
  assert(sqlVistor.query.equals("((c:[0 TO 100]) OR ((l:(z*)) AND (m:(j OR (k NOT s)))))"));
}
