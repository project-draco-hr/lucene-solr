{
  properties=(STORED | INDEXED);
  if (schema.getVersion() < 1.1f)   properties|=MULTIVALUED;
  this.args=args;
  Map<String,String> initArgs=new HashMap<String,String>(args);
  String str;
  str=initArgs.get("positionIncrementGap");
  if (str != null)   positionIncrementGap=Integer.parseInt(str);
  initArgs.remove("positionIncrementGap");
  trueProperties=FieldProperties.parseProperties(initArgs,true);
  falseProperties=FieldProperties.parseProperties(initArgs,false);
  properties&=~falseProperties;
  properties|=trueProperties;
  for (  String prop : FieldProperties.propertyNames)   initArgs.remove(prop);
  init(schema,initArgs);
  if (initArgs.size() > 0) {
    throw new RuntimeException("schema fieldtype " + typeName + "("+ this.getClass().getName()+ ")"+ " invalid arguments:"+ initArgs);
  }
}
