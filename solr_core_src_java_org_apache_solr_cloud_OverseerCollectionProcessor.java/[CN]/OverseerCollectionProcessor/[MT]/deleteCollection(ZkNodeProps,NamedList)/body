{
  String collection=message.getStr("name");
  try {
    ModifiableSolrParams params=new ModifiableSolrParams();
    params.set(CoreAdminParams.ACTION,CoreAdminAction.UNLOAD.toString());
    params.set(CoreAdminParams.DELETE_INSTANCE_DIR,true);
    params.set(CoreAdminParams.DELETE_DATA_DIR,true);
    collectionCmd(zkStateReader.getClusterState(),message,params,results,null);
    ZkNodeProps m=new ZkNodeProps(Overseer.QUEUE_OPERATION,Overseer.REMOVECOLLECTION,"name",collection);
    Overseer.getInQueue(zkStateReader.getZkClient()).offer(ZkStateReader.toJSON(m));
    long now=System.currentTimeMillis();
    long timeout=now + 30000;
    boolean removed=false;
    while (System.currentTimeMillis() < timeout) {
      Thread.sleep(100);
      removed=!zkStateReader.getClusterState().hasCollection(message.getStr(collection));
      if (removed) {
        Thread.sleep(100);
        break;
      }
    }
    if (!removed) {
      throw new SolrException(ErrorCode.SERVER_ERROR,"Could not fully remove collection: " + message.getStr("name"));
    }
  }
  finally {
    try {
      if (zkStateReader.getZkClient().exists(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collection,true)) {
        zkStateReader.getZkClient().clean(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collection);
      }
    }
 catch (    InterruptedException e) {
      SolrException.log(log,"Cleaning up collection in zk was interrupted:" + collection,e);
      Thread.currentThread().interrupt();
    }
catch (    KeeperException e) {
      SolrException.log(log,"Problem cleaning up collection in zk:" + collection,e);
    }
  }
}
