{
  String aliasName=message.getStr(NAME);
  String collections=message.getStr("collections");
  Map previousMDCContext=MDC.getCopyOfContextMap();
  MDCUtils.setCollection(aliasName);
  try {
    Map<String,Map<String,String>> newAliasesMap=new HashMap<>();
    Map<String,String> newCollectionAliasesMap=new HashMap<>();
    Map<String,String> prevColAliases=aliases.getCollectionAliasMap();
    if (prevColAliases != null) {
      newCollectionAliasesMap.putAll(prevColAliases);
    }
    newCollectionAliasesMap.put(aliasName,collections);
    newAliasesMap.put("collection",newCollectionAliasesMap);
    Aliases newAliases=new Aliases(newAliasesMap);
    byte[] jsonBytes=null;
    if (newAliases.collectionAliasSize() > 0) {
      jsonBytes=ZkStateReader.toJSON(newAliases.getAliasMap());
    }
    try {
      zkStateReader.getZkClient().setData(ZkStateReader.ALIASES,jsonBytes,true);
      checkForAlias(aliasName,collections);
      Thread.sleep(100);
    }
 catch (    KeeperException e) {
      log.error("",e);
      throw new SolrException(ErrorCode.SERVER_ERROR,e);
    }
catch (    InterruptedException e) {
      log.warn("",e);
      throw new SolrException(ErrorCode.SERVER_ERROR,e);
    }
  }
  finally {
    MDCUtils.cleanupMDC(previousMDCContext);
  }
}
