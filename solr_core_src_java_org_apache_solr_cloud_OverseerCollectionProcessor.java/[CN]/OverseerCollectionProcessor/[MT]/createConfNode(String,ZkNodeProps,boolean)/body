{
  String configName=message.getStr(OverseerCollectionProcessor.COLL_CONF);
  if (configName == null) {
    List<String> configNames=null;
    try {
      configNames=zkStateReader.getZkClient().getChildren(ZkController.CONFIGS_ZKNODE,null,true);
      if (configNames != null && configNames.size() == 1) {
        configName=configNames.get(0);
        log.info("Only one config set found in zk - using it:" + configName);
      }
 else       if (configNames.contains(coll)) {
        configName=coll;
      }
    }
 catch (    KeeperException.NoNodeException e) {
    }
  }
  if (configName != null) {
    String collDir=ZkStateReader.COLLECTIONS_ZKNODE + "/" + coll;
    log.info("creating collections conf node {} ",collDir);
    byte[] data=ZkStateReader.toJSON(ZkNodeProps.makeMap(ZkController.CONFIGNAME_PROP,configName));
    if (zkStateReader.getZkClient().exists(collDir,true)) {
      zkStateReader.getZkClient().setData(collDir,data,true);
    }
 else {
      zkStateReader.getZkClient().makePath(collDir,data,true);
    }
  }
 else {
    if (isLegacyCloud) {
      log.warn("Could not obtain config name");
    }
 else {
      throw new SolrException(ErrorCode.BAD_REQUEST,"Unable to get config name");
    }
  }
  return configName;
}
