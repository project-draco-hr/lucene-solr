{
  log.warn("OverseerCollectionProcessor.processMessage : " + operation + " , "+ message.toString());
  NamedList results=new NamedList();
  try {
    if (CREATECOLLECTION.equals(operation)) {
      createCollection(zkStateReader.getClusterState(),message,results);
    }
 else     if (DELETECOLLECTION.equals(operation)) {
      deleteCollection(message,results);
    }
 else     if (RELOADCOLLECTION.equals(operation)) {
      ModifiableSolrParams params=new ModifiableSolrParams();
      params.set(CoreAdminParams.ACTION,CoreAdminAction.RELOAD.toString());
      collectionCmd(zkStateReader.getClusterState(),message,params,results,ZkStateReader.ACTIVE);
    }
 else     if (CREATEALIAS.equals(operation)) {
      createAlias(zkStateReader.getAliases(),message);
    }
 else     if (DELETEALIAS.equals(operation)) {
      deleteAlias(zkStateReader.getAliases(),message);
    }
 else     if (SPLITSHARD.equals(operation)) {
      splitShard(zkStateReader.getClusterState(),message,results);
    }
 else     if (CREATESHARD.equals(operation)) {
      createShard(zkStateReader.getClusterState(),message,results);
    }
 else     if (DELETESHARD.equals(operation)) {
      deleteShard(zkStateReader.getClusterState(),message,results);
    }
 else {
      throw new SolrException(ErrorCode.BAD_REQUEST,"Unknown operation:" + operation);
    }
  }
 catch (  Throwable t) {
    SolrException.log(log,"Collection " + operation + " of "+ operation+ " failed",t);
    results.add("Operation " + operation + " caused exception:",t);
    SimpleOrderedMap nl=new SimpleOrderedMap();
    nl.add("msg",t.getMessage());
    nl.add("rspCode",t instanceof SolrException ? ((SolrException)t).code() : -1);
    results.add("exception",nl);
  }
  return new OverseerSolrResponse(results);
}
