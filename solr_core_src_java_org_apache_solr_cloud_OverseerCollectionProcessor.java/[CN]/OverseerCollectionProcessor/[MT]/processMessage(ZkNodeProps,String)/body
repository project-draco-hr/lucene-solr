{
  log.warn("OverseerCollectionProcessor.processMessage : " + operation + " , "+ message.toString());
  NamedList results=new NamedList();
  try {
    CollectionParams.CollectionAction action=CollectionParams.CollectionAction.get(operation);
    if (action == null) {
switch (operation) {
case CREATECOLLECTION:
        createCollection(zkStateReader.getClusterState(),message,results);
      break;
case DELETECOLLECTION:
    deleteCollection(message,results);
  break;
case RELOADCOLLECTION:
ModifiableSolrParams params=new ModifiableSolrParams();
params.set(CoreAdminParams.ACTION,CoreAdminAction.RELOAD.toString());
collectionCmd(zkStateReader.getClusterState(),message,params,results,ZkStateReader.ACTIVE);
break;
default :
throw new SolrException(ErrorCode.BAD_REQUEST,"Unknown operation:" + operation);
}
}
 else {
switch (action) {
case CREATE:
createCollection(zkStateReader.getClusterState(),message,results);
break;
case DELETE:
deleteCollection(message,results);
break;
case RELOAD:
ModifiableSolrParams params=new ModifiableSolrParams();
params.set(CoreAdminParams.ACTION,CoreAdminAction.RELOAD.toString());
collectionCmd(zkStateReader.getClusterState(),message,params,results,ZkStateReader.ACTIVE);
break;
case CREATEALIAS:
createAlias(zkStateReader.getAliases(),message);
break;
case DELETEALIAS:
deleteAlias(zkStateReader.getAliases(),message);
break;
case SPLITSHARD:
splitShard(zkStateReader.getClusterState(),message,results);
break;
case DELETESHARD:
deleteShard(zkStateReader.getClusterState(),message,results);
break;
case CREATESHARD:
createShard(zkStateReader.getClusterState(),message,results);
break;
case DELETEREPLICA:
deleteReplica(zkStateReader.getClusterState(),message,results);
break;
case MIGRATE:
migrate(zkStateReader.getClusterState(),message,results);
break;
case ADDROLE:
processRoleCommand(message,operation);
break;
case REMOVEROLE:
processRoleCommand(message,operation);
break;
case ADDREPLICA:
addReplica(zkStateReader.getClusterState(),message,results);
break;
case OVERSEERSTATUS:
getOverseerStatus(message,results);
break;
case LIST:
listCollections(zkStateReader.getClusterState(),results);
break;
case CLUSTERSTATUS:
getClusterStatus(zkStateReader.getClusterState(),message,results);
break;
case ADDREPLICAPROP:
processReplicaAddPropertyCommand(message);
break;
case DELETEREPLICAPROP:
processReplicaDeletePropertyCommand(message);
break;
case BALANCESLICEUNIQUE:
balanceProperty(message);
break;
case REBALANCELEADERS:
processAssignLeaders(message);
break;
default :
throw new SolrException(ErrorCode.BAD_REQUEST,"Unknown operation:" + operation);
}
}
}
 catch (Exception e) {
String collName=message.getStr("collection");
if (collName == null) collName=message.getStr("name");
if (collName == null) {
SolrException.log(log,"Operation " + operation + " failed",e);
}
 else {
SolrException.log(log,"Collection: " + collName + " operation: "+ operation+ " failed",e);
}
results.add("Operation " + operation + " caused exception:",e);
SimpleOrderedMap nl=new SimpleOrderedMap();
nl.add("msg",e.getMessage());
nl.add("rspCode",e instanceof SolrException ? ((SolrException)e).code() : -1);
results.add("exception",nl);
}
return new OverseerSolrResponse(results);
}
