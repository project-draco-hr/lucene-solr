{
  NamedList results=new NamedList();
  try {
    if (CREATECOLLECTION.equals(operation)) {
      createCollection(zkStateReader.getClusterState(),message,results);
    }
 else     if (DELETECOLLECTION.equals(operation)) {
      ModifiableSolrParams params=new ModifiableSolrParams();
      params.set(CoreAdminParams.ACTION,CoreAdminAction.UNLOAD.toString());
      params.set(CoreAdminParams.DELETE_INSTANCE_DIR,true);
      collectionCmd(zkStateReader.getClusterState(),message,params,results,null);
      ZkNodeProps m=new ZkNodeProps(Overseer.QUEUE_OPERATION,Overseer.REMOVECOLLECTION,"name",message.getStr("name"));
      Overseer.getInQueue(zkStateReader.getZkClient()).offer(ZkStateReader.toJSON(m));
      long now=System.currentTimeMillis();
      long timeout=now + 30000;
      boolean removed=false;
      while (System.currentTimeMillis() < timeout) {
        Thread.sleep(100);
        removed=!zkStateReader.getClusterState().getCollections().contains(message.getStr("name"));
        if (removed) {
          Thread.sleep(100);
          break;
        }
      }
      if (!removed) {
        throw new SolrException(ErrorCode.SERVER_ERROR,"Could not fully remove collection: " + message.getStr("name"));
      }
    }
 else     if (RELOADCOLLECTION.equals(operation)) {
      ModifiableSolrParams params=new ModifiableSolrParams();
      params.set(CoreAdminParams.ACTION,CoreAdminAction.RELOAD.toString());
      collectionCmd(zkStateReader.getClusterState(),message,params,results,ZkStateReader.ACTIVE);
    }
 else     if (CREATEALIAS.equals(operation)) {
      createAlias(zkStateReader.getAliases(),message);
    }
 else     if (DELETEALIAS.equals(operation)) {
      deleteAlias(zkStateReader.getAliases(),message);
    }
 else     if (SPLITSHARD.equals(operation)) {
      splitShard(zkStateReader.getClusterState(),message,results);
    }
 else {
      throw new SolrException(ErrorCode.BAD_REQUEST,"Unknown operation:" + operation);
    }
  }
 catch (  Exception ex) {
    SolrException.log(log,"Collection " + operation + " of "+ operation+ " failed",ex);
    results.add("Operation " + operation + " caused exception:",ex);
    SimpleOrderedMap nl=new SimpleOrderedMap();
    nl.add("msg",ex.getMessage());
    nl.add("rspCode",ex instanceof SolrException ? ((SolrException)ex).code() : -1);
    results.add("exception",nl);
  }
 finally {
    return new OverseerSolrResponse(results);
  }
}
