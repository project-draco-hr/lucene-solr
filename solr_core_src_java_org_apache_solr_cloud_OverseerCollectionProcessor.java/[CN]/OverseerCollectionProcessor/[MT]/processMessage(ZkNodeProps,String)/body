{
  NamedList results=new NamedList();
  try {
    if (CREATECOLLECTION.equals(operation)) {
      createCollection(zkStateReader.getClusterState(),message);
    }
 else     if (DELETECOLLECTION.equals(operation)) {
      ModifiableSolrParams params=new ModifiableSolrParams();
      params.set(CoreAdminParams.ACTION,CoreAdminAction.UNLOAD.toString());
      params.set(CoreAdminParams.DELETE_INSTANCE_DIR,true);
      collectionCmd(zkStateReader.getClusterState(),message,params);
    }
 else     if (RELOADCOLLECTION.equals(operation)) {
      ModifiableSolrParams params=new ModifiableSolrParams();
      params.set(CoreAdminParams.ACTION,CoreAdminAction.RELOAD.toString());
      collectionCmd(zkStateReader.getClusterState(),message,params);
    }
 else {
      throw new SolrException(ErrorCode.BAD_REQUEST,"Unknow the operation:" + operation);
    }
    int failed=0;
    ShardResponse srsp;
    do {
      srsp=shardHandler.takeCompletedIncludingErrors();
      if (srsp != null) {
        Throwable e=srsp.getException();
        if (e != null) {
          failed++;
          log.error("Error talking to shard: " + srsp.getShard(),e);
          results.add(srsp.getShard(),e);
        }
 else {
          results.add(srsp.getShard(),srsp.getSolrResponse().getResponse());
        }
      }
    }
 while (srsp != null);
  }
 catch (  SolrException ex) {
    SolrException.log(log,"Collection " + operation + " of "+ operation+ " failed");
    results.add("Operation " + operation + " caused exception:",ex);
  }
 finally {
    return new OverseerSolrResponse(results);
  }
}
