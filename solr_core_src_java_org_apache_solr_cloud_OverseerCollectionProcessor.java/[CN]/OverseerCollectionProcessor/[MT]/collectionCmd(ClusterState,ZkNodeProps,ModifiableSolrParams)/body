{
  log.info("Executing Collection Cmd : " + params);
  String name=message.getStr("name");
  DocCollection coll=clusterState.getCollection(name);
  for (  Map.Entry<String,Slice> entry : coll.getSlicesMap().entrySet()) {
    Slice slice=entry.getValue();
    Map<String,Replica> shards=slice.getReplicasMap();
    Set<Map.Entry<String,Replica>> shardEntries=shards.entrySet();
    for (    Map.Entry<String,Replica> shardEntry : shardEntries) {
      final ZkNodeProps node=shardEntry.getValue();
      if (clusterState.liveNodesContain(node.getStr(ZkStateReader.NODE_NAME_PROP))) {
        ModifiableSolrParams cloneParams=new ModifiableSolrParams();
        cloneParams.add(params);
        cloneParams.set(CoreAdminParams.CORE,node.getStr(ZkStateReader.CORE_NAME_PROP));
        String replica=node.getStr(ZkStateReader.BASE_URL_PROP);
        ShardRequest sreq=new ShardRequest();
        cloneParams.set("qt",adminPath);
        sreq.purpose=1;
        if (replica.startsWith("http://"))         replica=replica.substring(7);
        sreq.shards=new String[]{replica};
        sreq.actualShards=sreq.shards;
        sreq.params=cloneParams;
        log.info("Collection Admin sending CoreAdmin cmd to " + replica + " params:"+ sreq.params);
        shardHandler.submit(sreq,replica,sreq.params);
      }
    }
  }
  int failed=0;
  ShardResponse srsp;
  do {
    srsp=shardHandler.takeCompletedOrError();
    if (srsp != null) {
      Throwable e=srsp.getException();
      if (e != null) {
        failed++;
        log.error("Error talking to shard: " + srsp.getShard(),e);
      }
    }
  }
 while (srsp != null);
  if (failed > 0) {
    return false;
  }
  return true;
}
