{
  while (!this.stopped.get() || this.taskQueue.size() != 0) {
    try {
      Future<IndexDocument> future=getTask();
      if (future != null) {
        IndexDocument document=future.get();
        setOptimize(document);
        processDocument(document);
        if (document == null || document.commitAfter())         this.indexer.commit(document == null ? false : this.optimize.getAndSet(false));
      }
      if (this.commit.getAndSet(false))       this.indexer.commit(this.optimize.getAndSet(false));
    }
 catch (    InterruptedException e) {
      INNERLOG.warn("Queue is interrupted exiting IndexTask -- ",e);
    }
catch (    GdataIndexerException e) {
      INNERLOG.error("can not retrieve Field from IndexDocument  ",e);
    }
catch (    ExecutionException e) {
      INNERLOG.error("Future throws execution exception ",e);
    }
catch (    IOException e) {
      INNERLOG.error("IOException thrown while processing document ",e);
    }
catch (    Throwable e) {
      INNERLOG.error("Unexpected exception while processing document -- " + e.getMessage(),e);
    }
  }
  try {
    this.indexer.commit(this.optimize.getAndSet(false));
  }
 catch (  IOException e) {
    INNERLOG.warn("commit on going down failed - " + e.getMessage(),e);
  }
  this.stop();
}
