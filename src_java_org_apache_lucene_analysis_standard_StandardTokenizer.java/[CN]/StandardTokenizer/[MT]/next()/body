{
  Token token=null;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ALPHANUM:
    token=jj_consume_token(ALPHANUM);
  break;
case APOSTROPHE:
token=jj_consume_token(APOSTROPHE);
break;
case ACRONYM:
token=jj_consume_token(ACRONYM);
break;
case COMPANY:
token=jj_consume_token(COMPANY);
break;
case EMAIL:
token=jj_consume_token(EMAIL);
break;
case HOST:
token=jj_consume_token(HOST);
break;
case NUM:
token=jj_consume_token(NUM);
break;
case SIGRAM:
token=jj_consume_token(SIGRAM);
break;
case 0:
token=jj_consume_token(0);
break;
default :
jj_la1[0]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
if (token.kind == EOF) {
{
if (true) return null;
}
}
 else {
{
if (true) return new org.apache.lucene.analysis.Token(token.image,token.beginColumn,token.endColumn,tokenImage[token.kind]);
}
}
throw new Error("Missing return statement in function");
}
