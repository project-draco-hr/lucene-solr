{
  for (int iter=0; iter < 5 * RANDOM_MULTIPLIER; iter++) {
    final PagedBytes p=new PagedBytes(_TestUtil.nextInt(random,1,20));
    final DataOutput out=p.getDataOutput();
    final int numBytes=random.nextInt(10000000);
    final byte[] answer=new byte[numBytes];
    random.nextBytes(answer);
    int written=0;
    while (written < numBytes) {
      if (random.nextInt(10) == 7) {
        out.writeByte(answer[written++]);
      }
 else {
        int chunk=Math.min(random.nextInt(1000),numBytes - written);
        out.writeBytes(answer,written,chunk);
        written+=chunk;
      }
    }
    p.freeze(random.nextBoolean());
    final DataInput in=p.getDataInput();
    final byte[] verify=new byte[numBytes];
    int read=0;
    while (read < numBytes) {
      if (random.nextInt(10) == 7) {
        verify[read++]=in.readByte();
      }
 else {
        int chunk=Math.min(random.nextInt(1000),numBytes - read);
        in.readBytes(verify,read,chunk);
        read+=chunk;
      }
    }
    assertTrue(Arrays.equals(answer,verify));
  }
}
