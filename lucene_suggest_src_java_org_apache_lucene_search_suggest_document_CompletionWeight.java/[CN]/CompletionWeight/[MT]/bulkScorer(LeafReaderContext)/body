{
  final LeafReader reader=context.reader();
  final Terms terms;
  final NRTSuggester suggester;
  if ((terms=reader.terms(completionQuery.getField())) == null) {
    return null;
  }
  if (terms instanceof CompletionTerms) {
    CompletionTerms completionTerms=(CompletionTerms)terms;
    if ((suggester=completionTerms.suggester()) == null) {
      return null;
    }
  }
 else {
    throw new IllegalArgumentException(completionQuery.getField() + " is not a SuggestField");
  }
  DocIdSet docIdSet=null;
  Filter filter=completionQuery.getFilter();
  if (filter != null) {
    docIdSet=filter.getDocIdSet(context,null);
    if (docIdSet == null || docIdSet.iterator() == null) {
      return null;
    }
 else     if (docIdSet.bits() == null) {
      throw new IllegalArgumentException("DocIDSet does not provide random access interface");
    }
  }
  Bits acceptDocBits=(docIdSet != null) ? docIdSet.bits() : null;
  return new CompletionScorer(this,suggester,reader,acceptDocBits,filter != null,automaton);
}
