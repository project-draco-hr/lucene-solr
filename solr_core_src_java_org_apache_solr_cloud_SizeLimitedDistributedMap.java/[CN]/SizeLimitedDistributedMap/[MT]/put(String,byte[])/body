{
  if (this.size() >= maxSize) {
    List<String> children=zookeeper.getChildren(dir,null,true);
    int cleanupSize=maxSize / 10;
    final PriorityQueue priorityQueue=new PriorityQueue<Long>(cleanupSize){
      @Override protected boolean lessThan(      Long a,      Long b){
        return (a > b);
      }
    }
;
    for (    String child : children) {
      Stat stat=zookeeper.exists(dir + "/" + child,null,true);
      priorityQueue.insertWithOverflow(stat.getMzxid());
    }
    long topElementMzxId=(Long)priorityQueue.top();
    for (    String child : children) {
      Stat stat=zookeeper.exists(dir + "/" + child,null,true);
      if (stat.getMzxid() <= topElementMzxId)       zookeeper.delete(dir + "/" + child,-1,true);
    }
  }
  return createData(dir + "/" + prefix+ trackingId,data,CreateMode.PERSISTENT) != null;
}
