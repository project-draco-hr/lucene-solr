{
  Directory indexDir=newDirectory();
  Directory taxoDir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  IndexWriter writer=new IndexWriter(indexDir,conf);
  DirectoryTaxonomyWriter taxoWriter=new DirectoryTaxonomyWriter(taxoDir);
  FacetsConfig config=new FacetsConfig();
  Document doc=new Document();
  doc.add(new FacetField("A","1"));
  writer.addDocument(config.build(taxoWriter,doc));
  doc=new Document();
  doc.add(new FacetField("A","2"));
  writer.addDocument(config.build(taxoWriter,doc));
  final DirectoryReader reader=DirectoryReader.open(writer,true);
  final CachedOrdinalsReader ordsReader=new CachedOrdinalsReader(new DocValuesOrdinalsReader(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));
  Thread[] threads=new Thread[3];
  for (int i=0; i < threads.length; i++) {
    threads[i]=new Thread("CachedOrdsThread-" + i){
      @Override public void run(){
        for (        AtomicReaderContext context : reader.leaves()) {
          try {
            ordsReader.getReader(context);
          }
 catch (          IOException e) {
            throw new RuntimeException(e);
          }
        }
      }
    }
;
  }
  long ramBytesUsed=0;
  for (  Thread t : threads) {
    t.start();
    t.join();
    if (ramBytesUsed == 0) {
      ramBytesUsed=ordsReader.ramBytesUsed();
    }
 else {
      assertEquals(ramBytesUsed,ordsReader.ramBytesUsed());
    }
  }
  IOUtils.close(writer,taxoWriter,reader,indexDir,taxoDir);
}
