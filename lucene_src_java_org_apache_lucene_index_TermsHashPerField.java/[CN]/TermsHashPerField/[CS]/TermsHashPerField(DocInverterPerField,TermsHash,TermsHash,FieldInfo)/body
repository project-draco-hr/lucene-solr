{
  intPool=termsHash.intPool;
  bytePool=termsHash.bytePool;
  termBytePool=termsHash.termBytePool;
  docState=termsHash.docState;
  this.termsHash=termsHash;
  bytesUsed=termsHash.trackAllocations ? termsHash.docWriter.bytesUsed : new AtomicLong();
  fieldState=docInverterPerField.fieldState;
  this.consumer=termsHash.consumer.addField(this,fieldInfo);
  PostingsBytesStartArray byteStarts=new PostingsBytesStartArray(this,bytesUsed);
  bytesHash=new BytesRefHash(termBytePool,HASH_INIT_SIZE,byteStarts);
  streamCount=consumer.getStreamCount();
  numPostingInt=2 * streamCount;
  this.fieldInfo=fieldInfo;
  if (nextTermsHash != null)   nextPerField=(TermsHashPerField)nextTermsHash.addField(docInverterPerField,fieldInfo);
 else   nextPerField=null;
}
