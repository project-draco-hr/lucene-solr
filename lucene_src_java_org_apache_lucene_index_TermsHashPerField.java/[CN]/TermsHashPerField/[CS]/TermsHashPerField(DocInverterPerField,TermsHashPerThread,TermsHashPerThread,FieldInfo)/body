{
  this.perThread=perThread;
  intPool=perThread.intPool;
  bytePool=perThread.bytePool;
  termBytePool=perThread.termBytePool;
  docState=perThread.docState;
  bytesUsed=perThread.termsHash.trackAllocations ? perThread.termsHash.docWriter.bytesUsed : new AtomicLong();
  fieldState=docInverterPerField.fieldState;
  this.consumer=perThread.consumer.addField(this,fieldInfo);
  PostingsBytesStartArray byteStarts=new PostingsBytesStartArray(this,bytesUsed);
  bytesHash=new BytesRefHash(termBytePool,HASH_INIT_SIZE,byteStarts);
  streamCount=consumer.getStreamCount();
  numPostingInt=2 * streamCount;
  termBytesRef=perThread.termBytesRef;
  this.fieldInfo=fieldInfo;
  if (nextPerThread != null)   nextPerField=(TermsHashPerField)nextPerThread.addField(docInverterPerField,fieldInfo);
 else   nextPerField=null;
}
