{
  IndexReader indexReader=searcher.getIndexReader();
  int numSegments=indexReader.leaves().size();
  final long valueCount;
  if (numSegments == 0) {
    return new MatchNoDocsQuery();
  }
 else   if (numSegments == 1) {
    ordinalMap=null;
    LeafReader leafReader=searcher.getIndexReader().leaves().get(0).reader();
    SortedDocValues joinSortedDocValues=leafReader.getSortedDocValues(joinField);
    if (joinSortedDocValues != null) {
      valueCount=joinSortedDocValues.getValueCount();
    }
 else {
      return new MatchNoDocsQuery();
    }
  }
 else {
    if (ordinalMap == null) {
      throw new IllegalArgumentException("OrdinalMap is required, because there is more than 1 segment");
    }
    valueCount=ordinalMap.getValueCount();
  }
  final Query rewrittenFromQuery=searcher.rewrite(fromQuery);
  final Query rewrittenToQuery=searcher.rewrite(toQuery);
  GlobalOrdinalsWithScoreCollector globalOrdinalsWithScoreCollector;
switch (scoreMode) {
case Total:
    globalOrdinalsWithScoreCollector=new GlobalOrdinalsWithScoreCollector.Sum(joinField,ordinalMap,valueCount,min,max);
  break;
case Min:
globalOrdinalsWithScoreCollector=new GlobalOrdinalsWithScoreCollector.Min(joinField,ordinalMap,valueCount,min,max);
break;
case Max:
globalOrdinalsWithScoreCollector=new GlobalOrdinalsWithScoreCollector.Max(joinField,ordinalMap,valueCount,min,max);
break;
case Avg:
globalOrdinalsWithScoreCollector=new GlobalOrdinalsWithScoreCollector.Avg(joinField,ordinalMap,valueCount,min,max);
break;
case None:
if (min <= 0 && max == Integer.MAX_VALUE) {
GlobalOrdinalsCollector globalOrdinalsCollector=new GlobalOrdinalsCollector(joinField,ordinalMap,valueCount);
searcher.search(rewrittenFromQuery,globalOrdinalsCollector);
return new GlobalOrdinalsQuery(globalOrdinalsCollector.getCollectorOrdinals(),joinField,ordinalMap,rewrittenToQuery,rewrittenFromQuery,indexReader);
}
 else {
globalOrdinalsWithScoreCollector=new GlobalOrdinalsWithScoreCollector.NoScore(joinField,ordinalMap,valueCount,min,max);
break;
}
default :
throw new IllegalArgumentException(String.format(Locale.ROOT,"Score mode %s isn't supported.",scoreMode));
}
searcher.search(rewrittenFromQuery,globalOrdinalsWithScoreCollector);
return new GlobalOrdinalsWithScoreQuery(globalOrdinalsWithScoreCollector,joinField,ordinalMap,rewrittenToQuery,rewrittenFromQuery,min,max,indexReader);
}
