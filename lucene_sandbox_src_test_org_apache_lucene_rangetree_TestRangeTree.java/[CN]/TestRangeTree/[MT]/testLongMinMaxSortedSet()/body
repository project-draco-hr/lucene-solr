{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig();
  Codec codec=TestUtil.alwaysDocValuesFormat(new RangeTreeDocValuesFormat());
  iwc.setCodec(codec);
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,iwc);
  Document doc=new Document();
  doc.add(new SortedSetDocValuesField("value",longToBytes(Long.MIN_VALUE)));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new SortedSetDocValuesField("value",longToBytes(Long.MAX_VALUE)));
  w.addDocument(doc);
  IndexReader r=w.getReader();
  IndexSearcher s=newSearcher(r,false);
  assertEquals(2,s.count(new SortedSetRangeTreeQuery("value",longToBytes(Long.MIN_VALUE),true,longToBytes(Long.MAX_VALUE),true)));
  assertEquals(1,s.count(new SortedSetRangeTreeQuery("value",longToBytes(Long.MIN_VALUE),true,longToBytes(Long.MAX_VALUE),false)));
  assertEquals(1,s.count(new SortedSetRangeTreeQuery("value",longToBytes(Long.MIN_VALUE),false,longToBytes(Long.MAX_VALUE),true)));
  assertEquals(0,s.count(new SortedSetRangeTreeQuery("value",longToBytes(Long.MIN_VALUE),false,longToBytes(Long.MAX_VALUE),false)));
  assertEquals(2,s.count(new SortedSetRangeTreeQuery("value",null,true,null,true)));
  IOUtils.close(r,w,dir);
}
