{
  int numValues=atLeast(count);
  if (VERBOSE) {
    System.out.println("TEST: numValues=" + numValues);
  }
  long[] values=new long[numValues];
  FixedBitSet missing=new FixedBitSet(numValues);
  boolean haveRealDoc=false;
  for (int docID=0; docID < numValues; docID++) {
    int x=random().nextInt(20);
    if (x == 17) {
      missing.set(docID);
      if (VERBOSE) {
        System.out.println("  doc=" + docID + " is missing");
      }
      continue;
    }
    if (docID > 0 && x == 0 && haveRealDoc) {
      int oldDocID;
      while (true) {
        oldDocID=random().nextInt(docID);
        if (missing.get(oldDocID) == false) {
          break;
        }
      }
      values[docID]=values[oldDocID];
      if (VERBOSE) {
        System.out.println("  doc=" + docID + " value="+ values[docID]+ " bytes="+ longToBytes(values[docID])+ " (same as doc="+ oldDocID+ ")");
      }
    }
 else {
      values[docID]=randomValue();
      haveRealDoc=true;
      if (VERBOSE) {
        System.out.println("  doc=" + docID + " value="+ values[docID]+ " bytes="+ longToBytes(values[docID]));
      }
    }
  }
  verify(missing,values);
}
