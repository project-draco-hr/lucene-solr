{
  SolrParams params=rb.req.getParams();
  if (!params.getBool(COMPONENT_NAME,false) || spellCheckers.isEmpty()) {
    return;
  }
  boolean shardRequest="true".equals(params.get(ShardParams.IS_SHARD));
  String q=params.get(SPELLCHECK_Q);
  SolrSpellChecker spellChecker=getSpellChecker(params);
  Collection<Token> tokens=null;
  if (q != null) {
    tokens=getTokens(q,spellChecker.getQueryAnalyzer());
  }
 else {
    q=rb.getQueryString();
    if (q == null) {
      q=params.get(CommonParams.Q);
    }
    tokens=queryConverter.convert(q);
  }
  if (tokens != null && tokens.isEmpty() == false) {
    if (spellChecker != null) {
      int count=params.getInt(SPELLCHECK_COUNT,1);
      boolean onlyMorePopular=params.getBool(SPELLCHECK_ONLY_MORE_POPULAR,DEFAULT_ONLY_MORE_POPULAR);
      boolean extendedResults=params.getBool(SPELLCHECK_EXTENDED_RESULTS,false);
      boolean collate=params.getBool(SPELLCHECK_COLLATE,false);
      float accuracy=params.getFloat(SPELLCHECK_ACCURACY,Float.MIN_VALUE);
      int alternativeTermCount=params.getInt(SpellingParams.SPELLCHECK_ALTERNATIVE_TERM_COUNT,0);
      Integer maxResultsForSuggest=params.getInt(SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST);
      ModifiableSolrParams customParams=new ModifiableSolrParams();
      for (      String checkerName : getDictionaryNames(params)) {
        customParams.add(getCustomParams(checkerName,params));
      }
      Integer hitsInteger=(Integer)rb.rsp.getToLog().get("hits");
      long hits=0;
      if (hitsInteger == null) {
        hits=rb.getNumberDocumentsFound();
      }
 else {
        hits=hitsInteger.longValue();
      }
      SpellingResult spellingResult=null;
      if (maxResultsForSuggest == null || hits <= maxResultsForSuggest) {
        SuggestMode suggestMode=SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX;
        if (onlyMorePopular) {
          suggestMode=SuggestMode.SUGGEST_MORE_POPULAR;
        }
 else         if (alternativeTermCount > 0) {
          suggestMode=SuggestMode.SUGGEST_ALWAYS;
        }
        IndexReader reader=rb.req.getSearcher().getIndexReader();
        SpellingOptions options=new SpellingOptions(tokens,reader,count,alternativeTermCount,suggestMode,extendedResults,accuracy,customParams);
        spellingResult=spellChecker.getSuggestions(options);
      }
 else {
        spellingResult=new SpellingResult();
      }
      boolean isCorrectlySpelled=hits > (maxResultsForSuggest == null ? 0 : maxResultsForSuggest);
      NamedList response=new SimpleOrderedMap();
      NamedList suggestions=toNamedList(shardRequest,spellingResult,q,extendedResults);
      response.add("suggestions",suggestions);
      if (extendedResults) {
        response.add("correctlySpelled",isCorrectlySpelled);
      }
      if (collate) {
        addCollationsToResponse(params,spellingResult,rb,q,response,spellChecker.isSuggestionsMayOverlap());
      }
      if (shardRequest) {
        addOriginalTermsToResponse(response,tokens);
      }
      rb.rsp.add("spellcheck",response);
    }
 else {
      throw new SolrException(SolrException.ErrorCode.NOT_FOUND,"Specified dictionaries do not exist: " + getDictionaryNameAsSingleString(getDictionaryNames(params)));
    }
  }
}
