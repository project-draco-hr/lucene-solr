{
  String className=(String)spellchecker.get("classname");
  if (className == null)   className=(String)spellchecker.get("class");
  if (className == null)   className=IndexBasedSpellChecker.class.getName();
  SolrResourceLoader loader=core.getResourceLoader();
  SolrSpellChecker checker=loader.newInstance(className,SolrSpellChecker.class);
  if (checker != null) {
    String dictionary=checker.init(spellchecker,core);
    if (dictionary != null) {
      boolean isDefault=dictionary.equals(SolrSpellChecker.DEFAULT_DICTIONARY_NAME);
      if (isDefault && !hasDefault) {
        hasDefault=true;
      }
 else       if (isDefault && hasDefault) {
        throw new RuntimeException("More than one dictionary is missing name.");
      }
      spellCheckers.put(dictionary,checker);
    }
 else {
      if (!hasDefault) {
        spellCheckers.put(SolrSpellChecker.DEFAULT_DICTIONARY_NAME,checker);
        hasDefault=true;
      }
 else {
        throw new RuntimeException("More than one dictionary is missing name.");
      }
    }
    core.registerFirstSearcherListener(new SpellCheckerListener(core,checker,false,false));
    boolean buildOnCommit=Boolean.parseBoolean((String)spellchecker.get("buildOnCommit"));
    boolean buildOnOptimize=Boolean.parseBoolean((String)spellchecker.get("buildOnOptimize"));
    if (buildOnCommit || buildOnOptimize) {
      LOG.info("Registering newSearcher listener for spellchecker: " + checker.getDictionaryName());
      core.registerNewSearcherListener(new SpellCheckerListener(core,checker,buildOnCommit,buildOnOptimize));
    }
  }
 else {
    throw new RuntimeException("Can't load spell checker: " + className);
  }
  return hasDefault;
}
