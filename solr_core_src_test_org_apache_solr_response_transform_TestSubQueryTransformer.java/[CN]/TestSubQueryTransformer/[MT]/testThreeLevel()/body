{
  List<String> asserts=new ArrayList<>();
  for (  String dept : new String[]{"Engineering","Support"}) {
    ArrayList<Object> deptWorkers=Collections.list(new StringTokenizer(h.query(req("q","dept_ss_dv:" + dept,"wt","csv","csv.header","false","fl","name_s_dv","rows","" + peopleMultiplier * 3,"sort","id desc"))));
    for (    int p : new int[]{1,peopleMultiplier}) {
      for (      int d : new int[]{1,deptMultiplier}) {
        int wPos=1;
        for (        Object mate : deptWorkers) {
          asserts.add("((/response/result/doc/str[@name='name_s_dv'][.='dave']/..)[" + p + "]"+ "/result[@name='subq1']/doc/str[@name='dept_id_s_dv'][.='"+ dept+ "']/..)["+ d+ "]"+ "/result[@name='neighbours']/doc["+ wPos+ "]/str[@name='name_s_dv'][.='"+ mate+ "']");
          wPos++;
        }
      }
    }
  }
  assertQ("dave works at both dept with other folks",req(new String[]{"q","name_s:dave","indent","true","fl","dept_ss_dv,name_s_dv,subq1:[subquery]","rows","" + peopleMultiplier,"subq1.q","{!terms f=dept_id_s v=$row.dept_ss_dv}","subq1.fl","dept_id_i_dv,text_t,dept_id_s_dv,neighbours:[subquery]","subq1.indent","true","subq1.rows","" + (deptMultiplier * 2),"subq1.neighbours.q",random().nextBoolean() ? "{!terms f=dept_ss_dv v=$row.dept_id_s_dv}" : "{!terms f=dept_is v=$row.dept_id_i_dv}","subq1.neighbours.fl","name_s_dv","subq1.neighbours.rows","" + peopleMultiplier * 3},"subq1.neighbours.sort","id desc"),asserts.toArray(new String[]{}));
}
