{
  TokenStream stream=new WhitespaceTokenizer(new StringReader("Des mot cl??s ?? LA CHA??NE ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ??" + " ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ??" + " ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ??? ???"));
  ASCIIFoldingFilter filter=new ASCIIFoldingFilter(stream);
  TermAttribute termAtt=(TermAttribute)filter.getAttribute(TermAttribute.class);
  assertTermEquals("Des",filter,termAtt);
  assertTermEquals("mot",filter,termAtt);
  assertTermEquals("cles",filter,termAtt);
  assertTermEquals("A",filter,termAtt);
  assertTermEquals("LA",filter,termAtt);
  assertTermEquals("CHAINE",filter,termAtt);
  assertTermEquals("A",filter,termAtt);
  assertTermEquals("A",filter,termAtt);
  assertTermEquals("A",filter,termAtt);
  assertTermEquals("A",filter,termAtt);
  assertTermEquals("A",filter,termAtt);
  assertTermEquals("A",filter,termAtt);
  assertTermEquals("AE",filter,termAtt);
  assertTermEquals("C",filter,termAtt);
  assertTermEquals("E",filter,termAtt);
  assertTermEquals("E",filter,termAtt);
  assertTermEquals("E",filter,termAtt);
  assertTermEquals("E",filter,termAtt);
  assertTermEquals("I",filter,termAtt);
  assertTermEquals("I",filter,termAtt);
  assertTermEquals("I",filter,termAtt);
  assertTermEquals("I",filter,termAtt);
  assertTermEquals("IJ",filter,termAtt);
  assertTermEquals("D",filter,termAtt);
  assertTermEquals("N",filter,termAtt);
  assertTermEquals("O",filter,termAtt);
  assertTermEquals("O",filter,termAtt);
  assertTermEquals("O",filter,termAtt);
  assertTermEquals("O",filter,termAtt);
  assertTermEquals("O",filter,termAtt);
  assertTermEquals("O",filter,termAtt);
  assertTermEquals("OE",filter,termAtt);
  assertTermEquals("TH",filter,termAtt);
  assertTermEquals("U",filter,termAtt);
  assertTermEquals("U",filter,termAtt);
  assertTermEquals("U",filter,termAtt);
  assertTermEquals("U",filter,termAtt);
  assertTermEquals("Y",filter,termAtt);
  assertTermEquals("Y",filter,termAtt);
  assertTermEquals("a",filter,termAtt);
  assertTermEquals("a",filter,termAtt);
  assertTermEquals("a",filter,termAtt);
  assertTermEquals("a",filter,termAtt);
  assertTermEquals("a",filter,termAtt);
  assertTermEquals("a",filter,termAtt);
  assertTermEquals("ae",filter,termAtt);
  assertTermEquals("c",filter,termAtt);
  assertTermEquals("e",filter,termAtt);
  assertTermEquals("e",filter,termAtt);
  assertTermEquals("e",filter,termAtt);
  assertTermEquals("e",filter,termAtt);
  assertTermEquals("i",filter,termAtt);
  assertTermEquals("i",filter,termAtt);
  assertTermEquals("i",filter,termAtt);
  assertTermEquals("i",filter,termAtt);
  assertTermEquals("ij",filter,termAtt);
  assertTermEquals("d",filter,termAtt);
  assertTermEquals("n",filter,termAtt);
  assertTermEquals("o",filter,termAtt);
  assertTermEquals("o",filter,termAtt);
  assertTermEquals("o",filter,termAtt);
  assertTermEquals("o",filter,termAtt);
  assertTermEquals("o",filter,termAtt);
  assertTermEquals("o",filter,termAtt);
  assertTermEquals("oe",filter,termAtt);
  assertTermEquals("ss",filter,termAtt);
  assertTermEquals("th",filter,termAtt);
  assertTermEquals("u",filter,termAtt);
  assertTermEquals("u",filter,termAtt);
  assertTermEquals("u",filter,termAtt);
  assertTermEquals("u",filter,termAtt);
  assertTermEquals("y",filter,termAtt);
  assertTermEquals("y",filter,termAtt);
  assertTermEquals("fi",filter,termAtt);
  assertTermEquals("fl",filter,termAtt);
  assertFalse(filter.incrementToken());
}
