{
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION,true);
  params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS,"pass");
  params.set(HttpClientUtil.PROP_BASIC_AUTH_USER,"user");
  params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,12345);
  params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS,true);
  params.set(HttpClientUtil.PROP_MAX_CONNECTIONS,22345);
  params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST,32345);
  params.set(HttpClientUtil.PROP_SO_TIMEOUT,42345);
  params.set(HttpClientUtil.PROP_USE_RETRY,false);
  DefaultHttpClient client=(DefaultHttpClient)HttpClientUtil.createClient(params);
  assertEquals(12345,HttpConnectionParams.getConnectionTimeout(client.getParams()));
  assertEquals(ThreadSafeClientConnManager.class,client.getConnectionManager().getClass());
  assertEquals(22345,((ThreadSafeClientConnManager)client.getConnectionManager()).getMaxTotal());
  assertEquals(32345,((ThreadSafeClientConnManager)client.getConnectionManager()).getDefaultMaxPerRoute());
  assertEquals(42345,HttpConnectionParams.getSoTimeout(client.getParams()));
  assertEquals(HttpClientUtil.NO_RETRY,client.getHttpRequestRetryHandler());
  assertEquals("pass",client.getCredentialsProvider().getCredentials(new AuthScope("127.0.0.1",1234)).getPassword());
  assertEquals("user",client.getCredentialsProvider().getCredentials(new AuthScope("127.0.0.1",1234)).getUserPrincipal().getName());
  assertEquals(true,client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));
  client.getConnectionManager().shutdown();
}
