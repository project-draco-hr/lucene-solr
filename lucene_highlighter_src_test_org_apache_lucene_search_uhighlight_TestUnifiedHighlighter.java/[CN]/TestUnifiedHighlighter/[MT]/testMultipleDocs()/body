{
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,indexAnalyzer);
  int numDocs=atLeast(100);
  for (int i=0; i < numDocs; i++) {
    Document doc=new Document();
    String content="the answer is " + i;
    if ((i & 1) == 0) {
      content+=" some more terms";
    }
    doc.add(new Field("body",content,fieldType));
    doc.add(newStringField("id","" + i,Field.Store.YES));
    iw.addDocument(doc);
    if (random().nextInt(10) == 2) {
      iw.commit();
    }
  }
  IndexReader ir=iw.getReader();
  iw.close();
  IndexSearcher searcher=newSearcher(ir);
  UnifiedHighlighter highlighter=new UnifiedHighlighter(searcher,indexAnalyzer);
  highlighter.setCacheFieldValCharsThreshold(random().nextInt(10) * 10);
  Query query=new TermQuery(new Term("body","answer"));
  TopDocs hits=searcher.search(query,numDocs);
  assertEquals(numDocs,hits.totalHits);
  String snippets[]=highlighter.highlight("body",query,hits);
  assertEquals(numDocs,snippets.length);
  for (int hit=0; hit < numDocs; hit++) {
    Document doc=searcher.doc(hits.scoreDocs[hit].doc);
    int id=Integer.parseInt(doc.get("id"));
    String expected="the <b>answer</b> is " + id;
    if ((id & 1) == 0) {
      expected+=" some more terms";
    }
    assertEquals(expected,snippets[hit]);
  }
  ir.close();
}
