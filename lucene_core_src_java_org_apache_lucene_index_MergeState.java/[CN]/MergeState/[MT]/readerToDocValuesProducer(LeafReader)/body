{
  return new DocValuesProducer(){
    @Override public NumericDocValues getNumeric(    FieldInfo field) throws IOException {
      return reader.getNumericDocValues(field.name);
    }
    @Override public BinaryDocValues getBinary(    FieldInfo field) throws IOException {
      return reader.getBinaryDocValues(field.name);
    }
    @Override public SortedDocValues getSorted(    FieldInfo field) throws IOException {
      return reader.getSortedDocValues(field.name);
    }
    @Override public SortedNumericDocValues getSortedNumeric(    FieldInfo field) throws IOException {
      return reader.getSortedNumericDocValues(field.name);
    }
    @Override public SortedSetDocValues getSortedSet(    FieldInfo field) throws IOException {
      return reader.getSortedSetDocValues(field.name);
    }
    @Override public Bits getDocsWithField(    FieldInfo field) throws IOException {
      return reader.getDocsWithField(field.name);
    }
    @Override public void checkIntegrity() throws IOException {
    }
    @Override public void close(){
    }
    @Override public long ramBytesUsed(){
      return 0;
    }
    @Override public Iterable<? extends Accountable> getChildResources(){
      return Collections.emptyList();
    }
  }
;
}
