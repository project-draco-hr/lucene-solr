{
  int numReaders=readers.size();
  docMaps=new DocMap[numReaders];
  docBase=new int[numReaders];
  maxDocs=new int[numReaders];
  fieldsProducers=new FieldsProducer[numReaders];
  normsProducers=new NormsProducer[numReaders];
  storedFieldsReaders=new StoredFieldsReader[numReaders];
  termVectorsReaders=new TermVectorsReader[numReaders];
  docValuesProducers=new DocValuesProducer[numReaders];
  fieldInfos=new FieldInfos[numReaders];
  liveDocs=new Bits[numReaders];
  for (int i=0; i < numReaders; i++) {
    final CodecReader reader=readers.get(i);
    maxDocs[i]=reader.maxDoc();
    liveDocs[i]=reader.getLiveDocs();
    fieldInfos[i]=reader.getFieldInfos();
    normsProducers[i]=reader.getNormsReader();
    if (normsProducers[i] != null) {
      normsProducers[i]=normsProducers[i].getMergeInstance();
    }
    docValuesProducers[i]=reader.getDocValuesReader();
    if (docValuesProducers[i] != null) {
      docValuesProducers[i]=docValuesProducers[i].getMergeInstance();
    }
    storedFieldsReaders[i]=reader.getFieldsReader();
    if (storedFieldsReaders[i] != null) {
      storedFieldsReaders[i]=storedFieldsReaders[i].getMergeInstance();
    }
    termVectorsReaders[i]=reader.getTermVectorsReader();
    if (termVectorsReaders[i] != null) {
      termVectorsReaders[i]=termVectorsReaders[i].getMergeInstance();
    }
    fieldsProducers[i]=reader.getPostingsReader().getMergeInstance();
  }
  this.segmentInfo=segmentInfo;
  this.infoStream=infoStream;
  setDocMaps(readers);
}
