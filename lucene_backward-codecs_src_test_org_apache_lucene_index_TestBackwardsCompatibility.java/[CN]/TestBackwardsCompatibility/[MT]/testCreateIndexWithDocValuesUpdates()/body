{
  Path indexDir=getIndexDir().resolve("dvupdates");
  Files.deleteIfExists(indexDir);
  Directory dir=newFSDirectory(indexDir);
  IndexWriterConfig conf=new IndexWriterConfig(new MockAnalyzer(random())).setUseCompoundFile(false).setMergePolicy(NoMergePolicy.INSTANCE);
  IndexWriter writer=new IndexWriter(dir,conf);
  for (int i=0; i < 30; i++) {
    Document doc=new Document();
    doc.add(new StringField("id","" + i,Field.Store.NO));
    doc.add(new NumericDocValuesField("ndv1",i));
    doc.add(new NumericDocValuesField("ndv1_c",i * 2));
    doc.add(new NumericDocValuesField("ndv2",i * 3));
    doc.add(new NumericDocValuesField("ndv2_c",i * 6));
    doc.add(new BinaryDocValuesField("bdv1",TestDocValuesUpdatesOnOldSegments.toBytes(i)));
    doc.add(new BinaryDocValuesField("bdv1_c",TestDocValuesUpdatesOnOldSegments.toBytes(i * 2)));
    doc.add(new BinaryDocValuesField("bdv2",TestDocValuesUpdatesOnOldSegments.toBytes(i * 3)));
    doc.add(new BinaryDocValuesField("bdv2_c",TestDocValuesUpdatesOnOldSegments.toBytes(i * 6)));
    writer.addDocument(doc);
    if ((i + 1) % 10 == 0) {
      writer.commit();
    }
  }
  updateNumeric(writer,"10","ndv1","ndv1_c",100L);
  updateBinary(writer,"11","bdv1","bdv1_c",100L);
  writer.commit();
  updateNumeric(writer,"20","ndv1","ndv1_c",100L);
  updateBinary(writer,"21","bdv1","bdv1_c",100L);
  writer.commit();
  updateNumeric(writer,"22","ndv1","ndv1_c",200L);
  writer.commit();
  writer.close();
  dir.close();
}
