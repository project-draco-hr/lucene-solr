{
  SegmentInfos infos=SegmentInfos.readLatestCommit(dir);
  if (nameVersion.onOrAfter(Version.LUCENE_5_3_0)) {
    assertEquals(nameVersion,infos.getCommitLuceneVersion());
  }
  assertEquals(nameVersion,infos.getMinSegmentLuceneVersion());
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()));
  for (int i=0; i < 10; i++) {
    addDoc(writer,35 + i);
  }
  final int expected=45;
  assertEquals("wrong doc count",expected,writer.numDocs());
  writer.close();
  IndexReader reader=DirectoryReader.open(dir);
  IndexSearcher searcher=newSearcher(reader);
  ScoreDoc[] hits=searcher.search(new TermQuery(new Term("content","aaa")),1000).scoreDocs;
  StoredDocument d=searcher.getIndexReader().document(hits[0].doc);
  assertEquals("wrong first document","0",d.get("id"));
  doTestHits(hits,44,searcher.getIndexReader());
  reader.close();
  writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()));
  writer.forceMerge(1);
  writer.close();
  reader=DirectoryReader.open(dir);
  searcher=newSearcher(reader);
  hits=searcher.search(new TermQuery(new Term("content","aaa")),1000).scoreDocs;
  assertEquals("wrong number of hits",44,hits.length);
  d=searcher.doc(hits[0].doc);
  doTestHits(hits,44,searcher.getIndexReader());
  assertEquals("wrong first document","0",d.get("id"));
  reader.close();
}
