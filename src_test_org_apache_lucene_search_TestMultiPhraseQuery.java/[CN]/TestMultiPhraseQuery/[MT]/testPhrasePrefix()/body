{
  RAMDirectory indexStore=new RAMDirectory();
  IndexWriter writer=new IndexWriter(indexStore,new SimpleAnalyzer(),true);
  Document doc1=new Document();
  Document doc2=new Document();
  Document doc3=new Document();
  Document doc4=new Document();
  Document doc5=new Document();
  doc1.add(new Field("body","blueberry pie",Field.Store.YES,Field.Index.TOKENIZED));
  doc2.add(new Field("body","blueberry strudel",Field.Store.YES,Field.Index.TOKENIZED));
  doc3.add(new Field("body","blueberry pizza",Field.Store.YES,Field.Index.TOKENIZED));
  doc4.add(new Field("body","blueberry chewing gum",Field.Store.YES,Field.Index.TOKENIZED));
  doc4.add(new Field("body","bluebird pizza",Field.Store.YES,Field.Index.TOKENIZED));
  doc5.add(new Field("body","piccadilly circus",Field.Store.YES,Field.Index.TOKENIZED));
  writer.addDocument(doc1);
  writer.addDocument(doc2);
  writer.addDocument(doc3);
  writer.addDocument(doc4);
  writer.addDocument(doc5);
  writer.optimize();
  writer.close();
  IndexSearcher searcher=new IndexSearcher(indexStore);
  MultiPhraseQuery query1=new MultiPhraseQuery();
  MultiPhraseQuery query2=new MultiPhraseQuery();
  query1.add(new Term("body","blueberry"));
  query2.add(new Term("body","strawberry"));
  LinkedList termsWithPrefix=new LinkedList();
  IndexReader ir=IndexReader.open(indexStore);
  String prefix="pi";
  TermEnum te=ir.terms(new Term("body",prefix + "*"));
  do {
    if (te.term().text().startsWith(prefix)) {
      termsWithPrefix.add(te.term());
    }
  }
 while (te.next());
  query1.add((Term[])termsWithPrefix.toArray(new Term[0]));
  assertEquals("body:\"blueberry (piccadilly pie pizza)\"",query1.toString());
  query2.add((Term[])termsWithPrefix.toArray(new Term[0]));
  assertEquals("body:\"strawberry (piccadilly pie pizza)\"",query2.toString());
  Hits result;
  result=searcher.search(query1);
  assertEquals(2,result.length());
  result=searcher.search(query2);
  assertEquals(0,result.length());
  MultiPhraseQuery query3=new MultiPhraseQuery();
  termsWithPrefix.clear();
  prefix="blue";
  te=ir.terms(new Term("body",prefix + "*"));
  do {
    if (te.term().text().startsWith(prefix)) {
      termsWithPrefix.add(te.term());
    }
  }
 while (te.next());
  query3.add((Term[])termsWithPrefix.toArray(new Term[0]));
  query3.add(new Term("body","pizza"));
  result=searcher.search(query3);
  assertEquals(2,result.length());
  assertEquals("body:\"(blueberry bluebird) pizza\"",query3.toString());
  MultiPhraseQuery query4=new MultiPhraseQuery();
  try {
    query4.add(new Term("field1","foo"));
    query4.add(new Term("field2","foobar"));
    fail();
  }
 catch (  IllegalArgumentException e) {
  }
}
