{
  final Directory dir1=newDirectory();
  TestIndexReaderReopen.createIndex(random,dir1,false);
  IndexReader origReader=IndexReader.open(dir1,false);
  SegmentReader origSegmentReader=getOnlySegmentReader(origReader);
  assertNull(origSegmentReader.deletedDocsRef);
  origReader.deleteDocument(1);
  assertDelDocsRefCountEquals(1,origSegmentReader);
  IndexReader clonedReader=(IndexReader)origReader.clone();
  SegmentReader clonedSegmentReader=getOnlySegmentReader(clonedReader);
  assertDelDocsRefCountEquals(2,origSegmentReader);
  clonedReader.deleteDocument(2);
  assertDelDocsRefCountEquals(1,origSegmentReader);
  assertDelDocsRefCountEquals(1,clonedSegmentReader);
  assertTrue(origSegmentReader.deletedDocs != clonedSegmentReader.deletedDocs);
  assertDocDeleted(origSegmentReader,clonedSegmentReader,1);
  final Bits delDocs=origSegmentReader.getDeletedDocs();
  assertTrue(delDocs == null || !delDocs.get(2));
  assertTrue(clonedSegmentReader.getDeletedDocs().get(2));
  try {
    origReader.deleteDocument(4);
    fail("expected exception");
  }
 catch (  LockObtainFailedException lbfe) {
  }
  origReader.close();
  clonedReader.deleteDocument(3);
  clonedReader.flush();
  assertDelDocsRefCountEquals(1,clonedSegmentReader);
  IndexReader reopenedReader=clonedReader.reopen();
  IndexReader cloneReader2=(IndexReader)reopenedReader.clone();
  SegmentReader cloneSegmentReader2=getOnlySegmentReader(cloneReader2);
  assertDelDocsRefCountEquals(2,cloneSegmentReader2);
  clonedReader.close();
  reopenedReader.close();
  cloneReader2.close();
  dir1.close();
}
