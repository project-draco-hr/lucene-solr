{
  LightAutomaton.Builder builder=new LightAutomaton.Builder();
  builder.createState();
  builder.setAccept(0,true);
  builder.copy(a);
  LightAutomaton.Transition t=new LightAutomaton.Transition();
  int count=a.initTransition(0,t);
  for (int i=0; i < count; i++) {
    a.getNextTransition(t);
    builder.addTransition(0,t.dest + 1,t.min,t.max);
  }
  int numStates=a.getNumStates();
  for (int s=0; s < numStates; s++) {
    if (a.isAccept(s)) {
      count=a.initTransition(0,t);
      for (int i=0; i < count; i++) {
        a.getNextTransition(t);
        builder.addTransition(s + 1,t.dest + 1,t.min,t.max);
      }
    }
  }
  return builder.finish();
}
