{
  int numStates=a.getNumStates();
  BitSet liveSet=getLiveStates(a);
  int[] map=new int[numStates];
  LightAutomaton result=new LightAutomaton();
  for (int i=0; i < numStates; i++) {
    if (liveSet.get(i)) {
      map[i]=result.createState();
      result.setAccept(map[i],a.isAccept(i));
    }
  }
  Transition t=new Transition();
  for (int i=0; i < numStates; i++) {
    if (liveSet.get(i)) {
      int numTransitions=a.initTransition(i,t);
      for (int j=0; j < numTransitions; j++) {
        a.getNextTransition(t);
        if (liveSet.get(t.dest)) {
          result.addTransition(map[i],map[t.dest],t.min,t.max);
        }
      }
    }
  }
  result.finish();
  return result;
}
