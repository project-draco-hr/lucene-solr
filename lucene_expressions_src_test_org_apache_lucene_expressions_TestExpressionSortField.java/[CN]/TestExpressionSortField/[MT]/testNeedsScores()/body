{
  SimpleBindings bindings=new SimpleBindings();
  Expression exprA=JavascriptCompiler.compile("_score");
  Expression exprB=JavascriptCompiler.compile("0");
  Expression exprC=JavascriptCompiler.compile("intfield");
  Expression exprD=JavascriptCompiler.compile("_score + 0");
  Expression exprE=JavascriptCompiler.compile("intfield + 0");
  Expression exprF=JavascriptCompiler.compile("a + 0");
  Expression exprG=JavascriptCompiler.compile("e + 0");
  Expression exprH=JavascriptCompiler.compile("b / c + e * g - sqrt(f)");
  Expression exprI=JavascriptCompiler.compile("b / c + e * g");
  bindings.add(new SortField("_score",SortField.Type.SCORE));
  bindings.add(new SortField("intfield",SortField.Type.INT));
  bindings.add("a",exprA);
  bindings.add("b",exprB);
  bindings.add("c",exprC);
  bindings.add("d",exprD);
  bindings.add("e",exprE);
  bindings.add("f",exprF);
  bindings.add("g",exprG);
  bindings.add("h",exprH);
  bindings.add("i",exprI);
  assertTrue(exprA.getSortField(bindings,true).needsScores());
  assertFalse(exprB.getSortField(bindings,true).needsScores());
  assertFalse(exprC.getSortField(bindings,true).needsScores());
  assertTrue(exprD.getSortField(bindings,true).needsScores());
  assertFalse(exprE.getSortField(bindings,true).needsScores());
  assertTrue(exprF.getSortField(bindings,true).needsScores());
  assertFalse(exprG.getSortField(bindings,true).needsScores());
  assertTrue(exprH.getSortField(bindings,true).needsScores());
  assertFalse(exprI.getSortField(bindings,false).needsScores());
}
