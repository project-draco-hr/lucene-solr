{
  assertNextEvent(js,JSONParser.OBJECT_START);
  DeleteUpdateCommand cmd=new DeleteUpdateCommand();
  cmd.fromCommitted=cmd.fromPending=true;
  while (true) {
    int ev=js.nextEvent();
    if (ev == JSONParser.STRING) {
      String key=js.getString();
      if (js.wasKey()) {
        if ("id".equals(key)) {
          cmd.id=js.getString();
        }
 else         if ("query".equals(key)) {
          cmd.query=js.getString();
        }
 else {
          throw new IOException("Unknown key: " + key + " ["+ js.getPosition()+ "]");
        }
      }
 else {
        throw new IOException("invalid string: " + key + " at ["+ js.getPosition()+ "]");
      }
    }
 else     if (ev == JSONParser.OBJECT_END) {
      if (cmd.id == null && cmd.query == null) {
        throw new IOException("Missing id or query for delete [" + js.getPosition() + "]");
      }
      return cmd;
    }
 else {
      throw new IOException("Got: " + JSONParser.getEventString(ev) + " at ["+ js.getPosition()+ "]");
    }
  }
}
