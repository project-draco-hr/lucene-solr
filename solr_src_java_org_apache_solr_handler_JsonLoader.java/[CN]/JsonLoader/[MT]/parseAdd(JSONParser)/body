{
  assertNextEvent(js,JSONParser.OBJECT_START);
  AddUpdateCommand cmd=new AddUpdateCommand();
  cmd.allowDups=false;
  float boost=1.0f;
  while (true) {
    int ev=js.nextEvent();
    if (ev == JSONParser.STRING) {
      if (js.wasKey()) {
        String key=js.getString();
        if ("doc".equals(key)) {
          if (cmd.solrDoc != null) {
            throw new IOException("multiple docs in same add command");
          }
          ev=assertNextEvent(js,JSONParser.OBJECT_START);
          cmd.solrDoc=parseDoc(ev,js);
        }
 else         if (XmlUpdateRequestHandler.OVERWRITE.equals(key)) {
          cmd.allowDups=!js.getBoolean();
        }
 else         if (XmlUpdateRequestHandler.COMMIT_WITHIN.equals(key)) {
          cmd.commitWithin=(int)js.getLong();
        }
 else         if ("boost".equals(key)) {
          boost=Float.parseFloat(js.getNumberChars().toString());
        }
 else {
          throw new IOException("Unknown key: " + key + " ["+ js.getPosition()+ "]");
        }
      }
 else {
        throw new IOException("Should be a key " + " at [" + js.getPosition() + "]");
      }
    }
 else     if (ev == JSONParser.OBJECT_END) {
      if (cmd.solrDoc == null) {
        throw new IOException("missing solr document. " + js.getPosition());
      }
      cmd.solrDoc.setDocumentBoost(boost);
      cmd.overwriteCommitted=!cmd.allowDups;
      cmd.overwritePending=!cmd.allowDups;
      return cmd;
    }
 else {
      throw new IOException("Got: " + JSONParser.getEventString(ev) + " at ["+ js.getPosition()+ "]");
    }
  }
}
