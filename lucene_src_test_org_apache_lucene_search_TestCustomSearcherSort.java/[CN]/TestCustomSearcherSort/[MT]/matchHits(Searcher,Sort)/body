{
  ScoreDoc[] hitsByRank=searcher.search(query,null,1000).scoreDocs;
  checkHits(hitsByRank,"Sort by rank: ");
  Map<Integer,Integer> resultMap=new TreeMap<Integer,Integer>();
  for (int hitid=0; hitid < hitsByRank.length; ++hitid) {
    resultMap.put(Integer.valueOf(hitsByRank[hitid].doc),Integer.valueOf(hitid));
  }
  ScoreDoc[] resultSort=searcher.search(query,null,1000,sort).scoreDocs;
  checkHits(resultSort,"Sort by custom criteria: ");
  for (int hitid=0; hitid < resultSort.length; ++hitid) {
    Integer idHitDate=Integer.valueOf(resultSort[hitid].doc);
    if (!resultMap.containsKey(idHitDate)) {
      log("ID " + idHitDate + " not found. Possibliy a duplicate.");
    }
    assertTrue(resultMap.containsKey(idHitDate));
    resultMap.remove(idHitDate);
  }
  if (resultMap.size() == 0) {
  }
 else {
    log("Couldn't match " + resultMap.size() + " hits.");
  }
  assertEquals(resultMap.size(),0);
}
