{
  SpoofIndexSearcher searcher=new SpoofIndexSearcher(stats);
  TermContext tc=new TermContext(searcher.getIndexReader().getTopReaderContext(),new OrdTermState(),0,stats.getDocFreq(),stats.getTotalTermFreq());
  for (  SimilarityBase sim : sims) {
    BasicStats realStats=(BasicStats)sim.computeStats(new SpoofIndexSearcher(stats),"spoof",stats.getTotalBoost(),tc);
    float score=sim.score(realStats,freq,docLen);
    float explScore=sim.explain(realStats,1,new Explanation(freq,"freq"),docLen).getValue();
    assertFalse("Score infinite: " + sim.toString(),Float.isInfinite(score));
    assertFalse("Score NaN: " + sim.toString(),Float.isNaN(score));
    assertTrue("Score negative: " + sim.toString(),score >= 0);
    assertEquals("score() and explain() return different values: " + sim.toString(),score,explScore,FLOAT_EPSILON);
  }
}
