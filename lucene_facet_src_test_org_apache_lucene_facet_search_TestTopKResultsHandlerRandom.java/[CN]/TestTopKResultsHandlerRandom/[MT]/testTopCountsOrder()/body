{
  for (  int partitionSize : partitionSizes) {
    initIndex(partitionSize);
    List<FacetResult> facetResults=countFacets(partitionSize,100000,false);
    assertCountsAndCardinality(facetCountsTruth(),facetResults);
    facetResults=countFacets(partitionSize,100000,true);
    assertCountsAndCardinality(facetCountsTruth(),facetResults);
    List<FacetResult> allFacetResults=countFacets(partitionSize,100000,false);
    HashMap<String,Integer> all=new HashMap<String,Integer>();
    int maxNumNodes=0;
    int k=0;
    for (    FacetResult fr : allFacetResults) {
      FacetResultNode topResNode=fr.getFacetResultNode();
      maxNumNodes=Math.max(maxNumNodes,topResNode.subResults.size());
      int prevCount=Integer.MAX_VALUE;
      int pos=0;
      for (      FacetResultNode frn : topResNode.subResults) {
        assertTrue("wrong counts order: prev=" + prevCount + " curr="+ frn.value,prevCount >= frn.value);
        prevCount=(int)frn.value;
        String key=k + "--" + frn.label+ "=="+ frn.value;
        if (VERBOSE) {
          System.out.println(frn.label + " - " + frn.value+ "  "+ key+ "  "+ pos);
        }
        all.put(key,pos++);
      }
      k++;
    }
    for (int n=1; n < maxNumNodes; n++) {
      if (VERBOSE) {
        System.out.println("-------  verify for " + n + " top results");
      }
      List<FacetResult> someResults=countFacets(partitionSize,n,false);
      k=0;
      for (      FacetResult fr : someResults) {
        FacetResultNode topResNode=fr.getFacetResultNode();
        assertTrue("too many results: n=" + n + " but got "+ topResNode.subResults.size(),n >= topResNode.subResults.size());
        int pos=0;
        for (        FacetResultNode frn : topResNode.subResults) {
          String key=k + "--" + frn.label+ "=="+ frn.value;
          if (VERBOSE) {
            System.out.println(frn.label + " - " + frn.value+ "  "+ key+ "  "+ pos);
          }
          Integer origPos=all.get(key);
          assertNotNull("missing in all results: " + frn,origPos);
          assertEquals("wrong order of sub-results!",pos++,origPos.intValue());
        }
        k++;
      }
    }
    closeAll();
  }
}
