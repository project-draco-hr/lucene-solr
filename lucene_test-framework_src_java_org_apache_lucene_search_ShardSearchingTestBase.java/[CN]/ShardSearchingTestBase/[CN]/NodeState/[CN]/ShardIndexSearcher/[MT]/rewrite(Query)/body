{
  final Query rewritten=super.rewrite(original);
  final Set<Term> terms=new HashSet<Term>();
  rewritten.extractTerms(terms);
  for (int nodeID=0; nodeID < nodeVersions.length; nodeID++) {
    if (nodeID == myNodeID) {
      continue;
    }
    final Set<Term> missing=new HashSet<Term>();
    for (    Term term : terms) {
      final TermAndShardVersion key=new TermAndShardVersion(nodeID,nodeVersions[nodeID],term);
      if (!termStatsCache.containsKey(key)) {
        missing.add(term);
      }
    }
    if (missing.size() != 0) {
      for (      Map.Entry<Term,TermStatistics> ent : getNodeTermStats(missing,nodeID,nodeVersions[nodeID]).entrySet()) {
        final TermAndShardVersion key=new TermAndShardVersion(nodeID,nodeVersions[nodeID],ent.getKey());
        termStatsCache.put(key,ent.getValue());
      }
    }
  }
  return rewritten;
}
