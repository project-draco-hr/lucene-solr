{
  CategoryPath[] testCategories={new CategoryPath("hi","there","man"),new CategoryPath("hello"),new CategoryPath("what's","up"),new CategoryPath(),new CategoryPath("another","example"),new CategoryPath(),new CategoryPath()};
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < testCategories.length; i++) {
    testCategories[i].serializeAppendTo(sb);
  }
  CategoryPath tmp=new CategoryPath();
  int offset=0;
  for (int i=0; i < testCategories.length; i++) {
    assertTrue(testCategories[i].equalsToSerialized(sb,offset));
    assertFalse(new CategoryPath("Hello","world").equalsToSerialized(sb,offset));
    assertFalse(new CategoryPath("world").equalsToSerialized(sb,offset));
    assertEquals(testCategories[i].hashCode(),CategoryPath.hashCodeOfSerialized(sb,offset));
    offset=tmp.setFromSerialized(sb,offset);
    assertEquals(testCategories[i],tmp);
  }
  assertEquals(offset,sb.length());
  sb=new StringBuilder();
  CategoryPath p=new CategoryPath();
  for (int i=0; i < 1000; i++) {
    p.add(Integer.toString(i));
  }
  p.serializeAppendTo(sb);
  p.serializeAppendTo(sb);
  p.serializeAppendTo(sb);
  offset=0;
  assertTrue(p.equalsToSerialized(sb,offset));
  assertEquals(p.hashCode(),CategoryPath.hashCodeOfSerialized(sb,offset));
  offset=tmp.setFromSerialized(sb,offset);
  assertEquals(p,tmp);
  assertTrue(p.equalsToSerialized(sb,offset));
  assertEquals(p.hashCode(),CategoryPath.hashCodeOfSerialized(sb,offset));
  offset=tmp.setFromSerialized(sb,offset);
  assertEquals(p,tmp);
  assertTrue(p.equalsToSerialized(sb,offset));
  assertEquals(p.hashCode(),CategoryPath.hashCodeOfSerialized(sb,offset));
  offset=tmp.setFromSerialized(sb,offset);
  assertEquals(p,tmp);
  assertEquals(offset,sb.length());
  p=new CategoryPath();
  for (int i=0; i < 783; i++) {
    p.add(Integer.toString(i));
  }
  int[] prefixLengths={0,574,782,783,784,-1};
  for (  int prefixLen : prefixLengths) {
    sb=new StringBuilder();
    p.serializeAppendTo(prefixLen,sb);
    assertTrue(new CategoryPath(p,prefixLen).equalsToSerialized(sb,0));
  }
  for (  int prefixLen : prefixLengths) {
    sb=new StringBuilder();
    new CategoryPath(p,prefixLen).serializeAppendTo(sb);
    assertTrue(p.equalsToSerialized(prefixLen,sb,0));
  }
  sb=new StringBuilder();
  new CategoryPath().serializeAppendTo(sb);
  assertTrue(new CategoryPath().equalsToSerialized(0,sb,0));
  assertTrue(new CategoryPath("a","b").equalsToSerialized(0,sb,0));
  assertFalse(new CategoryPath("a","b").equalsToSerialized(1,sb,0));
  sb=new StringBuilder();
  new CategoryPath("a","b").serializeAppendTo(sb);
  assertFalse(new CategoryPath().equalsToSerialized(0,sb,0));
  assertFalse(new CategoryPath("a").equalsToSerialized(0,sb,0));
  assertFalse(new CategoryPath("a").equalsToSerialized(1,sb,0));
  assertFalse(new CategoryPath("a","b").equalsToSerialized(0,sb,0));
  assertFalse(new CategoryPath("a","b").equalsToSerialized(1,sb,0));
  assertTrue(new CategoryPath("a","b").equalsToSerialized(2,sb,0));
  assertTrue(new CategoryPath("a","b","c").equalsToSerialized(2,sb,0));
  assertFalse(new CategoryPath("z","b","c").equalsToSerialized(2,sb,0));
  assertFalse(new CategoryPath("aa","b","c").equalsToSerialized(2,sb,0));
}
