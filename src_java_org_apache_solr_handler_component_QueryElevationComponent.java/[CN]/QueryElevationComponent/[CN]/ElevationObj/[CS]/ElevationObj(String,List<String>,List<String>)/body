{
  this.text=qstr;
  this.analyzed=getAnalyzedQuery(this.text);
  this.include=new BooleanQuery();
  this.include.setBoost(0);
  this.priority=new HashMap<String,Integer>();
  int max=elevate.size() + 5;
  for (  String id : elevate) {
    TermQuery tq=new TermQuery(new Term(idField,id));
    include.add(tq,BooleanClause.Occur.SHOULD);
    this.priority.put(id,max--);
  }
  if (exclude == null || exclude.isEmpty()) {
    this.exclude=null;
  }
 else {
    this.exclude=new BooleanClause[exclude.size()];
    for (int i=0; i < exclude.size(); i++) {
      TermQuery tq=new TermQuery(new Term(idField,exclude.get(i)));
      this.exclude[i]=new BooleanClause(tq,BooleanClause.Occur.MUST_NOT);
    }
  }
}
