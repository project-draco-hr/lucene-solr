{
  Random random=random();
  for (int iter=0; iter < 5 * RANDOM_MULTIPLIER; iter++) {
    final int blockBits=_TestUtil.nextInt(random,2,20);
    final int blockSize=1 << blockBits;
    final PagedBytes p=new PagedBytes(blockBits);
    final List<Integer> addresses=new ArrayList<Integer>();
    final List<BytesRef> answers=new ArrayList<BytesRef>();
    int totBytes=0;
    while (totBytes < 10000000 && answers.size() < 100000) {
      final int len=random.nextInt(Math.min(blockSize - 2,32768));
      final BytesRef b=new BytesRef();
      b.bytes=new byte[len];
      b.length=len;
      b.offset=0;
      random.nextBytes(b.bytes);
      answers.add(b);
      addresses.add((int)p.copyUsingLengthPrefix(b));
      totBytes+=len;
    }
    final PagedBytes.Reader reader=p.freeze(random.nextBoolean());
    final BytesRef slice=new BytesRef();
    for (int idx=0; idx < answers.size(); idx++) {
      reader.fillSliceWithPrefix(slice,addresses.get(idx));
      assertEquals(answers.get(idx),slice);
    }
  }
}
