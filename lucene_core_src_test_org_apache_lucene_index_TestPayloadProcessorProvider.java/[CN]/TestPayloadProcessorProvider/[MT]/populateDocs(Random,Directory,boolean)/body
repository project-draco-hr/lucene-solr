{
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random,MockTokenizer.WHITESPACE,false)).setMergePolicy(newLogMergePolicy(10)));
  TokenStream payloadTS1=new PayloadTokenStream("p1");
  TokenStream payloadTS2=new PayloadTokenStream("p2");
  FieldType customType=new FieldType(TextField.TYPE_NOT_STORED);
  customType.setOmitNorms(true);
  for (int i=0; i < NUM_DOCS; i++) {
    Document doc=new Document();
    doc.add(newField("id","doc" + i,customType));
    doc.add(newTextField("content","doc content " + i,Field.Store.NO));
    if (random.nextBoolean()) {
      doc.add(new TextField("p",payloadTS1));
      doc.add(new TextField("p",payloadTS2));
    }
 else {
      FieldType type=new FieldType(TextField.TYPE_NOT_STORED);
      type.setStoreTermVectors(true);
      type.setStoreTermVectorPositions(true);
      type.setStoreTermVectorPayloads(true);
      type.setStoreTermVectorOffsets(random.nextBoolean());
      doc.add(new Field("p",payloadTS1,type));
      doc.add(new Field("p",payloadTS2,type));
    }
    writer.addDocument(doc);
    if (multipleCommits && (i % 4 == 0)) {
      writer.commit();
    }
  }
  writer.close();
}
