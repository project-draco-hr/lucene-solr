{
  final double INCR=45;
  final double Y=10;
  for (double left=-180; left <= 180; left+=INCR) {
    for (double right=left; right - left <= 360; right+=INCR) {
      Rectangle r=ctx.makeRect(left,right,-Y,Y);
      for (double left2=left; left2 <= right; left2+=INCR) {
        for (double right2=left2; right2 <= right; right2+=INCR) {
          Rectangle r2=ctx.makeRect(left2,right2,-Y,Y);
          assertRelation(null,SpatialRelation.CONTAINS,r,r2);
        }
      }
      assertRelation(null,SpatialRelation.CONTAINS,r,ctx.makePoint(left,Y));
      for (double left2=right + INCR; left2 - left < 360; left2+=INCR) {
        for (double right2=left2; right2 - left < 360; right2+=INCR) {
          Rectangle r2=ctx.makeRect(left2,right2,-Y,Y);
          assertRelation(null,SpatialRelation.DISJOINT,r,r2);
          assertRelation(null,SpatialRelation.DISJOINT,r,ctx.makePoint(left2,Y));
        }
      }
      for (double left2=left + INCR; left2 <= right; left2+=INCR) {
        for (double right2=right + INCR; right2 - left < 360; right2+=INCR) {
          Rectangle r2=ctx.makeRect(left2,right2,-Y,Y);
          assertRelation(null,SpatialRelation.INTERSECTS,r,r2);
        }
      }
    }
  }
}
