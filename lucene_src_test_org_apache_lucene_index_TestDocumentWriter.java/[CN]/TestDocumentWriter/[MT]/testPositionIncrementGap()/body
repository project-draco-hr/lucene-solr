{
  Analyzer analyzer=new Analyzer(){
    @Override public TokenStream tokenStream(    String fieldName,    Reader reader){
      return new MockTokenizer(reader,MockTokenizer.WHITESPACE,false);
    }
    @Override public int getPositionIncrementGap(    String fieldName){
      return 500;
    }
  }
;
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,analyzer));
  Document doc=new Document();
  doc.add(newField("repeated","repeated one",Field.Store.YES,Field.Index.ANALYZED));
  doc.add(newField("repeated","repeated two",Field.Store.YES,Field.Index.ANALYZED));
  writer.addDocument(doc);
  writer.commit();
  SegmentInfo info=writer.newestSegment();
  writer.close();
  SegmentReader reader=SegmentReader.get(true,info,IndexReader.DEFAULT_TERMS_INDEX_DIVISOR);
  DocsAndPositionsEnum termPositions=MultiFields.getTermPositionsEnum(reader,MultiFields.getDeletedDocs(reader),"repeated",new BytesRef("repeated"));
  assertTrue(termPositions.nextDoc() != termPositions.NO_MORE_DOCS);
  int freq=termPositions.freq();
  assertEquals(2,freq);
  assertEquals(0,termPositions.nextPosition());
  assertEquals(502,termPositions.nextPosition());
  reader.close();
}
