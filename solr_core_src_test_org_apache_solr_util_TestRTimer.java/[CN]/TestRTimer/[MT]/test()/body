{
  RTimer rt=new MockRTimer(), subt, st;
  MockTimerImpl.incrementSystemTime(100);
  assertEquals(100,(int)rt.getTime());
  subt=rt.sub("sub1");
  MockTimerImpl.incrementSystemTime(50);
  assertEquals(150,(int)rt.getTime());
  assertEquals(50,(int)subt.getTime());
  st=subt.sub("sub1.1");
  st.resume();
  MockTimerImpl.incrementSystemTime(10);
  assertEquals(10,(int)st.getTime());
  st.pause();
  MockTimerImpl.incrementSystemTime(50);
  assertEquals(10,(int)st.getTime());
  st.resume();
  MockTimerImpl.incrementSystemTime(10);
  st.pause();
  subt.stop();
  rt.stop();
  assertEquals(20,(int)st.getTime());
  assertEquals(120,(int)subt.getTime());
  assertEquals(220,(int)rt.getTime());
  NamedList nl=rt.asNamedList();
  assertEquals(220,((Double)nl.get("time")).intValue());
  NamedList sub1nl=(NamedList)nl.get("sub1");
  assertNotNull(sub1nl);
  assertEquals(120,((Double)sub1nl.get("time")).intValue());
  NamedList sub11nl=(NamedList)sub1nl.get("sub1.1");
  assertNotNull(sub11nl);
  assertEquals(20,((Double)sub11nl.get("time")).intValue());
}
