{
  AttributeSource src=new AttributeSource();
  TermAttribute termAtt=(TermAttribute)src.addAttribute(TermAttribute.class);
  TypeAttribute typeAtt=(TypeAttribute)src.addAttribute(TypeAttribute.class);
  termAtt.setTermBuffer("TestTerm");
  typeAtt.setType("TestType");
  assertEquals("Attributes should appear in original order","(" + termAtt.toString() + ","+ typeAtt.toString()+ ")",src.toString());
  Iterator it=src.getAttributeImplsIterator();
  assertTrue("Iterator should have 2 attributes left",it.hasNext());
  assertSame("First AttributeImpl from iterator should be termAtt",termAtt,it.next());
  assertTrue("Iterator should have 1 attributes left",it.hasNext());
  assertSame("Second AttributeImpl from iterator should be typeAtt",typeAtt,it.next());
  assertFalse("Iterator should have 0 attributes left",it.hasNext());
  src=new AttributeSource();
  src.addAttributeImpl(new Token());
  termAtt=(TermAttribute)src.addAttribute(TermAttribute.class);
  assertTrue("TermAttribute should be implemented by Token",termAtt instanceof Token);
  it=src.getAttributeImplsIterator();
  Token tok=(Token)it.next();
  assertFalse("There should be only one attribute implementation instance",it.hasNext());
  termAtt.setTermBuffer("TestTerm");
  assertEquals("Token should only printed once","(" + tok.toString() + ")",src.toString());
}
