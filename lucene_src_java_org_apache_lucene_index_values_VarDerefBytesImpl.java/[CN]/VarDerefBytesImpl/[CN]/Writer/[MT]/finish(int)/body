{
  final IndexOutput datOut=getDataOut();
  boolean success=false;
  try {
    final int size=hash.size();
    final BytesRef bytesRef=new BytesRef();
    for (int i=0; i < size; i++) {
      hash.get(i,bytesRef);
      writePrefixLength(datOut,bytesRef);
      datOut.writeBytes(bytesRef.bytes,bytesRef.offset,bytesRef.length);
    }
    success=true;
  }
  finally {
    hash.close();
    if (success) {
      IOUtils.close(datOut);
    }
 else {
      IOUtils.closeWhileHandlingException(datOut);
    }
  }
  final IndexOutput idxOut=getIndexOut();
  success=false;
  try {
    idxOut.writeInt(address - 1);
    final PackedInts.Writer w=PackedInts.getWriter(idxOut,docCount,PackedInts.bitsRequired(address - 1));
    final int limit;
    if (docCount > docToAddress.length) {
      limit=docToAddress.length;
    }
 else {
      limit=docCount;
    }
    for (int i=0; i < limit; i++) {
      w.add(docToAddress[i]);
    }
    for (int i=limit; i < docCount; i++) {
      w.add(0);
    }
    w.finish();
    success=true;
  }
  finally {
    if (success) {
      IOUtils.close(idxOut);
    }
 else {
      IOUtils.closeWhileHandlingException(idxOut);
    }
    bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_INT * (-docToAddress.length));
    docToAddress=null;
  }
}
