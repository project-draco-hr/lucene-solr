{
  if (cmd.prepareCommit) {
    prepareCommit(cmd);
    return;
  }
  if (cmd.optimize) {
    optimizeCommands.incrementAndGet();
  }
 else {
    commitCommands.incrementAndGet();
    if (cmd.expungeDeletes)     expungeDeleteCommands.incrementAndGet();
  }
  Future[] waitSearcher=null;
  if (cmd.waitSearcher) {
    waitSearcher=new Future[1];
  }
  boolean error=true;
  try {
    if (!cmd.softCommit) {
      solrCoreState.getCommitLock().lock();
    }
    log.info("start " + cmd);
    if (cmd.openSearcher) {
      softCommitTracker.cancelPendingCommit();
    }
    if (!cmd.softCommit && (cmd.openSearcher || !commitTracker.getOpenSearcher())) {
      commitTracker.cancelPendingCommit();
    }
    RefCounted<IndexWriter> iw=solrCoreState.getIndexWriter(core);
    try {
      IndexWriter writer=iw.get();
      if (cmd.optimize) {
        writer.forceMerge(cmd.maxOptimizeSegments);
      }
 else       if (cmd.expungeDeletes) {
        writer.forceMergeDeletes();
      }
      if (!cmd.softCommit) {
synchronized (solrCoreState.getUpdateLock()) {
          if (ulog != null)           ulog.preCommit(cmd);
        }
        final Map<String,String> commitData=new HashMap<String,String>();
        commitData.put(SolrIndexWriter.COMMIT_TIME_MSEC_KEY,String.valueOf(System.currentTimeMillis()));
        writer.setCommitData(commitData);
        writer.commit();
        numDocsPending.set(0);
        callPostCommitCallbacks();
      }
 else {
        callPostSoftCommitCallbacks();
      }
    }
  finally {
      iw.decref();
    }
    if (cmd.optimize) {
      callPostOptimizeCallbacks();
    }
    if (cmd.softCommit) {
synchronized (solrCoreState.getUpdateLock()) {
        if (ulog != null)         ulog.preSoftCommit(cmd);
        core.getSearcher(true,false,waitSearcher,true);
        if (ulog != null)         ulog.postSoftCommit(cmd);
      }
    }
 else {
synchronized (solrCoreState.getUpdateLock()) {
        if (ulog != null)         ulog.preSoftCommit(cmd);
        if (cmd.openSearcher) {
          core.getSearcher(true,false,waitSearcher);
        }
 else {
          RefCounted<SolrIndexSearcher> searchHolder=core.openNewSearcher(true,true);
          searchHolder.decref();
        }
        if (ulog != null)         ulog.postSoftCommit(cmd);
      }
      if (ulog != null)       ulog.postCommit(cmd);
    }
    if (cmd.softCommit) {
      softCommitTracker.didCommit();
    }
 else {
      commitTracker.didCommit();
    }
    log.info("end_commit_flush");
    error=false;
  }
  finally {
    if (!cmd.softCommit) {
      solrCoreState.getCommitLock().unlock();
    }
    addCommands.set(0);
    deleteByIdCommands.set(0);
    deleteByQueryCommands.set(0);
    if (error)     numErrors.incrementAndGet();
  }
  if (waitSearcher != null && waitSearcher[0] != null) {
    try {
      waitSearcher[0].get();
    }
 catch (    InterruptedException e) {
      SolrException.log(log,e);
    }
catch (    ExecutionException e) {
      SolrException.log(log,e);
    }
  }
}
