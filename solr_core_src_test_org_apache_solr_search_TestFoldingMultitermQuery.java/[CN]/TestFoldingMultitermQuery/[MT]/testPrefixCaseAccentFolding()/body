{
  String matchOneDocPrefixUpper[][]={{"A*","??B*","AB??*"},{"H*","H??*","H??J*"},{"O*","??P*","OPQ*"}};
  String matchRevPrefixUpper[][]={{"*??1","*DEfG1","*EfG1"},{"*N1","*Lm??1","*M??1"},{"*??1","*sTu1","*R??TU1"}};
  for (int idx=0; idx < matchOneDocPrefixUpper.length; idx++) {
    for (int jdx=0; jdx < matchOneDocPrefixUpper[idx].length; jdx++) {
      String me=matchOneDocPrefixUpper[idx][jdx];
      assertQ(req("q","content:" + me),"//*[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
      assertQ(req("q","content_ws:" + me),"//*[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
      assertQ(req("q","content_multi:" + me),"//*[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
      assertQ(req("q","content_lower_token:" + me),"//result[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
      assertQ(req("q","content_oldstyle:" + me),"//result[@numFound='0']");
    }
  }
  for (int idx=0; idx < matchRevPrefixUpper.length; idx++) {
    for (int jdx=0; jdx < matchRevPrefixUpper[idx].length; jdx++) {
      String me=matchRevPrefixUpper[idx][jdx];
      assertQ(req("q","content_rev:" + me),"//*[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
    }
  }
}
