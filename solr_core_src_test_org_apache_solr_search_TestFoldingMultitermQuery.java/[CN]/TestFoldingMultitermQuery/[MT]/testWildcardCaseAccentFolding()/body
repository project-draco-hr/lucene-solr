{
  String matchOneDocWildUpper[][]={{"??*C*","??B*1","AB??*g1","??*FG1"},{"H*k*","H??*l?*","H??J*n*","H??J*m*"},{"O*??*","??P*?????","OPQ*S???*","??P*1"}};
  for (int idx=0; idx < matchOneDocWildUpper.length; idx++) {
    for (int jdx=0; jdx < matchOneDocWildUpper[idx].length; jdx++) {
      String me=matchOneDocWildUpper[idx][jdx];
      assertQ("Error with " + me,req("q","content:" + me),"//result[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
      assertQ(req("q","content_ws:" + me),"//result[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
      assertQ(req("q","content_multi:" + me),"//result[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
      assertQ(req("q","content_lower_token:" + me),"//result[@numFound='1']","//*[@name='id'][.='" + Integer.toString(idx) + "']");
    }
  }
}
