{
  super.setUp();
  Arrays.sort(testTerms);
  int tokenUpto=0;
  for (int i=0; i < testTerms.length; i++) {
    positions[i]=new int[TERM_FREQ];
    for (int j=0; j < TERM_FREQ; j++) {
      positions[i][j]=(int)(j * 10 + Math.random() * 10);
      TestToken token=tokens[tokenUpto++]=new TestToken();
      token.text=testTerms[i];
      token.pos=positions[i][j];
      token.startOffset=j * 10;
      token.endOffset=j * 10 + testTerms[i].length();
    }
  }
  Arrays.sort(tokens);
  dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MyAnalyzer()).setMaxBufferedDocs(-1).setMergePolicy(newLogMergePolicy(false,10)).setUseCompoundFile(false));
  Document doc=new Document();
  for (int i=0; i < testFields.length; i++) {
    FieldType customType=new FieldType(TextField.TYPE_NOT_STORED);
    if (testFieldsStorePos[i] && testFieldsStoreOff[i]) {
      customType.setStoreTermVectors(true);
      customType.setStoreTermVectorPositions(true);
      customType.setStoreTermVectorOffsets(true);
    }
 else     if (testFieldsStorePos[i] && !testFieldsStoreOff[i]) {
      customType.setStoreTermVectors(true);
      customType.setStoreTermVectorPositions(true);
    }
 else     if (!testFieldsStorePos[i] && testFieldsStoreOff[i]) {
      customType.setStoreTermVectors(true);
      customType.setStoreTermVectorOffsets(true);
    }
 else {
      customType.setStoreTermVectors(true);
    }
    doc.add(new Field(testFields[i],"",customType));
  }
  for (int j=0; j < 5; j++) {
    writer.addDocument(doc);
  }
  writer.commit();
  seg=writer.newestSegment();
  writer.close();
  fieldInfos=_TestUtil.getFieldInfos(seg.info);
}
