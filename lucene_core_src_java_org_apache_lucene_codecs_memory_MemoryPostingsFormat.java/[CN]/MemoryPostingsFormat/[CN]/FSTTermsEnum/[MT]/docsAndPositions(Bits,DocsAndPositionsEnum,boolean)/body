{
  boolean hasOffsets=field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
  if (needsOffsets && !hasOffsets) {
    return null;
  }
  if (field.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {
    return null;
  }
  decodeMetaData();
  FSTDocsAndPositionsEnum docsAndPositionsEnum;
  if (reuse == null || !(reuse instanceof FSTDocsAndPositionsEnum)) {
    docsAndPositionsEnum=new FSTDocsAndPositionsEnum(field.storePayloads,hasOffsets);
  }
 else {
    docsAndPositionsEnum=(FSTDocsAndPositionsEnum)reuse;
    if (!docsAndPositionsEnum.canReuse(field.storePayloads,hasOffsets)) {
      docsAndPositionsEnum=new FSTDocsAndPositionsEnum(field.storePayloads,hasOffsets);
    }
  }
  return docsAndPositionsEnum.reset(current.output,liveDocs,docFreq);
}
