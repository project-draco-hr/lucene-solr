{
  Query query=new TermQuery(new Term("contents","doc0"));
  MockRAMDirectory ramDirectory1;
  IndexSearcher indexSearcher1;
  ScoreDoc[] hits;
  ramDirectory1=newDirectory(random);
  initIndex(random,ramDirectory1,nDocs,true,null);
  initIndex(random,ramDirectory1,nDocs,false,"x");
  indexSearcher1=new IndexSearcher(ramDirectory1,true);
  indexSearcher1.setDefaultFieldSortScoring(true,true);
  hits=indexSearcher1.search(query,null,1000).scoreDocs;
  assertEquals(message,2,hits.length);
  float[] scores={hits[0].score,hits[1].score};
  assertTrue(message,scores[0] > scores[1]);
  indexSearcher1.close();
  ramDirectory1.close();
  hits=null;
  MockRAMDirectory ramDirectory2;
  IndexSearcher indexSearcher2;
  ramDirectory1=newDirectory(random);
  ramDirectory2=newDirectory(random);
  initIndex(random,ramDirectory1,nDocs,true,null);
  initIndex(random,ramDirectory2,nDocs,true,"x");
  indexSearcher1=new IndexSearcher(ramDirectory1,true);
  indexSearcher1.setDefaultFieldSortScoring(true,true);
  indexSearcher2=new IndexSearcher(ramDirectory2,true);
  indexSearcher2.setDefaultFieldSortScoring(true,true);
  Searcher searcher=getMultiSearcherInstance(new Searcher[]{indexSearcher1,indexSearcher2});
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(message,2,hits.length);
  assertEquals(message,scores[0],hits[0].score,1e-6);
  assertEquals(message,scores[1],hits[1].score,1e-6);
  hits=searcher.search(query,null,1000,Sort.RELEVANCE).scoreDocs;
  assertEquals(message,2,hits.length);
  assertEquals(message,scores[0],hits[0].score,1e-6);
  assertEquals(message,scores[1],hits[1].score,1e-6);
  searcher.close();
  ramDirectory1.close();
  ramDirectory2.close();
}
