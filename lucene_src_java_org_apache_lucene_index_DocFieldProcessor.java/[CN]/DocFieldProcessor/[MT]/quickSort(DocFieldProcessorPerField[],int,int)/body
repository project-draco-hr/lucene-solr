{
  if (lo >= hi)   return;
 else   if (hi == 1 + lo) {
    if (array[lo].fieldInfo.name.compareTo(array[hi].fieldInfo.name) > 0) {
      final DocFieldProcessorPerField tmp=array[lo];
      array[lo]=array[hi];
      array[hi]=tmp;
    }
    return;
  }
  int mid=(lo + hi) >>> 1;
  if (array[lo].fieldInfo.name.compareTo(array[mid].fieldInfo.name) > 0) {
    DocFieldProcessorPerField tmp=array[lo];
    array[lo]=array[mid];
    array[mid]=tmp;
  }
  if (array[mid].fieldInfo.name.compareTo(array[hi].fieldInfo.name) > 0) {
    DocFieldProcessorPerField tmp=array[mid];
    array[mid]=array[hi];
    array[hi]=tmp;
    if (array[lo].fieldInfo.name.compareTo(array[mid].fieldInfo.name) > 0) {
      DocFieldProcessorPerField tmp2=array[lo];
      array[lo]=array[mid];
      array[mid]=tmp2;
    }
  }
  int left=lo + 1;
  int right=hi - 1;
  if (left >= right)   return;
  DocFieldProcessorPerField partition=array[mid];
  for (; ; ) {
    while (array[right].fieldInfo.name.compareTo(partition.fieldInfo.name) > 0)     --right;
    while (left < right && array[left].fieldInfo.name.compareTo(partition.fieldInfo.name) <= 0)     ++left;
    if (left < right) {
      DocFieldProcessorPerField tmp=array[left];
      array[left]=array[right];
      array[right]=tmp;
      --right;
    }
 else {
      break;
    }
  }
  quickSort(array,lo,left);
  quickSort(array,left + 1,hi);
}
