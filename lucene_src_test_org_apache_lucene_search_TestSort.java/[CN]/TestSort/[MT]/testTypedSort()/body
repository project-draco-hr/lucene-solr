{
  sort.setSort(new SortField("int",SortField.INT),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"IGAEC");
  assertMatches(full,queryY,sort,"DHFJB");
  sort.setSort(useDocValues(new SortField("int",SortField.INT)),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"IGAEC");
  assertMatches(full,queryY,sort,"DHFJB");
  sort.setSort(new SortField("float",SortField.FLOAT),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"GCIEA");
  assertMatches(full,queryY,sort,"DHJFB");
  sort.setSort(useDocValues(new SortField("float",SortField.FLOAT)),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"GCIEA");
  assertMatches(full,queryY,sort,"DHJFB");
  sort.setSort(new SortField("long",SortField.LONG),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"EACGI");
  assertMatches(full,queryY,sort,"FBJHD");
  sort.setSort(new SortField("double",SortField.DOUBLE),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"AGICE");
  assertMatches(full,queryY,sort,"DJHBF");
  sort.setSort(useDocValues(new SortField("double",SortField.DOUBLE)),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"AGICE");
  assertMatches(full,queryY,sort,"DJHBF");
  sort.setSort(new SortField("byte",SortField.BYTE),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"CIGAE");
  assertMatches(full,queryY,sort,"DHFBJ");
  sort.setSort(new SortField("short",SortField.SHORT),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"IAGCE");
  assertMatches(full,queryY,sort,"DFHBJ");
  sort.setSort(new SortField("string",SortField.STRING),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"AIGEC");
  assertMatches(full,queryY,sort,"DJHFB");
}
