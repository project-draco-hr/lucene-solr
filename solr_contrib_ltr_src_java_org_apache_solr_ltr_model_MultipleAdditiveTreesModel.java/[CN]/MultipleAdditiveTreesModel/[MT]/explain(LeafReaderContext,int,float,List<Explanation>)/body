{
  final float[] fv=new float[featureExplanations.size()];
  int index=0;
  for (  final Explanation featureExplain : featureExplanations) {
    fv[index]=featureExplain.getValue();
    index++;
  }
  final List<Explanation> details=new ArrayList<>();
  index=0;
  for (  final RegressionTree t : trees) {
    final float score=t.score(fv);
    final Explanation p=Explanation.match(score,"tree " + index + " | "+ t.explain(fv));
    details.add(p);
    index++;
  }
  return Explanation.match(finalScore,toString() + " model applied to features, sum of:",details);
}
