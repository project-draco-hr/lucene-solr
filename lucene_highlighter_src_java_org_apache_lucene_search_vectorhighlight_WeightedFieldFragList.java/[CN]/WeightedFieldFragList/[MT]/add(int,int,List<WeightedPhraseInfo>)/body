{
  List<SubInfo> tempSubInfos=new ArrayList<SubInfo>();
  List<SubInfo> realSubInfos=new ArrayList<SubInfo>();
  HashSet<String> distinctTerms=new HashSet<String>();
  int length=0;
  for (  WeightedPhraseInfo phraseInfo : phraseInfoList) {
    float phraseTotalBoost=0;
    for (    TermInfo ti : phraseInfo.getTermsInfos()) {
      if (distinctTerms.add(ti.getText()))       phraseTotalBoost+=ti.getWeight() * phraseInfo.getBoost();
      length++;
    }
    tempSubInfos.add(new SubInfo(phraseInfo.getText(),phraseInfo.getTermsOffsets(),phraseInfo.getSeqnum(),phraseTotalBoost));
  }
  float norm=length * (1 / (float)Math.sqrt(length));
  float totalBoost=0;
  for (  SubInfo tempSubInfo : tempSubInfos) {
    float subInfoBoost=tempSubInfo.getBoost() * norm;
    realSubInfos.add(new SubInfo(tempSubInfo.getText(),tempSubInfo.getTermsOffsets(),tempSubInfo.getSeqnum(),subInfoBoost));
    totalBoost+=subInfoBoost;
  }
  getFragInfos().add(new WeightedFragInfo(startOffset,endOffset,realSubInfos,totalBoost));
}
