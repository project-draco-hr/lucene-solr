{
  if (DEBUG) {
    System.out.println("FPW.startDoc docID=" + docID);
  }
  if (posOut != null && saveNextPosBlock) {
    lastBlockPosFP=posOut.getFilePointer();
    if (payOut != null) {
      lastBlockPayFP=payOut.getFilePointer();
    }
    lastBlockPosBufferUpto=posBufferUpto;
    lastBlockStartOffset=lastStartOffset;
    lastBlockPayloadByteUpto=payloadByteUpto;
    saveNextPosBlock=false;
    if (DEBUG) {
      System.out.println("  now save lastBlockPosFP=" + lastBlockPosFP + " lastBlockPosBufferUpto="+ lastBlockPosBufferUpto+ " lastBlockPayloadByteUpto="+ lastBlockPayloadByteUpto);
    }
  }
  final int docDelta=docID - lastDocID;
  if (docID < 0 || (docCount > 0 && docDelta <= 0)) {
    throw new CorruptIndexException("docs out of order (" + docID + " <= "+ lastDocID+ " ) (docOut: "+ docOut+ ")");
  }
  lastDocID=docID;
  docDeltaBuffer[docBufferUpto]=docDelta;
  if (DEBUG) {
    System.out.println("  docDeltaBuffer[" + docBufferUpto + "]="+ docDelta);
  }
  if (fieldHasFreqs) {
    freqBuffer[docBufferUpto]=termDocFreq;
  }
  docBufferUpto++;
  docCount++;
  if (docBufferUpto == blockSize) {
    if (lastBlockDocID != -1) {
      if (DEBUG) {
        System.out.println("  bufferSkip at writeBlock: lastDocID=" + lastBlockDocID + " docCount="+ (docCount - blockSize));
      }
      skipWriter.bufferSkip(lastBlockDocID,docCount - blockSize,lastBlockPosFP,lastBlockPayFP,lastBlockPosBufferUpto,lastBlockStartOffset,lastBlockPayloadByteUpto);
    }
    lastBlockDocID=docID;
    saveNextPosBlock=true;
    if (DEBUG) {
      System.out.println("  write docDelta block @ fp=" + docOut.getFilePointer());
    }
    writeBlock(docDeltaLBuffer,docOut);
    if (fieldHasFreqs) {
      if (DEBUG) {
        System.out.println("  write freq block @ fp=" + docOut.getFilePointer());
      }
      writeBlock(freqLBuffer,docOut);
    }
    docBufferUpto=0;
  }
  lastPosition=0;
  lastStartOffset=0;
}
