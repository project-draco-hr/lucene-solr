{
  SolrClient server=createNewSolrClient("",getBaseUrl((HttpSolrClient)clients.get(0)));
  CollectionAdminResponse response;
  Map<String,NamedList<Integer>> coresStatus;
  CollectionAdminRequest.Create createCollectionRequest=new CollectionAdminRequest.Create();
  createCollectionRequest.setCollectionName("implicit_collection_without_routerfield");
  createCollectionRequest.setRouterName("implicit");
  createCollectionRequest.setNumShards(2);
  createCollectionRequest.setShards("shard1,shard2");
  createCollectionRequest.setReplicationFactor(2);
  createCollectionRequest.setConfigName("conf1");
  response=createCollectionRequest.process(server);
  assertEquals(0,response.getStatus());
  assertTrue(response.isSuccess());
  coresStatus=response.getCollectionCoresStatus();
  assertEquals(4,coresStatus.size());
  for (int i=0; i < 4; i++) {
    NamedList<Integer> status=coresStatus.get("implicit_collection_without_routerfield_shard" + (i / 2 + 1) + "_replica"+ (i % 2 + 1));
    assertEquals(0,(int)status.get("status"));
    assertTrue(status.get("QTime") > 0);
  }
  SolrClient shard1=createNewSolrClient("implicit_collection_without_routerfield_shard1_replica1",getBaseUrl((HttpSolrClient)clients.get(0)));
  SolrClient shard2=createNewSolrClient("implicit_collection_without_routerfield_shard2_replica1",getBaseUrl((HttpSolrClient)clients.get(0)));
  SolrInputDocument doc=new SolrInputDocument();
  int docCounts1, docCounts2;
  doc.clear();
  doc.addField("id","1");
  doc.addField("title","s1 one");
  shard1.add(doc);
  shard1.commit();
  doc.clear();
  doc.addField("id","2");
  doc.addField("title","s1 two");
  shard1.add(doc);
  shard1.commit();
  doc.clear();
  doc.addField("id","3");
  doc.addField("title","s1 three");
  shard1.add(doc);
  shard1.commit();
  docCounts1=3;
  doc.clear();
  doc.addField("id","4");
  doc.addField("title","s2 four");
  shard2.add(doc);
  shard2.commit();
  doc.clear();
  doc.addField("id","5");
  doc.addField("title","s2 five");
  shard2.add(doc);
  shard2.commit();
  docCounts2=2;
  ModifiableSolrParams query=new ModifiableSolrParams();
  query.set("q","*:*");
  QueryResponse respAll=shard1.query(query);
  assertEquals(docCounts1 + docCounts2,respAll.getResults().getNumFound());
  query.set("shards","shard1");
  QueryResponse resp1=shard1.query(query);
  assertEquals(docCounts1,resp1.getResults().getNumFound());
  query.set("shards","shard2");
  QueryResponse resp2=shard2.query(query);
  assertEquals(docCounts2,resp2.getResults().getNumFound());
  UpdateRequest deleteRequest=new UpdateRequest();
  deleteRequest.deleteById("4","shard2");
  shard1.request(deleteRequest);
  shard1.commit();
  query.set("shards","shard2");
  resp2=shard2.query(query);
  assertEquals(--docCounts2,resp2.getResults().getNumFound());
  deleteRequest=new UpdateRequest();
  deleteRequest.deleteById("5");
  shard1.request(deleteRequest);
  shard1.commit();
  query.set("shards","shard2");
  resp2=shard2.query(query);
  assertEquals(docCounts2,resp2.getResults().getNumFound());
  deleteRequest.clear();
  deleteRequest.deleteById("2","shard1");
  deleteRequest.deleteById("3","shard1");
  deleteRequest.setCommitWithin(1);
  query.set("shards","shard1");
  shard2.request(deleteRequest);
  resp1=shard1.query(query);
  --docCounts1;
  --docCounts1;
  assertEquals(docCounts1,resp1.getResults().getNumFound());
  deleteRequest.clear();
  deleteRequest.deleteById("1","shard1");
  deleteRequest.setCommitWithin(1);
  shard2.request(deleteRequest);
  Thread.sleep(1000);
  query.set("shards","shard1");
  resp1=shard1.query(query);
  assertEquals(--docCounts1,resp1.getResults().getNumFound());
}
