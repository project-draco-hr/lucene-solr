{
  assertQ(req("q","lowerfilt:(paintable pine apple godness)","qt","spellCheckWithWordbreak","indent","true",SpellCheckComponent.SPELLCHECK_BUILD,"true",SpellCheckComponent.COMPONENT_NAME,"true",SpellCheckComponent.SPELLCHECK_ACCURACY,".75",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"10"),"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'","//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'","//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'","//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'","//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'","//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'","//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'","//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'","//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'","//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'","//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'","//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'","//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'","//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'");
  assertQ(req("q","lowerfilt:(pine AND apple)","qt","spellCheckWithWordbreak","indent","true",SpellCheckComponent.COMPONENT_NAME,"true",SpellCheckComponent.SPELLCHECK_ACCURACY,".75",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"10"),"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'","//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'","//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'");
  assertQ(req("q","lowerfilt:pine AND NOT lowerfilt:apple","qt","spellCheckWithWordbreak","indent","true",SpellCheckComponent.COMPONENT_NAME,"true",SpellCheckComponent.SPELLCHECK_ACCURACY,".75",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"10"),"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'","//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'");
  assertQ(req("q","lowerfilt:pine NOT lowerfilt:apple","qt","spellCheckWithWordbreak","indent","true",SpellCheckComponent.COMPONENT_NAME,"true",SpellCheckComponent.SPELLCHECK_ACCURACY,".75",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"10"),"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'","//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'");
  assertQ(req("q","lowerfilt:(+pine -apple)","qt","spellCheckWithWordbreak","indent","true",SpellCheckComponent.COMPONENT_NAME,"true",SpellCheckComponent.SPELLCHECK_ACCURACY,".75",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"10"),"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'","//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'");
  assertQ(req("q","lowerfilt:(+printableinpuntableplantable)","qt","spellCheckWithWordbreak","indent","true",SpellCheckComponent.COMPONENT_NAME,"true",SpellCheckComponent.SPELLCHECK_ACCURACY,"1",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"1"),"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'");
}
