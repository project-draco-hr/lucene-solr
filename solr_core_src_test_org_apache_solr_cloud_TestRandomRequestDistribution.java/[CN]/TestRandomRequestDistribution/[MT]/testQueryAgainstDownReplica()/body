{
  log.info("Creating collection 'football' with 1 shard and 2 replicas");
  new CollectionAdminRequest.Create().setCollectionName("football").setNumShards(1).setReplicationFactor(2).setCreateNodeSet(nodeNames.get(0) + ',' + nodeNames.get(1)).process(cloudClient);
  waitForRecoveriesToFinish("football",true);
  cloudClient.getZkStateReader().forceUpdateCollection("football");
  Replica leader=null;
  Replica notLeader=null;
  Collection<Replica> replicas=cloudClient.getZkStateReader().getClusterState().getSlice("football","shard1").getReplicas();
  for (  Replica replica : replicas) {
    if (replica.getStr(ZkStateReader.LEADER_PROP) != null) {
      leader=replica;
    }
 else {
      notLeader=replica;
    }
  }
  ZkNodeProps m=new ZkNodeProps(Overseer.QUEUE_OPERATION,OverseerAction.STATE.toLower(),ZkStateReader.BASE_URL_PROP,notLeader.getStr(ZkStateReader.BASE_URL_PROP),ZkStateReader.NODE_NAME_PROP,notLeader.getStr(ZkStateReader.NODE_NAME_PROP),ZkStateReader.COLLECTION_PROP,"football",ZkStateReader.SHARD_ID_PROP,"shard1",ZkStateReader.CORE_NAME_PROP,notLeader.getStr(ZkStateReader.CORE_NAME_PROP),ZkStateReader.ROLES_PROP,"",ZkStateReader.STATE_PROP,Replica.State.DOWN.toString());
  log.info("Forcing {} to go into 'down' state",notLeader.getStr(ZkStateReader.CORE_NAME_PROP));
  DistributedQueue q=Overseer.getStateUpdateQueue(cloudClient.getZkStateReader().getZkClient());
  q.offer(Utils.toJSON(m));
  verifyReplicaStatus(cloudClient.getZkStateReader(),"football","shard1",notLeader.getName(),Replica.State.DOWN);
  String baseUrl=notLeader.getStr(ZkStateReader.BASE_URL_PROP);
  if (!baseUrl.endsWith("/"))   baseUrl+="/";
  String path=baseUrl + "football";
  log.info("Firing queries against path=" + path);
  try (HttpSolrClient client=new HttpSolrClient(path)){
    client.setSoTimeout(5000);
    client.setConnectionTimeout(2000);
    SolrCore leaderCore=null;
    for (    JettySolrRunner jetty : jettys) {
      CoreContainer container=jetty.getCoreContainer();
      for (      SolrCore core : container.getCores()) {
        if (core.getName().equals(leader.getStr(ZkStateReader.CORE_NAME_PROP))) {
          leaderCore=core;
          break;
        }
      }
    }
    assertNotNull(leaderCore);
    long count=0;
    while (true) {
      count++;
      client.query(new SolrQuery("*:*"));
      SolrRequestHandler select=leaderCore.getRequestHandler("");
      long c=(long)select.getStatistics().get("requests");
      if (c == 1) {
        break;
      }
 else {
        Thread.sleep(100);
      }
      if (count > 10000) {
        fail("After 10k queries we still see all requests being processed by the down replica");
      }
    }
    int moreQueries=TestUtil.nextInt(random(),4,10);
    count=1;
    for (int i=0; i < moreQueries; i++) {
      client.query(new SolrQuery("*:*"));
      count++;
      SolrRequestHandler select=leaderCore.getRequestHandler("");
      long c=(long)select.getStatistics().get("requests");
      assertEquals("Query wasn't served by leader",count,c);
    }
  }
 }
