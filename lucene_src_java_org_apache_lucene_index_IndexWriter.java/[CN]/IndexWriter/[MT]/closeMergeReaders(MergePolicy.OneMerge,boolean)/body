{
  final int numSegments=merge.readers.size();
  Throwable th=null;
  boolean anyChanges=false;
  boolean drop=!suppressExceptions;
  for (int i=0; i < numSegments; i++) {
    if (merge.readers.get(i) != null) {
      try {
        anyChanges|=readerPool.release(merge.readers.get(i),drop,IOContext.Context.MERGE);
      }
 catch (      Throwable t) {
        if (th == null) {
          th=t;
        }
      }
      merge.readers.set(i,null);
    }
  }
  if (suppressExceptions && anyChanges) {
    checkpoint();
  }
  if (!suppressExceptions && th != null) {
    if (th instanceof IOException)     throw (IOException)th;
    if (th instanceof RuntimeException)     throw (RuntimeException)th;
    if (th instanceof Error)     throw (Error)th;
    throw new RuntimeException(th);
  }
}
