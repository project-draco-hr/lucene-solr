{
  ensureOpen();
  final long tStart=System.currentTimeMillis();
  infoStream.message("IW","flush at getReader");
  poolReaders=true;
  final IndexReader r;
  doBeforeFlush();
  boolean anySegmentFlushed=false;
synchronized (fullFlushLock) {
    boolean success=false;
    try {
      anySegmentFlushed=docWriter.flushAllThreads();
      if (!anySegmentFlushed) {
        flushCount.incrementAndGet();
      }
      success=true;
synchronized (this) {
        maybeApplyDeletes(applyAllDeletes);
        r=DirectoryReader.open(this,segmentInfos,applyAllDeletes);
        if (infoStream.isEnabled("IW")) {
          infoStream.message("IW","return reader version=" + r.getVersion() + " reader="+ r);
        }
      }
    }
 catch (    OutOfMemoryError oom) {
      handleOOM(oom,"getReader");
      return null;
    }
 finally {
      if (!success && infoStream.isEnabled("IW")) {
        infoStream.message("IW","hit exception during NRT reader");
      }
      docWriter.finishFullFlush(success);
      doAfterFlush();
    }
  }
  if (anySegmentFlushed) {
    maybeMerge();
  }
  if (infoStream.isEnabled("IW")) {
    infoStream.message("IW","getReader took " + (System.currentTimeMillis() - tStart) + " msec");
  }
  return r;
}
