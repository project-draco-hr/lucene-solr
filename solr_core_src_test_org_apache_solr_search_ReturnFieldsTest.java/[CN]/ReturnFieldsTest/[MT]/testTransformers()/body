{
  ReturnFields rf=new ReturnFields(req("fl","[explain]"));
  assertFalse(rf.wantsScore());
  assertFalse(rf.wantsField("id"));
  assertFalse(rf.wantsAllFields());
  assertEquals("[explain]",rf.getTransformer().getName());
  rf=new ReturnFields(req("fl","[shard],id"));
  assertFalse(rf.wantsScore());
  assertTrue(rf.wantsField("id"));
  assertFalse(rf.wantsField("xxx"));
  assertFalse(rf.wantsAllFields());
  assertEquals("[shard]",rf.getTransformer().getName());
  rf=new ReturnFields(req("fl","[docid]"));
  assertFalse(rf.wantsScore());
  assertFalse(rf.wantsField("id"));
  assertFalse(rf.wantsField("xxx"));
  assertFalse(rf.wantsAllFields());
  assertEquals("[docid]",rf.getTransformer().getName());
  rf=new ReturnFields(req("fl","[docid][shard]"));
  assertFalse(rf.wantsScore());
  assertFalse(rf.wantsField("xxx"));
  assertFalse(rf.wantsAllFields());
  assertTrue(rf.getTransformer() instanceof DocTransformers);
  assertEquals(2,((DocTransformers)rf.getTransformer()).size());
  rf=new ReturnFields(req("fl","[xxxxx]"));
  assertFalse(rf.wantsScore());
  assertFalse(rf.wantsField("id"));
  assertFalse(rf.wantsAllFields());
  assertNull(rf.getTransformer());
}
