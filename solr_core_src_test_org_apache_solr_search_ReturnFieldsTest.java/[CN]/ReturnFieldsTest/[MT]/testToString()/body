{
  for (  Method m : SolrReturnFields.class.getMethods()) {
    if (m.getName().equals("toString")) {
      assertTrue(m + " is not overridden ! ",m.getDeclaringClass() == SolrReturnFields.class);
      break;
    }
  }
  final ReturnFields rf1=new SolrReturnFields();
  final String rf1ToString="SolrReturnFields=(globs=[]" + ",fields=[]" + ",okFieldNames=[]"+ ",reqFieldNames=null"+ ",transformer=null,wantsScore=false,wantsAllFields=true)";
  assertEquals(rf1ToString,rf1.toString());
  final ReturnFields rf2=new SolrReturnFields(req("fl",SolrReturnFields.SCORE));
  final String rf2ToStringA="SolrReturnFields=(globs=[]" + ",fields=[" + SolrReturnFields.SCORE + "]"+ ",okFieldNames=[null, "+ SolrReturnFields.SCORE+ "]"+ ",reqFieldNames=["+ SolrReturnFields.SCORE+ "]"+ ",transformer=score,wantsScore=true,wantsAllFields=false)";
  final String rf2ToStringB="SolrReturnFields=(globs=[]" + ",fields=[" + SolrReturnFields.SCORE + "]"+ ",okFieldNames=["+ SolrReturnFields.SCORE+ ", null]"+ ",reqFieldNames=["+ SolrReturnFields.SCORE+ "]"+ ",transformer=score,wantsScore=true,wantsAllFields=false)";
  assertTrue(rf2ToStringA.equals(rf2.toString()) || rf2ToStringB.equals(rf2.toString()));
}
