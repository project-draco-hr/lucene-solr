{
  List<StreamExpression> streamExpressions=factory.getExpressionOperandsRepresentingTypes(expression,Expressible.class,TupleStream.class);
  TupleStream tupleStream=factory.constructStream(streamExpressions.get(0));
  StreamExpressionNamedParameter idExpression=factory.getNamedOperand(expression,"id");
  StreamExpressionNamedParameter runExpression=factory.getNamedOperand(expression,"runInterval");
  StreamExpressionNamedParameter queueExpression=factory.getNamedOperand(expression,"queueSize");
  String id=null;
  long runInterval=0L;
  int queueSize=0;
  if (idExpression == null) {
    throw new IOException("Invalid expression id parameter expected");
  }
 else {
    id=((StreamExpressionValue)idExpression.getParameter()).getValue();
  }
  if (runExpression == null) {
    runInterval=2000;
  }
 else {
    runInterval=Long.parseLong(((StreamExpressionValue)runExpression.getParameter()).getValue());
  }
  if (queueExpression != null) {
    queueSize=Integer.parseInt(((StreamExpressionValue)queueExpression.getParameter()).getValue());
  }
  if (expression.getParameters().size() != streamExpressions.size() + 2 && expression.getParameters().size() != streamExpressions.size() + 3) {
    throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - unknown operands found",expression));
  }
  if (1 != streamExpressions.size()) {
    throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - expecting a single stream but found %d",expression,streamExpressions.size()));
  }
  init(tupleStream,id,runInterval,queueSize);
}
