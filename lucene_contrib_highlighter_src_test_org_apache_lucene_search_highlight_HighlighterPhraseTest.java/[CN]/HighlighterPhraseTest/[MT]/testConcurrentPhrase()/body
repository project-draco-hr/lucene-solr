{
  final String TEXT="the fox jumped";
  final Directory directory=newDirectory();
  final IndexWriter indexWriter=new IndexWriter(directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false)));
  try {
    final Document document=new Document();
    FieldType customType=new FieldType(TextField.TYPE_UNSTORED);
    customType.setStoreTermVectorOffsets(true);
    customType.setStoreTermVectorPositions(true);
    customType.setStoreTermVectors(true);
    document.add(new Field(FIELD,new TokenStreamConcurrent(),customType));
    indexWriter.addDocument(document);
  }
  finally {
    indexWriter.close();
  }
  final IndexReader indexReader=IndexReader.open(directory);
  try {
    assertEquals(1,indexReader.numDocs());
    final IndexSearcher indexSearcher=newSearcher(indexReader);
    final PhraseQuery phraseQuery=new PhraseQuery();
    phraseQuery.add(new Term(FIELD,"fox"));
    phraseQuery.add(new Term(FIELD,"jumped"));
    phraseQuery.setSlop(0);
    TopDocs hits=indexSearcher.search(phraseQuery,1);
    assertEquals(1,hits.totalHits);
    final Highlighter highlighter=new Highlighter(new SimpleHTMLFormatter(),new SimpleHTMLEncoder(),new QueryScorer(phraseQuery));
    final TokenStream tokenStream=TokenSources.getTokenStream(indexReader.getTermVector(0,FIELD),false);
    assertEquals(highlighter.getBestFragment(new TokenStreamConcurrent(),TEXT),highlighter.getBestFragment(tokenStream,TEXT));
  }
  finally {
    indexReader.close();
    directory.close();
  }
}
