{
  Document out=new Document();
  out.setBoost(doc.getDocumentBoost());
  for (  SolrInputField field : doc) {
    String name=field.getName();
    SchemaField sfield=schema.getFieldOrNull(name);
    boolean used=false;
    float boost=field.getBoost();
    if (sfield != null && !sfield.multiValued() && field.getValueCount() > 1) {
      String id="";
      SchemaField sf=schema.getUniqueKeyField();
      if (sf != null) {
        id="[" + doc.getFieldValue(sf.getName()) + "] ";
      }
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"ERROR: " + id + "multiple values encountered for non multiValued field "+ sfield.getName()+ ": "+ field.getValue());
    }
    final List<CopyField> copyFields=schema.getCopyFieldsList(name);
    boolean hasField=false;
    for (    Object v : field) {
      if (v == null) {
        continue;
      }
      String val=null;
      hasField=true;
      if (sfield != null && v instanceof Date && sfield.getType() instanceof DateField) {
        DateField df=(DateField)sfield.getType();
        val=df.toInternal((Date)v) + 'Z';
      }
 else       if (v != null) {
        val=v.toString();
      }
      if (sfield != null) {
        used=true;
        Field f=sfield.createField(val,boost);
        if (f != null) {
          out.add(f);
        }
      }
      for (      CopyField cf : copyFields) {
        SchemaField sf=cf.getDestination();
        if (!sf.multiValued() && out.get(sf.getName()) != null) {
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"ERROR: multiple values encountered for non multiValued copy field " + sf.getName() + ": "+ val);
        }
        used=true;
        Field f=sf.createField(cf.getLimitedValue(val),boost);
        if (f != null) {
          out.add(f);
        }
      }
      boost=1.0f;
    }
    if (!used && hasField) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"ERROR:unknown field '" + name + "'");
    }
  }
  for (  SchemaField field : schema.getRequiredFields()) {
    if (out.getField(field.getName()) == null) {
      if (field.getDefaultValue() != null) {
        out.add(field.createField(field.getDefaultValue(),1.0f));
      }
 else {
        String id=schema.printableUniqueKey(out);
        String msg="Document [" + id + "] missing required field: "+ field.getName();
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,msg);
      }
    }
  }
  return out;
}
