{
  int datalen=TestUtil.nextInt(random(),101,10000);
  byte data[]=new byte[datalen];
  random().nextBytes(data);
  IndexOutput output=d.createOutput("data",IOContext.DEFAULT);
  output.writeBytes(data,0,datalen);
  output.close();
  IndexInput input=d.openInput("data",IOContext.DEFAULT);
  IndexOutput outputHeader=d.createOutput("header",IOContext.DEFAULT);
  outputHeader.copyBytes(input,100);
  outputHeader.close();
  CopyThread copies[]=new CopyThread[10];
  for (int i=0; i < copies.length; i++) {
    copies[i]=new CopyThread(input.clone(),d.createOutput("copy" + i,IOContext.DEFAULT));
  }
  for (int i=0; i < copies.length; i++) {
    copies[i].start();
  }
  for (int i=0; i < copies.length; i++) {
    copies[i].join();
  }
  for (int i=0; i < copies.length; i++) {
    IndexInput copiedData=d.openInput("copy" + i,IOContext.DEFAULT);
    byte[] dataCopy=new byte[datalen];
    System.arraycopy(data,0,dataCopy,0,100);
    copiedData.readBytes(dataCopy,100,datalen - 100);
    assertArrayEquals(data,dataCopy);
    copiedData.close();
  }
  input.close();
  d.close();
}
