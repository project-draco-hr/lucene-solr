{
  Map<String,String> m=new HashMap<>();
  m.put("test1","value1");
  m.put("test2","value2");
  Directory dir=getDirectory(createTempDir("testMapOfStrings"));
  IndexOutput output=dir.createOutput("stringmap",newIOContext(random()));
  output.writeMapOfStrings(m);
  output.writeMapOfStrings(Collections.emptyMap());
  output.writeMapOfStrings(Collections.singletonMap("key","value"));
  output.close();
  IndexInput input=dir.openInput("stringmap",newIOContext(random()));
  Map<String,String> map=input.readMapOfStrings();
  assertEquals(m,map);
  try {
    map.put("bogus1","bogus2");
    fail("map should be immutable");
  }
 catch (  UnsupportedOperationException expected) {
  }
  map=input.readMapOfStrings();
  assertEquals(Collections.emptyMap(),map);
  try {
    map.put("bogus1","bogus2");
    fail("map should be immutable");
  }
 catch (  UnsupportedOperationException expected) {
  }
  map=input.readMapOfStrings();
  assertEquals(Collections.singletonMap("key","value"),map);
  try {
    map.put("bogus1","bogus2");
    fail("map should be immutable");
  }
 catch (  UnsupportedOperationException expected) {
  }
  assertEquals(input.length(),input.getFilePointer());
  input.close();
  dir.close();
}
