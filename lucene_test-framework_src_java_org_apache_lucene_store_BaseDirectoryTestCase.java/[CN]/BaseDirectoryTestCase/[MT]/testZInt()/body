{
  final int[] ints=new int[random().nextInt(10)];
  for (int i=0; i < ints.length; ++i) {
switch (random().nextInt(3)) {
case 0:
      ints[i]=random().nextInt();
    break;
case 1:
  ints[i]=random().nextBoolean() ? Integer.MIN_VALUE : Integer.MAX_VALUE;
break;
case 2:
ints[i]=(random().nextBoolean() ? -1 : 1) * random().nextInt(1024);
break;
default :
throw new AssertionError();
}
}
Directory dir=getDirectory(createTempDir("testZInt"));
IndexOutput output=dir.createOutput("zint",newIOContext(random()));
for (int i : ints) {
output.writeZInt(i);
}
output.close();
IndexInput input=dir.openInput("zint",newIOContext(random()));
for (int i : ints) {
assertEquals(i,input.readZInt());
}
assertEquals(input.length(),input.getFilePointer());
input.close();
dir.close();
}
