{
  Directory dir=getDirectory(createTempDir());
  IndexOutput out=dir.createOutput("randombytes",IOContext.DEFAULT);
  final int numBytes=atLeast(20 * 1024);
  final byte[] bytes=new byte[numBytes];
  random().nextBytes(bytes);
  out.writeBytes(bytes,0,bytes.length);
  out.close();
  final IndexInput in=dir.openInput("randombytes",IOContext.DEFAULT);
  int numThreads=4;
  Thread[] threads=new Thread[numThreads];
  for (int i=0; i < numThreads; i++) {
    int finalI=i;
    threads[i]=new Thread(){
      @Override public void run(){
        int numIters=atLeast(1000);
        byte[] scratch=new byte[numBytes];
        for (int iter=0; iter < numIters; iter++) {
          IndexInput myIn;
          if (finalI == 0) {
            myIn=in;
          }
 else {
            myIn=in.clone();
          }
          int spot=random().nextInt(numBytes / 2);
          try {
            myIn.seek(spot);
            int length=numBytes - spot;
            myIn.readBytes(scratch,0,length);
            for (int i=0; i < length; i++) {
              assertEquals(bytes[spot + i],scratch[i]);
            }
          }
 catch (          IOException ioe) {
            throw new RuntimeException(ioe);
          }
        }
      }
    }
;
    threads[i].start();
  }
  for (  Thread thread : threads) {
    thread.join();
  }
  in.close();
  dir.close();
}
