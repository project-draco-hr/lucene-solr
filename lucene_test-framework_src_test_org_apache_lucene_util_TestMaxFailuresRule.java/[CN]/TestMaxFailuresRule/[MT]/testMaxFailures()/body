{
  LuceneTestCase.replaceMaxFailureRule(new TestRuleIgnoreAfterMaxFailures(2));
  JUnitCore core=new JUnitCore();
  final StringBuilder results=new StringBuilder();
  core.addListener(new RunListener(){
    char lastTest;
    @Override public void testStarted(    Description description) throws Exception {
      lastTest='S';
    }
    @Override public void testAssumptionFailure(    Failure failure){
      lastTest='A';
    }
    @Override public void testFailure(    Failure failure) throws Exception {
      lastTest='F';
    }
    @Override public void testFinished(    Description description) throws Exception {
      results.append(lastTest);
    }
  }
);
  Result result=core.run(Nested.class);
  Assert.assertEquals(500,result.getRunCount());
  Assert.assertEquals(0,result.getIgnoreCount());
  Assert.assertEquals(2,result.getFailureCount());
  Assert.assertTrue(results.toString(),results.toString().matches("(S*F){2}A+"));
}
