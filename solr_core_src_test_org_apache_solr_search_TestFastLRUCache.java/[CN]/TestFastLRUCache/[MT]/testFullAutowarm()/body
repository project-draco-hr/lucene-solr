{
  FastLRUCache<Object,Object> cache=new FastLRUCache<Object,Object>();
  Map<Object,Object> params=new HashMap<Object,Object>();
  params.put("size","100");
  params.put("initialSize","10");
  params.put("autowarmCount","-1");
  CacheRegenerator cr=new NoOpRegenerator();
  Object o=cache.init(params,null,cr);
  cache.setState(SolrCache.State.LIVE);
  for (int i=0; i < 101; i++) {
    cache.put(i + 1,"" + (i + 1));
  }
  assertEquals("25",cache.get(25));
  assertEquals(null,cache.get(110));
  assertEquals(null,cache.get(1));
  FastLRUCache<Object,Object> cacheNew=new FastLRUCache<Object,Object>();
  cacheNew.init(params,o,cr);
  cacheNew.warm(null,cache);
  cacheNew.setState(SolrCache.State.LIVE);
  cache.close();
  cacheNew.put(103,"103");
  assertEquals("90",cacheNew.get(90));
  assertEquals("50",cacheNew.get(50));
  assertEquals("103",cacheNew.get(103));
  cacheNew.close();
}
