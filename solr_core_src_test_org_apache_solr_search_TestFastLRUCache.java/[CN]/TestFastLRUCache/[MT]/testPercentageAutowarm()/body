{
  FastLRUCache<Object,Object> fastCache=new FastLRUCache<>();
  Map<String,String> params=new HashMap<>();
  params.put("size","100");
  params.put("initialSize","10");
  params.put("autowarmCount","100%");
  CacheRegenerator cr=new NoOpRegenerator();
  Object o=fastCache.init(params,null,cr);
  fastCache.setState(SolrCache.State.LIVE);
  for (int i=0; i < 101; i++) {
    fastCache.put(i + 1,"" + (i + 1));
  }
  assertEquals("25",fastCache.get(25));
  assertEquals(null,fastCache.get(110));
  NamedList<Serializable> nl=fastCache.getStatistics();
  assertEquals(2L,nl.get("lookups"));
  assertEquals(1L,nl.get("hits"));
  assertEquals(101L,nl.get("inserts"));
  assertEquals(null,fastCache.get(1));
  FastLRUCache<Object,Object> fastCacheNew=new FastLRUCache<>();
  fastCacheNew.init(params,o,cr);
  fastCacheNew.warm(null,fastCache);
  fastCacheNew.setState(SolrCache.State.LIVE);
  fastCache.close();
  fastCacheNew.put(103,"103");
  assertEquals("90",fastCacheNew.get(90));
  assertEquals("50",fastCacheNew.get(50));
  nl=fastCacheNew.getStatistics();
  assertEquals(2L,nl.get("lookups"));
  assertEquals(2L,nl.get("hits"));
  assertEquals(1L,nl.get("inserts"));
  assertEquals(0L,nl.get("evictions"));
  assertEquals(5L,nl.get("cumulative_lookups"));
  assertEquals(3L,nl.get("cumulative_hits"));
  assertEquals(102L,nl.get("cumulative_inserts"));
  fastCacheNew.close();
}
