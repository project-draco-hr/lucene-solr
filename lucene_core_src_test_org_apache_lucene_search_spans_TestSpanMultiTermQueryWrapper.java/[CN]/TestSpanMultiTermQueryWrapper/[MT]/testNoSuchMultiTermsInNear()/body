{
  FuzzyQuery fuzzyNoSuch=new FuzzyQuery(new Term("field","noSuch"),1,0,1,false);
  SpanQuery spanNoSuch=new SpanMultiTermQueryWrapper<FuzzyQuery>(fuzzyNoSuch);
  SpanQuery term=new SpanTermQuery(new Term("field","brown"));
  SpanQuery near=new SpanNearQuery(new SpanQuery[]{term,spanNoSuch},1,true);
  assertEquals(0,searcher.search(near,10).totalHits);
  near=new SpanNearQuery(new SpanQuery[]{spanNoSuch,term},1,true);
  assertEquals(0,searcher.search(near,10).totalHits);
  WildcardQuery wcNoSuch=new WildcardQuery(new Term("field","noSuch*"));
  SpanQuery spanWCNoSuch=new SpanMultiTermQueryWrapper<WildcardQuery>(wcNoSuch);
  near=new SpanNearQuery(new SpanQuery[]{term,spanWCNoSuch},1,true);
  assertEquals(0,searcher.search(near,10).totalHits);
  RegexpQuery rgxNoSuch=new RegexpQuery(new Term("field","noSuch"));
  SpanQuery spanRgxNoSuch=new SpanMultiTermQueryWrapper<RegexpQuery>(rgxNoSuch);
  near=new SpanNearQuery(new SpanQuery[]{term,spanRgxNoSuch},1,true);
  assertEquals(0,searcher.search(near,10).totalHits);
  PrefixQuery prfxNoSuch=new PrefixQuery(new Term("field","noSuch"));
  SpanQuery spanPrfxNoSuch=new SpanMultiTermQueryWrapper<PrefixQuery>(prfxNoSuch);
  near=new SpanNearQuery(new SpanQuery[]{term,spanPrfxNoSuch},1,true);
  assertEquals(0,searcher.search(near,10).totalHits);
  near=new SpanNearQuery(new SpanQuery[]{spanPrfxNoSuch},1,true);
  assertEquals(0,searcher.search(near,10).totalHits);
  near=new SpanNearQuery(new SpanQuery[]{spanPrfxNoSuch,spanPrfxNoSuch},1,true);
  assertEquals(0,searcher.search(near,10).totalHits);
}
