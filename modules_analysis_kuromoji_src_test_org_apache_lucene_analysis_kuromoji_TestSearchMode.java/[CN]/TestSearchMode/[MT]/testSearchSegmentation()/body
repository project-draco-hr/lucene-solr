{
  InputStream is=TestSearchMode.class.getResourceAsStream(SEGMENTATION_FILENAME);
  if (is == null) {
    throw new FileNotFoundException("Cannot find " + SEGMENTATION_FILENAME + " in test classpath");
  }
  try {
    LineNumberReader reader=new LineNumberReader(new InputStreamReader(is,IOUtils.CHARSET_UTF_8));
    String line=null;
    while ((line=reader.readLine()) != null) {
      line=line.replaceAll("#.*$","");
      if (line.trim().isEmpty()) {
        continue;
      }
      if (VERBOSE) {
        System.out.println("Line no. " + reader.getLineNumber() + ": "+ line);
      }
      String[] fields=line.split("\t",2);
      String sourceText=fields[0];
      String[] expectedTokens=fields[1].split("\\s+");
      int[] expectedPosIncrs=new int[expectedTokens.length];
      int[] expectedPosLengths=new int[expectedTokens.length];
      for (int tokIDX=0; tokIDX < expectedTokens.length; tokIDX++) {
        if (expectedTokens[tokIDX].endsWith("/0")) {
          expectedTokens[tokIDX]=expectedTokens[tokIDX].replace("/0","");
          expectedPosLengths[tokIDX]=expectedTokens.length - 1;
        }
 else {
          expectedPosIncrs[tokIDX]=1;
          expectedPosLengths[tokIDX]=1;
        }
      }
      assertAnalyzesTo(analyzer,sourceText,expectedTokens,expectedPosIncrs);
    }
  }
  finally {
    is.close();
  }
}
