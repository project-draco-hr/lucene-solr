{
  FacetComponentState facetState=getFacetComponentState(rb);
  if (facetState == null)   return;
  boolean isShard=rb.req.getParams().getBool(ShardParams.IS_SHARD,false);
  FacetContext fcontext=new FacetContext();
  fcontext.base=rb.getResults().docSet;
  fcontext.req=rb.req;
  fcontext.searcher=rb.req.getSearcher();
  fcontext.qcontext=QueryContext.newContext(fcontext.searcher);
  if (isShard) {
    fcontext.flags|=FacetContext.IS_SHARD;
  }
  FacetProcessor fproc=facetState.facetRequest.createFacetProcessor(fcontext);
  if (rb.isDebug()) {
    FacetDebugInfo fdebug=new FacetDebugInfo();
    fcontext.setDebugInfo(fdebug);
    fdebug.setReqDescription(facetState.facetRequest.getFacetDescription());
    fdebug.setProcessor(fproc.getClass().getSimpleName());
    final RTimer timer=new RTimer();
    fproc.process();
    long timeElapsed=(long)timer.getTime();
    fdebug.setElapse(timeElapsed);
    fdebug.putInfoItem("domainSize",(long)fcontext.base.size());
    rb.req.getContext().put("FacetDebugInfo",fdebug);
  }
 else {
    fproc.process();
  }
  rb.rsp.add("facets",fproc.getResponse());
}
