{
  super(next);
  this.ignoreOldUpdates=ignoreOldUpdates;
  this.deleteVersionParamName=deleteVersionParamName;
  this.core=req.getCore();
  this.versionFieldName=versionField;
  this.userVersionField=core.getLatestSchema().getField(versionField);
  this.solrVersionField=core.getLatestSchema().getField(VersionInfo.VERSION_FIELD);
  this.useFieldCache=useFieldCache;
  for (UpdateRequestProcessor proc=next; proc != null; proc=proc.next) {
    if (proc instanceof DistributedUpdateProcessor) {
      distribProc=(DistributedUpdateProcessor)proc;
      break;
    }
  }
  if (distribProc == null) {
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"DistributedUpdateProcessor must follow DocBasedVersionConstraintsProcessor");
  }
  phase=DistributedUpdateProcessor.DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));
}
