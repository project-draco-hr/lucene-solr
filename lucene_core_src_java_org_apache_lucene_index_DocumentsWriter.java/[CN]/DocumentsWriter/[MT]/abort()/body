{
  boolean success=false;
synchronized (this) {
    deleteQueue.clear();
  }
  try {
    if (infoStream.isEnabled("DW")) {
      infoStream.message("DW","abort");
    }
    final int limit=perThreadPool.getActiveThreadState();
    for (int i=0; i < limit; i++) {
      final ThreadState perThread=perThreadPool.getThreadState(i);
      perThread.lock();
      try {
        if (perThread.isActive()) {
          try {
            perThread.dwpt.abort();
          }
 catch (          IOException ex) {
          }
 finally {
            perThread.dwpt.checkAndResetHasAborted();
            flushControl.doOnAbort(perThread);
          }
        }
 else {
          assert closed;
        }
      }
  finally {
        perThread.unlock();
      }
    }
    success=true;
  }
  finally {
    if (infoStream.isEnabled("DW")) {
      infoStream.message("DW","done abort; abortedFiles=" + abortedFiles + " success="+ success);
    }
  }
}
