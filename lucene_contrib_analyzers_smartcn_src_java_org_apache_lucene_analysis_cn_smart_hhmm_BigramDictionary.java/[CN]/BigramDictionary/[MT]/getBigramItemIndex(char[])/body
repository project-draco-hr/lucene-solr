{
  long hashId=hash1(carray);
  int hash1=(int)(hashId % PRIME_BIGRAM_LENGTH);
  int hash2=hash2(carray) % PRIME_BIGRAM_LENGTH;
  if (hash1 < 0)   hash1=PRIME_BIGRAM_LENGTH + hash1;
  if (hash2 < 0)   hash2=PRIME_BIGRAM_LENGTH + hash2;
  int index=hash1;
  int i=1;
  repeat++;
  while (bigramHashTable[index] != 0 && bigramHashTable[index] != hashId && i < PRIME_BIGRAM_LENGTH) {
    index=(hash1 + i * hash2) % PRIME_BIGRAM_LENGTH;
    i++;
    repeat++;
    if (i > max)     max=i;
  }
  if (i < PRIME_BIGRAM_LENGTH && bigramHashTable[index] == hashId) {
    return index;
  }
 else   return -1;
}
