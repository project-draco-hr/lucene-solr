{
  TermsFilter tf=new TermsFilter();
  String text=DOMUtils.getNonBlankTextOrFail(e);
  String fieldName=DOMUtils.getAttributeWithInheritanceOrFail(e,"fieldName");
  TokenStream ts=analyzer.tokenStream(fieldName,new StringReader(text));
  CharTermAttribute termAtt=ts.addAttribute(CharTermAttribute.class);
  try {
    Term term=null;
    while (ts.incrementToken()) {
      if (term == null) {
        term=new Term(fieldName,termAtt.toString());
      }
 else {
        term=term.createTerm(termAtt.toString());
      }
      tf.addTerm(term);
    }
  }
 catch (  IOException ioe) {
    throw new RuntimeException("Error constructing terms from index:" + ioe);
  }
  return tf;
}
