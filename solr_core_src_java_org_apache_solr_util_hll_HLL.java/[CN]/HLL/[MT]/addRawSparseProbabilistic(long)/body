{
  final long substreamValue=(rawValue >>> log2m);
  final byte p_w;
  if (substreamValue == 0L) {
    p_w=0;
  }
 else {
    p_w=(byte)(1 + BitUtil.leastSignificantBit(substreamValue | pwMaxMask));
  }
  if (p_w == 0) {
    return;
  }
  final int j=(int)(rawValue & mBitsMask);
  final byte currentValue;
  final int index=sparseProbabilisticStorage.indexOf(j);
  if (index >= 0) {
    currentValue=sparseProbabilisticStorage.indexGet(index);
  }
 else {
    currentValue=0;
  }
  if (p_w > currentValue) {
    sparseProbabilisticStorage.put(j,p_w);
  }
}
