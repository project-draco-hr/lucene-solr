{
  final int copyExpthresh;
  if (explicitAuto) {
    copyExpthresh=-1;
  }
 else   if (explicitOff) {
    copyExpthresh=0;
  }
 else {
    copyExpthresh=BitUtil.leastSignificantBit(explicitThreshold) + 1;
  }
  final HLL copy=new HLL(log2m,regwidth,copyExpthresh,!sparseOff,type);
switch (type) {
case EMPTY:
    break;
case EXPLICIT:
  copy.explicitStorage=this.explicitStorage.clone();
break;
case SPARSE:
copy.sparseProbabilisticStorage=this.sparseProbabilisticStorage.clone();
break;
case FULL:
copy.probabilisticStorage=this.probabilisticStorage.clone();
break;
default :
throw new RuntimeException("Unsupported HLL type " + type);
}
return copy;
}
