{
  assertU(adoc("id","1"));
  assertU(commit());
  try (SolrCore core=h.getCoreInc()){
    final RefCounted<SolrIndexSearcher> searcherRef=core.openNewSearcher(true,true);
    final SolrIndexSearcher searcher=searcherRef.get();
    try {
      final LeafReader reader=searcher.getLeafReader();
      assertEquals(1,reader.numDocs());
      final FieldInfos infos=reader.getFieldInfos();
      assertEquals(DocValuesType.NUMERIC,infos.fieldInfo("floatdv").getDocValuesType());
      assertEquals(DocValuesType.NUMERIC,infos.fieldInfo("intdv").getDocValuesType());
      assertEquals(DocValuesType.NUMERIC,infos.fieldInfo("doubledv").getDocValuesType());
      assertEquals(DocValuesType.NUMERIC,infos.fieldInfo("longdv").getDocValuesType());
      assertEquals(DocValuesType.SORTED,infos.fieldInfo("stringdv").getDocValuesType());
      assertEquals((long)Float.floatToIntBits(1),reader.getNumericDocValues("floatdv").get(0));
      assertEquals(2L,reader.getNumericDocValues("intdv").get(0));
      assertEquals(Double.doubleToLongBits(3),reader.getNumericDocValues("doubledv").get(0));
      assertEquals(4L,reader.getNumericDocValues("longdv").get(0));
      final IndexSchema schema=core.getLatestSchema();
      final SchemaField floatDv=schema.getField("floatdv");
      final SchemaField intDv=schema.getField("intdv");
      final SchemaField doubleDv=schema.getField("doubledv");
      final SchemaField longDv=schema.getField("longdv");
      FunctionValues values=floatDv.getType().getValueSource(floatDv,null).getValues(null,searcher.getLeafReader().leaves().get(0));
      assertEquals(1f,values.floatVal(0),0f);
      assertEquals(1f,values.objectVal(0));
      values=intDv.getType().getValueSource(intDv,null).getValues(null,searcher.getLeafReader().leaves().get(0));
      assertEquals(2,values.intVal(0));
      assertEquals(2,values.objectVal(0));
      values=doubleDv.getType().getValueSource(doubleDv,null).getValues(null,searcher.getLeafReader().leaves().get(0));
      assertEquals(3d,values.doubleVal(0),0d);
      assertEquals(3d,values.objectVal(0));
      values=longDv.getType().getValueSource(longDv,null).getValues(null,searcher.getLeafReader().leaves().get(0));
      assertEquals(4L,values.longVal(0));
      assertEquals(4L,values.objectVal(0));
    }
  finally {
      searcherRef.decref();
    }
  }
 }
