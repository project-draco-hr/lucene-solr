{
switch (random().nextInt(3)) {
case 0:
    return getConcurrentUpdateSolrClient(url.toString() + "/" + COLLECTION,httpClient,6,1);
case 1:
  return getHttpSolrClient(url.toString() + "/" + COLLECTION,httpClient);
case 2:
CloudSolrClient client=getCloudSolrClient(cluster.getZkServer().getZkAddress(),random().nextBoolean(),httpClient);
client.setParallelUpdates(random().nextBoolean());
client.setDefaultCollection(COLLECTION);
client.getLbClient().setConnectionTimeout(30000);
client.getLbClient().setSoTimeout(60000);
return client;
}
throw new RuntimeException("impossible");
}
