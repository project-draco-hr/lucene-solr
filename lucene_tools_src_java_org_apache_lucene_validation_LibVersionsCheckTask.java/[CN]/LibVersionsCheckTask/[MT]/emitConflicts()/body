{
  int conflicts=0;
  StringBuilder builder=new StringBuilder();
  for (  Map.Entry<String,Versions> directDependency : directDependencies.entrySet()) {
    String coordinate=directDependency.getKey();
    Set<Map.Entry<IvyNodeElement,Set<String>>> entrySet=directDependency.getValue().conflictLocations.entrySet();
    if (entrySet.isEmpty()) {
      continue;
    }
    ++conflicts;
    Map.Entry<IvyNodeElement,Set<String>> first=entrySet.iterator().next();
    int notPrinted=entrySet.size() - 1;
    builder.append("VERSION CONFLICT: transitive dependency in module(s) ");
    boolean isFirst=true;
    for (    String moduleName : first.getValue()) {
      if (isFirst) {
        isFirst=false;
      }
 else {
        builder.append(", ");
      }
      builder.append(moduleName);
    }
    builder.append(":\n");
    IvyNodeElement element=first.getKey();
    builder.append('/').append(element.getOrganization()).append('/').append(element.getName()).append('=').append(element.getRevision()).append('\n');
    emitConflict(builder,coordinate,first.getKey(),1);
    if (notPrinted > 0) {
      builder.append("... and ").append(notPrinted).append(" more\n");
    }
    builder.append("\n");
  }
  if (builder.length() > 0) {
    log(builder.toString());
  }
  return conflicts;
}
