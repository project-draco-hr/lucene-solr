{
  if (StringUtils.isEmpty(versionsStr)) {
    return Collections.emptyList();
  }
  List<String> ranges=StrUtils.splitSmart(versionsStr,",",true);
  List<Long> versionAvailable=null;
  try (UpdateLog.RecentUpdates recentUpdates=ulog.getRecentUpdates()){
    versionAvailable=recentUpdates.getVersions(ulog.getNumRecordsToKeep());
  }
   Collections.sort(versionAvailable,PeerSync.absComparator);
  Set<Long> versionsToRet=new HashSet<>(ulog.getNumRecordsToKeep());
  for (  String range : ranges) {
    String[] rangeBounds=range.split("\\.{3}");
    int indexStart=Collections.binarySearch(versionAvailable,Long.valueOf(rangeBounds[1]),PeerSync.absComparator);
    int indexEnd=Collections.binarySearch(versionAvailable,Long.valueOf(rangeBounds[0]),PeerSync.absComparator);
    if (indexStart >= 0 && indexEnd >= 0) {
      versionsToRet.addAll(versionAvailable.subList(indexStart,indexEnd + 1));
    }
  }
  return new ArrayList<>(versionsToRet);
}
