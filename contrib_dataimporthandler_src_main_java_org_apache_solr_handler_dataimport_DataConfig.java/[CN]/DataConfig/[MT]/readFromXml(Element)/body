{
  List<Element> n=getChildNodes(e,"document");
  if (!n.isEmpty())   documents=new ArrayList<Document>();
  for (  Element element : n)   documents.add(new Document(element));
  n=getChildNodes(e,SCRIPT);
  if (!n.isEmpty()) {
    script=new Script(n.get(0));
  }
  evaluators.put(EvaluatorBag.DATE_FORMAT_EVALUATOR,EvaluatorBag.getDateFormatEvaluator());
  evaluators.put(EvaluatorBag.SQL_ESCAPE_EVALUATOR,EvaluatorBag.getSqlEscapingEvaluator());
  evaluators.put(EvaluatorBag.URL_ENCODE_EVALUATOR,EvaluatorBag.getUrlEvaluator());
  n=getChildNodes(e,FUNCTION);
  if (!n.isEmpty()) {
    for (    Element element : n) {
      String func=getStringAttribute(element,NAME,null);
      String clz=getStringAttribute(element,CLASS,null);
      if (func == null || clz == null)       throw new DataImportHandlerException(DataImportHandlerException.SEVERE,"<function> must have a 'name' and 'class' attributes");
      try {
        evaluators.put(func,(Evaluator)DocBuilder.loadClass(clz).newInstance());
      }
 catch (      Exception exp) {
        throw new DataImportHandlerException(DataImportHandlerException.SEVERE,"Unable to instantiate evaluator: " + clz,exp);
      }
    }
  }
  n=getChildNodes(e,DATA_SRC);
  if (!n.isEmpty()) {
    for (    Element element : n) {
      Properties p=new Properties();
      HashMap<String,String> attrs=getAllAttributes(element);
      for (      Map.Entry<String,String> entry : attrs.entrySet()) {
        p.setProperty(entry.getKey(),entry.getValue());
      }
      dataSources.put(p.getProperty("name"),p);
    }
  }
}
