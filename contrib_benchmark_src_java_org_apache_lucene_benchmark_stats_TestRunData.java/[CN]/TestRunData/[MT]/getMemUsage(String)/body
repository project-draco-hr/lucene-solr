{
  Vector v=(Vector)data.get(label);
  if (v == null) {
    return null;
  }
  MemUsage res=new MemUsage();
  res.minFree=Long.MAX_VALUE;
  res.minTotal=Long.MAX_VALUE;
  long avgFree=0L, avgTotal=0L;
  for (int i=0; i < v.size(); i++) {
    TimeData td=(TimeData)v.get(i);
    if (res.maxFree < td.freeMem) {
      res.maxFree=td.freeMem;
    }
    if (res.maxTotal < td.totalMem) {
      res.maxTotal=td.totalMem;
    }
    if (res.minFree > td.freeMem) {
      res.minFree=td.freeMem;
    }
    if (res.minTotal > td.totalMem) {
      res.minTotal=td.totalMem;
    }
    avgFree+=td.freeMem;
    avgTotal+=td.totalMem;
  }
  res.avgFree=avgFree / v.size();
  res.avgTotal=avgTotal / v.size();
  return res;
}
