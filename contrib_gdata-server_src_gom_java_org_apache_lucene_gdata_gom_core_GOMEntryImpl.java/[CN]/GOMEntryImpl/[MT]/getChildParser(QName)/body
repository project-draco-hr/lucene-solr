{
  if (aName.getNamespaceURI().equals(GOMNamespace.ATOM_NS_URI)) {
    if (aName.getLocalPart().equals(GOMId.LOCALNAME)) {
      if (this.id != null)       throw new GDataParseException(String.format(AtomParser.DUPLICATE_ELEMENT,GOMId.LOCALNAME));
      this.id=new GOMIdImpl();
      return this.id;
    }
    if (aName.getLocalPart().equals(GOMTitle.LOCALNAME)) {
      if (this.title != null)       throw new GDataParseException(String.format(AtomParser.DUPLICATE_ELEMENT,GOMTitle.LOCALNAME));
      this.title=new GOMTitleImpl();
      return this.title;
    }
    if (aName.getLocalPart().equals(GOMAuthor.LOCALNAME)) {
      GOMAuthor author=new GOMAuthorImpl();
      this.authors.add(author);
      return author;
    }
    if (aName.getLocalPart().equals(GOMCategory.LOCALNAME)) {
      GOMCategory category=new GOMCategoryImpl();
      this.categories.add(category);
      return category;
    }
    if (aName.getLocalPart().equals(GOMContributor.LOCALNAME)) {
      GOMContributorImpl impl=new GOMContributorImpl();
      this.contributors.add(impl);
      return impl;
    }
    if (aName.getLocalPart().equals(GOMLink.LOCALNAME)) {
      GOMLinkImpl impl=new GOMLinkImpl();
      this.links.add(impl);
      return impl;
    }
    if (aName.getLocalPart().equals(GOMUpdated.LOCALNAME)) {
      if (this.updated != null)       throw new GDataParseException(String.format(AtomParser.DUPLICATE_ELEMENT,GOMUpdated.LOCALNAME));
      GOMUpdated updatedImpl=new GOMUpdatedImpl();
      this.updated=updatedImpl;
      return this.updated;
    }
    if (aName.getLocalPart().equals(GOMRights.LOCALNAME)) {
      if (this.rights != null)       throw new GDataParseException(String.format(AtomParser.DUPLICATE_ELEMENT,GOMRights.LOCALNAME));
      this.rights=new GOMRightsImpl();
      return this.rights;
    }
    if (aName.getLocalPart().equals(GOMSource.LOCALNAME)) {
      if (this.source != null)       throw new GDataParseException(String.format(AtomParser.DUPLICATE_ELEMENT,GOMSource.LOCALNAME));
      this.source=new GOMSourceImpl();
      return this.source;
    }
    if (aName.getLocalPart().equals(GOMSummary.LOCALNAME)) {
      if (this.summary != null)       throw new GDataParseException(String.format(AtomParser.DUPLICATE_ELEMENT,GOMSummary.LOCALNAME));
      this.summary=new GOMSummaryImpl();
      return this.summary;
    }
    if (aName.getLocalPart().equals(GOMPublished.LOCALNAME)) {
      if (this.published != null)       throw new GDataParseException(String.format(AtomParser.DUPLICATE_ELEMENT,GOMPublished.LOCALNAME));
      this.published=new GOMPublishedImpl();
      return this.published;
    }
    if (aName.getLocalPart().endsWith(GOMContent.LOCALNAME)) {
      if (this.content != null)       throw new GDataParseException(String.format(AtomParser.DUPLICATE_ELEMENT,GOMContent.LOCALNAME));
      this.content=new GOMContentImpl();
      return this.content;
    }
  }
  if (this.extensionFactory != null) {
    GOMExtension extension=this.extensionFactory.canHandleExtensionElement(aName);
    if (extension != null) {
      this.extensions.add(extension);
      return extension;
    }
  }
  return super.getChildParser(aName);
}
