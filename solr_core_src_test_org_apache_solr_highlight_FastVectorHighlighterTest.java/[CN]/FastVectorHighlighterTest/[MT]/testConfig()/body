{
  SolrHighlighter highlighter=HighlightComponent.getHighlighter(h.getCore());
  SolrFragListBuilder solrFlbNull=highlighter.fragListBuilders.get(null);
  SolrFragListBuilder solrFlbEmpty=highlighter.fragListBuilders.get("");
  SolrFragListBuilder solrFlbSimple=highlighter.fragListBuilders.get("simple");
  assertSame(solrFlbNull,solrFlbEmpty);
  assertTrue(solrFlbNull instanceof SimpleFragListBuilder);
  assertTrue(solrFlbSimple instanceof SimpleFragListBuilder);
  SolrFragmentsBuilder solrFbNull=highlighter.fragmentsBuilders.get(null);
  SolrFragmentsBuilder solrFbEmpty=highlighter.fragmentsBuilders.get("");
  SolrFragmentsBuilder solrFbSimple=highlighter.fragmentsBuilders.get("simple");
  SolrFragmentsBuilder solrFbSO=highlighter.fragmentsBuilders.get("scoreOrder");
  assertSame(solrFbNull,solrFbEmpty);
  assertTrue(solrFbNull instanceof SimpleFragmentsBuilder);
  assertTrue(solrFbSimple instanceof SimpleFragmentsBuilder);
  assertTrue(solrFbSO instanceof ScoreOrderFragmentsBuilder);
  SolrBoundaryScanner solrBsNull=highlighter.boundaryScanners.get(null);
  SolrBoundaryScanner solrBsEmpty=highlighter.boundaryScanners.get("");
  SolrBoundaryScanner solrBsSimple=highlighter.boundaryScanners.get("simple");
  SolrBoundaryScanner solrBsBI=highlighter.boundaryScanners.get("breakIterator");
  assertSame(solrBsNull,solrBsEmpty);
  assertTrue(solrBsNull instanceof SimpleBoundaryScanner);
  assertTrue(solrBsSimple instanceof SimpleBoundaryScanner);
  assertTrue(solrBsBI instanceof BreakIteratorBoundaryScanner);
}
