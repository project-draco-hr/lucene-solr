{
  String fieldTypeName=(String)expected.get("name");
  List<String> tests=new ArrayList<>();
  tests.add("count(/response/lst[@name='fieldType']) = 1");
  tests.add("count(/response/lst[@name='fieldType']/*) = " + expectedChildCount);
  tests.add("count(/response/lst[@name='fieldType']/arr[@name='fields']/*) = 0");
  tests.add("count(/response/lst[@name='fieldType']/arr[@name='dynamicFields']/*) = 0");
  for (  Map.Entry<String,Object> next : expected.entrySet()) {
    Object val=next.getValue();
    String pathType=null;
    if (val instanceof Boolean)     pathType="bool";
 else     if (val instanceof String)     pathType="str";
 else     fail("Unexpected value type " + val.getClass().getName());
    String xpath="/response/lst[@name='fieldType']/" + pathType + "[@name='"+ next.getKey()+ "']";
    tests.add(xpath + " = '" + val+ "'");
  }
  if (addlTests != null)   tests.addAll(addlTests);
  assertQ("/schema/fieldtypes/" + fieldTypeName + "?indent=on&wt=xml&showDefaults=true",tests.toArray(new String[0]));
}
