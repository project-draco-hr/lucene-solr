{
  PossibilityIterator iter=new PossibilityIterator(suggestions);
  int count=0;
  while (iter.hasNext()) {
    iter.next();
    count++;
  }
  assertTrue(("Three maps (8*9*10) should return 720 iterations but instead returned " + count),count == 720);
  suggestions.remove(new Token("CEE",0,2));
  iter=new PossibilityIterator(suggestions);
  count=0;
  while (iter.hasNext()) {
    iter.next();
    count++;
  }
  assertTrue(("Two maps (8*9) should return 72 iterations but instead returned " + count),count == 72);
  suggestions.remove(new Token("BEE",0,2));
  iter=new PossibilityIterator(suggestions);
  count=0;
  while (iter.hasNext()) {
    iter.next();
    count++;
  }
  assertTrue(("One map of 8 should return 8 iterations but instead returned " + count),count == 8);
  suggestions.remove(new Token("AYE",0,2));
  iter=new PossibilityIterator(suggestions);
  count=0;
  while (iter.hasNext()) {
    iter.next();
    count++;
  }
  assertTrue(("No maps should return 0 iterations but instead returned " + count),count == 0);
}
