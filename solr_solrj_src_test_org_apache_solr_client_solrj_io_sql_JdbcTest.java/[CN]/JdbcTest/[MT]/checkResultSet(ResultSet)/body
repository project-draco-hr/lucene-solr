{
  assertNull(rs.getWarnings());
  rs.clearWarnings();
  assertNull(rs.getWarnings());
  assertEquals(ResultSet.TYPE_FORWARD_ONLY,rs.getType());
  assertEquals(ResultSet.CONCUR_READ_ONLY,rs.getConcurrency());
  assertEquals(ResultSet.FETCH_FORWARD,rs.getFetchDirection());
  rs.setFetchDirection(ResultSet.FETCH_FORWARD);
  assertEquals(ResultSet.FETCH_FORWARD,rs.getFetchDirection());
  assertEquals(0,rs.getFetchSize());
  rs.setFetchSize(10);
  assertEquals(0,rs.getFetchSize());
  assertTrue(rs.next());
  assertEquals(14L,rs.getObject("a_i"));
  assertFalse(rs.wasNull());
  assertEquals(14L,rs.getObject(2));
  assertFalse(rs.wasNull());
  assertEquals(14L,rs.getLong("a_i"));
  assertFalse(rs.wasNull());
  assertEquals(14L,rs.getLong(2));
  assertFalse(rs.wasNull());
  assertEquals(14D,rs.getDouble("a_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(14D,rs.getDouble(2),0);
  assertFalse(rs.wasNull());
  assertEquals(14f,rs.getFloat("a_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(14f,rs.getFloat(2),0);
  assertFalse(rs.wasNull());
  assertEquals(14,rs.getShort("a_i"));
  assertFalse(rs.wasNull());
  assertEquals(14,rs.getShort(2));
  assertFalse(rs.wasNull());
  assertEquals(14,rs.getByte("a_i"));
  assertFalse(rs.wasNull());
  assertEquals(14,rs.getByte(2));
  assertFalse(rs.wasNull());
  assertEquals("hello0",rs.getObject("a_s"));
  assertFalse(rs.wasNull());
  assertEquals("hello0",rs.getObject(3));
  assertFalse(rs.wasNull());
  assertEquals("hello0",rs.getString("a_s"));
  assertFalse(rs.wasNull());
  assertEquals("hello0",rs.getString(3));
  assertFalse(rs.wasNull());
  assertEquals(10D,rs.getObject("my_float_col"));
  assertFalse(rs.wasNull());
  assertEquals(10D,rs.getObject(4));
  assertFalse(rs.wasNull());
  assertEquals(10D,rs.getDouble("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(10D,rs.getDouble(4),0);
  assertFalse(rs.wasNull());
  assertEquals(10F,rs.getFloat("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(10F,rs.getFloat(4),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getInt("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getInt(4),0);
  assertFalse(rs.wasNull());
  assertEquals(10L,rs.getLong("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(10L,rs.getLong(4),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getShort("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getShort(4),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getByte("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getByte(4),0);
  assertFalse(rs.wasNull());
  assertEquals(10L,rs.getObject("testnull_i"));
  assertFalse(rs.wasNull());
  assertEquals(10L,rs.getObject(5));
  assertFalse(rs.wasNull());
  assertEquals("10",rs.getString("testnull_i"));
  assertFalse(rs.wasNull());
  assertEquals("10",rs.getString(5));
  assertFalse(rs.wasNull());
  assertEquals(10D,rs.getDouble("testnull_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(10D,rs.getDouble(5),0);
  assertFalse(rs.wasNull());
  assertEquals(10F,rs.getFloat("testnull_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(10F,rs.getFloat(5),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getInt("testnull_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getInt(5),0);
  assertFalse(rs.wasNull());
  assertEquals(10L,rs.getLong("testnull_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(10L,rs.getLong(5),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getShort("testnull_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getShort(5),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getByte("testnull_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(10,rs.getByte(5),0);
  assertFalse(rs.wasNull());
  assertTrue(rs.next());
  assertEquals(13L,rs.getObject("a_i"));
  assertFalse(rs.wasNull());
  assertEquals(13L,rs.getObject(2));
  assertFalse(rs.wasNull());
  assertEquals(13L,rs.getLong("a_i"));
  assertFalse(rs.wasNull());
  assertEquals(13L,rs.getLong(2));
  assertFalse(rs.wasNull());
  assertEquals(13D,rs.getDouble("a_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(13D,rs.getDouble(2),0);
  assertFalse(rs.wasNull());
  assertEquals(13f,rs.getFloat("a_i"),0);
  assertFalse(rs.wasNull());
  assertEquals(13f,rs.getFloat(2),0);
  assertFalse(rs.wasNull());
  assertEquals(13,rs.getShort("a_i"));
  assertFalse(rs.wasNull());
  assertEquals(13,rs.getShort(2));
  assertFalse(rs.wasNull());
  assertEquals(13,rs.getByte("a_i"));
  assertFalse(rs.wasNull());
  assertEquals(13,rs.getByte(2));
  assertFalse(rs.wasNull());
  assertEquals("hello3",rs.getObject("a_s"));
  assertFalse(rs.wasNull());
  assertEquals("hello3",rs.getObject(3));
  assertFalse(rs.wasNull());
  assertEquals("hello3",rs.getString("a_s"));
  assertFalse(rs.wasNull());
  assertEquals("hello3",rs.getString(3));
  assertFalse(rs.wasNull());
  assertEquals(9D,rs.getObject("my_float_col"));
  assertFalse(rs.wasNull());
  assertEquals(9D,rs.getObject(4));
  assertFalse(rs.wasNull());
  assertEquals(9D,rs.getDouble("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(9D,rs.getDouble(4),0);
  assertFalse(rs.wasNull());
  assertEquals(9F,rs.getFloat("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(9F,rs.getFloat(4),0);
  assertFalse(rs.wasNull());
  assertEquals(9,rs.getInt("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(9,rs.getInt(4),0);
  assertFalse(rs.wasNull());
  assertEquals(9L,rs.getLong("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(9L,rs.getLong(4),0);
  assertFalse(rs.wasNull());
  assertEquals(9,rs.getShort("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(9,rs.getShort(4),0);
  assertFalse(rs.wasNull());
  assertEquals(9,rs.getByte("my_float_col"),0);
  assertFalse(rs.wasNull());
  assertEquals(9,rs.getByte(4),0);
  assertFalse(rs.wasNull());
  assertEquals(null,rs.getObject("testnull_i"));
  assertTrue(rs.wasNull());
  assertEquals(null,rs.getObject(5));
  assertTrue(rs.wasNull());
  assertEquals(null,rs.getString("testnull_i"));
  assertTrue(rs.wasNull());
  assertEquals(null,rs.getString(5));
  assertTrue(rs.wasNull());
  assertEquals(0D,rs.getDouble("testnull_i"),0);
  assertTrue(rs.wasNull());
  assertEquals(0D,rs.getDouble(5),0);
  assertTrue(rs.wasNull());
  assertEquals(0F,rs.getFloat("testnull_i"),0);
  assertTrue(rs.wasNull());
  assertEquals(0F,rs.getFloat(5),0);
  assertTrue(rs.wasNull());
  assertEquals(0,rs.getInt("testnull_i"));
  assertTrue(rs.wasNull());
  assertEquals(0,rs.getInt(5));
  assertTrue(rs.wasNull());
  assertEquals(0L,rs.getLong("testnull_i"));
  assertTrue(rs.wasNull());
  assertEquals(0L,rs.getLong(5));
  assertTrue(rs.wasNull());
  assertEquals(0,rs.getShort("testnull_i"));
  assertTrue(rs.wasNull());
  assertEquals(0,rs.getShort(5));
  assertTrue(rs.wasNull());
  assertEquals(0,rs.getByte("testnull_i"));
  assertTrue(rs.wasNull());
  assertEquals(0,rs.getByte(5));
  assertTrue(rs.wasNull());
  assertFalse(rs.next());
}
