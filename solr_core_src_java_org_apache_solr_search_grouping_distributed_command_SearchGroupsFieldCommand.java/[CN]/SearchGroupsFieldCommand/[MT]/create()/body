{
  List<Collector> collectors=new ArrayList<>();
  FieldType fieldType=field.getType();
  if (topNGroups > 0) {
    if (fieldType.getNumericType() != null) {
      ValueSource vs=fieldType.getValueSource(field,null);
      firstPassGroupingCollector=new FunctionFirstPassGroupingCollector(vs,new HashMap<Object,Object>(),groupSort,topNGroups);
    }
 else {
      firstPassGroupingCollector=new TermFirstPassGroupingCollector(field.getName(),groupSort,topNGroups);
    }
    collectors.add(firstPassGroupingCollector);
  }
  if (includeGroupCount) {
    if (fieldType.getNumericType() != null) {
      ValueSource vs=fieldType.getValueSource(field,null);
      allGroupsCollector=new FunctionAllGroupsCollector(vs,new HashMap<Object,Object>());
    }
 else {
      allGroupsCollector=new TermAllGroupsCollector(field.getName());
    }
    collectors.add(allGroupsCollector);
  }
  return collectors;
}
