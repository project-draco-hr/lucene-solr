{
  if (isPass2ResolvingPhrases) {
    MultiTermQuery.RewriteMethod oldMethod=getMultiTermRewriteMethod();
    try {
      setMultiTermRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);
      return super.parse(query);
    }
  finally {
      setMultiTermRewriteMethod(oldMethod);
    }
  }
  complexPhrases=new ArrayList();
  Query q=super.parse(query);
  isPass2ResolvingPhrases=true;
  try {
    for (Iterator iterator=complexPhrases.iterator(); iterator.hasNext(); ) {
      currentPhraseQuery=(ComplexPhraseQuery)iterator.next();
      currentPhraseQuery.parsePhraseElements(this);
    }
  }
  finally {
    isPass2ResolvingPhrases=false;
  }
  return q;
}
