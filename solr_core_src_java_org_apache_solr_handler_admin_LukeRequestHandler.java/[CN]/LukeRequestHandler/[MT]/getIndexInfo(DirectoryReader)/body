{
  Directory dir=reader.directory();
  SimpleOrderedMap<Object> indexInfo=new SimpleOrderedMap<>();
  indexInfo.add("numDocs",reader.numDocs());
  indexInfo.add("maxDoc",reader.maxDoc());
  indexInfo.add("deletedDocs",reader.maxDoc() - reader.numDocs());
  indexInfo.add("indexHeapUsageBytes",getIndexHeapUsed(reader));
  indexInfo.add("version",reader.getVersion());
  indexInfo.add("segmentCount",reader.leaves().size());
  indexInfo.add("current",reader.isCurrent());
  indexInfo.add("hasDeletions",reader.hasDeletions());
  indexInfo.add("directory",dir);
  IndexCommit indexCommit=reader.getIndexCommit();
  String segmentsFileName=indexCommit.getSegmentsFileName();
  indexInfo.add("segmentsFile",segmentsFileName);
  indexInfo.add("segmentsFileSizeInBytes",getFileLength(indexCommit.getDirectory(),segmentsFileName));
  Map<String,String> userData=indexCommit.getUserData();
  indexInfo.add("userData",userData);
  String s=userData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);
  if (s != null) {
    indexInfo.add("lastModified",new Date(Long.parseLong(s)));
  }
  return indexInfo;
}
