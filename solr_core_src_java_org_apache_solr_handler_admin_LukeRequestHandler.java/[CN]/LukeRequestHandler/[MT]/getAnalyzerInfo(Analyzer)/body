{
  SimpleOrderedMap<Object> aninfo=new SimpleOrderedMap<>();
  aninfo.add("className",analyzer.getClass().getName());
  if (analyzer instanceof TokenizerChain) {
    TokenizerChain tchain=(TokenizerChain)analyzer;
    CharFilterFactory[] cfiltfacs=tchain.getCharFilterFactories();
    if (0 < cfiltfacs.length) {
      SimpleOrderedMap<Map<String,Object>> cfilters=new SimpleOrderedMap<>();
      for (      CharFilterFactory cfiltfac : cfiltfacs) {
        Map<String,Object> tok=new HashMap<>();
        String className=cfiltfac.getClass().getName();
        tok.put("className",className);
        tok.put("args",cfiltfac.getOriginalArgs());
        cfilters.add(className.substring(className.lastIndexOf('.') + 1),tok);
      }
      aninfo.add("charFilters",cfilters);
    }
    SimpleOrderedMap<Object> tokenizer=new SimpleOrderedMap<>();
    TokenizerFactory tfac=tchain.getTokenizerFactory();
    tokenizer.add("className",tfac.getClass().getName());
    tokenizer.add("args",tfac.getOriginalArgs());
    aninfo.add("tokenizer",tokenizer);
    TokenFilterFactory[] filtfacs=tchain.getTokenFilterFactories();
    if (0 < filtfacs.length) {
      SimpleOrderedMap<Map<String,Object>> filters=new SimpleOrderedMap<>();
      for (      TokenFilterFactory filtfac : filtfacs) {
        Map<String,Object> tok=new HashMap<>();
        String className=filtfac.getClass().getName();
        tok.put("className",className);
        tok.put("args",filtfac.getOriginalArgs());
        filters.add(className.substring(className.lastIndexOf('.') + 1),tok);
      }
      aninfo.add("filters",filters);
    }
  }
  return aninfo;
}
