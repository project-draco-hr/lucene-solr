{
  HashMap scoresX=getScores(full.search(queryX,null,1000).scoreDocs,full);
  HashMap scoresY=getScores(full.search(queryY,null,1000).scoreDocs,full);
  HashMap scoresA=getScores(full.search(queryA,null,1000).scoreDocs,full);
  MultiSearcher remote=new MultiSearcher(new Searchable[]{getRemote()});
  sort=new Sort();
  assertSameValues(scoresX,getScores(remote.search(queryX,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresY,getScores(remote.search(queryY,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresA,getScores(remote.search(queryA,null,1000,sort).scoreDocs,remote));
  sort.setSort(SortField.FIELD_DOC);
  assertSameValues(scoresX,getScores(remote.search(queryX,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresY,getScores(remote.search(queryY,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresA,getScores(remote.search(queryA,null,1000,sort).scoreDocs,remote));
  sort.setSort("int");
  assertSameValues(scoresX,getScores(remote.search(queryX,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresY,getScores(remote.search(queryY,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresA,getScores(remote.search(queryA,null,1000,sort).scoreDocs,remote));
  sort.setSort("float");
  assertSameValues(scoresX,getScores(remote.search(queryX,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresY,getScores(remote.search(queryY,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresA,getScores(remote.search(queryA,null,1000,sort).scoreDocs,remote));
  sort.setSort("string");
  assertSameValues(scoresX,getScores(remote.search(queryX,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresY,getScores(remote.search(queryY,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresA,getScores(remote.search(queryA,null,1000,sort).scoreDocs,remote));
  sort.setSort(new String[]{"int","float"});
  assertSameValues(scoresX,getScores(remote.search(queryX,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresY,getScores(remote.search(queryY,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresA,getScores(remote.search(queryA,null,1000,sort).scoreDocs,remote));
  sort.setSort(new SortField[]{new SortField("int",SortField.INT,true),new SortField(null,SortField.DOC,true)});
  assertSameValues(scoresX,getScores(remote.search(queryX,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresY,getScores(remote.search(queryY,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresA,getScores(remote.search(queryA,null,1000,sort).scoreDocs,remote));
  sort.setSort(new String[]{"float","string"});
  assertSameValues(scoresX,getScores(remote.search(queryX,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresY,getScores(remote.search(queryY,null,1000,sort).scoreDocs,remote));
  assertSameValues(scoresA,getScores(remote.search(queryA,null,1000,sort).scoreDocs,remote));
}
