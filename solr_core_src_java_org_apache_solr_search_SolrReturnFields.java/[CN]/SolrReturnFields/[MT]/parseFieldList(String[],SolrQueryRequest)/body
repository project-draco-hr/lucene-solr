{
  _wantsScore=false;
  _wantsAllFields=false;
  if (fl == null || fl.length == 0 || fl.length == 1 && fl[0].length() == 0) {
    _wantsAllFields=true;
    return;
  }
  NamedList<String> rename=new NamedList<>();
  DocTransformers augmenters=new DocTransformers();
  for (  String fieldList : fl) {
    add(fieldList,rename,augmenters,req);
  }
  for (int i=0; i < rename.size(); i++) {
    String from=rename.getName(i);
    String to=rename.getVal(i);
    okFieldNames.add(to);
    boolean copy=(reqFieldNames != null && reqFieldNames.contains(from));
    if (!copy) {
      for (int j=i + 1; j < rename.size(); j++) {
        if (from.equals(rename.getName(j))) {
          rename.setName(j,to);
          if (reqFieldNames == null) {
            reqFieldNames=new LinkedHashSet<>();
          }
          reqFieldNames.add(to);
        }
      }
    }
    augmenters.addTransformer(new RenameFieldTransformer(from,to,copy));
  }
  if (!_wantsAllFields) {
    if (!globs.isEmpty()) {
      fields.clear();
    }
    okFieldNames.addAll(fields);
  }
  if (augmenters.size() == 1) {
    transformer=augmenters.getTransformer(0);
  }
 else   if (augmenters.size() > 1) {
    transformer=augmenters;
  }
}
