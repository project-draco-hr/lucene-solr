{
  if (indexReader == null) {
    indexReader=DirectoryReader.open(indexDir);
    lastIndexGeneration=indexReader.getIndexCommit().getGeneration();
    taxoReader=new DirectoryTaxonomyReader(taxoDir);
  }
 else {
    DirectoryReader newReader=DirectoryReader.openIfChanged(indexReader);
    assertNotNull("should not have reached here if no changes were made to the index",newReader);
    long newGeneration=newReader.getIndexCommit().getGeneration();
    assertTrue("expected newer generation; current=" + lastIndexGeneration + " new="+ newGeneration,newGeneration > lastIndexGeneration);
    indexReader.close();
    indexReader=newReader;
    lastIndexGeneration=newGeneration;
    _TestUtil.checkIndex(indexDir);
    DirectoryTaxonomyReader newTaxoReader=TaxonomyReader.openIfChanged(taxoReader);
    if (newTaxoReader != null) {
      taxoReader.close();
      taxoReader=newTaxoReader;
    }
    _TestUtil.checkIndex(taxoDir);
    int id=Integer.parseInt(indexReader.getIndexCommit().getUserData().get(VERSION_ID),16);
    IndexSearcher searcher=new IndexSearcher(indexReader);
    FacetsCollector fc=new FacetsCollector();
    searcher.search(new MatchAllDocsQuery(),fc);
    Facets facets=new FastTaxonomyFacetCounts(taxoReader,config,fc);
    assertEquals(1,facets.getSpecificValue("A",Integer.toString(id,16)).intValue());
    DrillDownQuery drillDown=new DrillDownQuery(config);
    drillDown.add("A",Integer.toString(id,16));
    TopDocs docs=searcher.search(drillDown,10);
    assertEquals(1,docs.totalHits);
  }
  return null;
}
