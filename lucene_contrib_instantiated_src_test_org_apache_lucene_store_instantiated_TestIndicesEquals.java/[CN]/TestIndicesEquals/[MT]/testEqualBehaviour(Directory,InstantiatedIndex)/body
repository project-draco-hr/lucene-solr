{
  testEquals(aprioriIndex,testIndex);
  IndexReader air=IndexReader.open(aprioriIndex,false);
  InstantiatedIndexReader tir=testIndex.indexReaderFactory();
  assertEquals(air.isCurrent(),tir.isCurrent());
  assertEquals(air.hasDeletions(),tir.hasDeletions());
  assertEquals(air.maxDoc(),tir.maxDoc());
  assertEquals(air.numDocs(),tir.numDocs());
  assertEquals(air.numDeletedDocs(),tir.numDeletedDocs());
  air.deleteDocument(3);
  tir.deleteDocument(3);
  assertEquals(air.isCurrent(),tir.isCurrent());
  assertEquals(air.hasDeletions(),tir.hasDeletions());
  assertEquals(air.maxDoc(),tir.maxDoc());
  assertEquals(air.numDocs(),tir.numDocs());
  assertEquals(air.numDeletedDocs(),tir.numDeletedDocs());
  air.deleteDocument(8);
  tir.deleteDocument(8);
  assertEquals(air.isCurrent(),tir.isCurrent());
  assertEquals(air.hasDeletions(),tir.hasDeletions());
  assertEquals(air.maxDoc(),tir.maxDoc());
  assertEquals(air.numDocs(),tir.numDocs());
  assertEquals(air.numDeletedDocs(),tir.numDeletedDocs());
  air.close();
  tir.close();
  air=IndexReader.open(aprioriIndex,false);
  tir=testIndex.indexReaderFactory();
  assertEquals(air.isCurrent(),tir.isCurrent());
  assertEquals(air.hasDeletions(),tir.hasDeletions());
  assertEquals(air.maxDoc(),tir.maxDoc());
  assertEquals(air.numDocs(),tir.numDocs());
  assertEquals(air.numDeletedDocs(),tir.numDeletedDocs());
  final Bits aLiveDocs=MultiFields.getLiveDocs(air);
  final Bits tLiveDocs=MultiFields.getLiveDocs(tir);
  assertTrue((aLiveDocs != null && tLiveDocs != null) || (aLiveDocs == null && tLiveDocs == null));
  if (aLiveDocs != null) {
    for (int d=0; d < air.maxDoc(); d++) {
      assertEquals(aLiveDocs.get(d),tLiveDocs.get(d));
    }
  }
  air.close();
  tir.close();
  testEquals(aprioriIndex,testIndex);
}
