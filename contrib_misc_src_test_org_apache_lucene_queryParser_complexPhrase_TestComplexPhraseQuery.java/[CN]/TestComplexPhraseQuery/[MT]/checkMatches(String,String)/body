{
  QueryParser qp=new ComplexPhraseQueryParser(Version.LUCENE_CURRENT,defaultFieldName,analyzer);
  qp.setFuzzyPrefixLength(1);
  Query q=qp.parse(qString);
  HashSet<String> expecteds=new HashSet<String>();
  String[] vals=expectedVals.split(",");
  for (int i=0; i < vals.length; i++) {
    if (vals[i].length() > 0)     expecteds.add(vals[i]);
  }
  TopDocs td=searcher.search(q,10);
  ScoreDoc[] sd=td.scoreDocs;
  for (int i=0; i < sd.length; i++) {
    Document doc=searcher.doc(sd[i].doc);
    String id=doc.get("id");
    assertTrue(qString + "matched doc#" + id+ " not expected",expecteds.contains(id));
    expecteds.remove(id);
  }
  assertEquals(qString + " missing some matches ",0,expecteds.size());
}
