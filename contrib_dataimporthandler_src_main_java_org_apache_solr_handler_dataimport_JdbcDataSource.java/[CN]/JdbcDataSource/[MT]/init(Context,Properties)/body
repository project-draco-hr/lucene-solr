{
  Object o=initProps.get(CONVERT_TYPE);
  if (o != null)   convertType=Boolean.parseBoolean(o.toString());
  factory=createConnectionFactory(context,initProps);
  String bsz=initProps.getProperty("batchSize");
  if (bsz != null) {
    bsz=(String)context.getVariableResolver().replaceTokens(bsz);
    try {
      batchSize=Integer.parseInt(bsz);
      if (batchSize == -1)       batchSize=Integer.MIN_VALUE;
    }
 catch (    NumberFormatException e) {
      LOG.warn("Invalid batch size: " + bsz);
    }
  }
  for (  Map<String,String> map : context.getAllEntityFields()) {
    String n=map.get(DataImporter.COLUMN);
    String t=map.get(DataImporter.TYPE);
    if ("sint".equals(t) || "integer".equals(t))     fieldNameVsType.put(n,Types.INTEGER);
 else     if ("slong".equals(t) || "long".equals(t))     fieldNameVsType.put(n,Types.BIGINT);
 else     if ("float".equals(t) || "sfloat".equals(t))     fieldNameVsType.put(n,Types.FLOAT);
 else     if ("double".equals(t) || "sdouble".equals(t))     fieldNameVsType.put(n,Types.DOUBLE);
 else     if ("date".equals(t))     fieldNameVsType.put(n,Types.DATE);
 else     if ("boolean".equals(t))     fieldNameVsType.put(n,Types.BOOLEAN);
 else     fieldNameVsType.put(n,Types.VARCHAR);
  }
}
