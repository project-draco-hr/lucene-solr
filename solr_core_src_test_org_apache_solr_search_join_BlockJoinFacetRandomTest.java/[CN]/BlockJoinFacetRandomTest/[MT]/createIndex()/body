{
  int i=0;
  List<List<List<String>>> blocks=createBlocks();
  for (  List<List<String>> block : blocks) {
    List<XmlDoc> updBlock=new ArrayList<>();
    for (    List<String> blockFields : block) {
      blockFields.add("id");
      blockFields.add(Integer.toString(i));
      updBlock.add(doc(blockFields.toArray(new String[blockFields.size()])));
      i++;
    }
    XmlDoc parentDoc=updBlock.get(updBlock.size() - 1);
    parentDoc.xml=parentDoc.xml.replace("</doc>",updBlock.subList(0,updBlock.size() - 1).toString().replaceAll("[\\[\\]]","") + "</doc>");
    assertU(add(parentDoc));
    if (random().nextBoolean()) {
      assertU(commit());
      if (random().nextBoolean()) {
        assertU(commit());
      }
    }
  }
  assertU(commit());
  assertQ(req("q","*:*"),"//*[@numFound='" + i + "']");
}
