def toDOT(self, label):
    __l = []
    w = __l.append
    endNode = startNode = None
    for (id, details) in self.states.items():
        name = details[0]
        if (name == 'end'):
            endNode = id
        elif (name == 'start'):
            startNode = id
    w(('digraph %s {' % label))
    w('  rankdir=LR;')
    w('  size="8,5";')
    w('  node [color=white label=""]; Ns;')
    w('  node [color=black];')
    w(('  node [shape=doublecircle, label=""]; N%s [label="%s"];' % (endNode, endNode)))
    w('  node [shape=circle];')
    w(('  N%s [label="%s"];' % (startNode, startNode)))
    w(('  Ns -> N%s;' % startNode))
    for (id, details) in self.states.items():
        edges = details[1:]
        w(('  N%s [label="%s"];' % (id, id)))
        for (type, s, e, dest) in edges:
            c = typeToColor.get(type, 'black')
            if (type == 'all*'):
                label = '*'
            elif (s == e):
                label = ('%s' % binary(s))
            else:
                label = ('%s-%s' % (binary(s), binary(e)))
            w(('  N%s -> N%s [label="%s" color="%s"];' % (id, dest, label, c)))
        if (name == 'end'):
            endNode = id
        elif (name == 'start'):
            startNode = id
    w('}')
    return '\n'.join(__l)
