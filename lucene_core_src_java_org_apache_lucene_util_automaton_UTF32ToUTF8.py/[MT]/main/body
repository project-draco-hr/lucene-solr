def main():
    if (len(sys.argv) not in (3, 4)):
        print 
        print ('Usage: python %s startUTF32 endUTF32 [testCode]' % sys.argv[0])
        print 
        sys.exit(1)
    utf32Start = int(sys.argv[1])
    utf32End = int(sys.argv[2])
    if (utf32Start > utf32End):
        print 'ERROR: start must be <= end'
        sys.exit(1)
    fsa = FSA()
    fsa.start = fsa.addNode('start')
    fsa.end = fsa.addNode('end')
    print ('s=%s' % ' '.join([binary(x[0]) for x in toUTF8(utf32Start)]))
    print ('e=%s' % ' '.join([binary(x[0]) for x in toUTF8(utf32End)]))
    if (len(sys.argv) == 4):
        print ('t=%s [%s]' % (' '.join([binary(x[0]) for x in toUTF8(int(sys.argv[3]))]), ' '.join([('%2x' % x[0]) for x in toUTF8(int(sys.argv[3]))])))
    build(fsa, fsa.start, fsa.end, toUTF8(utf32Start), toUTF8(utf32End))
    fsa.toPNG('test', '/tmp/outpy.png')
    print 'Saved to /tmp/outpy.png...'
    test(fsa, utf32Start, utf32End, 100000)
