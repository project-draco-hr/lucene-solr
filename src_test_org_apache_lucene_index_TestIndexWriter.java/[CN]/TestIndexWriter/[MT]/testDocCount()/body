{
  Directory dir=new RAMDirectory();
  IndexWriter writer=null;
  IndexReader reader=null;
  int i;
  IndexWriter.setDefaultWriteLockTimeout(2000);
  assertEquals(2000,IndexWriter.getDefaultWriteLockTimeout());
  writer=new IndexWriter(dir,new WhitespaceAnalyzer(),IndexWriter.MaxFieldLength.LIMITED);
  IndexWriter.setDefaultWriteLockTimeout(1000);
  for (i=0; i < 100; i++) {
    addDoc(writer);
  }
  assertEquals(100,writer.maxDoc());
  writer.close();
  reader=IndexReader.open(dir,false);
  for (i=0; i < 40; i++) {
    reader.deleteDocument(i);
  }
  reader.close();
  writer=new IndexWriter(dir,new WhitespaceAnalyzer(),IndexWriter.MaxFieldLength.LIMITED);
  assertEquals(100,writer.maxDoc());
  writer.close();
  reader=IndexReader.open(dir,true);
  assertEquals(100,reader.maxDoc());
  assertEquals(60,reader.numDocs());
  reader.close();
  writer=new IndexWriter(dir,new WhitespaceAnalyzer(),IndexWriter.MaxFieldLength.UNLIMITED);
  assertEquals(100,writer.maxDoc());
  assertEquals(60,writer.numDocs());
  writer.optimize();
  assertEquals(60,writer.maxDoc());
  assertEquals(60,writer.numDocs());
  writer.close();
  reader=IndexReader.open(dir,true);
  assertEquals(60,reader.maxDoc());
  assertEquals(60,reader.numDocs());
  reader.close();
  writer=new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED);
  assertEquals(0,writer.maxDoc());
  assertEquals(0,writer.numDocs());
  writer.close();
}
