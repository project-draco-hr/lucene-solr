{
  RAMDirectory dir=new RAMDirectory();
  IndexWriter writer=new IndexWriter(dir,new StandardAnalyzer(),true);
  char[] chars=new char[16383];
  Arrays.fill(chars,'x');
  Document doc=new Document();
  final String bigTerm=new String(chars);
  String contents="abc xyz x" + bigTerm + " another term";
  doc.add(new Field("content",contents,Field.Store.NO,Field.Index.TOKENIZED));
  writer.addDocument(doc);
  doc=new Document();
  doc.add(new Field("content","abc bbb ccc",Field.Store.NO,Field.Index.TOKENIZED));
  writer.addDocument(doc);
  writer.close();
  IndexReader reader=IndexReader.open(dir);
  assertEquals(2,reader.docFreq(new Term("content","abc")));
  assertEquals(1,reader.docFreq(new Term("content","bbb")));
  assertEquals(1,reader.docFreq(new Term("content","term")));
  assertEquals(1,reader.docFreq(new Term("content","another")));
  TermPositions tps=reader.termPositions(new Term("content","another"));
  assertTrue(tps.next());
  assertEquals(1,tps.freq());
  assertEquals(3,tps.nextPosition());
  assertEquals("document with wicked long term should is not in the index!",2,reader.numDocs());
  reader.close();
  doc=new Document();
  doc.add(new Field("content",bigTerm,Field.Store.NO,Field.Index.TOKENIZED));
  StandardAnalyzer sa=new StandardAnalyzer();
  sa.setMaxTokenLength(100000);
  writer=new IndexWriter(dir,sa);
  writer.addDocument(doc);
  writer.close();
  reader=IndexReader.open(dir);
  assertEquals(1,reader.docFreq(new Term("content",bigTerm)));
  reader.close();
  dir.close();
}
