{
  Directory dir=new MockRAMDirectory();
  IndexWriter writer=new IndexWriter(dir,false,new StandardAnalyzer(),IndexWriter.MaxFieldLength.LIMITED);
  writer.setMaxBufferedDocs(2);
  writer.setRAMBufferSizeMB(IndexWriter.DISABLE_AUTO_FLUSH);
  writer.setMergeScheduler(new SerialMergeScheduler());
  writer.setMergePolicy(new LogDocMergePolicy());
  Document document=new Document();
  document=new Document();
  Field storedField=new Field("stored","stored",Field.Store.YES,Field.Index.NO);
  document.add(storedField);
  Field termVectorField=new Field("termVector","termVector",Field.Store.NO,Field.Index.UN_TOKENIZED,Field.TermVector.WITH_POSITIONS_OFFSETS);
  document.add(termVectorField);
  for (int i=0; i < 10; i++)   writer.addDocument(document);
  writer.close();
  writer=new IndexWriter(dir,false,new StandardAnalyzer(),IndexWriter.MaxFieldLength.LIMITED);
  writer.setMaxBufferedDocs(2);
  writer.setRAMBufferSizeMB(IndexWriter.DISABLE_AUTO_FLUSH);
  writer.setMergeScheduler(new SerialMergeScheduler());
  writer.setMergePolicy(new LogDocMergePolicy());
  for (int i=0; i < 6; i++)   writer.addDocument(document);
  writer.optimize();
  writer.close();
  IndexReader reader=IndexReader.open(dir);
  for (int i=0; i < 10; i++) {
    reader.getTermFreqVectors(i);
    reader.document(i);
  }
  reader.close();
  dir.close();
}
