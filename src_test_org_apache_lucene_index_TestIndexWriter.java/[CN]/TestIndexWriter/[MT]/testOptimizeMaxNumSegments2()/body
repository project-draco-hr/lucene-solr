{
  MockRAMDirectory dir=new MockRAMDirectory();
  final Document doc=new Document();
  doc.add(new Field("content","aaa",Field.Store.YES,Field.Index.ANALYZED));
  IndexWriter writer=new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED);
  LogDocMergePolicy ldmp=new LogDocMergePolicy(writer);
  ldmp.setMinMergeDocs(1);
  writer.setMergePolicy(ldmp);
  writer.setMergeFactor(4);
  writer.setMaxBufferedDocs(2);
  for (int iter=0; iter < 10; iter++) {
    for (int i=0; i < 19; i++)     writer.addDocument(doc);
    ((ConcurrentMergeScheduler)writer.getMergeScheduler()).sync();
    writer.commit();
    SegmentInfos sis=new SegmentInfos();
    sis.read(dir);
    final int segCount=sis.size();
    writer.optimize(7);
    writer.commit();
    sis=new SegmentInfos();
    ((ConcurrentMergeScheduler)writer.getMergeScheduler()).sync();
    sis.read(dir);
    final int optSegCount=sis.size();
    if (segCount < 7)     assertEquals(segCount,optSegCount);
 else     assertEquals(7,optSegCount);
  }
}
