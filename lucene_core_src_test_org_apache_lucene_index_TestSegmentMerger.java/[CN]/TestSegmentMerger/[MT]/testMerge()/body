{
  final Codec codec=Codec.getDefault();
  final SegmentInfo si=new SegmentInfo(mergedDir,Version.LATEST,mergedSegment,-1,false,codec,Collections.emptyMap(),StringHelper.randomId(),new HashMap<>());
  SegmentMerger merger=new SegmentMerger(Arrays.<CodecReader>asList(reader1,reader2),si,InfoStream.getDefault(),mergedDir,new FieldInfos.FieldNumbers(),newIOContext(random(),new IOContext(new MergeInfo(-1,-1,false,-1))));
  MergeState mergeState=merger.merge();
  int docsMerged=mergeState.segmentInfo.maxDoc();
  assertTrue(docsMerged == 2);
  SegmentReader mergedReader=new SegmentReader(new SegmentCommitInfo(mergeState.segmentInfo,0,-1L,-1L,-1L),newIOContext(random()));
  assertTrue(mergedReader != null);
  assertTrue(mergedReader.numDocs() == 2);
  StoredDocument newDoc1=mergedReader.document(0);
  assertTrue(newDoc1 != null);
  assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());
  StoredDocument newDoc2=mergedReader.document(1);
  assertTrue(newDoc2 != null);
  assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());
  PostingsEnum termDocs=TestUtil.docs(random(),mergedReader,DocHelper.TEXT_FIELD_2_KEY,new BytesRef("field"),MultiFields.getLiveDocs(mergedReader),null,0);
  assertTrue(termDocs != null);
  assertTrue(termDocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
  int tvCount=0;
  for (  FieldInfo fieldInfo : mergedReader.getFieldInfos()) {
    if (fieldInfo.hasVectors()) {
      tvCount++;
    }
  }
  assertEquals("We do not have 3 fields that were indexed with term vector",3,tvCount);
  Terms vector=mergedReader.getTermVectors(0).terms(DocHelper.TEXT_FIELD_2_KEY);
  assertNotNull(vector);
  assertEquals(3,vector.size());
  TermsEnum termsEnum=vector.iterator();
  int i=0;
  while (termsEnum.next() != null) {
    String term=termsEnum.term().utf8ToString();
    int freq=(int)termsEnum.totalTermFreq();
    assertTrue(DocHelper.FIELD_2_TEXT.indexOf(term) != -1);
    assertTrue(DocHelper.FIELD_2_FREQS[i] == freq);
    i++;
  }
  TestSegmentReader.checkNorms(mergedReader);
  mergedReader.close();
}
