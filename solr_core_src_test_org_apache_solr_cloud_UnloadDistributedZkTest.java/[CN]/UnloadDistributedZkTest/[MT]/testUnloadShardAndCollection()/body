{
  final int numShards=2;
  final String collection="test_unload_shard_and_collection";
  final String coreName1=collection + "_1";
  final String coreName2=collection + "_2";
  Create createCmd=new Create();
  createCmd.setCoreName(coreName1);
  createCmd.setCollection(collection);
  String coreDataDir=createTempDir().toFile().getAbsolutePath();
  createCmd.setDataDir(getDataDir(coreDataDir));
  createCmd.setNumShards(numShards);
  SolrClient client=clients.get(0);
  String url1=getBaseUrl(client);
  try (HttpSolrClient adminClient=new HttpSolrClient(url1)){
    adminClient.setConnectionTimeout(15000);
    adminClient.setSoTimeout(60000);
    adminClient.request(createCmd);
    createCmd=new Create();
    createCmd.setCoreName(coreName2);
    createCmd.setCollection(collection);
    coreDataDir=createTempDir().toFile().getAbsolutePath();
    createCmd.setDataDir(getDataDir(coreDataDir));
    adminClient.request(createCmd);
    waitForRecoveriesToFinish(collection,false);
    final boolean unloadInOrder=random().nextBoolean();
    final String unloadCmdCoreName1=(unloadInOrder ? coreName1 : coreName2);
    final String unloadCmdCoreName2=(unloadInOrder ? coreName2 : coreName1);
    Unload unloadCmd=new Unload(false);
    unloadCmd.setCoreName(unloadCmdCoreName1);
    adminClient.request(unloadCmd);
    checkCoreNamePresenceAndSliceCount(collection,unloadCmdCoreName1,false,numShards - 1);
    unloadCmd=new Unload(false);
    unloadCmd.setCoreName(unloadCmdCoreName2);
    adminClient.request(unloadCmd);
    checkCoreNamePresenceAndSliceCount(collection,unloadCmdCoreName2,false,numShards - 2);
  }
   final TimeOut timeout=new TimeOut(30,TimeUnit.SECONDS);
  while (getCommonCloudSolrClient().getZkStateReader().getClusterState().hasCollection(collection)) {
    if (timeout.hasTimedOut()) {
      printLayout();
      fail("Still found collection");
    }
    Thread.sleep(50);
  }
}
