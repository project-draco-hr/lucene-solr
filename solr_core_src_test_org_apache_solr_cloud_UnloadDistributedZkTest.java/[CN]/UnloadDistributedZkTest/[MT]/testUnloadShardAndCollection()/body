{
  Create createCmd=new Create();
  createCmd.setCoreName("test_unload_shard_and_collection_1");
  String collection="test_unload_shard_and_collection";
  createCmd.setCollection(collection);
  String coreDataDir=dataDir.getAbsolutePath() + File.separator + System.currentTimeMillis()+ collection+ "1";
  createCmd.setDataDir(coreDataDir);
  createCmd.setNumShards(2);
  SolrServer client=clients.get(0);
  String url1=getBaseUrl(client);
  HttpSolrServer server=new HttpSolrServer(url1);
  server.setConnectionTimeout(15000);
  server.setSoTimeout(30000);
  server.request(createCmd);
  createCmd=new Create();
  createCmd.setCoreName("test_unload_shard_and_collection_2");
  collection="test_unload_shard_and_collection";
  createCmd.setCollection(collection);
  coreDataDir=dataDir.getAbsolutePath() + File.separator + System.currentTimeMillis()+ collection+ "2";
  createCmd.setDataDir(coreDataDir);
  server.request(createCmd);
  Unload unloadCmd=new Unload(false);
  unloadCmd.setCoreName("test_unload_shard_and_collection_2");
  server.request(unloadCmd);
  Slice shard2=getCommonCloudSolrServer().getZkStateReader().getClusterState().getSlice(collection,"shard2");
  long timeoutAt=System.currentTimeMillis() + 45000;
  while (shard2 != null) {
    if (System.currentTimeMillis() > timeoutAt) {
      printLayout();
      fail("Still found shard");
    }
    Thread.sleep(1000);
    shard2=getCommonCloudSolrServer().getZkStateReader().getClusterState().getSlice(collection,"shard2");
  }
  Slice shard1=getCommonCloudSolrServer().getZkStateReader().getClusterState().getSlice(collection,"shard1");
  assertNotNull(shard1);
  assertTrue(getCommonCloudSolrServer().getZkStateReader().getClusterState().getCollections().contains(collection));
  unloadCmd=new Unload(false);
  unloadCmd.setCoreName("test_unload_shard_and_collection_1");
  server.request(unloadCmd);
  timeoutAt=System.currentTimeMillis() + 30000;
  while (getCommonCloudSolrServer().getZkStateReader().getClusterState().getCollections().contains(collection)) {
    if (System.currentTimeMillis() > timeoutAt) {
      printLayout();
      fail("Still found collection");
    }
    Thread.sleep(50);
  }
}
