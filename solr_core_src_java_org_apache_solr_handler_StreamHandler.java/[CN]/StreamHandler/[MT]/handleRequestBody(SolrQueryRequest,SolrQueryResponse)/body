{
  SolrParams params=req.getParams();
  params=adjustParams(params);
  req.setParams(params);
  boolean objectSerialize=params.getBool("objectSerialize",false);
  TupleStream tupleStream=null;
  try {
    if (objectSerialize) {
      String encodedStream=params.get("stream");
      encodedStream=URLDecoder.decode(encodedStream,"UTF-8");
      byte[] bytes=Base64.base64ToByteArray(encodedStream);
      ByteArrayInputStream byteStream=new ByteArrayInputStream(bytes);
      ObjectInputStream objectInputStream=new ObjectInputStream(byteStream);
      tupleStream=(TupleStream)objectInputStream.readObject();
    }
 else {
      tupleStream=this.streamFactory.constructStream(params.get("stream"));
    }
  }
 catch (  Exception e) {
    SolrException.log(logger,e);
    rsp.add("result-set",new DummyErrorStream(e));
    return;
  }
  int worker=params.getInt("workerID",0);
  int numWorkers=params.getInt("numWorkers",1);
  StreamContext context=new StreamContext();
  context.workerID=worker;
  context.numWorkers=numWorkers;
  context.setSolrClientCache(clientCache);
  tupleStream.setStreamContext(context);
  rsp.add("result-set",new TimerStream(new ExceptionStream(tupleStream)));
}
