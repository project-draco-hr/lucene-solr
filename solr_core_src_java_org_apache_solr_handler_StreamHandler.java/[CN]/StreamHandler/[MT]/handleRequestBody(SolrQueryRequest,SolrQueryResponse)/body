{
  SolrParams params=req.getParams();
  params=adjustParams(params);
  req.setParams(params);
  if (params.get("action") != null) {
    handleAdmin(req,rsp,params);
    return;
  }
  TupleStream tupleStream=null;
  try {
    tupleStream=this.streamFactory.constructStream(params.get("expr"));
  }
 catch (  Exception e) {
    SolrException.log(logger,e);
    rsp.add("result-set",new DummyErrorStream(e));
    return;
  }
  int worker=params.getInt("workerID",0);
  int numWorkers=params.getInt("numWorkers",1);
  StreamContext context=new StreamContext();
  context.workerID=worker;
  context.numWorkers=numWorkers;
  context.setSolrClientCache(clientCache);
  context.put("core",this.coreName);
  tupleStream.setStreamContext(context);
  if (params.getBool("explain",false)) {
    rsp.add("explanation",tupleStream.toExplanation(this.streamFactory));
  }
  if (tupleStream instanceof DaemonStream) {
    DaemonStream daemonStream=(DaemonStream)tupleStream;
    if (daemons.containsKey(daemonStream.getId())) {
      daemons.remove(daemonStream.getId()).close();
    }
    daemonStream.open();
    daemons.put(daemonStream.getId(),daemonStream);
    rsp.add("result-set",new DaemonResponseStream("Deamon:" + daemonStream.getId() + " started on "+ coreName));
  }
 else {
    rsp.add("result-set",new TimerStream(new ExceptionStream(tupleStream)));
  }
}
