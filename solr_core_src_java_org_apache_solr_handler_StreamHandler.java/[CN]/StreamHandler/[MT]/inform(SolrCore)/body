{
  String defaultCollection=null;
  String defaultZkhost=null;
  CoreContainer coreContainer=core.getCoreDescriptor().getCoreContainer();
  if (coreContainer.isZooKeeperAware()) {
    defaultCollection=core.getCoreDescriptor().getCollectionName();
    defaultZkhost=core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();
    streamFactory.withCollectionZkHost(defaultCollection,defaultZkhost);
  }
  streamFactory.withStreamFunction("search",CloudSolrStream.class).withStreamFunction("merge",MergeStream.class).withStreamFunction("unique",UniqueStream.class).withStreamFunction("top",RankStream.class).withStreamFunction("group",ReducerStream.class).withStreamFunction("parallel",ParallelStream.class);
  Object functionMappingsObj=initArgs.get("streamFunctions");
  if (null != functionMappingsObj) {
    NamedList<?> functionMappings=(NamedList<?>)functionMappingsObj;
    for (    Entry<String,?> functionMapping : functionMappings) {
      Class<?> clazz=core.getResourceLoader().findClass((String)functionMapping.getValue(),ExpressibleStream.class);
      streamFactory.withStreamFunction(functionMapping.getKey(),clazz);
    }
  }
  core.addCloseHook(new CloseHook(){
    @Override public void preClose(    SolrCore core){
    }
    @Override public void postClose(    SolrCore core){
      clientCache.close();
    }
  }
);
}
