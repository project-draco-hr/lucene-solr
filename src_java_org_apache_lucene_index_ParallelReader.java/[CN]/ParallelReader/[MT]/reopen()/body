{
  ensureOpen();
  boolean reopened=false;
  List newReaders=new ArrayList();
  List newDecrefOnClose=new ArrayList();
  boolean success=false;
  try {
    for (int i=0; i < readers.size(); i++) {
      IndexReader oldReader=(IndexReader)readers.get(i);
      IndexReader newReader=oldReader.reopen();
      newReaders.add(newReader);
      if (newReader != oldReader) {
        reopened=true;
      }
    }
    if (reopened) {
      ParallelReader pr=new ParallelReader();
      for (int i=0; i < readers.size(); i++) {
        IndexReader oldReader=(IndexReader)readers.get(i);
        IndexReader newReader=(IndexReader)newReaders.get(i);
        if (newReader == oldReader) {
          newDecrefOnClose.add(new Boolean(true));
          newReader.incRef();
        }
 else {
          newDecrefOnClose.add(new Boolean(false));
        }
        pr.add(newReader,!storedFieldReaders.contains(oldReader));
      }
      pr.decrefOnClose=newDecrefOnClose;
      pr.incRefReaders=incRefReaders;
      success=true;
      return pr;
    }
 else {
      success=true;
      return this;
    }
  }
  finally {
    if (!success && reopened) {
      for (int i=0; i < newReaders.size(); i++) {
        IndexReader r=(IndexReader)newReaders.get(i);
        if (r != null) {
          try {
            if (((Boolean)newDecrefOnClose.get(i)).booleanValue()) {
              r.decRef();
            }
 else {
              r.close();
            }
          }
 catch (          IOException ignore) {
          }
        }
      }
    }
  }
}
