{
  ensureOpen();
  boolean reopened=false;
  List newReaders=new ArrayList();
  boolean success=false;
  try {
    for (int i=0; i < readers.size(); i++) {
      IndexReader oldReader=(IndexReader)readers.get(i);
      IndexReader newReader=null;
      if (doClone) {
        newReader=(IndexReader)oldReader.clone();
      }
 else {
        newReader=oldReader.reopen();
      }
      newReaders.add(newReader);
      if (newReader != oldReader) {
        reopened=true;
      }
    }
    success=true;
  }
  finally {
    if (!success && reopened) {
      for (int i=0; i < newReaders.size(); i++) {
        IndexReader r=(IndexReader)newReaders.get(i);
        if (r != readers.get(i)) {
          try {
            r.close();
          }
 catch (          IOException ignore) {
          }
        }
      }
    }
  }
  if (reopened) {
    List newDecrefOnClose=new ArrayList();
    ParallelReader pr=new ParallelReader();
    for (int i=0; i < readers.size(); i++) {
      IndexReader oldReader=(IndexReader)readers.get(i);
      IndexReader newReader=(IndexReader)newReaders.get(i);
      if (newReader == oldReader) {
        newDecrefOnClose.add(Boolean.TRUE);
        newReader.incRef();
      }
 else {
        newDecrefOnClose.add(Boolean.FALSE);
      }
      pr.add(newReader,!storedFieldReaders.contains(oldReader));
    }
    pr.decrefOnClose=newDecrefOnClose;
    pr.incRefReaders=incRefReaders;
    return pr;
  }
 else {
    return this;
  }
}
