{
  final MockDirectoryWrapper dir=newDirectory();
  dir.setCheckIndexOnClose(false);
  final LineFileDocs docs=new LineFileDocs(random);
  CodecProvider provider=CodecProvider.getDefault();
  if (random.nextBoolean()) {
    provider.setFieldCodec("docid","Memory");
  }
  final IndexWriter w=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setCodecProvider(provider));
  final int SIZE=atLeast(TEST_NIGHTLY ? 100 : 20);
  int id=0;
  IndexReader r=null;
  final int numUpdates=(int)(SIZE * (2 + random.nextDouble()));
  for (int docIter=0; docIter < numUpdates; docIter++) {
    final Document doc=docs.nextDoc();
    final String myID="" + id;
    if (id == SIZE - 1) {
      id=0;
    }
 else {
      id++;
    }
    doc.getField("docid").setValue(myID);
    w.updateDocument(new Term("docid",myID),doc);
    if (docIter >= SIZE && random.nextInt(50) == 17) {
      if (r != null) {
        r.close();
      }
      final boolean applyDeletions=random.nextBoolean();
      r=w.getReader(applyDeletions);
      assertTrue("applyDeletions=" + applyDeletions + " r.numDocs()="+ r.numDocs()+ " vs SIZE="+ SIZE,!applyDeletions || r.numDocs() == SIZE);
    }
  }
  if (r != null) {
    r.close();
  }
  w.commit();
  assertEquals(SIZE,w.numDocs());
  w.close();
  docs.close();
  _TestUtil.checkIndex(dir);
  dir.close();
}
