{
  String test="The quick red fox jumped over the lazy brown dogs";
  TypeAsPayloadTokenFilter nptf=new TypeAsPayloadTokenFilter(new WordTokenFilter(new MockTokenizer(new StringReader(test),MockTokenizer.WHITESPACE,false)));
  int count=0;
  CharTermAttribute termAtt=nptf.getAttribute(CharTermAttribute.class);
  TypeAttribute typeAtt=nptf.getAttribute(TypeAttribute.class);
  PayloadAttribute payloadAtt=nptf.getAttribute(PayloadAttribute.class);
  nptf.reset();
  while (nptf.incrementToken()) {
    assertTrue(typeAtt.type() + " is not null and it should be",typeAtt.type().equals(String.valueOf(Character.toUpperCase(termAtt.buffer()[0]))));
    assertTrue("nextToken.getPayload() is null and it shouldn't be",payloadAtt.getPayload() != null);
    String type=new String(payloadAtt.getPayload().bytes,"UTF-8");
    assertTrue(type + " is not equal to " + typeAtt.type(),type.equals(typeAtt.type()) == true);
    count++;
  }
  assertTrue(count + " does not equal: " + 10,count == 10);
}
