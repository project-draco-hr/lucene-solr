{
  CharStream cs=new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);
  try {
    cs.mark(1);
    fail();
  }
 catch (  Exception e) {
    assertEquals("mark(int)",e.getMessage());
  }
  try {
    cs.markSupported();
    fail();
  }
 catch (  Exception e) {
    assertEquals("markSupported()",e.getMessage());
  }
  try {
    cs.read();
    fail();
  }
 catch (  Exception e) {
    assertEquals("read()",e.getMessage());
  }
  try {
    cs.read(new char[0]);
    fail();
  }
 catch (  Exception e) {
    assertEquals("read(char[])",e.getMessage());
  }
  try {
    cs.read(CharBuffer.wrap(new char[0]));
    fail();
  }
 catch (  Exception e) {
    assertEquals("read(CharBuffer)",e.getMessage());
  }
  try {
    cs.reset();
    fail();
  }
 catch (  Exception e) {
    assertEquals("reset()",e.getMessage());
  }
  try {
    cs.skip(1);
    fail();
  }
 catch (  Exception e) {
    assertEquals("skip(long)",e.getMessage());
  }
  try {
    cs.correctOffset(1);
    fail();
  }
 catch (  Exception e) {
    assertEquals("correctOffset(int)",e.getMessage());
  }
  try {
    cs.close();
    fail();
  }
 catch (  Exception e) {
    assertEquals("close()",e.getMessage());
  }
  try {
    cs.read(new char[0],0,0);
    fail();
  }
 catch (  Exception e) {
    assertEquals("read(char[], int, int)",e.getMessage());
  }
}
