{
  if (name == null) {
    throw new IllegalArgumentException("name cannot be null");
  }
  if (value == null) {
    throw new IllegalArgumentException("value cannot be null");
  }
  if (!type.stored() && !type.indexed()) {
    throw new IllegalArgumentException("it doesn't make sense to have a field that " + "is neither indexed nor stored");
  }
  if (!type.indexed()) {
    if (type.storeTermVectors()) {
      throw new IllegalArgumentException("cannot store term vectors " + "for a field that is not indexed (field=\"" + name + "\")");
    }
    if (type.storeTermVectorPositions()) {
      throw new IllegalArgumentException("cannot store term vector positions " + "for a field that is not indexed (field=\"" + name + "\")");
    }
    if (type.storeTermVectorOffsets()) {
      throw new IllegalArgumentException("cannot store term vector offsets " + "for a field that is not indexed (field=\"" + name + "\")");
    }
    if (type.storeTermVectorPayloads()) {
      throw new IllegalArgumentException("cannot store term vector payloads " + "for a field that is not indexed (field=\"" + name + "\")");
    }
  }
  this.type=type;
  this.name=name;
  this.fieldsData=value;
}
