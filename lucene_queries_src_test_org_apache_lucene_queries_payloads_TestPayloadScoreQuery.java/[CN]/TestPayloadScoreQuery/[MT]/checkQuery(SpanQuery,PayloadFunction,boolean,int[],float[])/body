{
  assertTrue("Expected docs and scores arrays must be the same length!",expectedDocs.length == expectedScores.length);
  PayloadScoreQuery psq=new PayloadScoreQuery(query,function,includeSpanScore);
  TopDocs hits=searcher.search(psq,expectedDocs.length);
  for (int i=0; i < hits.scoreDocs.length; i++) {
    if (i > expectedDocs.length - 1)     fail("Unexpected hit in document " + hits.scoreDocs[i].doc);
    if (hits.scoreDocs[i].doc != expectedDocs[i])     fail("Unexpected hit in document " + hits.scoreDocs[i].doc);
    assertEquals("Bad score in document " + expectedDocs[i],expectedScores[i],hits.scoreDocs[i].score,0.000001);
  }
  if (hits.scoreDocs.length > expectedDocs.length)   fail("Unexpected hit in document " + hits.scoreDocs[expectedDocs.length]);
  QueryUtils.check(random(),psq,searcher);
}
