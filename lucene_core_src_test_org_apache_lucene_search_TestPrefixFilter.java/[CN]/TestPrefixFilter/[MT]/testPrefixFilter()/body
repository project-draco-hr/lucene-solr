{
  Directory directory=newDirectory();
  String[] categories=new String[]{"/Computers/Linux","/Computers/Mac/One","/Computers/Mac/Two","/Computers/Windows"};
  RandomIndexWriter writer=new RandomIndexWriter(random(),directory);
  for (int i=0; i < categories.length; i++) {
    Document doc=new Document();
    doc.add(newStringField("category",categories[i],Field.Store.YES));
    writer.addDocument(doc);
  }
  IndexReader reader=writer.getReader();
  PrefixFilter filter=new PrefixFilter(new Term("category","/Computers"));
  Query query=new ConstantScoreQuery(filter);
  IndexSearcher searcher=newSearcher(reader);
  ScoreDoc[] hits=searcher.search(query,1000).scoreDocs;
  assertEquals(4,hits.length);
  filter=new PrefixFilter(new Term("category","/Computers/Mac"));
  query=new ConstantScoreQuery(filter);
  hits=searcher.search(query,1000).scoreDocs;
  assertEquals(2,hits.length);
  filter=new PrefixFilter(new Term("category","/Computers/Linux"));
  query=new ConstantScoreQuery(filter);
  hits=searcher.search(query,1000).scoreDocs;
  assertEquals(1,hits.length);
  filter=new PrefixFilter(new Term("category","/Computers/Windows"));
  query=new ConstantScoreQuery(filter);
  hits=searcher.search(query,1000).scoreDocs;
  assertEquals(1,hits.length);
  filter=new PrefixFilter(new Term("category","/Computers/ObsoleteOS"));
  query=new ConstantScoreQuery(filter);
  hits=searcher.search(query,1000).scoreDocs;
  assertEquals(0,hits.length);
  filter=new PrefixFilter(new Term("category","/Computers/AAA"));
  query=new ConstantScoreQuery(filter);
  hits=searcher.search(query,1000).scoreDocs;
  assertEquals(0,hits.length);
  filter=new PrefixFilter(new Term("category","/Computers/ZZZ"));
  query=new ConstantScoreQuery(filter);
  hits=searcher.search(query,1000).scoreDocs;
  assertEquals(0,hits.length);
  filter=new PrefixFilter(new Term("category",""));
  query=new ConstantScoreQuery(filter);
  hits=searcher.search(query,1000).scoreDocs;
  assertEquals(4,hits.length);
  filter=new PrefixFilter(new Term("nonexistantfield","/Computers"));
  query=new ConstantScoreQuery(filter);
  hits=searcher.search(query,1000).scoreDocs;
  assertEquals(0,hits.length);
  writer.close();
  reader.close();
  directory.close();
}
