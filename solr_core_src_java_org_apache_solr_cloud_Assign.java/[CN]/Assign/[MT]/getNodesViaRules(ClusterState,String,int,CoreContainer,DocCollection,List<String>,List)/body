{
  ArrayList<Rule> rules=new ArrayList<>();
  for (  Object o : l)   rules.add(new Rule((Map)o));
  Map<String,Map<String,Integer>> shardVsNodes=new LinkedHashMap<>();
  for (  Slice slice : coll.getSlices()) {
    LinkedHashMap<String,Integer> n=new LinkedHashMap<>();
    shardVsNodes.put(slice.getName(),n);
    for (    Replica replica : slice.getReplicas()) {
      Integer count=n.get(replica.getNodeName());
      if (count == null)       count=0;
      n.put(replica.getNodeName(),++count);
    }
  }
  List snitches=(List)coll.get(DocCollection.SNITCH);
  List<String> nodesList=createNodeList == null ? new ArrayList<>(clusterState.getLiveNodes()) : createNodeList;
  Map<ReplicaAssigner.Position,String> positions=new ReplicaAssigner(rules,Collections.singletonMap(shard,numberOfNodes),snitches,shardVsNodes,nodesList,cc,clusterState).getNodeMappings();
  List<ReplicaCount> repCounts=new ArrayList<>();
  for (  String s : positions.values()) {
    repCounts.add(new ReplicaCount(s));
  }
  return repCounts;
}
