{
  String fieldName=DOMUtils.getAttributeWithInheritanceOrFail(e,"fieldName");
  String value=DOMUtils.getNonBlankTextOrFail(e);
  try {
    ArrayList<SpanQuery> clausesList=new ArrayList<SpanQuery>();
    TokenStream ts=analyzer.tokenStream(fieldName,new StringReader(value));
    TermAttribute termAtt=ts.addAttribute(TermAttribute.class);
    while (ts.incrementToken()) {
      SpanTermQuery stq=new SpanTermQuery(new Term(fieldName,termAtt.term()));
      clausesList.add(stq);
    }
    SpanOrQuery soq=new SpanOrQuery(clausesList.toArray(new SpanQuery[clausesList.size()]));
    soq.setBoost(DOMUtils.getAttribute(e,"boost",1.0f));
    return soq;
  }
 catch (  IOException ioe) {
    throw new ParserException("IOException parsing value:" + value);
  }
}
