{
  successfulInstall=false;
  replicationStartTime=System.currentTimeMillis();
  Directory tmpIndexDir=null;
  String tmpIndex=null;
  Directory indexDir=null;
  String indexDirPath=null;
  boolean deleteTmpIdxDir=true;
  try {
    NamedList response=null;
    try {
      response=getLatestVersion();
    }
 catch (    Exception e) {
      LOG.error("Master at: " + masterUrl + " is not available. Index fetch failed. Exception: "+ e.getMessage());
      return false;
    }
    long latestVersion=(Long)response.get(CMD_INDEX_VERSION);
    long latestGeneration=(Long)response.get(GENERATION);
    IndexCommit commit=core.getDeletionPolicy().getLatestCommit();
    if (latestVersion == 0L) {
      if (forceReplication && commit.getGeneration() != 0) {
        RefCounted<IndexWriter> iw=core.getUpdateHandler().getSolrCoreState().getIndexWriter(core);
        try {
          iw.get().deleteAll();
        }
  finally {
          iw.decref();
        }
        SolrQueryRequest req=new LocalSolrQueryRequest(core,new ModifiableSolrParams());
        core.getUpdateHandler().commit(new CommitUpdateCommand(req,false));
      }
      successfulInstall=true;
      return true;
    }
    if (!forceReplication && IndexDeletionPolicyWrapper.getCommitTimestamp(commit) == latestVersion) {
      LOG.info("Slave in sync with master.");
      successfulInstall=true;
      return true;
    }
    LOG.info("Master's generation: " + latestGeneration);
    LOG.info("Slave's generation: " + commit.getGeneration());
    LOG.info("Starting replication process");
    fetchFileList(latestGeneration);
    if (filesToDownload.isEmpty())     return false;
    LOG.info("Number of files in latest index in master: " + filesToDownload.size());
    fsyncService=Executors.newSingleThreadExecutor(new DefaultSolrThreadFactory("fsyncService"));
    filesDownloaded=Collections.synchronizedList(new ArrayList<Map<String,Object>>());
    boolean isFullCopyNeeded=IndexDeletionPolicyWrapper.getCommitTimestamp(commit) >= latestVersion || commit.getGeneration() >= latestGeneration || forceReplication;
    String tmpIdxDirName="index." + new SimpleDateFormat(SnapShooter.DATE_FMT,Locale.ROOT).format(new Date());
    tmpIndex=createTempindexDir(core,tmpIdxDirName);
    tmpIndexDir=core.getDirectoryFactory().get(tmpIndex,DirContext.DEFAULT,core.getSolrConfig().indexConfig.lockType);
    indexDirPath=core.getIndexDir();
    indexDir=core.getDirectoryFactory().get(indexDirPath,DirContext.DEFAULT,core.getSolrConfig().indexConfig.lockType);
    try {
      if (isIndexStale(indexDir)) {
        isFullCopyNeeded=true;
      }
      LOG.info("Starting download to " + tmpIndexDir + " fullCopy="+ isFullCopyNeeded);
      successfulInstall=false;
      downloadIndexFiles(isFullCopyNeeded,tmpIndexDir,latestGeneration);
      LOG.info("Total time taken for download : " + ((System.currentTimeMillis() - replicationStartTime) / 1000) + " secs");
      Collection<Map<String,Object>> modifiedConfFiles=getModifiedConfFiles(confFilesToDownload);
      if (!modifiedConfFiles.isEmpty()) {
        downloadConfFiles(confFilesToDownload,latestGeneration);
        if (isFullCopyNeeded) {
          successfulInstall=modifyIndexProps(tmpIdxDirName);
          deleteTmpIdxDir=false;
        }
 else {
          solrCore.getUpdateHandler().getSolrCoreState().closeIndexWriter(core,true);
          try {
            successfulInstall=moveIndexFiles(tmpIndexDir,indexDir);
          }
  finally {
            solrCore.getUpdateHandler().getSolrCoreState().openIndexWriter(core);
          }
        }
        if (successfulInstall) {
          if (isFullCopyNeeded) {
            if (indexDir != null) {
              LOG.info("removing old index directory " + indexDir);
              core.getDirectoryFactory().doneWithDirectory(indexDir);
              core.getDirectoryFactory().remove(indexDir);
            }
          }
          LOG.info("Configuration files are modified, core will be reloaded");
          logReplicationTimeAndConfFiles(modifiedConfFiles,successfulInstall);
          reloadCore();
        }
      }
 else {
        terminateAndWaitFsyncService();
        if (isFullCopyNeeded) {
          successfulInstall=modifyIndexProps(tmpIdxDirName);
          deleteTmpIdxDir=false;
        }
 else {
          solrCore.getUpdateHandler().getSolrCoreState().closeIndexWriter(core,true);
          try {
            successfulInstall=moveIndexFiles(tmpIndexDir,indexDir);
          }
  finally {
            solrCore.getUpdateHandler().getSolrCoreState().openIndexWriter(core);
          }
        }
        if (successfulInstall) {
          logReplicationTimeAndConfFiles(modifiedConfFiles,successfulInstall);
        }
      }
      if (successfulInstall) {
        if (isFullCopyNeeded) {
          if (indexDir != null) {
            LOG.info("removing old index directory " + indexDir);
            core.getDirectoryFactory().doneWithDirectory(indexDir);
            core.getDirectoryFactory().remove(indexDir);
          }
        }
        if (isFullCopyNeeded) {
          solrCore.getUpdateHandler().newIndexWriter(isFullCopyNeeded);
        }
        openNewSearcherAndUpdateCommitPoint(isFullCopyNeeded);
      }
      replicationStartTime=0;
      return successfulInstall;
    }
 catch (    ReplicationHandlerException e) {
      LOG.error("User aborted Replication");
      return false;
    }
catch (    SolrException e) {
      throw e;
    }
catch (    InterruptedException e) {
      throw new InterruptedException("Index fetch interrupted");
    }
catch (    Exception e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Index fetch failed : ",e);
    }
  }
  finally {
    try {
      if (!successfulInstall) {
        logReplicationTimeAndConfFiles(null,successfulInstall);
      }
      filesToDownload=filesDownloaded=confFilesDownloaded=confFilesToDownload=null;
      replicationStartTime=0;
      dirFileFetcher=null;
      localFileFetcher=null;
      if (fsyncService != null && !fsyncService.isShutdown())       fsyncService.shutdownNow();
      fsyncService=null;
      stop=false;
      fsyncException=null;
    }
  finally {
      if (deleteTmpIdxDir && tmpIndexDir != null) {
        try {
          core.getDirectoryFactory().doneWithDirectory(tmpIndexDir);
          core.getDirectoryFactory().remove(tmpIndexDir);
        }
 catch (        IOException e) {
          SolrException.log(LOG,"Error removing directory " + tmpIndexDir,e);
        }
      }
      if (tmpIndexDir != null) {
        core.getDirectoryFactory().release(tmpIndexDir);
      }
      if (indexDir != null) {
        core.getDirectoryFactory().release(indexDir);
      }
    }
  }
}
