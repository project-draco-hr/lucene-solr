{
  CompareResult compareResult=new CompareResult();
  try {
    try (final IndexInput indexInput=indexDir.openInput(filename,IOContext.READONCE)){
      long indexFileLen=indexInput.length();
      long indexFileChecksum=0;
      if (backupIndexFileChecksum != null) {
        try {
          indexFileChecksum=CodecUtil.retrieveChecksum(indexInput);
          compareResult.checkSummed=true;
        }
 catch (        Exception e) {
          LOG.warn("Could not retrieve checksum from file.",e);
        }
      }
      if (!compareResult.checkSummed) {
        if (indexFileLen == backupIndexFileLen) {
          compareResult.equal=true;
          return compareResult;
        }
 else {
          LOG.warn("File {} did not match. expected length is {} and actual length is {}",filename,backupIndexFileLen,indexFileLen);
          compareResult.equal=false;
          return compareResult;
        }
      }
      if (indexFileLen == backupIndexFileLen && indexFileChecksum == backupIndexFileChecksum) {
        compareResult.equal=true;
        return compareResult;
      }
 else {
        LOG.warn("File {} did not match. expected checksum is {} and actual is checksum {}. " + "expected length is {} and actual length is {}",filename,backupIndexFileChecksum,indexFileChecksum,backupIndexFileLen,indexFileLen);
        compareResult.equal=false;
        return compareResult;
      }
    }
   }
 catch (  NoSuchFileException|FileNotFoundException e) {
    compareResult.equal=false;
    return compareResult;
  }
catch (  IOException e) {
    LOG.error("Could not read file " + filename + ". Downloading it again",e);
    compareResult.equal=false;
    return compareResult;
  }
}
