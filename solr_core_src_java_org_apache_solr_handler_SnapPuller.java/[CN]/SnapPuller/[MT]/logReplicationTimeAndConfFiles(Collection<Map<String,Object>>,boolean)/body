{
  List<String> confFiles=new ArrayList<String>();
  if (modifiedConfFiles != null && !modifiedConfFiles.isEmpty())   for (  Map<String,Object> map1 : modifiedConfFiles)   confFiles.add((String)map1.get(NAME));
  Properties props=replicationHandler.loadReplicationProperties();
  long replicationTime=System.currentTimeMillis();
  long replicationTimeTaken=(replicationTime - getReplicationStartTime()) / 1000;
  Directory dir=null;
  try {
    dir=solrCore.getDirectoryFactory().get(solrCore.getDataDir(),solrCore.getSolrConfig().indexConfig.lockType);
    int indexCount=1, confFilesCount=1;
    if (props.containsKey(TIMES_INDEX_REPLICATED)) {
      indexCount=Integer.valueOf(props.getProperty(TIMES_INDEX_REPLICATED)) + 1;
    }
    StringBuffer sb=readToStringBuffer(replicationTime,props.getProperty(INDEX_REPLICATED_AT_LIST));
    props.setProperty(INDEX_REPLICATED_AT_LIST,sb.toString());
    props.setProperty(INDEX_REPLICATED_AT,String.valueOf(replicationTime));
    props.setProperty(PREVIOUS_CYCLE_TIME_TAKEN,String.valueOf(replicationTimeTaken));
    props.setProperty(TIMES_INDEX_REPLICATED,String.valueOf(indexCount));
    if (modifiedConfFiles != null && !modifiedConfFiles.isEmpty()) {
      props.setProperty(CONF_FILES_REPLICATED,confFiles.toString());
      props.setProperty(CONF_FILES_REPLICATED_AT,String.valueOf(replicationTime));
      if (props.containsKey(TIMES_CONFIG_REPLICATED)) {
        confFilesCount=Integer.valueOf(props.getProperty(TIMES_CONFIG_REPLICATED)) + 1;
      }
      props.setProperty(TIMES_CONFIG_REPLICATED,String.valueOf(confFilesCount));
    }
    props.setProperty(LAST_CYCLE_BYTES_DOWNLOADED,String.valueOf(getTotalBytesDownloaded(this)));
    if (!successfulInstall) {
      int numFailures=1;
      if (props.containsKey(TIMES_FAILED)) {
        numFailures=Integer.valueOf(props.getProperty(TIMES_FAILED)) + 1;
      }
      props.setProperty(TIMES_FAILED,String.valueOf(numFailures));
      props.setProperty(REPLICATION_FAILED_AT,String.valueOf(replicationTime));
      sb=readToStringBuffer(replicationTime,props.getProperty(REPLICATION_FAILED_AT_LIST));
      props.setProperty(REPLICATION_FAILED_AT_LIST,sb.toString());
    }
    final IndexOutput out=dir.createOutput(REPLICATION_PROPERTIES,IOContext.DEFAULT);
    OutputStream outFile=new PropertiesOutputStream(out);
    try {
      props.store(outFile,"Replication details");
    }
  finally {
      IOUtils.closeQuietly(outFile);
    }
  }
 catch (  Exception e) {
    LOG.warn("Exception while updating statistics",e);
  }
 finally {
    if (dir != null) {
      solrCore.getDirectoryFactory().release(dir);
    }
  }
}
