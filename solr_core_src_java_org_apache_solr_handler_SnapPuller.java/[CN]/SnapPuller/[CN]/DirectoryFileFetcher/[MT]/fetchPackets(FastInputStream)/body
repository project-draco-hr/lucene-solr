{
  byte[] intbytes=new byte[4];
  byte[] longbytes=new byte[8];
  try {
    while (true) {
      if (stop) {
        stop=false;
        aborted=true;
        throw new ReplicationHandlerException("User aborted replication");
      }
      long checkSumServer=-1;
      fis.readFully(intbytes);
      int packetSize=readInt(intbytes);
      if (packetSize <= 0) {
        LOG.warn("No content received for file: " + currentFile);
        return NO_CONTENT;
      }
      if (buf.length < packetSize)       buf=new byte[packetSize];
      if (checksum != null) {
        fis.readFully(longbytes);
        checkSumServer=readLong(longbytes);
      }
      fis.readFully(buf,0,packetSize);
      if (includeChecksum) {
        checksum.reset();
        checksum.update(buf,0,packetSize);
        long checkSumClient=checksum.getValue();
        if (checkSumClient != checkSumServer) {
          LOG.error("Checksum not matched between client and server for: " + currentFile);
          return 1;
        }
      }
      writeBytes(packetSize);
      bytesDownloaded+=packetSize;
      if (bytesDownloaded >= size)       return 0;
      errorCount=0;
    }
  }
 catch (  ReplicationHandlerException e) {
    throw e;
  }
catch (  Exception e) {
    LOG.warn("Error in fetching packets ",e);
    errorCount++;
    if (errorCount > MAX_RETRIES) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Fetch failed for file:" + fileName,e);
    }
    return ERR;
  }
}
