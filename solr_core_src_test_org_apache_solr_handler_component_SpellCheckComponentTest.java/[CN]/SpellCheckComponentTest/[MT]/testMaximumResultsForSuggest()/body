{
  assertJQ(req("qt",rh,SpellCheckComponent.COMPONENT_NAME,"true",SpellingParams.SPELLCHECK_BUILD,"true","q","lowerfilt:(this OR brwn)",SpellingParams.SPELLCHECK_COUNT,"5",SpellingParams.SPELLCHECK_EXTENDED_RESULTS,"false",SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST,"7"),"/spellcheck/suggestions/[0]=='brwn'","/spellcheck/suggestions/[1]/numFound==1");
  try {
    assertJQ(req("qt",rh,SpellCheckComponent.COMPONENT_NAME,"true",SpellingParams.SPELLCHECK_BUILD,"true","q","lowerfilt:(this OR brwn)",SpellingParams.SPELLCHECK_COUNT,"5",SpellingParams.SPELLCHECK_EXTENDED_RESULTS,"false",SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST,"6"),"/spellcheck/suggestions/[1]/numFound==1");
    fail("there should have been no suggestions (6<7)");
  }
 catch (  Exception e) {
  }
  assertJQ(req("qt",rh,SpellCheckComponent.COMPONENT_NAME,"true",SpellingParams.SPELLCHECK_BUILD,"true","q","lowerfilt:(this OR brwn)","fq","id:[0 TO 9]","fq","lowerfilt:th*",SpellingParams.SPELLCHECK_COUNT,"5",SpellingParams.SPELLCHECK_EXTENDED_RESULTS,"false",SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST,".90"),"/spellcheck/suggestions/[0]=='brwn'","/spellcheck/suggestions/[1]/numFound==1");
  try {
    assertJQ(req("qt",rh,SpellCheckComponent.COMPONENT_NAME,"true",SpellingParams.SPELLCHECK_BUILD,"true","q","lowerfilt:(this OR brwn)","fq","id:[0 TO 9]","fq","lowerfilt:th*",SpellingParams.SPELLCHECK_COUNT,"5",SpellingParams.SPELLCHECK_EXTENDED_RESULTS,"false",SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST,".80"),"/spellcheck/suggestions/[1]/numFound==1");
    fail("there should have been no suggestions ((.8 * 8)<7)");
  }
 catch (  Exception e) {
  }
  assertJQ(req("qt",rh,SpellCheckComponent.COMPONENT_NAME,"true",SpellingParams.SPELLCHECK_BUILD,"true","q","lowerfilt:(this OR brwn)","fq","id:[0 TO 9]",SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ,"id:[0 TO 9]",SpellingParams.SPELLCHECK_COUNT,"5",SpellingParams.SPELLCHECK_EXTENDED_RESULTS,"false",SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST,".70"),"/spellcheck/suggestions/[0]=='brwn'","/spellcheck/suggestions/[1]/numFound==1");
  try {
    assertJQ(req("qt",rh,SpellCheckComponent.COMPONENT_NAME,"true",SpellingParams.SPELLCHECK_BUILD,"true","q","lowerfilt:(this OR brwn)","fq","id:[0 TO 9]",SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ,"lowerfilt:th*",SpellingParams.SPELLCHECK_COUNT,"5",SpellingParams.SPELLCHECK_EXTENDED_RESULTS,"false",SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST,".64"),"/spellcheck/suggestions/[1]/numFound==1");
    fail("there should have been no suggestions ((.64 * 10)<7)");
  }
 catch (  Exception e) {
  }
}
