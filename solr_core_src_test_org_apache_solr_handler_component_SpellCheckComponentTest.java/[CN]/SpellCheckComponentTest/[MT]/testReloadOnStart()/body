{
  assertU(adoc("id","0","lowerfilt","This is a title"));
  assertU(commit());
  SolrQueryRequest request=req("qt","spellCheckCompRH","q","*:*","spellcheck.q","ttle","spellcheck","true","spellcheck.dictionary","default","spellcheck.build","true");
  assertQ(request,"//arr[@name='suggestion'][.='title']");
  NamedList args=new NamedList();
  NamedList spellchecker=new NamedList();
  spellchecker.add(SolrSpellChecker.DICTIONARY_NAME,"default");
  spellchecker.add(AbstractLuceneSpellChecker.FIELD,"lowerfilt");
  spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR,"spellchecker1");
  args.add("spellchecker",spellchecker);
  SpellCheckComponent checker=new SpellCheckComponent();
  checker.init(args);
  checker.inform(h.getCore());
  request=req("qt","spellCheckCompRH","q","*:*","spellcheck.q","ttle","spellcheck","true","spellcheck.dictionary","default","spellcheck.reload","true");
  List<SearchComponent> components=new ArrayList<>();
  for (  String name : h.getCore().getSearchComponents().keySet()) {
    components.add(h.getCore().getSearchComponent(name));
  }
  ResponseBuilder rb=new ResponseBuilder(request,new SolrQueryResponse(),components);
  checker.prepare(rb);
  try {
    checker.process(rb);
  }
 catch (  NullPointerException e) {
    fail("NullPointerException due to reload not initializing analyzers");
  }
  rb.req.close();
}
