{
  String[] maxKeys=maxCounters.keySet().toArray(new String[maxCounters.size()]);
  Arrays.sort(maxKeys,new Comparator<String>(){
    private final Comparator<Long> valComp=Comparator.<Long>naturalOrder().reversed();
    @Override public int compare(    String o1,    String o2){
      return valComp.compare(maxCounters.get(o1),maxCounters.get(o2));
    }
  }
);
  StringBuilder sb=new StringBuilder();
  boolean first=true;
  for (  String key : maxKeys) {
    long value=maxCounters.get(key);
    if (value <= limit)     continue;
    if (first) {
      sb.append("\nMaximum concurrent ").append(desc).append(" watches above limit:\n\n");
      first=false;
    }
    sb.append("\t").append(maxCounters.get(key)).append('\t').append(key).append('\n');
  }
  return sb.toString();
}
