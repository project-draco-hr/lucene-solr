{
  if (shift >= 32)   return null;
  reusableToken.clear();
  final char[] buffer=reusableToken.resizeTermBuffer(TrieUtils.INT_BUF_SIZE);
  reusableToken.setTermLength(TrieUtils.intToPrefixCoded(value,shift,buffer));
  if (shift == 0) {
    reusableToken.setType(TOKEN_TYPE_FULL_PREC);
    reusableToken.setPositionIncrement(1);
  }
 else {
    reusableToken.setType(TOKEN_TYPE_LOWER_PREC);
    reusableToken.setPositionIncrement(0);
  }
  shift+=precisionStep;
  return reusableToken;
}
