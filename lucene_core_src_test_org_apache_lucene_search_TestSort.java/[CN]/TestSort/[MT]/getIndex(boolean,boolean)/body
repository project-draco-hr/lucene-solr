{
  Directory indexStore=newDirectory();
  dirs.add(indexStore);
  RandomIndexWriter writer=new RandomIndexWriter(random(),indexStore,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));
  final DocValuesType stringDVType;
  if (dvStringSorted) {
    stringDVType=DocValuesType.SORTED;
  }
 else {
    if (random().nextBoolean()) {
      stringDVType=DocValuesType.BINARY;
    }
 else {
      stringDVType=DocValuesType.SORTED;
    }
  }
  FieldType ft1=new FieldType();
  ft1.setStored(true);
  FieldType ft2=new FieldType();
  ft2.setIndexed(true);
  for (int i=0; i < data.length; ++i) {
    if (((i % 2) == 0 && even) || ((i % 2) == 1 && odd)) {
      Document doc=new Document();
      doc.add(new Field("tracer",data[i][0],ft1));
      doc.add(new TextField("contents",data[i][1],Field.Store.NO));
      if (data[i][2] != null) {
        doc.add(new StringField("int",data[i][2],Field.Store.NO));
        doc.add(new NumericDocValuesField("int_dv",Integer.parseInt(data[i][2])));
      }
      if (data[i][3] != null) {
        doc.add(new StringField("float",data[i][3],Field.Store.NO));
        doc.add(new FloatDocValuesField("float_dv",Float.parseFloat(data[i][3])));
      }
      if (data[i][4] != null) {
        doc.add(new StringField("string",data[i][4],Field.Store.NO));
switch (stringDVType) {
case SORTED:
          doc.add(new SortedDocValuesField("string_dv",new BytesRef(data[i][4])));
        break;
case BINARY:
      doc.add(new BinaryDocValuesField("string_dv",new BytesRef(data[i][4])));
    break;
default :
  throw new IllegalStateException("unknown type " + stringDVType);
}
}
if (data[i][5] != null) doc.add(new StringField("custom",data[i][5],Field.Store.NO));
if (data[i][6] != null) doc.add(new StringField("i18n",data[i][6],Field.Store.NO));
if (data[i][7] != null) doc.add(new StringField("long",data[i][7],Field.Store.NO));
if (data[i][8] != null) {
doc.add(new StringField("double",data[i][8],Field.Store.NO));
doc.add(new NumericDocValuesField("double_dv",Double.doubleToRawLongBits(Double.parseDouble(data[i][8]))));
}
if (data[i][9] != null) doc.add(new StringField("short",data[i][9],Field.Store.NO));
if (data[i][10] != null) doc.add(new StringField("byte",data[i][10],Field.Store.NO));
if (data[i][11] != null) doc.add(new StringField("parser",data[i][11],Field.Store.NO));
for (IndexableField f : doc.getFields()) {
if (f.fieldType().indexed() && !f.fieldType().omitNorms()) {
((Field)f).setBoost(2.0f);
}
}
writer.addDocument(doc);
}
}
IndexReader reader=writer.getReader();
writer.close();
IndexSearcher s=newSearcher(reader);
return s;
}
