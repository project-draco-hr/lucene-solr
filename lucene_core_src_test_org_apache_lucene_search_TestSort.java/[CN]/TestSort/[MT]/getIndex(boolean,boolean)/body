{
  Directory indexStore=newDirectory();
  dirs.add(indexStore);
  RandomIndexWriter writer=new RandomIndexWriter(random(),indexStore,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));
  final DocValues.Type stringDVType;
  if (dvStringSorted) {
    stringDVType=random().nextBoolean() ? DocValues.Type.BYTES_VAR_SORTED : DocValues.Type.BYTES_FIXED_SORTED;
  }
 else {
    if (random().nextBoolean()) {
      stringDVType=random().nextBoolean() ? DocValues.Type.BYTES_FIXED_STRAIGHT : DocValues.Type.BYTES_FIXED_DEREF;
    }
 else {
      stringDVType=random().nextBoolean() ? DocValues.Type.BYTES_VAR_STRAIGHT : DocValues.Type.BYTES_VAR_DEREF;
    }
  }
  FieldType ft1=new FieldType();
  ft1.setStored(true);
  FieldType ft2=new FieldType();
  ft2.setIndexed(true);
  for (int i=0; i < data.length; ++i) {
    if (((i % 2) == 0 && even) || ((i % 2) == 1 && odd)) {
      Document doc=new Document();
      doc.add(new Field("tracer",data[i][0],ft1));
      doc.add(new TextField("contents",data[i][1]));
      if (data[i][2] != null) {
        doc.add(new StringField("int",data[i][2]));
        doc.add(new PackedLongDocValuesField("int",Integer.parseInt(data[i][2])));
      }
      if (data[i][3] != null) {
        doc.add(new StringField("float",data[i][3]));
        doc.add(new FloatDocValuesField("float",Float.parseFloat(data[i][3])));
      }
      if (data[i][4] != null) {
        doc.add(new StringField("string",data[i][4]));
switch (stringDVType) {
case BYTES_FIXED_SORTED:
          doc.add(new SortedBytesDocValuesField("string",new BytesRef(data[i][4]),true));
        break;
case BYTES_VAR_SORTED:
      doc.add(new SortedBytesDocValuesField("string",new BytesRef(data[i][4]),false));
    break;
case BYTES_FIXED_STRAIGHT:
  doc.add(new StraightBytesDocValuesField("string",new BytesRef(data[i][4]),true));
break;
case BYTES_VAR_STRAIGHT:
doc.add(new StraightBytesDocValuesField("string",new BytesRef(data[i][4]),false));
break;
case BYTES_FIXED_DEREF:
doc.add(new DerefBytesDocValuesField("string",new BytesRef(data[i][4]),true));
break;
case BYTES_VAR_DEREF:
doc.add(new DerefBytesDocValuesField("string",new BytesRef(data[i][4]),false));
break;
default :
throw new IllegalStateException("unknown type " + stringDVType);
}
}
if (data[i][5] != null) doc.add(new StringField("custom",data[i][5]));
if (data[i][6] != null) doc.add(new StringField("i18n",data[i][6]));
if (data[i][7] != null) doc.add(new StringField("long",data[i][7]));
if (data[i][8] != null) {
doc.add(new StringField("double",data[i][8]));
doc.add(new DoubleDocValuesField("double",Double.parseDouble(data[i][8])));
}
if (data[i][9] != null) doc.add(new StringField("short",data[i][9]));
if (data[i][10] != null) doc.add(new StringField("byte",data[i][10]));
if (data[i][11] != null) doc.add(new StringField("parser",data[i][11]));
for (IndexableField f : doc.getFields()) {
if (!f.fieldType().omitNorms()) {
((Field)f).setBoost(2.0f);
}
}
writer.addDocument(doc);
}
}
IndexReader reader=writer.getReader();
writer.close();
IndexSearcher s=newSearcher(reader);
return s;
}
