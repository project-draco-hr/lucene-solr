{
  sort.setSort(new SortField("string",SortField.Type.STRING));
  assertMatches(full,queryF,sort,"ZJI");
  sort.setSort(new SortField("string",SortField.Type.STRING,true));
  assertMatches(full,queryF,sort,"IJZ");
  sort.setSort(new SortField("int",SortField.Type.INT));
  assertMatches(full,queryF,sort,"IZJ");
  sort.setSort(new SortField("int",SortField.Type.INT,true));
  assertMatches(full,queryF,sort,"JZI");
  sort.setSort(new SortField("float",SortField.Type.FLOAT));
  assertMatches(full,queryF,sort,"ZJI");
  sort.setSort(new SortField("nosuchfield",SortField.Type.STRING),new SortField("float",SortField.Type.FLOAT));
  assertMatches(full,queryF,sort,"ZJI");
  sort.setSort(new SortField("float",SortField.Type.FLOAT,true));
  assertMatches(full,queryF,sort,"IJZ");
  sort.setSort(new SortField("int",SortField.Type.INT),new SortField("string",SortField.Type.STRING),new SortField("float",SortField.Type.FLOAT));
  assertMatches(full,queryG,sort,"ZWXY");
  sort.setSort(new SortField("int",SortField.Type.INT),new SortField("string",SortField.Type.STRING),new SortField("float",SortField.Type.FLOAT,true));
  assertMatches(full,queryG,sort,"ZYXW");
  ExecutorService exec=Executors.newFixedThreadPool(_TestUtil.nextInt(random(),2,8));
  IndexSearcher parallelSearcher=new IndexSearcher(full.getIndexReader(),exec);
  sort.setSort(new SortField("int",SortField.Type.INT),new SortField("string",SortField.Type.STRING),new SortField("float",SortField.Type.FLOAT));
  assertMatches(parallelSearcher,queryG,sort,"ZWXY");
  sort.setSort(new SortField("int",SortField.Type.INT),new SortField("string",SortField.Type.STRING),new SortField("float",SortField.Type.FLOAT,true));
  assertMatches(parallelSearcher,queryG,sort,"ZYXW");
  exec.shutdown();
  exec.awaitTermination(1000,TimeUnit.MILLISECONDS);
}
