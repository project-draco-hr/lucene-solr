{
  sort.setSort(new SortField(null,SortField.Type.SCORE,true),SortField.FIELD_DOC);
  assertMatches(full,queryX,sort,"IEGCA");
  assertMatches(full,queryY,sort,"JFHDB");
  sort.setSort(new SortField(null,SortField.Type.DOC,true));
  assertMatches(full,queryX,sort,"IGECA");
  assertMatches(full,queryY,sort,"JHFDB");
  sort.setSort(new SortField("int",SortField.Type.INT,true));
  assertMatches(full,queryX,sort,"CAEGI");
  assertMatches(full,queryY,sort,"BJFHD");
  sort.setSort(new SortField("float",SortField.Type.FLOAT,true));
  assertMatches(full,queryX,sort,"AECIG");
  assertMatches(full,queryY,sort,"BFJHD");
  sort.setSort(new SortField("string",SortField.Type.STRING,true));
  assertMatches(full,queryX,sort,"CEGIA");
  assertMatches(full,queryY,sort,"BFHJD");
  if (supportsDocValues) {
    sort.setSort(useDocValues(new SortField("int",SortField.Type.INT,true)));
    assertMatches(full,queryX,sort,"CAEGI");
    assertMatches(full,queryY,sort,"BJFHD");
    sort.setSort(useDocValues(new SortField("float",SortField.Type.FLOAT,true)));
    assertMatches(full,queryX,sort,"AECIG");
    assertMatches(full,queryY,sort,"BFJHD");
    sort.setSort(useDocValues(new SortField("string",getDVStringSortType(),true)));
    assertMatches(full,queryX,sort,"CEGIA");
    assertMatches(full,queryY,sort,"BFHJD");
  }
}
