{
  IndexSearcher empty=getEmptyIndex();
  sort=new Sort();
  assertMatches(empty,queryX,sort,"");
  sort.setSort(SortField.FIELD_DOC);
  assertMatches(empty,queryX,sort,"");
  sort.setSort(new SortField("int",SortField.Type.INT),SortField.FIELD_DOC);
  assertMatches(empty,queryX,sort,"");
  sort.setSort(new SortField("int_dv",SortField.Type.INT),SortField.FIELD_DOC);
  assertMatches(empty,queryX,sort,"");
  sort.setSort(new SortField("string",SortField.Type.STRING,true),SortField.FIELD_DOC);
  assertMatches(empty,queryX,sort,"");
  sort.setSort(new SortField("float",SortField.Type.FLOAT),new SortField("string",SortField.Type.STRING));
  assertMatches(empty,queryX,sort,"");
  sort.setSort(new SortField("float_dv",SortField.Type.FLOAT),new SortField("string",SortField.Type.STRING));
  assertMatches(empty,queryX,sort,"");
  sort.setSort(new SortField("string_dv",getDVStringSortType(),true),SortField.FIELD_DOC);
  assertMatches(empty,queryX,sort,"");
  sort.setSort(new SortField("float_dv",SortField.Type.FLOAT),new SortField("string_dv",getDVStringSortType()));
  assertMatches(empty,queryX,sort,"");
  sort.setSort(new SortField("float_dv",SortField.Type.FLOAT),new SortField("string_dv",getDVStringSortType()));
  assertMatches(empty,queryX,sort,"");
}
