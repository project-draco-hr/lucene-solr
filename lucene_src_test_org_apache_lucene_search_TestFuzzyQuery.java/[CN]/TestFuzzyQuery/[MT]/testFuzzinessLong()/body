{
  MockRAMDirectory directory=new MockRAMDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(newRandom(),directory);
  addDoc("aaaaaaa",writer);
  addDoc("segment",writer);
  IndexReader reader=writer.getReader();
  IndexSearcher searcher=new IndexSearcher(reader);
  writer.close();
  FuzzyQuery query;
  query=new FuzzyQuery(new Term("field","xxxxx"),FuzzyQuery.defaultMinSimilarity,0);
  ScoreDoc[] hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","aaaaccc"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaaaa"));
  query=new FuzzyQuery(new Term("field","aaaaccc"),FuzzyQuery.defaultMinSimilarity,1);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaaaa"));
  query=new FuzzyQuery(new Term("field","aaaaccc"),FuzzyQuery.defaultMinSimilarity,4);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaaaa"));
  query=new FuzzyQuery(new Term("field","aaaaccc"),FuzzyQuery.defaultMinSimilarity,5);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","aaacccc"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","aaacccc"),FuzzyQuery.defaultMinSimilarity,2);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","student"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  query=new FuzzyQuery(new Term("field","stellent"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  query=new FuzzyQuery(new Term("field","student"),FuzzyQuery.defaultMinSimilarity,1);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  query=new FuzzyQuery(new Term("field","stellent"),FuzzyQuery.defaultMinSimilarity,1);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  query=new FuzzyQuery(new Term("field","student"),FuzzyQuery.defaultMinSimilarity,2);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","stellent"),FuzzyQuery.defaultMinSimilarity,2);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","student"),0.6f,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  try {
    query=new FuzzyQuery(new Term("field","student"),1.1f);
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    query=new FuzzyQuery(new Term("field","student"),-0.1f);
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
  searcher.close();
  reader.close();
  directory.close();
}
