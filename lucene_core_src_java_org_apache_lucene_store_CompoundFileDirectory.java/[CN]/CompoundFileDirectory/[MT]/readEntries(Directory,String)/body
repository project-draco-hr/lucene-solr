{
  IOException priorE=null;
  IndexInput entriesStream=null;
  try {
    final String entriesFileName=IndexFileNames.segmentFileName(IndexFileNames.stripExtension(name),"",IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);
    entriesStream=dir.openInput(entriesFileName,IOContext.READONCE);
    CodecUtil.checkHeader(entriesStream,CompoundFileWriter.ENTRY_CODEC,CompoundFileWriter.VERSION_START,CompoundFileWriter.VERSION_START);
    final int numEntries=entriesStream.readVInt();
    final Map<String,FileEntry> mapping=new HashMap<>(numEntries);
    for (int i=0; i < numEntries; i++) {
      final FileEntry fileEntry=new FileEntry();
      final String id=entriesStream.readString();
      FileEntry previous=mapping.put(id,fileEntry);
      if (previous != null) {
        throw new CorruptIndexException("Duplicate cfs entry id=" + id + " in CFS: "+ entriesStream);
      }
      fileEntry.offset=entriesStream.readLong();
      fileEntry.length=entriesStream.readLong();
    }
    if (entriesStream.getFilePointer() != entriesStream.length()) {
      throw new CorruptIndexException("did not read all bytes from file \"" + entriesFileName + "\": read "+ entriesStream.getFilePointer()+ " vs size "+ entriesStream.length()+ " (resource: "+ entriesStream+ ")");
    }
    return mapping;
  }
 catch (  IOException ioe) {
    priorE=ioe;
  }
 finally {
    IOUtils.closeWhileHandlingException(priorE,entriesStream);
  }
  throw new AssertionError("impossible to get here");
}
