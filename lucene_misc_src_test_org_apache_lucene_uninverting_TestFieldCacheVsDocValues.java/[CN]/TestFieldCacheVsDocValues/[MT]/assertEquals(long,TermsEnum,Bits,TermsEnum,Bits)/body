{
  BytesRef ref;
  while ((ref=next(expected,liveOrdsExpected)) != null) {
    assertEquals(ref,next(actual,liveOrdsActual));
    assertEquals(expected.term(),actual.term());
  }
  assertNull(next(actual,liveOrdsActual));
  for (long i=0; i < numOrds; i++) {
    if (liveOrdsExpected.get((int)i) == false) {
      continue;
    }
    expected.seekExact(i);
    assertTrue(actual.seekExact(expected.term()));
    assertEquals(expected.term(),actual.term());
  }
  for (long i=0; i < numOrds; i++) {
    if (liveOrdsExpected.get((int)i) == false) {
      continue;
    }
    expected.seekExact(i);
    assertEquals(SeekStatus.FOUND,actual.seekCeil(expected.term()));
    assertEquals(expected.term(),actual.term());
  }
  for (long i=0; i < numOrds; i++) {
    long randomOrd=TestUtil.nextLong(random(),0,numOrds - 1);
    if (liveOrdsExpected.get((int)randomOrd) == false) {
      continue;
    }
    expected.seekExact(randomOrd);
    actual.seekExact(expected.term());
    assertEquals(expected.term(),actual.term());
  }
  for (long i=0; i < numOrds; i++) {
    if (liveOrdsExpected.get((int)i) == false) {
      continue;
    }
    BytesRef target=new BytesRef(TestUtil.randomUnicodeString(random()));
    SeekStatus expectedStatus=seekCeil(expected,target,liveOrdsExpected);
    assertEquals(expectedStatus,seekCeil(actual,target,liveOrdsActual));
    if (expectedStatus != SeekStatus.END) {
      assertEquals(expected.term(),actual.term());
    }
  }
}
