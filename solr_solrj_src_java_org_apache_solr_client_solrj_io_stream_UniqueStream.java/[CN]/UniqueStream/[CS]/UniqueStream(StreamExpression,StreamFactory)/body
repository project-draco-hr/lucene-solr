{
  List<StreamExpression> streamExpressions=factory.getExpressionOperandsRepresentingTypes(expression,ExpressibleStream.class,TupleStream.class);
  StreamExpressionNamedParameter overExpression=factory.getNamedOperand(expression,"over");
  if (expression.getParameters().size() != streamExpressions.size() + 1) {
    throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - unknown operands found",expression));
  }
  if (1 != streamExpressions.size()) {
    throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - expecting a single stream but found %d",expression,streamExpressions.size()));
  }
  this.tupleStream=factory.constructStream(streamExpressions.get(0));
  if (null == overExpression || !(overExpression.getParameter() instanceof StreamExpressionValue)) {
    throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - expecting single 'over' parameter listing fields to unique over but didn't find one",expression));
  }
  this.comp=factory.constructComparator(((StreamExpressionValue)overExpression.getParameter()).getValue(),FieldComparator.class);
}
