{
  Directory indexDir=newDirectory();
  Directory taxoDir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);
  IndexWriter indexWriter=new IndexWriter(indexDir,iwc);
  FacetIndexingParams fip=new FacetIndexingParams(new CategoryListParams(){
    @Override public CategoryListIterator createCategoryListIterator(    int partition) throws IOException {
      return new AssertingCategoryListIterator(super.createCategoryListIterator(partition));
    }
  }
);
  TaxonomyWriter taxoWriter=new DirectoryTaxonomyWriter(taxoDir);
  FacetFields facetFields=new FacetFields(taxoWriter,fip);
  indexTwoDocs(indexWriter,facetFields,false);
  indexTwoDocs(indexWriter,null,true);
  indexTwoDocs(indexWriter,facetFields,true);
  indexTwoDocs(indexWriter,null,false);
  indexTwoDocs(indexWriter,null,true);
  indexTwoDocs(indexWriter,facetFields,true);
  indexTwoDocs(indexWriter,null,true);
  IOUtils.close(indexWriter,taxoWriter);
  DirectoryReader indexReader=DirectoryReader.open(indexDir);
  TaxonomyReader taxoReader=new DirectoryTaxonomyReader(taxoDir);
  IndexSearcher indexSearcher=new IndexSearcher(indexReader);
  Query q=new TermQuery(new Term("f","a"));
  ArrayList<FacetRequest> requests=new ArrayList<FacetRequest>(1);
  CountFacetRequest countNoComplements=new CountFacetRequest(new CategoryPath("A"),10){
    @Override public boolean supportsComplements(){
      return false;
    }
  }
;
  requests.add(countNoComplements);
  FacetSearchParams fsp=new FacetSearchParams(requests,fip);
  FacetsCollector fc=new FacetsCollector(fsp,indexReader,taxoReader);
  indexSearcher.search(q,fc);
  List<FacetResult> results=fc.getFacetResults();
  assertEquals("received too many facet results",1,results.size());
  FacetResultNode frn=results.get(0).getFacetResultNode();
  assertEquals("wrong weight for \"A\"",4,(int)frn.getValue());
  assertEquals("wrong number of children",2,frn.getNumSubResults());
  for (  FacetResultNode node : frn.getSubResults()) {
    assertEquals("wrong weight for child " + node.getLabel(),2,(int)node.getValue());
  }
  IOUtils.close(indexReader,taxoReader);
  IOUtils.close(indexDir,taxoDir);
}
