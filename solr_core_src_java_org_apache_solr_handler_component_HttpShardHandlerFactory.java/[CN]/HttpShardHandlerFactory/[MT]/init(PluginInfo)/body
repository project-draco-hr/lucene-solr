{
  if (info.initArgs != null) {
    Object so=info.initArgs.get(INIT_SO_TIMEOUT);
    if (so != null) {
      soTimeout=(Integer)so;
      log.info("Setting socketTimeout to: " + soTimeout);
    }
    Object urlScheme=info.initArgs.get(INIT_URL_SCHEME);
    if (urlScheme != null) {
      scheme=urlScheme + "://";
      log.info("Setting urlScheme to: " + urlScheme);
    }
    Object co=info.initArgs.get(INIT_CONNECTION_TIMEOUT);
    if (co != null) {
      connectionTimeout=(Integer)co;
      log.info("Setting shard-connection-timeout to: " + connectionTimeout);
    }
  }
  mgr=new MultiThreadedHttpConnectionManager();
  mgr.getParams().setDefaultMaxConnectionsPerHost(20);
  mgr.getParams().setMaxTotalConnections(10000);
  mgr.getParams().setConnectionTimeout(connectionTimeout);
  mgr.getParams().setSoTimeout(soTimeout);
  client=new HttpClient(mgr);
  DefaultHttpMethodRetryHandler retryhandler=new DefaultHttpMethodRetryHandler(0,false);
  client.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,retryhandler);
  try {
    loadbalancer=new LBHttpSolrServer(client);
  }
 catch (  MalformedURLException e) {
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,e);
  }
}
