{
switch (format) {
case PACKED:
switch (bitsPerValue) {
case 1:
      return packed1;
case 2:
    return packed2;
case 3:
  return packed3;
case 4:
return packed4;
case 5:
return packed5;
case 6:
return packed6;
case 7:
return packed7;
case 8:
return packed8;
case 9:
return packed9;
case 10:
return packed10;
case 11:
return packed11;
case 12:
return packed12;
case 13:
return packed13;
case 14:
return packed14;
case 15:
return packed15;
case 16:
return packed16;
case 17:
return packed17;
case 18:
return packed18;
case 19:
return packed19;
case 20:
return packed20;
case 21:
return packed21;
case 22:
return packed22;
case 23:
return packed23;
case 24:
return packed24;
case 25:
return packed25;
case 26:
return packed26;
case 27:
return packed27;
case 28:
return packed28;
case 29:
return packed29;
case 30:
return packed30;
case 31:
return packed31;
case 32:
return packed32;
case 33:
return packed33;
case 34:
return packed34;
case 35:
return packed35;
case 36:
return packed36;
case 37:
return packed37;
case 38:
return packed38;
case 39:
return packed39;
case 40:
return packed40;
case 41:
return packed41;
case 42:
return packed42;
case 43:
return packed43;
case 44:
return packed44;
case 45:
return packed45;
case 46:
return packed46;
case 47:
return packed47;
case 48:
return packed48;
case 49:
return packed49;
case 50:
return packed50;
case 51:
return packed51;
case 52:
return packed52;
case 53:
return packed53;
case 54:
return packed54;
case 55:
return packed55;
case 56:
return packed56;
case 57:
return packed57;
case 58:
return packed58;
case 59:
return packed59;
case 60:
return packed60;
case 61:
return packed61;
case 62:
return packed62;
case 63:
return packed63;
case 64:
return packed64;
default :
throw new AssertionError();
}
case PACKED_SINGLE_BLOCK:
switch (bitsPerValue) {
case 1:
return packedSingleBlock1;
case 2:
return packedSingleBlock2;
case 3:
return packedSingleBlock3;
case 4:
return packedSingleBlock4;
case 5:
return packedSingleBlock5;
case 6:
return packedSingleBlock6;
case 7:
return packedSingleBlock7;
case 8:
return packedSingleBlock8;
case 9:
return packedSingleBlock9;
case 10:
return packedSingleBlock10;
case 12:
return packedSingleBlock12;
case 16:
return packedSingleBlock16;
case 21:
return packedSingleBlock21;
case 32:
return packedSingleBlock32;
default :
throw new AssertionError();
}
default :
throw new AssertionError();
}
}
