{
  int partitionSize=PartitionsUtils.partitionSize(facetIndexingParams,taxonomy);
  final int[][] counts=new int[(int)Math.ceil(taxonomy.getSize() / (float)partitionSize)][partitionSize];
  FacetSearchParams newSearchParams=new FacetSearchParams(facetIndexingParams);
  FacetsAccumulator fe=new StandardFacetsAccumulator(newSearchParams,indexReader,taxonomy){
    @Override protected HashMap<CategoryListIterator,Aggregator> getCategoryListMap(    FacetArrays facetArrays,    int partition) throws IOException {
      Aggregator aggregator=new CountingAggregator(counts[partition]);
      HashMap<CategoryListIterator,Aggregator> map=new HashMap<CategoryListIterator,Aggregator>();
      for (      CategoryListParams clp : facetIndexingParams.getAllCategoryListParams()) {
        final CategoryListIterator cli=clIteraor(clCache,clp,indexReader,partition);
        map.put(cli,aggregator);
      }
      return map;
    }
  }
;
  fe.setComplementThreshold(FacetsAccumulator.DISABLE_COMPLEMENT);
  fe.accumulate(ScoredDocIdsUtils.createAllDocsScoredDocIDs(indexReader));
  return new TotalFacetCounts(taxonomy,facetIndexingParams,counts,CreationType.Computed);
}
