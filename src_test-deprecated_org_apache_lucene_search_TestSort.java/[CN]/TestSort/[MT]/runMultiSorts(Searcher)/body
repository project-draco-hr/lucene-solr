{
  sort.setSort(SortField.FIELD_DOC);
  assertMatchesPattern(multi,queryA,sort,"[AB]{2}[CD]{2}[EF]{2}[GH]{2}[IJ]{2}");
  sort.setSort(new SortField("int",SortField.INT));
  assertMatchesPattern(multi,queryA,sort,"IDHFGJ[ABE]{3}C");
  sort.setSort(new SortField[]{new SortField("int",SortField.INT),SortField.FIELD_DOC});
  assertMatchesPattern(multi,queryA,sort,"IDHFGJ[AB]{2}EC");
  sort.setSort("int");
  assertMatchesPattern(multi,queryA,sort,"IDHFGJ[AB]{2}EC");
  sort.setSort(new SortField[]{new SortField("float",SortField.FLOAT),SortField.FIELD_DOC});
  assertMatchesPattern(multi,queryA,sort,"GDHJ[CI]{2}EFAB");
  sort.setSort("float");
  assertMatchesPattern(multi,queryA,sort,"GDHJ[CI]{2}EFAB");
  sort.setSort("string");
  assertMatches(multi,queryA,sort,"DJAIHGFEBC");
  sort.setSort("int",true);
  assertMatchesPattern(multi,queryA,sort,"C[AB]{2}EJGFHDI");
  sort.setSort("float",true);
  assertMatchesPattern(multi,queryA,sort,"BAFE[IC]{2}JHDG");
  sort.setSort("string",true);
  assertMatches(multi,queryA,sort,"CBEFGHIAJD");
  sort.setSort(new SortField[]{new SortField("string",Locale.US)});
  assertMatches(multi,queryA,sort,"DJAIHGFEBC");
  sort.setSort(new SortField[]{new SortField("string",Locale.US,true)});
  assertMatches(multi,queryA,sort,"CBEFGHIAJD");
  sort.setSort(new String[]{"int","float"});
  assertMatches(multi,queryA,sort,"IDHFGJEABC");
  sort.setSort(new String[]{"float","string"});
  assertMatches(multi,queryA,sort,"GDHJICEFAB");
  sort.setSort("int");
  assertMatches(multi,queryF,sort,"IZJ");
  sort.setSort("int",true);
  assertMatches(multi,queryF,sort,"JZI");
  sort.setSort("float");
  assertMatches(multi,queryF,sort,"ZJI");
  sort.setSort("string");
  assertMatches(multi,queryF,sort,"ZJI");
  sort.setSort("string",true);
  assertMatches(multi,queryF,sort,"IJZ");
}
