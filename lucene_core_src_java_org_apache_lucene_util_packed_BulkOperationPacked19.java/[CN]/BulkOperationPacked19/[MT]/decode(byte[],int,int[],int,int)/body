{
  for (int i=0; i < iterations; ++i) {
    final int byte0=blocks[blocksOffset++] & 0xFF;
    final int byte1=blocks[blocksOffset++] & 0xFF;
    final int byte2=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=(byte0 << 11) | (byte1 << 3) | (byte2 >>> 5);
    final int byte3=blocks[blocksOffset++] & 0xFF;
    final int byte4=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte2 & 31) << 14) | (byte3 << 6) | (byte4 >>> 2);
    final int byte5=blocks[blocksOffset++] & 0xFF;
    final int byte6=blocks[blocksOffset++] & 0xFF;
    final int byte7=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte4 & 3) << 17) | (byte5 << 9) | (byte6 << 1)| (byte7 >>> 7);
    final int byte8=blocks[blocksOffset++] & 0xFF;
    final int byte9=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte7 & 127) << 12) | (byte8 << 4) | (byte9 >>> 4);
    final int byte10=blocks[blocksOffset++] & 0xFF;
    final int byte11=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte9 & 15) << 15) | (byte10 << 7) | (byte11 >>> 1);
    final int byte12=blocks[blocksOffset++] & 0xFF;
    final int byte13=blocks[blocksOffset++] & 0xFF;
    final int byte14=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte11 & 1) << 18) | (byte12 << 10) | (byte13 << 2)| (byte14 >>> 6);
    final int byte15=blocks[blocksOffset++] & 0xFF;
    final int byte16=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte14 & 63) << 13) | (byte15 << 5) | (byte16 >>> 3);
    final int byte17=blocks[blocksOffset++] & 0xFF;
    final int byte18=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte16 & 7) << 16) | (byte17 << 8) | byte18;
  }
}
