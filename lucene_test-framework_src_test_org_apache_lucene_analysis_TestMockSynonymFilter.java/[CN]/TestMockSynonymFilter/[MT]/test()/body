{
  Analyzer analyzer=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      MockTokenizer tokenizer=new MockTokenizer();
      return new TokenStreamComponents(tokenizer,new MockSynonymFilter(tokenizer));
    }
  }
;
  assertAnalyzesTo(analyzer,"dogs",new String[]{"dogs","dog"},new int[]{0,0},new int[]{4,4},null,new int[]{1,0},new int[]{1,1},true);
  assertAnalyzesTo(analyzer,"small dogs",new String[]{"small","dogs","dog"},new int[]{0,6,6},new int[]{5,10,10},null,new int[]{1,1,0},new int[]{1,1,1},true);
  assertAnalyzesTo(analyzer,"dogs running",new String[]{"dogs","dog","running"},new int[]{0,0,5},new int[]{4,4,12},null,new int[]{1,0,1},new int[]{1,1,1},true);
  assertAnalyzesTo(analyzer,"small dogs running",new String[]{"small","dogs","dog","running"},new int[]{0,6,6,11},new int[]{5,10,10,18},null,new int[]{1,1,0,1},new int[]{1,1,1,1},true);
  assertAnalyzesTo(analyzer,"guinea",new String[]{"guinea"},new int[]{0},new int[]{6},null,new int[]{1},new int[]{1},true);
  assertAnalyzesTo(analyzer,"pig",new String[]{"pig"},new int[]{0},new int[]{3},null,new int[]{1},new int[]{1},true);
  assertAnalyzesTo(analyzer,"guinea pig",new String[]{"guinea","cavy","pig"},new int[]{0,0,7},new int[]{6,10,10},null,new int[]{1,0,1},new int[]{1,2,1},true);
  assertAnalyzesTo(analyzer,"guinea dogs",new String[]{"guinea","dogs","dog"},new int[]{0,7,7},new int[]{6,11,11},null,new int[]{1,1,0},new int[]{1,1,1},true);
  assertAnalyzesTo(analyzer,"dogs guinea",new String[]{"dogs","dog","guinea"},new int[]{0,0,5},new int[]{4,4,11},null,new int[]{1,0,1},new int[]{1,1,1},true);
  assertAnalyzesTo(analyzer,"dogs guinea pig",new String[]{"dogs","dog","guinea","cavy","pig"},new int[]{0,0,5,5,12},new int[]{4,4,11,15,15},null,new int[]{1,0,1,0,1},new int[]{1,1,1,2,1},true);
  assertAnalyzesTo(analyzer,"guinea pig dogs",new String[]{"guinea","cavy","pig","dogs","dog"},new int[]{0,0,7,11,11},new int[]{6,10,10,15,15},null,new int[]{1,0,1,1,0},new int[]{1,2,1,1,1},true);
  assertAnalyzesTo(analyzer,"small dogs and guinea pig running",new String[]{"small","dogs","dog","and","guinea","cavy","pig","running"},new int[]{0,6,6,11,15,15,22,26},new int[]{5,10,10,14,21,25,25,33},null,new int[]{1,1,0,1,1,0,1,1},new int[]{1,1,1,1,1,2,1,1},true);
  assertAnalyzesTo(analyzer,"small guinea pig and dogs running",new String[]{"small","guinea","cavy","pig","and","dogs","dog","running"},new int[]{0,6,6,13,17,21,21,26},new int[]{5,12,16,16,20,25,25,33},null,new int[]{1,1,0,1,1,1,0,1},new int[]{1,1,2,1,1,1,1,1},true);
}
