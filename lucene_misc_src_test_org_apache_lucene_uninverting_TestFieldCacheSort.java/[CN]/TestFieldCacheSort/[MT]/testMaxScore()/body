{
  Directory d=newDirectory();
  IndexWriter w=new IndexWriter(d,new IndexWriterConfig(new MockAnalyzer(random())));
  int id=0;
  for (int seg=0; seg < 2; seg++) {
    for (int docIDX=0; docIDX < 10; docIDX++) {
      Document doc=new Document();
      doc.add(new LegacyIntField("id",docIDX,Field.Store.YES));
      StringBuilder sb=new StringBuilder();
      for (int i=0; i < id; i++) {
        sb.append(' ');
        sb.append("text");
      }
      doc.add(newTextField("body",sb.toString(),Field.Store.NO));
      w.addDocument(doc);
      id++;
    }
    w.commit();
  }
  IndexReader r=UninvertingReader.wrap(DirectoryReader.open(w),Collections.singletonMap("id",Type.LEGACY_INTEGER));
  w.close();
  Query q=new TermQuery(new Term("body","text"));
  IndexSearcher s=newSearcher(r);
  float maxScore=s.search(q,10).getMaxScore();
  assertEquals(maxScore,s.search(q,3,Sort.INDEXORDER,random().nextBoolean(),true).getMaxScore(),0.0);
  assertEquals(maxScore,s.search(q,3,Sort.RELEVANCE,random().nextBoolean(),true).getMaxScore(),0.0);
  assertEquals(maxScore,s.search(q,3,new Sort(new SortField[]{new SortField("id",SortField.Type.INT,false)}),random().nextBoolean(),true).getMaxScore(),0.0);
  assertEquals(maxScore,s.search(q,3,new Sort(new SortField[]{new SortField("id",SortField.Type.INT,true)}),random().nextBoolean(),true).getMaxScore(),0.0);
  TestUtil.checkReader(r);
  r.close();
  d.close();
}
