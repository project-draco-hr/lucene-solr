{
  List res=new ArrayList(50);
  TestData ref=new TestData();
  for (int q=0; q < analyzers.length; q++) {
    for (int m=0; m < sources.length; m++) {
      for (int i=0; i < MAX_BUFFERED_DOCS_COUNTS.length; i++) {
        for (int k=0; k < MERGEFACTOR_COUNTS.length; k++) {
          for (int n=0; n < Constants.BOOLEANS.length; n++) {
            for (int p=0; p < Constants.BOOLEANS.length; p++) {
              ref.id="td-" + q + m+ i+ k+ n+ p;
              ref.source=sources[m];
              ref.analyzer=analyzers[q];
              ref.maxBufferedDocs=MAX_BUFFERED_DOCS_COUNTS[i];
              ref.mergeFactor=MERGEFACTOR_COUNTS[k];
              ref.compound=Constants.BOOLEANS[n].booleanValue();
              ref.optimize=Constants.BOOLEANS[p].booleanValue();
              try {
                res.add(ref.clone());
              }
 catch (              Exception e) {
                e.printStackTrace();
              }
            }
          }
        }
      }
    }
  }
  return (TestData[])res.toArray(new TestData[0]);
}
