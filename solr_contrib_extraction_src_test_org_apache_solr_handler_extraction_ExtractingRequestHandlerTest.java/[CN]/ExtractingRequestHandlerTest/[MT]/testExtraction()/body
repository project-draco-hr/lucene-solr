{
  ExtractingRequestHandler handler=(ExtractingRequestHandler)h.getCore().getRequestHandler("/update/extract");
  assertTrue("handler is null and it shouldn't be",handler != null);
  loadLocal("extraction/solr-word.pdf","fmap.created","extractedDate","fmap.producer","extractedProducer","fmap.creator","extractedCreator","fmap.Keywords","extractedKeywords","fmap.Creation-Date","extractedDate","uprefix","ignored_","fmap.Author","extractedAuthor","fmap.content","extractedContent","literal.id","one","fmap.Last-Modified","extractedDate");
  assertQ(req("title:solr-word"),"//*[@numFound='0']");
  assertU(commit());
  assertQ(req("title:solr-word"),"//*[@numFound='1']");
  loadLocal("extraction/simple.html","fmap.created","extractedDate","fmap.producer","extractedProducer","fmap.creator","extractedCreator","fmap.Keywords","extractedKeywords","fmap.Author","extractedAuthor","fmap.language","extractedLanguage","literal.id","two","uprefix","ignored_","fmap.content","extractedContent","fmap.Last-Modified","extractedDate");
  assertQ(req("title:Welcome"),"//*[@numFound='0']");
  assertU(commit());
  assertQ(req("title:Welcome"),"//*[@numFound='1']");
  assertQ(req("extractedContent:distinctwords"),"//*[@numFound='0']");
  assertQ(req("extractedContent:distinct"),"//*[@numFound='1']");
  assertQ(req("extractedContent:words"),"//*[@numFound='2']");
  assertQ(req("extractedContent:\"distinct words\""),"//*[@numFound='1']");
  loadLocal("extraction/simple.html","literal.id","simple2","uprefix","t_","lowernames","true","captureAttr","true","fmap.a","t_href","fmap.content_type","abcxyz","commit","true");
  assertQ(req("+id:simple2 +t_href:[* TO *]"),"//*[@numFound='1']");
  assertQ(req("+id:simple2 +t_abcxyz:[* TO *]"),"//*[@numFound='1']");
  assertQ(req("+id:simple2 +t_content:serif"),"//*[@numFound='0']");
  assertQ(req("+id:simple2 +t_content:blur"),"//*[@numFound='0']");
  loadLocal("extraction/simple.html","literal.id","simple3","uprefix","t_","lowernames","true","captureAttr","true","fmap.a","t_href","commit","true","boost.t_href","100.0");
  assertQ(req("t_href:http"),"//*[@numFound='2']");
  assertQ(req("t_href:http"),"//doc[1]/str[.='simple3']");
  assertQ(req("+id:simple3 +t_content_type:[* TO *]"),"//*[@numFound='1']");
  loadLocal("extraction/version_control.xml","fmap.created","extractedDate","fmap.producer","extractedProducer","fmap.creator","extractedCreator","fmap.Keywords","extractedKeywords","fmap.Author","extractedAuthor","literal.id","three","uprefix","ignored_","fmap.content","extractedContent","fmap.language","extractedLanguage","fmap.Last-Modified","extractedDate");
  assertQ(req("stream_name:version_control.xml"),"//*[@numFound='0']");
  assertU(commit());
  assertQ(req("stream_name:version_control.xml"),"//*[@numFound='1']");
  loadLocal("extraction/word2003.doc","fmap.created","extractedDate","fmap.producer","extractedProducer","fmap.creator","extractedCreator","fmap.Keywords","extractedKeywords","fmap.Author","extractedAuthor","literal.id","four","uprefix","ignored_","fmap.content","extractedContent","fmap.language","extractedLanguage","fmap.Last-Modified","extractedDate");
  assertQ(req("title:\"Word 2003 Title\""),"//*[@numFound='0']");
  assertQ(req("extractedContent:\"This is a test of PDF and Word extraction in Solr, it is only a test\""),"//*[@numFound='1']");
  assertU(commit());
  assertQ(req("title:\"Word 2003 Title\""),"//*[@numFound='1']");
  assertQ(req("extractedContent:\"This is a test of PDF and Word extraction in Solr, it is only a test\""),"//*[@numFound='2']");
  loadLocal("extraction/tiny.txt.gz","fmap.created","extractedDate","fmap.producer","extractedProducer","fmap.creator","extractedCreator","fmap.Keywords","extractedKeywords","fmap.Author","extractedAuthor","uprefix","ignored_","fmap.content","extractedContent","fmap.language","extractedLanguage","fmap.Last-Modified","extractedDate","literal.id","tiny.txt.gz");
  assertU(commit());
  assertQ(req("id:tiny.txt.gz"),"//*[@numFound='1']","//*/arr[@name='stream_name']/str[.='tiny.txt.gz']");
  loadLocal("extraction/open-document.odt","uprefix","ignored_","fmap.content","extractedContent","literal.id","open-document");
  assertU(commit());
  assertQ(req("extractedContent:\"Pr??ctica sobre GnuPG\""),"//*[@numFound='1']","//*/arr[@name='stream_name']/str[.='open-document.odt']");
}
