{
  authenticationConfig=Utils.getDeepCopy(authenticationConfig,4);
  String pluginClassName=null;
  if (authenticationConfig != null) {
    if (authenticationConfig.containsKey("class")) {
      pluginClassName=String.valueOf(authenticationConfig.get("class"));
    }
 else {
      throw new SolrException(ErrorCode.SERVER_ERROR,"No 'class' specified for authentication in ZK.");
    }
  }
  if (pluginClassName != null) {
    log.info("Authentication plugin class obtained from ZK: " + pluginClassName);
  }
 else   if (System.getProperty(AUTHENTICATION_PLUGIN_PROP) != null) {
    pluginClassName=System.getProperty(AUTHENTICATION_PLUGIN_PROP);
    log.info("Authentication plugin class obtained from system property '" + AUTHENTICATION_PLUGIN_PROP + "': "+ pluginClassName);
  }
 else {
    log.info("No authentication plugin used.");
  }
  SecurityPluginHolder<AuthenticationPlugin> old=authenticationPlugin;
  SecurityPluginHolder<AuthenticationPlugin> authenticationPlugin=null;
  if (pluginClassName != null) {
    authenticationPlugin=new SecurityPluginHolder<>(readVersion(authenticationConfig),getResourceLoader().newInstance(pluginClassName,AuthenticationPlugin.class));
  }
  if (authenticationPlugin != null) {
    authenticationPlugin.plugin.init(authenticationConfig);
    addHttpConfigurer(authenticationPlugin.plugin);
  }
  this.authenticationPlugin=authenticationPlugin;
  try {
    if (old != null)     old.plugin.close();
  }
 catch (  Exception e) {
  }
}
