{
  if (isShutDown) {
    throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE,"Solr has been shutdown.");
  }
  SolrCore core=null;
  try {
    MDCLoggingContext.setCore(core);
    if (!SolrIdentifierValidator.validateCoreName(dcore.getName())) {
      throw new SolrException(ErrorCode.BAD_REQUEST,SolrIdentifierValidator.getIdentifierMessage(SolrIdentifierValidator.IdentifierType.CORE,dcore.getName()));
    }
    if (zkSys.getZkController() != null) {
      zkSys.getZkController().preRegister(dcore);
    }
    ConfigSet coreConfig=coreConfigService.getConfig(dcore);
    log.info("Creating SolrCore '{}' using configuration from {}",dcore.getName(),coreConfig.getName());
    core=new SolrCore(dcore,coreConfig);
    solrCores.addCreated(core);
    if (!isZooKeeperAware() && core.getUpdateHandler().getUpdateLog() != null) {
      core.getUpdateHandler().getUpdateLog().recoverFromLog();
    }
    registerCore(dcore.getName(),core,publishState);
    return core;
  }
 catch (  Exception e) {
    coreInitFailures.put(dcore.getName(),new CoreLoadFailure(dcore,e));
    log.error("Error creating core [{}]: {}",dcore.getName(),e.getMessage(),e);
    final SolrException solrException=new SolrException(ErrorCode.SERVER_ERROR,"Unable to create core [" + dcore.getName() + "]",e);
    if (core != null && !core.isClosed())     IOUtils.closeQuietly(core);
    throw solrException;
  }
catch (  Throwable t) {
    SolrException e=new SolrException(ErrorCode.SERVER_ERROR,"JVM Error creating core [" + dcore.getName() + "]: "+ t.getMessage(),t);
    log.error("Error creating core [{}]: {}",dcore.getName(),t.getMessage(),t);
    coreInitFailures.put(dcore.getName(),new CoreLoadFailure(dcore,e));
    if (core != null && !core.isClosed())     IOUtils.closeQuietly(core);
    throw t;
  }
 finally {
    MDCLoggingContext.clear();
  }
}
