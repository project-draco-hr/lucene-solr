{
  String zookeeperHost;
  if (zkHost == null) {
    zookeeperHost=System.getProperty("zkHost");
  }
 else {
    zookeeperHost=zkHost;
  }
  String zkRun=System.getProperty("zkRun");
  if (zkRun == null && zookeeperHost == null)   return;
  System.setProperty("zookeeper.jmx.log4j.disable","true");
  if (zkRun != null) {
    String zkDataHome=System.getProperty("zkServerDataDir",solrHome + "zoo_data");
    String zkConfHome=System.getProperty("zkServerConfDir",solrHome);
    zkServer=new SolrZkServer(zkRun,zookeeperHost,zkDataHome,zkConfHome,hostPort);
    zkServer.parseConfig();
    zkServer.start();
    if (zookeeperHost == null) {
      zookeeperHost=zkServer.getClientString();
    }
  }
  int zkClientConnectTimeout=15000;
  if (zookeeperHost != null) {
    try {
      if (zkRun != null && zkServer.getServers().size() > 1) {
        zkClientConnectTimeout=24 * 60 * 60* 1000;
        log.info("Zookeeper client=" + zookeeperHost + "  Waiting for a quorum.");
      }
 else {
        log.info("Zookeeper client=" + zookeeperHost);
      }
      zkController=new ZkController(this,zookeeperHost,zkClientTimeout,zkClientConnectTimeout,host,hostPort,hostContext,leaderVoteWait,new CurrentCoreDescriptorProvider(){
        @Override public List<CoreDescriptor> getCurrentDescriptors(){
          List<CoreDescriptor> descriptors=new ArrayList<CoreDescriptor>(getCoreNames().size());
          for (          SolrCore core : getCores()) {
            descriptors.add(core.getCoreDescriptor());
          }
          return descriptors;
        }
      }
);
      String confDir=System.getProperty("bootstrap_confdir");
      boolean boostrapConf=Boolean.getBoolean("bootstrap_conf");
      if (zkRun != null && zkServer.getServers().size() > 1 && confDir == null && boostrapConf == false) {
        Thread.sleep(10000);
      }
      if (confDir != null) {
        File dir=new File(confDir);
        if (!dir.isDirectory()) {
          throw new IllegalArgumentException("bootstrap_confdir must be a directory of configuration files");
        }
        String confName=System.getProperty(ZkController.COLLECTION_PARAM_PREFIX + ZkController.CONFIGNAME_PROP,"configuration1");
        zkController.uploadConfigDir(dir,confName);
      }
      if (boostrapConf) {
        ZkController.bootstrapConf(zkController.getZkClient(),cfg,solrHome);
      }
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      log.error("",e);
      throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
    }
catch (    TimeoutException e) {
      log.error("Could not connect to ZooKeeper",e);
      throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
    }
catch (    IOException e) {
      log.error("",e);
      throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
    }
catch (    KeeperException e) {
      log.error("",e);
      throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
    }
  }
}
