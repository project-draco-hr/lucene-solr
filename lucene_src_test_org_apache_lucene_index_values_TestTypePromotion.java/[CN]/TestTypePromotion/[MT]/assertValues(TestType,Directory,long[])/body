{
  IndexReader reader=IndexReader.open(dir);
  assertEquals(1,reader.getSequentialSubReaders().length);
  ReaderContext topReaderContext=reader.getTopReaderContext();
  ReaderContext[] children=topReaderContext.children();
  IndexDocValues docValues=children[0].reader.docValues("promote");
  assertEquals(1,children.length);
  Source directSource=docValues.getDirectSource();
  for (int i=0; i < values.length; i++) {
    int id=Integer.parseInt(reader.document(i).get("id"));
    String msg="id: " + id + " doc: "+ i;
switch (type) {
case Byte:
      BytesRef bytes=directSource.getBytes(i,new BytesRef());
    long value=0;
switch (bytes.length) {
case 1:
    value=bytes.bytes[bytes.offset];
  break;
case 2:
value=BytesRefUtils.asShort(bytes);
break;
case 4:
value=BytesRefUtils.asInt(bytes);
break;
case 8:
value=BytesRefUtils.asLong(bytes);
break;
default :
fail(msg + " bytessize: " + bytes.length);
}
assertEquals(msg + " byteSize: " + bytes.length,values[id],value);
break;
case Float:
assertEquals(msg,values[id],Double.doubleToRawLongBits(directSource.getFloat(i)));
break;
case Int:
assertEquals(msg,values[id],directSource.getInt(i));
break;
default :
break;
}
}
docValues.close();
reader.close();
}
