{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)));
  int num_1=atLeast(200);
  int num_2=atLeast(200);
  int num_3=atLeast(200);
  long[] values=new long[num_1 + num_2 + num_3];
  index(writer,new IndexDocValuesField("promote"),randomValueType(types,random),values,0,num_1);
  writer.commit();
  index(writer,new IndexDocValuesField("promote"),randomValueType(types,random),values,num_1,num_2);
  writer.commit();
  if (random.nextInt(4) == 0) {
    writer.forceMerge(1);
    Directory dir_2=newDirectory();
    IndexWriter writer_2=new IndexWriter(dir_2,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)));
    index(writer_2,new IndexDocValuesField("promote"),randomValueType(types,random),values,num_1 + num_2,num_3);
    writer_2.commit();
    writer_2.close();
    if (random.nextBoolean()) {
      writer.addIndexes(dir_2);
    }
 else {
      IndexReader open=IndexReader.open(dir_2);
      boolean useSlowMRWrapper=types != SORTED_BYTES && random.nextBoolean();
      writer.addIndexes(useSlowMRWrapper ? new SlowMultiReaderWrapper(open) : open);
      open.close();
    }
    dir_2.close();
  }
 else {
    index(writer,new IndexDocValuesField("promote"),randomValueType(types,random),values,num_1 + num_2,num_3);
  }
  writer.forceMerge(1);
  writer.close();
  assertValues(type,dir,values);
  dir.close();
}
