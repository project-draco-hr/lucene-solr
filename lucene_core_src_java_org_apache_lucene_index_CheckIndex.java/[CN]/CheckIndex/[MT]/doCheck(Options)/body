{
  setCrossCheckTermVectors(opts.doCrossCheckTermVectors);
  setChecksumsOnly(opts.doChecksumsOnly);
  setInfoStream(opts.out,opts.verbose);
  Status result=checkIndex(opts.onlySegments);
  if (result.missingSegments) {
    return 1;
  }
  if (!result.clean) {
    if (!opts.doExorcise) {
      opts.out.println("WARNING: would write new segments file, and " + result.totLoseDocCount + " documents would be lost, if -exorcise were specified\n");
    }
 else {
      opts.out.println("WARNING: " + result.totLoseDocCount + " documents will be lost\n");
      opts.out.println("NOTE: will write new segments file in 5 seconds; this will remove " + result.totLoseDocCount + " docs from the index. YOU WILL LOSE DATA. THIS IS YOUR LAST CHANCE TO CTRL+C!");
      for (int s=0; s < 5; s++) {
        Thread.sleep(1000);
        opts.out.println("  " + (5 - s) + "...");
      }
      opts.out.println("Writing...");
      exorciseIndex(result);
      opts.out.println("OK");
      opts.out.println("Wrote new segments file \"" + result.newSegments.getSegmentsFileName() + "\"");
    }
  }
  opts.out.println("");
  if (result.clean == true) {
    return 0;
  }
 else {
    return 1;
  }
}
