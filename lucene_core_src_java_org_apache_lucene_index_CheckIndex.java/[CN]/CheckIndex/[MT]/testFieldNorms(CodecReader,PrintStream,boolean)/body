{
  long startNS=System.nanoTime();
  final Status.FieldNormStatus status=new Status.FieldNormStatus();
  try {
    if (infoStream != null) {
      infoStream.print("    test: field norms.........");
    }
    NormsProducer normsReader=reader.getNormsReader();
    if (normsReader != null) {
      normsReader=normsReader.getMergeInstance();
    }
    for (    FieldInfo info : reader.getFieldInfos()) {
      if (info.hasNorms()) {
        checkNumericDocValues(info.name,reader.maxDoc(),normsReader.getNorms(info),new Bits.MatchAllBits(reader.maxDoc()));
        ++status.totFields;
      }
    }
    msg(infoStream,String.format(Locale.ROOT,"OK [%d fields] [took %.3f sec]",status.totFields,nsToSec(System.nanoTime() - startNS)));
  }
 catch (  Throwable e) {
    if (failFast) {
      IOUtils.reThrow(e);
    }
    msg(infoStream,"ERROR [" + String.valueOf(e.getMessage()) + "]");
    status.error=e;
    if (infoStream != null) {
      e.printStackTrace(infoStream);
    }
  }
  return status;
}
