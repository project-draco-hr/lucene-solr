{
  assertEquals("1,hi",h.query(req("q","id:1","wt","csv","csv.header","false","fl","XXX:id,foo_s")).trim());
  String txt=h.query(req("q","id:1","wt","csv","csv.header","true","fl","XXX:id,YYY:[docid],FOO:foo_s"));
  String[] lines=txt.split("\n");
  assertEquals(2,lines.length);
  assertEquals("XXX,YYY,FOO",lines[0]);
  assertEquals("1,0,hi",lines[1]);
  String funcText=h.query(req("q","*","wt","csv","csv.header","true","fl","XXX:id,YYY:exists(foo_i),exists(shouldbeunstored)"));
  String[] funcLines=funcText.split("\n");
  assertEquals(6,funcLines.length);
  assertEquals("XXX,YYY,exists(shouldbeunstored)",funcLines[0]);
  assertEquals("1,true,false",funcLines[1]);
  assertEquals("3,false,true",funcLines[3]);
  String singleFuncText=h.query(req("q","*","wt","csv","csv.header","true","fl","exists(shouldbeunstored),XXX:id"));
  String[] singleFuncLines=singleFuncText.split("\n");
  assertEquals(6,singleFuncLines.length);
  assertEquals("exists(shouldbeunstored),XXX",singleFuncLines[0]);
  assertEquals("false,1",singleFuncLines[1]);
  assertEquals("true,3",singleFuncLines[3]);
}
