{
  for (int d=0; d < this.min.length; ++d) {
    if (this.min[d] > other.max[d] || this.max[d] < other.min[d]) {
      return null;
    }
  }
  boolean within=true;
  for (int d=0; d < this.min.length; ++d) {
    if ((this.min[d] >= other.min[d] && this.max[d] <= other.max[d]) == false) {
      within=false;
      break;
    }
  }
  if (within == true) {
    return QueryType.WITHIN;
  }
  boolean contains=true;
  for (int d=0; d < this.min.length; ++d) {
    if ((this.min[d] <= other.min[d] && this.max[d] >= other.max[d]) == false) {
      contains=false;
      break;
    }
  }
  if (contains == true) {
    return QueryType.CONTAINS;
  }
  return QueryType.INTERSECTS;
}
