{
  if (automaton.getNumStates() == 0) {
    automaton=new Automaton();
    automaton.createState();
  }
  if (simplify) {
    if (Operations.isEmpty(automaton)) {
      type=AUTOMATON_TYPE.NONE;
      term=null;
      commonSuffixRef=null;
      runAutomaton=null;
      this.automaton=null;
      this.finite=null;
      return;
    }
    boolean isTotal;
    if (isBinary) {
      isTotal=Operations.isTotal(automaton,0,0xff);
    }
 else {
      isTotal=Operations.isTotal(automaton);
    }
    if (isTotal) {
      type=AUTOMATON_TYPE.ALL;
      term=null;
      commonSuffixRef=null;
      runAutomaton=null;
      this.automaton=null;
      this.finite=null;
      return;
    }
    automaton=Operations.determinize(automaton,maxDeterminizedStates);
    IntsRef singleton=Operations.getSingleton(automaton);
    if (singleton != null) {
      type=AUTOMATON_TYPE.SINGLE;
      commonSuffixRef=null;
      runAutomaton=null;
      this.automaton=null;
      this.finite=null;
      if (isBinary) {
        term=StringHelper.intsRefToBytesRef(singleton);
      }
 else {
        term=new BytesRef(UnicodeUtil.newString(singleton.ints,singleton.offset,singleton.length));
      }
      return;
    }
  }
  type=AUTOMATON_TYPE.NORMAL;
  term=null;
  if (finite == null) {
    this.finite=Operations.isFinite(automaton);
  }
 else {
    this.finite=finite;
  }
  Automaton binary;
  if (isBinary) {
    binary=automaton;
  }
 else {
    binary=new UTF32ToUTF8().convert(automaton);
  }
  if (this.finite) {
    commonSuffixRef=null;
  }
 else {
    commonSuffixRef=Operations.getCommonSuffixBytesRef(binary,maxDeterminizedStates);
  }
  runAutomaton=new ByteRunAutomaton(binary,true,maxDeterminizedStates);
  this.automaton=runAutomaton.automaton;
}
