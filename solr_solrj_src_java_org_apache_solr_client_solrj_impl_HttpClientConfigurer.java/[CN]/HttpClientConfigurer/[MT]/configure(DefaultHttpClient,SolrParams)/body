{
  if (config.get(HttpClientUtil.PROP_MAX_CONNECTIONS) != null) {
    HttpClientUtil.setMaxConnections(httpClient,config.getInt(HttpClientUtil.PROP_MAX_CONNECTIONS));
  }
  if (config.get(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST) != null) {
    HttpClientUtil.setMaxConnectionsPerHost(httpClient,config.getInt(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST));
  }
  if (config.get(HttpClientUtil.PROP_CONNECTION_TIMEOUT) != null) {
    HttpClientUtil.setConnectionTimeout(httpClient,config.getInt(HttpClientUtil.PROP_CONNECTION_TIMEOUT));
  }
  if (config.get(HttpClientUtil.PROP_SO_TIMEOUT) != null) {
    HttpClientUtil.setSoTimeout(httpClient,config.getInt(HttpClientUtil.PROP_SO_TIMEOUT));
  }
  if (config.get(HttpClientUtil.PROP_FOLLOW_REDIRECTS) != null) {
    HttpClientUtil.setFollowRedirects(httpClient,config.getBool(HttpClientUtil.PROP_FOLLOW_REDIRECTS));
  }
  HttpClientUtil.setUseRetry(httpClient,config.getBool(HttpClientUtil.PROP_USE_RETRY,true));
  final String basicAuthUser=config.get(HttpClientUtil.PROP_BASIC_AUTH_USER);
  final String basicAuthPass=config.get(HttpClientUtil.PROP_BASIC_AUTH_PASS);
  HttpClientUtil.setBasicAuth(httpClient,basicAuthUser,basicAuthPass);
  if (config.get(HttpClientUtil.PROP_ALLOW_COMPRESSION) != null) {
    HttpClientUtil.setAllowCompression(httpClient,config.getBool(HttpClientUtil.PROP_ALLOW_COMPRESSION));
  }
  boolean sslCheckPeerName=toBooleanDefaultIfNull(toBooleanObject(System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME)),true);
  if (sslCheckPeerName == false) {
    HttpClientUtil.setHostNameVerifier(httpClient,SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
  }
  httpClient.addRequestInterceptor(new HttpRequestInterceptor(){
    @Override public void process(    final HttpRequest request,    final HttpContext context){
      final Object solrContext=context.getAttribute(SolrHttpContext.SOLR_CONTEXT_KEY);
      if (solrContext == null || solrContext instanceof SolrHttpContext == false) {
        throw new SolrException(ErrorCode.BAD_REQUEST,"A SolrHttpContext object must be passed in as context. Context: " + context);
      }
    }
  }
);
}
