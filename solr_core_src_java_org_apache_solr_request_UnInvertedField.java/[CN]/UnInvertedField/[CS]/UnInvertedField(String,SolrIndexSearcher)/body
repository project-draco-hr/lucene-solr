{
  super(field,searcher.maxDoc() / 20 + 2,DEFAULT_INDEX_INTERVAL_BITS);
  final String prefix=TrieField.getMainValuePrefix(searcher.getSchema().getFieldType(field));
  this.searcher=searcher;
  try {
    AtomicReader r=searcher.getAtomicReader();
    uninvert(r,r.getLiveDocs(),prefix == null ? null : new BytesRef(prefix));
  }
 catch (  IllegalStateException ise) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,ise.getMessage());
  }
  if (tnums != null) {
    for (    byte[] target : tnums) {
      if (target != null && target.length > (1 << 24) * .9) {
        SolrCore.log.warn("Approaching too many values for UnInvertedField faceting on field '" + field + "' : bucket size="+ target.length);
      }
    }
  }
  if ((maxTermCounts.length - numTermsInField) > 1024) {
    int[] newMaxTermCounts=new int[numTermsInField];
    System.arraycopy(maxTermCounts,0,newMaxTermCounts,0,numTermsInField);
    maxTermCounts=newMaxTermCounts;
  }
  SolrCore.log.info("UnInverted multi-valued field " + toString());
}
