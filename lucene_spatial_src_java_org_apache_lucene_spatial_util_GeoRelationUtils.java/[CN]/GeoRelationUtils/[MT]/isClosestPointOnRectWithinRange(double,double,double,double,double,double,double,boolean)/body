{
  double[] closestPt={0,0};
  GeoDistanceUtils.closestPointOnBBox(rMinLat,rMaxLat,rMinLon,rMaxLon,centerLat,centerLon,closestPt);
  boolean haverShortCut=SloppyMath.haversinMeters(centerLat,centerLon,closestPt[0],closestPt[1]) <= radiusMeters;
  if (approx == true || haverShortCut == true) {
    return haverShortCut;
  }
  double lon1=rMinLon;
  double lon2=rMaxLon;
  double lat1=rMinLat;
  double lat2=rMaxLat;
  if (closestPt[1] == rMinLon || closestPt[1] == rMaxLon) {
    lon1=closestPt[1];
    lon2=lon1;
  }
 else   if (closestPt[0] == rMinLat || closestPt[0] == rMaxLat) {
    lat1=closestPt[0];
    lat2=lat1;
  }
  return lineCrossesSphere(lat1,lon1,0,lat2,lon2,0,centerLat,centerLon,0,radiusMeters);
}
