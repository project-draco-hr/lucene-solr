{
  double[] ecf1=GeoProjectionUtils.llaToECF(lon1,lat1,alt1,null);
  double[] ecf2=GeoProjectionUtils.llaToECF(lon2,lat2,alt2,null);
  double[] cntr=GeoProjectionUtils.llaToECF(centerLon,centerLat,centerAlt,null);
  double[] oneEighty=GeoProjectionUtils.pointFromLonLatBearingGreatCircle(centerLon,centerLat,180.0d,radiusMeters,new double[3]);
  GeoProjectionUtils.llaToECF(oneEighty[0],oneEighty[1],0,oneEighty);
  radiusMeters=GeoDistanceUtils.linearDistance(oneEighty,cntr);
  final double dX=ecf2[0] - ecf1[0];
  final double dY=ecf2[1] - ecf1[1];
  final double dZ=ecf2[2] - ecf1[2];
  final double fX=ecf1[0] - cntr[0];
  final double fY=ecf1[1] - cntr[1];
  final double fZ=ecf1[2] - cntr[2];
  final double a=dX * dX + dY * dY + dZ * dZ;
  final double b=2 * (fX * dX + fY * dY + fZ * dZ);
  final double c=(fX * fX + fY * fY + fZ * fZ) - (radiusMeters * radiusMeters);
  double discrim=(b * b) - (4 * a * c);
  if (discrim < 0) {
    return false;
  }
  discrim=StrictMath.sqrt(discrim);
  final double a2=2 * a;
  final double t1=(-b - discrim) / a2;
  final double t2=(-b + discrim) / a2;
  if ((t1 < 0 || t1 > 1)) {
    return !(t2 < 0 || t2 > 1);
  }
  return true;
}
