{
  int start=inText.indexOf(requiredToken);
  if (start < 0) {
    return -1;
  }
  int delta=Integer.MAX_VALUE;
  int saveNBestCost=nBestCost;
  setReader(new StringReader(inText));
  reset();
  try {
    setNBestCost(1);
    int prevRootBase=-1;
    while (incrementToken()) {
      if (lattice.rootBase != prevRootBase) {
        prevRootBase=lattice.rootBase;
        delta=Math.min(delta,lattice.probeDelta(start,start + requiredToken.length()));
      }
    }
  }
  finally {
    end();
    close();
    setNBestCost(saveNBestCost);
  }
  if (VERBOSE) {
    System.out.printf("JapaneseTokenizer: delta = %d: %s-%s\n",delta,inText,requiredToken);
  }
  return delta == Integer.MAX_VALUE ? -1 : delta;
}
