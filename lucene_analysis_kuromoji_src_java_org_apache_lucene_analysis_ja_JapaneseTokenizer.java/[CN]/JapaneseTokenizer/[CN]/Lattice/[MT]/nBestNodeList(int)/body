{
  List<Integer> list=new ArrayList<>();
  int leastCost=Integer.MAX_VALUE;
  int leastLeft=-1;
  int leastRight=-1;
  for (int node=2; node < nodeCount; ++node) {
    if (nodeMark[node] == 0) {
      int cost=cost(node);
      if (cost < leastCost) {
        leastCost=cost;
        leastLeft=nodeLeft[node];
        leastRight=nodeRight[node];
        list.clear();
        list.add(node);
      }
 else       if (cost == leastCost && (nodeLeft[node] != leastLeft || nodeRight[node] != leastRight)) {
        list.add(node);
      }
    }
  }
  for (  int node : list) {
    markSameSpanNode(node,N);
  }
  return list;
}
