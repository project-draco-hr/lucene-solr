{
  int left=start - rootBase;
  int right=end - rootBase;
  if (left < 0 || rootSize < right) {
    return Integer.MAX_VALUE;
  }
  int probedCost=Integer.MAX_VALUE;
  for (int node=lRoot[left]; 0 <= node; node=nodeLeftChain[node]) {
    if (nodeRight[node] == right) {
      probedCost=Math.min(probedCost,cost(node));
    }
  }
  return probedCost - bestCost();
}
