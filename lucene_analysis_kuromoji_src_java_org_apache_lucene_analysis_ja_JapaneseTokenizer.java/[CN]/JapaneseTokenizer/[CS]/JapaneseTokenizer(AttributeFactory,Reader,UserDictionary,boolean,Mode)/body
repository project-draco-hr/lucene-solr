{
  super(factory,input);
  dictionary=TokenInfoDictionary.getInstance();
  fst=dictionary.getFST();
  unkDictionary=UnknownDictionary.getInstance();
  characterDefinition=unkDictionary.getCharacterDefinition();
  this.userDictionary=userDictionary;
  costs=ConnectionCosts.getInstance();
  fstReader=fst.getBytesReader();
  if (userDictionary != null) {
    userFST=userDictionary.getFST();
    userFSTReader=userFST.getBytesReader();
  }
 else {
    userFST=null;
    userFSTReader=null;
  }
  this.discardPunctuation=discardPunctuation;
switch (mode) {
case SEARCH:
    searchMode=true;
  extendedMode=false;
outputCompounds=true;
break;
case EXTENDED:
searchMode=true;
extendedMode=true;
outputCompounds=false;
break;
default :
searchMode=false;
extendedMode=false;
outputCompounds=false;
break;
}
buffer.reset(this.input);
resetState();
dictionaryMap.put(Type.KNOWN,dictionary);
dictionaryMap.put(Type.UNKNOWN,unkDictionary);
dictionaryMap.put(Type.USER,userDictionary);
}
