{
  directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMaxBufferedDocs(_TestUtil.nextInt(random,50,1000)).setMergePolicy(newLogMergePolicy()));
  Document doc=new Document();
  HashMap<String,NumericConfig> numericConfigMap=new HashMap<String,NumericConfig>();
  HashMap<String,NumericField> numericFieldMap=new HashMap<String,NumericField>();
  qp.setNumericConfigMap(numericConfigMap);
  for (  NumericField.DataType type : NumericField.DataType.values()) {
    numericConfigMap.put(type.name(),new NumericConfig(PRECISION_STEP,NUMBER_FORMAT,type));
    NumericField field=new NumericField(type.name(),PRECISION_STEP,Field.Store.YES,true);
    numericFieldMap.put(type.name(),field);
    doc.add(field);
  }
  numericConfigMap.put(DATE_FIELD_NAME,new NumericConfig(PRECISION_STEP,DATE_FORMAT,NumericField.DataType.LONG));
  NumericField dateField=new NumericField(DATE_FIELD_NAME,PRECISION_STEP,Field.Store.YES,true);
  numericFieldMap.put(DATE_FIELD_NAME,dateField);
  doc.add(dateField);
  for (  NumberType numberType : NumberType.values()) {
    setFieldValues(numberType,numericFieldMap);
    if (VERBOSE)     System.out.println("Indexing document: " + doc);
    writer.addDocument(doc);
  }
  reader=writer.getReader();
  searcher=newSearcher(reader);
  writer.close();
  SimpleDateFormat df=(SimpleDateFormat)DateFormat.getDateTimeInstance(randomDateStyle(random),randomDateStyle(random),LOCALE.ENGLISH);
  System.out.println(df.toPattern());
  df.applyPattern(df.toPattern() + " G s Z yyyy");
  df.setTimeZone(TIMEZONE);
  System.out.println(TIMEZONE);
  System.out.println(TIMEZONE);
  System.out.println(TIMEZONE);
  long l1=0;
  long l2=-30000;
  String d1=df.format(new Date(l1));
  String d2=df.format(new Date(l2));
  long newL1=df.parse(d1).getTime();
  long newL2=df.parse(d2).getTime();
  System.out.println(l1 + " => " + d1+ " => "+ newL1);
  System.out.println(l2 + " => " + d2+ " => "+ newL2);
}
