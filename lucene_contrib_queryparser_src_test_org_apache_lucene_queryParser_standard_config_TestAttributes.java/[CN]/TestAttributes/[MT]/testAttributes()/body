{
  _TestUtil.assertAttributeReflection(new AllowLeadingWildcardAttributeImpl(),Collections.singletonMap(AllowLeadingWildcardAttribute.class.getName() + "#allowLeadingWildcard",false));
  _TestUtil.assertAttributeReflection(new AnalyzerAttributeImpl(),Collections.singletonMap(AnalyzerAttribute.class.getName() + "#analyzer",null));
  _TestUtil.assertAttributeReflection(new BoostAttributeImpl(),Collections.singletonMap(BoostAttribute.class.getName() + "#boost",1.0f));
  _TestUtil.assertAttributeReflection(new DateResolutionAttributeImpl(),Collections.singletonMap(DateResolutionAttribute.class.getName() + "#dateResolution",null));
  _TestUtil.assertAttributeReflection(new DefaultOperatorAttributeImpl(),Collections.singletonMap(DefaultOperatorAttribute.class.getName() + "#operator",DefaultOperatorAttribute.Operator.OR));
  _TestUtil.assertAttributeReflection(new DefaultPhraseSlopAttributeImpl(),Collections.singletonMap(DefaultPhraseSlopAttribute.class.getName() + "#defaultPhraseSlop",0));
  _TestUtil.assertAttributeReflection(new FieldBoostMapAttributeImpl(),Collections.singletonMap(FieldBoostMapAttribute.class.getName() + "#boosts",Collections.emptyMap()));
  _TestUtil.assertAttributeReflection(new FieldDateResolutionMapAttributeImpl(),Collections.singletonMap(FieldDateResolutionMapAttribute.class.getName() + "#dateRes",Collections.emptyMap()));
  _TestUtil.assertAttributeReflection(new FuzzyAttributeImpl(),new HashMap<String,Object>(){
{
      put(FuzzyAttribute.class.getName() + "#prefixLength",FuzzyQuery.defaultPrefixLength);
      put(FuzzyAttribute.class.getName() + "#minSimilarity",FuzzyQuery.defaultMinSimilarity);
    }
  }
);
  _TestUtil.assertAttributeReflection(new LocaleAttributeImpl(),Collections.singletonMap(LocaleAttribute.class.getName() + "#locale",Locale.getDefault()));
  _TestUtil.assertAttributeReflection(new LowercaseExpandedTermsAttributeImpl(),Collections.singletonMap(LowercaseExpandedTermsAttribute.class.getName() + "#lowercaseExpandedTerms",true));
  _TestUtil.assertAttributeReflection(new MultiFieldAttributeImpl(),Collections.singletonMap(MultiFieldAttribute.class.getName() + "#fields",null));
  _TestUtil.assertAttributeReflection(new MultiTermRewriteMethodAttributeImpl(),Collections.singletonMap(MultiTermRewriteMethodAttribute.class.getName() + "#multiTermRewriteMethod",MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT));
  _TestUtil.assertAttributeReflection(new PositionIncrementsAttributeImpl(),Collections.singletonMap(PositionIncrementsAttribute.class.getName() + "#positionIncrementsEnabled",false));
}
