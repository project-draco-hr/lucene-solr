{
  if (points.size() < 3)   throw new IllegalArgumentException("Polygon needs at least three points.");
  edges=new SidedPlane[points.size()];
  notableEdgePoints=new GeoPoint[points.size()][];
  internalEdges=new boolean[points.size()];
  for (int i=0; i < points.size(); i++) {
    final GeoPoint start=points.get(i);
    final boolean isInternalEdge=(isInternalEdges != null ? (i == isInternalEdges.size() ? isInternalReturnEdge : isInternalEdges.get(i)) : false);
    final GeoPoint end=points.get(legalIndex(i + 1));
    final double distance=start.arcDistance(end);
    if (distance > fullDistance)     fullDistance=distance;
    final GeoPoint check=points.get(legalIndex(i + 2));
    final SidedPlane sp=new SidedPlane(check,start,end);
    edges[i]=sp;
    notableEdgePoints[i]=new GeoPoint[]{start,end};
    internalEdges[i]=isInternalEdge;
  }
  createCenterPoint();
}
