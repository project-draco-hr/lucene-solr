{
  if (points.size() < 3)   throw new IllegalArgumentException("Polygon needs at least three points.");
  edges=new SidedPlane[points.size()];
  for (int i=0; i < points.size(); i++) {
    GeoPoint start=points.get(i);
    GeoPoint end=points.get(legalIndex(i + 1));
    GeoPoint check=points.get(legalIndex(i + 2));
    SidedPlane sp=new SidedPlane(check,start,end);
    edges[i]=sp;
  }
  for (int edgeIndex=0; edgeIndex < edges.length; edgeIndex++) {
    SidedPlane edge=edges[edgeIndex];
    for (int pointIndex=0; pointIndex < points.size(); pointIndex++) {
      if (pointIndex != edgeIndex && pointIndex != legalIndex(edgeIndex + 1)) {
        if (!edge.isWithin(points.get(pointIndex)))         throw new IllegalArgumentException("Polygon is not convex: Point " + points.get(pointIndex) + " Edge "+ edge);
      }
    }
  }
  double sumX=0.0;
  double sumY=0.0;
  double sumZ=0.0;
  for (  GeoPoint p : points) {
    sumX+=p.x;
    sumY+=p.y;
    sumZ+=p.z;
  }
  double denom=1.0 / (double)points.size();
  sumX*=denom;
  sumY*=denom;
  sumZ*=denom;
  double magnitude=Math.sqrt(sumX * sumX + sumY * sumY + sumZ * sumZ);
  if (magnitude < 1.0e-10)   throw new IllegalArgumentException("Polygon interior point cannot be determined");
  denom=1.0 / magnitude;
  interiorPoint=new GeoPoint(sumX * denom,sumY * denom,sumZ * denom);
  for (  SidedPlane sp : edges) {
    if (!sp.isWithin(interiorPoint)) {
      StringBuilder sb=new StringBuilder("Interior point logic failed to produce an interior point.  Vertices: ");
      for (      GeoPoint p : points) {
        sb.append(p).append(" ");
      }
      sb.append(". Interior point: ").append(interiorPoint);
      throw new IllegalArgumentException(sb.toString());
    }
  }
}
