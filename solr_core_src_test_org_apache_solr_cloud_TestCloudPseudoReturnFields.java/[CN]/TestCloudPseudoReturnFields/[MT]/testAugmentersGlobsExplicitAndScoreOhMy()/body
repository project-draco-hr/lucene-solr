{
  Random random=random();
  final List<String> fl=Arrays.asList("id","[docid]","[explain]","score","val_*","subj*");
  final int iters=atLeast(random,10);
  for (int i=0; i < iters; i++) {
    Collections.shuffle(fl,random);
    final SolrParams singleFl=params("q","*:*","rows","1","fl",StringUtils.join(fl.toArray(),','));
    final ModifiableSolrParams multiFl=params("q","*:*","rows","1");
    for (    String item : fl) {
      multiFl.add("fl",item);
    }
    for (    SolrParams params : Arrays.asList(singleFl,multiFl)) {
      SolrDocumentList docs=assertSearch(params);
      assertEquals(params + " => " + docs,5,docs.getNumFound());
      for (      SolrDocument doc : docs) {
        String msg=params + " => " + doc;
        assertEquals(msg,6,doc.size());
        assertTrue(msg,doc.getFieldValue("id") instanceof String);
        assertTrue(msg,doc.getFieldValue("[docid]") instanceof Integer);
        assertTrue(msg,doc.getFieldValue("[explain]") instanceof String);
        assertTrue(msg,doc.getFieldValue("score") instanceof Float);
        assertTrue(msg,doc.getFieldValue("val_i") instanceof Integer);
        assertTrue(msg,doc.getFieldValue("subject") instanceof String);
      }
    }
  }
}
