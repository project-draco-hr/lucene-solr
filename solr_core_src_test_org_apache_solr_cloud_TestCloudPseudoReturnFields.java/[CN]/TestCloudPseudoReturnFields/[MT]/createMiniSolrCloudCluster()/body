{
  final int repFactor=usually() ? 1 : 2;
  ;
  final int numShards=2;
  final int numNodes=1 + (numShards * repFactor);
  final String configName=DEBUG_LABEL + "_config-set";
  final Path configDir=Paths.get(TEST_HOME(),"collection1","conf");
  configureCluster(numNodes).addConfig(configName,configDir).configure();
  Map<String,String> collectionProperties=new HashMap<>();
  collectionProperties.put("config","solrconfig-tlog.xml");
  collectionProperties.put("schema","schema-psuedo-fields.xml");
  CollectionAdminRequest.createCollection(COLLECTION_NAME,configName,numShards,repFactor).setProperties(collectionProperties).process(cluster.getSolrClient());
  CLOUD_CLIENT=cluster.getSolrClient();
  CLOUD_CLIENT.setDefaultCollection(COLLECTION_NAME);
  waitForRecoveriesToFinish(CLOUD_CLIENT);
  for (  JettySolrRunner jetty : cluster.getJettySolrRunners()) {
    CLIENTS.add(getHttpSolrClient(jetty.getBaseUrl() + "/" + COLLECTION_NAME+ "/"));
  }
  assertEquals(0,CLOUD_CLIENT.add(sdoc("id","42","val_i","1","ssto","X","subject","aaa")).getStatus());
  assertEquals(0,CLOUD_CLIENT.add(sdoc("id","43","val_i","9","ssto","X","subject","bbb")).getStatus());
  assertEquals(0,CLOUD_CLIENT.add(sdoc("id","44","val_i","4","ssto","X","subject","aaa")).getStatus());
  assertEquals(0,CLOUD_CLIENT.add(sdoc("id","45","val_i","6","ssto","X","subject","aaa")).getStatus());
  assertEquals(0,CLOUD_CLIENT.add(sdoc("id","46","val_i","3","ssto","X","subject","ggg")).getStatus());
  assertEquals(0,CLOUD_CLIENT.commit().getStatus());
  ;
}
