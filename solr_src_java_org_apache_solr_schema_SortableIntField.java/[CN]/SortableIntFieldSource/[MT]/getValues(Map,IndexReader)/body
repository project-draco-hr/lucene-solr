{
  final int def=defVal;
  return new StringIndexDocValues(this,reader,field){
    private final BytesRef spare=new BytesRef();
    protected String toTerm(    String readableValue){
      return NumberUtils.int2sortableStr(readableValue);
    }
    public float floatVal(    int doc){
      return (float)intVal(doc);
    }
    public int intVal(    int doc){
      int ord=termsIndex.getOrd(doc);
      return ord == 0 ? def : NumberUtils.SortableStr2int(termsIndex.lookup(ord,spare),0,3);
    }
    public long longVal(    int doc){
      return (long)intVal(doc);
    }
    public double doubleVal(    int doc){
      return (double)intVal(doc);
    }
    public String strVal(    int doc){
      return Integer.toString(intVal(doc));
    }
    public String toString(    int doc){
      return description() + '=' + intVal(doc);
    }
    @Override public ValueFiller getValueFiller(){
      return new ValueFiller(){
        private final MutableValueInt mval=new MutableValueInt();
        @Override public MutableValue getValue(){
          return mval;
        }
        @Override public void fillValue(        int doc){
          int ord=termsIndex.getOrd(doc);
          if (ord == 0) {
            mval.value=def;
            mval.exists=false;
          }
 else {
            mval.value=NumberUtils.SortableStr2int(termsIndex.lookup(ord,spare),0,3);
            mval.exists=true;
          }
        }
      }
;
    }
  }
;
}
