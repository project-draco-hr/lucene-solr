{
  File dir=createTempDir(LuceneTestCase.getTestClass().getSimpleName());
  File destDir=createTempDir(LuceneTestCase.getTestClass().getSimpleName());
  Directory fsDir=newFSDirectory(dir);
  if (fsDir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)fsDir).setAssertNoUnrefencedFilesOnClose(false);
  }
  MergePolicy mergePolicy=new LogByteSizeMergePolicy();
  mergePolicy.setNoCFSRatio(1.0);
  mergePolicy.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);
  IndexWriter iw=new IndexWriter(fsDir,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setMergePolicy(mergePolicy));
  for (int x=0; x < 100; x++) {
    Document doc=DocHelper.createDocument(x,"index",5);
    iw.addDocument(doc);
  }
  iw.commit();
  for (int x=100; x < 150; x++) {
    Document doc=DocHelper.createDocument(x,"index2",5);
    iw.addDocument(doc);
  }
  iw.commit();
  for (int x=150; x < 200; x++) {
    Document doc=DocHelper.createDocument(x,"index3",5);
    iw.addDocument(doc);
  }
  iw.commit();
  DirectoryReader iwReader=iw.getReader();
  assertEquals(3,iwReader.leaves().size());
  iwReader.close();
  iw.shutdown();
  IndexSplitter is=new IndexSplitter(dir);
  String splitSegName=is.infos.info(1).info.name;
  is.split(destDir,new String[]{splitSegName});
  Directory fsDirDest=newFSDirectory(destDir);
  DirectoryReader r=DirectoryReader.open(fsDirDest);
  assertEquals(50,r.maxDoc());
  r.close();
  fsDirDest.close();
  File destDir2=createTempDir(LuceneTestCase.getTestClass().getSimpleName());
  IndexSplitter.main(new String[]{dir.getAbsolutePath(),destDir2.getAbsolutePath(),splitSegName});
  assertEquals(5,destDir2.listFiles().length);
  Directory fsDirDest2=newFSDirectory(destDir2);
  r=DirectoryReader.open(fsDirDest2);
  assertEquals(50,r.maxDoc());
  r.close();
  fsDirDest2.close();
  IndexSplitter.main(new String[]{dir.getAbsolutePath(),"-d",splitSegName});
  r=DirectoryReader.open(fsDir);
  assertEquals(2,r.leaves().size());
  r.close();
  fsDir.close();
}
