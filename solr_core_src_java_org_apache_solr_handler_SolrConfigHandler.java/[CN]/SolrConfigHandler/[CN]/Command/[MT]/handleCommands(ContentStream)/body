{
  ConfigOverlay overlay=req.getCore().getSolrConfig().getOverlay();
  List<CommandOperation> ops=CommandOperation.parse(stream.getReader());
  for (  CommandOperation op : ops) {
    if (SET_PROPERTY.equals(op.name)) {
      overlay=applySetProp(op,overlay);
    }
 else     if (UNSET_PROPERTY.equals(op.name)) {
      overlay=applyUnset(op,overlay);
    }
 else     if (SET_USER_PROPERTY.equals(op.name)) {
      overlay=applySetUserProp(op,overlay);
    }
 else     if (UNSET_USER_PROPERTY.equals(op.name)) {
      overlay=applyUnsetUserProp(op,overlay);
    }
  }
  List errs=CommandOperation.captureErrors(ops);
  if (!errs.isEmpty()) {
    resp.add(CommandOperation.ERR_MSGS,errs);
    return;
  }
  SolrResourceLoader loader=req.getCore().getResourceLoader();
  if (loader instanceof ZkSolrResourceLoader) {
    ZkController.persistConfigResourceToZooKeeper(loader,overlay.getZnodeVersion(),ConfigOverlay.RESOURCE_NAME,overlay.toByteArray(),true);
    String collectionName=req.getCore().getCoreDescriptor().getCloudDescriptor().getCollectionName();
    Map map=ZkNodeProps.makeMap(CoreAdminParams.ACTION,CollectionParams.CollectionAction.RELOAD.toString(),CollectionParams.NAME,collectionName);
    SolrQueryRequest solrQueryRequest=new LocalSolrQueryRequest(req.getCore(),new MapSolrParams(map));
    SolrQueryResponse tmpResp=new SolrQueryResponse();
    try {
      req.getCore().getCoreDescriptor().getCoreContainer().getCollectionsHandler().handleRequestBody(solrQueryRequest,tmpResp);
    }
 catch (    Exception e) {
      String msg=MessageFormat.format("Unable to reload collection {0}",collectionName);
      log.error(msg);
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,msg);
    }
  }
 else {
    SolrResourceLoader.persistConfLocally(loader,ConfigOverlay.RESOURCE_NAME,overlay.toByteArray());
    req.getCore().getCoreDescriptor().getCoreContainer().reload(req.getCore().getName());
  }
}
