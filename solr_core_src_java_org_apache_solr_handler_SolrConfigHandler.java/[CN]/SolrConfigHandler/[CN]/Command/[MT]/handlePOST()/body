{
  List<CommandOperation> ops=CommandOperation.readCommands(req.getContentStreams(),resp);
  if (ops == null)   return;
  try {
    for (; ; ) {
      ArrayList<CommandOperation> opsCopy=new ArrayList<>(ops.size());
      for (      CommandOperation op : ops)       opsCopy.add(op.getCopy());
      try {
        if (parts.size() > 1 && RequestParams.NAME.equals(parts.get(1))) {
          RequestParams params=RequestParams.getFreshRequestParams(req.getCore().getResourceLoader(),req.getCore().getSolrConfig().getRequestParams());
          handleParams(opsCopy,params);
        }
 else {
          ConfigOverlay overlay=SolrConfig.getConfigOverlay(req.getCore().getResourceLoader());
          handleCommands(opsCopy,overlay);
        }
        break;
      }
 catch (      ZkController.ResourceModifiedInZkException e) {
        log.info("Race condition, the node is modified in ZK by someone else " + e.getMessage());
      }
    }
  }
 catch (  Exception e) {
    resp.setException(e);
    resp.add(CommandOperation.ERR_MSGS,singletonList(SchemaManager.getErrorStr(e)));
  }
}
