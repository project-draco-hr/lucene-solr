{
  List<NamedList> tokensNamedLists=new ArrayList<NamedList>();
  Collections.sort(tokens,new Comparator<Token>(){
    public int compare(    Token o1,    Token o2){
      return o1.endOffset() - o2.endOffset();
    }
  }
);
  int position=0;
  FieldType fieldType=context.getFieldType();
  for (  Token token : tokens) {
    NamedList<Object> tokenNamedList=new SimpleOrderedMap<Object>();
    String text=fieldType.indexedToReadable(token.term());
    tokenNamedList.add("text",text);
    if (!text.equals(token.term())) {
      tokenNamedList.add("raw_text",token.term());
    }
    tokenNamedList.add("type",token.type());
    tokenNamedList.add("start",token.startOffset());
    tokenNamedList.add("end",token.endOffset());
    position+=token.getPositionIncrement();
    tokenNamedList.add("position",position);
    if (context.getTermsToMatch().contains(token.term())) {
      tokenNamedList.add("match",true);
    }
    if (token.getPayload() != null) {
      tokenNamedList.add("payload",token.getPayload());
    }
    tokensNamedLists.add(tokenNamedList);
  }
  return tokensNamedLists;
}
