{
  List<Token> tokens=new ArrayList<Token>();
  CharTermAttribute termAtt=null;
  TermToBytesRefAttribute bytesAtt=null;
  if (tokenStream.hasAttribute(CharTermAttribute.class)) {
    termAtt=tokenStream.getAttribute(CharTermAttribute.class);
  }
 else   if (tokenStream.hasAttribute(TermToBytesRefAttribute.class)) {
    bytesAtt=tokenStream.getAttribute(TermToBytesRefAttribute.class);
  }
  final OffsetAttribute offsetAtt=tokenStream.addAttribute(OffsetAttribute.class);
  final TypeAttribute typeAtt=tokenStream.addAttribute(TypeAttribute.class);
  final PositionIncrementAttribute posIncAtt=tokenStream.addAttribute(PositionIncrementAttribute.class);
  final FlagsAttribute flagsAtt=tokenStream.addAttribute(FlagsAttribute.class);
  final PayloadAttribute payloadAtt=tokenStream.addAttribute(PayloadAttribute.class);
  final BytesRef bytes=new BytesRef();
  try {
    while (tokenStream.incrementToken()) {
      Token token=new Token();
      if (termAtt != null) {
        token.setEmpty().append(termAtt);
      }
      if (bytesAtt != null) {
        bytesAtt.toBytesRef(bytes);
        token.setEmpty().append(bytes.utf8ToString());
      }
      token.setOffset(offsetAtt.startOffset(),offsetAtt.endOffset());
      token.setType(typeAtt.type());
      token.setFlags(flagsAtt.getFlags());
      token.setPayload(payloadAtt.getPayload());
      token.setPositionIncrement(posIncAtt.getPositionIncrement());
      tokens.add((Token)token.clone());
    }
  }
 catch (  IOException ioe) {
    throw new RuntimeException("Error occured while iterating over tokenstream",ioe);
  }
  return tokens;
}
