{
  String fs=params.get("feature");
  String[] terms=params.get("terms").split(",");
  String ws=params.get("weights");
  String dfsStr=params.get("idfs");
  int iteration=params.getInt("iteration");
  String outcome=params.get("outcome");
  int positiveLabel=params.getInt("positiveLabel",1);
  double threshold=params.getDouble("threshold",0.5);
  double alpha=params.getDouble("alpha",0.01);
  double[] idfs=new double[terms.length];
  String[] idfsArr=dfsStr.split(",");
  for (int i=0; i < idfsArr.length; i++) {
    idfs[i]=Double.parseDouble(idfsArr[i]);
  }
  double[] weights=new double[terms.length + 1];
  if (ws != null) {
    String[] wa=ws.split(",");
    for (int i=0; i < wa.length; i++) {
      weights[i]=Double.parseDouble(wa[i]);
    }
  }
 else {
    for (int i=0; i < weights.length; i++) {
      weights[i]=1.0d;
    }
  }
  TrainingParams input=new TrainingParams(fs,terms,idfs,outcome,weights,iteration,alpha,positiveLabel,threshold);
  return new TextLogisticRegressionQuery(input);
}
