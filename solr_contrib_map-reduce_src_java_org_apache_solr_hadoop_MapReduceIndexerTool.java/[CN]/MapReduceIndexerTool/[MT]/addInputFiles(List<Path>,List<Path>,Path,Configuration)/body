{
  long numFiles=0;
  FileSystem fs=fullInputList.getFileSystem(conf);
  FSDataOutputStream out=fs.create(fullInputList);
  try {
    Writer writer=new BufferedWriter(new OutputStreamWriter(out,StandardCharsets.UTF_8));
    for (    Path inputFile : inputFiles) {
      FileSystem inputFileFs=inputFile.getFileSystem(conf);
      if (inputFileFs.exists(inputFile)) {
        PathFilter pathFilter=new PathFilter(){
          @Override public boolean accept(          Path path){
            return !(path.getName().startsWith(".") || path.getName().startsWith("_"));
          }
        }
;
        numFiles+=addInputFilesRecursively(inputFile,writer,inputFileFs,pathFilter);
      }
    }
    for (    Path inputList : inputLists) {
      InputStream in;
      if (inputList.toString().equals("-")) {
        in=System.in;
      }
 else       if (inputList.isAbsoluteAndSchemeAuthorityNull()) {
        in=new BufferedInputStream(new FileInputStream(inputList.toString()));
      }
 else {
        in=inputList.getFileSystem(conf).open(inputList);
      }
      try {
        BufferedReader reader=new BufferedReader(new InputStreamReader(in,StandardCharsets.UTF_8));
        String line;
        while ((line=reader.readLine()) != null) {
          writer.write(line + "\n");
          numFiles++;
        }
        reader.close();
      }
  finally {
        in.close();
      }
    }
    writer.close();
  }
  finally {
    out.close();
  }
  return numFiles;
}
