{
  String test="The quick|JJ red|JJ fox|NN jumped|VB over the lazy|JJ brown|JJ dogs|NN";
  DelimitedPayloadTokenFilter filter=new DelimitedPayloadTokenFilter(new MockTokenizer(new StringReader(test),MockTokenizer.WHITESPACE,false),DelimitedPayloadTokenFilter.DEFAULT_DELIMITER,new IdentityEncoder());
  assertTermEquals("The",filter,null);
  assertTermEquals("quick",filter,"JJ".getBytes("UTF-8"));
  assertTermEquals("red",filter,"JJ".getBytes("UTF-8"));
  assertTermEquals("fox",filter,"NN".getBytes("UTF-8"));
  assertTermEquals("jumped",filter,"VB".getBytes("UTF-8"));
  assertTermEquals("over",filter,null);
  assertTermEquals("the",filter,null);
  assertTermEquals("lazy",filter,"JJ".getBytes("UTF-8"));
  assertTermEquals("brown",filter,"JJ".getBytes("UTF-8"));
  assertTermEquals("dogs",filter,"NN".getBytes("UTF-8"));
  assertFalse(filter.incrementToken());
}
