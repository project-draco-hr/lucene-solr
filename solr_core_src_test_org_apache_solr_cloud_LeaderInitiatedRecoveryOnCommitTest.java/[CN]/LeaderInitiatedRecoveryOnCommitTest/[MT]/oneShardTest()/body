{
  String testCollectionName="c8n_1x3_commits";
  createCollection(testCollectionName,1,3,1);
  cloudClient.setDefaultCollection(testCollectionName);
  List<Replica> notLeaders=ensureAllReplicasAreActive(testCollectionName,"shard1",1,3,30);
  assertTrue("Expected 2 replicas for collection " + testCollectionName + " but found "+ notLeaders.size()+ "; clusterState: "+ printClusterStateInfo(),notLeaders.size() == 2);
  Replica leader=cloudClient.getZkStateReader().getLeaderRetry(testCollectionName,"shard1");
  SocketProxy leaderProxy=getProxyForReplica(leader);
  leaderProxy.close();
  Replica replica=notLeaders.get(0);
  HttpSolrClient client=new HttpSolrClient(ZkCoreNodeProps.getCoreUrl(replica.getStr("base_url"),replica.getStr("core")));
  client.commit();
  Thread.sleep(sleepMsBeforeHealPartition);
  cloudClient.getZkStateReader().updateClusterState(true);
  leader=cloudClient.getZkStateReader().getLeaderRetry(testCollectionName,"shard1");
  assertEquals("Leader was not active","active",leader.getStr("state"));
  leaderProxy.reopen();
  Thread.sleep(sleepMsBeforeHealPartition);
  try {
    CollectionAdminRequest.Delete req=new CollectionAdminRequest.Delete();
    req.setCollectionName(testCollectionName);
    req.process(cloudClient);
  }
 catch (  Exception e) {
    log.warn("Could not delete collection {} after test completed",testCollectionName);
  }
}
