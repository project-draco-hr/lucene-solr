{
  int count=0, len=lowerTerm.length();
  final String field;
  if (len < trieVariant.TRIE_CODED_LENGTH) {
    field=(this.field + trieVariant.LOWER_PRECISION_FIELD_NAME_SUFFIX).intern();
    lowerTerm=new StringBuffer(len + 1).append((char)(trieVariant.TRIE_CODED_PADDING_START + len)).append(lowerTerm).toString();
    upperTerm=new StringBuffer(len + 1).append((char)(trieVariant.TRIE_CODED_PADDING_START + len)).append(upperTerm).toString();
    len++;
  }
 else {
    field=this.field;
  }
  final TermEnum enumerator=reader.terms(new Term(field,lowerTerm));
  try {
    do {
      final Term term=enumerator.term();
      if (term != null && term.field() == field) {
        final String t=term.text();
        if (len != t.length() || t.compareTo(upperTerm) > 0)         break;
        count++;
        termDocs.seek(enumerator);
        while (termDocs.next())         bits.set(termDocs.doc());
      }
 else       break;
    }
 while (enumerator.next());
  }
  finally {
    enumerator.close();
  }
  return count;
}
