{
  boolean success=false;
  if (indexDivisor < 1 && indexDivisor != -1) {
    throw new IllegalArgumentException("indexDivisor must be -1 (don't load terms index) or greater than 0: got " + indexDivisor);
  }
  try {
    directory=dir;
    segment=seg;
    fieldInfos=fis;
    origEnum=new SegmentTermEnum(directory.openInput(IndexFileNames.segmentFileName(segment,IndexFileNames.TERMS_EXTENSION),readBufferSize),fieldInfos,false);
    size=origEnum.size;
    if (indexDivisor != -1) {
      totalIndexInterval=origEnum.indexInterval * indexDivisor;
      final SegmentTermEnum indexEnum=new SegmentTermEnum(directory.openInput(IndexFileNames.segmentFileName(segment,IndexFileNames.TERMS_INDEX_EXTENSION),readBufferSize),fieldInfos,true);
      try {
        int indexSize=1 + ((int)indexEnum.size - 1) / indexDivisor;
        indexTerms=new Term[indexSize];
        indexInfos=new TermInfo[indexSize];
        indexPointers=new long[indexSize];
        for (int i=0; indexEnum.next(); i++) {
          indexTerms[i]=indexEnum.term();
          indexInfos[i]=indexEnum.termInfo();
          indexPointers[i]=indexEnum.indexPointer;
          for (int j=1; j < indexDivisor; j++)           if (!indexEnum.next())           break;
        }
      }
  finally {
        indexEnum.close();
      }
    }
 else {
      totalIndexInterval=-1;
      indexTerms=null;
      indexInfos=null;
      indexPointers=null;
    }
    success=true;
  }
  finally {
    if (!success) {
      close();
    }
  }
}
