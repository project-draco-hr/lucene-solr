{
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"author"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMAuthor);
    assertEquals(1,this.impl.getAuthors().size());
    this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"author"));
    assertEquals(2,this.impl.getAuthors().size());
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"category"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMCategory);
    assertEquals(1,this.impl.getCategories().size());
    this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"category"));
    assertEquals(2,this.impl.getCategories().size());
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"contributor"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMContributor);
    assertEquals(1,this.impl.getContributor().size());
    this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"contributor"));
    assertEquals(2,this.impl.getContributor().size());
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"generator"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMGenerator);
    assertSame(parser,this.impl.getGenerator());
    try {
      this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"generator"));
      fail("one or zero");
    }
 catch (    GDataParseException e) {
    }
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"icon"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMIcon);
    assertSame(parser,this.impl.getIcon());
    try {
      this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"icon"));
      fail("one or zero");
    }
 catch (    GDataParseException e) {
    }
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"id"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMId);
    assertSame(parser,this.impl.getId());
    try {
      this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"id"));
      fail("exactly one time ");
    }
 catch (    GDataParseException e) {
    }
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"link"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMLink);
    assertEquals(1,this.impl.getLinks().size());
    this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"link"));
    assertEquals(2,this.impl.getLinks().size());
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"logo"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMLogo);
    assertSame(parser,this.impl.getLogo());
    try {
      this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"logo"));
      fail("zero or one");
    }
 catch (    GDataParseException e) {
    }
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"rights"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMRights);
    assertSame(parser,this.impl.getRights());
    try {
      this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"rights"));
      fail("zero or one");
    }
 catch (    GDataParseException e) {
    }
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"subtitle"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMSubtitle);
    assertSame(parser,this.impl.getSubtitle());
    try {
      this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"subtitle"));
      fail("zero or one");
    }
 catch (    GDataParseException e) {
    }
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"title"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMTitle);
    assertSame(parser,this.impl.getTitle());
    try {
      this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"title"));
      fail("exactly one time ");
    }
 catch (    GDataParseException e) {
    }
  }
{
    AtomParser parser=this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"updated"));
    assertNotNull(parser);
    assertTrue(parser instanceof GOMUpdated);
    assertSame(parser,this.impl.getUpdated());
    try {
      this.impl.getChildParser(new QName(GOMNamespace.ATOM_NS_URI,"updated"));
      fail("exactly one time ");
    }
 catch (    GDataParseException e) {
    }
  }
}
