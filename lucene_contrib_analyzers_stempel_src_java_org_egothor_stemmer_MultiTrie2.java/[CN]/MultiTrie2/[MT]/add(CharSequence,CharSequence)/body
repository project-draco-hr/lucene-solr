{
  if (cmd.length() == 0) {
    return;
  }
  CharSequence p[]=decompose(cmd);
  int levels=p.length;
  while (levels >= tries.size()) {
    tries.add(new Trie(forward));
  }
  CharSequence lastkey=key;
  for (int i=0; i < levels; i++) {
    if (key.length() > 0) {
      tries.get(i).add(key,p[i]);
      lastkey=key;
    }
 else {
      tries.get(i).add(lastkey,p[i]);
    }
    if (p[i].length() > 0 && p[i].charAt(0) == '-') {
      if (i > 0) {
        key=skip(key,lengthPP(p[i - 1]));
      }
      key=skip(key,lengthPP(p[i]));
    }
  }
  if (key.length() > 0) {
    tries.get(levels).add(key,EOM_NODE);
  }
 else {
    tries.get(levels).add(lastkey,EOM_NODE);
  }
}
