{
  List<TermVectorsMergeSub> subs=new ArrayList<>();
  for (int i=0; i < mergeState.termVectorsReaders.length; i++) {
    TermVectorsReader reader=mergeState.termVectorsReaders[i];
    if (reader != null) {
      reader.checkIntegrity();
    }
    subs.add(new TermVectorsMergeSub(mergeState.docMaps[i],reader,mergeState.maxDocs[i]));
  }
  final DocIDMerger<TermVectorsMergeSub> docIDMerger=new DocIDMerger<>(subs,mergeState.segmentInfo.getIndexSort() != null);
  int docCount=0;
  while (true) {
    TermVectorsMergeSub sub=docIDMerger.next();
    if (sub == null) {
      break;
    }
    Fields vectors;
    if (sub.reader == null) {
      vectors=null;
    }
 else {
      vectors=sub.reader.get(sub.docID);
    }
    addAllDocVectors(vectors,mergeState);
    docCount++;
  }
  finish(mergeState.mergeFieldInfos,docCount);
  return docCount;
}
