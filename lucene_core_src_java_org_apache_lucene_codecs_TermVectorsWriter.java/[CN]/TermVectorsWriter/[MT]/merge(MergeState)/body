{
  int docCount=0;
  int numReaders=mergeState.maxDocs.length;
  for (int i=0; i < numReaders; i++) {
    int maxDoc=mergeState.maxDocs[i];
    Bits liveDocs=mergeState.liveDocs[i];
    TermVectorsReader termVectorsReader=mergeState.termVectorsReaders[i];
    if (termVectorsReader != null) {
      termVectorsReader.checkIntegrity();
    }
    for (int docID=0; docID < maxDoc; docID++) {
      if (liveDocs != null && !liveDocs.get(docID)) {
        continue;
      }
      Fields vectors;
      if (termVectorsReader == null) {
        vectors=null;
      }
 else {
        vectors=termVectorsReader.get(docID);
      }
      addAllDocVectors(vectors,mergeState);
      docCount++;
      mergeState.checkAbort.work(300);
    }
  }
  finish(mergeState.mergeFieldInfos,docCount);
  return docCount;
}
