{
  final int shortWordLength=5;
{
    final BigEndianAscendingWordSerializer serializer=new BigEndianAscendingWordSerializer(shortWordLength,0,0);
    assert(Arrays.equals(serializer.getBytes(),new byte[0]));
  }
{
    final BigEndianAscendingWordSerializer serializer=new BigEndianAscendingWordSerializer(shortWordLength,3,0);
    serializer.writeWord(9);
    serializer.writeWord(31);
    serializer.writeWord(1);
    final byte[] bytes=serializer.getBytes();
    final byte[] expectedBytes=new byte[]{79,-62};
    assertTrue(Arrays.equals(bytes,expectedBytes));
  }
{
    final BigEndianAscendingWordSerializer serializer=new BigEndianAscendingWordSerializer(shortWordLength,8,0);
    for (int i=1; i < 9; i++) {
      serializer.writeWord(i);
    }
    final byte[] bytes=serializer.getBytes();
    final byte[] expectedBytes=new byte[]{8,-122,66,-104,-24};
    assertTrue(Arrays.equals(bytes,expectedBytes));
  }
{
    final BigEndianAscendingWordSerializer serializer=new BigEndianAscendingWordSerializer(shortWordLength,1,1);
    serializer.writeWord(1);
    final byte[] bytes=serializer.getBytes();
    final byte[] expectedBytes=new byte[]{0,8};
    assertTrue(Arrays.equals(bytes,expectedBytes));
  }
}
