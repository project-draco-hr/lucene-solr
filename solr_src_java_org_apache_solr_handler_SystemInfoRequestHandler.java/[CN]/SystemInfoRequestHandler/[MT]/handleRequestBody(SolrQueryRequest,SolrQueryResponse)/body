{
  SolrCore core=req.getCore();
  rsp.add("core",core.getName());
  rsp.add("schema",req.getSchema().getSchemaName());
  rsp.add("start",new Date(core.getStartTime()));
  rsp.add("now",new Date().toString());
  rsp.add("host",hostname);
  rsp.add("cwd",System.getProperty("user.dir"));
  rsp.add("instanceDir",core.getSolrConfig().getInstanceDir());
  Package solrP=SolrCore.class.getPackage();
  Package luceneP=LucenePackage.class.getPackage();
  NamedList version=new NamedList();
  version.add("solrSpecVersion",solrP.getSpecificationVersion());
  version.add("solrImplVersion",solrP.getImplementationVersion());
  version.add("luceneSpecVersion",luceneP.getSpecificationVersion());
  version.add("luceneImplVersion",luceneP.getImplementationVersion());
  rsp.add("version",version);
  NamedList cats=new NamedList();
  rsp.add("objects",cats);
  Set<String> requestedCats=arrayToSet(req.getParams().getParams("cat"));
  if (requestedCats.isEmpty()) {
    for (    SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) {
      requestedCats.add(cat.name());
    }
  }
  for (  String catName : requestedCats) {
    cats.add(catName,new SimpleOrderedMap());
  }
  Set<String> requestedKeys=arrayToSet(req.getParams().getParams("key"));
  Map<String,SolrInfoMBean> reg=core.getInfoRegistry();
  for (  Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {
    String key=entry.getKey();
    SolrInfoMBean m=entry.getValue();
    if (!(requestedKeys.isEmpty() || requestedKeys.contains(key)))     continue;
    NamedList catInfo=(NamedList)cats.get(m.getCategory().name());
    if (null == catInfo)     continue;
    NamedList mBeanInfo=new SimpleOrderedMap();
    mBeanInfo.add("class",m.getName());
    mBeanInfo.add("version",m.getVersion());
    mBeanInfo.add("description",m.getDescription());
    mBeanInfo.add("srcId",m.getSourceId());
    mBeanInfo.add("src",m.getSource());
    mBeanInfo.add("docs",arrayToSet(m.getDocs()));
    if (req.getParams().getFieldBool(key,"stats",false))     mBeanInfo.add("stats",m.getStatistics());
    catInfo.add(key,mBeanInfo);
  }
  rsp.setHttpCaching(false);
}
