{
  String test="The quick red fox jumped over the lazy brown dogs";
  NumericPayloadTokenFilter nptf=new NumericPayloadTokenFilter(new WordTokenFilter(new WhitespaceTokenizer(new StringReader(test))),3,"D");
  boolean seenDogs=false;
  final Token reusableToken=new Token();
  for (Token nextToken=nptf.next(reusableToken); nextToken != null; nextToken=nptf.next(reusableToken)) {
    if (nextToken.term().equals("dogs")) {
      seenDogs=true;
      assertTrue(nextToken.type() + " is not equal to " + "D",nextToken.type().equals("D") == true);
      assertTrue("nextToken.getPayload() is null and it shouldn't be",nextToken.getPayload() != null);
      byte[] bytes=nextToken.getPayload().getData();
      assertTrue(bytes.length + " does not equal: " + nextToken.getPayload().length(),bytes.length == nextToken.getPayload().length());
      assertTrue(nextToken.getPayload().getOffset() + " does not equal: " + 0,nextToken.getPayload().getOffset() == 0);
      float pay=PayloadHelper.decodeFloat(bytes);
      assertTrue(pay + " does not equal: " + 3,pay == 3);
    }
 else {
      assertTrue(nextToken.type() + " is not null and it should be",nextToken.type().equals("word"));
    }
  }
  assertTrue(seenDogs + " does not equal: " + true,seenDogs == true);
}
