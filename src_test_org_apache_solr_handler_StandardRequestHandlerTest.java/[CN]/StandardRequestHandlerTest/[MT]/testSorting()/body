{
  SolrCore core=h.getCore();
  assertU(adoc("id","10","title","test","val_s","aaa"));
  assertU(adoc("id","11","title","test","val_s","bbb"));
  assertU(adoc("id","12","title","test","val_s","ccc"));
  assertU(commit());
  Map<String,String> args=new HashMap<String,String>();
  args.put(CommonParams.Q,"title:test");
  args.put("indent","true");
  SolrQueryRequest req=new LocalSolrQueryRequest(core,new MapSolrParams(args));
  assertQ("Make sure they got in",req,"//*[@numFound='3']");
  args.put(CommonParams.SORT,"val_s asc");
  assertQ("with sort param [asc]",req,"//*[@numFound='3']","//result/doc[1]/int[@name='id'][.='10']","//result/doc[2]/int[@name='id'][.='11']","//result/doc[3]/int[@name='id'][.='12']");
  args.put(CommonParams.SORT,"val_s desc");
  assertQ("with sort param [desc]",req,"//*[@numFound='3']","//result/doc[1]/int[@name='id'][.='12']","//result/doc[2]/int[@name='id'][.='11']","//result/doc[3]/int[@name='id'][.='10']");
  args.remove(CommonParams.SORT);
  args.put(CommonParams.Q,"title:test; val_s desc");
  assertQ("with sort param [desc]",req,"//*[@numFound='3']","//result/doc[1]/int[@name='id'][.='12']","//result/doc[2]/int[@name='id'][.='11']","//result/doc[3]/int[@name='id'][.='10']");
  args.put(CommonParams.Q,"title:test; val_s asc");
  assertQ("with sort param [desc]",req,"//*[@numFound='3']","//result/doc[1]/int[@name='id'][.='10']","//result/doc[2]/int[@name='id'][.='11']","//result/doc[3]/int[@name='id'][.='12']");
}
