{
  this.parent=parent;
  this.entity=entity;
  if (entity.proc == null) {
    entityProcessor=new SqlEntityProcessor();
  }
 else {
    try {
      entityProcessor=(EntityProcessor)loadClass(entity.proc,dataImporter.getCore()).newInstance();
    }
 catch (    Exception e) {
      wrapAndThrow(SEVERE,e,"Unable to load EntityProcessor implementation for entity:" + entity.name);
    }
  }
  int threads=1;
  if (entity.allAttributes.get("threads") != null) {
    threads=Integer.parseInt(entity.allAttributes.get("threads"));
  }
  for (int i=0; i < threads; i++) {
    entityProcessorWrapper.add(new ThreadedEntityProcessorWrapper(entityProcessor,DocBuilder.this,this,getVariableResolver()));
  }
  context=new ThreadedContext(this,DocBuilder.this,getVariableResolver());
}
