{
  final SpatialOperation op=args.getOperation();
  if (op == SpatialOperation.IsDisjointTo)   return new DisjointSpatialFilter(this,args,getFieldName());
  Shape shape=args.getShape();
  int detailLevel=grid.getLevelForDistance(args.resolveDistErr(ctx,distErrPct));
  if (pointsOnly || op == SpatialOperation.Intersects) {
    return new IntersectsPrefixTreeFilter(shape,getFieldName(),grid,detailLevel,prefixGridScanLevel,!pointsOnly);
  }
 else   if (op == SpatialOperation.IsWithin) {
    return new WithinPrefixTreeFilter(shape,getFieldName(),grid,detailLevel,prefixGridScanLevel,-1);
  }
 else   if (op == SpatialOperation.Contains) {
    return new ContainsPrefixTreeFilter(shape,getFieldName(),grid,detailLevel,multiOverlappingIndexedShapes);
  }
  throw new UnsupportedSpatialOperation(op);
}
