{
  MockDirectoryWrapper dir=newMockDirectory();
  if (dir instanceof MockDirectoryWrapper) {
    dir.setEnableVirusScanner(false);
  }
  IndexWriterConfig iwc=new IndexWriterConfig(new MockAnalyzer(random()));
  iwc.setCodec(Codec.forName("Lucene410"));
  IndexWriter w=new IndexWriter(dir,iwc);
  Document doc=new Document();
  doc.add(newStringField("id","id",Field.Store.NO));
  w.addDocument(doc);
  doc=new Document();
  doc.add(newStringField("id","id2",Field.Store.NO));
  w.addDocument(doc);
  w.commit();
  DirectoryReader r=DirectoryReader.open(dir);
  w.deleteDocuments(new Term("id","id"));
  w.commit();
  dir.failOn(new MockDirectoryWrapper.Failure(){
    boolean failed;
    @Override public void eval(    MockDirectoryWrapper dir) throws IOException {
      if (failed) {
        return;
      }
      StackTraceElement[] trace=new Exception().getStackTrace();
      for (int i=0; i < trace.length; i++) {
        if ("readLiveDocs".equals(trace[i].getMethodName())) {
          if (VERBOSE) {
            System.out.println("TEST: now fail; exc:");
            new Throwable().printStackTrace(System.out);
          }
          failed=true;
          throw new FakeIOException();
        }
      }
    }
  }
);
  try {
    IndexReader r2=DirectoryReader.openIfChanged(r);
    fail("didn't hit exception");
  }
 catch (  FakeIOException fio) {
  }
  IndexSearcher s=newSearcher(r);
  assertEquals(1,s.search(new TermQuery(new Term("id","id")),1).totalHits);
  r.close();
  w.close();
  dir.close();
}
