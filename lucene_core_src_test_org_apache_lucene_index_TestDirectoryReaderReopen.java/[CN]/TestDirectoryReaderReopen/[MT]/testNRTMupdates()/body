{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=new IndexWriterConfig(new MockAnalyzer(random()));
  SnapshotDeletionPolicy snapshotter=new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());
  iwc.setIndexDeletionPolicy(snapshotter);
  IndexWriter writer=new IndexWriter(dir,iwc);
  writer.commit();
  Document doc=new Document();
  doc.add(new StringField("key","value1",Field.Store.YES));
  doc.add(new NumericDocValuesField("dv",1));
  writer.addDocument(doc);
  writer.commit();
  IndexCommit ic1=snapshotter.snapshot();
  writer.updateNumericDocValue(new Term("key","value1"),"dv",2);
  writer.commit();
  IndexCommit ic2=snapshotter.snapshot();
  DirectoryReader latest=DirectoryReader.open(ic2);
  assertEquals(1,latest.leaves().size());
  DirectoryReader oldest=DirectoryReader.openIfChanged(latest,ic1);
  assertEquals(1,oldest.leaves().size());
  assertSame(latest.leaves().get(0).reader().getCoreCacheKey(),oldest.leaves().get(0).reader().getCoreCacheKey());
  NumericDocValues values=getOnlyLeafReader(oldest).getNumericDocValues("dv");
  assertEquals(0,values.nextDoc());
  assertEquals(1,values.longValue());
  values=getOnlyLeafReader(latest).getNumericDocValues("dv");
  assertEquals(0,values.nextDoc());
  assertEquals(2,values.longValue());
  latest.close();
  oldest.close();
  snapshotter.release(ic1);
  snapshotter.release(ic2);
  writer.close();
  dir.close();
}
