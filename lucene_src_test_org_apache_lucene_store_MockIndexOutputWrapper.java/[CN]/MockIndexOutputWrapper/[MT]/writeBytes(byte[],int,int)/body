{
  long freeSpace=dir.maxSize == 0 ? 0 : dir.maxSize - dir.sizeInBytes();
  long realUsage=0;
  if (dir.crashed)   throw new IOException("MockRAMDirectory was crashed; cannot write to " + name);
  if (dir.maxSize != 0 && freeSpace <= len) {
    realUsage=dir.getRecomputedActualSizeInBytes();
    freeSpace=dir.maxSize - realUsage;
  }
  if (dir.maxSize != 0 && freeSpace <= len) {
    if (freeSpace > 0) {
      realUsage+=freeSpace;
      delegate.writeBytes(b,offset,(int)freeSpace);
    }
    if (realUsage > dir.maxUsedSize) {
      dir.maxUsedSize=realUsage;
    }
    String message="fake disk full at " + dir.getRecomputedActualSizeInBytes() + " bytes when writing "+ name+ " (file length="+ delegate.length();
    if (freeSpace > 0) {
      message+="; wrote " + freeSpace + " of "+ len+ " bytes";
    }
    message+=")";
    if (LuceneTestCase.VERBOSE) {
      System.out.println(Thread.currentThread().getName() + ": MDW: now throw fake disk full");
      new Throwable().printStackTrace(System.out);
    }
    throw new IOException(message);
  }
 else {
    if (dir.randomState.nextBoolean()) {
      final int half=len / 2;
      delegate.writeBytes(b,offset,half);
      Thread.yield();
      delegate.writeBytes(b,offset + half,len - half);
    }
 else {
      delegate.writeBytes(b,offset,len);
    }
  }
  dir.maybeThrowDeterministicException();
  if (first) {
    first=false;
    dir.maybeThrowIOException();
  }
}
