{
  boolean ordered=true;
  int slop=1;
  SpanNearQuery snq=new SpanNearQuery(new SpanQuery[]{makeSpanTermQuery("t1"),makeSpanTermQuery("t2"),makeSpanTermQuery("t3")},slop,ordered);
  Spans spans=snq.getSpans(SlowMultiReaderWrapper.wrap(searcher.getIndexReader()));
  assertTrue("first range",spans.next());
  assertEquals("first doc",11,spans.doc());
  assertEquals("first start",0,spans.start());
  assertEquals("first end",4,spans.end());
  assertTrue("second range",spans.next());
  assertEquals("second doc",11,spans.doc());
  assertEquals("second start",2,spans.start());
  assertEquals("second end",6,spans.end());
  assertFalse("third range",spans.next());
}
