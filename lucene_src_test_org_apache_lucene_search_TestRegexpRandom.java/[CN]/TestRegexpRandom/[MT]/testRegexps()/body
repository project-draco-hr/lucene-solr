{
  int num=(TEST_NIGHTLY ? 100 : 1) * RANDOM_MULTIPLIER;
  for (int i=0; i < num; i++) {
    assertPatternHits("NNN",1);
    assertPatternHits(".NN",10);
    assertPatternHits("N.N",10);
    assertPatternHits("NN.",10);
  }
  num=(TEST_NIGHTLY ? 10 : 1) * RANDOM_MULTIPLIER;
  for (int i=0; i < num; i++) {
    assertPatternHits(".{1,2}N",100);
    assertPatternHits("N.{1,2}",100);
    assertPatternHits(".{1,3}",1000);
    assertPatternHits("NN[3-7]",5);
    assertPatternHits("N[2-6][3-7]",25);
    assertPatternHits("[1-5][2-6][3-7]",125);
    assertPatternHits("[0-4][3-7][4-8]",125);
    assertPatternHits("[2-6][0-4]N",25);
    assertPatternHits("[2-6]NN",5);
    assertPatternHits("NN.*",10);
    assertPatternHits("N.*",100);
    assertPatternHits(".*",1000);
    assertPatternHits(".*NN",10);
    assertPatternHits(".*N",100);
    assertPatternHits("N.*N",10);
    assertPatternHits(".N.*",100);
    assertPatternHits("N..*",100);
    assertPatternHits(".*N.",100);
    assertPatternHits(".*..",1000);
    assertPatternHits(".*.N",100);
  }
}
