{
  Random random=random();
  int numDimensions=atLeast(random,2);
  String[] dimensions=new String[numDimensions];
  for (int i=0; i < numDimensions; i++) {
    dimensions[i]="dim" + i;
  }
  HashMap<CategoryPath,CategoryListParams> clps=new HashMap<CategoryPath,CategoryListParams>();
  for (  String dim : dimensions) {
    CategoryPath cp=new CategoryPath(dim);
    CategoryListParams clp=new CategoryListParams("$" + dim);
    clps.put(cp,clp);
  }
  PerDimensionIndexingParams indexingParams=new PerDimensionIndexingParams(clps);
  Directory indexDir=newDirectory();
  Directory taxoDir=newDirectory();
  IndexWriter indexWriter=new IndexWriter(indexDir,newIndexWriterConfig(TEST_VERSION_CURRENT,null).setMaxBufferedDocs(2));
  TaxonomyWriter taxoWriter=new DirectoryTaxonomyWriter(taxoDir);
  FacetFields facetFields=new FacetFields(taxoWriter,indexingParams);
  int ndocs=atLeast(random,10);
  for (int i=0; i < ndocs; i++) {
    Document doc=new Document();
    int numCategories=random.nextInt(numDimensions) + 1;
    ArrayList<CategoryPath> categories=new ArrayList<CategoryPath>();
    for (int j=0; j < numCategories; j++) {
      String dimension=dimensions[random.nextInt(dimensions.length)];
      categories.add(new CategoryPath(dimension,Integer.toString(i)));
    }
    facetFields.addFields(doc,categories);
    indexWriter.addDocument(doc);
  }
  IOUtils.close(indexWriter,taxoWriter);
  DirectoryReader indexReader=DirectoryReader.open(indexDir);
  TaxonomyReader taxoReader=new DirectoryTaxonomyReader(taxoDir);
  CategoryListIterator[] iterators=new CategoryListIterator[numDimensions];
  for (int i=0; i < iterators.length; i++) {
    CategoryListParams clp=indexingParams.getCategoryListParams(new CategoryPath(dimensions[i]));
    IntDecoder decoder=clp.createEncoder().createMatchingDecoder();
    iterators[i]=new DocValuesCategoryListIterator(clp.field,decoder);
  }
  MultiCategoryListIterator cli=new MultiCategoryListIterator(iterators);
  for (  AtomicReaderContext context : indexReader.leaves()) {
    assertTrue("failed to init multi-iterator",cli.setNextReader(context));
    IntsRef ordinals=new IntsRef();
    final int maxDoc=context.reader().maxDoc();
    for (int i=0; i < maxDoc; i++) {
      cli.getOrdinals(i,ordinals);
      assertTrue("document " + i + " does not have categories",ordinals.length > 0);
      for (int j=0; j < ordinals.length; j++) {
        CategoryPath cp=taxoReader.getPath(ordinals.ints[j]);
        assertNotNull("ordinal " + ordinals.ints[j] + " not found in taxonomy",cp);
        if (cp.length == 2) {
          int globalDoc=i + context.docBase;
          assertEquals("invalid category for document " + globalDoc,globalDoc,Integer.parseInt(cp.components[1]));
        }
      }
    }
  }
  IOUtils.close(indexReader,taxoReader);
  IOUtils.close(indexDir,taxoDir);
}
