{
  final int iters=atLeast(8);
  for (int i=0; i < iters; ++i) {
    createRandomIndex(true);
    final IndexSearcher searcher=newSearcherForTestTerminatedEarly(reader);
    final Query query=new MatchAllDocsQuery();
    final TestTerminatedEarlySimpleCollector collector1=new TestTerminatedEarlySimpleCollector();
    searcher.search(query,collector1);
    final TestTerminatedEarlySimpleCollector collector2=new TestTerminatedEarlySimpleCollector();
    final EarlyTerminatingSortingCollector etsCollector=new EarlyTerminatingSortingCollector(collector2,sort,1,mergePolicy.getSort());
    searcher.search(query,etsCollector);
    assertTrue("collector1=" + collector1.collectedSomething() + " vs. collector2="+ collector2.collectedSomething(),collector1.collectedSomething() == collector2.collectedSomething());
    if (collector1.collectedSomething()) {
      assertTrue("should have terminated early (searcher.reader=" + searcher.reader + ")",etsCollector.terminatedEarly());
    }
    closeIndex();
  }
}
