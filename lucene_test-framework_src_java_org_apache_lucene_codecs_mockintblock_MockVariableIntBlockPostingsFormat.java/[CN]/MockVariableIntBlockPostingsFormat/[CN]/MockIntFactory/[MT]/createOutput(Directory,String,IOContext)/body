{
  final IndexOutput out=dir.createOutput(fileName,context);
  boolean success=false;
  try {
    out.writeInt(baseBlockSize);
    VariableIntBlockIndexOutput ret=new VariableIntBlockIndexOutput(out,2 * baseBlockSize){
      int pendingCount;
      final int[] buffer=new int[2 + 2 * baseBlockSize];
      @Override protected int add(      int value) throws IOException {
        buffer[pendingCount++]=value;
        final int flushAt=buffer[0] <= 3 ? baseBlockSize : 2 * baseBlockSize;
        if (pendingCount == flushAt + 1) {
          for (int i=0; i < flushAt; i++) {
            out.writeVInt(buffer[i]);
          }
          buffer[0]=buffer[flushAt];
          pendingCount=1;
          return flushAt;
        }
 else {
          return 0;
        }
      }
    }
;
    success=true;
    return ret;
  }
  finally {
    if (!success) {
      IOUtils.closeWhileHandlingException(out);
    }
  }
}
