{
  currentElementText="";
  if (inEnvelope) {
    if (inRequest) {
      if (localName.equals(STATISTIC)) {
        inStatistic=true;
      }
 else       if (inFieldFacet) {
        if (localName.equals(SORT_SPECIFICATION)) {
          inSortSpecification=true;
          sortSpecification=new FacetSortSpecification();
        }
      }
 else       if (localName.equals(FIELD_FACET)) {
        String att=atts.getValue(uri,LIMIT);
        if (att != null) {
          limit=Integer.parseInt(att);
        }
 else {
          limit=DEFAULT_FACET_LIMIT;
        }
        att=atts.getValue(uri,MIN_COUNT);
        if (att != null) {
          minCount=Integer.parseInt(att);
        }
 else {
          minCount=DEFAULT_FACET_MINCOUNT;
        }
        att=atts.getValue(uri,SHOW_MISSING);
        if (att != null) {
          showMissing=Boolean.parseBoolean(att);
        }
 else {
          showMissing=DEFAULT_FACET_FIELD_SHOW_MISSING;
        }
        inFieldFacet=true;
      }
 else       if (localName.equals(RANGE_FACET)) {
        String att=atts.getValue(uri,HARD_END);
        if (att != null) {
          hardend=Boolean.parseBoolean(att);
        }
 else {
          hardend=false;
        }
        gaps=new ArrayList<String>();
        includeBoundaries=EnumSet.noneOf(FacetRangeInclude.class);
        otherRanges=EnumSet.noneOf(FacetRangeOther.class);
        inRangeFacet=true;
      }
 else       if (localName.equals(QUERY_FACET)) {
        queries=new ArrayList<String>();
        inQueryFacet=true;
      }
    }
 else     if (localName.equals(ANALYTICS_REQUEST)) {
      fieldFacetList=new ArrayList<FieldFacetRequest>();
      rangeFacetList=new ArrayList<RangeFacetRequest>();
      queryFacetList=new ArrayList<QueryFacetRequest>();
      expressionList=new ArrayList<ExpressionRequest>();
      inRequest=true;
    }
  }
 else   if (localName.equals(ANALYTICS_REQUEST_ENVELOPE)) {
    requests=new ArrayList<AnalyticsRequest>();
    inEnvelope=true;
  }
}
