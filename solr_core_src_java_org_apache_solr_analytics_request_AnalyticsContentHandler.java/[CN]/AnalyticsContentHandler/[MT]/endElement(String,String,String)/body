{
  if (inEnvelope) {
    if (inRequest) {
      if (inStatistic) {
        if (localName.equals(EXPRESSION)) {
          expression=new ExpressionRequest(currentElementText,currentElementText);
        }
 else         if (localName.equals(NAME)) {
          expression.setName(currentElementText);
        }
 else         if (localName.equals(STATISTIC)) {
          expressionList.add(expression);
          inStatistic=false;
        }
      }
 else       if (inFieldFacet) {
        if (inSortSpecification) {
          if (localName.equals(STAT_NAME)) {
            sortSpecification.setStatistic(currentElementText);
          }
 else           if (localName.equals(DIRECTION)) {
            sortSpecification.setDirection(FacetSortDirection.fromExternal(currentElementText));
          }
 else           if (localName.equals(SORT_SPECIFICATION)) {
            fieldFacet.setSort(sortSpecification);
            inSortSpecification=false;
          }
        }
 else         if (localName.equals(FIELD)) {
          fieldFacet=new FieldFacetRequest(schema.getField(currentElementText));
        }
 else         if (localName.equals(FIELD_FACET)) {
          fieldFacet.setLimit(limit);
          fieldFacet.showMissing(showMissing);
          fieldFacetList.add(fieldFacet);
          inFieldFacet=false;
        }
      }
 else       if (inRangeFacet) {
        if (localName.equals(FIELD)) {
          rangeFacet=new RangeFacetRequest(schema.getField(currentElementText),"","",new String[1]);
        }
 else         if (localName.equals(START)) {
          rangeFacet.setStart(currentElementText);
        }
 else         if (localName.equals(END)) {
          rangeFacet.setEnd(currentElementText);
        }
 else         if (localName.equals(GAP)) {
          gaps.add(currentElementText);
        }
 else         if (localName.equals(INCLUDE_BOUNDARY)) {
          includeBoundaries.add(FacetRangeInclude.get(currentElementText));
        }
 else         if (localName.equals(OTHER_RANGE)) {
          otherRanges.add(FacetRangeOther.get(currentElementText));
        }
 else         if (localName.equals(RANGE_FACET)) {
          rangeFacet.setHardEnd(hardend);
          rangeFacet.setGaps(gaps.toArray(new String[1]));
          rangeFacet.setInclude(includeBoundaries);
          rangeFacet.setOthers(otherRanges);
          inRangeFacet=false;
          rangeFacetList.add(rangeFacet);
        }
      }
 else       if (inQueryFacet) {
        if (localName.equals(NAME)) {
          queryName=currentElementText;
        }
 else         if (localName.equals(QUERY)) {
          queries.add(currentElementText);
        }
 else         if (localName.equals(QUERY_FACET)) {
          QueryFacetRequest temp=new QueryFacetRequest(queryName);
          temp.setQueries(queries);
          queryFacetList.add(temp);
          inQueryFacet=false;
        }
      }
 else       if (localName.equals(NAME)) {
        analyticsRequest=new AnalyticsRequest(currentElementText);
      }
 else       if (localName.equals(ANALYTICS_REQUEST)) {
        analyticsRequest.setExpressions(expressionList);
        analyticsRequest.setFieldFacets(fieldFacetList);
        analyticsRequest.setRangeFacets(rangeFacetList);
        analyticsRequest.setQueryFacets(queryFacetList);
        requests.add(analyticsRequest);
        inRequest=false;
      }
    }
 else     if (localName.equals(ANALYTICS_REQUEST_ENVELOPE)) {
      inEnvelope=false;
    }
  }
}
