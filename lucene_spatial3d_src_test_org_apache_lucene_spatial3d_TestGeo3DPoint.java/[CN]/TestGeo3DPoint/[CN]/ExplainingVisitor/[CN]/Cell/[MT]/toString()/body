{
  double xMin=Geo3DUtil.decodeValueFloor(NumericUtils.sortableBytesToInt(minPackedValue,0));
  double xMax=Geo3DUtil.decodeValueCeil(NumericUtils.sortableBytesToInt(maxPackedValue,0));
  double yMin=Geo3DUtil.decodeValueFloor(NumericUtils.sortableBytesToInt(minPackedValue,1 * Integer.BYTES));
  double yMax=Geo3DUtil.decodeValueCeil(NumericUtils.sortableBytesToInt(maxPackedValue,1 * Integer.BYTES));
  double zMin=Geo3DUtil.decodeValueFloor(NumericUtils.sortableBytesToInt(minPackedValue,2 * Integer.BYTES));
  double zMax=Geo3DUtil.decodeValueCeil(NumericUtils.sortableBytesToInt(maxPackedValue,2 * Integer.BYTES));
  final XYZSolid xyzSolid=XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84,xMin,xMax,yMin,yMax,zMin,zMax);
  final int relationship=xyzSolid.getRelationship(shape);
  final boolean pointWithinShape=shape.isWithin(targetDocPoint);
  final boolean pointWithinCell=xyzSolid.isWithin(targetDocPoint);
  final boolean scaledWithinShape=shape.isWithin(scaledDocPoint);
  final boolean scaledWithinCell=xyzSolid.isWithin(scaledDocPoint);
  final String relationshipString;
switch (relationship) {
case GeoArea.CONTAINS:
    relationshipString="CONTAINS";
  break;
case GeoArea.WITHIN:
relationshipString="WITHIN";
break;
case GeoArea.OVERLAPS:
relationshipString="OVERLAPS";
break;
case GeoArea.DISJOINT:
relationshipString="DISJOINT";
break;
default :
relationshipString="UNKNOWN";
break;
}
return "Cell(x=" + xMin + " TO "+ xMax+ " y="+ yMin+ " TO "+ yMax+ " z="+ zMin+ " TO "+ zMax+ "); Shape relationship = "+ relationshipString+ "; Point within cell = "+ pointWithinCell+ "; Point within shape = "+ pointWithinShape+ "; Scaled point within cell = "+ scaledWithinCell+ "; Scaled point within shape = "+ scaledWithinShape;
}
