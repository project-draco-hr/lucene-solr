{
  final double ENCODING_TOLERANCE=Geo3DUtil.DECODE;
  int iters=atLeast(10000);
  for (int iter=0; iter < iters; iter++) {
    GeoPoint point=new GeoPoint(PlanetModel.WGS84,toRadians(GeoTestUtil.nextLatitude()),toRadians(GeoTestUtil.nextLongitude()));
    double xEnc=Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.x));
    assertEquals("x=" + point.x + " xEnc="+ xEnc+ " diff="+ (point.x - xEnc),point.x,xEnc,ENCODING_TOLERANCE);
    double yEnc=Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.y));
    assertEquals("y=" + point.y + " yEnc="+ yEnc+ " diff="+ (point.y - yEnc),point.y,yEnc,ENCODING_TOLERANCE);
    double zEnc=Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.z));
    assertEquals("z=" + point.z + " zEnc="+ zEnc+ " diff="+ (point.z - zEnc),point.z,zEnc,ENCODING_TOLERANCE);
  }
  double planetMax=PlanetModel.WGS84.getMaximumMagnitude();
  for (  double value : new double[]{0.0,-planetMax,planetMax}) {
    assertEquals(value,Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(value)),ENCODING_TOLERANCE);
  }
}
