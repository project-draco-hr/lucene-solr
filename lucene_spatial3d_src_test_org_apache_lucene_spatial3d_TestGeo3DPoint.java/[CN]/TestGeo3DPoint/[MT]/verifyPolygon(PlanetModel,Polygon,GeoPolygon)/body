{
  final double[] lats=polygon.getPolyLats();
  final double[] lons=polygon.getPolyLons();
  final List<GeoPoint> polyPoints=new ArrayList<>(lats.length - 1);
  for (int i=0; i < lats.length - 1; i++) {
    final GeoPoint newPoint=new GeoPoint(pm,toRadians(lats[i]),toRadians(lons[i]));
    if (!outsidePolygon.isWithin(newPoint)) {
      return false;
    }
    polyPoints.add(newPoint);
  }
  for (int planeIndex=0; planeIndex < polyPoints.size(); planeIndex++) {
    final GeoPoint startPoint=polyPoints.get(planeIndex);
    final GeoPoint endPoint=polyPoints.get(legalIndex(planeIndex + 1,polyPoints.size()));
    final GeoPoint beforeStartPoint=polyPoints.get(legalIndex(planeIndex - 1,polyPoints.size()));
    final GeoPoint afterEndPoint=polyPoints.get(legalIndex(planeIndex + 2,polyPoints.size()));
    final SidedPlane beforePlane=new SidedPlane(endPoint,beforeStartPoint,startPoint);
    final SidedPlane afterPlane=new SidedPlane(startPoint,endPoint,afterEndPoint);
    final Plane plane=new Plane(startPoint,endPoint);
    if (outsidePolygon.intersects(plane,null,beforePlane,afterPlane)) {
      return false;
    }
  }
  return true;
}
