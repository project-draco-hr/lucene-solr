{
  SolrCore core=h.getCore();
  String fieldName="cat_intDocValues";
  SchemaField catDocValues=core.getLatestSchema().getField(fieldName);
  assertTrue("schema no longer satisfies test requirements: cat_docValues no longer multivalued",catDocValues.multiValued());
  assertTrue("schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued",!catDocValues.getType().isMultiValued());
  assertTrue("schema no longer satisfies test requirements: cat_docValues no longer has docValues",catDocValues.hasDocValues());
  List<FldType> types=new ArrayList<>();
  types.add(new FldType("id",ONE_ONE,new SVal('A','Z',4,4)));
  types.add(new FldType(fieldName,ONE_ONE,new IRange(0,0)));
  Doc d1=createDocValuesDocument(types,fieldName,"1",-1,3,5);
  updateJ(toJSON(d1),null);
  Doc d2=createDocValuesDocument(types,fieldName,"2",3,-2,6);
  updateJ(toJSON(d2),null);
  Doc d3=createDocValuesDocument(types,fieldName,"3",16,-3,11);
  updateJ(toJSON(d3),null);
  assertU(commit());
  Map<String,String> args=new HashMap<>();
  args.put(CommonParams.Q,"*:*");
  args.put(StatsParams.STATS,"true");
  args.put(StatsParams.STATS_FIELD,fieldName);
  args.put(StatsParams.STATS_FACET,fieldName);
  args.put("indent","true");
  args.put(StatsParams.STATS_CALC_DISTINCT,"true");
  SolrQueryRequest req=new LocalSolrQueryRequest(core,new MapSolrParams(args));
  assertQEx("can not use FieldCache on multivalued field: cat_intDocValues",req,400);
}
