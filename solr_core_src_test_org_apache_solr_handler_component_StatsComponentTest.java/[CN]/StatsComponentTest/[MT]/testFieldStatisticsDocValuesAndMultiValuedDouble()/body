{
  SolrCore core=h.getCore();
  String fieldName="cat_floatDocValues";
  SchemaField catDocValues=core.getLatestSchema().getField(fieldName);
  assertTrue("schema no longer satisfies test requirements: cat_docValues no longer multivalued",catDocValues.multiValued());
  assertTrue("schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued",!catDocValues.getType().isMultiValued());
  assertTrue("schema no longer satisfies test requirements: cat_docValues no longer has docValues",catDocValues.hasDocValues());
  List<FldType> types=new ArrayList<>();
  types.add(new FldType("id",ONE_ONE,new SVal('A','Z',4,4)));
  types.add(new FldType(fieldName,ONE_ONE,new FVal(0,0)));
  Doc d1=createDocValuesDocument(types,fieldName,"1",-1,3,5);
  updateJ(toJSON(d1),null);
  Doc d2=createDocValuesDocument(types,fieldName,"2",3,-2,6);
  updateJ(toJSON(d2),null);
  Doc d3=createDocValuesDocument(types,fieldName,"3",16,-3,11);
  updateJ(toJSON(d3),null);
  assertU(commit());
  final SolrParams baseParams=params(CommonParams.Q,"*:*","indent","true",StatsParams.STATS,"true");
  SolrQueryRequest req1=req(baseParams,StatsParams.STATS_CALC_DISTINCT,"true",StatsParams.STATS_FIELD,fieldName);
  SolrQueryRequest req2=req(baseParams,StatsParams.STATS_FIELD,"{!min=true, max=true, count=true, sum=true, mean=true, stddev=true, sumOfSquares=true, missing=true, calcdistinct=true}" + fieldName);
  SolrQueryRequest req3=req(baseParams,StatsParams.STATS_FIELD,"{!min=true, max=true, count=true, sum=true, mean=true, stddev=true, sumOfSquares=true, missing=true, countDistinct=true, distinctValues=true}" + fieldName);
  for (  SolrQueryRequest req : new SolrQueryRequest[]{req1,req2,req3}) {
    assertQ("test status on docValues and multiValued: " + req.toString(),req,"//lst[@name='" + fieldName + "']/double[@name='min'][.='-3.0']","//lst[@name='" + fieldName + "']/double[@name='max'][.='16.0']","//lst[@name='" + fieldName + "']/long[@name='count'][.='12']","//lst[@name='" + fieldName + "']/double[@name='sum'][.='38.0']","//lst[@name='" + fieldName + "']/double[@name='mean'][.='3.1666666666666665']","//lst[@name='" + fieldName + "']/double[@name='stddev'][.='5.638074031784151']","//lst[@name='" + fieldName + "']/double[@name='sumOfSquares'][.='470.0']","//lst[@name='" + fieldName + "']/long[@name='missing'][.='0']","//lst[@name='" + fieldName + "']/long[@name='countDistinct'][.='9']","count(//lst[@name='" + fieldName + "']/arr[@name='distinctValues']/float)=9","count(//lst[@name='" + fieldName + "']/*)=10");
  }
  assertQ("cardinality",req("q","*:*","stats","true","stats.field","{!cardinality=true}" + fieldName),"//lst[@name='" + fieldName + "']/long[@name='cardinality'][.='9']");
}
