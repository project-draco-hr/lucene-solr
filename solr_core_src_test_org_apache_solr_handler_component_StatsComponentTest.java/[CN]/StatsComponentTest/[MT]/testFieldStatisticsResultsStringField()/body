{
  SolrCore core=h.getCore();
  assertU(adoc("id","1","active_s","string1"));
  assertU(adoc("id","2","active_s","string2"));
  assertU(adoc("id","3","active_s","string3"));
  assertU(adoc("id","4"));
  assertU(commit());
  Map<String,String> args=new HashMap<>();
  args.put(CommonParams.Q,"*:*");
  args.put(StatsParams.STATS,"true");
  args.put(StatsParams.STATS_FIELD,"active_s");
  args.put("f.active_s.stats.calcdistinct","true");
  args.put("indent","true");
  SolrQueryRequest req=new LocalSolrQueryRequest(core,new MapSolrParams(args));
  assertQ("test string statistics values",req,"//str[@name='min'][.='string1']","//str[@name='max'][.='string3']","//long[@name='count'][.='3']","//long[@name='missing'][.='1']","//long[@name='countDistinct'][.='3']","count(//arr[@name='distinctValues']/str)=3");
  assertQ("test string cardinality",req("q","*:*","rows","0","stats","true","stats.field","{!cardinality=true}active_s"),"//long[@name='cardinality'][.='3']");
  assertQ("strdist func stats",req("q","*:*","stats","true","stats.field","{!func}strdist('string22',active_s,edit)"),"//double[@name='min'][.='0.75']","//double[@name='max'][.='0.875']","//double[@name='sum'][.='2.375']","//long[@name='count'][.='3']","//long[@name='missing'][.='1']");
}
