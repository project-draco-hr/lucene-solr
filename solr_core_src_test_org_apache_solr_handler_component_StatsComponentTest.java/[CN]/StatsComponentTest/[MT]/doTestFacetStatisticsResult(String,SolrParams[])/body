{
  assertU(adoc("id","1",f,"10","active_s","true","other_s","foo"));
  assertU(adoc("id","2",f,"20","active_s","true","other_s","bar"));
  assertU(commit());
  assertU(adoc("id","3",f,"30","active_s","false","other_s","foo"));
  assertU(adoc("id","4",f,"40","active_s","false","other_s","foo"));
  assertU(commit());
  final String pre="//lst[@name='stats_fields']/lst[@name='" + f + "']/lst[@name='facets']/lst[@name='active_s']";
  for (  SolrParams baseParams : baseParamsSet) {
    assertQ("test value for active_s=true",req(baseParams,"q","*:*","stats.calcdistinct","true","stats.facet","active_s","stats.facet","other_s"),"*[count(" + pre + ")=1]",pre + "/lst[@name='true']/double[@name='min'][.='10.0']",pre + "/lst[@name='true']/double[@name='max'][.='20.0']",pre + "/lst[@name='true']/double[@name='sum'][.='30.0']",pre + "/lst[@name='true']/long[@name='count'][.='2']",pre + "/lst[@name='true']/long[@name='missing'][.='0']",pre + "/lst[@name='true']/long[@name='countDistinct'][.='2']","count(" + pre + "/lst[@name='true']/arr[@name='distinctValues']/*)=2",pre + "/lst[@name='true']/double[@name='sumOfSquares'][.='500.0']",pre + "/lst[@name='true']/double[@name='mean'][.='15.0']",pre + "/lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']");
    assertQ("test value for active_s=false",req(baseParams,"q","*:*","stats.calcdistinct","true","stats.facet","active_s"),pre + "/lst[@name='false']/double[@name='min'][.='30.0']",pre + "/lst[@name='false']/double[@name='max'][.='40.0']",pre + "/lst[@name='false']/double[@name='sum'][.='70.0']",pre + "/lst[@name='false']/long[@name='count'][.='2']",pre + "/lst[@name='false']/long[@name='missing'][.='0']",pre + "/lst[@name='true']/long[@name='countDistinct'][.='2']","count(" + pre + "/lst[@name='true']/arr[@name='distinctValues']/*)=2",pre + "/lst[@name='false']/double[@name='sumOfSquares'][.='2500.0']",pre + "/lst[@name='false']/double[@name='mean'][.='35.0']",pre + "/lst[@name='false']/double[@name='stddev'][.='7.0710678118654755']");
  }
  for (  String param : new String[]{"{!key=" + f + " ex=key_ex_tag}"+ f,"{!key=" + f + " ex=key_ex_tag v="+ f+ "}","{!lucene key=" + f + " ex=key_ex_tag}_val_:\"field("+ f+ ")\"","{!func key=" + f + " ex=key_ex_tag}field("+ f+ ")","{!type=func key=" + f + " ex=key_ex_tag}field("+ f+ ")","{!type=func key=" + f + " ex=key_ex_tag v=field("+ f+ ")}","{!type=func key=" + f + " ex=key_ex_tag v='field("+ f+ ")'}"}) {
    assertQ("test statis & stats.facet over field specified as a function: " + param,req("q","*:*","stats","true","stats.calcdistinct","true","fq","{!tag=key_ex_tag}-id:4","stats.field",param,"stats.facet","active_s","stats.facet","other_s"),"*[count(" + pre + ")=1]",pre + "/lst[@name='true']/double[@name='min'][.='10.0']",pre + "/lst[@name='true']/double[@name='max'][.='20.0']",pre + "/lst[@name='true']/double[@name='sum'][.='30.0']",pre + "/lst[@name='true']/long[@name='count'][.='2']",pre + "/lst[@name='true']/long[@name='missing'][.='0']",pre + "/lst[@name='true']/long[@name='countDistinct'][.='2']","count(" + pre + "/lst[@name='true']/arr[@name='distinctValues']/*)=2",pre + "/lst[@name='true']/double[@name='sumOfSquares'][.='500.0']",pre + "/lst[@name='true']/double[@name='mean'][.='15.0']",pre + "/lst[@name='true']/double[@name='stddev'][.='7.0710678118654755']",pre + "/lst[@name='false']/double[@name='min'][.='30.0']",pre + "/lst[@name='false']/double[@name='max'][.='40.0']",pre + "/lst[@name='false']/double[@name='sum'][.='70.0']",pre + "/lst[@name='false']/long[@name='count'][.='2']",pre + "/lst[@name='false']/long[@name='missing'][.='0']",pre + "/lst[@name='true']/long[@name='countDistinct'][.='2']","count(" + pre + "/lst[@name='true']/arr[@name='distinctValues']/*)=2",pre + "/lst[@name='false']/double[@name='sumOfSquares'][.='2500.0']",pre + "/lst[@name='false']/double[@name='mean'][.='35.0']",pre + "/lst[@name='false']/double[@name='stddev'][.='7.0710678118654755']");
  }
}
