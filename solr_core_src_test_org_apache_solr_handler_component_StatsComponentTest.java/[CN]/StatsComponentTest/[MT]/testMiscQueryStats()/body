{
  final String kpre=XPRE + "lst[@name='stats_fields']/lst[@name='k']/";
  assertU(adoc("id","1","a_f","2.3","b_f","9.7","foo_t","how now brown cow"));
  assertU(adoc("id","2","a_f","4.5","b_f","8.6","foo_t","cow cow cow cow"));
  assertU(adoc("id","3","a_f","5.6","b_f","7.5","foo_t","red fox"));
  assertU(adoc("id","4","a_f","6.7","b_f","6.3","foo_t","red cow"));
  assertU(commit());
  assertQ("functions over multiple fields",req("q","foo_t:cow","stats","true","stats.field","{!func key=k}product(a_f,b_f)"),kpre + "double[@name='min'][.='22.309999465942383']",kpre + "double[@name='max'][.='42.209999084472656']",kpre + "double[@name='sum'][.='103.21999931335449']",kpre + "long[@name='count'][.='3']",kpre + "long[@name='missing'][.='0']",kpre + "double[@name='sumOfSquares'][.='3777.110157933046']",kpre + "double[@name='mean'][.='34.40666643778483']",kpre + "double[@name='stddev'][.='10.622007151430441']");
  final float constScore=4.2F;
  final double expectedScore=(double)constScore;
  assertQ("functions over a query",req("q","*:*","stats","true","stats.field","{!lucene key=k}foo_t:cow^=" + constScore),kpre + "double[@name='min'][.='" + expectedScore+ "']",kpre + "double[@name='max'][.='" + expectedScore+ "']",kpre + "double[@name='sum'][.='" + (3D * expectedScore)+ "']",kpre + "long[@name='count'][.='3']",kpre + "long[@name='missing'][.='1']",kpre + "double[@name='sumOfSquares'][.='" + (3D * Math.pow(expectedScore,2D))+ "']",kpre + "double[@name='mean'][.='" + expectedScore+ "']",kpre + "double[@name='stddev'][.='0.0']");
}
