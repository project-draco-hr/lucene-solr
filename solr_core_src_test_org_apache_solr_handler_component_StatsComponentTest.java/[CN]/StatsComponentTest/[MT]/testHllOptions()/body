{
  SolrCore core=h.getCore();
  SchemaField field_l=core.getLatestSchema().getField("field_l");
  SchemaField field_d=core.getLatestSchema().getField("field_d");
  SchemaField field_dt=core.getLatestSchema().getField("field_dt");
  SchemaField field_s=core.getLatestSchema().getField("field_s");
  SchemaField field_i=core.getLatestSchema().getField("field_i");
  SchemaField field_f=core.getLatestSchema().getField("field_f");
  SchemaField field_severity=core.getLatestSchema().getField("severity");
  assertNull(HllOptions.parseHllOptions(params(),field_l));
  assertNull(HllOptions.parseHllOptions(params("cardinality","false"),field_l));
  assertEquals("HLL Changed definition min for log2m, " + "need to note in upgrade instructions and maybe adjust accuracy hueristic",4,HLL.MINIMUM_LOG2M_PARAM);
  assertEquals("HLL Changed definition max for log2m, " + "need to note in upgrade instructions and maybe adjust accuracy hueristic",30,HLL.MAXIMUM_LOG2M_PARAM);
  assertEquals("HLL Changed definition min for regwidth, " + "need to note in upgrade instructions and probably adjust hueristic",1,HLL.MINIMUM_REGWIDTH_PARAM);
  assertEquals("HLL Changed definition max for regwidth, " + "need to note in upgrade instructions and probably adjust hueristic",8,HLL.MAXIMUM_REGWIDTH_PARAM);
  SolrParams[] longDefaultParams=new SolrParams[]{params("cardinality","true"),params("cardinality","0.33"),params("cardinality","true","hllLog2m","13"),params("cardinality","true","hllRegwidth","6"),params("cardinality","true","hllPreHash","false"),params("cardinality","true","hllLog2m","13","hllRegwidth","6","hllPreHash","false"),params("cardinality","1.0","hllLog2m","13","hllRegwidth","6"),params("cardinality","0.0","hllLog2m","13","hllRegwidth","6","hllPreHash","false")};
  for (  SchemaField field : new SchemaField[]{field_l,field_d,field_dt,field_s}) {
    final String f=field.getName();
    for (    SolrParams p : longDefaultParams) {
      HllOptions opts=HllOptions.parseHllOptions(p,field);
      assertEquals(f + " long defaults: " + p,13,opts.getLog2m());
      assertEquals(f + " long defaults: " + p,6,opts.getRegwidth());
      assertNotNull(f + " long defaults: " + p,opts.getHasher());
    }
    HllOptions optsMin=HllOptions.parseHllOptions(params("cardinality","0"),field);
    assertEquals(f + " min log2m",HLL.MINIMUM_LOG2M_PARAM,optsMin.getLog2m());
    assertEquals(f + " min regwidth",5,optsMin.getRegwidth());
    HllOptions optsMax=HllOptions.parseHllOptions(params("cardinality","1"),field);
    assertEquals(f + " max log2m",HLL.MAXIMUM_LOG2M_PARAM,optsMax.getLog2m());
    assertEquals(f + " max regwidth",HLL.MAXIMUM_REGWIDTH_PARAM,optsMax.getRegwidth());
  }
  SolrParams[] intDefaultParams=new SolrParams[]{params("cardinality","true"),params("cardinality","0.33"),params("cardinality","true","hllLog2m","13"),params("cardinality","true","hllRegwidth","5"),params("cardinality","true","hllPreHash","false"),params("cardinality","true","hllLog2m","13","hllRegwidth","5","hllPreHash","false"),params("cardinality","1.0","hllLog2m","13","hllRegwidth","5"),params("cardinality","0.0","hllLog2m","13","hllRegwidth","5","hllPreHash","false")};
  for (  SchemaField field : new SchemaField[]{field_i,field_f,field_severity,null}) {
    final String f=null == field ? "(func)" : field.getName();
    for (    SolrParams p : intDefaultParams) {
      HllOptions opts=HllOptions.parseHllOptions(p,field);
      assertEquals(f + " int defaults: " + p,13,opts.getLog2m());
      assertEquals(f + " int defaults: " + p,5,opts.getRegwidth());
      assertNotNull(f + " int defaults: " + p,opts.getHasher());
    }
    HllOptions optsMin=HllOptions.parseHllOptions(params("cardinality","0"),field);
    assertEquals(f + " min log2m",HLL.MINIMUM_LOG2M_PARAM,optsMin.getLog2m());
    assertEquals(f + " min regwidth",4,optsMin.getRegwidth());
    HllOptions optsMax=HllOptions.parseHllOptions(params("cardinality","1"),field);
    assertEquals(f + " max log2m",HLL.MAXIMUM_LOG2M_PARAM,optsMax.getLog2m());
    assertEquals(f + " max regwidth",HLL.MAXIMUM_REGWIDTH_PARAM,optsMax.getRegwidth());
  }
  assertNotNull(HllOptions.parseHllOptions(params("cardinality","true"),field_l).getHasher());
  assertNotNull(HllOptions.parseHllOptions(params("cardinality","true","hllPreHashed","false"),field_l).getHasher());
  assertNull(HllOptions.parseHllOptions(params("cardinality","true","hllPreHashed","true"),field_l).getHasher());
}
