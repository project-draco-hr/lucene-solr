{
  final MockStreamingSolrServers ss=new MockStreamingSolrServers(updateShardHandler);
  SolrCmdDistributor cmdDistrib=new SolrCmdDistributor(ss,5,0);
  ss.setExp(Exp.CONNECT_EXCEPTION);
  ArrayList<Node> nodes=new ArrayList<Node>();
  final HttpSolrServer solrclient1=(HttpSolrServer)clients.get(0);
  final AtomicInteger retries=new AtomicInteger();
  ZkNodeProps nodeProps=new ZkNodeProps(ZkStateReader.BASE_URL_PROP,solrclient1.getBaseURL(),ZkStateReader.CORE_NAME_PROP,"");
  RetryNode retryNode=new RetryNode(new ZkCoreNodeProps(nodeProps),null,"collection1","shard1","locahost"){
    @Override public boolean checkRetry(){
      retries.incrementAndGet();
      return true;
    }
  }
;
  nodes.add(retryNode);
  AddUpdateCommand cmd=new AddUpdateCommand(null);
  cmd.solrDoc=sdoc("id",id.incrementAndGet());
  ModifiableSolrParams params=new ModifiableSolrParams();
  cmdDistrib.distribAdd(cmd,nodes,params);
  cmdDistrib.finish();
  assertEquals(6,retries.get());
  assertEquals(1,cmdDistrib.getErrors().size());
}
