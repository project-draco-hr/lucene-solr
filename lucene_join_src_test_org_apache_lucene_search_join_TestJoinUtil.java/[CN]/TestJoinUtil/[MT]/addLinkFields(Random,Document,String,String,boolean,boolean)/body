{
  document.add(newTextField(random,fieldName,linkValue,Field.Store.NO));
  final int linkInt=Integer.parseUnsignedInt(linkValue,16);
  document.add(new IntPoint(fieldName + "INT",linkInt));
  document.add(new FloatPoint(fieldName + "FLOAT",linkInt));
  final long linkLong=linkInt << 32 | linkInt;
  document.add(new LongPoint(fieldName + "LONG",linkLong));
  document.add(new DoublePoint(fieldName + "DOUBLE",linkLong));
  if (multipleValuesPerDocument) {
    document.add(new SortedSetDocValuesField(fieldName,new BytesRef(linkValue)));
    document.add(new SortedNumericDocValuesField(fieldName + "INT",linkInt));
    document.add(new SortedNumericDocValuesField(fieldName + "FLOAT",Float.floatToRawIntBits(linkInt)));
    document.add(new SortedNumericDocValuesField(fieldName + "LONG",linkLong));
    document.add(new SortedNumericDocValuesField(fieldName + "DOUBLE",Double.doubleToRawLongBits(linkLong)));
  }
 else {
    document.add(new SortedDocValuesField(fieldName,new BytesRef(linkValue)));
    document.add(new NumericDocValuesField(fieldName + "INT",linkInt));
    document.add(new FloatDocValuesField(fieldName + "FLOAT",linkInt));
    document.add(new NumericDocValuesField(fieldName + "LONG",linkLong));
    document.add(new DoubleDocValuesField(fieldName + "DOUBLE",linkLong));
  }
  if (globalOrdinalJoin) {
    document.add(new SortedDocValuesField("join_field",new BytesRef(linkValue)));
  }
}
