{
  final int bitsPerValue=token & 0x1F;
  if (bitsPerValue == 0) {
    Arrays.fill(nextDocs,0);
  }
 else {
    DECODERS[bitsPerValue].decode(data,offset,nextDocs,0,ITERATIONS[bitsPerValue]);
    offset+=BYTE_BLOCK_COUNTS[bitsPerValue];
  }
  if ((token & HAS_EXCEPTIONS) != 0) {
    final int numExceptions=data[offset++];
    final int bitsPerException=data[offset++];
    final int numIterations=(numExceptions + DECODERS[bitsPerException].byteValueCount() - 1) / DECODERS[bitsPerException].byteValueCount();
    DECODERS[bitsPerException].decode(data,offset,nextExceptions,0,numIterations);
    offset+=PackedInts.Format.PACKED.byteCount(PackedInts.VERSION_CURRENT,numExceptions,bitsPerException);
    for (int i=0; i < numExceptions; ++i) {
      nextDocs[data[offset++]]|=nextExceptions[i] << bitsPerValue;
    }
  }
  for (int previousDoc=docID, i=0; i < BLOCK_SIZE; ++i) {
    final int doc=previousDoc + 1 + nextDocs[i];
    previousDoc=nextDocs[i]=doc;
  }
}
