{
  final Directory dir=newDirectory();
  final RandomIndexWriter w=new RandomIndexWriter(random,dir);
  final int numDocs1=random.nextInt(25);
  for (int docCount=0; docCount < numDocs1; docCount++) {
    Document doc=new Document();
    doc.add(newField("content","good content",TextField.TYPE_UNSTORED));
    w.addDocument(doc);
  }
  final List<Document> docs=new ArrayList<Document>();
  final int numDocs2=random.nextInt(25);
  for (int docCount=0; docCount < numDocs2; docCount++) {
    Document doc=new Document();
    docs.add(doc);
    doc.add(newField("subid","subs",StringField.TYPE_UNSTORED));
    doc.add(newField("id",docCount + "",StringField.TYPE_UNSTORED));
    doc.add(newField("content","silly content " + docCount,TextField.TYPE_UNSTORED));
  }
  w.addDocuments(docs);
  final int numDocs3=random.nextInt(25);
  for (int docCount=0; docCount < numDocs3; docCount++) {
    Document doc=new Document();
    doc.add(newField("content","good content",TextField.TYPE_UNSTORED));
    w.addDocument(doc);
  }
  docs.clear();
  final int limit=_TestUtil.nextInt(random,2,25);
  final int crashAt=random.nextInt(limit);
  for (int docCount=0; docCount < limit; docCount++) {
    Document doc=new Document();
    docs.add(doc);
    doc.add(newField("id",docCount + "",StringField.TYPE_UNSTORED));
    doc.add(newField("content","silly content " + docCount,TextField.TYPE_UNSTORED));
    if (docCount == crashAt) {
      Field f=newField("crash","",TextField.TYPE_UNSTORED);
      doc.add(f);
      MockTokenizer tokenizer=new MockTokenizer(new StringReader("crash me on the 4th token"),MockTokenizer.WHITESPACE,false);
      tokenizer.setEnableChecks(false);
      f.setTokenStream(new CrashingFilter("crash",tokenizer));
    }
  }
  try {
    w.updateDocuments(new Term("subid","subs"),docs);
    fail("did not hit expected exception");
  }
 catch (  IOException ioe) {
    assertEquals(CRASH_FAIL_MESSAGE,ioe.getMessage());
  }
  final int numDocs4=random.nextInt(25);
  for (int docCount=0; docCount < numDocs4; docCount++) {
    Document doc=new Document();
    doc.add(newField("content","good content",TextField.TYPE_UNSTORED));
    w.addDocument(doc);
  }
  final IndexReader r=w.getReader();
  w.close();
  final IndexSearcher s=new IndexSearcher(r);
  PhraseQuery pq=new PhraseQuery();
  pq.add(new Term("content","silly"));
  pq.add(new Term("content","content"));
  assertEquals(numDocs2,s.search(pq,1).totalHits);
  pq=new PhraseQuery();
  pq.add(new Term("content","good"));
  pq.add(new Term("content","content"));
  assertEquals(numDocs1 + numDocs3 + numDocs4,s.search(pq,1).totalHits);
  r.close();
  dir.close();
}
