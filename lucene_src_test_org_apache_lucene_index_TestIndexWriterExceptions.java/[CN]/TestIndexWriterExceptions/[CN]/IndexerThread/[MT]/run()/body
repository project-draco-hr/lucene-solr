{
  final Document doc=new Document();
  doc.add(newField("content1","aaa bbb ccc ddd",Field.Store.YES,Field.Index.ANALYZED));
  doc.add(newField("content6","aaa bbb ccc ddd",Field.Store.NO,Field.Index.ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
  doc.add(newField("content2","aaa bbb ccc ddd",Field.Store.YES,Field.Index.NOT_ANALYZED));
  doc.add(newField("content3","aaa bbb ccc ddd",Field.Store.YES,Field.Index.NO));
  doc.add(newField("content4","aaa bbb ccc ddd",Field.Store.NO,Field.Index.ANALYZED));
  doc.add(newField("content5","aaa bbb ccc ddd",Field.Store.NO,Field.Index.NOT_ANALYZED));
  doc.add(newField("content7","aaa bbb ccc ddd",Field.Store.NO,Field.Index.NOT_ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
  final Field idField=newField("id","",Field.Store.YES,Field.Index.NOT_ANALYZED);
  doc.add(idField);
  final long stopTime=System.currentTimeMillis() + 500;
  do {
    if (VERBOSE) {
      System.out.println(Thread.currentThread().getName() + ": TEST: IndexerThread: cycle");
    }
    doFail.set(this);
    final String id="" + r.nextInt(50);
    idField.setValue(id);
    Term idTerm=new Term("id",id);
    try {
      writer.updateDocument(idTerm,doc);
    }
 catch (    RuntimeException re) {
      if (VERBOSE) {
        System.out.println(Thread.currentThread().getName() + ": EXC: ");
        re.printStackTrace(System.out);
      }
      try {
        _TestUtil.checkIndex(writer.getDirectory());
      }
 catch (      IOException ioe) {
        System.out.println(Thread.currentThread().getName() + ": unexpected exception1");
        ioe.printStackTrace(System.out);
        failure=ioe;
        break;
      }
    }
catch (    Throwable t) {
      System.out.println(Thread.currentThread().getName() + ": unexpected exception2");
      t.printStackTrace(System.out);
      failure=t;
      break;
    }
    doFail.set(null);
    try {
      writer.updateDocument(idTerm,doc);
    }
 catch (    Throwable t) {
      System.out.println(Thread.currentThread().getName() + ": unexpected exception3");
      t.printStackTrace(System.out);
      failure=t;
      break;
    }
  }
 while (System.currentTimeMillis() < stopTime);
}
