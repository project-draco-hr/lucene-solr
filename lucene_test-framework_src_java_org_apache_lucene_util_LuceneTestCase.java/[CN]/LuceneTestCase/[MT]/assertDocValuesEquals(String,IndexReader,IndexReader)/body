{
  Set<String> leftFields=getDVFields(leftReader);
  Set<String> rightFields=getDVFields(rightReader);
  assertEquals(info,leftFields,rightFields);
  for (  String field : leftFields) {
{
      NumericDocValues leftValues=MultiDocValues.getNumericValues(leftReader,field);
      NumericDocValues rightValues=MultiDocValues.getNumericValues(rightReader,field);
      if (leftValues != null && rightValues != null) {
        assertDocValuesEquals(info,leftReader.maxDoc(),leftValues,rightValues);
      }
 else {
        assertTrue(info + ": left numeric doc values for field=\"" + field+ "\" are not null",leftValues == null || leftValues.nextDoc() == NO_MORE_DOCS);
        assertTrue(info + ": right numeric doc values for field=\"" + field+ "\" are not null",rightValues == null || rightValues.nextDoc() == NO_MORE_DOCS);
      }
    }
{
      BinaryDocValues leftValues=MultiDocValues.getBinaryValues(leftReader,field);
      BinaryDocValues rightValues=MultiDocValues.getBinaryValues(rightReader,field);
      if (leftValues != null && rightValues != null) {
        while (true) {
          int docID=leftValues.nextDoc();
          assertEquals(docID,rightValues.nextDoc());
          if (docID == NO_MORE_DOCS) {
            break;
          }
          assertEquals(leftValues.binaryValue(),rightValues.binaryValue());
        }
      }
 else {
        assertTrue(info,leftValues == null || leftValues.nextDoc() == NO_MORE_DOCS);
        assertTrue(info,rightValues == null || rightValues.nextDoc() == NO_MORE_DOCS);
      }
    }
{
      SortedDocValues leftValues=MultiDocValues.getSortedValues(leftReader,field);
      SortedDocValues rightValues=MultiDocValues.getSortedValues(rightReader,field);
      if (leftValues != null && rightValues != null) {
        assertEquals(info,leftValues.getValueCount(),rightValues.getValueCount());
        for (int i=0; i < leftValues.getValueCount(); i++) {
          final BytesRef left=BytesRef.deepCopyOf(leftValues.lookupOrd(i));
          final BytesRef right=rightValues.lookupOrd(i);
          assertEquals(info,left,right);
        }
        for (int docID=0; docID < leftReader.maxDoc(); docID++) {
          assertEquals(docID,leftValues.nextDoc());
          assertEquals(docID,rightValues.nextDoc());
          final BytesRef left=BytesRef.deepCopyOf(leftValues.binaryValue());
          final BytesRef right=rightValues.binaryValue();
          assertEquals(info,left,right);
        }
      }
 else {
        assertNull(info,leftValues);
        assertNull(info,rightValues);
      }
    }
{
      SortedSetDocValues leftValues=MultiDocValues.getSortedSetValues(leftReader,field);
      SortedSetDocValues rightValues=MultiDocValues.getSortedSetValues(rightReader,field);
      if (leftValues != null && rightValues != null) {
        assertEquals(info,leftValues.getValueCount(),rightValues.getValueCount());
        for (int i=0; i < leftValues.getValueCount(); i++) {
          final BytesRef left=BytesRef.deepCopyOf(leftValues.lookupOrd(i));
          final BytesRef right=rightValues.lookupOrd(i);
          assertEquals(info,left,right);
        }
        while (true) {
          int docID=leftValues.nextDoc();
          assertEquals(docID,rightValues.nextDoc());
          if (docID == NO_MORE_DOCS) {
            break;
          }
          long ord;
          while ((ord=leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {
            assertEquals(info,ord,rightValues.nextOrd());
          }
          assertEquals(info,SortedSetDocValues.NO_MORE_ORDS,rightValues.nextOrd());
        }
      }
 else {
        assertNull(info,leftValues);
        assertNull(info,rightValues);
      }
    }
{
      SortedNumericDocValues leftValues=MultiDocValues.getSortedNumericValues(leftReader,field);
      SortedNumericDocValues rightValues=MultiDocValues.getSortedNumericValues(rightReader,field);
      if (leftValues != null && rightValues != null) {
        while (true) {
          int docID=leftValues.nextDoc();
          assertEquals(docID,rightValues.nextDoc());
          if (docID == NO_MORE_DOCS) {
            break;
          }
          assertEquals(info,leftValues.docValueCount(),rightValues.docValueCount());
          for (int j=0; j < leftValues.docValueCount(); j++) {
            assertEquals(info,leftValues.nextValue(),rightValues.nextValue());
          }
        }
      }
 else {
        assertNull(info,leftValues);
        assertNull(info,rightValues);
      }
    }
  }
}
