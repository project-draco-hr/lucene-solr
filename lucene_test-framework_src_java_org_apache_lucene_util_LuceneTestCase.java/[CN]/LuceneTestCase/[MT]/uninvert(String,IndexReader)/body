{
  final Map<Integer,Set<BytesRef>> docValues=new HashMap<>();
  for (  LeafReaderContext ctx : reader.leaves()) {
    PointValues points=ctx.reader().getPointValues();
    if (points == null) {
      continue;
    }
    points.intersect(fieldName,new PointValues.IntersectVisitor(){
      @Override public void visit(      int docID){
        throw new UnsupportedOperationException();
      }
      @Override public void visit(      int docID,      byte[] packedValue) throws IOException {
        int topDocID=ctx.docBase + docID;
        if (docValues.containsKey(topDocID) == false) {
          docValues.put(topDocID,new HashSet<BytesRef>());
        }
        docValues.get(topDocID).add(new BytesRef(packedValue.clone()));
      }
      @Override public PointValues.Relation compare(      byte[] minPackedValue,      byte[] maxPackedValue){
        return PointValues.Relation.CELL_CROSSES_QUERY;
      }
    }
);
  }
  return docValues;
}
