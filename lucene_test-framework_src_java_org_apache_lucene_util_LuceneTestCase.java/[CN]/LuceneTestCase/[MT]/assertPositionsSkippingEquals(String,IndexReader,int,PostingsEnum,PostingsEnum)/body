{
  if (leftDocs == null || rightDocs == null) {
    assertNull(leftDocs);
    assertNull(rightDocs);
    return;
  }
  int docid=-1;
  int averageGap=leftReader.maxDoc() / (1 + docFreq);
  int skipInterval=16;
  while (true) {
    if (random().nextBoolean()) {
      docid=leftDocs.nextDoc();
      assertEquals(info,docid,rightDocs.nextDoc());
    }
 else {
      int skip=docid + (int)Math.ceil(Math.abs(skipInterval + random().nextGaussian() * averageGap));
      docid=leftDocs.advance(skip);
      assertEquals(info,docid,rightDocs.advance(skip));
    }
    if (docid == DocIdSetIterator.NO_MORE_DOCS) {
      return;
    }
    int freq=leftDocs.freq();
    assertEquals(info,freq,rightDocs.freq());
    for (int i=0; i < freq; i++) {
      assertEquals(info,leftDocs.nextPosition(),rightDocs.nextPosition());
      assertEquals(info,leftDocs.getPayload(),rightDocs.getPayload());
    }
  }
}
