{
  seed="random".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;
  random.setSeed(seed);
  savedUncaughtExceptionHandler=Thread.getDefaultUncaughtExceptionHandler();
  Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
    public void uncaughtException(    Thread t,    Throwable e){
      if (e.getClass().getName().endsWith("AssumptionViolatedException")) {
        String where="<unknown>";
        for (        StackTraceElement elem : e.getStackTrace()) {
          if (!elem.getClassName().startsWith("org.junit")) {
            where=elem.toString();
            break;
          }
        }
        System.err.print("NOTE: Assume failed at " + where + " (ignored):");
        if (VERBOSE) {
          System.err.println();
          e.printStackTrace(System.err);
        }
 else {
          System.err.print(" ");
          System.err.println(e.getMessage());
        }
      }
 else {
        testsFailed=true;
        uncaughtExceptions.add(new UncaughtExceptionEntry(t,e));
        if (savedUncaughtExceptionHandler != null)         savedUncaughtExceptionHandler.uncaughtException(t,e);
      }
    }
  }
);
  savedBoolMaxClauseCount=BooleanQuery.getMaxClauseCount();
  if (useNoMemoryExpensiveCodec) {
    String defFormat=_TestUtil.getPostingsFormat("thisCodeMakesAbsolutelyNoSenseCanWeDeleteIt");
    if ("SimpleText".equals(defFormat) || "Memory".equals(defFormat)) {
      System.err.println("NOTE: A test method in " + getClass().getSimpleName() + " was ignored, as it uses too much memory with "+ defFormat+ ".");
      Assume.assumeTrue(false);
    }
  }
}
