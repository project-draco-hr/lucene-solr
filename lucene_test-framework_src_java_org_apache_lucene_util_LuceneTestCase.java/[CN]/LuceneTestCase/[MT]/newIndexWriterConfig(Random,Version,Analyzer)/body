{
  IndexWriterConfig c=new IndexWriterConfig(v,a);
  c.setSimilarity(classEnvRule.similarity);
  if (r.nextBoolean()) {
    c.setMergeScheduler(new SerialMergeScheduler());
  }
  if (r.nextBoolean()) {
    if (rarely(r)) {
      c.setMaxBufferedDocs(_TestUtil.nextInt(r,2,15));
    }
 else {
      c.setMaxBufferedDocs(_TestUtil.nextInt(r,16,1000));
    }
  }
  if (r.nextBoolean()) {
    if (rarely(r)) {
      c.setTermIndexInterval(r.nextBoolean() ? _TestUtil.nextInt(r,1,31) : _TestUtil.nextInt(r,129,1000));
    }
 else {
      c.setTermIndexInterval(_TestUtil.nextInt(r,32,128));
    }
  }
  if (r.nextBoolean()) {
    int maxNumThreadStates=rarely(r) ? _TestUtil.nextInt(r,5,20) : _TestUtil.nextInt(r,1,4);
    Method setIndexerThreadPoolMethod=null;
    try {
      for (      Method m : IndexWriterConfig.class.getDeclaredMethods()) {
        if (m.getName().equals("setIndexerThreadPool")) {
          m.setAccessible(true);
          setIndexerThreadPoolMethod=m;
          break;
        }
      }
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
    if (setIndexerThreadPoolMethod == null) {
      throw new RuntimeException("failed to lookup IndexWriterConfig.setIndexerThreadPool method");
    }
    try {
      if (rarely(r)) {
        setIndexerThreadPoolMethod.invoke(c,new RandomDocumentsWriterPerThreadPool(maxNumThreadStates,r));
      }
 else {
        c.setMaxThreadStates(maxNumThreadStates);
      }
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  if (rarely(r)) {
    c.setMergePolicy(new MockRandomMergePolicy(r));
  }
 else   if (r.nextBoolean()) {
    c.setMergePolicy(newTieredMergePolicy());
  }
 else   if (r.nextInt(5) == 0) {
    c.setMergePolicy(newAlcoholicMergePolicy());
  }
 else {
    c.setMergePolicy(newLogMergePolicy());
  }
  c.setReaderPooling(r.nextBoolean());
  c.setReaderTermsIndexDivisor(_TestUtil.nextInt(r,1,4));
  return c;
}
