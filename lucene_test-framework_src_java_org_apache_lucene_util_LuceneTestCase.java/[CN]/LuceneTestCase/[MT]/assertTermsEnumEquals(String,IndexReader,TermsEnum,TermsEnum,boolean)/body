{
  BytesRef term;
  Bits randomBits=new RandomBits(leftReader.maxDoc(),random().nextDouble(),random());
  DocsAndPositionsEnum leftPositions=null;
  DocsAndPositionsEnum rightPositions=null;
  DocsEnum leftDocs=null;
  DocsEnum rightDocs=null;
  while ((term=leftTermsEnum.next()) != null) {
    assertEquals(info,term,rightTermsEnum.next());
    assertTermStatsEquals(info,leftTermsEnum,rightTermsEnum);
    if (deep) {
      assertDocsAndPositionsEnumEquals(info,leftPositions=leftTermsEnum.docsAndPositions(null,leftPositions),rightPositions=rightTermsEnum.docsAndPositions(null,rightPositions));
      assertDocsAndPositionsEnumEquals(info,leftPositions=leftTermsEnum.docsAndPositions(randomBits,leftPositions),rightPositions=rightTermsEnum.docsAndPositions(randomBits,rightPositions));
      assertPositionsSkippingEquals(info,leftReader,leftTermsEnum.docFreq(),leftPositions=leftTermsEnum.docsAndPositions(null,leftPositions),rightPositions=rightTermsEnum.docsAndPositions(null,rightPositions));
      assertPositionsSkippingEquals(info,leftReader,leftTermsEnum.docFreq(),leftPositions=leftTermsEnum.docsAndPositions(randomBits,leftPositions),rightPositions=rightTermsEnum.docsAndPositions(randomBits,rightPositions));
      assertDocsEnumEquals(info,leftDocs=leftTermsEnum.docs(null,leftDocs),rightDocs=rightTermsEnum.docs(null,rightDocs),true);
      assertDocsEnumEquals(info,leftDocs=leftTermsEnum.docs(randomBits,leftDocs),rightDocs=rightTermsEnum.docs(randomBits,rightDocs),true);
      assertDocsEnumEquals(info,leftDocs=leftTermsEnum.docs(null,leftDocs,DocsEnum.FLAG_NONE),rightDocs=rightTermsEnum.docs(null,rightDocs,DocsEnum.FLAG_NONE),false);
      assertDocsEnumEquals(info,leftDocs=leftTermsEnum.docs(randomBits,leftDocs,DocsEnum.FLAG_NONE),rightDocs=rightTermsEnum.docs(randomBits,rightDocs,DocsEnum.FLAG_NONE),false);
      assertDocsSkippingEquals(info,leftReader,leftTermsEnum.docFreq(),leftDocs=leftTermsEnum.docs(null,leftDocs),rightDocs=rightTermsEnum.docs(null,rightDocs),true);
      assertDocsSkippingEquals(info,leftReader,leftTermsEnum.docFreq(),leftDocs=leftTermsEnum.docs(randomBits,leftDocs),rightDocs=rightTermsEnum.docs(randomBits,rightDocs),true);
      assertDocsSkippingEquals(info,leftReader,leftTermsEnum.docFreq(),leftDocs=leftTermsEnum.docs(null,leftDocs,DocsEnum.FLAG_NONE),rightDocs=rightTermsEnum.docs(null,rightDocs,DocsEnum.FLAG_NONE),false);
      assertDocsSkippingEquals(info,leftReader,leftTermsEnum.docFreq(),leftDocs=leftTermsEnum.docs(randomBits,leftDocs,DocsEnum.FLAG_NONE),rightDocs=rightTermsEnum.docs(randomBits,rightDocs,DocsEnum.FLAG_NONE),false);
    }
  }
  assertNull(info,rightTermsEnum.next());
}
