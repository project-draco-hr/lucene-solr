{
  if (rarely()) {
    for (int i=0, c=random.nextInt(6) + 1; i < c; i++) {
switch (random.nextInt(4)) {
case 0:
        r=SlowCompositeReaderWrapper.wrap(r);
      break;
case 1:
    r=(r instanceof AtomicReader) ? new ParallelAtomicReader((AtomicReader)r) : new ParallelCompositeReader((CompositeReader)r);
  break;
case 2:
r=new MultiReader(r);
break;
case 3:
if (r instanceof AtomicReader) {
r=new FilterAtomicReader((AtomicReader)r){
@Override public Fields fields() throws IOException {
  return new FilterFields(super.fields());
}
}
;
}
break;
default :
fail("should not get here");
}
}
}
return r;
}
