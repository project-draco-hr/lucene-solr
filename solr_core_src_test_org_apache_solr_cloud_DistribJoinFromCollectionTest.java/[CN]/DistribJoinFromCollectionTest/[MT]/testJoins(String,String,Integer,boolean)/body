{
  final String fromQ="match_s:c match_s:not_1_0_score_after_weight_normalization";
{
    final String joinQ="{!join " + anyScoreMode(isScoresTest) + "from=join_s fromIndex="+ fromColl+ " to=join_s}"+ fromQ;
    QueryRequest qr=new QueryRequest(params("collection",toColl,"q",joinQ,"fl","id,get_s,score"));
    QueryResponse rsp=new QueryResponse(cloudClient.request(qr),cloudClient);
    SolrDocumentList hits=rsp.getResults();
    assertTrue("Expected 1 doc, got " + hits,hits.getNumFound() == 1);
    SolrDocument doc=hits.get(0);
    assertEquals(toDocId,doc.getFirstValue("id"));
    assertEquals("b",doc.getFirstValue("get_s"));
    assertScore(isScoresTest,doc);
  }
  checkAbsentFromIndex(fromColl,toColl,isScoresTest);
  String alias=fromColl + "Alias";
  CollectionAdminRequest.CreateAlias request=CollectionAdminRequest.createAlias(alias,fromColl);
  request.process(cloudClient);
{
    final String joinQ="{!join " + anyScoreMode(isScoresTest) + "from=join_s fromIndex="+ alias+ " to=join_s}"+ fromQ;
    final QueryRequest qr=new QueryRequest(params("collection",toColl,"q",joinQ,"fl","id,get_s,score"));
    final QueryResponse rsp=new QueryResponse(cloudClient.request(qr),cloudClient);
    final SolrDocumentList hits=rsp.getResults();
    assertTrue("Expected 1 doc",hits.getNumFound() == 1);
    SolrDocument doc=hits.get(0);
    assertEquals(toDocId,doc.getFirstValue("id"));
    assertEquals("b",doc.getFirstValue("get_s"));
    assertScore(isScoresTest,doc);
  }
  checkAbsentFromIndex(fromColl,toColl,isScoresTest);
{
    final String joinQ="{!join " + (anyScoreMode(isScoresTest)) + "from=join_s fromIndex="+ fromColl+ " to=join_s}match_s:d";
    final QueryRequest qr=new QueryRequest(params("collection",toColl,"q",joinQ,"fl","id,get_s,score"));
    final QueryResponse rsp=new QueryResponse(cloudClient.request(qr),cloudClient);
    final SolrDocumentList hits=rsp.getResults();
    assertTrue("Expected no hits",hits.getNumFound() == 0);
  }
}
