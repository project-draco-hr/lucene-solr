{
  if (node == null) {
    return;
  }
  out.writeString(new String(new char[]{node.splitchar},0,1));
  byte mask=0;
  if (node.relatives[TSTNode.LOKID] != null)   mask|=LO_KID;
  if (node.relatives[TSTNode.EQKID] != null)   mask|=EQ_KID;
  if (node.relatives[TSTNode.HIKID] != null)   mask|=HI_KID;
  if (node.data != null)   mask|=HAS_VALUE;
  out.writeByte(mask);
  if (node.data != null) {
    out.writeLong(((Number)node.data).longValue());
  }
  writeRecursively(out,node.relatives[TSTNode.LOKID]);
  writeRecursively(out,node.relatives[TSTNode.EQKID]);
  writeRecursively(out,node.relatives[TSTNode.HIKID]);
}
