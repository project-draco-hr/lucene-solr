{
  final ModifiableSolrParams params=buildParams();
  Random rand=random();
  if (rand.nextBoolean()) {
    int from;
    params.set("q","[" + (from=rand.nextInt(maxId / 2)) + " TO "+ ((from - 1) + (rand.nextInt(maxId)))+ "]");
  }
  int offset=0;
  int indexSize=6;
  if (rand.nextInt(100) < 20) {
    if (rand.nextBoolean()) {
      offset=rand.nextInt(100) < 10 ? rand.nextInt(indexSize * 2) : rand.nextInt(indexSize / 3 + 1);
    }
    params.add("facet.offset",Integer.toString(offset));
  }
  int limit=100;
  if (rand.nextInt(100) < 20) {
    if (rand.nextBoolean()) {
      limit=rand.nextInt(100) < 10 ? rand.nextInt(indexSize / 2 + 1) : rand.nextInt(indexSize * 2);
    }
    params.add("facet.limit",Integer.toString(limit));
  }
  if (rand.nextBoolean()) {
    params.add("facet.sort",rand.nextBoolean() ? "index" : "count");
  }
  if (rand.nextInt(100) < 20) {
    final String[] prefixes=new String[]{"A","B","C"};
    params.add("facet.prefix",prefixes[rand.nextInt(prefixes.length)]);
  }
  if (rand.nextInt(100) < 20) {
    params.add("facet.missing","true");
  }
  if (rand.nextInt(100) < 20) {
    params.add("facet.mincount",rand.nextBoolean() ? "0" : "1");
  }
  final boolean shardRespondsWithMissingEvenLimitIsZero=params.getBool("facet.missing",false) && params.getInt("facet.limit",100) == 0;
  if (shardRespondsWithMissingEvenLimitIsZero) {
    handle.put(null,SKIP);
  }
  query(params);
  if (shardRespondsWithMissingEvenLimitIsZero) {
    handle.remove(null);
  }
}
