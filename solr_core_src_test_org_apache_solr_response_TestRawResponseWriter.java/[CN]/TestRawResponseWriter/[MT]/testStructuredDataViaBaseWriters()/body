{
  SolrQueryResponse rsp=new SolrQueryResponse();
  rsp.add(RawResponseWriter.CONTENT,"test");
  rsp.add("foo","bar");
  assertEquals("application/xml; charset=UTF-8",writerNoBase.getContentType(req(),rsp));
  assertEquals("application/xml; charset=UTF-8",writerXmlBase.getContentType(req(),rsp));
  assertEquals("application/json; charset=UTF-8",writerJsonBase.getContentType(req(),rsp));
  assertEquals("application/octet-stream",writerBinBase.getContentType(req(),rsp));
  String xml="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<str name=\"content\">test</str><str name=\"foo\">bar</str>\n</response>\n";
  StringWriter xmlSout=new StringWriter();
  writerXmlBase.write(xmlSout,req(),rsp);
  assertEquals(xml,xmlSout.toString());
  ByteArrayOutputStream xmlBout=new ByteArrayOutputStream();
  writerXmlBase.write(xmlBout,req(),rsp);
  assertEquals(xml,xmlBout.toString(StandardCharsets.UTF_8.toString()));
  StringWriter noneSout=new StringWriter();
  writerNoBase.write(noneSout,req(),rsp);
  assertEquals(xml,noneSout.toString());
  ByteArrayOutputStream noneBout=new ByteArrayOutputStream();
  writerNoBase.write(noneBout,req(),rsp);
  assertEquals(xml,noneBout.toString(StandardCharsets.UTF_8.toString()));
  String json="{\"content\":\"test\",\"foo\":\"bar\"}\n";
  StringWriter jsonSout=new StringWriter();
  writerJsonBase.write(jsonSout,req(),rsp);
  assertEquals(json,jsonSout.toString());
  ByteArrayOutputStream jsonBout=new ByteArrayOutputStream();
  writerJsonBase.write(jsonBout,req(),rsp);
  assertEquals(json,jsonBout.toString(StandardCharsets.UTF_8.toString()));
  ByteArrayOutputStream bytes=new ByteArrayOutputStream();
  writerBinBase.write(bytes,req(),rsp);
  BinaryResponseParser parser=new BinaryResponseParser();
  NamedList<Object> out=parser.processResponse(new ByteArrayInputStream(bytes.toByteArray()),null);
  assertEquals(RawResponseWriter.CONTENT,out.getName(0));
  assertEquals("test",out.getVal(0));
  assertEquals("foo",out.getName(1));
  assertEquals("bar",out.getVal(1));
}
