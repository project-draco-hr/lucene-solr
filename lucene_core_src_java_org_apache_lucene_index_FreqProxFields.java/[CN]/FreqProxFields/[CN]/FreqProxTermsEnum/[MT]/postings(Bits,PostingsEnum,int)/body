{
  if (liveDocs != null) {
    throw new IllegalArgumentException("liveDocs must be null");
  }
  if ((flags & PostingsEnum.FLAG_POSITIONS) >= PostingsEnum.FLAG_POSITIONS) {
    FreqProxPostingsEnum posEnum;
    if (!terms.hasProx) {
      throw new IllegalArgumentException("did not index positions");
    }
    if (!terms.hasOffsets && (flags & PostingsEnum.FLAG_OFFSETS) == PostingsEnum.FLAG_OFFSETS) {
      throw new IllegalArgumentException("did not index offsets");
    }
    if (reuse instanceof FreqProxPostingsEnum) {
      posEnum=(FreqProxPostingsEnum)reuse;
      if (posEnum.postingsArray != postingsArray) {
        posEnum=new FreqProxPostingsEnum(terms,postingsArray);
      }
    }
 else {
      posEnum=new FreqProxPostingsEnum(terms,postingsArray);
    }
    posEnum.reset(sortedTermIDs[ord]);
    return posEnum;
  }
  FreqProxDocsEnum docsEnum;
  if (!terms.hasFreq && (flags & PostingsEnum.FLAG_FREQS) != 0) {
    throw new IllegalArgumentException("did not index freq");
  }
  if (reuse instanceof FreqProxDocsEnum) {
    docsEnum=(FreqProxDocsEnum)reuse;
    if (docsEnum.postingsArray != postingsArray) {
      docsEnum=new FreqProxDocsEnum(terms,postingsArray);
    }
  }
 else {
    docsEnum=new FreqProxDocsEnum(terms,postingsArray);
  }
  docsEnum.reset(sortedTermIDs[ord]);
  return docsEnum;
}
