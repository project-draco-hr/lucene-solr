{
  boolean allRequired=true;
  boolean noneBoolean=true;
  for (int i=0; i < weights.size(); i++) {
    BooleanClause c=(BooleanClause)clauses.elementAt(i);
    if (!c.required)     allRequired=false;
    if (c.query instanceof BooleanQuery)     noneBoolean=false;
  }
  if (allRequired && noneBoolean) {
    ConjunctionScorer result=new ConjunctionScorer(getSimilarity(searcher));
    for (int i=0; i < weights.size(); i++) {
      BooleanClause c=(BooleanClause)clauses.elementAt(i);
      Weight w=(Weight)weights.elementAt(i);
      Scorer subScorer=w.scorer(reader);
      if (subScorer == null)       return null;
      result.add(subScorer);
    }
    return result;
  }
  BooleanScorer result=new BooleanScorer(getSimilarity(searcher));
  for (int i=0; i < weights.size(); i++) {
    BooleanClause c=(BooleanClause)clauses.elementAt(i);
    Weight w=(Weight)weights.elementAt(i);
    Scorer subScorer=w.scorer(reader);
    if (subScorer != null)     result.add(subScorer,c.required,c.prohibited);
 else     if (c.required)     return null;
  }
  return result;
}
