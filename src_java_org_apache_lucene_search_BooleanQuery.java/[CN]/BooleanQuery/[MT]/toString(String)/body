{
  StringBuffer buffer=new StringBuffer();
  boolean needParens=(getBoost() != 1.0) || (getMinimumNumberShouldMatch() > 0);
  if (needParens) {
    buffer.append("(");
  }
  for (int i=0; i < clauses.size(); i++) {
    BooleanClause c=(BooleanClause)clauses.elementAt(i);
    if (c.isProhibited())     buffer.append("-");
 else     if (c.isRequired())     buffer.append("+");
    Query subQuery=c.getQuery();
    if (subQuery instanceof BooleanQuery) {
      buffer.append("(");
      buffer.append(c.getQuery().toString(field));
      buffer.append(")");
    }
 else     buffer.append(c.getQuery().toString(field));
    if (i != clauses.size() - 1)     buffer.append(" ");
  }
  if (needParens) {
    buffer.append(")");
  }
  if (getMinimumNumberShouldMatch() > 0) {
    buffer.append('~');
    buffer.append(getMinimumNumberShouldMatch());
  }
  if (getBoost() != 1.0f) {
    buffer.append(ToStringUtils.boost(getBoost()));
  }
  return buffer.toString();
}
