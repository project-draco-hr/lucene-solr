{
  TopOrdValueQueue q=new TopOrdValueQueue(topN);
  float bottomValue=0;
  int ord=children[dimOrd];
  float sumValues=0;
  TopOrdValueQueue.OrdAndValue reuse=null;
  while (ord != TaxonomyReader.INVALID_ORDINAL) {
    if (values[ord] > 0) {
      sumValues+=values[ord];
      if (values[ord] > bottomValue) {
        if (reuse == null) {
          reuse=new TopOrdValueQueue.OrdAndValue();
        }
        reuse.ord=ord;
        reuse.value=values[ord];
        reuse=q.insertWithOverflow(reuse);
        if (q.size() == topN) {
          bottomValue=q.top().value;
        }
      }
    }
    ord=siblings[ord];
  }
  if (sumValues == 0) {
    return null;
  }
  FacetsConfig.DimConfig ft=facetsConfig.getDimConfig(path.components[0]);
  if (ft.hierarchical && ft.multiValued) {
    sumValues=values[dimOrd];
  }
  LabelAndValue[] labelValues=new LabelAndValue[q.size()];
  for (int i=labelValues.length - 1; i >= 0; i--) {
    TopOrdValueQueue.OrdAndValue ordAndValue=q.pop();
    FacetLabel child=taxoReader.getPath(ordAndValue.ord);
    labelValues[i]=new LabelAndValue(child.components[path.length],ordAndValue.value);
  }
  return new SimpleFacetResult(path,sumValues,labelValues);
}
