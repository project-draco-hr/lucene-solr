{
  Query matchAllDocs=new MatchAllDocsQuery();
  SolrQueryParser qp=searcher.getSchema().getSolrQueryParser(null);
  IndexReader reader=searcher.getReader();
  IndexSchema schema=searcher.getSchema();
  Map<String,TopTermQueue> ttinfo=null;
  if (numTerms > 0) {
    ttinfo=getTopTerms(reader,fields,numTerms,null);
  }
  SimpleOrderedMap<Object> finfo=new SimpleOrderedMap<Object>();
  Collection<String> fieldNames=reader.getFieldNames(IndexReader.FieldOption.ALL);
  for (  String fieldName : fieldNames) {
    if (fields != null && !fields.contains(fieldName)) {
      continue;
    }
    SimpleOrderedMap<Object> f=new SimpleOrderedMap<Object>();
    SchemaField sfield=schema.getFieldOrNull(fieldName);
    FieldType ftype=(sfield == null) ? null : sfield.getType();
    f.add("type",(ftype == null) ? null : ftype.getTypeName());
    f.add("schema",getFieldFlags(sfield));
    if (sfield != null && schema.isDynamicField(sfield.getName()) && schema.getDynamicPattern(sfield.getName()) != null) {
      f.add("dynamicBase",schema.getDynamicPattern(sfield.getName()));
    }
    if (ttinfo != null && sfield != null && sfield.indexed()) {
      Query q=qp.parse(fieldName + ":[* TO *]");
      int docCount=searcher.numDocs(q,matchAllDocs);
      if (docCount > 0) {
        DocList ds=searcher.getDocList(q,(Query)null,(Sort)null,0,1);
        try {
          Document doc=searcher.doc(ds.iterator().next());
          Fieldable fld=doc.getFieldable(fieldName);
          if (fld != null) {
            f.add("index",getFieldFlags(fld));
          }
 else {
            f.add("index","(unstored field)");
          }
        }
 catch (        Exception ex) {
          log.warn("error reading field: " + fieldName);
        }
      }
      f.add("docs",docCount);
      TopTermQueue topTerms=ttinfo.get(fieldName);
      if (topTerms != null) {
        f.add("distinct",topTerms.distinctTerms);
        f.add("topTerms",topTerms.toNamedList(searcher.getSchema()));
        f.add("histogram",topTerms.histogram.toNamedList());
      }
    }
    finfo.add(fieldName,f);
  }
  return finfo;
}
