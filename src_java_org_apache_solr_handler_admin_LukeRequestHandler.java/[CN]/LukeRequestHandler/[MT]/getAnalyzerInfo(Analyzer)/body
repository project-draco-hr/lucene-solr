{
  SimpleOrderedMap<Object> aninfo=new SimpleOrderedMap<Object>();
  aninfo.add("className",analyzer.getClass().getName());
  if (analyzer instanceof TokenizerChain) {
    SimpleOrderedMap<Object> tokenizer=new SimpleOrderedMap<Object>();
    TokenizerChain tchain=(TokenizerChain)analyzer;
    TokenizerFactory tfac=tchain.getTokenizerFactory();
    tokenizer.add("className",tfac.getClass().getName());
    tokenizer.add("args",tfac.getArgs());
    aninfo.add("tokenizer",tokenizer);
    TokenFilterFactory[] filtfacs=tchain.getTokenFilterFactories();
    List<Map<String,Object>> filters=new ArrayList<Map<String,Object>>();
    for (    TokenFilterFactory filtfac : filtfacs) {
      Map<String,Object> tok=new HashMap<String,Object>();
      tok.put("className",filtfac.getClass().getName());
      tok.put("args",filtfac.getArgs());
      filters.add(tok);
    }
    if (!filters.isEmpty()) {
      aninfo.add("filters",filters);
    }
  }
  return aninfo;
}
