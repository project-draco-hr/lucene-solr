{
  int[] histogram=histograms[k];
  if (histogram == null) {
    histogram=histograms[k]=new int[HISTOGRAM_SIZE];
  }
 else {
    Arrays.fill(histogram,0);
  }
  buildHistogram(from,to,k,histogram);
  for (int i=0; i < HISTOGRAM_SIZE; ++i) {
    if (histogram[i] == to - from) {
      if (i > 0) {
        sort(from,to,k + 1);
      }
      return;
    }
 else     if (histogram[i] != 0) {
      break;
    }
  }
  int[] startOffsets=histogram;
  int[] endOffsets=this.endOffsets;
  sumHistogram(histogram,endOffsets);
  reorder(from,to,startOffsets,endOffsets,k);
  endOffsets=startOffsets;
  for (int prev=endOffsets[0], i=1; i < HISTOGRAM_SIZE; ++i) {
    int h=endOffsets[i];
    final int bucketLen=h - prev;
    if (bucketLen > 1) {
      sort(from + prev,from + h,k + 1);
    }
    prev=h;
  }
}
