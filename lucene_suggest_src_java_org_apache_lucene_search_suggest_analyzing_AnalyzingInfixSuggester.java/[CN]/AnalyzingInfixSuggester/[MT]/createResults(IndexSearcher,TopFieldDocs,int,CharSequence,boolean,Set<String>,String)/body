{
  BinaryDocValues textDV=MultiDocValues.getBinaryValues(searcher.getIndexReader(),TEXT_FIELD_NAME);
  BinaryDocValues payloadsDV=MultiDocValues.getBinaryValues(searcher.getIndexReader(),"payloads");
  List<AtomicReaderContext> leaves=searcher.getIndexReader().leaves();
  List<LookupResult> results=new ArrayList<>();
  for (int i=0; i < hits.scoreDocs.length; i++) {
    FieldDoc fd=(FieldDoc)hits.scoreDocs[i];
    BytesRef term=textDV.get(fd.doc);
    String text=term.utf8ToString();
    long score=(Long)fd.fields[0];
    BytesRef payload;
    if (payloadsDV != null) {
      payload=BytesRef.deepCopyOf(payloadsDV.get(fd.doc));
    }
 else {
      payload=null;
    }
    int segment=ReaderUtil.subIndex(fd.doc,leaves);
    SortedSetDocValues contextsDV=leaves.get(segment).reader().getSortedSetDocValues(CONTEXTS_FIELD_NAME);
    Set<BytesRef> contexts;
    if (contextsDV != null) {
      contexts=new HashSet<BytesRef>();
      contextsDV.setDocument(fd.doc - leaves.get(segment).docBase);
      long ord;
      while ((ord=contextsDV.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {
        BytesRef context=BytesRef.deepCopyOf(contextsDV.lookupOrd(ord));
        contexts.add(context);
      }
    }
 else {
      contexts=null;
    }
    LookupResult result;
    if (doHighlight) {
      Object highlightKey=highlight(text,matchedTokens,prefixToken);
      result=new LookupResult(highlightKey.toString(),highlightKey,score,payload,contexts);
    }
 else {
      result=new LookupResult(text,score,payload,contexts);
    }
    results.add(result);
  }
  return results;
}
