{
  if (searcher == null) {
    throw new IllegalStateException("suggester was not built");
  }
  final BooleanClause.Occur occur;
  if (allTermsRequired) {
    occur=BooleanClause.Occur.MUST;
  }
 else {
    occur=BooleanClause.Occur.SHOULD;
  }
  try {
    TokenStream ts=queryAnalyzer.tokenStream("",new StringReader(key.toString()));
    ts.reset();
    final CharTermAttribute termAtt=ts.addAttribute(CharTermAttribute.class);
    final OffsetAttribute offsetAtt=ts.addAttribute(OffsetAttribute.class);
    String lastToken=null;
    BooleanQuery query=new BooleanQuery();
    int maxEndOffset=-1;
    final Set<String> matchedTokens=new HashSet<String>();
    while (ts.incrementToken()) {
      if (lastToken != null) {
        matchedTokens.add(lastToken);
        query.add(new TermQuery(new Term(TEXT_FIELD_NAME,lastToken)),occur);
      }
      lastToken=termAtt.toString();
      if (lastToken != null) {
        maxEndOffset=Math.max(maxEndOffset,offsetAtt.endOffset());
      }
    }
    ts.end();
    String prefixToken=null;
    if (lastToken != null) {
      Query lastQuery;
      if (maxEndOffset == offsetAtt.endOffset()) {
        lastQuery=getLastTokenQuery(lastToken);
        prefixToken=lastToken;
      }
 else {
        matchedTokens.add(lastToken);
        lastQuery=new TermQuery(new Term(TEXT_FIELD_NAME,lastToken));
      }
      if (lastQuery != null) {
        query.add(lastQuery,occur);
      }
    }
    ts.close();
    Query finalQuery=finishQuery(query,allTermsRequired);
    FirstNDocsCollector c=new FirstNDocsCollector(num);
    try {
      searcher.search(finalQuery,c);
    }
 catch (    FirstNDocsCollector.DoneException done) {
    }
    TopDocs hits=c.getHits();
    List<LookupResult> results=new ArrayList<LookupResult>();
    BytesRef scratch=new BytesRef();
    for (int i=0; i < hits.scoreDocs.length; i++) {
      ScoreDoc sd=hits.scoreDocs[i];
      textDV.get(sd.doc,scratch);
      String text=scratch.utf8ToString();
      long score=weightsDV.get(sd.doc);
      BytesRef payload;
      if (payloadsDV != null) {
        payload=new BytesRef();
        payloadsDV.get(sd.doc,payload);
      }
 else {
        payload=null;
      }
      LookupResult result;
      if (doHighlight) {
        Object highlightKey=highlight(text,matchedTokens,prefixToken);
        result=new LookupResult(highlightKey.toString(),highlightKey,score,payload);
      }
 else {
        result=new LookupResult(text,score,payload);
      }
      results.add(result);
    }
    return results;
  }
 catch (  IOException ioe) {
    throw new RuntimeException(ioe);
  }
}
