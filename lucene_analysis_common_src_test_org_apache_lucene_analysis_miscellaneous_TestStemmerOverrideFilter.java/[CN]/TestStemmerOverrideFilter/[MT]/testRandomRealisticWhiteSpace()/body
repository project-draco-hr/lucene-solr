{
  Map<String,String> map=new HashMap<>();
  Set<String> seen=new HashSet<>();
  int numTerms=atLeast(50);
  boolean ignoreCase=random().nextBoolean();
  for (int i=0; i < numTerms; i++) {
    String randomRealisticUnicodeString=TestUtil.randomRealisticUnicodeString(random());
    char[] charArray=randomRealisticUnicodeString.toCharArray();
    StringBuilder builder=new StringBuilder();
    for (int j=0; j < charArray.length; ) {
      int cp=Character.codePointAt(charArray,j,charArray.length);
      if (!Character.isWhitespace(cp)) {
        builder.appendCodePoint(cp);
      }
      j+=Character.charCount(cp);
    }
    if (builder.length() > 0) {
      String inputValue=builder.toString();
      String seenInputValue;
      if (ignoreCase) {
        char[] buffer=inputValue.toCharArray();
        CharacterUtils.toLowerCase(buffer,0,buffer.length);
        seenInputValue=buffer.toString();
      }
 else {
        seenInputValue=inputValue;
      }
      if (seen.contains(seenInputValue) == false) {
        seen.add(seenInputValue);
        String value=TestUtil.randomSimpleString(random());
        map.put(inputValue,value.isEmpty() ? "a" : value);
      }
    }
  }
  if (map.isEmpty()) {
    map.put("booked","books");
  }
  StemmerOverrideFilter.Builder builder=new StemmerOverrideFilter.Builder(ignoreCase);
  Set<Entry<String,String>> entrySet=map.entrySet();
  StringBuilder input=new StringBuilder();
  List<String> output=new ArrayList<>();
  for (  Entry<String,String> entry : entrySet) {
    builder.add(entry.getKey(),entry.getValue());
    if (random().nextBoolean() || output.isEmpty()) {
      input.append(entry.getKey()).append(" ");
      output.add(entry.getValue());
    }
  }
  Tokenizer tokenizer=new WhitespaceTokenizer();
  tokenizer.setReader(new StringReader(input.toString()));
  TokenStream stream=new PorterStemFilter(new StemmerOverrideFilter(tokenizer,builder.build()));
  assertTokenStreamContents(stream,output.toArray(new String[0]));
}
