{
  if (node instanceof ParametricRangeQueryNode) {
    QueryConfigHandler config=getQueryConfigHandler();
    if (config != null) {
      ParametricRangeQueryNode parametricRangeNode=(ParametricRangeQueryNode)node;
      FieldConfig fieldConfig=config.getFieldConfig(StringUtils.toString(parametricRangeNode.getField()));
      if (fieldConfig != null) {
        NumericConfig numericConfig=fieldConfig.get(ConfigurationKeys.NUMERIC_CONFIG);
        if (numericConfig != null) {
          ParametricQueryNode lower=parametricRangeNode.getLowerBound();
          ParametricQueryNode upper=parametricRangeNode.getUpperBound();
          String lowerText=lower.getTextAsString();
          String upperText=upper.getTextAsString();
          NumberFormat numberFormat=numericConfig.getNumberFormat();
          Number lowerNumber=null, upperNumber=null;
          if (lowerText.length() > 0) {
            try {
              lowerNumber=numberFormat.parse(lowerText);
            }
 catch (            ParseException e) {
              throw new QueryNodeParseException(new MessageImpl(QueryParserMessages.COULD_NOT_PARSE_NUMBER,lower.getTextAsString(),numberFormat.getClass().getCanonicalName()),e);
            }
          }
          if (upperText.length() > 0) {
            try {
              upperNumber=numberFormat.parse(upperText);
            }
 catch (            ParseException e) {
              throw new QueryNodeParseException(new MessageImpl(QueryParserMessages.COULD_NOT_PARSE_NUMBER,upper.getTextAsString(),numberFormat.getClass().getCanonicalName()),e);
            }
          }
switch (numericConfig.getType()) {
case LONG:
            if (upperNumber != null)             upperNumber=upperNumber.longValue();
          if (lowerNumber != null)           lowerNumber=lowerNumber.longValue();
        break;
case INT:
      if (upperNumber != null)       upperNumber=upperNumber.intValue();
    if (lowerNumber != null)     lowerNumber=lowerNumber.intValue();
  break;
case DOUBLE:
if (upperNumber != null) upperNumber=upperNumber.doubleValue();
if (lowerNumber != null) lowerNumber=lowerNumber.doubleValue();
break;
case FLOAT:
if (upperNumber != null) upperNumber=upperNumber.floatValue();
if (lowerNumber != null) lowerNumber=lowerNumber.floatValue();
}
NumericQueryNode lowerNode=new NumericQueryNode(parametricRangeNode.getField(),lowerNumber,numberFormat);
NumericQueryNode upperNode=new NumericQueryNode(parametricRangeNode.getField(),upperNumber,numberFormat);
boolean upperInclusive=upper == null | upper.getOperator() == CompareOperator.LE;
boolean lowerInclusive=lower == null | lower.getOperator() == CompareOperator.GE;
return new NumericRangeQueryNode(lowerNode,upperNode,lowerInclusive,upperInclusive,numericConfig);
}
}
}
}
return node;
}
