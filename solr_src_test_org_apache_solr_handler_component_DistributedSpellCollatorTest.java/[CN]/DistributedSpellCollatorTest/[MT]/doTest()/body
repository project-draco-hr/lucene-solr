{
  index(id,"1","lowerfilt","The quick red fox jumped over the lazy brown dogs.");
  index(id,"2","lowerfilt","The quack rex fox jumped over the lazy brown dogs.");
  index(id,"3","lowerfilt","The quote rex fox jumped over the lazy brown dogs.");
  index(id,"4","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"5","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"6","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"7","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"8","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"9","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"10","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"11","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"12","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"13","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"14","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  index(id,"15","lowerfilt","The quote redo fox jumped over the lazy brown dogs.");
  commit();
  handle.clear();
  handle.put("QTime",SKIPVAL);
  handle.put("timestamp",SKIPVAL);
  handle.put("maxScore",SKIPVAL);
  handle.put("response",SKIP);
  q("q","*:*",SpellCheckComponent.SPELLCHECK_BUILD,"true","qt","spellCheckCompRH","shards.qt","spellCheckCompRH");
  query("q","lowerfilt:(+quock +reb)","fl","id,lowerfilt","spellcheck","true","qt","spellCheckCompRH","shards.qt","spellCheckCompRH",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COUNT,"10",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES,"10",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"10",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"true");
  query("q","lowerfilt:(+quock +reb)","fl","id,lowerfilt","spellcheck","true","qt","spellCheckCompRH","shards.qt","spellCheckCompRH",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COUNT,"10",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES,"10",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"10",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"false");
  query("q","lowerfilt:(+quock +reb)","fl","id,lowerfilt","spellcheck","true","qt","spellCheckCompRH","shards.qt","spellCheckCompRH",SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS,"true",SpellCheckComponent.SPELLCHECK_COUNT,"10",SpellCheckComponent.SPELLCHECK_COLLATE,"true",SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES,"0",SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS,"1",SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS,"false");
  AbstractSolrTestCase.recurseDelete(testDir);
  testDir=new File(System.getProperty("java.io.tmpdir") + System.getProperty("file.separator") + getClass().getName()+ "-"+ System.currentTimeMillis());
  testDir.mkdirs();
}
