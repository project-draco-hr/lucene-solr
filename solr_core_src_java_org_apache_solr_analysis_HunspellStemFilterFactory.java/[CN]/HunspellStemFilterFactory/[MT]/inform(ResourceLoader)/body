{
  assureMatchVersion();
  String dictionaryFiles[]=args.get(PARAM_DICTIONARY).split(",");
  String affixFile=args.get(PARAM_AFFIX);
  String pic=args.get(PARAM_IGNORE_CASE);
  if (pic != null) {
    if (pic.equalsIgnoreCase(TRUE))     ignoreCase=true;
 else     if (pic.equalsIgnoreCase(FALSE))     ignoreCase=false;
 else     throw new InitializationException("Unknown value for " + PARAM_IGNORE_CASE + ": "+ pic+ ". Must be true or false");
  }
  String strictAffixParsingParam=args.get(PARAM_STRICT_AFFIX_PARSING);
  boolean strictAffixParsing=true;
  if (strictAffixParsingParam != null) {
    if (strictAffixParsingParam.equalsIgnoreCase(FALSE))     strictAffixParsing=false;
 else     if (strictAffixParsingParam.equalsIgnoreCase(TRUE))     strictAffixParsing=true;
 else     throw new InitializationException("Unknown value for " + PARAM_STRICT_AFFIX_PARSING + ": "+ strictAffixParsingParam+ ". Must be true or false");
  }
  try {
    List<InputStream> dictionaries=new ArrayList<InputStream>();
    for (    String file : dictionaryFiles) {
      dictionaries.add(loader.openResource(file));
    }
    this.dictionary=new HunspellDictionary(loader.openResource(affixFile),dictionaries,luceneMatchVersion,ignoreCase,strictAffixParsing);
  }
 catch (  Exception e) {
    throw new InitializationException("Unable to load hunspell data! [dictionary=" + args.get("dictionary") + ",affix="+ affixFile+ "]",e);
  }
}
