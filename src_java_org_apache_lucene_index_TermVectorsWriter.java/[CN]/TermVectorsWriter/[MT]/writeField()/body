{
  currentField.tvfPointer=tvf.getFilePointer();
  final int size=terms.size();
  tvf.writeVInt(size);
  boolean storePositions=currentField.storePositions;
  boolean storeOffsets=currentField.storeOffsets;
  byte bits=0x0;
  if (storePositions)   bits|=STORE_POSITIONS_WITH_TERMVECTOR;
  if (storeOffsets)   bits|=STORE_OFFSET_WITH_TERMVECTOR;
  tvf.writeByte(bits);
  String lastTermText="";
  for (int i=0; i < size; i++) {
    TVTerm term=(TVTerm)terms.elementAt(i);
    int start=StringHelper.stringDifference(lastTermText,term.termText);
    int length=term.termText.length() - start;
    tvf.writeVInt(start);
    tvf.writeVInt(length);
    tvf.writeChars(term.termText,start,length);
    tvf.writeVInt(term.freq);
    lastTermText=term.termText;
    if (storePositions) {
      if (term.positions == null)       throw new IllegalStateException("Trying to write positions that are null!");
      int position=0;
      for (int j=0; j < term.freq; j++) {
        tvf.writeVInt(term.positions[j] - position);
        position=term.positions[j];
      }
    }
    if (storeOffsets) {
      if (term.offsets == null)       throw new IllegalStateException("Trying to write offsets that are null!");
      int position=0;
      for (int j=0; j < term.freq; j++) {
        tvf.writeVInt(term.offsets[j].getStartOffset() - position);
        tvf.writeVInt(term.offsets[j].getEndOffset() - term.offsets[j].getStartOffset());
        position=term.offsets[j].getEndOffset();
      }
    }
  }
}
