{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random,dir);
  Document doc=new Document();
  doc.add(new Field("field","a b c d",Field.Store.NO,Field.Index.ANALYZED));
  w.addDocument(doc);
  IndexReader r=w.getReader();
  IndexSearcher s=new IndexSearcher(r);
  BooleanQuery q=new BooleanQuery();
  q.add(new TermQuery(new Term("field","a")),BooleanClause.Occur.SHOULD);
  float score=s.search(q,10).getMaxScore();
  Query subQuery=new TermQuery(new Term("field","not_in_index"));
  subQuery.setBoost(0);
  q.add(subQuery,BooleanClause.Occur.SHOULD);
  float score2=s.search(q,10).getMaxScore();
  assertEquals(score * .5,score2,1e-6);
  BooleanQuery qq=(BooleanQuery)q.clone();
  PhraseQuery phrase=new PhraseQuery();
  phrase.add(new Term("field","not_in_index"));
  phrase.add(new Term("field","another_not_in_index"));
  phrase.setBoost(0);
  qq.add(phrase,BooleanClause.Occur.SHOULD);
  score2=s.search(qq,10).getMaxScore();
  assertEquals(score * (1.0 / 3),score2,1e-6);
  subQuery=new TermQuery(new Term("field","b"));
  subQuery.setBoost(0);
  q.add(subQuery,BooleanClause.Occur.MUST);
  score2=s.search(q,10).getMaxScore();
  assertEquals(score * (2.0 / 3),score2,1e-6);
  PhraseQuery pq=new PhraseQuery();
  q.add(pq,BooleanClause.Occur.SHOULD);
  assertEquals(1,s.search(q,10).totalHits);
  q=new BooleanQuery();
  pq=new PhraseQuery();
  q.add(new TermQuery(new Term("field","a")),BooleanClause.Occur.SHOULD);
  q.add(pq,BooleanClause.Occur.MUST);
  assertEquals(0,s.search(q,10).totalHits);
  DisjunctionMaxQuery dmq=new DisjunctionMaxQuery(1.0f);
  dmq.add(new TermQuery(new Term("field","a")));
  dmq.add(pq);
  assertEquals(1,s.search(dmq,10).totalHits);
  r.close();
  w.close();
  dir.close();
}
