{
  CoreContainer container;
  try {
    container=new CoreContainer(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())){
{
        hostPort=System.getProperty("hostPort");
        hostContext="solr";
        defaultCoreName=CoreContainer.DEFAULT_DEFAULT_CORE_NAME;
        initShardHandler();
        initZooKeeper(System.getProperty("zkHost"),10000);
        ByteArrayInputStream is=new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes("UTF-8"));
        Config config=new Config(loader,null,new InputSource(is),null,false);
        cfg=new ConfigSolrXmlOld(config,this);
      }
    }
;
  }
 catch (  ParserConfigurationException e) {
    throw new RuntimeException(e);
  }
catch (  IOException e) {
    throw new RuntimeException(e);
  }
catch (  SAXException e) {
    throw new RuntimeException(e);
  }
  LogWatcher<?> logging=new JulWatcher("test");
  logging.registerListener(new ListenerConfig(),container);
  container.setLogging(logging);
  CoreDescriptor dcore=new CoreDescriptor(container,coreName,solrConfig.getResourceLoader().getInstanceDir());
  dcore.setConfigName(solrConfig.getResourceName());
  dcore.setSchemaName(indexSchema.getResourceName());
  SolrCore core=new SolrCore(coreName,dataDirectory,solrConfig,indexSchema,dcore);
  container.register(coreName,core,false);
  if (container.getZkController() == null && core.getUpdateHandler().getUpdateLog() != null) {
    core.getUpdateHandler().getUpdateLog().recoverFromLog();
  }
  return container;
}
