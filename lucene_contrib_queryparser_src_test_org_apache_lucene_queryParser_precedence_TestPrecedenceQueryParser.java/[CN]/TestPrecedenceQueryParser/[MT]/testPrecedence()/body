{
  PrecedenceQueryParser parser=getParser(new MockAnalyzer(random,MockTokenizer.WHITESPACE,false));
  Query query1=parser.parse("A AND B OR C AND D","field");
  Query query2=parser.parse("(A AND B) OR (C AND D)","field");
  assertEquals(query1,query2);
  query1=parser.parse("A OR B C","field");
  query2=parser.parse("(A B) C","field");
  assertEquals(query1,query2);
  query1=parser.parse("A AND B C","field");
  query2=parser.parse("(+A +B) C","field");
  assertEquals(query1,query2);
  query1=parser.parse("A AND NOT B","field");
  query2=parser.parse("+A -B","field");
  assertEquals(query1,query2);
  query1=parser.parse("A OR NOT B","field");
  query2=parser.parse("A -B","field");
  assertEquals(query1,query2);
  query1=parser.parse("A OR NOT B AND C","field");
  query2=parser.parse("A (-B +C)","field");
  assertEquals(query1,query2);
  parser.setDefaultOperator(Operator.AND);
  query1=parser.parse("A AND B OR C AND D","field");
  query2=parser.parse("(A AND B) OR (C AND D)","field");
  assertEquals(query1,query2);
  query1=parser.parse("A AND B C","field");
  query2=parser.parse("(A B) C","field");
  assertEquals(query1,query2);
  query1=parser.parse("A AND B C","field");
  query2=parser.parse("(+A +B) C","field");
  assertEquals(query1,query2);
  query1=parser.parse("A AND NOT B","field");
  query2=parser.parse("+A -B","field");
  assertEquals(query1,query2);
  query1=parser.parse("A AND NOT B OR C","field");
  query2=parser.parse("(+A -B) OR C","field");
  assertEquals(query1,query2);
}
