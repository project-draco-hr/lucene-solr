{
  BooleanQuery.Builder expected=new BooleanQuery.Builder();
  BooleanQuery.Builder inner1=new BooleanQuery.Builder();
  BooleanQuery.Builder inner2=new BooleanQuery.Builder();
  BooleanQuery.Builder inner3=new BooleanQuery.Builder();
  expected.add(new TermQuery(new Term("field","star")),Occur.MUST);
  inner1.add(new TermQuery(new Term("field","wars")),Occur.SHOULD);
  inner3.add(new TermQuery(new Term("field","empire")),Occur.SHOULD);
  inner3.add(new TermQuery(new Term("field","strikes")),Occur.SHOULD);
  inner2.add(inner3.build(),Occur.MUST);
  inner2.add(new TermQuery(new Term("field","back")),Occur.MUST);
  inner2.add(new TermQuery(new Term("field","jar+|jar")),Occur.MUST);
  inner1.add(inner2.build(),Occur.SHOULD);
  expected.add(inner1.build(),Occur.MUST);
  assertEquals(expected.build(),parse("star (wars | (empire | strikes back jar\\+\\|jar))"));
  assertEquals(expected.build(),parse("star + (wars |(empire | strikes + back jar\\+\\|jar) () )"));
  assertEquals(expected.build(),parse("star + (| wars | | --(--empire | + --strikes + | --back + jar\\+\\|jar) \"\" ) \""));
}
