{
  PhraseQuery expectedWithSlop=new PhraseQuery(2,"field","foo","bar");
  assertEquals(expectedWithSlop,parse("\"foo bar\"~2"));
  PhraseQuery expectedWithMultiDigitSlop=new PhraseQuery(10,"field","foo","bar");
  assertEquals(expectedWithMultiDigitSlop,parse("\"foo bar\"~10"));
  PhraseQuery expectedNoSlop=new PhraseQuery("field","foo","bar");
  assertEquals("Ignore trailing tilde with no slop",expectedNoSlop,parse("\"foo bar\"~"));
  assertEquals("Ignore non-numeric trailing slop",expectedNoSlop,parse("\"foo bar\"~a"));
  assertEquals("Ignore non-numeric trailing slop",expectedNoSlop,parse("\"foo bar\"~1a"));
  assertEquals("Ignore negative trailing slop",expectedNoSlop,parse("\"foo bar\"~-1"));
  PhraseQuery pq=new PhraseQuery(12,"field","foo","bar");
  BooleanQuery.Builder expectedBoolean=new BooleanQuery.Builder();
  expectedBoolean.add(pq,Occur.MUST);
  expectedBoolean.add(new TermQuery(new Term("field","baz")),Occur.MUST);
  assertEquals(expectedBoolean.build(),parse("\"foo bar\"~12 baz"));
}
