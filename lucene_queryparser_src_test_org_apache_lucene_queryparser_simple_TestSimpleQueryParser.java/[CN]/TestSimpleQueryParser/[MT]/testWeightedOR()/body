{
  Map<String,Float> weights=new LinkedHashMap<>();
  weights.put("field0",5f);
  weights.put("field1",10f);
  BooleanQuery expected=new BooleanQuery();
  BooleanQuery foo=new BooleanQuery(true);
  Query field0=new TermQuery(new Term("field0","foo"));
  field0.setBoost(5f);
  foo.add(field0,Occur.SHOULD);
  Query field1=new TermQuery(new Term("field1","foo"));
  field1.setBoost(10f);
  foo.add(field1,Occur.SHOULD);
  expected.add(foo,Occur.SHOULD);
  BooleanQuery bar=new BooleanQuery(true);
  field0=new TermQuery(new Term("field0","bar"));
  field0.setBoost(5f);
  bar.add(field0,Occur.SHOULD);
  field1=new TermQuery(new Term("field1","bar"));
  field1.setBoost(10f);
  bar.add(field1,Occur.SHOULD);
  expected.add(bar,Occur.SHOULD);
  Analyzer analyzer=new MockAnalyzer(random());
  SimpleQueryParser parser=new SimpleQueryParser(analyzer,weights);
  assertEquals(expected,parser.parse("foo|bar"));
}
