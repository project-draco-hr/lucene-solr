{
  List<Object> types=new ArrayList<>();
  types.add(null);
  types.add(true);
  types.add(false);
  types.add((byte)1);
  types.add((short)2);
  types.add((double)3);
  types.add(-4);
  types.add(4);
  types.add(42);
  types.add((long)-5);
  types.add((long)5);
  types.add((long)50);
  types.add((float)6);
  types.add(new Date(0));
  Map<Integer,Integer> map=new HashMap<>();
  map.put(1,2);
  types.add(map);
  SolrDocument doc=new SolrDocument();
  doc.addField("foo","bar");
  types.add(doc);
  SolrDocumentList solrDocs=new SolrDocumentList();
  solrDocs.setMaxScore(1.0f);
  solrDocs.setNumFound(1);
  solrDocs.setStart(0);
  solrDocs.add(0,doc);
  types.add(solrDocs);
  types.add(new byte[]{1,2,3,4,5});
  List<String> list=new ArrayList<String>();
  list.add("one");
  types.add((byte)15);
  SolrInputDocument idoc=new SolrInputDocument();
  idoc.addField("foo","bar");
  types.add(idoc);
  SolrInputDocument parentDoc=new SolrInputDocument();
  parentDoc.addField("foo","bar");
  SolrInputDocument childDoc=new SolrInputDocument();
  childDoc.addField("foo","bar");
  parentDoc.addChildDocument(childDoc);
  types.add(parentDoc);
  types.add(new EnumFieldValue(1,"foo"));
  types.add(map.entrySet().iterator().next());
  types.add((byte)(1 << 5));
  types.add("foo");
  types.add(1);
  types.add((long)2);
  SimpleOrderedMap simpleOrderedMap=new SimpleOrderedMap();
  simpleOrderedMap.add("bar","barbar");
  types.add(simpleOrderedMap);
  NamedList<String> nl=new NamedList<>();
  nl.add("foo","barbar");
  types.add(nl);
  return types;
}
