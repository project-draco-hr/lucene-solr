{
  List iteratorAsList=null;
  JavaBinCodec javabin=new JavaBinCodec(){
    @Override public List<Object> readIterator(    DataInputInputStream fis) throws IOException {
      return super.readIterator(fis);
    }
  }
;
  try {
    InputStream is=getClass().getResourceAsStream(SOLRJ_JAVABIN_BACKCOMPAT_BIN);
    List<Object> unmarshaledObj=(List<Object>)javabin.unmarshal(is);
    List<Object> matchObj=generateAllDataTypes();
    assertEquals(unmarshaledObj.size(),matchObj.size());
    for (int i=0; i < unmarshaledObj.size(); i++) {
      if (unmarshaledObj.get(i) instanceof byte[] && matchObj.get(i) instanceof byte[]) {
        byte[] b1=(byte[])unmarshaledObj.get(i);
        byte[] b2=(byte[])matchObj.get(i);
        assertTrue(Arrays.equals(b1,b2));
      }
 else {
        assertEquals(unmarshaledObj.get(i),matchObj.get(i));
      }
    }
  }
 catch (  IOException e) {
    fail(e.getMessage());
  }
}
