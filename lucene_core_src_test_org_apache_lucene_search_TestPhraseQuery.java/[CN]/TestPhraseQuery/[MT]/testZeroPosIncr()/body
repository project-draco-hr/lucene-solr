{
  Directory dir=newDirectory();
  final Token[] tokens=new Token[3];
  tokens[0]=new Token();
  tokens[0].append("a");
  tokens[0].setPositionIncrement(1);
  tokens[1]=new Token();
  tokens[1].append("aa");
  tokens[1].setPositionIncrement(0);
  tokens[2]=new Token();
  tokens[2].append("b");
  tokens[2].setPositionIncrement(1);
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  doc.add(new TextField("field",new CannedTokenStream(tokens)));
  writer.addDocument(doc);
  IndexReader r=writer.getReader();
  writer.close();
  IndexSearcher searcher=newSearcher(r);
  PhraseQuery.Builder pqBuilder=new PhraseQuery.Builder();
  pqBuilder.add(new Term("field","a"),0);
  pqBuilder.add(new Term("field","b"),1);
  assertEquals(1,searcher.search(pqBuilder.build(),1).totalHits);
  pqBuilder=new PhraseQuery.Builder();
  pqBuilder.add(new Term("field","a"),0);
  pqBuilder.add(new Term("field","aa"),0);
  pqBuilder.add(new Term("field","b"),1);
  assertEquals(1,searcher.search(pqBuilder.build(),1).totalHits);
  pqBuilder=new PhraseQuery.Builder();
  pqBuilder.add(new Term("field","a"),0);
  pqBuilder.add(new Term("field","z"),0);
  pqBuilder.add(new Term("field","b"),1);
  assertEquals(0,searcher.search(pqBuilder.build(),1).totalHits);
  r.close();
  dir.close();
}
