{
  Directory directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()).setSimilarity(new DefaultSimilarity()));
  Document doc=new Document();
  doc.add(newTextField("field","foo firstname lastname foo",Field.Store.YES));
  writer.addDocument(doc);
  Document doc2=new Document();
  doc2.add(newTextField("field","foo firstname zzz lastname foo",Field.Store.YES));
  writer.addDocument(doc2);
  Document doc3=new Document();
  doc3.add(newTextField("field","foo firstname zzz yyy lastname foo",Field.Store.YES));
  writer.addDocument(doc3);
  IndexReader reader=writer.getReader();
  writer.close();
  IndexSearcher searcher=newSearcher(reader);
  searcher.setSimilarity(new DefaultSimilarity());
  PhraseQuery query=new PhraseQuery();
  query.add(new Term("field","firstname"));
  query.add(new Term("field","lastname"));
  query.setSlop(Integer.MAX_VALUE);
  ScoreDoc[] hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  assertEquals(0.71,hits[0].score,0.01);
  assertEquals(0,hits[0].doc);
  assertEquals(0.44,hits[1].score,0.01);
  assertEquals(1,hits[1].doc);
  assertEquals(0.31,hits[2].score,0.01);
  assertEquals(2,hits[2].doc);
  QueryUtils.check(random(),query,searcher);
  reader.close();
  directory.close();
}
