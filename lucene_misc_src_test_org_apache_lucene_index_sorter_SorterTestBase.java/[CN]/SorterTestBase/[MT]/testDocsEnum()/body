{
  Bits mappedLiveDocs=randomLiveDocs(reader.maxDoc());
  TermsEnum termsEnum=reader.terms(DOCS_ENUM_FIELD).iterator(null);
  assertEquals(SeekStatus.FOUND,termsEnum.seekCeil(new BytesRef(DOCS_ENUM_TERM)));
  DocsEnum docs=termsEnum.docs(mappedLiveDocs,null);
  int doc;
  int prev=-1;
  while ((doc=docs.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {
    assertTrue("document " + doc + " marked as deleted",mappedLiveDocs == null || mappedLiveDocs.get(doc));
    assertEquals("incorrect value; doc " + doc,sortedValues[doc].intValue(),Integer.parseInt(reader.document(doc).get(ID_FIELD)));
    while (++prev < doc) {
      assertFalse("document " + prev + " not marked as deleted",mappedLiveDocs == null || mappedLiveDocs.get(prev));
    }
  }
  docs=termsEnum.docs(mappedLiveDocs,docs);
  doc=-1;
  prev=-1;
  while ((doc=docs.advance(doc + 1)) != DocIdSetIterator.NO_MORE_DOCS) {
    assertTrue("document " + doc + " marked as deleted",mappedLiveDocs == null || mappedLiveDocs.get(doc));
    assertEquals("incorrect value; doc " + doc,sortedValues[doc].intValue(),Integer.parseInt(reader.document(doc).get(ID_FIELD)));
    while (++prev < doc) {
      assertFalse("document " + prev + " not marked as deleted",mappedLiveDocs == null || mappedLiveDocs.get(prev));
    }
  }
}
