{
  TokenStream source=null;
  CharTermAttribute termAtt=null;
  boolean multipleTokens=false;
  if (part1 != null) {
    try {
      source=getAnalyzer().reusableTokenStream(field,new StringReader(part1));
      termAtt=source.addAttribute(CharTermAttribute.class);
      source.reset();
      multipleTokens=false;
      if (source.incrementToken()) {
        part1=termAtt.toString();
      }
      multipleTokens=source.incrementToken();
    }
 catch (    IOException e) {
    }
    try {
      source.end();
      source.close();
    }
 catch (    IOException e) {
    }
    if (multipleTokens) {
      throw new ParseException("Cannot build RangeQuery with analyzer " + getAnalyzer().getClass() + " - tokens were added to part1");
    }
  }
  if (part2 != null) {
    try {
      source=getAnalyzer().reusableTokenStream(field,new StringReader(part2));
      termAtt=source.addAttribute(CharTermAttribute.class);
      source.reset();
      if (source.incrementToken()) {
        part2=termAtt.toString();
      }
      multipleTokens=source.incrementToken();
    }
 catch (    IOException e) {
    }
    try {
      source.end();
      source.close();
    }
 catch (    IOException e) {
    }
    if (multipleTokens) {
      throw new ParseException("Cannot build RangeQuery with analyzer " + getAnalyzer().getClass() + " - tokens were added to part2");
    }
  }
  return super.getRangeQuery(field,part1,part2,startInclusive,endInclusive);
}
