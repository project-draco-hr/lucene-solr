{
  SpanTermQuery q1=new SpanTermQuery(new Term(FIELD,"w1"));
  SpanTermQuery q2=new SpanTermQuery(new Term(FIELD,"w2"));
  SpanTermQuery q3=new SpanTermQuery(new Term(FIELD,"w3"));
  SpanTermQuery q4=new SpanTermQuery(new Term(FIELD,"w4"));
  SpanOrQuery q5=new SpanOrQuery(q4,q3);
  SpanNearQuery q6=new SpanNearQuery(new SpanQuery[]{q2,q5},1,true);
  SpanNearQuery q7=new SpanNearQuery(new SpanQuery[]{q1,q6},1,true);
  TermCollector collector=new TermCollector();
  Spans spans=q7.createWeight(searcher,false).getSpans(searcher.getIndexReader().leaves().get(0),SpanWeight.Postings.POSITIONS);
  assertEquals(0,spans.advance(0));
  spans.nextStartPosition();
  checkCollectedTerms(spans,collector,new Term(FIELD,"w1"),new Term(FIELD,"w2"),new Term(FIELD,"w3"));
  assertEquals(3,spans.advance(3));
  spans.nextStartPosition();
  checkCollectedTerms(spans,collector,new Term(FIELD,"w1"),new Term(FIELD,"w2"),new Term(FIELD,"w4"));
  spans.nextStartPosition();
  checkCollectedTerms(spans,collector,new Term(FIELD,"w1"),new Term(FIELD,"w2"),new Term(FIELD,"w3"));
}
