{
  BytesRef utf8=new BytesRef(20);
  IntsRef utf32=new IntsRef(20);
  int[] codePoints=new int[20];
  int num=50000 * RANDOM_MULTIPLIER;
  for (int i=0; i < num; i++) {
    final String s=_TestUtil.randomUnicodeString(random);
    UnicodeUtil.UTF16toUTF8(s,0,s.length(),utf8);
    UnicodeUtil.UTF8toUTF32(utf8,utf32);
    int charUpto=0;
    int intUpto=0;
    while (charUpto < s.length()) {
      final int cp=s.codePointAt(charUpto);
      codePoints[intUpto++]=cp;
      charUpto+=Character.charCount(cp);
    }
    if (!ArrayUtil.equals(codePoints,0,utf32.ints,utf32.offset,intUpto)) {
      System.out.println("FAILED");
      for (int j=0; j < s.length(); j++) {
        System.out.println("  char[" + j + "]="+ Integer.toHexString(s.charAt(j)));
      }
      System.out.println();
      assertEquals(intUpto,utf32.length);
      for (int j=0; j < intUpto; j++) {
        System.out.println("  " + Integer.toHexString(utf32.ints[j]) + " vs "+ Integer.toHexString(codePoints[j]));
      }
      fail("mismatch");
    }
  }
}
