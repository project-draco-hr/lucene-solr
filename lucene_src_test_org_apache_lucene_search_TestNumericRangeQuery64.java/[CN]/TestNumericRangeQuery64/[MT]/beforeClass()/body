{
  directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setMaxBufferedDocs(_TestUtil.nextInt(random,50,1000)).setMergePolicy(newInOrderLogMergePolicy()));
  NumericField field8=new NumericField("field8",8,Field.Store.YES,true), field6=new NumericField("field6",6,Field.Store.YES,true), field4=new NumericField("field4",4,Field.Store.YES,true), field2=new NumericField("field2",2,Field.Store.YES,true), fieldNoTrie=new NumericField("field" + Integer.MAX_VALUE,Integer.MAX_VALUE,Field.Store.YES,true), ascfield8=new NumericField("ascfield8",8,Field.Store.NO,true), ascfield6=new NumericField("ascfield6",6,Field.Store.NO,true), ascfield4=new NumericField("ascfield4",4,Field.Store.NO,true), ascfield2=new NumericField("ascfield2",2,Field.Store.NO,true);
  Document doc=new Document();
  doc.add(field8);
  doc.add(field6);
  doc.add(field4);
  doc.add(field2);
  doc.add(fieldNoTrie);
  doc.add(ascfield8);
  doc.add(ascfield6);
  doc.add(ascfield4);
  doc.add(ascfield2);
  for (int l=0; l < noDocs; l++) {
    long val=distance * l + startOffset;
    field8.setLongValue(val);
    field6.setLongValue(val);
    field4.setLongValue(val);
    field2.setLongValue(val);
    fieldNoTrie.setLongValue(val);
    val=l - (noDocs / 2);
    ascfield8.setLongValue(val);
    ascfield6.setLongValue(val);
    ascfield4.setLongValue(val);
    ascfield2.setLongValue(val);
    writer.addDocument(doc);
  }
  reader=writer.getReader();
  searcher=new IndexSearcher(reader);
  writer.close();
}
