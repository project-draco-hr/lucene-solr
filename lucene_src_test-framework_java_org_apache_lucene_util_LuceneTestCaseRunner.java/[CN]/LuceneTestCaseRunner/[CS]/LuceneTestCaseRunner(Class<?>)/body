{
  super(clazz);
  if (!LuceneTestCase.class.isAssignableFrom(clazz)) {
    throw new UnsupportedOperationException("LuceneTestCaseRunner can only be used with LuceneTestCase.");
  }
  final boolean useNoMemoryExpensiveCodec=LuceneTestCase.useNoMemoryExpensiveCodec=clazz.isAnnotationPresent(UseNoMemoryExpensiveCodec.class);
  if (useNoMemoryExpensiveCodec) {
    System.err.println("NOTE: Using no memory expensive codecs (Memory, SimpleText) for " + clazz.getSimpleName() + ".");
  }
  Filter f=new Filter(){
    @Override public String describe(){
      return "filters according to TEST_METHOD";
    }
    @Override public boolean shouldRun(    Description d){
      return TEST_METHOD == null || d.getMethodName().equals(TEST_METHOD);
    }
  }
;
  try {
    f.apply(this);
  }
 catch (  NoTestsRemainException e) {
    throw new RuntimeException(e);
  }
}
