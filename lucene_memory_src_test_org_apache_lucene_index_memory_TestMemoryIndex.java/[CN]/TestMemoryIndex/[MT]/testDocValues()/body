{
  Document doc=new Document();
  doc.add(new NumericDocValuesField("numeric",29L));
  doc.add(new SortedNumericDocValuesField("sorted_numeric",33L));
  doc.add(new SortedNumericDocValuesField("sorted_numeric",32L));
  doc.add(new SortedNumericDocValuesField("sorted_numeric",32L));
  doc.add(new SortedNumericDocValuesField("sorted_numeric",31L));
  doc.add(new SortedNumericDocValuesField("sorted_numeric",30L));
  doc.add(new BinaryDocValuesField("binary",new BytesRef("a")));
  doc.add(new SortedDocValuesField("sorted",new BytesRef("b")));
  doc.add(new SortedSetDocValuesField("sorted_set",new BytesRef("f")));
  doc.add(new SortedSetDocValuesField("sorted_set",new BytesRef("d")));
  doc.add(new SortedSetDocValuesField("sorted_set",new BytesRef("d")));
  doc.add(new SortedSetDocValuesField("sorted_set",new BytesRef("c")));
  MemoryIndex mi=MemoryIndex.fromDocument(doc,analyzer);
  LeafReader leafReader=mi.createSearcher().getIndexReader().leaves().get(0).reader();
  NumericDocValues numericDocValues=leafReader.getNumericDocValues("numeric");
  assertEquals(0,numericDocValues.nextDoc());
  assertEquals(29L,numericDocValues.longValue());
  SortedNumericDocValues sortedNumericDocValues=leafReader.getSortedNumericDocValues("sorted_numeric");
  assertEquals(0,sortedNumericDocValues.nextDoc());
  assertEquals(5,sortedNumericDocValues.docValueCount());
  assertEquals(30L,sortedNumericDocValues.nextValue());
  assertEquals(31L,sortedNumericDocValues.nextValue());
  assertEquals(32L,sortedNumericDocValues.nextValue());
  assertEquals(32L,sortedNumericDocValues.nextValue());
  assertEquals(33L,sortedNumericDocValues.nextValue());
  BinaryDocValues binaryDocValues=leafReader.getBinaryDocValues("binary");
  assertEquals(0,binaryDocValues.nextDoc());
  assertEquals("a",binaryDocValues.binaryValue().utf8ToString());
  SortedDocValues sortedDocValues=leafReader.getSortedDocValues("sorted");
  assertEquals(0,sortedDocValues.nextDoc());
  assertEquals("b",sortedDocValues.binaryValue().utf8ToString());
  assertEquals(0,sortedDocValues.ordValue());
  assertEquals("b",sortedDocValues.lookupOrd(0).utf8ToString());
  SortedSetDocValues sortedSetDocValues=leafReader.getSortedSetDocValues("sorted_set");
  assertEquals(3,sortedSetDocValues.getValueCount());
  assertEquals(0,sortedSetDocValues.nextDoc());
  assertEquals(0L,sortedSetDocValues.nextOrd());
  assertEquals(1L,sortedSetDocValues.nextOrd());
  assertEquals(2L,sortedSetDocValues.nextOrd());
  assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSetDocValues.nextOrd());
  assertEquals("c",sortedSetDocValues.lookupOrd(0L).utf8ToString());
  assertEquals("d",sortedSetDocValues.lookupOrd(1L).utf8ToString());
  assertEquals("f",sortedSetDocValues.lookupOrd(2L).utf8ToString());
}
