{
  Document doc=new Document();
  doc.add(new IntPoint("ints",0,-100));
  doc.add(new IntPoint("ints",20,20));
  doc.add(new IntPoint("ints",100,-100));
  doc.add(new LongPoint("longs",0L,-100L));
  doc.add(new LongPoint("longs",20L,20L));
  doc.add(new LongPoint("longs",100L,-100L));
  doc.add(new FloatPoint("floats",0F,-100F));
  doc.add(new FloatPoint("floats",20F,20F));
  doc.add(new FloatPoint("floats",100F,-100F));
  doc.add(new DoublePoint("doubles",0D,-100D));
  doc.add(new DoublePoint("doubles",20D,20D));
  doc.add(new DoublePoint("doubles",100D,-100D));
  MemoryIndex mi=MemoryIndex.fromDocument(doc,analyzer);
  IndexSearcher s=mi.createSearcher();
  assertEquals(1,s.count(IntPoint.newRangeQuery("ints",new int[]{10,10},new int[]{30,30})));
  assertEquals(1,s.count(LongPoint.newRangeQuery("longs",new long[]{10L,10L},new long[]{30L,30L})));
  assertEquals(1,s.count(FloatPoint.newRangeQuery("floats",new float[]{10F,10F},new float[]{30F,30F})));
  assertEquals(1,s.count(DoublePoint.newRangeQuery("doubles",new double[]{10D,10D},new double[]{30D,30D})));
}
