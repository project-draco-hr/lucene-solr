{
  MemoryIndex mi=new MemoryIndex();
  mi.addField("f1","a long text field that contains many many terms",analyzer);
  IndexSearcher searcher=mi.createSearcher();
  LeafReader reader=(LeafReader)searcher.getIndexReader();
  float n1=reader.getNormValues("f1").get(0);
  mi.setSimilarity(new DefaultSimilarity(){
    @Override public float lengthNorm(    FieldInvertState state){
      return 74;
    }
  }
);
  float n2=reader.getNormValues("f1").get(0);
  assertTrue(n1 != n2);
  TestUtil.checkReader(reader);
}
