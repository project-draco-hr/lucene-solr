{
  Directory dir=new MockDirectoryWrapper(new Random(random.nextLong()),new RAMDirectory());
  IndexWriterConfig iwc=new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random));
  iwc.setMergeScheduler(new SerialMergeScheduler());
  iwc.setMaxBufferedDocs(5000);
  iwc.setRAMBufferSizeMB(100);
  RangeMergePolicy fsmp=new RangeMergePolicy(false);
  iwc.setMergePolicy(fsmp);
  IndexWriter writer=new IndexWriter(dir,iwc);
  writer.setInfoStream(VERBOSE ? System.out : null);
  for (int x=0; x < 5; x++) {
    writer.addDocument(TestIndexWriterReader.createDocument(x,"1",2));
  }
  writer.commit();
  assertEquals(1,writer.segmentInfos.size());
  for (int x=5; x < 10; x++) {
    writer.addDocument(TestIndexWriterReader.createDocument(x,"2",2));
  }
  writer.commit();
  assertEquals(2,writer.segmentInfos.size());
  for (int x=10; x < 15; x++) {
    writer.addDocument(TestIndexWriterReader.createDocument(x,"3",2));
  }
  writer.deleteDocuments(new Term("id","1"));
  writer.deleteDocuments(new Term("id","11"));
  writer.flush(false,false);
  assertTrue(writer.bufferedDeletesStream.any());
  IndexReader r1=writer.getReader();
  assertFalse(writer.bufferedDeletesStream.any());
  r1.close();
  writer.deleteDocuments(new Term("id","2"));
  writer.flush(false,false);
  fsmp.doMerge=true;
  fsmp.start=0;
  fsmp.length=2;
  writer.maybeMerge();
  assertEquals(2,writer.segmentInfos.size());
  IndexReader r2=writer.getReader();
  int[] id2docs=toDocsArray(new Term("id","2"),null,r2);
  assertTrue(id2docs == null);
  r2.close();
  writer.close();
  dir.close();
}
