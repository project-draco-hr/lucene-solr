{
  List<String> cmd=new ArrayList<>();
  cmd.add(System.getProperty("java.home") + System.getProperty("file.separator") + "bin"+ System.getProperty("file.separator")+ "java");
  cmd.add("-Xmx512m");
  cmd.add("-Dtests.crashmode=true");
  cmd.add("-Dtests.nightly=true");
  cmd.add("-DtempDir=" + tempDir);
  cmd.add("-Dtests.seed=" + SeedUtils.formatSeed(random().nextLong()));
  cmd.add("-ea");
  cmd.add("-cp");
  cmd.add(System.getProperty("java.class.path"));
  cmd.add("org.junit.runner.JUnitCore");
  cmd.add(getClass().getName());
  ProcessBuilder pb=new ProcessBuilder(cmd);
  pb.directory(tempDir.toFile());
  pb.redirectErrorStream(true);
  Process p=pb.start();
  PrintStream childOut=System.err;
  Thread stdoutPumper=ThreadPumper.start(p.getInputStream(),childOut);
  Thread stderrPumper=ThreadPumper.start(p.getErrorStream(),childOut);
  if (VERBOSE)   childOut.println(">>> Begin subprocess output");
  p.waitFor();
  stdoutPumper.join();
  stderrPumper.join();
  if (VERBOSE)   childOut.println("<<< End subprocess output");
}
