{
  List<String> cmd=new ArrayList<String>();
  cmd.add(System.getProperty("java.home") + System.getProperty("file.separator") + "bin"+ System.getProperty("file.separator")+ "java");
  cmd.add("-Xmx512m");
  cmd.add("-Dtests.crashmode=true");
  cmd.add("-Dtests.nightly=true");
  cmd.add("-DtempDir=" + tempDir.getPath());
  cmd.add("-Dtests.seed=" + SeedUtils.formatSeed(random().nextLong()));
  cmd.add("-ea");
  cmd.add("-cp");
  cmd.add(System.getProperty("java.class.path"));
  cmd.add("org.junit.runner.JUnitCore");
  cmd.add(getClass().getName());
  ProcessBuilder pb=new ProcessBuilder(cmd);
  pb.directory(tempDir);
  pb.redirectErrorStream(true);
  Process p=pb.start();
  InputStream is=p.getInputStream();
  BufferedInputStream isl=new BufferedInputStream(is);
  byte buffer[]=new byte[1024];
  int len=0;
  if (VERBOSE)   System.err.println(">>> Begin subprocess output");
  while ((len=isl.read(buffer)) != -1) {
    if (VERBOSE) {
      System.err.write(buffer,0,len);
    }
  }
  if (VERBOSE)   System.err.println("<<< End subprocess output");
  p.waitFor();
}
