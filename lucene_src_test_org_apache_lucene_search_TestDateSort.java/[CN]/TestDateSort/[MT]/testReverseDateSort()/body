{
  IndexSearcher searcher=new IndexSearcher(reader);
  Sort sort=new Sort(new SortField(DATE_TIME_FIELD,SortField.STRING,true));
  QueryParser queryParser=new QueryParser(TEST_VERSION_CURRENT,TEXT_FIELD,new MockAnalyzer());
  Query query=queryParser.parse("Document");
  String[] actualOrder=new String[5];
  ScoreDoc[] hits=searcher.search(query,null,1000,sort).scoreDocs;
  for (int i=0; i < hits.length; i++) {
    Document document=searcher.doc(hits[i].doc);
    String text=document.get(TEXT_FIELD);
    actualOrder[i]=text;
  }
  searcher.close();
  String[] expectedOrder=new String[5];
  expectedOrder[0]="Document 5";
  expectedOrder[1]="Document 4";
  expectedOrder[2]="Document 3";
  expectedOrder[3]="Document 2";
  expectedOrder[4]="Document 1";
  assertEquals(Arrays.asList(expectedOrder),Arrays.asList(actualOrder));
}
