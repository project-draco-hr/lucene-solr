{
  BytesRef lake=new BytesRef("lake");
  BytesRef star=new BytesRef("star");
  BytesRef ret=new BytesRef("ret");
  Input keys[]=new Input[]{new Input("top of the lake",18,lake),new Input("star wars: episode v - the empire strikes back",12,star),new Input("the returned",10,ret)};
  Path tempDir=createTempDir("BlendedInfixSuggesterTest");
  Analyzer a=new StandardAnalyzer(CharArraySet.EMPTY_SET);
  BlendedInfixSuggester suggester=new BlendedInfixSuggester(newFSDirectory(tempDir),a,a,AnalyzingInfixSuggester.DEFAULT_MIN_PREFIX_CHARS,BlendedInfixSuggester.BlenderType.POSITION_RECIPROCAL,1,false);
  suggester.build(new InputArrayIterator(keys));
  assertEquals(2,suggester.lookup("the",null,2,true,false).size());
  long w0=getInResults(suggester,"the",ret,2);
  assertTrue(w0 < 0);
  assertEquals(3,suggester.lookup("the",null,3,true,false).size());
  long w1=getInResults(suggester,"the",ret,3);
  assertTrue(w1 > 0);
  suggester.close();
  suggester=new BlendedInfixSuggester(newFSDirectory(tempDir),a,a,AnalyzingInfixSuggester.DEFAULT_MIN_PREFIX_CHARS,BlendedInfixSuggester.BlenderType.POSITION_RECIPROCAL,2,false);
  suggester.build(new InputArrayIterator(keys));
  long w2=getInResults(suggester,"the",ret,2);
  assertTrue(w2 > 0);
  long w3=getInResults(suggester,"the",star,2);
  assertTrue(w3 < 0);
  suggester.close();
}
