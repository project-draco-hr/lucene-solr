{
  Input keys[]=new Input[]{new Input("lend me your ears",1),new Input("as you sow so shall you reap",1)};
  Path tempDir=createTempDir("BlendedInfixSuggesterTest");
  Analyzer a=new StandardAnalyzer(CharArraySet.EMPTY_SET);
  BlendedInfixSuggester suggester=new BlendedInfixSuggester(newFSDirectory(tempDir),a);
  suggester.build(new InputArrayIterator(keys));
  String term="you";
  List<Lookup.LookupResult> responses=suggester.lookup(term,false,1);
  assertEquals(1,responses.size());
  responses=suggester.lookup(term,false,2);
  assertEquals(2,responses.size());
  responses=suggester.lookup(term,1,false,false);
  assertEquals(1,responses.size());
  responses=suggester.lookup(term,2,false,false);
  assertEquals(2,responses.size());
  responses=suggester.lookup(term,(Map)null,1,false,false);
  assertEquals(1,responses.size());
  responses=suggester.lookup(term,(Map)null,2,false,false);
  assertEquals(2,responses.size());
  responses=suggester.lookup(term,(Set)null,1,false,false);
  assertEquals(1,responses.size());
  responses=suggester.lookup(term,(Set)null,2,false,false);
  assertEquals(2,responses.size());
  responses=suggester.lookup(term,null,false,1);
  assertEquals(1,responses.size());
  responses=suggester.lookup(term,null,false,2);
  assertEquals(2,responses.size());
  responses=suggester.lookup(term,(BooleanQuery)null,1,false,false);
  assertEquals(1,responses.size());
  responses=suggester.lookup(term,(BooleanQuery)null,2,false,false);
  assertEquals(2,responses.size());
  suggester.close();
}
