{
  this.numTerms=numTerms;
  currentTerm=-1;
  tvf.seek(tvfFPStart);
  final byte bits=tvf.readByte();
  storePositions=(bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;
  storeOffsets=(bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;
  this.unicodeSortOrder=unicodeSortOrder;
  readVectors();
  if (unicodeSortOrder) {
    Arrays.sort(termAndPostings,new Comparator<TermAndPostings>(){
      public int compare(      TermAndPostings left,      TermAndPostings right){
        return left.term.compareTo(right.term);
      }
    }
);
  }
}
