{
  boolean testsSuccesful=false;
  try {
    handle.clear();
    handle.put("QTime",SKIPVAL);
    handle.put("timestamp",SKIPVAL);
    for (int j=1; j < sliceCount; j++) {
      zkStateReader.getLeaderProps(DEFAULT_COLLECTION,"shard" + j,10000);
    }
    waitForRecoveriesToFinish(false);
    del("*:*");
    List<StopableThread> threads=new ArrayList<StopableThread>();
    int threadCount=1;
    int i=0;
    for (i=0; i < threadCount; i++) {
      StopableIndexingThread indexThread=new StopableIndexingThread(i * 50000,true);
      threads.add(indexThread);
      indexThread.start();
    }
    threadCount=1;
    i=0;
    for (i=0; i < threadCount; i++) {
      StopableSearchThread searchThread=new StopableSearchThread();
      threads.add(searchThread);
      searchThread.start();
    }
    FullThrottleStopableIndexingThread ftIndexThread=new FullThrottleStopableIndexingThread(clients,i * 50000,true);
    threads.add(ftIndexThread);
    ftIndexThread.start();
    chaosMonkey.startTheMonkey(true,1500);
    int runLength=atLeast(BASE_RUN_LENGTH);
    try {
      Thread.sleep(runLength);
    }
  finally {
      chaosMonkey.stopTheMonkey();
    }
    for (    StopableThread indexThread : threads) {
      indexThread.safeStop();
    }
    for (    StopableThread indexThread : threads) {
      indexThread.join();
    }
    for (    StopableThread indexThread : threads) {
      if (indexThread instanceof StopableIndexingThread && !(indexThread instanceof FullThrottleStopableIndexingThread)) {
        assertEquals(0,((StopableIndexingThread)indexThread).getFails());
      }
    }
    Thread.sleep(2000);
    waitForThingsToLevelOut(Integer.MAX_VALUE);
    for (int j=1; j < sliceCount; j++) {
      zkStateReader.getLeaderProps(DEFAULT_COLLECTION,"shard" + j,10000);
    }
    commit();
    zkStateReader.updateClusterState(true);
    assertTrue(zkStateReader.getClusterState().getLiveNodes().size() > 0);
    checkShardConsistency(false,true);
    long ctrlDocs=controlClient.query(new SolrQuery("*:*")).getResults().getNumFound();
    long cloudClientDocs=cloudClient.query(new SolrQuery("*:*")).getResults().getNumFound();
    assertTrue("Found " + ctrlDocs + " control docs",cloudClientDocs > 0);
    if (VERBOSE)     System.out.println("control docs:" + controlClient.query(new SolrQuery("*:*")).getResults().getNumFound() + "\n\n");
    testsSuccesful=true;
  }
  finally {
    if (!testsSuccesful) {
      printLayout();
    }
  }
}
