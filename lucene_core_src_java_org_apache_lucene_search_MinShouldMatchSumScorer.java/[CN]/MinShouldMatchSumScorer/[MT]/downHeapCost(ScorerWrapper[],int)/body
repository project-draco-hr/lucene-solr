{
  int i=0;
  final ScorerWrapper node=heap[0];
  int j=leftNode(i);
  if (j < size) {
    int k=rightNode(j);
    if (k < size && heap[k].cost < heap[j].cost) {
      j=k;
    }
    if (heap[j].cost < node.cost) {
      do {
        heap[i]=heap[j];
        i=j;
        j=leftNode(i);
        k=rightNode(j);
        if (k < size && heap[k].cost < heap[j].cost) {
          j=k;
        }
      }
 while (j < size && heap[j].cost < node.cost);
      heap[i]=node;
    }
  }
}
