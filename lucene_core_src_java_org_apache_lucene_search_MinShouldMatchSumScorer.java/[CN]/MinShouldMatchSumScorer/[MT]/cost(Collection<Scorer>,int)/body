{
  final PriorityQueue<Scorer> pq=new PriorityQueue<Scorer>(scorers.size() - minShouldMatch + 1){
    @Override protected boolean lessThan(    Scorer a,    Scorer b){
      return a.cost() > b.cost();
    }
  }
;
  for (  Scorer scorer : scorers) {
    pq.insertWithOverflow(scorer);
  }
  long cost=0;
  for (Scorer scorer=pq.pop(); scorer != null; scorer=pq.pop()) {
    cost+=scorer.cost();
  }
  return cost;
}
