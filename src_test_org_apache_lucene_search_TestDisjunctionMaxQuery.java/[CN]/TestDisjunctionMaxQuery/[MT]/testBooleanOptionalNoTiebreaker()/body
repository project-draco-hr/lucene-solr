{
  BooleanQuery q=new BooleanQuery();
{
    DisjunctionMaxQuery q1=new DisjunctionMaxQuery(0.0f);
    q1.add(tq("hed","albino"));
    q1.add(tq("dek","albino"));
    q.add(q1,BooleanClause.Occur.SHOULD);
  }
{
    DisjunctionMaxQuery q2=new DisjunctionMaxQuery(0.0f);
    q2.add(tq("hed","elephant"));
    q2.add(tq("dek","elephant"));
    q.add(q2,BooleanClause.Occur.SHOULD);
  }
  QueryUtils.check(q,s);
  Hits h=s.search(q);
  try {
    assertEquals("4 docs should match " + q.toString(),4,h.length());
    float score=h.score(0);
    for (int i=1; i < h.length() - 1; i++) {
      assertEquals("score #" + i + " is not the same",score,h.score(i),SCORE_COMP_THRESH);
    }
    assertEquals("wrong last","d1",h.doc(h.length() - 1).get("id"));
    float score1=h.score(h.length() - 1);
    assertTrue("d1 does not have worse score then others: " + score + " >? "+ score1,score > score1);
  }
 catch (  Error e) {
    printHits("testBooleanOptionalNoTiebreaker",h);
    throw e;
  }
}
