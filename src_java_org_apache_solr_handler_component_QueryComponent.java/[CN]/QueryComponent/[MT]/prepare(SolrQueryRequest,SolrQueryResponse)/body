{
  ResponseBuilder builder=SearchHandler.getResponseBuilder(req);
  SolrParams params=req.getParams();
  String fl=params.get(CommonParams.FL);
  int fieldFlags=0;
  if (fl != null) {
    fieldFlags|=SolrPluginUtils.setReturnFields(fl,rsp);
  }
  builder.setFieldFlags(fieldFlags);
  String defType=params.get(QueryParsing.DEFTYPE);
  defType=defType == null ? OldLuceneQParserPlugin.NAME : defType;
  if (builder.getQueryString() == null) {
    builder.setQueryString(params.get(CommonParams.Q));
  }
  QParser parser=QParser.getParser(builder.getQueryString(),defType,req);
  builder.setQuery(parser.getQuery());
  builder.setSortSpec(parser.getSort(true));
  String[] fqs=req.getParams().getParams(org.apache.solr.common.params.CommonParams.FQ);
  if (fqs != null && fqs.length != 0) {
    List<Query> filters=builder.getFilters();
    if (filters == null) {
      filters=new ArrayList<Query>();
      builder.setFilters(filters);
    }
    for (    String fq : fqs) {
      if (fq != null && fq.trim().length() != 0) {
        QParser fqp=QParser.getParser(fq,null,req);
        filters.add(fqp.getQuery());
      }
    }
  }
}
