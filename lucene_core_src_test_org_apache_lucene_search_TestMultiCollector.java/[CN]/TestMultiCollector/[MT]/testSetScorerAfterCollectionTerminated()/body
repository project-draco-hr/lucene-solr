{
  Collector collector1=new TotalHitCountCollector();
  Collector collector2=new TotalHitCountCollector();
  AtomicBoolean setScorerCalled1=new AtomicBoolean();
  collector1=new SetScorerCollector(collector1,setScorerCalled1);
  AtomicBoolean setScorerCalled2=new AtomicBoolean();
  collector2=new SetScorerCollector(collector2,setScorerCalled2);
  collector1=new TerminateAfterCollector(collector1,1);
  collector2=new TerminateAfterCollector(collector2,2);
  Scorer scorer=new FakeScorer();
  List<Collector> collectors=Arrays.asList(collector1,collector2);
  Collections.shuffle(collectors,random());
  Collector collector=MultiCollector.wrap(collectors);
  LeafCollector leafCollector=collector.getLeafCollector(null);
  leafCollector.setScorer(scorer);
  assertTrue(setScorerCalled1.get());
  assertTrue(setScorerCalled2.get());
  leafCollector.collect(0);
  leafCollector.collect(1);
  setScorerCalled1.set(false);
  setScorerCalled2.set(false);
  leafCollector.setScorer(scorer);
  assertFalse(setScorerCalled1.get());
  assertTrue(setScorerCalled2.get());
  try {
    leafCollector.collect(1);
    fail();
  }
 catch (  CollectionTerminatedException e) {
  }
  setScorerCalled1.set(false);
  setScorerCalled2.set(false);
  leafCollector.setScorer(scorer);
  assertFalse(setScorerCalled1.get());
  assertFalse(setScorerCalled2.get());
}
