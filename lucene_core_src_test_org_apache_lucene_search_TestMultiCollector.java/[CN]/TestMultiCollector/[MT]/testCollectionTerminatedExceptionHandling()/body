{
  final int iters=atLeast(3);
  for (int iter=0; iter < iters; ++iter) {
    Directory dir=newDirectory();
    RandomIndexWriter w=new RandomIndexWriter(random(),dir);
    final int numDocs=TestUtil.nextInt(random(),100,1000);
    final Document doc=new Document();
    for (int i=0; i < numDocs; ++i) {
      w.addDocument(doc);
    }
    final IndexReader reader=w.getReader();
    w.close();
    final IndexSearcher searcher=newSearcher(reader);
    Map<TotalHitCountCollector,Integer> expectedCounts=new HashMap<>();
    List<Collector> collectors=new ArrayList<>();
    final int numCollectors=TestUtil.nextInt(random(),1,5);
    for (int i=0; i < numCollectors; ++i) {
      final int terminateAfter=random().nextInt(numDocs + 10);
      final int expectedCount=terminateAfter > numDocs ? numDocs : terminateAfter;
      TotalHitCountCollector collector=new TotalHitCountCollector();
      expectedCounts.put(collector,expectedCount);
      collectors.add(new TerminateAfterCollector(collector,terminateAfter));
    }
    searcher.search(new MatchAllDocsQuery(),MultiCollector.wrap(collectors));
    for (    Map.Entry<TotalHitCountCollector,Integer> expectedCount : expectedCounts.entrySet()) {
      assertEquals(expectedCount.getValue().intValue(),expectedCount.getKey().getTotalHits());
    }
    reader.close();
    dir.close();
  }
}
