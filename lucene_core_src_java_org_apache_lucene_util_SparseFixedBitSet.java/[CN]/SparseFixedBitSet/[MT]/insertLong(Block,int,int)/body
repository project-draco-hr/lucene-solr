{
  block.index|=1L << i64;
  final int o=Long.bitCount(block.index & ((1L << i64) - 1));
  if (block.bits[block.bits.length - 1] == 0) {
    System.arraycopy(block.bits,o,block.bits,o + 1,block.bits.length - o - 1);
    block.bits[o]=1L << i;
  }
 else {
    final int newSize=oversize(block.bits.length + 1);
    final long[] newBitArray=new long[newSize];
    System.arraycopy(block.bits,0,newBitArray,0,o);
    newBitArray[o]=1L << i;
    System.arraycopy(block.bits,o,newBitArray,o + 1,block.bits.length - o);
    block.bits=newBitArray;
    ramBytesUsed+=(newSize - block.bits.length) * RamUsageEstimator.NUM_BYTES_LONG;
  }
  ++nonZeroLongCount;
}
