{
  final List<MultiDocValues.DocValuesIndex> docValuesIndex=new ArrayList<MultiDocValues.DocValuesIndex>();
  int docsUpto=0;
  Values type=null;
  final int numEnums=enumWithSlices.length;
  for (int i=0; i < numEnums; i++) {
    FieldsEnumWithSlice withSlice=enumWithSlices[i];
    Slice slice=withSlice.slice;
    final DocValues values=withSlice.fields.docValues();
    final int start=slice.start;
    final int length=slice.length;
    if (values != null) {
      if (docsUpto != start) {
        type=values.type();
        docValuesIndex.add(new MultiDocValues.DocValuesIndex(new MultiDocValues.DummyDocValues(start,type),docsUpto,start - docsUpto));
      }
      docValuesIndex.add(new MultiDocValues.DocValuesIndex(values,start,length));
      docsUpto=start + length;
    }
 else     if (i + 1 == numEnums && !docValuesIndex.isEmpty()) {
      docValuesIndex.add(new MultiDocValues.DocValuesIndex(new MultiDocValues.DummyDocValues(start,type),docsUpto,start - docsUpto));
    }
  }
  return docValuesIndex.isEmpty() ? null : docValues.reset(docValuesIndex.toArray(MultiDocValues.DocValuesIndex.EMPTY_ARRAY));
}
