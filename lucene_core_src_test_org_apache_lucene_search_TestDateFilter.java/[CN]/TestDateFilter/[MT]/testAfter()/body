{
  Directory indexStore=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),indexStore);
  long now=System.currentTimeMillis();
  Document doc=new Document();
  doc.add(newStringField("datefield",DateTools.timeToString(now + 888888,DateTools.Resolution.MILLISECOND),Field.Store.YES));
  doc.add(newTextField("body","Today is a very sunny day in New York City",Field.Store.YES));
  writer.addDocument(doc);
  IndexReader reader=writer.getReader();
  writer.close();
  IndexSearcher searcher=newSearcher(reader);
  Filter df1=new QueryWrapperFilter(TermRangeQuery.newStringRange("datefield",DateTools.timeToString(now,DateTools.Resolution.MILLISECOND),DateTools.timeToString(now + 999999,DateTools.Resolution.MILLISECOND),true,false));
  Filter df2=new QueryWrapperFilter(TermRangeQuery.newStringRange("datefield",DateTools.timeToString(now + 999999,DateTools.Resolution.MILLISECOND),DateTools.timeToString(now + 999999999,DateTools.Resolution.MILLISECOND),false,true));
  Query query1=new TermQuery(new Term("body","NoMatchForThis"));
  Query query2=new TermQuery(new Term("body","sunny"));
  ScoreDoc[] result;
  result=searcher.search(query1,1000).scoreDocs;
  assertEquals(0,result.length);
  result=searcher.search(query2,1000).scoreDocs;
  assertEquals(1,result.length);
  Query filtered=new BooleanQuery.Builder().add(query1,Occur.MUST).add(df1,Occur.FILTER).build();
  result=searcher.search(filtered,1000).scoreDocs;
  assertEquals(0,result.length);
  filtered=new BooleanQuery.Builder().add(query1,Occur.MUST).add(df2,Occur.FILTER).build();
  result=searcher.search(filtered,1000).scoreDocs;
  assertEquals(0,result.length);
  filtered=new BooleanQuery.Builder().add(query2,Occur.MUST).add(df1,Occur.FILTER).build();
  result=searcher.search(filtered,1000).scoreDocs;
  assertEquals(1,result.length);
  filtered=new BooleanQuery.Builder().add(query2,Occur.MUST).add(df2,Occur.FILTER).build();
  result=searcher.search(filtered,1000).scoreDocs;
  assertEquals(0,result.length);
  reader.close();
  indexStore.close();
}
