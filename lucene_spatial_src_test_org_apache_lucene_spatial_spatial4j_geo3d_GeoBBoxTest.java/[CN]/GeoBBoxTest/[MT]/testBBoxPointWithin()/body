{
  GeoBBox box;
  GeoPoint gp;
  box=GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE,0.0,-Math.PI * 0.25,-1.0,1.0);
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,0.0);
  assertTrue(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,0.1,0.0);
  assertFalse(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-Math.PI * 0.5,0.0);
  assertFalse(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,1.1);
  assertFalse(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,-1.1);
  assertFalse(box.isWithin(gp));
  box=GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE,0.0,-Math.PI * 0.25,Math.PI - 1.0,-Math.PI + 1.0);
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,-Math.PI);
  assertTrue(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,0.1,-Math.PI);
  assertFalse(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-Math.PI * 0.5,-Math.PI);
  assertFalse(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,-Math.PI + 1.1);
  assertFalse(box.isWithin(gp));
  box=GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE,0.0,-Math.PI * 0.25,-Math.PI,Math.PI);
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,-Math.PI);
  assertTrue(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,0.1,-Math.PI);
  assertFalse(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-Math.PI * 0.5,-Math.PI);
  assertFalse(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,-Math.PI + 1.1);
  assertTrue(box.isWithin(gp));
  box=GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE,Math.PI * 0.5,-Math.PI * 0.5,-Math.PI,Math.PI);
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,-Math.PI);
  assertTrue(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,0.1,-Math.PI);
  assertTrue(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-Math.PI * 0.5,-Math.PI);
  assertTrue(box.isWithin(gp));
  gp=new GeoPoint(PlanetModel.SPHERE,-0.1,-Math.PI + 1.1);
  assertTrue(box.isWithin(gp));
}
