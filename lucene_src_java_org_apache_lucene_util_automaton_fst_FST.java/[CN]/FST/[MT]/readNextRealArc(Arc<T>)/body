{
  final BytesReader in;
  if (arc.bytesPerArc != 0) {
    arc.arcIdx++;
    in=getBytesReader(arc.posArcsStart - arc.arcIdx * arc.bytesPerArc);
  }
 else {
    in=getBytesReader(arc.nextArc);
  }
  arc.flags=in.readByte();
  arc.label=readLabel(in);
  if (arc.flag(BIT_ARC_HAS_OUTPUT)) {
    arc.output=outputs.read(in);
  }
 else {
    arc.output=outputs.getNoOutput();
  }
  if (arc.flag(BIT_ARC_HAS_FINAL_OUTPUT)) {
    arc.nextFinalOutput=outputs.read(in);
  }
 else {
    arc.nextFinalOutput=outputs.getNoOutput();
  }
  if (arc.flag(BIT_STOP_NODE)) {
    arc.target=FINAL_END_NODE;
    arc.flags|=BIT_FINAL_ARC;
    arc.nextArc=in.pos;
  }
 else   if (arc.flag(BIT_TARGET_NEXT)) {
    arc.nextArc=in.pos;
    if (!arc.flag(BIT_LAST_ARC)) {
      if (arc.bytesPerArc == 0) {
        seekToNextNode(in);
      }
 else {
        in.pos=arc.posArcsStart - arc.bytesPerArc * arc.numArcs;
      }
    }
    arc.target=in.pos;
  }
 else {
    arc.target=in.readInt();
    arc.nextArc=in.pos;
  }
  return arc;
}
