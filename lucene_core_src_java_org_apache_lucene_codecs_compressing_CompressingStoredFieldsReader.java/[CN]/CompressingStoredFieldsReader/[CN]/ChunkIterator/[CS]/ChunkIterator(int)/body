{
  this.docBase=-1;
  bytes=new BytesRef();
  spare=new BytesRef();
  numStoredFields=new int[1];
  lengths=new int[1];
  IndexInput in=CompressingStoredFieldsReader.this.fieldsStream;
  in.seek(0);
  fieldsStream=new BufferedChecksumIndexInput(in){
    final byte[] skipBuffer=new byte[256];
    @Override public void seek(    long target) throws IOException {
      final long skip=target - getFilePointer();
      if (skip < 0) {
        throw new IllegalStateException("Seeking backward on merge: " + skip);
      }
      for (long skipped=0; skipped < skip; ) {
        final int step=(int)Math.min(skipBuffer.length,skip - skipped);
        readBytes(skipBuffer,0,step);
        skipped+=step;
      }
    }
  }
;
  fieldsStream.seek(indexReader.getStartPointer(startDocId));
}
