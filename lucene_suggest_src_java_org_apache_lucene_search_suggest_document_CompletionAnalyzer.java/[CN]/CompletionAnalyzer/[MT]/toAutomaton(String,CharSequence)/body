{
  for (int i=0; i < key.length(); i++) {
switch (key.charAt(i)) {
case HOLE_CHARACTER:
      throw new IllegalArgumentException("lookup key cannot contain HOLE character U+001E; this character is reserved");
case SEP_LABEL:
    throw new IllegalArgumentException("lookup key cannot contain unit separator character U+001F; this character is reserved");
default :
  break;
}
}
try (TokenStream tokenStream=analyzer.tokenStream(field,key.toString())){
try (CompletionTokenStream stream=new CompletionTokenStream(tokenStream,preserveSep,preservePositionIncrements,SEP_LABEL,maxGraphExpansions)){
return stream.toAutomaton(tokenStream);
}
 }
 }
