{
  int blockBitsLeft=8;
  int valueBitsLeft=bitsPerValue;
  long nextValue=0;
  for (int end=valuesOffset + iterations * valueCount; valuesOffset < end; ) {
    if (valueBitsLeft > blockBitsLeft) {
      nextValue|=(blocks[blocksOffset++] & ((1L << blockBitsLeft) - 1)) << (valueBitsLeft - blockBitsLeft);
      valueBitsLeft-=blockBitsLeft;
      blockBitsLeft=8;
    }
 else {
      nextValue|=((blocks[blocksOffset] & 0xFFL) >>> (blockBitsLeft - valueBitsLeft)) & ((1L << valueBitsLeft) - 1);
      values[valuesOffset++]=nextValue;
      nextValue=0;
      blockBitsLeft-=valueBitsLeft;
      valueBitsLeft=bitsPerValue;
    }
  }
}
