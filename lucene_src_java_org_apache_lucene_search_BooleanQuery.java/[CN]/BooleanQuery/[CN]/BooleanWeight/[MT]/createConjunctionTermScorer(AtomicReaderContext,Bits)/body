{
  final DocsAndFreqs[] docsAndFreqs=new DocsAndFreqs[weights.size()];
  for (int i=0; i < docsAndFreqs.length; i++) {
    final TermWeight weight=(TermWeight)weights.get(i);
    final TermsEnum termsEnum=weight.getTermsEnum(context);
    if (termsEnum == null) {
      return null;
    }
    final ExactDocScorer docScorer=weight.createDocScorer(context);
    final DocsEnum docsAndFreqsEnum=termsEnum.docs(acceptDocs,null,true);
    if (docsAndFreqsEnum == null) {
      return createMatchOnlyConjunctionTermScorer(context,acceptDocs);
    }
    docsAndFreqs[i]=new DocsAndFreqs(docsAndFreqsEnum,docsAndFreqsEnum,termsEnum.docFreq(),docScorer);
  }
  return new ConjunctionTermScorer(this,disableCoord ? 1.0f : coord(docsAndFreqs.length,docsAndFreqs.length),docsAndFreqs);
}
