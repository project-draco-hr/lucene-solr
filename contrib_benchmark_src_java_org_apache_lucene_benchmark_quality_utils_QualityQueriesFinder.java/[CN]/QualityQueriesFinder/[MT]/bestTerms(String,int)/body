{
  PriorityQueue<TermDf> pq=new TermsDfQueue(numTerms);
  IndexReader ir=IndexReader.open(dir,true);
  try {
    int threshold=ir.maxDoc() / 10;
    TermEnum terms=ir.terms(new Term(field,""));
    while (terms.next()) {
      if (!field.equals(terms.term().field())) {
        break;
      }
      int df=terms.docFreq();
      if (df < threshold) {
        String ttxt=terms.term().text();
        pq.insertWithOverflow(new TermDf(ttxt,df));
      }
    }
  }
  finally {
    ir.close();
  }
  String res[]=new String[pq.size()];
  int i=0;
  while (pq.size() > 0) {
    TermDf tdf=(TermDf)pq.pop();
    res[i++]=tdf.word;
    System.out.println(i + ".   word:  " + tdf.df+ "   "+ tdf.word);
  }
  return res;
}
