{
  List<String> fields=sqlVisitor.fields;
  StringBuilder flbuf=new StringBuilder();
  boolean comma=false;
  for (  String field : fields) {
    if (comma) {
      flbuf.append(",");
    }
    comma=true;
    flbuf.append(field);
  }
  String fl=flbuf.toString();
  List<SortItem> sorts=sqlVisitor.sorts;
  StringBuilder siBuf=new StringBuilder();
  comma=false;
  for (  SortItem sortItem : sorts) {
    if (comma) {
      siBuf.append(",");
    }
    siBuf.append(stripQuotes(sortItem.getSortKey().toString()) + " " + ascDesc(sortItem.getOrdering().toString()));
  }
  TableSpec tableSpec=tableMap.get(sqlVisitor.table);
  String zkHost=tableSpec.zkHost;
  String collection=tableSpec.collection;
  Map<String,String> params=new HashMap();
  params.put("fl",fl.toString());
  params.put("q",sqlVisitor.query);
  params.put("sort",siBuf.toString());
  if (sqlVisitor.limit > -1) {
    params.put("rows",Integer.toString(sqlVisitor.limit));
    return new LimitStream(new CloudSolrStream(zkHost,collection,params),sqlVisitor.limit);
  }
 else {
    params.put(CommonParams.QT,"/export");
    return new CloudSolrStream(zkHost,collection,params);
  }
}
