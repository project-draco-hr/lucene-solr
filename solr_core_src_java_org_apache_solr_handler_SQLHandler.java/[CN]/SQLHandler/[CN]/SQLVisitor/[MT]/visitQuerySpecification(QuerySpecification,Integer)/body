{
  this.process(node.getSelect(),indent);
  if (node.getFrom().isPresent()) {
    this.process((Node)node.getFrom().get(),indent);
  }
  if (node.getWhere().isPresent()) {
    Expression ex=node.getWhere().get();
    ExpressionVisitor expressionVisitor=new ExpressionVisitor();
    StringBuilder buf=new StringBuilder();
    expressionVisitor.process(ex,buf);
    this.query=buf.toString();
  }
  if (!node.getGroupBy().isEmpty()) {
    this.groupByQuery=true;
    List<Expression> groups=node.getGroupBy();
    for (    Expression group : groups) {
      groupBy.add(stripQuotes(group.toString()));
    }
  }
  if (node.getHaving().isPresent()) {
    this.havingExpression=node.getHaving().get();
  }
  if (!node.getOrderBy().isEmpty()) {
    this.sorts=node.getOrderBy();
  }
  if (node.getLimit().isPresent()) {
    this.limit=Integer.parseInt(stripQuotes(node.getLimit().get()));
  }
  return null;
}
