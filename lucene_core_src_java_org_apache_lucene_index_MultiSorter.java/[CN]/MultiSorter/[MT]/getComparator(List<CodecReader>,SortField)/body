{
switch (sortField.getType()) {
case INT:
{
      List<NumericDocValues> values=new ArrayList<>();
      List<Bits> docsWithFields=new ArrayList<>();
      for (      CodecReader reader : readers) {
        values.add(DocValues.getNumeric(reader,sortField.getField()));
        docsWithFields.add(DocValues.getDocsWithField(reader,sortField.getField()));
      }
      final int reverseMul;
      if (sortField.getReverse()) {
        reverseMul=-1;
      }
 else {
        reverseMul=1;
      }
      final int missingValue;
      if (sortField.getMissingValue() != null) {
        missingValue=(Integer)sortField.getMissingValue();
      }
 else {
        missingValue=0;
      }
      return new CrossReaderComparator(){
        @Override public int compare(        int readerIndexA,        int docIDA,        int readerIndexB,        int docIDB){
          int valueA;
          if (docsWithFields.get(readerIndexA).get(docIDA)) {
            valueA=(int)values.get(readerIndexA).get(docIDA);
          }
 else {
            valueA=missingValue;
          }
          int valueB;
          if (docsWithFields.get(readerIndexB).get(docIDB)) {
            valueB=(int)values.get(readerIndexB).get(docIDB);
          }
 else {
            valueB=missingValue;
          }
          return reverseMul * Integer.compare(valueA,valueB);
        }
      }
;
    }
case LONG:
{
    List<NumericDocValues> values=new ArrayList<>();
    List<Bits> docsWithFields=new ArrayList<>();
    for (    CodecReader reader : readers) {
      values.add(DocValues.getNumeric(reader,sortField.getField()));
      docsWithFields.add(DocValues.getDocsWithField(reader,sortField.getField()));
    }
    final int reverseMul;
    if (sortField.getReverse()) {
      reverseMul=-1;
    }
 else {
      reverseMul=1;
    }
    final int missingValue;
    if (sortField.getMissingValue() != null) {
      missingValue=(Integer)sortField.getMissingValue();
    }
 else {
      missingValue=0;
    }
    return new CrossReaderComparator(){
      @Override public int compare(      int readerIndexA,      int docIDA,      int readerIndexB,      int docIDB){
        long valueA;
        if (docsWithFields.get(readerIndexA).get(docIDA)) {
          valueA=(int)values.get(readerIndexA).get(docIDA);
        }
 else {
          valueA=missingValue;
        }
        long valueB;
        if (docsWithFields.get(readerIndexB).get(docIDB)) {
          valueB=(int)values.get(readerIndexB).get(docIDB);
        }
 else {
          valueB=missingValue;
        }
        return reverseMul * Long.compare(valueA,valueB);
      }
    }
;
  }
default :
throw new IllegalArgumentException("unhandled SortField.getType()=" + sortField.getType());
}
}
