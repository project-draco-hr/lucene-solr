{
  SolrClient client=getSolrClient();
  SolrQuery query=new SolrQuery();
  query.set(CommonParams.QT,"/analysis/field");
  query.set(AnalysisParams.FIELD_TYPE,"int");
  query.set(AnalysisParams.FIELD_VALUE,"ignore_exception");
  try {
    client.query(query);
    Assert.fail("should have a number format exception");
  }
 catch (  SolrException ex) {
    assertEquals(400,ex.code());
    assertThat(ex.getMessage(),containsString("Invalid Number: ignore_exception"));
  }
catch (  Throwable t) {
    t.printStackTrace();
    Assert.fail("should have thrown a SolrException! not: " + t);
  }
  try {
    client.deleteByQuery("{!df=text} ??::?? ignore_exception");
    Assert.fail("should have a number format exception");
  }
 catch (  SolrException ex) {
    assertEquals(400,ex.code());
    assertTrue(ex.getMessage().indexOf("??::?? ignore_exception") > 0);
  }
catch (  Throwable t) {
    t.printStackTrace();
    Assert.fail("should have thrown a SolrException! not: " + t);
  }
  SolrInputDocument doc=new SolrInputDocument();
  doc.addField("id","DOCID",1.0f);
  doc.addField("id","DOCID2",1.0f);
  doc.addField("name","hello",1.0f);
  if (client instanceof HttpSolrClient) {
    try {
      client.add(doc);
      fail("Should throw exception!");
    }
 catch (    SolrException ex) {
      assertEquals(400,ex.code());
      assertTrue(ex.getMessage().indexOf("contains multiple values for uniqueKey") > 0);
    }
catch (    Throwable t) {
      Assert.fail("should have thrown a SolrException! not: " + t);
    }
  }
 else   if (client instanceof ConcurrentUpdateSolrClient) {
    ConcurrentUpdateSolrClient concurrentClient=(ConcurrentUpdateSolrClient)client;
    Field field=getConcurrentClientExceptionField(concurrentClient);
    field.set(concurrentClient,null);
    concurrentClient.add(doc);
    concurrentClient.blockUntilFinished();
    Throwable lastError=(Throwable)field.get(concurrentClient);
    assertNotNull("Should throw exception!",lastError);
  }
 else {
    log.info("Ignoring update test for client:" + client.getClass().getName());
  }
}
