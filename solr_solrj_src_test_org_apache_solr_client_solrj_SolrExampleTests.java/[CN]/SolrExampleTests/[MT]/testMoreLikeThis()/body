{
  SolrClient client=getSolrClient();
  client.deleteByQuery("*:*");
  for (int i=0; i < 20; i++) {
    SolrInputDocument doc=new SolrInputDocument();
    doc.addField("id","testMoreLikeThis" + i);
    doc.addField("x_s","x_" + i);
    doc.addField("y_s","y_" + (i % 3));
    doc.addField("z_s","z_" + i);
    client.add(doc);
  }
  client.commit();
  SolrQuery q=new SolrQuery("*:*");
  q.setRows(20);
  q.setMoreLikeThisFields("x_s","y_s","z_s");
  q.setMoreLikeThisMinTermFreq(0);
  q.setMoreLikeThisCount(2);
  QueryResponse response=client.query(q);
  assertEquals(20,response.getResults().getNumFound());
  NamedList<SolrDocumentList> moreLikeThis=response.getMoreLikeThis();
  assertNotNull("MoreLikeThis response should not have been null",moreLikeThis);
  for (int i=0; i < 20; i++) {
    String id="testMoreLikeThis" + i;
    SolrDocumentList mltResp=moreLikeThis.get(id);
    assertNotNull("MoreLikeThis response for id=" + id + " should not be null",mltResp);
    assertTrue("MoreLikeThis response for id=" + id + " had numFound=0",mltResp.getNumFound() > 0);
    assertTrue("MoreLikeThis response for id=" + id + " had not returned exactly 2 documents",mltResp.size() == 2);
  }
  q=new SolrQuery("*:*");
  q.setRows(20);
  q.setParam("mlt","true");
  q.setParam("mlt.fl","x_s","y_s","z_s");
  q.setMoreLikeThisMinTermFreq(0);
  q.setMoreLikeThisCount(2);
  response=client.query(q);
  assertEquals(20,response.getResults().getNumFound());
  moreLikeThis=response.getMoreLikeThis();
  assertNotNull("MoreLikeThis response should not have been null",moreLikeThis);
  for (int i=0; i < 20; i++) {
    String id="testMoreLikeThis" + i;
    SolrDocumentList mltResp=moreLikeThis.get(id);
    assertNotNull("MoreLikeThis response for id=" + id + " should not be null",mltResp);
    assertTrue("MoreLikeThis response for id=" + id + " had numFound=0",mltResp.getNumFound() > 0);
    assertTrue("MoreLikeThis response for id=" + id + " had not returned exactly 2 documents",mltResp.size() == 2);
  }
}
