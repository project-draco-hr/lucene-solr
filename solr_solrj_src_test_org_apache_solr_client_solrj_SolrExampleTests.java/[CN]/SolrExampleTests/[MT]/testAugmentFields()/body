{
  SolrClient client=getSolrClient();
  client.deleteByQuery("*:*");
  SolrInputDocument doc=new SolrInputDocument();
  doc.addField("id","111",1.0f);
  doc.addField("name","doc1",1.0f);
  doc.addField("price",11);
  client.add(doc);
  client.commit();
  doc=new SolrInputDocument();
  doc.addField("id","222",1.0f);
  doc.addField("name","doc2",1.0f);
  doc.addField("price",22);
  client.add(doc);
  client.commit();
  SolrQuery query=new SolrQuery();
  query.setQuery("*:*");
  query.set(CommonParams.FL,"id,price,[docid],[explain style=nl],score,aaa:[value v=aaa],ten:[value v=10 t=int]");
  query.addSort(new SolrQuery.SortClause("price",SolrQuery.ORDER.asc));
  QueryResponse rsp=client.query(query);
  SolrDocumentList out=rsp.getResults();
  assertEquals(2,out.getNumFound());
  SolrDocument out1=out.get(0);
  SolrDocument out2=out.get(1);
  assertEquals("111",out1.getFieldValue("id"));
  assertEquals("222",out2.getFieldValue("id"));
  assertEquals(1.0f,out1.getFieldValue("score"));
  assertEquals(1.0f,out2.getFieldValue("score"));
  int id1=(Integer)out1.getFieldValue("[docid]");
  int id2=(Integer)out2.getFieldValue("[docid]");
  assertTrue("should be bigger [" + id1 + ","+ id2+ "]",id2 > id1);
  NamedList explain=(NamedList)out1.getFieldValue("[explain]");
  assertEquals(out1.get("score"),explain.get("value"));
  assertEquals("aaa",out1.get("aaa"));
  assertEquals(10,((Integer)out1.get("ten")).intValue());
}
