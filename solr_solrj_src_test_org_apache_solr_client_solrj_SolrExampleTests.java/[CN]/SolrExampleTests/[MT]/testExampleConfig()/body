{
  SolrServer server=getSolrServer();
  server.deleteByQuery("*:*");
  SolrInputDocument doc=new SolrInputDocument();
  String docID="1112211111";
  doc.addField("id",docID,1.0f);
  doc.addField("name","my name!",1.0f);
  Assert.assertEquals(null,doc.getField("foo"));
  Assert.assertTrue(doc.getField("name").getValue() != null);
  UpdateResponse upres=server.add(doc);
  Assert.assertEquals(0,upres.getStatus());
  upres=server.commit(true,true);
  Assert.assertEquals(0,upres.getStatus());
  upres=server.optimize(true,true);
  Assert.assertEquals(0,upres.getStatus());
  SolrQuery query=new SolrQuery();
  query.setQuery("id:" + docID);
  QueryResponse response=server.query(query);
  Assert.assertEquals(docID,response.getResults().get(0).getFieldValue("id"));
  List<SolrInputDocument> docs=new ArrayList<>();
  SolrInputDocument doc2=new SolrInputDocument();
  doc2.addField("id","2",1.0f);
  doc2.addField("inStock",true,1.0f);
  doc2.addField("price",2,1.0f);
  doc2.addField("timestamp_dt",new java.util.Date(),1.0f);
  docs.add(doc2);
  SolrInputDocument doc3=new SolrInputDocument();
  doc3.addField("id","3",1.0f);
  doc3.addField("inStock",false,1.0f);
  doc3.addField("price",3,1.0f);
  doc3.addField("timestamp_dt",new java.util.Date(),1.0f);
  docs.add(doc3);
  SolrInputDocument doc4=new SolrInputDocument();
  doc4.addField("id","4",1.0f);
  doc4.addField("inStock",true,1.0f);
  doc4.addField("price",4,1.0f);
  doc4.addField("timestamp_dt",new java.util.Date(),1.0f);
  docs.add(doc4);
  SolrInputDocument doc5=new SolrInputDocument();
  doc5.addField("id","5",1.0f);
  doc5.addField("inStock",false,1.0f);
  doc5.addField("price",5,1.0f);
  doc5.addField("timestamp_dt",new java.util.Date(),1.0f);
  docs.add(doc5);
  upres=server.add(docs);
  Assert.assertEquals(0,upres.getStatus());
  upres=server.commit(true,true);
  Assert.assertEquals(0,upres.getStatus());
  upres=server.optimize(true,true);
  Assert.assertEquals(0,upres.getStatus());
  query=new SolrQuery("*:*");
  query.addFacetQuery("price:[* TO 2]");
  query.addFacetQuery("price:[2 TO 4]");
  query.addFacetQuery("price:[5 TO *]");
  query.addFacetField("inStock");
  query.addFacetField("price");
  query.addFacetField("timestamp_dt");
  query.removeFilterQuery("inStock:true");
  response=server.query(query);
  Assert.assertEquals(0,response.getStatus());
  Assert.assertEquals(5,response.getResults().getNumFound());
  Assert.assertEquals(3,response.getFacetQuery().size());
  Assert.assertEquals(2,response.getFacetField("inStock").getValueCount());
  Assert.assertEquals(4,response.getFacetField("price").getValueCount());
  SolrQuery query2=query.getCopy();
  query2.addFilterQuery("inStock:true");
  response=server.query(query2);
  Assert.assertEquals(1,query2.getFilterQueries().length);
  Assert.assertEquals(0,response.getStatus());
  Assert.assertEquals(2,response.getResults().getNumFound());
  Assert.assertFalse(query.getFilterQueries() == query2.getFilterQueries());
  query=new SolrQuery("foo");
  query.addFilterQuery("{!field f=inStock}true");
  query.addFilterQuery("{!term f=name}hoss");
  query.addFacetQuery("price:[* TO 2]");
  query.addFacetQuery("price:[2 TO 4]");
  response=server.query(query);
  assertTrue("echoed params are not a NamedList: " + response.getResponseHeader().get("params").getClass(),response.getResponseHeader().get("params") instanceof NamedList);
  NamedList echo=(NamedList)response.getResponseHeader().get("params");
  List values=null;
  assertEquals("foo",echo.get("q"));
  assertTrue("echoed fq is not a List: " + echo.get("fq").getClass(),echo.get("fq") instanceof List);
  values=(List)echo.get("fq");
  Assert.assertEquals(2,values.size());
  Assert.assertEquals("{!field f=inStock}true",values.get(0));
  Assert.assertEquals("{!term f=name}hoss",values.get(1));
  assertTrue("echoed facet.query is not a List: " + echo.get("facet.query").getClass(),echo.get("facet.query") instanceof List);
  values=(List)echo.get("facet.query");
  Assert.assertEquals(2,values.size());
  Assert.assertEquals("price:[* TO 2]",values.get(0));
  Assert.assertEquals("price:[2 TO 4]",values.get(1));
  if (jetty != null) {
    String url=jetty.getBaseUrl().toString();
    HttpSolrServer client=new HttpSolrServer(url);
    SolrQuery q=new SolrQuery();
    q.set("qt","/admin/info/system");
    QueryResponse rsp=client.query(q);
    assertNotNull(rsp.getResponse().get("mode"));
    assertNotNull(rsp.getResponse().get("lucene"));
    client.shutdown();
  }
}
