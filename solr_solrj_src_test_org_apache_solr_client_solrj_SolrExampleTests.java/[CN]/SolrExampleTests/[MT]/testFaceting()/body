{
  SolrServer server=getSolrServer();
  server.deleteByQuery("*:*");
  server.commit();
  assertNumFound("*:*",0);
  ArrayList<SolrInputDocument> docs=new ArrayList<>(10);
  for (int i=1; i <= 10; i++) {
    SolrInputDocument doc=new SolrInputDocument();
    doc.setField("id",i + "",1.0f);
    if ((i % 2) == 0) {
      doc.addField("features","two");
    }
    if ((i % 3) == 0) {
      doc.addField("features","three");
    }
    if ((i % 4) == 0) {
      doc.addField("features","four");
    }
    if ((i % 5) == 0) {
      doc.addField("features","five");
    }
    docs.add(doc);
  }
  server.add(docs);
  server.commit();
  SolrQuery query=new SolrQuery("*:*");
  query.remove(FacetParams.FACET_FIELD);
  query.addFacetField("features");
  query.setFacetMinCount(0);
  query.setFacet(true);
  query.setRows(0);
  QueryResponse rsp=server.query(query);
  assertEquals(docs.size(),rsp.getResults().getNumFound());
  List<FacetField> facets=rsp.getFacetFields();
  assertEquals(1,facets.size());
  FacetField ff=facets.get(0);
  assertEquals("features",ff.getName());
  assertEquals("[two (5), three (3), five (2), four (2)]",ff.getValues().toString());
  query.setFilterQueries("features:two");
  rsp=server.query(query);
  ff=rsp.getFacetField("features");
  assertEquals("[two (5), four (2), five (1), three (1)]",ff.getValues().toString());
  query.setFacetMinCount(4);
  rsp=server.query(query);
  ff=rsp.getFacetField("features");
  assertEquals("[two (5)]",ff.getValues().toString());
  query.setFacetMinCount(-1);
  rsp=server.query(query);
  ff=rsp.getFacetField("features");
}
