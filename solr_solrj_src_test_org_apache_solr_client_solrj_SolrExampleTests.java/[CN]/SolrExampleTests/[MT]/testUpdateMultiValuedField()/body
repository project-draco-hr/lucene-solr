{
  SolrClient solrClient=getSolrClient();
  SolrInputDocument doc=new SolrInputDocument();
  doc.addField("id","123");
  solrClient.add(doc);
  solrClient.commit(true,true);
  QueryResponse response=solrClient.query(new SolrQuery("id:123"));
  assertEquals("Failed to add doc to cloud server",1,response.getResults().getNumFound());
  Map<String,List<String>> operation=new HashMap<>();
  operation.put("set",Arrays.asList("first","second","third"));
  doc.addField("multi_ss",operation);
  solrClient.add(doc);
  solrClient.commit(true,true);
  response=solrClient.query(new SolrQuery("id:123"));
  assertTrue("Multi-valued field did not return a collection",response.getResults().get(0).get("multi_ss") instanceof List);
  List<String> values=(List<String>)response.getResults().get(0).get("multi_ss");
  assertEquals("Field values was not updated with all values via atomic update",3,values.size());
  operation.clear();
  operation.put("add",Arrays.asList("fourth","fifth"));
  doc.removeField("multi_ss");
  doc.addField("multi_ss",operation);
  solrClient.add(doc);
  solrClient.commit(true,true);
  response=solrClient.query(new SolrQuery("id:123"));
  values=(List<String>)response.getResults().get(0).get("multi_ss");
  assertEquals("Field values was not updated with all values via atomic update",5,values.size());
}
