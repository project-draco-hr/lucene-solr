{
  SolrClient client=getSolrClient();
  client.deleteByQuery("*:*");
  client.commit();
  assertNumFound("*:*",0);
  int id=1;
  ArrayList<SolrInputDocument> docs=new ArrayList<>();
  docs.add(makeTestDoc("id",id++,"features","aaa","cat","a","inStock",true,"popularity",12,"price",.017));
  docs.add(makeTestDoc("id",id++,"features","aaa","cat","a","inStock",false,"popularity",13,"price",16.04));
  docs.add(makeTestDoc("id",id++,"features","aaa","cat","a","inStock",true,"popularity",14,"price",12.34));
  docs.add(makeTestDoc("id",id++,"features","aaa","cat","b","inStock",false,"popularity",24,"price",51.39));
  docs.add(makeTestDoc("id",id++,"features","aaa","cat","b","inStock",true,"popularity",28,"price",131.39));
  docs.add(makeTestDoc("id",id++,"features","bbb","cat","a","inStock",false,"popularity",32));
  docs.add(makeTestDoc("id",id++,"features","bbb","cat","a","inStock",true,"popularity",31,"price",131.39));
  docs.add(makeTestDoc("id",id++,"features","bbb","cat","b","inStock",false,"popularity",36));
  docs.add(makeTestDoc("id",id++,"features","bbb","cat","b","inStock",true,"popularity",37,"price",1.39));
  docs.add(makeTestDoc("id",id++,"features","bbb","cat","b","inStock",false,"popularity",38,"price",47.98));
  docs.add(makeTestDoc("id",id++,"features","bbb","cat","b","inStock",true,"popularity",-38));
  docs.add(makeTestDoc("id",id++,"cat","b"));
  client.add(docs);
  client.commit();
  SolrQuery query=new SolrQuery("*:*");
  query.addFacetPivotField("{!query=s1}features,manu");
  query.addFacetQuery("{!key=highPrice tag=s1}price:[100 TO *]");
  query.addFacetQuery("{!tag=s1 key=lowPrice}price:[0 TO 50]");
  query.setFacetMinCount(0);
  query.setRows(0);
  QueryResponse rsp=client.query(query);
  Map<String,Integer> map=rsp.getFacetQuery();
  assertEquals(2,map.get("highPrice").intValue());
  assertEquals(5,map.get("lowPrice").intValue());
  NamedList<List<PivotField>> pivots=rsp.getFacetPivot();
  List<PivotField> pivotValues=pivots.get("features,manu");
  PivotField featuresBBBPivot=pivotValues.get(0);
  assertEquals("features",featuresBBBPivot.getField());
  assertEquals("bbb",featuresBBBPivot.getValue());
  assertNotNull(featuresBBBPivot.getFacetQuery());
  assertEquals(2,featuresBBBPivot.getFacetQuery().size());
  assertEquals(1,featuresBBBPivot.getFacetQuery().get("highPrice").intValue());
  assertEquals(2,featuresBBBPivot.getFacetQuery().get("lowPrice").intValue());
  PivotField featuresAAAPivot=pivotValues.get(1);
  assertEquals("features",featuresAAAPivot.getField());
  assertEquals("aaa",featuresAAAPivot.getValue());
  assertNotNull(featuresAAAPivot.getFacetQuery());
  assertEquals(2,featuresAAAPivot.getFacetQuery().size());
  assertEquals(1,featuresAAAPivot.getFacetQuery().get("highPrice").intValue());
  assertEquals(3,featuresAAAPivot.getFacetQuery().get("lowPrice").intValue());
}
