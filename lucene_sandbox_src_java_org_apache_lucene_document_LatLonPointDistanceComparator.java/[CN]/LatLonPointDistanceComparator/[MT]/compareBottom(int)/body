{
  currentDocs.setDocument(doc);
  int numValues=currentDocs.count();
  if (numValues == 0) {
    return Double.compare(bottom,missingValue);
  }
  double minValue=Double.POSITIVE_INFINITY;
  for (int i=0; i < numValues; i++) {
    long encoded=currentDocs.valueAt(i);
    int latitudeBits=(int)(encoded >> 32);
    int longitudeBits=(int)(encoded & 0xFFFFFFFF);
    boolean outsideBox=((latitudeBits < minLat || longitudeBits < minLon || latitudeBits > maxLat || longitudeBits > maxLon) && (crossesDateLine == false || latitudeBits < minLat2 || longitudeBits < minLon2 || latitudeBits > maxLat2 || longitudeBits > maxLon2));
    if (outsideBox == false) {
      double docLatitude=LatLonPoint.decodeLatitude(latitudeBits);
      double docLongitude=LatLonPoint.decodeLongitude(longitudeBits);
      minValue=Math.min(minValue,GeoDistanceUtils.haversin(latitude,longitude,docLatitude,docLongitude));
    }
  }
  return Double.compare(bottom,minValue);
}
