{
  final ArrayList<UpdateRequestProcessorFactory> factories=new ArrayList<UpdateRequestProcessorFactory>();
  if (node != null) {
    AbstractPluginLoader<UpdateRequestProcessorFactory> loader=new AbstractPluginLoader<UpdateRequestProcessorFactory>("processor chain",false,false){
      @Override protected void init(      UpdateRequestProcessorFactory plugin,      Node node) throws Exception {
        plugin.init(core,node);
      }
      @Override protected UpdateRequestProcessorFactory register(      String name,      UpdateRequestProcessorFactory plugin) throws Exception {
        factories.add(plugin);
        return null;
      }
    }
;
    XPath xpath=XPathFactory.newInstance().newXPath();
    try {
      loader.load(core.getResourceLoader(),(NodeList)xpath.evaluate("chain",node,XPathConstants.NODESET));
    }
 catch (    XPathExpressionException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Error loading processor chain: " + node,e,false);
    }
  }
  if (factories.size() < 1) {
    factories.add(new RunUpdateProcessorFactory());
    factories.add(new LogUpdateProcessorFactory());
  }
  factory=factories.toArray(new UpdateRequestProcessorFactory[factories.size()]);
}
