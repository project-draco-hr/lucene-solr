{
  QueryUtils.check(random,query,searcher);
  Set<Integer> correct=new TreeSet<Integer>();
  for (int i=0; i < results.length; i++) {
    correct.add(Integer.valueOf(results[i]));
  }
  final Set<Integer> actual=new TreeSet<Integer>();
  final Collector c=new SetCollector(actual);
  searcher.search(query,c);
  Assert.assertEquals("Simple: " + query.toString(defaultFieldName),correct,actual);
  for (int i=-1; i < 2; i++) {
    actual.clear();
    QueryUtils.wrapSearcher(random,searcher,i).search(query,c);
    Assert.assertEquals("Wrap Searcher " + i + ": "+ query.toString(defaultFieldName),correct,actual);
  }
  if (!(searcher instanceof IndexSearcher))   return;
  for (int i=-1; i < 2; i++) {
    actual.clear();
    QueryUtils.wrapUnderlyingReader(random,(IndexSearcher)searcher,i).search(query,c);
    Assert.assertEquals("Wrap Reader " + i + ": "+ query.toString(defaultFieldName),correct,actual);
  }
}
