{
  Map<String,String> args=new HashMap<String,String>();
  args.put(CapitalizationFilterFactory.KEEP,"and the it BIG");
  args.put(CapitalizationFilterFactory.ONLY_FIRST_WORD,"true");
  CapitalizationFilterFactory factory=new CapitalizationFilterFactory();
  factory.init(solrConfig,args);
  assertEquals("Kitten",factory.processWord("kiTTEN",0));
  factory.forceFirstLetter=true;
  assertEquals("And",factory.processWord("AnD",0));
  factory.forceFirstLetter=false;
  assertEquals("and",factory.processWord("AnD",0));
  factory.forceFirstLetter=true;
  assertEquals("BIG",factory.processWord("big",0));
  String out=tsToString(factory.create(new IterTokenStream("Hello thEre my Name is Ryan")));
  assertEquals("Hello there my name is ryan",out);
  factory.onlyFirstWord=false;
  out=tsToString(factory.create(new IterTokenStream("Hello thEre my Name is Ryan")));
  assertEquals("Hello There My Name Is Ryan",out);
  factory.minWordLength=3;
  out=tsToString(factory.create(new IterTokenStream("Hello thEre my Name is Ryan")));
  assertEquals("Hello There my Name is Ryan",out);
  out=tsToString(factory.create(new IterTokenStream("McKinley")));
  assertEquals("Mckinley",out);
  factory=new CapitalizationFilterFactory();
  args.put("okPrefix","McK");
  factory.init(solrConfig,args);
  out=tsToString(factory.create(new IterTokenStream("McKinley")));
  assertEquals("McKinley",out);
  factory.forceFirstLetter=false;
  factory.onlyFirstWord=false;
  out=tsToString(factory.create(new IterTokenStream("1st 2nd third")));
  assertEquals("1st 2nd Third",out);
  factory.forceFirstLetter=true;
  out=tsToString(factory.create(new IterTokenStream("the The")));
  assertEquals("The the",out);
}
