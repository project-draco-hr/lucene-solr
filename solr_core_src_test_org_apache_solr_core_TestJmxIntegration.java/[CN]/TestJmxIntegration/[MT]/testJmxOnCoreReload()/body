{
  List<MBeanServer> servers=MBeanServerFactory.findMBeanServer(null);
  MBeanServer mbeanServer=servers.get(0);
  String coreName=h.getCore().getName();
  Set<ObjectInstance> oldBeans=mbeanServer.queryMBeans(null,null);
  int oldNumberOfObjects=0;
  for (  ObjectInstance bean : oldBeans) {
    try {
      if (String.valueOf(h.getCore().hashCode()).equals(mbeanServer.getAttribute(bean.getObjectName(),"coreHashCode"))) {
        oldNumberOfObjects++;
      }
    }
 catch (    AttributeNotFoundException e) {
    }
  }
  log.info("Before Reload: Size of infoRegistry: " + h.getCore().getInfoRegistry().size() + " MBeans: "+ oldNumberOfObjects);
  assertEquals("Number of registered MBeans is not the same as info registry size",h.getCore().getInfoRegistry().size(),oldNumberOfObjects);
  h.getCoreContainer().reload(coreName);
  Set<ObjectInstance> newBeans=mbeanServer.queryMBeans(null,null);
  int newNumberOfObjects=0;
  int registrySize=0;
  SolrCore core=h.getCoreContainer().getCore(coreName);
  try {
    registrySize=core.getInfoRegistry().size();
    for (    ObjectInstance bean : newBeans) {
      try {
        if (String.valueOf(core.hashCode()).equals(mbeanServer.getAttribute(bean.getObjectName(),"coreHashCode"))) {
          newNumberOfObjects++;
        }
      }
 catch (      AttributeNotFoundException e) {
      }
    }
  }
  finally {
    core.close();
  }
  log.info("After Reload: Size of infoRegistry: " + registrySize + " MBeans: "+ newNumberOfObjects);
  assertEquals("Number of registered MBeans is not the same as info registry size",registrySize,newNumberOfObjects);
}
