{
  intBuffer.rewind();
  int header=intBuffer.get();
  int numInts=(header & MASK[8]) + 1;
  int numBits=((header >> 8) & MASK[5]) + 1;
switch (numBits) {
case 1:
    ForDecompressImpl.decode1(intBuffer,data);
  break;
case 2:
ForDecompressImpl.decode2(intBuffer,data);
break;
case 3:
ForDecompressImpl.decode3(intBuffer,data);
break;
case 4:
ForDecompressImpl.decode4(intBuffer,data);
break;
case 5:
ForDecompressImpl.decode5(intBuffer,data);
break;
case 6:
ForDecompressImpl.decode6(intBuffer,data);
break;
case 7:
ForDecompressImpl.decode7(intBuffer,data);
break;
case 8:
ForDecompressImpl.decode8(intBuffer,data);
break;
case 9:
ForDecompressImpl.decode9(intBuffer,data);
break;
case 10:
ForDecompressImpl.decode10(intBuffer,data);
break;
case 11:
ForDecompressImpl.decode11(intBuffer,data);
break;
case 12:
ForDecompressImpl.decode12(intBuffer,data);
break;
case 13:
ForDecompressImpl.decode13(intBuffer,data);
break;
case 14:
ForDecompressImpl.decode14(intBuffer,data);
break;
case 15:
ForDecompressImpl.decode15(intBuffer,data);
break;
case 16:
ForDecompressImpl.decode16(intBuffer,data);
break;
case 17:
ForDecompressImpl.decode17(intBuffer,data);
break;
case 18:
ForDecompressImpl.decode18(intBuffer,data);
break;
case 19:
ForDecompressImpl.decode19(intBuffer,data);
break;
case 20:
ForDecompressImpl.decode20(intBuffer,data);
break;
case 21:
ForDecompressImpl.decode21(intBuffer,data);
break;
case 22:
ForDecompressImpl.decode22(intBuffer,data);
break;
case 23:
ForDecompressImpl.decode23(intBuffer,data);
break;
case 24:
ForDecompressImpl.decode24(intBuffer,data);
break;
case 25:
ForDecompressImpl.decode25(intBuffer,data);
break;
case 26:
ForDecompressImpl.decode26(intBuffer,data);
break;
case 27:
ForDecompressImpl.decode27(intBuffer,data);
break;
case 28:
ForDecompressImpl.decode28(intBuffer,data);
break;
case 29:
ForDecompressImpl.decode29(intBuffer,data);
break;
case 30:
ForDecompressImpl.decode30(intBuffer,data);
break;
case 31:
ForDecompressImpl.decode31(intBuffer,data);
break;
case 32:
ForDecompressImpl.decode32(intBuffer,data);
break;
default :
throw new IllegalStateException("Unknown numFrameBits " + numBits);
}
return numInts;
}
