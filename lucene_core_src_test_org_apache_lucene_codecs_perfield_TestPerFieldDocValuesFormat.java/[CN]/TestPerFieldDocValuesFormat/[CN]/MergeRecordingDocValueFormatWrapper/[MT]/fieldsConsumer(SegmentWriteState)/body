{
  final DocValuesConsumer consumer=delegate.fieldsConsumer(state);
  return new DocValuesConsumer(){
    @Override public void addNumericField(    FieldInfo field,    DocValuesProducer values) throws IOException {
      consumer.addNumericField(field,values);
    }
    @Override public void addBinaryField(    FieldInfo field,    DocValuesProducer values) throws IOException {
      consumer.addBinaryField(field,values);
    }
    @Override public void addSortedField(    FieldInfo field,    DocValuesProducer values) throws IOException {
      consumer.addSortedField(field,values);
    }
    @Override public void addSortedNumericField(    FieldInfo field,    DocValuesProducer values) throws IOException {
      consumer.addSortedNumericField(field,values);
    }
    @Override public void addSortedSetField(    FieldInfo field,    DocValuesProducer values) throws IOException {
      consumer.addSortedSetField(field,values);
    }
    @Override public void merge(    MergeState mergeState) throws IOException {
      nbMergeCalls++;
      for (      FieldInfo fi : mergeState.mergeFieldInfos) {
        fieldNames.add(fi.name);
      }
      consumer.merge(mergeState);
    }
    @Override public void close() throws IOException {
      consumer.close();
    }
  }
;
}
