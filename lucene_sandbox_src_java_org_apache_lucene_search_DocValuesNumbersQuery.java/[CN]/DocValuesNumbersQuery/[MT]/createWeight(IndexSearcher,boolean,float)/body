{
  return new RandomAccessWeight(this,boost){
    @Override protected Bits getMatchingDocs(    LeafReaderContext context) throws IOException {
      final SortedNumericDocValues values=DocValues.getSortedNumeric(context.reader(),field);
      return new Bits(){
        @Override public boolean get(        int doc){
          try {
            if (doc > values.docID()) {
              values.advance(doc);
            }
            if (doc == values.docID()) {
              int count=values.docValueCount();
              for (int i=0; i < count; i++) {
                if (numbers.contains(values.nextValue())) {
                  return true;
                }
              }
            }
          }
 catch (          IOException ioe) {
            throw new RuntimeException(ioe);
          }
          return false;
        }
        @Override public int length(){
          return context.reader().maxDoc();
        }
      }
;
    }
  }
;
}
