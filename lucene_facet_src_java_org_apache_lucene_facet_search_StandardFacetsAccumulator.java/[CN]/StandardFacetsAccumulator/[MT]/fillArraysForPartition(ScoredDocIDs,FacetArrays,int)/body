{
  if (isUsingComplements) {
    initArraysByTotalCounts(facetArrays,partition,docids.size());
  }
 else {
    facetArrays.free();
  }
  HashMap<CategoryListIterator,Aggregator> categoryLists=getCategoryListMap(facetArrays,partition);
  IntsRef ordinals=new IntsRef(32);
  for (  Entry<CategoryListIterator,Aggregator> entry : categoryLists.entrySet()) {
    final ScoredDocIDsIterator iterator=docids.iterator();
    final CategoryListIterator categoryListIter=entry.getKey();
    final Aggregator aggregator=entry.getValue();
    Iterator<AtomicReaderContext> contexts=indexReader.leaves().iterator();
    AtomicReaderContext current=null;
    int maxDoc=-1;
    while (iterator.next()) {
      int docID=iterator.getDocID();
      if (docID >= maxDoc) {
        boolean iteratorDone=false;
        do {
          if (!contexts.hasNext()) {
            throw new RuntimeException("ScoredDocIDs contains documents outside this reader's segments !?");
          }
          current=contexts.next();
          maxDoc=current.docBase + current.reader().maxDoc();
          if (docID < maxDoc) {
            boolean validSegment=categoryListIter.setNextReader(current);
            validSegment&=aggregator.setNextReader(current);
            if (!validSegment) {
              while (docID < maxDoc && iterator.next()) {
                docID=iterator.getDocID();
              }
              if (docID < maxDoc) {
                iteratorDone=true;
              }
            }
          }
        }
 while (docID >= maxDoc);
        if (iteratorDone) {
          break;
        }
      }
      docID-=current.docBase;
      categoryListIter.getOrdinals(docID,ordinals);
      if (ordinals.length == 0) {
        continue;
      }
      aggregator.aggregate(docID,iterator.getScore(),ordinals);
    }
  }
}
