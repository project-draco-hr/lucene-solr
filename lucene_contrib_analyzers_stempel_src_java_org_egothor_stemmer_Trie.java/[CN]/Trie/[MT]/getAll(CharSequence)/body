{
  int res[]=new int[key.length()];
  int resc=0;
  Row now=getRow(root);
  int w;
  StrEnum e=new StrEnum(key,forward);
  boolean br=false;
  for (int i=0; i < key.length() - 1; i++) {
    Character ch=new Character(e.next());
    w=now.getCmd(ch);
    if (w >= 0) {
      int n=w;
      for (int j=0; j < resc; j++) {
        if (n == res[j]) {
          n=-1;
          break;
        }
      }
      if (n >= 0) {
        res[resc++]=n;
      }
    }
    w=now.getRef(ch);
    if (w >= 0) {
      now=getRow(w);
    }
 else {
      br=true;
      break;
    }
  }
  if (br == false) {
    w=now.getCmd(new Character(e.next()));
    if (w >= 0) {
      int n=w;
      for (int j=0; j < resc; j++) {
        if (n == res[j]) {
          n=-1;
          break;
        }
      }
      if (n >= 0) {
        res[resc++]=n;
      }
    }
  }
  if (resc < 1) {
    return null;
  }
  CharSequence R[]=new CharSequence[resc];
  for (int j=0; j < resc; j++) {
    R[j]=cmds.get(res[j]);
  }
  return R;
}
