{
  Directory directory=newDirectory();
  IndexWriterConfig config=newIndexWriterConfig(new MockAnalyzer(random()));
  RandomIndexWriter writer=new RandomIndexWriter(random(),directory,config);
  FieldType fieldType=new FieldType(TextField.TYPE_NOT_STORED);
  fieldType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  for (  String content : DOC_FIELDS) {
    Document doc=new Document();
    doc.add(newField(FIELD,content,fieldType));
    writer.addDocument(doc);
  }
  IndexReader reader=SlowCompositeReaderWrapper.wrap(writer.getReader());
  IndexSearcher searcher=new IndexSearcher(reader);
  writer.close();
  TermQuery tq=new TermQuery(new Term(FIELD,"a"));
  Weight weight=searcher.createNormalizedWeight(tq,PostingsEnum.FLAG_OFFSETS);
  LeafReaderContext ctx=(LeafReaderContext)searcher.getTopReaderContext();
  Scorer scorer=weight.scorer(ctx,null);
  assertEquals(scorer.nextDoc(),0);
  assertEquals(scorer.nextPosition(),0);
  assertEquals(scorer.startOffset(),0);
  assertEquals(scorer.endOffset(),1);
  assertEquals(scorer.nextDoc(),1);
  assertEquals(scorer.nextPosition(),0);
  assertEquals(scorer.startOffset(),0);
  assertEquals(scorer.endOffset(),1);
  assertEquals(scorer.nextPosition(),1);
  assertEquals(scorer.startOffset(),2);
  assertEquals(scorer.endOffset(),3);
  assertEquals(scorer.nextPosition(),2);
  assertEquals(scorer.startOffset(),4);
  assertEquals(scorer.endOffset(),5);
  assertEquals(scorer.nextPosition(),3);
  assertEquals(scorer.startOffset(),6);
  assertEquals(scorer.endOffset(),7);
  assertEquals(scorer.nextDoc(),3);
  assertEquals(scorer.nextPosition(),2);
  assertEquals(scorer.startOffset(),4);
  assertEquals(scorer.endOffset(),5);
  reader.close();
  directory.close();
}
