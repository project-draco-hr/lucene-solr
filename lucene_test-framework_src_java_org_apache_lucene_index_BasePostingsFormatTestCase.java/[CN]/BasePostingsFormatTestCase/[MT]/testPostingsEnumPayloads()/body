{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=new IndexWriterConfig(null);
  IndexWriter iw=new IndexWriter(dir,iwc);
  Document doc=new Document();
  Token token1=new Token("bar",0,3);
  token1.setPayload(new BytesRef("pay1"));
  Token token2=new Token("bar",4,7);
  token2.setPayload(new BytesRef("pay2"));
  doc.add(new TextField("foo",new CannedTokenStream(token1,token2)));
  iw.addDocument(doc);
  DirectoryReader reader=DirectoryReader.open(iw,false);
  PostingsEnum postings=getOnlySegmentReader(reader).postings(new Term("foo","bar"));
  assertEquals(-1,postings.docID());
  assertEquals(0,postings.nextDoc());
  assertEquals(2,postings.freq());
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,postings.nextDoc());
  TermsEnum termsEnum=getOnlySegmentReader(reader).terms("foo").iterator();
  termsEnum.seekExact(new BytesRef("bar"));
  PostingsEnum postings2=termsEnum.postings(postings);
  assertNotNull(postings2);
  assertReused("foo",postings,postings2);
  assertEquals(-1,postings2.docID());
  assertEquals(0,postings2.nextDoc());
  assertEquals(2,postings2.freq());
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,postings2.nextDoc());
  PostingsEnum docsOnly=termsEnum.postings(null,PostingsEnum.NONE);
  assertEquals(-1,docsOnly.docID());
  assertEquals(0,docsOnly.nextDoc());
  assertTrue(docsOnly.freq() == 1 || docsOnly.freq() == 2);
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsOnly.nextDoc());
  PostingsEnum docsOnly2=termsEnum.postings(docsOnly,PostingsEnum.NONE);
  assertNotNull(docsOnly2);
  assertReused("foo",docsOnly,docsOnly2);
  assertEquals(-1,docsOnly2.docID());
  assertEquals(0,docsOnly2.nextDoc());
  assertTrue(docsOnly2.freq() == 1 || docsOnly2.freq() == 2);
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsOnly2.nextDoc());
  PostingsEnum docsAndPositionsEnum=getOnlySegmentReader(reader).postings(new Term("foo","bar"),PostingsEnum.POSITIONS);
  assertEquals(-1,docsAndPositionsEnum.docID());
  assertEquals(0,docsAndPositionsEnum.nextDoc());
  assertEquals(2,docsAndPositionsEnum.freq());
  assertEquals(0,docsAndPositionsEnum.nextPosition());
  assertEquals(-1,docsAndPositionsEnum.startOffset());
  assertEquals(-1,docsAndPositionsEnum.endOffset());
  assertTrue(docsAndPositionsEnum.getPayload() == null || new BytesRef("pay1").equals(docsAndPositionsEnum.getPayload()));
  assertEquals(1,docsAndPositionsEnum.nextPosition());
  assertEquals(-1,docsAndPositionsEnum.startOffset());
  assertEquals(-1,docsAndPositionsEnum.endOffset());
  assertTrue(docsAndPositionsEnum.getPayload() == null || new BytesRef("pay2").equals(docsAndPositionsEnum.getPayload()));
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsAndPositionsEnum.nextDoc());
  PostingsEnum docsAndPositionsEnum2=termsEnum.postings(docsAndPositionsEnum,PostingsEnum.POSITIONS);
  assertReused("foo",docsAndPositionsEnum,docsAndPositionsEnum2);
  assertEquals(-1,docsAndPositionsEnum2.docID());
  assertEquals(0,docsAndPositionsEnum2.nextDoc());
  assertEquals(2,docsAndPositionsEnum2.freq());
  assertEquals(0,docsAndPositionsEnum2.nextPosition());
  assertEquals(-1,docsAndPositionsEnum2.startOffset());
  assertEquals(-1,docsAndPositionsEnum2.endOffset());
  assertTrue(docsAndPositionsEnum2.getPayload() == null || new BytesRef("pay1").equals(docsAndPositionsEnum2.getPayload()));
  assertEquals(1,docsAndPositionsEnum2.nextPosition());
  assertEquals(-1,docsAndPositionsEnum2.startOffset());
  assertEquals(-1,docsAndPositionsEnum2.endOffset());
  assertTrue(docsAndPositionsEnum2.getPayload() == null || new BytesRef("pay2").equals(docsAndPositionsEnum2.getPayload()));
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsAndPositionsEnum2.nextDoc());
  docsAndPositionsEnum=getOnlySegmentReader(reader).postings(new Term("foo","bar"),PostingsEnum.PAYLOADS);
  assertNotNull(docsAndPositionsEnum);
  assertEquals(-1,docsAndPositionsEnum.docID());
  assertEquals(0,docsAndPositionsEnum.nextDoc());
  assertEquals(2,docsAndPositionsEnum.freq());
  assertEquals(0,docsAndPositionsEnum.nextPosition());
  assertEquals(-1,docsAndPositionsEnum.startOffset());
  assertEquals(-1,docsAndPositionsEnum.endOffset());
  assertEquals(new BytesRef("pay1"),docsAndPositionsEnum.getPayload());
  assertEquals(1,docsAndPositionsEnum.nextPosition());
  assertEquals(-1,docsAndPositionsEnum.startOffset());
  assertEquals(-1,docsAndPositionsEnum.endOffset());
  assertEquals(new BytesRef("pay2"),docsAndPositionsEnum.getPayload());
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsAndPositionsEnum.nextDoc());
  docsAndPositionsEnum2=termsEnum.postings(docsAndPositionsEnum,PostingsEnum.PAYLOADS);
  assertReused("foo",docsAndPositionsEnum,docsAndPositionsEnum2);
  assertEquals(-1,docsAndPositionsEnum2.docID());
  assertEquals(0,docsAndPositionsEnum2.nextDoc());
  assertEquals(2,docsAndPositionsEnum2.freq());
  assertEquals(0,docsAndPositionsEnum2.nextPosition());
  assertEquals(-1,docsAndPositionsEnum2.startOffset());
  assertEquals(-1,docsAndPositionsEnum2.endOffset());
  assertEquals(new BytesRef("pay1"),docsAndPositionsEnum2.getPayload());
  assertEquals(1,docsAndPositionsEnum2.nextPosition());
  assertEquals(-1,docsAndPositionsEnum2.startOffset());
  assertEquals(-1,docsAndPositionsEnum2.endOffset());
  assertEquals(new BytesRef("pay2"),docsAndPositionsEnum2.getPayload());
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsAndPositionsEnum2.nextDoc());
  docsAndPositionsEnum=getOnlySegmentReader(reader).postings(new Term("foo","bar"),PostingsEnum.OFFSETS);
  assertNotNull(docsAndPositionsEnum);
  assertEquals(-1,docsAndPositionsEnum.docID());
  assertEquals(0,docsAndPositionsEnum.nextDoc());
  assertEquals(2,docsAndPositionsEnum.freq());
  assertEquals(0,docsAndPositionsEnum.nextPosition());
  assertEquals(-1,docsAndPositionsEnum.startOffset());
  assertEquals(-1,docsAndPositionsEnum.endOffset());
  assertTrue(docsAndPositionsEnum.getPayload() == null || new BytesRef("pay1").equals(docsAndPositionsEnum.getPayload()));
  assertEquals(1,docsAndPositionsEnum.nextPosition());
  assertEquals(-1,docsAndPositionsEnum.startOffset());
  assertEquals(-1,docsAndPositionsEnum.endOffset());
  assertTrue(docsAndPositionsEnum.getPayload() == null || new BytesRef("pay2").equals(docsAndPositionsEnum.getPayload()));
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsAndPositionsEnum.nextDoc());
  docsAndPositionsEnum2=termsEnum.postings(docsAndPositionsEnum,PostingsEnum.OFFSETS);
  assertReused("foo",docsAndPositionsEnum,docsAndPositionsEnum2);
  assertEquals(-1,docsAndPositionsEnum2.docID());
  assertEquals(0,docsAndPositionsEnum2.nextDoc());
  assertEquals(2,docsAndPositionsEnum2.freq());
  assertEquals(0,docsAndPositionsEnum2.nextPosition());
  assertEquals(-1,docsAndPositionsEnum2.startOffset());
  assertEquals(-1,docsAndPositionsEnum2.endOffset());
  assertTrue(docsAndPositionsEnum2.getPayload() == null || new BytesRef("pay1").equals(docsAndPositionsEnum2.getPayload()));
  assertEquals(1,docsAndPositionsEnum2.nextPosition());
  assertEquals(-1,docsAndPositionsEnum2.startOffset());
  assertEquals(-1,docsAndPositionsEnum2.endOffset());
  assertTrue(docsAndPositionsEnum2.getPayload() == null || new BytesRef("pay2").equals(docsAndPositionsEnum2.getPayload()));
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsAndPositionsEnum2.nextDoc());
  docsAndPositionsEnum=getOnlySegmentReader(reader).postings(new Term("foo","bar"),PostingsEnum.ALL);
  assertNotNull(docsAndPositionsEnum);
  assertEquals(-1,docsAndPositionsEnum.docID());
  assertEquals(0,docsAndPositionsEnum.nextDoc());
  assertEquals(2,docsAndPositionsEnum.freq());
  assertEquals(0,docsAndPositionsEnum.nextPosition());
  assertEquals(-1,docsAndPositionsEnum.startOffset());
  assertEquals(-1,docsAndPositionsEnum.endOffset());
  assertEquals(new BytesRef("pay1"),docsAndPositionsEnum.getPayload());
  assertEquals(1,docsAndPositionsEnum.nextPosition());
  assertEquals(-1,docsAndPositionsEnum.startOffset());
  assertEquals(-1,docsAndPositionsEnum.endOffset());
  assertEquals(new BytesRef("pay2"),docsAndPositionsEnum.getPayload());
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsAndPositionsEnum.nextDoc());
  docsAndPositionsEnum2=termsEnum.postings(docsAndPositionsEnum,PostingsEnum.ALL);
  assertReused("foo",docsAndPositionsEnum,docsAndPositionsEnum2);
  assertEquals(-1,docsAndPositionsEnum2.docID());
  assertEquals(0,docsAndPositionsEnum2.nextDoc());
  assertEquals(2,docsAndPositionsEnum2.freq());
  assertEquals(0,docsAndPositionsEnum2.nextPosition());
  assertEquals(-1,docsAndPositionsEnum2.startOffset());
  assertEquals(-1,docsAndPositionsEnum2.endOffset());
  assertEquals(new BytesRef("pay1"),docsAndPositionsEnum2.getPayload());
  assertEquals(1,docsAndPositionsEnum2.nextPosition());
  assertEquals(-1,docsAndPositionsEnum2.startOffset());
  assertEquals(-1,docsAndPositionsEnum2.endOffset());
  assertEquals(new BytesRef("pay2"),docsAndPositionsEnum2.getPayload());
  assertEquals(DocIdSetIterator.NO_MORE_DOCS,docsAndPositionsEnum2.nextDoc());
  iw.close();
  reader.close();
  dir.close();
}
