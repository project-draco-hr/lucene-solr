{
  totalPostings=0;
  totalPayloadBytes=0;
  fields=new TreeMap<>();
  final int numFields=TestUtil.nextInt(random(),1,5);
  if (VERBOSE) {
    System.out.println("TEST: " + numFields + " fields");
  }
  maxDoc=0;
  FieldInfo[] fieldInfoArray=new FieldInfo[numFields];
  int fieldUpto=0;
  while (fieldUpto < numFields) {
    String field=TestUtil.randomSimpleString(random());
    if (fields.containsKey(field)) {
      continue;
    }
    fieldInfoArray[fieldUpto]=new FieldInfo(field,fieldUpto,false,false,true,IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS,DocValuesType.NO,-1,null);
    fieldUpto++;
    SortedMap<BytesRef,SeedAndOrd> postings=new TreeMap<>();
    fields.put(field,postings);
    Set<String> seenTerms=new HashSet<>();
    int numTerms;
    if (random().nextInt(10) == 7) {
      numTerms=atLeast(50);
    }
 else {
      numTerms=TestUtil.nextInt(random(),2,20);
    }
    while (postings.size() < numTerms) {
      int termUpto=postings.size();
      String term=TestUtil.randomSimpleString(random());
      if (seenTerms.contains(term)) {
        continue;
      }
      seenTerms.add(term);
      if (TEST_NIGHTLY && termUpto == 0 && fieldUpto == 1) {
        term="big_" + term;
      }
 else       if (termUpto == 1 && fieldUpto == 1) {
        term="medium_" + term;
      }
 else       if (random().nextBoolean()) {
        term="low_" + term;
      }
 else {
        term="verylow_" + term;
      }
      long termSeed=random().nextLong();
      postings.put(new BytesRef(term),new SeedAndOrd(termSeed));
      DocsEnum docsEnum=getSeedPostings(term,termSeed,false,IndexOptions.DOCS,true);
      int doc;
      int lastDoc=0;
      while ((doc=docsEnum.nextDoc()) != DocsEnum.NO_MORE_DOCS) {
        lastDoc=doc;
      }
      maxDoc=Math.max(lastDoc,maxDoc);
    }
    long ord=0;
    for (    SeedAndOrd ent : postings.values()) {
      ent.ord=ord++;
    }
  }
  fieldInfos=new FieldInfos(fieldInfoArray);
  maxDoc++;
  globalLiveDocs=new FixedBitSet(maxDoc);
  double liveRatio=random().nextDouble();
  for (int i=0; i < maxDoc; i++) {
    if (random().nextDouble() <= liveRatio) {
      globalLiveDocs.set(i);
    }
  }
  allTerms=new ArrayList<>();
  for (  Map.Entry<String,SortedMap<BytesRef,SeedAndOrd>> fieldEnt : fields.entrySet()) {
    String field=fieldEnt.getKey();
    long ord=0;
    for (    Map.Entry<BytesRef,SeedAndOrd> termEnt : fieldEnt.getValue().entrySet()) {
      allTerms.add(new FieldAndTerm(field,termEnt.getKey(),ord++));
    }
  }
  if (VERBOSE) {
    System.out.println("TEST: done init postings; " + allTerms.size() + " total terms, across "+ fieldInfos.size()+ " fields");
  }
}
