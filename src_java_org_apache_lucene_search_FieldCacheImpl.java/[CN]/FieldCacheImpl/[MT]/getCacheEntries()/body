{
  List result=new ArrayList(17);
  Iterator outerKeys=caches.keySet().iterator();
  while (outerKeys.hasNext()) {
    Class cacheType=(Class)outerKeys.next();
    Cache cache=(Cache)caches.get(cacheType);
    Iterator innerKeys=cache.readerCache.keySet().iterator();
    while (innerKeys.hasNext()) {
      Object readerKey=innerKeys.next();
      if (null != readerKey && cache.readerCache.containsKey(readerKey)) {
        Map innerCache=((Map)cache.readerCache.get(readerKey));
        Iterator entrySetIterator=innerCache.entrySet().iterator();
        while (entrySetIterator.hasNext()) {
          Map.Entry mapEntry=(Map.Entry)entrySetIterator.next();
          Entry entry=(Entry)mapEntry.getKey();
          result.add(new CacheEntryImpl(readerKey,entry.field,cacheType,entry.type,entry.custom,entry.locale,mapEntry.getValue()));
        }
      }
    }
  }
  return (CacheEntry[])result.toArray(new CacheEntry[result.size()]);
}
