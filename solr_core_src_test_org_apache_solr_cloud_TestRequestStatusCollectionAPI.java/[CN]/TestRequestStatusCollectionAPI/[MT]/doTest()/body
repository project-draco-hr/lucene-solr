{
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.set(CollectionParams.ACTION,CollectionParams.CollectionAction.CREATE.toString());
  params.set("name","collection2");
  params.set("numShards",2);
  params.set("replicationFactor",1);
  params.set("maxShardsPerNode",100);
  params.set("collection.configName","conf1");
  params.set("async","1000");
  try {
    sendRequest(params);
  }
 catch (  SolrServerException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  int maxCounter=10;
  NamedList r=null;
  NamedList status=null;
  String message=null;
  params=new ModifiableSolrParams();
  params.set("action",CollectionParams.CollectionAction.REQUESTSTATUS.toString());
  params.set(OverseerCollectionProcessor.REQUESTID,"1000");
  try {
    message=sendStatusRequestWithRetry(params,10);
  }
 catch (  SolrServerException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  assertEquals("Task 1000 not found in completed tasks.","found 1000 in completed tasks",message);
  params=new ModifiableSolrParams();
  params.set(CollectionParams.ACTION,CollectionParams.CollectionAction.REQUESTSTATUS.toString());
  params.set(OverseerCollectionProcessor.REQUESTID,"9999999");
  try {
    r=sendRequest(params);
    status=(NamedList)r.get("status");
    message=(String)status.get("msg");
  }
 catch (  SolrServerException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  assertEquals("Task 9999999 found in tasks queue.","Did not find taskid [9999999] in any tasks queue",message);
  params=new ModifiableSolrParams();
  params.set(CollectionParams.ACTION,CollectionParams.CollectionAction.SPLITSHARD.toString());
  params.set("collection","collection2");
  params.set("shard","shard1");
  params.set("async","1001");
  try {
    sendRequest(params);
  }
 catch (  SolrServerException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  params=new ModifiableSolrParams();
  params.set("action",CollectionParams.CollectionAction.REQUESTSTATUS.toString());
  params.set(OverseerCollectionProcessor.REQUESTID,"1001");
  try {
    message=sendStatusRequestWithRetry(params,maxCounter);
  }
 catch (  SolrServerException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  assertEquals("Task 1001 not found in completed tasks.","found 1001 in completed tasks",message);
  params=new ModifiableSolrParams();
  params.set(CollectionParams.ACTION,CollectionParams.CollectionAction.CREATE.toString());
  params.set("name","collection2");
  params.set("numShards",2);
  params.set("replicationFactor",1);
  params.set("maxShardsPerNode",100);
  params.set("collection.configName","conf1");
  params.set("async","1002");
  try {
    sendRequest(params);
  }
 catch (  SolrServerException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  params=new ModifiableSolrParams();
  params.set("action",CollectionParams.CollectionAction.REQUESTSTATUS.toString());
  params.set(OverseerCollectionProcessor.REQUESTID,"1002");
  try {
    message=sendStatusRequestWithRetry(params,10);
  }
 catch (  SolrServerException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  assertEquals("Task 1002 not found in completed tasks.","found 1002 in failed tasks",message);
  params=new ModifiableSolrParams();
  params.set(CollectionParams.ACTION,CollectionParams.CollectionAction.CREATE.toString());
  params.set("name","collection3");
  params.set("numShards",1);
  params.set("replicationFactor",1);
  params.set("maxShardsPerNode",100);
  params.set("collection.configName","conf1");
  params.set("async","1002");
  try {
    r=sendRequest(params);
  }
 catch (  SolrServerException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  assertEquals("Did not error out on duplicate requests (same request id)","Task with the same requestid already exists.",r.get("error"));
}
