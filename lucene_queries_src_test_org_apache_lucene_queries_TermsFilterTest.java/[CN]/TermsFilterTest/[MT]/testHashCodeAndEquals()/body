{
  int num=atLeast(100);
  final boolean singleField=random().nextBoolean();
  List<Term> terms=new ArrayList<>();
  Set<Term> uniqueTerms=new HashSet<>();
  for (int i=0; i < num; i++) {
    String field="field" + (singleField ? "1" : random().nextInt(100));
    String string=TestUtil.randomRealisticUnicodeString(random());
    terms.add(new Term(field,string));
    uniqueTerms.add(new Term(field,string));
    TermsFilter left=termsFilter(singleField ? random().nextBoolean() : false,uniqueTerms);
    Collections.shuffle(terms,random());
    TermsFilter right=termsFilter(singleField ? random().nextBoolean() : false,terms);
    assertEquals(right,left);
    assertEquals(right.hashCode(),left.hashCode());
    if (uniqueTerms.size() > 1) {
      List<Term> asList=new ArrayList<>(uniqueTerms);
      asList.remove(0);
      TermsFilter notEqual=termsFilter(singleField ? random().nextBoolean() : false,asList);
      assertFalse(left.equals(notEqual));
      assertFalse(right.equals(notEqual));
    }
  }
}
