{
  final CharArraySet dict=makeDictionary("a","e","i","o","u","y","bc","def");
  Analyzer a=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName,    Reader reader){
      Tokenizer tokenizer=new MockTokenizer(reader,MockTokenizer.WHITESPACE,false);
      return new TokenStreamComponents(tokenizer,new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT,tokenizer,dict));
    }
  }
;
  checkRandomData(random,a,10000 * RANDOM_MULTIPLIER);
  InputSource is=new InputSource(getClass().getResource("da_UTF8.xml").toExternalForm());
  final HyphenationTree hyphenator=HyphenationCompoundWordTokenFilter.getHyphenationTree(is);
  Analyzer b=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName,    Reader reader){
      Tokenizer tokenizer=new MockTokenizer(reader,MockTokenizer.WHITESPACE,false);
      TokenFilter filter=new HyphenationCompoundWordTokenFilter(TEST_VERSION_CURRENT,tokenizer,hyphenator);
      return new TokenStreamComponents(tokenizer,filter);
    }
  }
;
  checkRandomData(random,b,10000 * RANDOM_MULTIPLIER);
}
