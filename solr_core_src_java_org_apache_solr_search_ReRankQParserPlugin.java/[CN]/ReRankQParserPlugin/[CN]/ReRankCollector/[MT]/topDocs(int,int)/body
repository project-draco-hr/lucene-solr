{
  try {
    TopDocs mainDocs=mainCollector.topDocs(0,Math.max(reRankDocs,length));
    if (mainDocs.totalHits == 0 || mainDocs.scoreDocs.length == 0) {
      return mainDocs;
    }
    ScoreDoc[] mainScoreDocs=mainDocs.scoreDocs;
    ScoreDoc[] reRankScoreDocs=new ScoreDoc[Math.min(mainScoreDocs.length,reRankDocs)];
    System.arraycopy(mainScoreDocs,0,reRankScoreDocs,0,reRankScoreDocs.length);
    mainDocs.scoreDocs=reRankScoreDocs;
    TopDocs rescoredDocs=reRankQueryRescorer.rescore(searcher,mainDocs,mainDocs.scoreDocs.length);
    howMany=Math.min(howMany,mainScoreDocs.length);
    if (boostedPriority != null) {
      SolrRequestInfo info=SolrRequestInfo.getRequestInfo();
      Map requestContext=null;
      if (info != null) {
        requestContext=info.getReq().getContext();
      }
      IntIntHashMap boostedDocs=QueryElevationComponent.getBoostDocs((SolrIndexSearcher)searcher,boostedPriority,requestContext);
      Arrays.sort(rescoredDocs.scoreDocs,new BoostedComp(boostedDocs,mainDocs.scoreDocs,rescoredDocs.getMaxScore()));
      if (howMany == rescoredDocs.scoreDocs.length) {
        return rescoredDocs;
      }
 else       if (howMany > rescoredDocs.scoreDocs.length) {
        ScoreDoc[] scoreDocs=new ScoreDoc[howMany];
        System.arraycopy(mainScoreDocs,0,scoreDocs,0,scoreDocs.length);
        System.arraycopy(rescoredDocs.scoreDocs,0,scoreDocs,0,rescoredDocs.scoreDocs.length);
        rescoredDocs.scoreDocs=scoreDocs;
        return rescoredDocs;
      }
 else {
        ScoreDoc[] scoreDocs=new ScoreDoc[howMany];
        System.arraycopy(rescoredDocs.scoreDocs,0,scoreDocs,0,howMany);
        rescoredDocs.scoreDocs=scoreDocs;
        return rescoredDocs;
      }
    }
 else {
      if (howMany == rescoredDocs.scoreDocs.length) {
        return rescoredDocs;
      }
 else       if (howMany > rescoredDocs.scoreDocs.length) {
        ScoreDoc[] scoreDocs=new ScoreDoc[howMany];
        System.arraycopy(mainScoreDocs,0,scoreDocs,0,scoreDocs.length);
        System.arraycopy(rescoredDocs.scoreDocs,0,scoreDocs,0,rescoredDocs.scoreDocs.length);
        rescoredDocs.scoreDocs=scoreDocs;
        return rescoredDocs;
      }
 else {
        ScoreDoc[] scoreDocs=new ScoreDoc[howMany];
        System.arraycopy(rescoredDocs.scoreDocs,0,scoreDocs,0,howMany);
        rescoredDocs.scoreDocs=scoreDocs;
        return rescoredDocs;
      }
    }
  }
 catch (  Exception e) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,e);
  }
}
