{
  FacetIndexingParams dfip=new DefaultFacetIndexingParams();
  CategoryPath cp=new CategoryPath();
  PathPolicy pathPolicy=PathPolicy.ALL_CATEGORIES;
  assertEquals("path policy does not match default for root",pathPolicy.shouldAdd(cp),dfip.getPathPolicy().shouldAdd(cp));
  for (int i=0; i < 30; i++) {
    int nComponents=random().nextInt(10);
    String[] components=new String[nComponents];
    for (int j=0; j < components.length; j++) {
      components[j]=(Integer.valueOf(random().nextInt(30))).toString();
    }
    cp=new CategoryPath(components);
    assertEquals("path policy does not match default for " + cp.toString('/'),pathPolicy.shouldAdd(cp),dfip.getPathPolicy().shouldAdd(cp));
  }
  OrdinalPolicy ordinalPolicy=OrdinalPolicy.ALL_PARENTS;
  assertEquals("ordinal policy does not match default for root",ordinalPolicy.shouldAdd(TaxonomyReader.ROOT_ORDINAL),dfip.getOrdinalPolicy().shouldAdd(TaxonomyReader.ROOT_ORDINAL));
  for (int i=0; i < 30; i++) {
    int ordinal=random().nextInt();
    assertEquals("ordinal policy does not match default for " + ordinal,ordinalPolicy.shouldAdd(ordinal),dfip.getOrdinalPolicy().shouldAdd(ordinal));
  }
}
