{
  CachingCollector cc=new CachingCollector(new NoOpCollector(false),true,1);
  cc.setScorer(new MockScorer());
  for (int i=0; i < 1000; i++) {
    cc.collect(i);
  }
  cc.replay(new Collector(){
    int prevDocID=-1;
    @Override public void setScorer(    Scorer scorer) throws IOException {
    }
    @Override public void setNextReader(    AtomicReaderContext context) throws IOException {
    }
    @Override public void collect(    int doc) throws IOException {
      assertEquals(prevDocID + 1,doc);
      prevDocID=doc;
    }
    @Override public boolean acceptsDocsOutOfOrder(){
      return false;
    }
  }
);
}
