{
  int cnt=0;
  while (spans.nextDoc() != Spans.NO_MORE_DOCS) {
    while (spans.nextStartPosition() != Spans.NO_MORE_POSITIONS) {
      if (VERBOSE)       System.out.println("\nSpans Dump --");
      if (spans.isPayloadAvailable()) {
        Collection<byte[]> payload=spans.getPayload();
        if (VERBOSE) {
          System.out.println("payloads for span:" + payload.size());
          for (          final byte[] bytes : payload) {
            System.out.println("doc:" + spans.docID() + " s:"+ spans.startPosition()+ " e:"+ spans.endPosition()+ " "+ new String(bytes,StandardCharsets.UTF_8));
          }
        }
        assertEquals("payload size",numPayloads[cnt],payload.size());
      }
 else {
        assertFalse("Expected spans:" + numPayloads[cnt] + " found: 0",numPayloads.length > 0 && numPayloads[cnt] > 0);
      }
      cnt++;
    }
  }
  assertEquals("expected numSpans",numSpans,cnt);
}
