{
  assertTrue("spans is null and it shouldn't be",spans != null);
  int seen=0;
  while (spans.nextDoc() != Spans.NO_MORE_DOCS) {
    while (spans.nextStartPosition() != Spans.NO_MORE_POSITIONS) {
      assertEquals("isPayloadAvailable should return true/false as payloads are expected",expectedNumPayloads > 0,spans.isPayloadAvailable());
      if (spans.isPayloadAvailable()) {
        Collection<byte[]> payload=spans.getPayload();
        assertEquals("payload size",expectedNumPayloads,payload.size());
        for (        final byte[] thePayload : payload) {
          assertEquals("payload length",expectedPayloadLength,thePayload.length);
          assertEquals("payload first byte",expectedFirstByte,thePayload[0]);
        }
      }
      seen++;
    }
  }
  assertEquals("expectedNumSpans",expectedNumSpans,seen);
}
