{
  List<DocsAndPositionsEnum> docsEnums=new LinkedList<DocsAndPositionsEnum>();
  final Bits delDocs=indexReader.getDeletedDocs();
  for (int i=0; i < terms.length; i++) {
    DocsAndPositionsEnum postings=indexReader.termPositionsEnum(delDocs,terms[i].field(),terms[i].bytes());
    if (postings != null) {
      docsEnums.add(postings);
    }
 else {
      if (indexReader.termDocsEnum(delDocs,terms[i].field(),terms[i].bytes()) != null) {
        throw new IllegalStateException("field \"" + terms[i].field() + "\" was indexed with Field.omitTermFreqAndPositions=true; cannot run PhraseQuery (term="+ terms[i].text()+ ")");
      }
    }
  }
  _queue=new DocsQueue(docsEnums);
  _posList=new IntQueue();
}
