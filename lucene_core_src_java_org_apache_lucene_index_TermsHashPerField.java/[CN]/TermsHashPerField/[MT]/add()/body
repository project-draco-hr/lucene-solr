{
  termAtt.fillBytesRef();
  int termID=bytesHash.add(termBytesRef);
  if (termID >= 0) {
    bytesHash.byteStart(termID);
    if (numPostingInt + intPool.intUpto > IntBlockPool.INT_BLOCK_SIZE) {
      intPool.nextBuffer();
    }
    if (ByteBlockPool.BYTE_BLOCK_SIZE - bytePool.byteUpto < numPostingInt * ByteBlockPool.FIRST_LEVEL_SIZE) {
      bytePool.nextBuffer();
    }
    intUptos=intPool.buffer;
    intUptoStart=intPool.intUpto;
    intPool.intUpto+=streamCount;
    postingsArray.intStarts[termID]=intUptoStart + intPool.intOffset;
    for (int i=0; i < streamCount; i++) {
      final int upto=bytePool.newSlice(ByteBlockPool.FIRST_LEVEL_SIZE);
      intUptos[intUptoStart + i]=upto + bytePool.byteOffset;
    }
    postingsArray.byteStarts[termID]=intUptos[intUptoStart];
    newTerm(termID);
  }
 else {
    termID=(-termID) - 1;
    int intStart=postingsArray.intStarts[termID];
    intUptos=intPool.buffers[intStart >> IntBlockPool.INT_BLOCK_SHIFT];
    intUptoStart=intStart & IntBlockPool.INT_BLOCK_MASK;
    addTerm(termID);
  }
  if (doNextCall) {
    nextPerField.add(postingsArray.textStarts[termID]);
  }
}
