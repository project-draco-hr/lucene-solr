{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  doc.add(newStringField("id","0",Field.Store.YES));
  doc.add(newTextField("field","wizard the the the the the oz",Field.Store.NO));
  w.addDocument(doc);
  doc=new Document();
  doc.add(newStringField("id","1",Field.Store.YES));
  doc.add(newTextField("field","wizard oz the the the the the the",Field.Store.NO));
  w.addDocument(doc);
  IndexReader r=w.getReader();
  w.close();
  BooleanQuery bq=new BooleanQuery();
  bq.add(new TermQuery(new Term("field","wizard")),Occur.SHOULD);
  bq.add(new TermQuery(new Term("field","oz")),Occur.SHOULD);
  IndexSearcher searcher=newSearcher(r);
  TopDocs hits=searcher.search(bq,10);
  assertEquals(2,hits.totalHits);
  assertEquals("0",searcher.doc(hits.scoreDocs[0].doc).get("id"));
  assertEquals("1",searcher.doc(hits.scoreDocs[1].doc).get("id"));
  PhraseQuery pq=new PhraseQuery();
  pq.add(new Term("field","wizard"));
  pq.add(new Term("field","oz"));
  Rescorer rescorer=new QueryRescorer(pq){
    @Override protected float combine(    float firstPassScore,    boolean secondPassMatches,    float secondPassScore){
      float score=firstPassScore;
      if (secondPassMatches) {
        score+=2.0 * secondPassScore;
      }
      return score;
    }
  }
;
  TopDocs hits2=rescorer.rescore(searcher,hits,10);
  assertEquals(2,hits2.totalHits);
  assertEquals("1",searcher.doc(hits2.scoreDocs[0].doc).get("id"));
  assertEquals("0",searcher.doc(hits2.scoreDocs[1].doc).get("id"));
  int docID=hits2.scoreDocs[0].doc;
  Explanation explain=rescorer.explain(searcher,searcher.explain(bq,docID),docID);
  String s=explain.toString();
  assertTrue(s.contains("TestQueryRescorer$"));
  assertTrue(s.contains("combined first and second pass score"));
  assertTrue(s.contains("first pass score"));
  assertTrue(s.contains("= second pass score"));
  assertEquals(hits2.scoreDocs[0].score,explain.getValue(),0.0f);
  docID=hits2.scoreDocs[1].doc;
  explain=rescorer.explain(searcher,searcher.explain(bq,docID),docID);
  s=explain.toString();
  assertTrue(s.contains("TestQueryRescorer$"));
  assertTrue(s.contains("combined first and second pass score"));
  assertTrue(s.contains("first pass score"));
  assertTrue(s.contains("no second pass score"));
  assertFalse(s.contains("= second pass score"));
  assertTrue(s.contains("NON-MATCH"));
  assertEquals(hits2.scoreDocs[1].score,explain.getValue(),0.0f);
  r.close();
  dir.close();
}
