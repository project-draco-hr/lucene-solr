{
  AtomicReader reader=readerContext.reader();
  OpenBitSet[] docSets=new OpenBitSet[numPieces];
  for (int i=0; i < docSets.length; i++) {
    docSets[i]=new OpenBitSet(reader.maxDoc());
  }
  Bits liveDocs=reader.getLiveDocs();
  Fields fields=reader.fields();
  Terms terms=fields == null ? null : fields.terms(field.getName());
  TermsEnum termsEnum=terms == null ? null : terms.iterator(null);
  if (termsEnum == null)   return docSets;
  BytesRef term=null;
  DocsEnum docsEnum=null;
  for (; ; ) {
    term=termsEnum.next();
    if (term == null)     break;
    CharsRef ref=new CharsRef(term.length);
    ref=field.getType().indexedToReadable(term,ref);
    int hash=Hash.murmurhash3_x86_32(ref,ref.offset,ref.length,0);
    docsEnum=termsEnum.docs(liveDocs,docsEnum,DocsEnum.FLAG_NONE);
    for (; ; ) {
      int doc=docsEnum.nextDoc();
      if (doc == DocsEnum.NO_MORE_DOCS)       break;
      if (ranges == null) {
        docSets[currPartition].fastSet(doc);
        currPartition=(currPartition + 1) % numPieces;
      }
 else {
        for (int i=0; i < rangesArr.length; i++) {
          if (rangesArr[i].includes(hash)) {
            docSets[i].fastSet(doc);
          }
        }
      }
    }
  }
  return docSets;
}
