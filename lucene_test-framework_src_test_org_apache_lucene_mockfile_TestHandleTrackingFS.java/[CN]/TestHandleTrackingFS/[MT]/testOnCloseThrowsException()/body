{
  Path path=wrap(createTempDir());
  FileSystem fs=new HandleTrackingFS("test://",path.getFileSystem()){
    @Override protected void onClose(    Path path,    Object stream) throws IOException {
      throw new IOException("boom");
    }
    @Override protected void onOpen(    Path path,    Object stream) throws IOException {
    }
  }
.getFileSystem(URI.create("file:///"));
  Path dir=new FilterPath(path,fs);
  OutputStream file=Files.newOutputStream(dir.resolve("somefile"));
  file.write(5);
  try {
    file.close();
    fail("expected IOException");
  }
 catch (  IOException ex) {
  }
  SeekableByteChannel channel=Files.newByteChannel(dir.resolve("somefile"));
  try {
    channel.close();
    fail("expected IOException");
  }
 catch (  IOException ex) {
  }
  InputStream stream=Files.newInputStream(dir.resolve("somefile"));
  try {
    stream.close();
    fail("expected IOException");
  }
 catch (  IOException ex) {
  }
  fs.close();
  DirectoryStream<Path> dirStream=Files.newDirectoryStream(dir);
  try {
    dirStream.close();
    fail("expected IOException");
  }
 catch (  IOException ex) {
  }
}
