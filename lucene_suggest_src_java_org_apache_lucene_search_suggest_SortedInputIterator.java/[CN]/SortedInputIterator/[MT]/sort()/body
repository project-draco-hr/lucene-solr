{
  String prefix=getClass().getSimpleName();
  File directory=OfflineSorter.defaultTempDir();
  tempInput=File.createTempFile(prefix,".input",directory);
  tempSorted=File.createTempFile(prefix,".sorted",directory);
  final OfflineSorter.ByteSequencesWriter writer=new OfflineSorter.ByteSequencesWriter(tempInput);
  boolean success=false;
  try {
    BytesRef spare;
    byte[] buffer=new byte[0];
    ByteArrayDataOutput output=new ByteArrayDataOutput(buffer);
    while ((spare=source.next()) != null) {
      encode(writer,output,buffer,spare,source.payload(),source.contexts(),source.weight());
    }
    writer.close();
    new OfflineSorter(tieBreakByCostComparator).sort(tempInput,tempSorted);
    ByteSequencesReader reader=new OfflineSorter.ByteSequencesReader(tempSorted);
    success=true;
    return reader;
  }
  finally {
    if (success) {
      IOUtils.close(writer);
    }
 else {
      try {
        IOUtils.closeWhileHandlingException(writer);
      }
  finally {
        close();
      }
    }
  }
}
