{
  ensureOpen();
  final DirectoryReader r2;
  if (taxoWriter == null) {
    r2=DirectoryReader.openIfChanged(indexReader);
  }
 else {
    r2=DirectoryReader.openIfChanged(indexReader,taxoWriter.getInternalIndexWriter(),false);
  }
  if (r2 == null) {
    return null;
  }
  boolean success=false;
  try {
    boolean recreated=false;
    if (taxoWriter == null) {
      String t1=indexReader.getIndexCommit().getUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH);
      String t2=r2.getIndexCommit().getUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH);
      if (t1 == null) {
        if (t2 != null) {
          recreated=true;
        }
      }
 else       if (!t1.equals(t2)) {
        recreated=true;
      }
    }
 else {
      if (taxoEpoch != taxoWriter.getTaxonomyEpoch()) {
        recreated=true;
      }
    }
    final DirectoryTaxonomyReader newtr;
    if (recreated) {
      newtr=new DirectoryTaxonomyReader(r2,taxoWriter,null,null,null,null);
    }
 else {
      newtr=new DirectoryTaxonomyReader(r2,taxoWriter,ordinalCache,categoryCache,parentArray,childrenArrays);
    }
    success=true;
    return newtr;
  }
  finally {
    if (!success) {
      IOUtils.closeWhileHandlingException(r2);
    }
  }
}
