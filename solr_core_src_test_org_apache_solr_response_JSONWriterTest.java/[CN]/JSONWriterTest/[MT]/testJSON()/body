{
  final String namedListStyle=(random().nextBoolean() ? JSONWriter.JSON_NL_ARROFARR : JSONWriter.JSON_NL_ARROFNVP);
  SolrQueryRequest req=req("wt","json","json.nl",namedListStyle);
  SolrQueryResponse rsp=new SolrQueryResponse();
  JSONResponseWriter w=new JSONResponseWriter();
  StringWriter buf=new StringWriter();
  NamedList nl=new NamedList();
  nl.add("data1","he\u2028llo\u2029!");
  nl.add(null,42);
  rsp.add("nl",nl);
  rsp.add("byte",Byte.valueOf((byte)-3));
  rsp.add("short",Short.valueOf((short)-4));
  rsp.add("bytes","abc".getBytes(StandardCharsets.UTF_8));
  w.write(buf,req,rsp);
  final String expectedNLjson;
  if (namedListStyle == JSONWriter.JSON_NL_ARROFARR) {
    expectedNLjson="\"nl\":[[\"data1\",\"he\\u2028llo\\u2029!\"],[null,42]]";
  }
 else   if (namedListStyle == JSONWriter.JSON_NL_ARROFNVP) {
    expectedNLjson="\"nl\":[{\"name\":\"data1\",\"str\":\"he\\u2028llo\\u2029!\"},{\"int\":42}]";
  }
 else {
    expectedNLjson=null;
    fail("unexpected namedListStyle=" + namedListStyle);
  }
  jsonEq("{" + expectedNLjson + ",\"byte\":-3,\"short\":-4,\"bytes\":\"YWJj\"}",buf.toString());
  req.close();
}
