{
  if (obj == null) {
    return 0;
  }
  if (seen.contains(obj)) {
    return 0;
  }
  seen.add(obj);
  Class<?> clazz=obj.getClass();
  if (clazz.isArray()) {
    return measureArraySize(obj,seen);
  }
  long size=NUM_BYTES_OBJECT_HEADER;
  long innerSize=0L;
  while (clazz != null) {
    final Field[] fields=clazz.getDeclaredFields();
    for (    final Field f : fields) {
      if (Modifier.isStatic(f.getModifiers())) {
        continue;
      }
      size=reflectFieldSize(size,f);
      if (!f.getType().isPrimitive()) {
        try {
          f.setAccessible(true);
          innerSize+=measureObjectSize(f.get(obj),seen);
        }
 catch (        IllegalAccessException ex) {
          throw new RuntimeException("Cannot reflect instance field: " + f.getDeclaringClass().getName() + "#"+ f.getName(),ex);
        }
      }
    }
    clazz=clazz.getSuperclass();
  }
  return alignObjectSize(size) + innerSize;
}
