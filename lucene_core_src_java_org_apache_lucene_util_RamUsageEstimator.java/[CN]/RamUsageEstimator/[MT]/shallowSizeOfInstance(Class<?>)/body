{
  if (clazz.isArray())   throw new IllegalArgumentException("This method does not work with array classes.");
  if (clazz.isPrimitive())   return primitiveSizes.get(clazz);
  long size=NUM_BYTES_OBJECT_HEADER;
  for (; clazz != null; clazz=clazz.getSuperclass()) {
    final Class<?> target=clazz;
    final Field[] fields=AccessController.doPrivileged(new PrivilegedAction<Field[]>(){
      @Override public Field[] run(){
        return target.getDeclaredFields();
      }
    }
);
    for (    Field f : fields) {
      if (!Modifier.isStatic(f.getModifiers())) {
        size=adjustForField(size,f);
      }
    }
  }
  return alignObjectSize(size);
}
