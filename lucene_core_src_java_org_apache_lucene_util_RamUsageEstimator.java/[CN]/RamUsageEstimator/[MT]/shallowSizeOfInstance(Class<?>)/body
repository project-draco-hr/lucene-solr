{
  if (clazz.isArray())   throw new IllegalArgumentException("This method does not work with array classes.");
  if (clazz.isPrimitive())   return primitiveSizes.get(clazz);
  long size=NUM_BYTES_OBJECT_HEADER;
  while (clazz != null) {
    final Field[] fields=clazz.getDeclaredFields();
    boolean fieldFound=false;
    for (    final Field f : fields) {
      if (Modifier.isStatic(f.getModifiers())) {
        continue;
      }
      size=reflectFieldSize(size,f);
      fieldFound=true;
    }
    if (useUnsafe && fieldFound) {
      break;
    }
    clazz=clazz.getSuperclass();
  }
  return alignObjectSize(size);
}
