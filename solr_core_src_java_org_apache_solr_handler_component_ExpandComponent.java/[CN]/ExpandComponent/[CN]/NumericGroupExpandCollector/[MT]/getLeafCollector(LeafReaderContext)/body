{
  final int docBase=context.docBase;
  this.docValues=context.reader().getNumericDocValues(this.field);
  final LongObjectHashMap<LeafCollector> leafCollectors=new LongObjectHashMap<>();
  for (  LongObjectCursor<Collector> entry : groups) {
    leafCollectors.put(entry.key,entry.value.getLeafCollector(context));
  }
  return new LeafCollector(){
    @Override public void setScorer(    Scorer scorer) throws IOException {
      for (      ObjectCursor<LeafCollector> c : leafCollectors.values()) {
        c.value.setScorer(scorer);
      }
    }
    @Override public void collect(    int docId) throws IOException {
      long value=docValues.get(docId);
      final int index;
      if (value != nullValue && (index=leafCollectors.indexOf(value)) >= 0 && !collapsedSet.contains(docId + docBase)) {
        leafCollectors.indexGet(index).collect(docId);
      }
    }
  }
;
}
