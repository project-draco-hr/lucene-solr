{
  Directory indexStore=newDirectory();
  IndexWriter writer=new IndexWriter(indexStore,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false)));
  String[][] sortData=new String[][]{{"A","x","p\u00EAche","p\u00EAche","p\u00EAche","p\u00EAche"},{"B","y","HAT","HAT","HAT","HAT"},{"C","x","p\u00E9ch\u00E9","p\u00E9ch\u00E9","p\u00E9ch\u00E9","p\u00E9ch\u00E9"},{"D","y","HUT","HUT","HUT","HUT"},{"E","x","peach","peach","peach","peach"},{"F","y","H\u00C5T","H\u00C5T","H\u00C5T","H\u00C5T"},{"G","x","sin","sin","sin","sin"},{"H","y","H\u00D8T","H\u00D8T","H\u00D8T","H\u00D8T"},{"I","x","s\u00EDn","s\u00EDn","s\u00EDn","s\u00EDn"},{"J","y","HOT","HOT","HOT","HOT"}};
  FieldType customType=new FieldType();
  customType.setStored(true);
  for (int i=0; i < sortData.length; ++i) {
    Document doc=new Document();
    doc.add(new Field("tracer",sortData[i][0],customType));
    doc.add(new TextField("contents",sortData[i][1]));
    if (sortData[i][2] != null)     doc.add(new TextField("US",usAnalyzer.tokenStream("US",new StringReader(sortData[i][2]))));
    if (sortData[i][3] != null)     doc.add(new TextField("France",franceAnalyzer.tokenStream("France",new StringReader(sortData[i][3]))));
    if (sortData[i][4] != null)     doc.add(new TextField("Sweden",swedenAnalyzer.tokenStream("Sweden",new StringReader(sortData[i][4]))));
    if (sortData[i][5] != null)     doc.add(new TextField("Denmark",denmarkAnalyzer.tokenStream("Denmark",new StringReader(sortData[i][5]))));
    writer.addDocument(doc);
  }
  writer.forceMerge(1);
  writer.close();
  IndexReader reader=DirectoryReader.open(indexStore);
  IndexSearcher searcher=new IndexSearcher(reader);
  Sort sort=new Sort();
  Query queryX=new TermQuery(new Term("contents","x"));
  Query queryY=new TermQuery(new Term("contents","y"));
  sort.setSort(new SortField("US",SortField.Type.STRING));
  assertMatches(searcher,queryY,sort,usResult);
  sort.setSort(new SortField("France",SortField.Type.STRING));
  assertMatches(searcher,queryX,sort,frResult);
  sort.setSort(new SortField("Sweden",SortField.Type.STRING));
  assertMatches(searcher,queryY,sort,svResult);
  sort.setSort(new SortField("Denmark",SortField.Type.STRING));
  assertMatches(searcher,queryY,sort,dkResult);
  reader.close();
  indexStore.close();
}
