{
  Query q=rb.getQuery();
  try {
    HashSet<Term> terms=new HashSet<>();
    searcher.createNormalizedWeight(q,true).extractTerms(terms);
    IndexReaderContext context=searcher.getTopReaderContext();
    HashMap<String,TermStats> statsMap=new HashMap<>();
    HashMap<String,CollectionStats> colMap=new HashMap<>();
    for (    Term t : terms) {
      TermContext termContext=TermContext.build(context,t);
      TermStatistics tst=searcher.localTermStatistics(t,termContext);
      if (tst.docFreq() == 0) {
        continue;
      }
      statsMap.put(t.toString(),new TermStats(t.field(),tst));
      rb.rsp.add(TERMS_KEY,t.toString());
      if (!colMap.containsKey(t.field())) {
        colMap.put(t.field(),new CollectionStats(searcher.localCollectionStatistics(t.field())));
      }
    }
    if (statsMap.size() != 0 && colMap.size() != 0) {
      String termStatsString=StatsUtil.termStatsMapToString(statsMap);
      rb.rsp.add(TERM_STATS_KEY,termStatsString);
      String colStatsString=StatsUtil.colStatsMapToString(colMap);
      rb.rsp.add(COL_STATS_KEY,colStatsString);
      if (LOG.isDebugEnabled()) {
        LOG.debug("termStats=" + termStatsString + ", collectionStats="+ colStatsString+ ", terms="+ terms+ ", numDocs="+ searcher.maxDoc());
      }
    }
  }
 catch (  IOException e) {
    LOG.error("Error collecting local stats, query='" + q.toString() + "'",e);
    throw new SolrException(ErrorCode.SERVER_ERROR,"Error collecting local stats.",e);
  }
}
