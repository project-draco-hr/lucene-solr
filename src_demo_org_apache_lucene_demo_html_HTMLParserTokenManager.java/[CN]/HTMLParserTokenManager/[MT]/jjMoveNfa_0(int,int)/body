{
  int[] nextStates;
  int startsAt=0;
  jjnewStateCnt=28;
  int i=1;
  jjstateSet[0]=startState;
  int j, kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      MatchLoop:       do {
switch (jjstateSet[--i]) {
case 20:
          if (curChar == 33)           jjstateSet[jjnewStateCnt++]=25;
 else           if (curChar == 47)           jjCheckNAdd(21);
        break;
case 11:
      if ((0x3ff000000000000L & l) != 0L)       jjCheckNAddTwoStates(7,2);
 else       if ((0x100002600L & l) != 0L) {
        if (kind > 11)         kind=11;
        jjCheckNAdd(10);
      }
 else       if (curChar == 60)       jjCheckNAddStates(0,2);
 else       if (curChar == 38)       jjAddStates(3,5);
 else       if (curChar == 36)       jjstateSet[jjnewStateCnt++]=1;
    if ((0x3ff000000000000L & l) != 0L) {
      if (kind > 6)       kind=6;
      jjCheckNAddStates(6,10);
    }
  break;
case 0:
if (curChar == 36) jjstateSet[jjnewStateCnt++]=1;
break;
case 1:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAdd(2);
break;
case 2:
if ((0x500000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=3;
break;
case 3:
case 9:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 6) kind=6;
jjCheckNAddStates(11,13);
break;
case 4:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 6) kind=6;
jjCheckNAddStates(6,10);
break;
case 5:
if ((0x880000000000L & l) == 0L) break;
if (kind > 6) kind=6;
jjCheckNAddStates(14,17);
break;
case 6:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(7,2);
break;
case 7:
if (curChar != 34) break;
if (kind > 6) kind=6;
jjCheckNAddStates(11,13);
break;
case 8:
if ((0x208000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=9;
break;
case 10:
if ((0x100002600L & l) == 0L) break;
kind=11;
jjCheckNAdd(10);
break;
case 13:
if (curChar == 59 && kind > 10) kind=10;
break;
case 14:
if (curChar == 35) jjCheckNAdd(15);
break;
case 15:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 10) kind=10;
jjCheckNAddTwoStates(15,13);
break;
case 16:
if (curChar == 35) jjstateSet[jjnewStateCnt++]=17;
break;
case 18:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 10) kind=10;
jjCheckNAddTwoStates(18,13);
break;
case 19:
if (curChar == 60) jjCheckNAddStates(0,2);
break;
case 22:
if ((0x9fffff7affffd9ffL & l) == 0L) break;
if (kind > 2) kind=2;
jjCheckNAdd(23);
break;
case 23:
if ((0x9ffffffeffffd9ffL & l) == 0L) break;
if (kind > 2) kind=2;
jjCheckNAdd(23);
break;
case 24:
if (curChar == 33) jjstateSet[jjnewStateCnt++]=25;
break;
case 26:
if ((0x9fffff7affffd9ffL & l) == 0L) break;
if (kind > 3) kind=3;
jjCheckNAdd(27);
break;
case 27:
if ((0x9ffffffeffffd9ffL & l) == 0L) break;
if (kind > 3) kind=3;
jjCheckNAdd(27);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
MatchLoop: do {
switch (jjstateSet[--i]) {
case 20:
case 21:
if ((0x7fffffe07fffffeL & l) == 0L) break;
if (kind > 2) kind=2;
jjstateSet[jjnewStateCnt++]=22;
break;
case 11:
case 4:
if ((0x7fffffe07fffffeL & l) == 0L) break;
if (kind > 6) kind=6;
jjCheckNAddStates(6,10);
break;
case 9:
if ((0x7fffffe07fffffeL & l) == 0L) break;
if (kind > 6) kind=6;
jjCheckNAddStates(11,13);
break;
case 12:
if ((0x7fffffe07fffffeL & l) == 0L) break;
if (kind > 10) kind=10;
jjCheckNAddTwoStates(12,13);
break;
case 17:
if ((0x100000001000000L & l) != 0L) jjCheckNAdd(18);
break;
case 18:
if ((0x7e0000007eL & l) == 0L) break;
if (kind > 10) kind=10;
jjCheckNAddTwoStates(18,13);
break;
case 22:
case 23:
if (kind > 2) kind=2;
jjCheckNAdd(23);
break;
case 25:
if ((0x7fffffe07fffffeL & l) == 0L) break;
if (kind > 3) kind=3;
jjstateSet[jjnewStateCnt++]=26;
break;
case 26:
case 27:
if (kind > 3) kind=3;
jjCheckNAdd(27);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
MatchLoop: do {
switch (jjstateSet[--i]) {
case 22:
case 23:
if ((jjbitVec0[i2] & l2) == 0L) break;
if (kind > 2) kind=2;
jjCheckNAdd(23);
break;
case 26:
case 27:
if ((jjbitVec0[i2] & l2) == 0L) break;
if (kind > 3) kind=3;
jjCheckNAdd(27);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=28 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
