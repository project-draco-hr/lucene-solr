{
  Replica replica=cloudClient.getZkStateReader().getLeaderRetry(DEFAULT_COLLECTION,SHARD1);
  CollectionAdminResponse response=new CollectionAdminRequest.AddReplicaProp().setCollectionName(DEFAULT_COLLECTION).setShardName(SHARD1).setReplica(replica.getName()).setPropertyName("preferredleader").setPropertyValue("true").process(cloudClient);
  assertEquals(0,response.getStatus());
  long timeout=System.currentTimeMillis() + 20000;
  String propertyValue=null;
  String replicaName=replica.getName();
  while (System.currentTimeMillis() < timeout) {
    ClusterState clusterState=cloudClient.getZkStateReader().getClusterState();
    replica=clusterState.getReplica(DEFAULT_COLLECTION,replicaName);
    propertyValue=replica.getStr("property.preferredleader");
    if (StringUtils.equals("true",propertyValue))     break;
    Thread.sleep(50);
  }
  assertEquals("Replica property was not updated, Latest value: " + cloudClient.getZkStateReader().getClusterState().getReplica(DEFAULT_COLLECTION,replicaName),"true",propertyValue);
  response=new CollectionAdminRequest.DeleteReplicaProp().setCollectionName(DEFAULT_COLLECTION).setShardName(SHARD1).setReplica(replicaName).setPropertyName("property.preferredleader").process(cloudClient);
  assertEquals(0,response.getStatus());
  timeout=System.currentTimeMillis() + 20000;
  boolean updated=false;
  while (System.currentTimeMillis() < timeout) {
    ClusterState clusterState=cloudClient.getZkStateReader().getClusterState();
    replica=clusterState.getReplica(DEFAULT_COLLECTION,replicaName);
    updated=replica.getStr("property.preferredleader") == null;
    if (updated)     break;
    Thread.sleep(50);
  }
  assertTrue("Replica property was not removed",updated);
}
