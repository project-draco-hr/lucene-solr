{
  String collectionName="solrj_implicit";
  CollectionAdminRequest.Create createCollectionRequest=new CollectionAdminRequest.Create();
  createCollectionRequest.setCollectionName(collectionName);
  createCollectionRequest.setShards("shardA,shardB");
  createCollectionRequest.setConfigName("conf1");
  createCollectionRequest.setRouterName("implicit");
  CollectionAdminResponse response=createCollectionRequest.process(cloudClient);
  assertEquals(0,response.getStatus());
  assertTrue(response.isSuccess());
  Map<String,NamedList<Integer>> coresStatus=response.getCollectionCoresStatus();
  assertEquals(2,coresStatus.size());
  cloudClient.setDefaultCollection(collectionName);
  CollectionAdminRequest.CreateShard createShardRequest=new CollectionAdminRequest.CreateShard();
  createShardRequest.setCollectionName(collectionName);
  createShardRequest.setShardName("shardC");
  response=createShardRequest.process(cloudClient);
  assertEquals(0,response.getStatus());
  assertTrue(response.isSuccess());
  coresStatus=response.getCollectionCoresStatus();
  assertEquals(1,coresStatus.size());
  assertEquals(0,(int)coresStatus.get(collectionName + "_shardC_replica1").get("status"));
  CollectionAdminRequest.DeleteShard deleteShardRequest=new CollectionAdminRequest.DeleteShard();
  deleteShardRequest.setCollectionName(collectionName);
  deleteShardRequest.setShardName("shardC");
  response=deleteShardRequest.process(cloudClient);
  assertEquals(0,response.getStatus());
  assertTrue(response.isSuccess());
  Map<String,NamedList<Integer>> nodesStatus=response.getCollectionNodesStatus();
  assertEquals(1,nodesStatus.size());
}
