{
  boolean singleValuePerDoc=values.size(fieldInfo.name) == values.getDocCount(fieldInfo.name);
  try (BKDWriter writer=new BKDWriter(writeState.segmentInfo.maxDoc(),writeState.directory,writeState.segmentInfo.name,fieldInfo.getPointDimensionCount(),fieldInfo.getPointNumBytes(),maxPointsInLeafNode,maxMBSortInHeap,values.size(fieldInfo.name),singleValuePerDoc)){
    if (values instanceof MutablePointsReader) {
      final long fp=writer.writeField(dataOut,fieldInfo.name,(MutablePointsReader)values);
      if (fp != -1) {
        indexFPs.put(fieldInfo.name,fp);
      }
      return;
    }
    values.intersect(fieldInfo.name,new IntersectVisitor(){
      @Override public void visit(      int docID){
        throw new IllegalStateException();
      }
      public void visit(      int docID,      byte[] packedValue) throws IOException {
        writer.add(packedValue,docID);
      }
      @Override public Relation compare(      byte[] minPackedValue,      byte[] maxPackedValue){
        return Relation.CELL_CROSSES_QUERY;
      }
    }
);
    if (writer.getPointCount() > 0) {
      indexFPs.put(fieldInfo.name,writer.finish(dataOut));
    }
  }
 }
