{
  final Class clazz=att.getClass();
  if (attributeImpls.containsKey(clazz))   return;
  LinkedList foundInterfaces;
synchronized (knownImplClasses) {
    foundInterfaces=(LinkedList)knownImplClasses.get(clazz);
    if (foundInterfaces == null) {
      knownImplClasses.put(clazz,foundInterfaces=new LinkedList());
      Class actClazz=clazz;
      do {
        Class[] interfaces=actClazz.getInterfaces();
        for (int i=0; i < interfaces.length; i++) {
          final Class curInterface=interfaces[i];
          if (curInterface != Attribute.class && Attribute.class.isAssignableFrom(curInterface)) {
            foundInterfaces.add(curInterface);
          }
        }
        actClazz=actClazz.getSuperclass();
      }
 while (actClazz != null);
    }
  }
  for (Iterator it=foundInterfaces.iterator(); it.hasNext(); ) {
    final Class curInterface=(Class)it.next();
    if (!attributes.containsKey(curInterface)) {
      this.currentState=null;
      attributes.put(curInterface,att);
      attributeImpls.put(clazz,att);
    }
  }
}
