{
  int nDocs=usually() ? BackupRestoreUtils.indexDocs(masterClient,"collection1",docsSeed) : 0;
  String snapshotName;
  String location;
  String params="";
  String baseUrl=masterJetty.getBaseUrl().toString();
  if (random().nextBoolean()) {
    location=createTempDir().toFile().getAbsolutePath();
    params+="&location=" + URLEncoder.encode(location,"UTF-8");
  }
  if (random().nextBoolean()) {
    snapshotName=TestUtil.randomSimpleString(random(),1,5);
    params+="&name=" + snapshotName;
  }
  TestReplicationHandlerBackup.runBackupCommand(masterJetty,ReplicationHandler.CMD_BACKUP,params);
  CheckBackupStatus checkBackupStatus=new CheckBackupStatus((HttpSolrClient)masterClient,DEFAULT_TEST_CORENAME,null);
  while (!checkBackupStatus.success) {
    checkBackupStatus.fetchStatus();
    Thread.sleep(1000);
  }
  int numRestoreTests=nDocs > 0 ? TestUtil.nextInt(random(),1,5) : 1;
  for (int attempts=0; attempts < numRestoreTests; attempts++) {
    if (nDocs > 0) {
      int numDeletes=TestUtil.nextInt(random(),1,nDocs);
      for (int i=0; i < numDeletes; i++) {
        masterClient.deleteByQuery(DEFAULT_TEST_CORENAME,"id:" + i);
      }
      masterClient.commit(DEFAULT_TEST_CORENAME);
      int moreAdds=TestUtil.nextInt(random(),1,100);
      for (int i=0; i < moreAdds; i++) {
        SolrInputDocument doc=new SolrInputDocument();
        doc.addField("id",i + nDocs);
        doc.addField("name","name = " + (i + nDocs));
        masterClient.add(DEFAULT_TEST_CORENAME,doc);
      }
      if (usually()) {
        masterClient.commit(DEFAULT_TEST_CORENAME);
      }
    }
    TestReplicationHandlerBackup.runBackupCommand(masterJetty,ReplicationHandler.CMD_RESTORE,params);
    while (!fetchRestoreStatus(baseUrl,DEFAULT_TEST_CORENAME)) {
      Thread.sleep(1000);
    }
    BackupRestoreUtils.verifyDocs(nDocs,masterClient,DEFAULT_TEST_CORENAME);
  }
}
