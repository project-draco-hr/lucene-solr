{
  for (int i=0; i < 50; i++) {
    assertU(adoc("id","" + i,"home",i + "," + (i * 100),"homed",(i * 1000) + "," + (i * 10000)));
  }
  assertU(commit());
  assertQ(req("fl","*,score","q","*:*"),"//*[@numFound='50']");
  assertQ(req("fl","*,score","q","home:1,100"),"//*[@numFound='1']","//str[@name='home'][.='1,100']");
  assertQ(req("fl","*,score","q","homed:1000,10000"),"//*[@numFound='1']","//str[@name='homed'][.='1000,10000']");
  assertQ(req("fl","*,score","q","{!func}sqedist(home, vector(0, 0))"),"\"//*[@numFound='50']\"");
  assertQ(req("fl","*,score","q","{!func}dist(2, home, vector(0, 0))"),"\"//*[@numFound='50']\"");
  assertQ(req("fl","*,score","q","home:[10,10000 TO 30,30000]"),"\"//*[@numFound='3']\"");
  assertQ(req("fl","*,score","q","homed:[1,1000 TO 2000,35000]"),"\"//*[@numFound='2']\"");
  ignoreException("dimension");
  assertQEx("Query should throw an exception due to incorrect dimensions",req("fl","*,score","q","homed:[1 TO 2000]"),SolrException.ErrorCode.BAD_REQUEST);
  resetExceptionIgnores();
  clearIndex();
}
