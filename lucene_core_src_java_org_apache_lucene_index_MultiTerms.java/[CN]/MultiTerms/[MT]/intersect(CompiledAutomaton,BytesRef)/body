{
  final List<MultiTermsEnum.TermsEnumIndex> termsEnums=new ArrayList<>();
  for (int i=0; i < subs.length; i++) {
    final TermsEnum termsEnum=subs[i].intersect(compiled,startTerm);
    if (termsEnum != null) {
      termsEnums.add(new MultiTermsEnum.TermsEnumIndex(termsEnum,i));
    }
  }
  if (termsEnums.size() > 0) {
    return new MultiTermsEnum(subSlices).reset(termsEnums.toArray(MultiTermsEnum.TermsEnumIndex.EMPTY_ARRAY));
  }
 else {
    return TermsEnum.EMPTY;
  }
}
