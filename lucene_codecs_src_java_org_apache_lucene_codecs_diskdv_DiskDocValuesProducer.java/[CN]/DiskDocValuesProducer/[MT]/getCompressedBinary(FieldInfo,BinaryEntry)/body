{
  final IndexInput data=this.data.clone();
  final long interval=bytes.addressInterval;
  final MonotonicBlockPackedReader addresses;
synchronized (addressInstances) {
    MonotonicBlockPackedReader addrInstance=addressInstances.get(field.number);
    if (addrInstance == null) {
      data.seek(bytes.addressesOffset);
      final long size;
      if (bytes.count % interval == 0) {
        size=bytes.count / interval;
      }
 else {
        size=1L + bytes.count / interval;
      }
      addrInstance=new MonotonicBlockPackedReader(data,bytes.packedIntsVersion,bytes.blockSize,size,false);
      addressInstances.put(field.number,addrInstance);
    }
    addresses=addrInstance;
  }
  return new CompressedBinaryDocValues(bytes,addresses,data);
}
