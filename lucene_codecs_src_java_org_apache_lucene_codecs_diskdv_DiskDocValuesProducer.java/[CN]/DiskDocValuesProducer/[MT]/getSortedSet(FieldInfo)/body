{
  final long valueCount=binaries.get(field.number).count;
  final LongBinaryDocValues binary=(LongBinaryDocValues)getBinary(field);
  final LongNumericDocValues ordinals=getNumeric(field,ords.get(field.number));
  NumericEntry entry=ordIndexes.get(field.number);
  IndexInput data=this.data.clone();
  data.seek(entry.offset);
  final MonotonicBlockPackedReader ordIndex=new MonotonicBlockPackedReader(data,entry.packedIntsVersion,entry.blockSize,entry.count,true);
  return new SortedSetDocValues(){
    long offset;
    long endOffset;
    @Override public long nextOrd(){
      if (offset == endOffset) {
        return NO_MORE_ORDS;
      }
 else {
        long ord=ordinals.get(offset);
        offset++;
        return ord;
      }
    }
    @Override public void setDocument(    int docID){
      offset=(docID == 0 ? 0 : ordIndex.get(docID - 1));
      endOffset=ordIndex.get(docID);
    }
    @Override public void lookupOrd(    long ord,    BytesRef result){
      binary.get(ord,result);
    }
    @Override public long getValueCount(){
      return valueCount;
    }
  }
;
}
