{
  int fieldNumber=meta.readVInt();
  while (fieldNumber != -1) {
    DocValuesType type=infos.fieldInfo(fieldNumber).getDocValuesType();
    if (type == DocValuesType.NUMERIC) {
      numerics.put(fieldNumber,readNumericEntry(meta));
    }
 else     if (type == DocValuesType.BINARY) {
      BinaryEntry b=readBinaryEntry(meta);
      binaries.put(fieldNumber,b);
      if (b.minLength != b.maxLength) {
        if (meta.readVInt() != fieldNumber) {
          throw new CorruptIndexException("binary entry for field: " + fieldNumber + " is corrupt");
        }
        numerics.put(fieldNumber,readNumericEntry(meta));
      }
    }
 else     if (type == DocValuesType.SORTED) {
      BinaryEntry b=readBinaryEntry(meta);
      binaries.put(fieldNumber,b);
      if (b.minLength != b.maxLength) {
        if (meta.readVInt() != fieldNumber) {
          throw new CorruptIndexException("sorted entry for field: " + fieldNumber + " is corrupt");
        }
        numerics.put(fieldNumber,readNumericEntry(meta));
      }
      if (meta.readVInt() != fieldNumber) {
        throw new CorruptIndexException("sorted entry for field: " + fieldNumber + " is corrupt");
      }
      ords.put(fieldNumber,readNumericEntry(meta));
    }
    fieldNumber=meta.readVInt();
  }
}
