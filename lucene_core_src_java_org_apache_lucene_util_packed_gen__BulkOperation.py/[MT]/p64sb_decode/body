def p64sb_decode(bpv, bits):
    values = (64 / bpv)
    typ = get_type(bits)
    buf = (typ.title() + 'Buffer')
    (cast_start, cast_end) = casts(typ)
    f.write(('    public void decode(LongBuffer blocks, %s values, int iterations) {\n' % buf))
    if (bits < bpv):
        f.write('      throw new UnsupportedOperationException();\n')
        f.write('    }\n\n')
        return
    f.write('      assert blocks.position() + iterations * blocks() <= blocks.limit();\n')
    f.write('      assert values.position() + iterations * values() <= values.limit();\n')
    f.write('      for (int i = 0; i < iterations; ++i) {\n')
    f.write('        final long block = blocks.get();\n')
    mask = ((1 << bpv) - 1)
    for i in xrange(values):
        block_offset = (i / values)
        offset_in_block = (i % values)
        if (i == 0):
            f.write(('        values.put(%sblock & %dL%s);\n' % (cast_start, mask, cast_end)))
        elif (i == (values - 1)):
            f.write(('        values.put(%sblock >>> %d%s);\n' % (cast_start, (i * bpv), cast_end)))
        else:
            f.write(('        values.put(%s(block >>> %d) & %dL%s);\n' % (cast_start, (i * bpv), mask, cast_end)))
    f.write('      }\n')
    f.write('    }\n\n')
