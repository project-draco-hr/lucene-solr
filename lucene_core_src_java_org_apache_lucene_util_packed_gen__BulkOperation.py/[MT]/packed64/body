def packed64(bpv, f):
    mask = ((1 << bpv) - 1)
    f.write('\n')
    f.write(('  public BulkOperationPacked%d() {\n' % bpv))
    f.write(('    super(%d);\n' % bpv))
    f.write('  }\n\n')
    if (bpv == 64):
        f.write('    @Override\n    public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      System.arraycopy(blocks, blocksOffset, values, valuesOffset, valueCount() * iterations);\n    }\n\n    @Override\n    public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n      throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n      throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      LongBuffer.wrap(values, valuesOffset, iterations * valueCount()).put(ByteBuffer.wrap(blocks, blocksOffset, 8 * iterations * blockCount()).asLongBuffer());\n    }\n')
    else:
        p64_decode(bpv, f, 32)
        p64_decode(bpv, f, 64)
