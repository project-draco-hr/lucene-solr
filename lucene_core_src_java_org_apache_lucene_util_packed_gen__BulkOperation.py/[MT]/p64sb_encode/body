def p64sb_encode(bpv, bits):
    values = (64 / bpv)
    typ = get_type(bits)
    buf = (typ.title() + 'Buffer')
    (mask_start, mask_end) = masks(bits)
    f.write(('    public void encode(%s values, LongBuffer blocks, int iterations) {\n' % buf))
    f.write('      assert blocks.position() + iterations * blocks() <= blocks.limit();\n')
    f.write('      assert values.position() + iterations * values() <= values.limit();\n')
    f.write('      for (int i = 0; i < iterations; ++i) {\n')
    for i in xrange(values):
        block_offset = (i / values)
        offset_in_block = (i % values)
        if (i == 0):
            f.write(('        blocks.put(%svalues.get()%s' % (mask_start, mask_end)))
        else:
            f.write((' | (%svalues.get()%s << %d)' % (mask_start, mask_end, (i * bpv))))
            if (i == (values - 1)):
                f.write(');\n')
    f.write('      }\n')
    f.write('    }\n\n')
