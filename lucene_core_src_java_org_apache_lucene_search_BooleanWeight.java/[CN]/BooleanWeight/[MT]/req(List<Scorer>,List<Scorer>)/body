{
  if (required.size() == 1) {
    Scorer req=required.get(0);
    if (needsScores == false) {
      return req;
    }
    if (requiredScoring.isEmpty()) {
      return new FilterScorer(req){
        @Override public float score() throws IOException {
          return 0f;
        }
        @Override public int freq() throws IOException {
          return 0;
        }
      }
;
    }
    return req;
  }
 else {
    return new ConjunctionScorer(this,required,requiredScoring);
  }
}
