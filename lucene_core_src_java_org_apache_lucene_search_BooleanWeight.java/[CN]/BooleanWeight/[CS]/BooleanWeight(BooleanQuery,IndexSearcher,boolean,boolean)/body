{
  super(query);
  this.query=query;
  this.needsScores=needsScores;
  this.similarity=searcher.getSimilarity(needsScores);
  weights=new ArrayList<>();
  int i=0;
  int maxCoord=0;
  for (  BooleanClause c : query) {
    Weight w=searcher.createWeight(c.getQuery(),needsScores && c.isScoring());
    weights.add(w);
    if (c.isScoring()) {
      maxCoord++;
    }
    i+=1;
  }
  this.maxCoord=maxCoord;
  coords=new float[maxCoord + 1];
  Arrays.fill(coords,1F);
  coords[0]=0f;
  if (maxCoord > 0 && needsScores && disableCoord == false) {
    boolean seenActualCoord=false;
    for (i=1; i < coords.length; i++) {
      coords[i]=coord(i,maxCoord);
      seenActualCoord|=(coords[i] != 1F);
    }
    this.disableCoord=seenActualCoord == false;
  }
 else {
    this.disableCoord=true;
  }
}
