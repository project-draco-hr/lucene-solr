{
  int size=bits.cardinality();
  BitSet result=new BitSet(size);
  HashMap<String,Double> cdistance=new HashMap<String,Double>(size);
  distances=new HashMap<Integer,Double>(size);
  long start=System.currentTimeMillis();
  String[] geoHashCache=FieldCache.DEFAULT.getStrings(reader,geoHashField);
  int i=bits.nextSetBit(0);
  while (i >= 0) {
    String geoHash=geoHashCache[i];
    double[] coords=GeoHashUtils.decode(geoHash);
    double x=coords[0];
    double y=coords[1];
    Double cachedDistance=cdistance.get(geoHash);
    double d;
    if (cachedDistance != null) {
      d=cachedDistance.doubleValue();
    }
 else {
      d=DistanceUtils.getInstance().getDistanceMi(lat,lng,x,y);
      cdistance.put(geoHash,d);
    }
    distances.put(i,d);
    if (d < distance) {
      result.set(i);
    }
    i=bits.nextSetBit(i + 1);
  }
  long end=System.currentTimeMillis();
  log.fine("Time taken : " + (end - start) + ", results : "+ distances.size()+ ", cached : "+ cdistance.size()+ ", incoming size: "+ size);
  cdistance=null;
  return result;
}
