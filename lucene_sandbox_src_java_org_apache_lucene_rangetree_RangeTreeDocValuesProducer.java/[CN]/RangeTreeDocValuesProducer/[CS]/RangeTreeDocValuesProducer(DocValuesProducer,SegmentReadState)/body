{
  String metaFileName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,RangeTreeDocValuesFormat.META_EXTENSION);
  ChecksumIndexInput metaIn=state.directory.openChecksumInput(metaFileName,state.context);
  CodecUtil.checkIndexHeader(metaIn,RangeTreeDocValuesFormat.META_CODEC_NAME,RangeTreeDocValuesFormat.META_VERSION_START,RangeTreeDocValuesFormat.META_VERSION_CURRENT,state.segmentInfo.getId(),state.segmentSuffix);
  int fieldCount=metaIn.readVInt();
  for (int i=0; i < fieldCount; i++) {
    int fieldNumber=metaIn.readVInt();
    long indexFP=metaIn.readVLong();
    fieldToIndexFPs.put(fieldNumber,indexFP);
  }
  CodecUtil.checkFooter(metaIn);
  metaIn.close();
  String datFileName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,RangeTreeDocValuesFormat.DATA_EXTENSION);
  datIn=state.directory.openInput(datFileName,state.context);
  CodecUtil.checkIndexHeader(datIn,RangeTreeDocValuesFormat.DATA_CODEC_NAME,RangeTreeDocValuesFormat.DATA_VERSION_START,RangeTreeDocValuesFormat.DATA_VERSION_CURRENT,state.segmentInfo.getId(),state.segmentSuffix);
  ramBytesUsed=new AtomicLong(RamUsageEstimator.shallowSizeOfInstance(getClass()));
  maxDoc=state.segmentInfo.maxDoc();
  this.delegate=delegate;
  merging=false;
}
