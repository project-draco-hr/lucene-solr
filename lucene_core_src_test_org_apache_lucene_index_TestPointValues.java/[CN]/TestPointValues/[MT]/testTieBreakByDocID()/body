{
  Directory dir=newFSDirectory(createTempDir());
  IndexWriterConfig iwc=newIndexWriterConfig();
  IndexWriter w=new IndexWriter(dir,iwc);
  Document doc=new Document();
  doc.add(new IntPoint("int",17));
  for (int i=0; i < 300000; i++) {
    w.addDocument(doc);
    if (random().nextInt(1000) == 17) {
      w.commit();
    }
  }
  IndexReader r=DirectoryReader.open(w);
  for (  LeafReaderContext ctx : r.leaves()) {
    PointValues points=ctx.reader().getPointValues("int");
    points.intersect(new IntersectVisitor(){
      int lastDocID=-1;
      @Override public void visit(      int docID){
        if (docID < lastDocID) {
          fail("docs out of order: docID=" + docID + " but lastDocID="+ lastDocID);
        }
        lastDocID=docID;
      }
      @Override public void visit(      int docID,      byte[] packedValue){
        visit(docID);
      }
      @Override public Relation compare(      byte[] minPackedValue,      byte[] maxPackedValue){
        if (random().nextBoolean()) {
          return Relation.CELL_CROSSES_QUERY;
        }
 else {
          return Relation.CELL_INSIDE_QUERY;
        }
      }
    }
);
  }
  r.close();
  w.close();
  dir.close();
}
