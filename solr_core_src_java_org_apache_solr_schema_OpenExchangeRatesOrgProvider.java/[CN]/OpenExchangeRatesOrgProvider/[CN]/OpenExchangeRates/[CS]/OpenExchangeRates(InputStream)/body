{
  parser=new JSONParser(new InputStreamReader(ratesStream));
  rates=new HashMap<String,Double>();
  int ev;
  do {
    ev=parser.nextEvent();
switch (ev) {
case JSONParser.STRING:
      if (parser.wasKey()) {
        String key=parser.getString();
        if (key.equals("disclaimer")) {
          parser.nextEvent();
          disclaimer=parser.getString();
        }
 else         if (key.equals("license")) {
          parser.nextEvent();
          license=parser.getString();
        }
 else         if (key.equals("timestamp")) {
          parser.nextEvent();
          timestamp=parser.getLong();
        }
 else         if (key.equals("base")) {
          parser.nextEvent();
          baseCurrency=parser.getString();
        }
 else         if (key.equals("rates")) {
          ev=parser.nextEvent();
          assert(ev == JSONParser.OBJECT_START);
          ev=parser.nextEvent();
          while (ev != JSONParser.OBJECT_END) {
            String curr=parser.getString();
            ev=parser.nextEvent();
            Double rate=parser.getDouble();
            rates.put(curr,rate);
            ev=parser.nextEvent();
          }
        }
 else {
          log.warn("Unknown key " + key);
        }
        break;
      }
 else {
        log.warn("Expected key, got " + JSONParser.getEventString(ev));
        break;
      }
case JSONParser.OBJECT_END:
case JSONParser.OBJECT_START:
case JSONParser.EOF:
    break;
default :
  log.info("Noggit UNKNOWN_EVENT_ID:" + JSONParser.getEventString(ev));
break;
}
}
 while (ev != JSONParser.EOF);
}
