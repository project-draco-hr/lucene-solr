{
  return new ConstantScoreWeight(this,boost){
    @Override public Scorer scorer(    LeafReaderContext context) throws IOException {
      FieldInfos fieldInfos=context.reader().getFieldInfos();
      FieldInfo fieldInfo=fieldInfos.fieldInfo(field);
      if (fieldInfo == null) {
        return null;
      }
      DocValuesType dvType=fieldInfo.getDocValuesType();
      LeafReader reader=context.reader();
      DocIdSetIterator iterator;
switch (dvType) {
case NONE:
        return null;
case NUMERIC:
      iterator=reader.getNumericDocValues(field);
    break;
case BINARY:
  iterator=reader.getBinaryDocValues(field);
break;
case SORTED:
iterator=reader.getSortedDocValues(field);
break;
case SORTED_NUMERIC:
iterator=reader.getSortedNumericDocValues(field);
break;
case SORTED_SET:
iterator=reader.getSortedSetDocValues(field);
break;
default :
throw new AssertionError();
}
return new ConstantScoreScorer(this,score(),iterator);
}
}
;
}
