{
  final int numBits=_TestUtil.nextInt(random(),100,1 << 20);
  final int numDocIdSets=_TestUtil.nextInt(random(),0,4);
  final List<FixedBitSet> fixedSets=new ArrayList<FixedBitSet>(numDocIdSets);
  for (int i=0; i < numDocIdSets; ++i) {
    fixedSets.add(randomSet(numBits,random().nextFloat() / 16));
  }
  final List<WAH8DocIdSet> compressedSets=new ArrayList<WAH8DocIdSet>(numDocIdSets);
  for (  FixedBitSet set : fixedSets) {
    compressedSets.add(WAH8DocIdSet.copyOf(set.iterator()));
  }
  final WAH8DocIdSet union=WAH8DocIdSet.union(compressedSets);
  final FixedBitSet expected=new FixedBitSet(numBits);
  for (  DocIdSet set : fixedSets) {
    final DocIdSetIterator it=set.iterator();
    for (int doc=it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc=it.nextDoc()) {
      expected.set(doc);
    }
  }
  assertEquals(numBits,expected,union);
}
