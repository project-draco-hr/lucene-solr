{
  final int numBits=TestUtil.nextInt(random(),100,1 << 20);
  final int numDocIdSets=TestUtil.nextInt(random(),0,4);
  final List<BitSet> fixedSets=new ArrayList<BitSet>(numDocIdSets);
  for (int i=0; i < numDocIdSets; ++i) {
    fixedSets.add(randomSet(numBits,random().nextFloat() / 16));
  }
  final List<WAH8DocIdSet> compressedSets=new ArrayList<WAH8DocIdSet>(numDocIdSets);
  for (  BitSet set : fixedSets) {
    compressedSets.add(copyOf(set,numBits));
  }
  final WAH8DocIdSet union=WAH8DocIdSet.union(compressedSets);
  final BitSet expected=new BitSet(numBits);
  for (  BitSet set : fixedSets) {
    for (int doc=set.nextSetBit(0); doc != -1; doc=set.nextSetBit(doc + 1)) {
      expected.set(doc);
    }
  }
  assertEquals(numBits,expected,union);
}
