{
  List<Entry<FieldInfo,FuzzySet>> nonSaturatedBlooms=new ArrayList<Map.Entry<FieldInfo,FuzzySet>>();
  for (  Entry<FieldInfo,FuzzySet> entry : bloomFilters.entrySet()) {
    FuzzySet bloomFilter=entry.getValue();
    if (!bloomFilterFactory.isSaturated(bloomFilter,entry.getKey())) {
      nonSaturatedBlooms.add(entry);
    }
  }
  String bloomFileName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,BLOOM_EXTENSION);
  IndexOutput bloomOutput=null;
  try {
    bloomOutput=state.directory.createOutput(bloomFileName,state.context);
    CodecUtil.writeHeader(bloomOutput,BLOOM_CODEC_NAME,BLOOM_CODEC_VERSION);
    bloomOutput.writeString(delegatePostingsFormat.getName());
    bloomOutput.writeInt(nonSaturatedBlooms.size());
    for (    Entry<FieldInfo,FuzzySet> entry : nonSaturatedBlooms) {
      FieldInfo fieldInfo=entry.getKey();
      FuzzySet bloomFilter=entry.getValue();
      bloomOutput.writeInt(fieldInfo.number);
      saveAppropriatelySizedBloomFilter(bloomOutput,bloomFilter,fieldInfo);
    }
  }
  finally {
    IOUtils.close(bloomOutput);
  }
  bloomFilters.clear();
}
