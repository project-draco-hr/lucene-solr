{
  if (closed) {
    return;
  }
  closed=true;
  delegateFieldsConsumer.close();
  List<Entry<FieldInfo,FuzzySet>> nonSaturatedBlooms=new ArrayList<>();
  for (  Entry<FieldInfo,FuzzySet> entry : bloomFilters.entrySet()) {
    FuzzySet bloomFilter=entry.getValue();
    if (!bloomFilterFactory.isSaturated(bloomFilter,entry.getKey())) {
      nonSaturatedBlooms.add(entry);
    }
  }
  String bloomFileName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,BLOOM_EXTENSION);
  try (IndexOutput bloomOutput=state.directory.createOutput(bloomFileName,state.context)){
    CodecUtil.writeIndexHeader(bloomOutput,BLOOM_CODEC_NAME,VERSION_CURRENT,state.segmentInfo.getId(),state.segmentSuffix);
    bloomOutput.writeString(delegatePostingsFormat.getName());
    bloomOutput.writeInt(nonSaturatedBlooms.size());
    for (    Entry<FieldInfo,FuzzySet> entry : nonSaturatedBlooms) {
      FieldInfo fieldInfo=entry.getKey();
      FuzzySet bloomFilter=entry.getValue();
      bloomOutput.writeInt(fieldInfo.number);
      saveAppropriatelySizedBloomFilter(bloomOutput,bloomFilter,fieldInfo);
    }
    CodecUtil.writeFooter(bloomOutput);
  }
   bloomFilters.clear();
}
