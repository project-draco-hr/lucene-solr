{
  String bloomFileName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,BLOOM_EXTENSION);
  ChecksumIndexInput bloomIn=null;
  boolean success=false;
  try {
    bloomIn=state.directory.openChecksumInput(bloomFileName,state.context);
    int version=CodecUtil.checkHeader(bloomIn,BLOOM_CODEC_NAME,VERSION_START,VERSION_CURRENT);
    PostingsFormat delegatePostingsFormat=PostingsFormat.forName(bloomIn.readString());
    this.delegateFieldsProducer=delegatePostingsFormat.fieldsProducer(state);
    int numBlooms=bloomIn.readInt();
    for (int i=0; i < numBlooms; i++) {
      int fieldNum=bloomIn.readInt();
      FuzzySet bloom=FuzzySet.deserialize(bloomIn);
      FieldInfo fieldInfo=state.fieldInfos.fieldInfo(fieldNum);
      bloomsByFieldName.put(fieldInfo.name,bloom);
    }
    if (version >= VERSION_CHECKSUM) {
      CodecUtil.checkFooter(bloomIn);
    }
 else {
      CodecUtil.checkEOF(bloomIn);
    }
    IOUtils.close(bloomIn);
    success=true;
  }
  finally {
    if (!success) {
      IOUtils.closeWhileHandlingException(bloomIn,delegateFieldsProducer);
    }
  }
}
