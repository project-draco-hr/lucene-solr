{
  final int maxDoc=state.segmentInfo.getDocCount();
  final int size=addedValues;
  dvConsumer.addBinaryField(fieldInfo,new Iterable<BytesRef>(){
    @Override public Iterator<BytesRef> iterator(){
      return new Iterator<BytesRef>(){
        RAMInputStream bytesReader;
        AppendingLongBuffer.Iterator iter=lengths.iterator();
        BytesRef value=new BytesRef();
        int upto;
{
          try {
            bytesReader=new RAMInputStream("bogus",bytes);
          }
 catch (          IOException e) {
            throw new RuntimeException(e);
          }
        }
        @Override public boolean hasNext(){
          return upto < maxDoc;
        }
        @Override public void remove(){
          throw new UnsupportedOperationException();
        }
        @Override public BytesRef next(){
          if (upto < size) {
            int length=(int)iter.next();
            value.grow(length);
            try {
              bytesReader.readBytes(value.bytes,0,length);
            }
 catch (            IOException e) {
              throw new RuntimeException(e);
            }
            value.length=length;
          }
 else {
            value.length=0;
          }
          upto++;
          return value;
        }
      }
;
    }
  }
);
}
