{
  Set nonWeightedTerms=new HashSet();
  spanQuery.extractTerms(nonWeightedTerms);
  Set fieldNames;
  if (fieldName == null) {
    fieldNames=new HashSet();
    for (Iterator iter=nonWeightedTerms.iterator(); iter.hasNext(); ) {
      Term queryTerm=(Term)iter.next();
      fieldNames.add(queryTerm.field());
    }
  }
 else {
    fieldNames=new HashSet(1);
    fieldNames.add(fieldName);
  }
  if (defaultField != null) {
    fieldNames.add(defaultField);
  }
  Iterator it=fieldNames.iterator();
  List spanPositions=new ArrayList();
  while (it.hasNext()) {
    String field=(String)it.next();
    IndexReader reader=getReaderForField(field);
    Spans spans=spanQuery.getSpans(reader);
    while (spans.next()) {
      spanPositions.add(new PositionSpan(spans.start(),spans.end() - 1));
    }
    cachedTokenFilter.reset();
  }
  if (spanPositions.size() == 0) {
    return;
  }
  for (Iterator iter=nonWeightedTerms.iterator(); iter.hasNext(); ) {
    Term queryTerm=(Term)iter.next();
    if (fieldNameComparator(queryTerm.field())) {
      WeightedSpanTerm weightedSpanTerm=(WeightedSpanTerm)terms.get(queryTerm.text());
      if (weightedSpanTerm == null) {
        weightedSpanTerm=new WeightedSpanTerm(spanQuery.getBoost(),queryTerm.text());
        weightedSpanTerm.addPositionSpans(spanPositions);
        weightedSpanTerm.positionSensitive=true;
        terms.put(queryTerm.text(),weightedSpanTerm);
      }
 else {
        if (spanPositions.size() > 0) {
          weightedSpanTerm.addPositionSpans(spanPositions);
        }
      }
    }
  }
}
