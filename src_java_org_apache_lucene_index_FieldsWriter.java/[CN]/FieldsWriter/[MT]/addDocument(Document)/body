{
  indexStream.writeLong(fieldsStream.getFilePointer());
  int storedCount=0;
  Iterator fieldIterator=doc.getFields().iterator();
  while (fieldIterator.hasNext()) {
    Fieldable field=(Fieldable)fieldIterator.next();
    if (field.isStored())     storedCount++;
  }
  fieldsStream.writeVInt(storedCount);
  fieldIterator=doc.getFields().iterator();
  while (fieldIterator.hasNext()) {
    Fieldable field=(Fieldable)fieldIterator.next();
    boolean disableCompression=(field instanceof FieldsReader.FieldForMerge);
    if (field.isStored()) {
      fieldsStream.writeVInt(fieldInfos.fieldNumber(field.name()));
      byte bits=0;
      if (field.isTokenized())       bits|=FieldsWriter.FIELD_IS_TOKENIZED;
      if (field.isBinary())       bits|=FieldsWriter.FIELD_IS_BINARY;
      if (field.isCompressed())       bits|=FieldsWriter.FIELD_IS_COMPRESSED;
      fieldsStream.writeByte(bits);
      if (field.isCompressed()) {
        byte[] data=null;
        if (disableCompression) {
          data=field.binaryValue();
        }
 else {
          if (field.isBinary()) {
            data=compress(field.binaryValue());
          }
 else {
            data=compress(field.stringValue().getBytes("UTF-8"));
          }
        }
        final int len=data.length;
        fieldsStream.writeVInt(len);
        fieldsStream.writeBytes(data,len);
      }
 else {
        if (field.isBinary()) {
          byte[] data=field.binaryValue();
          final int len=data.length;
          fieldsStream.writeVInt(len);
          fieldsStream.writeBytes(data,len);
        }
 else {
          fieldsStream.writeString(field.stringValue());
        }
      }
    }
  }
}
