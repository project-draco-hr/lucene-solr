{
  if (needRefinementAtThisLevel) {
    if (0 < facetFieldMinimumCount) {
      PivotFacetValue missing=valueCollection.getMissingValue();
      if (null != missing) {
        processDefiniteCandidateElement(pf,valueCollection.getMissingValue());
      }
    }
    if (!valueCollection.getExplicitValuesList().isEmpty()) {
      if (FacetParams.FACET_SORT_COUNT.equals(facetFieldSort)) {
        final int indexOfCountThreshold=Math.min(valueCollection.getExplicitValuesListSize(),facetFieldOffset + facetFieldLimit) - 1;
        final int countThreshold=valueCollection.getAt(indexOfCountThreshold).getCount();
        int positionInResults=0;
        for (        PivotFacetValue value : valueCollection.getExplicitValuesList()) {
          if (positionInResults <= indexOfCountThreshold) {
            processDefiniteCandidateElement(pf,value);
          }
 else {
            processPossibleCandidateElement(pf,value,countThreshold);
          }
          positionInResults++;
        }
      }
 else {
        for (        PivotFacetValue value : valueCollection.getExplicitValuesList()) {
          processDefiniteCandidateElement(pf,value);
        }
      }
    }
    needRefinementAtThisLevel=false;
  }
  if (pf.isRefinementsRequired()) {
    return;
  }
 else {
    refineNextLevelOfFacets(pf);
  }
}
