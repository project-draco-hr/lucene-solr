{
  if (sortedSet.getValueCount() >= Integer.MAX_VALUE) {
    throw new UnsupportedOperationException("fields containing more than " + (Integer.MAX_VALUE - 1) + " unique terms are unsupported");
  }
  SortedDocValues singleton=DocValues.unwrapSingleton(sortedSet);
  if (singleton != null) {
    return singleton;
  }
 else   if (selector == Type.MIN) {
    return new MinValue(sortedSet);
  }
 else {
    if (sortedSet instanceof RandomAccessOrds == false) {
      throw new UnsupportedOperationException("codec does not support random access ordinals, cannot use selector: " + selector);
    }
    RandomAccessOrds randomOrds=(RandomAccessOrds)sortedSet;
switch (selector) {
case MAX:
      return new MaxValue(randomOrds);
case MIDDLE_MIN:
    return new MiddleMinValue(randomOrds);
case MIDDLE_MAX:
  return new MiddleMaxValue(randomOrds);
case MIN:
default :
throw new AssertionError();
}
}
}
