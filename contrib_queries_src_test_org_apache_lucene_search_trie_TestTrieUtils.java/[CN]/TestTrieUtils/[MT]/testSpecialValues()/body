{
  assertEquals(TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MIN,"\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100");
  assertEquals(TrieUtils.VARIANT_8BIT.TRIE_CODED_NUMERIC_MAX,"\u01ff\u01ff\u01ff\u01ff\u01ff\u01ff\u01ff\u01ff");
  assertEquals(TrieUtils.VARIANT_8BIT.longToTrieCoded(-1),"\u017f\u01ff\u01ff\u01ff\u01ff\u01ff\u01ff\u01ff");
  assertEquals(TrieUtils.VARIANT_8BIT.longToTrieCoded(0),"\u0180\u0100\u0100\u0100\u0100\u0100\u0100\u0100");
  assertEquals(TrieUtils.VARIANT_8BIT.longToTrieCoded(1),"\u0180\u0100\u0100\u0100\u0100\u0100\u0100\u0101");
  assertEquals(TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MIN,"\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100");
  assertEquals(TrieUtils.VARIANT_4BIT.TRIE_CODED_NUMERIC_MAX,"\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f");
  assertEquals(TrieUtils.VARIANT_4BIT.longToTrieCoded(-1),"\u0107\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f\u010f");
  assertEquals(TrieUtils.VARIANT_4BIT.longToTrieCoded(0),"\u0108\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100");
  assertEquals(TrieUtils.VARIANT_4BIT.longToTrieCoded(1),"\u0108\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0100\u0101");
}
