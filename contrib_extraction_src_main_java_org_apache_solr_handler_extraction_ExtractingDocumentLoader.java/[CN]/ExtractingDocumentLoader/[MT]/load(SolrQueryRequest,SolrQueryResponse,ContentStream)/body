{
  errHeader="ExtractingDocumentLoader: " + stream.getSourceInfo();
  Parser parser=null;
  String streamType=req.getParams().get(ExtractingParams.STREAM_TYPE,null);
  if (streamType != null) {
    parser=config.getParser(streamType.trim().toLowerCase());
  }
 else {
    parser=autoDetectParser;
  }
  if (parser != null) {
    Metadata metadata=new Metadata();
    metadata.add(ExtractingMetadataConstants.STREAM_NAME,stream.getName());
    metadata.add(ExtractingMetadataConstants.STREAM_SOURCE_INFO,stream.getSourceInfo());
    metadata.add(ExtractingMetadataConstants.STREAM_SIZE,String.valueOf(stream.getSize()));
    metadata.add(ExtractingMetadataConstants.STREAM_CONTENT_TYPE,stream.getContentType());
    String resourceName=req.getParams().get(ExtractingParams.RESOURCE_NAME,null);
    if (resourceName != null) {
      metadata.add(Metadata.RESOURCE_NAME_KEY,resourceName);
    }
    SolrContentHandler handler=factory.createSolrContentHandler(metadata,params,schema);
    InputStream inputStream=null;
    try {
      inputStream=stream.getStream();
      String xpathExpr=params.get(ExtractingParams.XPATH_EXPRESSION);
      boolean extractOnly=params.getBool(ExtractingParams.EXTRACT_ONLY,false);
      ContentHandler parsingHandler=handler;
      StringWriter writer=null;
      XMLSerializer serializer=null;
      if (extractOnly == true) {
        writer=new StringWriter();
        serializer=new XMLSerializer(writer,new OutputFormat("XML","UTF-8",true));
        if (xpathExpr != null) {
          Matcher matcher=PARSER.parse(xpathExpr);
          serializer.startDocument();
          parsingHandler=new MatchingContentHandler(serializer,matcher);
        }
 else {
          parsingHandler=serializer;
        }
      }
 else       if (xpathExpr != null) {
        Matcher matcher=PARSER.parse(xpathExpr);
        parsingHandler=new MatchingContentHandler(handler,matcher);
      }
      parser.parse(inputStream,parsingHandler,metadata);
      if (extractOnly == false) {
        addDoc(handler);
      }
 else {
        if (xpathExpr != null) {
          serializer.endDocument();
        }
        rsp.add(stream.getName(),writer.toString());
        writer.close();
        String[] names=metadata.names();
        NamedList metadataNL=new NamedList();
        for (int i=0; i < names.length; i++) {
          String[] vals=metadata.getValues(names[i]);
          metadataNL.add(names[i],vals);
        }
        rsp.add(stream.getName() + "_metadata",metadataNL);
      }
    }
 catch (    Exception e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,e);
    }
 finally {
      IOUtils.closeQuietly(inputStream);
    }
  }
 else {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Stream type of " + streamType + " didn't match any known parsers.  Please supply the "+ ExtractingParams.STREAM_TYPE+ " parameter.");
  }
}
