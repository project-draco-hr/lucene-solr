{
  FieldCache.StringIndex si=FieldCache.DEFAULT.getStringIndex(reader,fieldName);
  final String[] terms=this.terms=si.lookup;
  final int[] termNum=this.ords=si.order;
  if (prefix != null) {
    startTermIndex=Arrays.binarySearch(terms,prefix,nullStrComparator);
    if (startTermIndex < 0)     startTermIndex=-startTermIndex - 1;
    endTermIndex=Arrays.binarySearch(terms,prefix + "\uffff\uffff\uffff\uffff",nullStrComparator);
    endTermIndex=-endTermIndex - 1;
  }
 else {
    startTermIndex=0;
    endTermIndex=terms.length;
  }
  final int nTerms=endTermIndex - startTermIndex;
  if (nTerms > 0) {
    final int[] counts=this.counts=new int[nTerms];
    DocIdSet idSet=baseSet.getDocIdSet(reader);
    DocIdSetIterator iter=idSet.iterator();
    if (startTermIndex == 0 && endTermIndex == terms.length) {
      int doc;
      while ((doc=iter.nextDoc()) < DocIdSetIterator.NO_MORE_DOCS) {
        counts[termNum[doc]]++;
      }
    }
 else {
      int doc;
      while ((doc=iter.nextDoc()) < DocIdSetIterator.NO_MORE_DOCS) {
        int term=termNum[doc];
        int arrIdx=term - startTermIndex;
        if (arrIdx >= 0 && arrIdx < nTerms)         counts[arrIdx]++;
      }
    }
  }
}
