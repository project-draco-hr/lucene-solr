{
  String code="a,\"foo\",b\na,   \" foo\",b\na,\"foo \"  ,b\na,  \" foo \"  ,b";
  TestCSVParser parser=new TestCSVParser(new StringReader(code));
  assertEquals(CSVParser.TT_TOKEN + ";a;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";foo;",parser.testNextToken());
  assertEquals(CSVParser.TT_EORECORD + ";b;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";a;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + "; foo;",parser.testNextToken());
  assertEquals(CSVParser.TT_EORECORD + ";b;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";a;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";foo ;",parser.testNextToken());
  assertEquals(CSVParser.TT_EORECORD + ";b;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";a;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + "; foo ;",parser.testNextToken());
  assertEquals(CSVParser.TT_EOF + ";b;",parser.testNextToken());
}
