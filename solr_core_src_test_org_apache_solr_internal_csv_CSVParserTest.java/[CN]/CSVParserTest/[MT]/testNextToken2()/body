{
  String code="1,2,3,\na,b x,c\n#foo\n\nd,e,\n\n";
  CSVStrategy strategy=(CSVStrategy)CSVStrategy.DEFAULT_STRATEGY.clone();
  strategy.setCommentStart('#');
  TestCSVParser parser=new TestCSVParser(new StringReader(code),strategy);
  assertEquals(CSVParser.TT_TOKEN + ";1;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";2;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";3;",parser.testNextToken());
  assertEquals(CSVParser.TT_EORECORD + ";;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";a;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";b x;",parser.testNextToken());
  assertEquals(CSVParser.TT_EORECORD + ";c;",parser.testNextToken());
  assertEquals(CSVParser.TT_EORECORD + ";;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";d;",parser.testNextToken());
  assertEquals(CSVParser.TT_TOKEN + ";e;",parser.testNextToken());
  assertEquals(CSVParser.TT_EORECORD + ";;",parser.testNextToken());
  assertEquals(CSVParser.TT_EOF + ";;",parser.testNextToken());
  assertEquals(CSVParser.TT_EOF + ";;",parser.testNextToken());
}
