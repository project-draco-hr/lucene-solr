{
  SolrServer server=createNewSolrServer("",getBaseUrl((HttpSolrServer)clients.get(0)));
  CollectionAdminResponse response1;
  CollectionAdminRequest.Create createCollectionRequest=new CollectionAdminRequest.Create();
  createCollectionRequest.setCollectionName(".system");
  createCollectionRequest.setNumShards(1);
  createCollectionRequest.setReplicationFactor(2);
  response1=createCollectionRequest.process(server);
  assertEquals(0,response1.getStatus());
  assertTrue(response1.isSuccess());
  DocCollection sysColl=cloudClient.getZkStateReader().getClusterState().getCollection(".system");
  Replica replica=sysColl.getActiveSlicesMap().values().iterator().next().getLeader();
  String baseUrl=replica.getStr(ZkStateReader.BASE_URL_PROP);
  String url=baseUrl + "/.system/config/requestHandler";
  Map map=TestSolrConfigHandlerConcurrent.getAsMap(url,cloudClient);
  assertNotNull(map);
  assertEquals("solr.BlobHandler",getObjectByPath(map,true,Arrays.asList("solrConfig","requestHandler","/blob","class")));
  byte[] bytarr=new byte[1024];
  for (int i=0; i < bytarr.length; i++)   bytarr[i]=(byte)(i % 127);
  byte[] bytarr2=new byte[2048];
  for (int i=0; i < bytarr2.length; i++)   bytarr2[i]=(byte)(i % 127);
  postAndCheck(baseUrl,bytarr,1);
  postAndCheck(baseUrl,bytarr2,2);
  url=baseUrl + "/.system/blob/test/1";
  map=TestSolrConfigHandlerConcurrent.getAsMap(url,cloudClient);
  List l=(List)ConfigOverlay.getObjectByPath(map,false,Arrays.asList("response","docs"));
  assertNotNull(l);
  map=(Map)l.get(0);
  assertEquals("" + bytarr.length,String.valueOf(map.get("size")));
  compareInputAndOutput(baseUrl + "/.system/blob/test?wt=filestream",bytarr2);
  compareInputAndOutput(baseUrl + "/.system/blob/test/1?wt=filestream",bytarr);
}
