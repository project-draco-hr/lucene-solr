{
  Map map=new HashMap();
  map.put("node",id);
  map.put("collection",collection);
  map.put("field",field);
  map.put("level",level);
  boolean prependCollection=traversal.isMultiCollection();
  List<String> cols=traversal.getCollections();
  if (ancestors != null) {
    List<String> l=new ArrayList();
    for (    String ancestor : ancestors) {
      String[] ancestorParts=ancestor.split("\\^");
      if (prependCollection) {
        int colIndex=Integer.parseInt(ancestorParts[0]);
        l.add(cols.get(colIndex) + "/" + ancestorParts[1]);
      }
 else {
        l.add(ancestorParts[1]);
      }
    }
    map.put("ancestors",l);
  }
  if (metrics != null) {
    for (    Metric metric : metrics) {
      map.put(metric.getIdentifier(),metric.getValue());
    }
  }
  return new Tuple(map);
}
