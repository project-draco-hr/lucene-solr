{
  if (numTokens < MAX_NUM_TOKENS_PER_GROUP) {
    final int termStartOffset=offsetAtt.startOffset();
    final int termEndOffset=offsetAtt.endOffset();
    if (numTokens == 0) {
      startOffset=matchStartOffset=termStartOffset;
      endOffset=matchEndOffset=termEndOffset;
      tot+=score;
    }
 else {
      startOffset=Math.min(startOffset,termStartOffset);
      endOffset=Math.max(endOffset,termEndOffset);
      if (score > 0) {
        if (tot == 0) {
          matchStartOffset=termStartOffset;
          matchEndOffset=termEndOffset;
        }
 else {
          matchStartOffset=Math.min(matchStartOffset,termStartOffset);
          matchEndOffset=Math.max(matchEndOffset,termEndOffset);
        }
        tot+=score;
      }
    }
    Token token=new Token();
    token.setOffset(termStartOffset,termEndOffset);
    token.setEmpty().append(termAtt);
    tokens[numTokens]=token;
    scores[numTokens]=score;
    numTokens++;
  }
}
