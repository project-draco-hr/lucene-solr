{
  try {
    if (!getSchema().isMutable()) {
      final String message="This IndexSchema is not mutable.";
      throw new SolrException(ErrorCode.BAD_REQUEST,message);
    }
 else {
      if (null == entity.getMediaType()) {
        entity.setMediaType(MediaType.APPLICATION_JSON);
      }
      if (!entity.getMediaType().equals(MediaType.APPLICATION_JSON,true)) {
        String message="Only media type " + MediaType.APPLICATION_JSON.toString() + " is accepted."+ "  Request has media type "+ entity.getMediaType().toString()+ ".";
        log.error(message);
        throw new SolrException(ErrorCode.BAD_REQUEST,message);
      }
 else {
        Object object=ObjectBuilder.fromJSON(entity.getText());
        if (!(object instanceof Map)) {
          String message="Invalid JSON type " + object.getClass().getName() + ", expected Map of the form"+ " (ignore the backslashes): {\"type\":\"text_general\", ...}, either with or"+ " without a \"name\" mapping.  If the \"name\" is specified, it must match the"+ " name given in the request URL: /schema/fields/(name)";
          log.error(message);
          throw new SolrException(ErrorCode.BAD_REQUEST,message);
        }
 else {
          Map<String,Object> map=(Map<String,Object>)object;
          if (1 == map.size() && map.containsKey(IndexSchema.FIELD)) {
            map=(Map<String,Object>)map.get(IndexSchema.FIELD);
          }
          String bodyFieldName;
          if (null != (bodyFieldName=(String)map.remove(IndexSchema.NAME)) && !fieldName.equals(bodyFieldName)) {
            String message="Field name in the request body '" + bodyFieldName + "' doesn't match field name in the request URL '"+ fieldName+ "'";
            log.error(message);
            throw new SolrException(ErrorCode.BAD_REQUEST,message);
          }
 else {
            String fieldType;
            if (null == (fieldType=(String)map.remove(IndexSchema.TYPE))) {
              String message="Missing '" + IndexSchema.TYPE + "' mapping.";
              log.error(message);
              throw new SolrException(ErrorCode.BAD_REQUEST,message);
            }
 else {
              ManagedIndexSchema oldSchema=(ManagedIndexSchema)getSchema();
              String copyTo=(String)map.get(IndexSchema.COPY_FIELDS);
              Collection<String> copyFieldNames=Collections.emptySet();
              if (copyTo != null) {
                map.remove(IndexSchema.COPY_FIELDS);
                String[] tmp=copyTo.split(",");
                copyFieldNames=new HashSet<>(tmp.length);
                Collections.addAll(copyFieldNames,tmp);
              }
              SchemaField newField=oldSchema.newField(fieldName,fieldType,map);
              IndexSchema newSchema=oldSchema.addField(newField,copyFieldNames);
              getSolrCore().setLatestSchema(newSchema);
            }
          }
        }
      }
    }
  }
 catch (  Exception e) {
    getSolrResponse().setException(e);
  }
  handlePostExecution(log);
  return new SolrOutputRepresentation();
}
