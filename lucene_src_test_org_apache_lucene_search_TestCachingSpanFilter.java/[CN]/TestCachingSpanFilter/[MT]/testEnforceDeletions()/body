{
  Directory dir=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,dir,newIndexWriterConfig(random,TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergeScheduler(new SerialMergeScheduler()).setMergePolicy(newLogMergePolicy(10)));
  IndexReader reader=IndexReader.open(writer.w,true);
  IndexSearcher searcher=newSearcher(reader,false);
  Document doc=new Document();
  FieldType customType=new FieldType(TextField.TYPE_STORED);
  customType.setTokenized(false);
  doc.add(newField("id","1",customType));
  writer.addDocument(doc);
  reader=refreshReader(reader);
  searcher.close();
  searcher=newSearcher(reader,false);
  TopDocs docs=searcher.search(new MatchAllDocsQuery(),1);
  assertEquals("Should find a hit...",1,docs.totalHits);
  final SpanFilter startFilter=new SpanQueryFilter(new SpanTermQuery(new Term("id","1")));
  CachingSpanFilter filter=new CachingSpanFilter(startFilter,CachingWrapperFilter.DeletesMode.IGNORE);
  docs=searcher.search(new MatchAllDocsQuery(),filter,1);
  assertEquals("[query + filter] Should find a hit...",1,docs.totalHits);
  ConstantScoreQuery constantScore=new ConstantScoreQuery(filter);
  docs=searcher.search(constantScore,1);
  assertEquals("[just filter] Should find a hit...",1,docs.totalHits);
  _TestUtil.keepFullyDeletedSegments(writer.w);
  writer.deleteDocuments(new Term("id","1"));
  reader=refreshReader(reader);
  searcher.close();
  searcher=newSearcher(reader,false);
  docs=searcher.search(new MatchAllDocsQuery(),filter,1);
  assertEquals("[query + filter] Should *not* find a hit...",0,docs.totalHits);
  docs=searcher.search(constantScore,1);
  assertEquals("[just filter] Should find a hit...",1,docs.totalHits);
  filter=new CachingSpanFilter(startFilter,CachingWrapperFilter.DeletesMode.RECACHE);
  writer.addDocument(doc);
  reader=refreshReader(reader);
  searcher.close();
  searcher=newSearcher(reader,false);
  docs=searcher.search(new MatchAllDocsQuery(),filter,1);
  assertEquals("[query + filter] Should find a hit...",1,docs.totalHits);
  constantScore=new ConstantScoreQuery(filter);
  docs=searcher.search(constantScore,1);
  assertEquals("[just filter] Should find a hit...",1,docs.totalHits);
  IndexReader oldReader=reader;
  writer.deleteDocuments(new Term("foo","bar"));
  reader=refreshReader(reader);
  assertTrue(reader == oldReader);
  int missCount=filter.missCount;
  docs=searcher.search(constantScore,1);
  assertEquals("[just filter] Should find a hit...",1,docs.totalHits);
  assertEquals(missCount,filter.missCount);
  writer.deleteDocuments(new Term("id","1"));
  reader=refreshReader(reader);
  searcher.close();
  searcher=newSearcher(reader,false);
  docs=searcher.search(new MatchAllDocsQuery(),filter,1);
  assertEquals("[query + filter] Should *not* find a hit...",0,docs.totalHits);
  docs=searcher.search(constantScore,1);
  assertEquals("[just filter] Should *not* find a hit...",0,docs.totalHits);
  assertTrue(oldReader != null);
  searcher.close();
  writer.close();
  reader.close();
  dir.close();
}
