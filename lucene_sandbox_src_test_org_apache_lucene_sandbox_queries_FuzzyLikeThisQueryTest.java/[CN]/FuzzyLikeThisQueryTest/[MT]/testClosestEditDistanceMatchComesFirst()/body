{
  FuzzyLikeThisQuery flt=new FuzzyLikeThisQuery(10,analyzer);
  flt.addTerms("smith","name",0.3f,1);
  Query q=flt.rewrite(searcher.getIndexReader());
  HashSet<Term> queryTerms=new HashSet<>();
  searcher.createWeight(q,true).extractTerms(queryTerms);
  assertTrue("Should have variant smythe",queryTerms.contains(new Term("name","smythe")));
  assertTrue("Should have variant smith",queryTerms.contains(new Term("name","smith")));
  assertTrue("Should have variant smyth",queryTerms.contains(new Term("name","smyth")));
  TopDocs topDocs=searcher.search(flt,1);
  ScoreDoc[] sd=topDocs.scoreDocs;
  assertTrue("score docs must match 1 doc",(sd != null) && (sd.length > 0));
  StoredDocument doc=searcher.doc(sd[0].doc);
  assertEquals("Should match most similar not most rare variant","2",doc.get("id"));
}
