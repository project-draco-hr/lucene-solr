{
  Thread t=new Thread(){
    @Override public void run(){
      try {
        long startTimeNS=System.nanoTime();
        Pattern logTimeStart=Pattern.compile("^[0-9\\.]+s .*");
        String line;
        while ((line=from.readLine()) != null) {
          if (toFile != null) {
            toFile.write(line);
            toFile.write("\n");
            toFile.flush();
          }
 else           if (logTimeStart.matcher(line).matches()) {
            System.out.println(line);
          }
 else {
            TestStressNRTReplication.message(line,startTimeNS);
          }
          if (line.contains("now force close server socket after")) {
            nodeClosing.set(true);
          }
        }
      }
 catch (      IOException e) {
        System.err.println("ignore IOExc reading from forked process pipe: " + e);
      }
 finally {
        onExit.run();
      }
    }
  }
;
  t.start();
  return t;
}
