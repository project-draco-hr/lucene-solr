{
  QueryUtils.checkHashEquals(LegacyNumericRangeQuery.newIntRange("test1",4,10,20,true,true));
  QueryUtils.checkHashEquals(LegacyNumericRangeQuery.newIntRange("test2",4,10,20,false,true));
  QueryUtils.checkHashEquals(LegacyNumericRangeQuery.newIntRange("test3",4,10,20,true,false));
  QueryUtils.checkHashEquals(LegacyNumericRangeQuery.newIntRange("test4",4,10,20,false,false));
  QueryUtils.checkHashEquals(LegacyNumericRangeQuery.newIntRange("test5",4,10,null,true,true));
  QueryUtils.checkHashEquals(LegacyNumericRangeQuery.newIntRange("test6",4,null,20,true,true));
  QueryUtils.checkHashEquals(LegacyNumericRangeQuery.newIntRange("test7",4,null,null,true,true));
  QueryUtils.checkEqual(LegacyNumericRangeQuery.newIntRange("test8",4,10,20,true,true),LegacyNumericRangeQuery.newIntRange("test8",4,10,20,true,true));
  QueryUtils.checkUnequal(LegacyNumericRangeQuery.newIntRange("test9",4,10,20,true,true),LegacyNumericRangeQuery.newIntRange("test9",8,10,20,true,true));
  QueryUtils.checkUnequal(LegacyNumericRangeQuery.newIntRange("test10a",4,10,20,true,true),LegacyNumericRangeQuery.newIntRange("test10b",4,10,20,true,true));
  QueryUtils.checkUnequal(LegacyNumericRangeQuery.newIntRange("test11",4,10,20,true,true),LegacyNumericRangeQuery.newIntRange("test11",4,20,10,true,true));
  QueryUtils.checkUnequal(LegacyNumericRangeQuery.newIntRange("test12",4,10,20,true,true),LegacyNumericRangeQuery.newIntRange("test12",4,10,20,false,true));
  QueryUtils.checkUnequal(LegacyNumericRangeQuery.newIntRange("test13",4,10,20,true,true),LegacyNumericRangeQuery.newFloatRange("test13",4,10f,20f,true,true));
  Query q1=LegacyNumericRangeQuery.newIntRange("test14",4,10,20,true,true);
  Query q2=LegacyNumericRangeQuery.newLongRange("test14",4,10L,20L,true,true);
  assertFalse(q1.equals(q2));
  assertFalse(q2.equals(q1));
}
