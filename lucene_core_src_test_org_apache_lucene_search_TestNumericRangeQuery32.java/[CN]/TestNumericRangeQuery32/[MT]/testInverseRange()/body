{
  AtomicReaderContext context=SlowCompositeReaderWrapper.wrap(reader).getContext();
  NumericRangeFilter<Integer> f=NumericRangeFilter.newIntRange("field8",8,1000,-1000,true,true);
  assertSame("A inverse range should return the EMPTY_DOCIDSET instance",DocIdSet.EMPTY_DOCIDSET,f.getDocIdSet(context,context.reader().getLiveDocs()));
  f=NumericRangeFilter.newIntRange("field8",8,Integer.MAX_VALUE,null,false,false);
  assertSame("A exclusive range starting with Integer.MAX_VALUE should return the EMPTY_DOCIDSET instance",DocIdSet.EMPTY_DOCIDSET,f.getDocIdSet(context,context.reader().getLiveDocs()));
  f=NumericRangeFilter.newIntRange("field8",8,null,Integer.MIN_VALUE,false,false);
  assertSame("A exclusive range ending with Integer.MIN_VALUE should return the EMPTY_DOCIDSET instance",DocIdSet.EMPTY_DOCIDSET,f.getDocIdSet(context,context.reader().getLiveDocs()));
}
