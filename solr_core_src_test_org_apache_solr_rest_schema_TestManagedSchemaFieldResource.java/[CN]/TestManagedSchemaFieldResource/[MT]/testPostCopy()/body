{
  assertJPost("/schema/fields","[{\"name\":\"fieldA\",\"type\":\"text\",\"stored\":\"false\"}," + "{\"name\":\"fieldB\",\"type\":\"text\",\"stored\":\"false\"}," + " {\"name\":\"fieldC\",\"type\":\"text\",\"stored\":\"false\", \"copyFields\":\"fieldB\"}]","/responseHeader/status==0");
  assertQ("/schema/copyfields/?indent=on&wt=xml&source.fl=fieldC","count(/response/arr[@name='copyFields']/lst) = 1");
  assertJPost("/schema/fields","[{\"name\":\"fieldD\",\"type\":\"text\",\"stored\":\"false\"}," + "{\"name\":\"fieldE\",\"type\":\"text\",\"stored\":\"false\"}," + " {\"name\":\"fieldF\",\"type\":\"text\",\"stored\":\"false\", \"copyFields\":\"fieldD,fieldE\"}]","/responseHeader/status==0");
  assertQ("/schema/copyfields/?indent=on&wt=xml&source.fl=fieldF","count(/response/arr[@name='copyFields']/lst) = 2");
  assertJPost("/schema/fields","[{\"name\":\"fieldG\",\"type\":\"text\",\"stored\":\"false\"}," + "{\"name\":\"fieldH\",\"type\":\"text\",\"stored\":\"false\"}," + " {\"name\":\"fieldI\",\"type\":\"text\",\"stored\":\"false\", \"copyFields\":\"fieldG,   fieldH   \"}]","/responseHeader/status==0");
  assertQ("/schema/copyfields/?indent=on&wt=xml&source.fl=fieldF","count(/response/arr[@name='copyFields']/lst) = 2");
  assertJPost("/schema/fields","[{\"name\":\"fieldX\",\"type\":\"text\",\"stored\":\"false\"}," + "{\"name\":\"fieldY\",\"type\":\"text\",\"stored\":\"false\"}," + " {\"name\":\"fieldZ\",\"type\":\"text\",\"stored\":\"false\", \"copyFields\":\",,,\"}]","/error/msg==\"Malformed destination(s) for: fieldZ\"");
  assertJPost("/schema/fields","[{\"name\":\"fieldX\",\"type\":\"text\",\"stored\":\"false\"}," + "{\"name\":\"fieldY\",\"type\":\"text\",\"stored\":\"false\"}," + " {\"name\":\"fieldZ\",\"type\":\"text\",\"stored\":\"false\", \"copyFields\":\"some_nonexistent_field\"}]","/error/msg==\"copyField dest :\\'some_nonexistent_field\\' is not an explicit field and doesn\\'t match a dynamicField.\"");
}
