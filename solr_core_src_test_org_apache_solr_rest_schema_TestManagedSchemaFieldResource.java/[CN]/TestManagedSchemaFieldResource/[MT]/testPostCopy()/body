{
  assertJPost("/schema/fields",json("[{'name':'fieldA','type':'text','stored':false}," + " {'name':'fieldB','type':'text','stored':false}," + " {'name':'fieldC','type':'text','stored':false, 'copyFields':['fieldB']}]"),"/responseHeader/status==0");
  assertQ("/schema/copyfields/?indent=on&wt=xml&source.fl=fieldC","count(/response/arr[@name='copyFields']/lst) = 1");
  assertJPost("/schema/fields",json("[{'name':'fieldD','type':'text','stored':false}," + " {'name':'fieldE','type':'text','stored':false}," + " {'name':'fieldF','type':'text','stored':false, 'copyFields':['fieldD','fieldE']},"+ " {'name':'fieldG','type':'text','stored':false, 'copyFields':'fieldD'}]"),"/responseHeader/status==0");
  assertQ("/schema/copyfields/?indent=on&wt=xml&source.fl=fieldF","count(/response/arr[@name='copyFields']/lst) = 2");
  assertJPost("/schema/fields",json("[{'name':'fieldX','type':'text','stored':false}," + " {'name':'fieldY','type':'text','stored':false}," + " {'name':'fieldZ','type':'text','stored':false, 'copyFields':[]}]"),"/responseHeader/status==0");
  assertJPost("/schema/fields",json("[{'name':'fieldH','type':'text','stored':false}," + " {'name':'fieldI','type':'text','stored':false}," + " {'name':'fieldJ','type':'text','stored':false, 'copyFields':['some_nonexistent_field_ignore_exception']}]"),"/error/msg=='copyField dest :\\'some_nonexistent_field_ignore_exception\\' is not an explicit field and doesn\\'t match a dynamicField.'");
}
