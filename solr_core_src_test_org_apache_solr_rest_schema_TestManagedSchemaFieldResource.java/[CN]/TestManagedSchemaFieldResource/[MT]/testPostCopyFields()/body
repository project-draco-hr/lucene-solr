{
  assertJPost("/schema/fields","[{\"name\":\"fieldA\",\"type\":\"text\",\"stored\":\"false\"}," + "{\"name\":\"fieldB\",\"type\":\"text\",\"stored\":\"false\"}," + "{\"name\":\"fieldC\",\"type\":\"text\",\"stored\":\"false\"},"+ "{\"name\":\"fieldD\",\"type\":\"text\",\"stored\":\"false\"},"+ " {\"name\":\"fieldE\",\"type\":\"text\",\"stored\":\"false\"}]","/responseHeader/status==0");
  assertJPost("/schema/copyfields","[{\"source\":\"fieldA\", \"dest\":\"fieldB\"},{\"source\":\"fieldD\", \"dest\":[\"fieldC\", \"fieldE\"]}]","/responseHeader/status==0");
  assertQ("/schema/copyfields/?indent=on&wt=xml&source.fl=fieldA","count(/response/arr[@name='copyFields']/lst) = 1");
  assertQ("/schema/copyfields/?indent=on&wt=xml&source.fl=fieldD","count(/response/arr[@name='copyFields']/lst) = 2");
  assertJPost("/schema/copyfields","[{\"source\":\"some_nonexistent_field_ignore_exception\", \"dest\":[\"fieldA\"]}]","/error/msg==\"copyField source :\\'some_nonexistent_field_ignore_exception\\' is not a glob and doesn\\'t match any explicit field or dynamicField.\"");
  assertJPost("/schema/copyfields","[{\"source\":\"fieldD\", \"dest\":[\"some_nonexistent_field_ignore_exception\"]}]","/error/msg==\"copyField dest :\\'some_nonexistent_field_ignore_exception\\' is not an explicit field and doesn\\'t match a dynamicField.\"");
}
