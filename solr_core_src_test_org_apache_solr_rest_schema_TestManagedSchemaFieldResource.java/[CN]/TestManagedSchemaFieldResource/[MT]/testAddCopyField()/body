{
  assertQ("/schema/fields/newfield2?indent=on&wt=xml","count(/response/lst[@name='field']) = 0","/response/lst[@name='responseHeader']/int[@name='status'] = '404'","/response/lst[@name='error']/int[@name='code'] = '404'");
  assertJPut("/schema/fields/fieldA","{\"type\":\"text\",\"stored\":\"false\"}","/responseHeader/status==0");
  assertJPut("/schema/fields/fieldB","{\"type\":\"text\",\"stored\":\"false\", \"copyFields\":\"fieldA\"}","/responseHeader/status==0");
  assertQ("/schema/fields/fieldB?indent=on&wt=xml","count(/response/lst[@name='field']) = 1","/response/lst[@name='responseHeader']/int[@name='status'] = '0'");
  assertQ("/schema/copyfields/?indent=on&wt=xml&source.fl=fieldB","count(/response/arr[@name='copyFields']/lst) = 1");
  assertJPut("/schema/fields/fieldB","{\"type\":\"text\",\"stored\":\"false\", \"copyFields\":\",,,\"}","/error/msg==\"Invalid copyFields for field: fieldB\"");
  assertJPut("/schema/fields/fieldC","{\"type\":\"text\",\"stored\":\"false\", \"copyFields\":\"some_nonexistent_field\"}","/error/msg==\"copyField dest :\\'some_nonexistent_field\\' is not an explicit field and doesn\\'t match a dynamicField.\"");
}
