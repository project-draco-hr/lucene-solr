{
  final long bitIndex=registerIndex * registerWidth;
  final int firstWordIndex=(int)(bitIndex >>> LOG2_BITS_PER_WORD);
  final int secondWordIndex=(int)((bitIndex + registerWidth - 1) >>> LOG2_BITS_PER_WORD);
  final int bitRemainder=(int)(bitIndex & BITS_PER_WORD_MASK);
  if (firstWordIndex == secondWordIndex)   return ((words[firstWordIndex] >>> bitRemainder) & registerMask);
  return (words[firstWordIndex] >>> bitRemainder) | (words[secondWordIndex] << (BITS_PER_WORD - bitRemainder)) & registerMask;
}
