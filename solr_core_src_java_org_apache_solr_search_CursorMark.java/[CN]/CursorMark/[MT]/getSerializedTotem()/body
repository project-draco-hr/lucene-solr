{
  if (null == this.values) {
    return CURSOR_MARK_START;
  }
  final List<SchemaField> schemaFields=sortSpec.getSchemaFields();
  final ArrayList<Object> marshalledValues=new ArrayList<Object>(values.size() + 1);
  for (int i=0; i < schemaFields.size(); i++) {
    SchemaField fld=schemaFields.get(i);
    Object safeValue=values.get(i);
    if (null != fld) {
      FieldType type=fld.getType();
      safeValue=type.marshalSortValue(safeValue);
    }
    marshalledValues.add(safeValue);
  }
  try {
    ByteArrayOutputStream out=new ByteArrayOutputStream(256);
    try {
      codec.marshal(marshalledValues,out);
      byte[] rawData=out.toByteArray();
      return Base64.byteArrayToBase64(rawData,0,rawData.length);
    }
  finally {
      out.close();
    }
  }
 catch (  Exception ex) {
    throw new SolrException(ErrorCode.SERVER_ERROR,"Unable to format search after totem",ex);
  }
}
