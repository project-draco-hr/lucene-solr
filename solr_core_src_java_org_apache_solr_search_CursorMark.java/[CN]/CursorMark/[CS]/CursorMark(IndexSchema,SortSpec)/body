{
  final SchemaField uniqueKey=schema.getUniqueKeyField();
  if (null == uniqueKey) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Cursor functionality is not available unless the IndexSchema defines a uniqueKey field");
  }
  final Sort sort=sortSpec.getSort();
  if (null == sort) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Cursor functionality requires a sort containing a uniqueKey field tie breaker");
  }
  if (!sortSpec.getSchemaFields().contains(uniqueKey)) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Cursor functionality requires a sort containing a uniqueKey field tie breaker");
  }
  if (0 != sortSpec.getOffset()) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Cursor functionality requires start=0");
  }
  for (  SortField sf : sort.getSort()) {
    if (sf.getType().equals(SortField.Type.DOC)) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"Cursor functionality can not be used with internal doc ordering sort: _docid_");
    }
  }
  if (sort.getSort().length != sortSpec.getSchemaFields().size()) {
    throw new SolrException(ErrorCode.SERVER_ERROR,"Cursor SortSpec failure: sort length != SchemaFields: " + sort.getSort().length + " != "+ sortSpec.getSchemaFields().size());
  }
  this.sortSpec=sortSpec;
  this.values=null;
}
