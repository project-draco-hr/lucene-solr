{
  if (!isMutable) {
    String msg="This ManagedIndexSchema is not mutable.";
    log.error(msg);
    throw new SolrException(ErrorCode.SERVER_ERROR,msg);
  }
  ManagedIndexSchema newSchema=shallowCopy(true);
  HashMap<String,FieldType> clone=(HashMap<String,FieldType>)((HashMap<String,FieldType>)newSchema.fieldTypes).clone();
  newSchema.fieldTypes=clone;
  for (  FieldType fieldType : fieldTypeList) {
    String typeName=fieldType.getTypeName();
    if (newSchema.getFieldTypeByName(typeName) != null) {
      throw new FieldExistsException(ErrorCode.BAD_REQUEST,"Field type '" + typeName + "' already exists!");
    }
    newSchema.fieldTypes.put(typeName,fieldType);
  }
  for (  SchemaAware aware : newSchema.schemaAware)   aware.inform(newSchema);
  for (  FieldType fieldType : fieldTypeList)   informResourceLoaderAwareObjectsForFieldType(fieldType);
  newSchema.refreshAnalyzers();
  if (persist) {
    boolean success=newSchema.persistManagedSchema(false);
    if (success) {
      if (log.isDebugEnabled()) {
        StringBuilder fieldTypeNames=new StringBuilder();
        for (int i=0; i < fieldTypeList.size(); i++) {
          if (i > 0)           fieldTypeNames.append(", ");
          fieldTypeNames.append(fieldTypeList.get(i).typeName);
        }
        log.debug("Added field types: {}",fieldTypeNames.toString());
      }
    }
 else {
      log.error("Failed to add field types: {}",fieldTypeList);
      throw new SolrException(ErrorCode.SERVER_ERROR,"Failed to persist updated schema due to underlying storage issue; check log for more details!");
    }
  }
  return newSchema;
}
