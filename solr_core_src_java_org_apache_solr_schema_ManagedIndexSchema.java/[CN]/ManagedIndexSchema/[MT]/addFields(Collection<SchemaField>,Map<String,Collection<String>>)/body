{
  ManagedIndexSchema newSchema=null;
  if (isMutable) {
    boolean success=false;
    if (copyFieldNames == null) {
      copyFieldNames=Collections.emptyMap();
    }
    while (!success) {
synchronized (getSchemaUpdateLock()) {
        newSchema=shallowCopy(true);
        for (        SchemaField newField : newFields) {
          if (null != newSchema.getFieldOrNull(newField.getName())) {
            String msg="Field '" + newField.getName() + "' already exists.";
            throw new FieldExistsException(ErrorCode.BAD_REQUEST,msg);
          }
          newSchema.fields.put(newField.getName(),newField);
          if (null != newField.getDefaultValue()) {
            log.debug(newField.getName() + " contains default value: " + newField.getDefaultValue());
            newSchema.fieldsWithDefaultValue.add(newField);
          }
          if (newField.isRequired()) {
            log.debug("{} is required in this schema",newField.getName());
            newSchema.requiredFields.add(newField);
          }
          Collection<String> copyFields=copyFieldNames.get(newField.getName());
          if (copyFields != null) {
            for (            String copyField : copyFields) {
              newSchema.registerCopyField(newField.getName(),copyField);
            }
          }
        }
        for (        SchemaAware aware : newSchema.schemaAware) {
          aware.inform(newSchema);
        }
        newSchema.refreshAnalyzers();
        success=newSchema.persistManagedSchema(false);
        if (success) {
          log.debug("Added field(s): {}",newFields);
        }
      }
    }
  }
 else {
    String msg="This ManagedIndexSchema is not mutable.";
    log.error(msg);
    throw new SolrException(ErrorCode.SERVER_ERROR,msg);
  }
  return newSchema;
}
