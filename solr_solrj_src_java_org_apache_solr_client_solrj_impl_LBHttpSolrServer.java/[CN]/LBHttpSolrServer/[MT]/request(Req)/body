{
  Rsp rsp=new Rsp();
  Exception ex=null;
  boolean isUpdate=req.request instanceof IsUpdateRequest;
  List<ServerWrapper> skipped=new ArrayList<ServerWrapper>(req.getNumDeadServersToTry());
  for (  String serverStr : req.getServers()) {
    serverStr=normalize(serverStr);
    ServerWrapper wrapper=zombieServers.get(serverStr);
    if (wrapper != null) {
      if (skipped.size() < req.getNumDeadServersToTry())       skipped.add(wrapper);
      continue;
    }
    rsp.server=serverStr;
    HttpSolrServer server=makeServer(serverStr);
    try {
      rsp.rsp=server.request(req.getRequest());
      return rsp;
    }
 catch (    SolrException e) {
      if (!isUpdate && RETRY_CODES.contains(e.code())) {
        ex=addZombie(server,e);
      }
 else {
        throw e;
      }
    }
catch (    SocketException e) {
      if (!isUpdate || e instanceof ConnectException) {
        ex=addZombie(server,e);
      }
 else {
        throw e;
      }
    }
catch (    SocketTimeoutException e) {
      if (!isUpdate) {
        ex=addZombie(server,e);
      }
 else {
        throw e;
      }
    }
catch (    SolrServerException e) {
      Throwable rootCause=e.getRootCause();
      if (!isUpdate && rootCause instanceof IOException) {
        ex=addZombie(server,e);
      }
 else       if (isUpdate && rootCause instanceof ConnectException) {
        ex=addZombie(server,e);
      }
 else {
        throw e;
      }
    }
catch (    Exception e) {
      throw new SolrServerException(e);
    }
  }
  for (  ServerWrapper wrapper : skipped) {
    try {
      rsp.rsp=wrapper.solrServer.request(req.getRequest());
      zombieServers.remove(wrapper.getKey());
      return rsp;
    }
 catch (    SolrException e) {
      if (!isUpdate && RETRY_CODES.contains(e.code())) {
        ex=e;
      }
 else {
        zombieServers.remove(wrapper.getKey());
        throw e;
      }
    }
catch (    SocketException e) {
      if (!isUpdate || e instanceof ConnectException) {
        ex=e;
      }
 else {
        throw e;
      }
    }
catch (    SocketTimeoutException e) {
      if (!isUpdate) {
        ex=e;
      }
 else {
        throw e;
      }
    }
catch (    SolrServerException e) {
      Throwable rootCause=e.getRootCause();
      if (!isUpdate && rootCause instanceof IOException) {
        ex=e;
      }
 else       if (isUpdate && rootCause instanceof ConnectException) {
        ex=e;
      }
 else {
        throw e;
      }
    }
catch (    Exception e) {
      throw new SolrServerException(e);
    }
  }
  if (ex == null) {
    throw new SolrServerException("No live SolrServers available to handle this request");
  }
 else {
    throw new SolrServerException("No live SolrServers available to handle this request:" + zombieServers.keySet(),ex);
  }
}
