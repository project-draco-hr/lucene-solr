{
  super(planetModel);
  this.testPointInSet=testPointInSet;
  Plane p=Plane.constructNormalizedZPlane(testPoint.x,testPoint.y);
  if (p == null) {
    p=new Plane(1.0,0.0,0.0,0.0);
  }
  this.testPointZPlane=p;
  this.edgePoints=new GeoPoint[pointsList.size()];
  this.shapeStartEdges=new Edge[pointsList.size()];
  int edgePointIndex=0;
  for (  final List<GeoPoint> shapePoints : pointsList) {
    GeoPoint lastGeoPoint=pointsList.get(shapePoints.size() - 1);
    edgePoints[edgePointIndex]=lastGeoPoint;
    Edge lastEdge=null;
    Edge firstEdge=null;
    for (    final GeoPoint thisGeoPoint : shapePoints) {
      final Edge edge=new Edge(planetModel,lastGeoPoint,thisGeoPoint);
      xtree.add(edge);
      ytree.add(edge);
      ztree.add(edge);
      if (firstEdge == null) {
        firstEdge=edge;
      }
      if (lastEdge != null) {
        lastEdge.next=edge;
        edge.previous=lastEdge;
      }
      lastEdge=edge;
      lastGeoPoint=thisGeoPoint;
    }
    firstEdge.previous=lastEdge;
    lastEdge.next=firstEdge;
    shapeStartEdges[edgePointIndex]=firstEdge;
    edgePointIndex++;
  }
}
