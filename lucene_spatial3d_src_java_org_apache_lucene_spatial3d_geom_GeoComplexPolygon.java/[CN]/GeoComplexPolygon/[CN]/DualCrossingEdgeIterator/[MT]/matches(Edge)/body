{
  System.err.println("Processing edge " + edge);
  if (thePoint != null && edge.plane.evaluateIsZero(thePoint) && edge.startPlane.isWithin(thePoint) && edge.endPlane.isWithin(thePoint)) {
    System.err.println(" Check point is on edge: isWithin = true");
    return false;
  }
  final GeoPoint[] crossingPoints;
  if (isSecondLeg) {
    crossingPoints=travelPlane.findCrossings(planetModel,edge.plane,checkPointCutoffPlane,checkPointOtherCutoffPlane,edge.startPlane,edge.endPlane);
  }
 else {
    crossingPoints=testPointPlane.findCrossings(planetModel,edge.plane,testPointCutoffPlane,testPointOtherCutoffPlane,edge.startPlane,edge.endPlane);
  }
  if (crossingPoints != null) {
    for (    final GeoPoint crossingPoint : crossingPoints) {
      countCrossingPoint(crossingPoint,edge);
    }
    System.err.println(" All crossing points processed");
  }
 else {
    System.err.println(" No crossing points!");
  }
  return true;
}
