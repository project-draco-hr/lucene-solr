{
  double minimumDistance=Double.MAX_VALUE;
  for (  final Edge shapeStartEdge : shapeStartEdges) {
    Edge shapeEdge=shapeStartEdge;
    while (true) {
      final double newDist=distanceStyle.computeDistance(shapeEdge.startPoint,x,y,z);
      if (newDist < minimumDistance) {
        minimumDistance=newDist;
      }
      final double newPlaneDist=distanceStyle.computeDistance(planetModel,shapeEdge.plane,x,y,z,shapeEdge.startPlane,shapeEdge.endPlane);
      if (newPlaneDist < minimumDistance) {
        minimumDistance=newPlaneDist;
      }
      shapeEdge=shapeEdge.next;
      if (shapeEdge == shapeStartEdge) {
        break;
      }
    }
  }
  return minimumDistance;
}
