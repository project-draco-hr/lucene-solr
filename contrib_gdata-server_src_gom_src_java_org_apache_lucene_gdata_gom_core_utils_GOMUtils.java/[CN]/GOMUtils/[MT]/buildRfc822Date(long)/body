{
  Calendar instance=Calendar.getInstance(TimeZone.getTimeZone("GMT"));
  instance.setTimeInMillis(aMillisecondLong);
  StringBuilder builder=new StringBuilder();
switch (instance.get(Calendar.DAY_OF_WEEK)) {
case Calendar.SUNDAY:
    builder.append("Sun");
  break;
case Calendar.MONDAY:
builder.append("Mon");
break;
case Calendar.TUESDAY:
builder.append("Tue");
break;
case Calendar.WEDNESDAY:
builder.append("Wed");
break;
case Calendar.THURSDAY:
builder.append("Thu");
break;
case Calendar.FRIDAY:
builder.append("Fri");
break;
case Calendar.SATURDAY:
builder.append("Sat");
break;
default :
break;
}
builder.append(',');
builder.append(' ');
int time=0;
time=instance.get(Calendar.DAY_OF_MONTH);
if (time < 10) builder.append(0);
builder.append(time);
builder.append(' ');
switch (instance.get(Calendar.MONTH)) {
case Calendar.JANUARY:
builder.append("Jan");
break;
case Calendar.FEBRUARY:
builder.append("Feb");
break;
case Calendar.MARCH:
builder.append("Mar");
break;
case Calendar.APRIL:
builder.append("Apr");
break;
case Calendar.MAY:
builder.append("May");
break;
case Calendar.JUNE:
builder.append("Jun");
break;
case Calendar.JULY:
builder.append("Jul");
break;
case Calendar.AUGUST:
builder.append("Aug");
break;
case Calendar.SEPTEMBER:
builder.append("Sep");
break;
case Calendar.OCTOBER:
builder.append("Oct");
break;
case Calendar.NOVEMBER:
builder.append("Nov");
break;
case Calendar.DECEMBER:
builder.append("Dec");
break;
default :
break;
}
builder.append(' ');
time=instance.get(Calendar.YEAR);
if (time < 1000) builder.append("0");
if (time < 100) builder.append("0");
if (time < 10) builder.append("0");
builder.append(time);
builder.append(' ');
time=instance.get(Calendar.HOUR_OF_DAY);
if (time < 10) builder.append(0);
builder.append(time);
builder.append(':');
time=instance.get(Calendar.MINUTE);
if (time < 10) builder.append(0);
builder.append(time);
builder.append(':');
time=instance.get(Calendar.SECOND);
if (time < 10) builder.append(0);
builder.append(time);
builder.append(" +0000");
return builder.toString();
}
