{
  final Edge startEdge=new Edge(pointList.get(startPlaneStartIndex),pointList.get(startPlaneEndIndex),startPlane,internalEdges.get(startPlaneStartIndex));
  Edge currentEdge=startEdge;
  int startIndex=startPlaneStartIndex;
  int endIndex=startPlaneEndIndex;
  while (true) {
    if (currentEdge.endPoint == startEdge.startPoint) {
      previousEdges.put(startEdge,currentEdge);
      nextEdges.put(currentEdge,startEdge);
      edges.add(startEdge);
      break;
    }
    startIndex=endIndex;
    endIndex++;
    if (endIndex >= pointList.size()) {
      endIndex-=pointList.size();
    }
    final GeoPoint newPoint=pointList.get(endIndex);
    final boolean isNewPointWithin=currentEdge.plane.isWithin(newPoint);
    final GeoPoint pointToPresent=currentEdge.startPoint;
    final SidedPlane newPlane=new SidedPlane(pointToPresent,isNewPointWithin,pointList.get(startIndex),newPoint);
    final Edge newEdge=new Edge(pointList.get(startIndex),pointList.get(endIndex),newPlane,internalEdges.get(startIndex));
    previousEdges.put(newEdge,currentEdge);
    nextEdges.put(currentEdge,newEdge);
    edges.add(newEdge);
    currentEdge=newEdge;
  }
  oneEdge=startEdge;
}
