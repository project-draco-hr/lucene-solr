{
  int considerPointIndex=pointIndex;
  while (true) {
    final GeoPoint considerStartPoint=currentPath.lastPoint;
    final GeoPoint considerEndPoint=points.get(considerPointIndex);
    final int nextPointIndex=getLegalIndex(considerPointIndex + 1,points.size());
    if (!considerStartPoint.isNumericallyIdentical(considerEndPoint)) {
      final Plane considerPlane=new Plane(considerStartPoint,considerEndPoint);
      boolean isChoiceLegal=true;
      if (isChoiceLegal) {
        if (currentPath.lastPlane != null) {
          if (currentPath.lastPlane.evaluateIsZero(considerEndPoint)) {
            isChoiceLegal=false;
          }
 else           if (considerPlane.evaluateIsZero(currentPath.previous.lastPoint)) {
            isChoiceLegal=false;
          }
        }
      }
      if (isChoiceLegal && considerPointIndex == startPointIndex) {
        final SafePath firstPlaneEndpoint=currentPath.findFirstEndpoint();
        if (firstPlaneEndpoint == null) {
          isChoiceLegal=false;
        }
 else {
          if (firstPlaneEndpoint.lastPlane.evaluateIsZero(considerStartPoint)) {
            isChoiceLegal=false;
          }
 else           if (considerPlane.evaluateIsZero(firstPlaneEndpoint.lastPoint)) {
            isChoiceLegal=false;
          }
        }
      }
      if (isChoiceLegal) {
        int checkIndex=getLegalIndex(currentPath.lastPointIndex + 1,points.size());
        while (checkIndex != considerPointIndex) {
          if (!considerPlane.evaluateIsZero(points.get(checkIndex))) {
            return null;
          }
          checkIndex=getLegalIndex(checkIndex + 1,points.size());
        }
      }
      if (isChoiceLegal) {
        if (considerPointIndex == startPointIndex) {
          return currentPath;
        }
        final SafePath newPath=new SafePath(currentPath,considerEndPoint,considerPointIndex,considerPlane);
        final SafePath result=findSafePath(newPath,points,nextPointIndex,startPointIndex);
        if (result != null) {
          return result;
        }
      }
    }
    if (considerPointIndex == startPointIndex) {
      break;
    }
    considerPointIndex=nextPointIndex;
  }
  return null;
}
