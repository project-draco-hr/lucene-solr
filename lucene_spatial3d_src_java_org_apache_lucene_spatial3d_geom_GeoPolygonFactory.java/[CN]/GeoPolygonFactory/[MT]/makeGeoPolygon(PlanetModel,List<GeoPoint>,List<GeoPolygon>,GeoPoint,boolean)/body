{
  final List<GeoPoint> filteredPointList=filterPoints(pointList);
  final SidedPlane initialPlane=new SidedPlane(testPoint,filteredPointList.get(0),filteredPointList.get(1));
  GeoCompositePolygon rval=new GeoCompositePolygon();
  if (buildPolygonShape(rval,planetModel,filteredPointList,new BitSet(),0,1,initialPlane,holes,testPoint) == false) {
    if (testPointInside) {
      rval=new GeoCompositePolygon();
      buildPolygonShape(rval,planetModel,filteredPointList,new BitSet(),0,1,initialPlane,holes,null);
      return rval;
    }
    rval=new GeoCompositePolygon();
    buildPolygonShape(rval,planetModel,filteredPointList,new BitSet(),0,1,new SidedPlane(initialPlane),holes,null);
    return rval;
  }
 else {
    if (!testPointInside) {
      return rval;
    }
    rval=new GeoCompositePolygon();
    buildPolygonShape(rval,planetModel,filteredPointList,new BitSet(),0,1,new SidedPlane(initialPlane),holes,null);
    return rval;
  }
}
