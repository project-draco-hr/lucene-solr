{
  final List<GeoPoint> filteredPoints=filterPoints(shape.points);
  if (filteredPoints == null) {
    return testPointShape;
  }
  if (shape.holes.size() == 0) {
    if (testPointShape == null || testPointShape.points.size() > filteredPoints.size()) {
      testPointShape=new BestShape(filteredPoints,mustBeInside);
    }
  }
  pointsList.add(filteredPoints);
  for (  final PolygonDescription hole : shape.holes) {
    testPointShape=convertPolygon(pointsList,hole,testPointShape,!mustBeInside);
  }
  return testPointShape;
}
