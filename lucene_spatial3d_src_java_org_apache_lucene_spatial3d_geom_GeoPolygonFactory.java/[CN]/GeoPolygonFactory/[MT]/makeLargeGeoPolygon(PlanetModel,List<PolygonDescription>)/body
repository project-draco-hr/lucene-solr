{
  final List<List<GeoPoint>> pointsList=new ArrayList<>();
  BestShape testPointShape=null;
  for (  final PolygonDescription shape : shapesList) {
    testPointShape=convertPolygon(pointsList,shape,testPointShape,true);
  }
  if (testPointShape == null) {
    throw new IllegalArgumentException("couldn't find a non-degenerate polygon for in-set determination");
  }
  final Random generator=new Random(1234);
  for (int counter=0; counter < 1000000; counter++) {
    final GeoPoint pole=pickPole(generator,planetModel,testPointShape.points);
    final Boolean isPoleInside=isInsidePolygon(pole,testPointShape.points);
    if (isPoleInside != null) {
      if (isPoleInside == testPointShape.poleMustBeInside) {
        return new GeoComplexPolygon(planetModel,pointsList,pole,isPoleInside);
      }
 else {
        return new GeoComplexPolygon(planetModel,pointsList,new GeoPoint(-pole.x,-pole.y,-pole.z),!isPoleInside);
      }
    }
  }
  throw new IllegalArgumentException("cannot find a point that is inside the polygon " + testPointShape);
}
