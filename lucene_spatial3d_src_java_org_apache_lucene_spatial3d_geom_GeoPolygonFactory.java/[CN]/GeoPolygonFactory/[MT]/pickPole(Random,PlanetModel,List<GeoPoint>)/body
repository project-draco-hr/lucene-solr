{
  final int pointIndex=generator.nextInt(points.size());
  final GeoPoint closePoint=points.get(pointIndex);
  final double angle=generator.nextDouble() * Math.PI * 2.0 - Math.PI;
  double maxArcDistance=points.get(0).arcDistance(points.get(1));
  double trialArcDistance=points.get(0).arcDistance(points.get(2));
  if (trialArcDistance > maxArcDistance) {
    maxArcDistance=trialArcDistance;
  }
  final double arcDistance=maxArcDistance - generator.nextDouble() * maxArcDistance;
  final double x=Math.cos(arcDistance);
  final double sinArcDistance=Math.sin(arcDistance);
  final double y=Math.cos(angle) * sinArcDistance;
  final double z=Math.sin(angle) * sinArcDistance;
  final double sinLatitude=Math.sin(closePoint.getLatitude());
  final double cosLatitude=Math.cos(closePoint.getLatitude());
  final double sinLongitude=Math.sin(closePoint.getLongitude());
  final double cosLongitude=Math.cos(closePoint.getLongitude());
  final double x1=x * cosLatitude - z * sinLatitude;
  final double y1=y;
  final double z1=x * sinLatitude + z * cosLatitude;
  final double x2=x1 * cosLongitude - y1 * sinLongitude;
  final double y2=x1 * sinLongitude + y1 * cosLongitude;
  final double z2=z1;
  return planetModel.createSurfacePoint(x2,y2,z2);
}
