{
  float boost=(float)dboost;
  FunctionQuery functionQuery=new FunctionQuery(valueSource);
  IndexSearcher s=new IndexSearcher(dir,true);
  BooleanQuery q1=new BooleanQuery();
  q1.add(new TermQuery(new Term(TEXT_FIELD,"first")),BooleanClause.Occur.SHOULD);
  q1.add(new TermQuery(new Term(TEXT_FIELD,"aid")),BooleanClause.Occur.SHOULD);
  q1.add(new TermQuery(new Term(TEXT_FIELD,"text")),BooleanClause.Occur.SHOULD);
  log(q1);
  Query q2CustomNeutral=new CustomScoreQuery(q1);
  q2CustomNeutral.setBoost(boost);
  log(q2CustomNeutral);
  CustomScoreQuery q3CustomMul=new CustomScoreQuery(q1,functionQuery);
  q3CustomMul.setStrict(true);
  q3CustomMul.setBoost(boost);
  log(q3CustomMul);
  CustomScoreQuery q4CustomAdd=new CustomAddQuery(q1,functionQuery);
  q4CustomAdd.setStrict(true);
  q4CustomAdd.setBoost(boost);
  log(q4CustomAdd);
  CustomScoreQuery q5CustomMulAdd=new CustomMulAddQuery(q1,functionQuery,functionQuery);
  q5CustomMulAdd.setStrict(true);
  q5CustomMulAdd.setBoost(boost);
  log(q5CustomMulAdd);
  TopDocs td1=s.search(q1,null,1000);
  TopDocs td2CustomNeutral=s.search(q2CustomNeutral,null,1000);
  TopDocs td3CustomMul=s.search(q3CustomMul,null,1000);
  TopDocs td4CustomAdd=s.search(q4CustomAdd,null,1000);
  TopDocs td5CustomMulAdd=s.search(q5CustomMulAdd,null,1000);
  Map<Integer,Float> h1=topDocsToMap(td1);
  Map<Integer,Float> h2CustomNeutral=topDocsToMap(td2CustomNeutral);
  Map<Integer,Float> h3CustomMul=topDocsToMap(td3CustomMul);
  Map<Integer,Float> h4CustomAdd=topDocsToMap(td4CustomAdd);
  Map<Integer,Float> h5CustomMulAdd=topDocsToMap(td5CustomMulAdd);
  verifyResults(boost,s,h1,h2CustomNeutral,h3CustomMul,h4CustomAdd,h5CustomMulAdd,q1,q2CustomNeutral,q3CustomMul,q4CustomAdd,q5CustomMulAdd);
  s.close();
}
