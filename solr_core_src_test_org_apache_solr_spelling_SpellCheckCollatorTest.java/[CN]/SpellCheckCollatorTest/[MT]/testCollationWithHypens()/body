{
  SolrCore core=h.getCore();
  SearchComponent speller=core.getSearchComponent("spellcheck");
  assertTrue("speller is null and it shouldn't be",speller != null);
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add(SpellCheckComponent.COMPONENT_NAME,"true");
  params.add(SpellingParams.SPELLCHECK_BUILD,"true");
  params.add(SpellingParams.SPELLCHECK_COUNT,"10");
  params.add(SpellingParams.SPELLCHECK_COLLATE,"true");
  params.add(CommonParams.Q,"lowerfilt:(hypenated-wotd)");
{
    SolrRequestHandler handler=core.getRequestHandler("spellCheckCompRH");
    SolrQueryResponse rsp=new SolrQueryResponse();
    rsp.add("responseHeader",new SimpleOrderedMap());
    SolrQueryRequest req=new LocalSolrQueryRequest(core,params);
    handler.handleRequest(req,rsp);
    req.close();
    NamedList values=rsp.getValues();
    NamedList spellCheck=(NamedList)values.get("spellcheck");
    NamedList suggestions=(NamedList)spellCheck.get("suggestions");
    List<String> collations=suggestions.getAll("collation");
    assertTrue(collations.size() == 1);
    String collation=collations.iterator().next();
    assertTrue("Incorrect collation: " + collation,"lowerfilt:(hyphenated-word)".equals(collation));
  }
  params.remove(CommonParams.Q);
  params.add("defType","dismax");
  params.add("qf","lowerfilt");
  params.add(CommonParams.Q,"hypenated-wotd");
{
    SolrRequestHandler handler=core.getRequestHandler("spellCheckCompRH");
    SolrQueryResponse rsp=new SolrQueryResponse();
    rsp.add("responseHeader",new SimpleOrderedMap());
    SolrQueryRequest req=new LocalSolrQueryRequest(core,params);
    handler.handleRequest(req,rsp);
    req.close();
    NamedList values=rsp.getValues();
    NamedList spellCheck=(NamedList)values.get("spellcheck");
    NamedList suggestions=(NamedList)spellCheck.get("suggestions");
    List<String> collations=suggestions.getAll("collation");
    assertTrue(collations.size() == 1);
    String collation=collations.iterator().next();
    assertTrue("Incorrect collation: " + collation,"hyphenated-word".equals(collation));
  }
}
