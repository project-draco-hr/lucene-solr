{
  SolrCore core=h.getCore();
  SearchComponent speller=core.getSearchComponent("spellcheck");
  assertTrue("speller is null and it shouldn't be",speller != null);
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add(SpellCheckComponent.COMPONENT_NAME,"true");
  params.add(SpellingParams.SPELLCHECK_BUILD,"true");
  params.add(SpellingParams.SPELLCHECK_COUNT,"10");
  params.add(SpellingParams.SPELLCHECK_COLLATE,"true");
  params.add(SpellingParams.SPELLCHECK_ALTERNATIVE_TERM_COUNT,"10");
  params.add(CommonParams.Q,"id:[1 TO 10] AND lowerfilt:lovw");
{
    SolrRequestHandler handler=core.getRequestHandler("spellCheckCompRH");
    SolrQueryResponse rsp=new SolrQueryResponse();
    rsp.addResponseHeader(new SimpleOrderedMap());
    SolrQueryRequest req=new LocalSolrQueryRequest(core,params);
    handler.handleRequest(req,rsp);
    req.close();
    NamedList values=rsp.getValues();
    NamedList spellCheck=(NamedList)values.get("spellcheck");
    NamedList collationHolder=(NamedList)spellCheck.get("collations");
    List<String> collations=collationHolder.getAll("collation");
    assertTrue(collations.size() == 1);
    String collation=collations.iterator().next();
    System.out.println(collation);
    assertTrue("Incorrect collation: " + collation,"id:[1 TO 10] AND lowerfilt:love".equals(collation));
  }
}
