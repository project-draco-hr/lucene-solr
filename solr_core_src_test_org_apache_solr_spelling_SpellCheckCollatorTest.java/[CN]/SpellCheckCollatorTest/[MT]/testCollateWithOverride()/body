{
  assertQ(req(SpellCheckComponent.COMPONENT_NAME,"true",SpellCheckComponent.SPELLCHECK_DICT,"direct",SpellingParams.SPELLCHECK_COUNT,"10",SpellingParams.SPELLCHECK_COLLATE,"true",SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES,"10",SpellingParams.SPELLCHECK_MAX_COLLATIONS,"10","qt","spellCheckCompRH","defType","edismax","qf","teststop","mm","1",CommonParams.Q,"partisian politcal mashine"),"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='parisian political machine'");
  assertQ(req(SpellCheckComponent.COMPONENT_NAME,"true",SpellCheckComponent.SPELLCHECK_DICT,"direct",SpellingParams.SPELLCHECK_COUNT,"10",SpellingParams.SPELLCHECK_COLLATE,"true",SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES,"10",SpellingParams.SPELLCHECK_MAX_COLLATIONS,"10","qt","spellCheckCompRH","defType","edismax","qf","teststop","mm","1",SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + "mm","100%",CommonParams.Q,"partisian politcal mashine"),"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='partisan political machine'");
}
