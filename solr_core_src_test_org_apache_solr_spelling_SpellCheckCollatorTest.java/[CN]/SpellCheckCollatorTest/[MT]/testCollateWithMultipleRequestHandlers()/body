{
  SolrCore core=h.getCore();
  SearchComponent speller=core.getSearchComponent("spellcheck");
  assertTrue("speller is null and it shouldn't be",speller != null);
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add(SpellCheckComponent.COMPONENT_NAME,"true");
  params.add(SpellingParams.SPELLCHECK_DICT,"multipleFields");
  params.add(SpellingParams.SPELLCHECK_BUILD,"true");
  params.add(SpellingParams.SPELLCHECK_COUNT,"10");
  params.add(SpellingParams.SPELLCHECK_COLLATE,"true");
  params.add(SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES,"1");
  params.add(SpellingParams.SPELLCHECK_MAX_COLLATIONS,"1");
  params.add(CommonParams.Q,"peac");
  SolrRequestHandler handler=core.getRequestHandler("spellCheckCompRH");
  SolrQueryResponse rsp=new SolrQueryResponse();
  rsp.add("responseHeader",new SimpleOrderedMap());
  SolrQueryRequest req=new LocalSolrQueryRequest(core,params);
  handler.handleRequest(req,rsp);
  req.close();
  NamedList values=rsp.getValues();
  NamedList spellCheck=(NamedList)values.get("spellcheck");
  NamedList suggestions=(NamedList)spellCheck.get("suggestions");
  String singleCollation=(String)suggestions.get("collation");
  assertNull(singleCollation);
  params.remove(SpellingParams.SPELLCHECK_BUILD);
  handler=core.getRequestHandler("spellCheckCompRH1");
  rsp=new SolrQueryResponse();
  rsp.add("responseHeader",new SimpleOrderedMap());
  req=new LocalSolrQueryRequest(core,params);
  handler.handleRequest(req,rsp);
  req.close();
  values=rsp.getValues();
  spellCheck=(NamedList)values.get("spellcheck");
  suggestions=(NamedList)spellCheck.get("suggestions");
  singleCollation=(String)suggestions.get("collation");
  assertEquals(singleCollation,"peace");
}
