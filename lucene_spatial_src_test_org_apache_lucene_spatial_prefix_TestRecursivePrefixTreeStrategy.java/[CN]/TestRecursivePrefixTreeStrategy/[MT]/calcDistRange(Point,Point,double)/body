{
  double min=Double.MAX_VALUE;
  double max=Double.MIN_VALUE;
  for (  double xLen : new double[]{targetSideDegrees,-targetSideDegrees}) {
    for (    double yLen : new double[]{targetSideDegrees,-targetSideDegrees}) {
      Point p2=normPointXY(targetCenter.getX() + xLen / 2,targetCenter.getY() + yLen / 2);
      double d=ctx.getDistCalc().distance(startPoint,p2);
      min=Math.min(min,d);
      max=Math.max(max,d);
    }
  }
  return new double[]{min,max};
}
