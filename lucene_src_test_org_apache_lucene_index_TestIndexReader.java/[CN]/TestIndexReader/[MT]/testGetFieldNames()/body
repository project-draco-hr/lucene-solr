{
  Directory d=newDirectory();
  IndexWriter writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)));
  Document doc=new Document();
  FieldType customType3=new FieldType();
  customType3.setStored(true);
  doc.add(new Field("keyword",StringField.TYPE_STORED,"test1"));
  doc.add(new Field("text",TextField.TYPE_STORED,"test1"));
  doc.add(new Field("unindexed",customType3,"test1"));
  doc.add(new TextField("unstored","test1"));
  writer.addDocument(doc);
  writer.close();
  IndexReader reader=IndexReader.open(d,false);
  Collection<String> fieldNames=reader.getFieldNames(IndexReader.FieldOption.ALL);
  assertTrue(fieldNames.contains("keyword"));
  assertTrue(fieldNames.contains("text"));
  assertTrue(fieldNames.contains("unindexed"));
  assertTrue(fieldNames.contains("unstored"));
  reader.close();
  writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()));
  int mergeFactor=((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor();
  for (int i=0; i < 5 * mergeFactor; i++) {
    doc=new Document();
    doc.add(new Field("keyword",StringField.TYPE_STORED,"test1"));
    doc.add(new Field("text",TextField.TYPE_STORED,"test1"));
    doc.add(new Field("unindexed",customType3,"test1"));
    doc.add(new TextField("unstored","test1"));
    writer.addDocument(doc);
  }
  for (int i=0; i < 5 * mergeFactor; i++) {
    doc=new Document();
    doc.add(new Field("keyword2",StringField.TYPE_STORED,"test1"));
    doc.add(new Field("text2",TextField.TYPE_STORED,"test1"));
    doc.add(new Field("unindexed2",customType3,"test1"));
    doc.add(new TextField("unstored2","test1"));
    writer.addDocument(doc);
  }
  FieldType customType5=new FieldType(TextField.TYPE_STORED);
  customType5.setStoreTermVectors(true);
  FieldType customType6=new FieldType(TextField.TYPE_STORED);
  customType6.setStoreTermVectors(true);
  customType6.setStoreTermVectorOffsets(true);
  FieldType customType7=new FieldType(TextField.TYPE_STORED);
  customType7.setStoreTermVectors(true);
  customType7.setStoreTermVectorPositions(true);
  FieldType customType8=new FieldType(TextField.TYPE_STORED);
  customType8.setStoreTermVectors(true);
  customType8.setStoreTermVectorOffsets(true);
  customType8.setStoreTermVectorPositions(true);
  for (int i=0; i < 5 * mergeFactor; i++) {
    doc=new Document();
    doc.add(new Field("tvnot",TextField.TYPE_STORED,"tvnot"));
    doc.add(new Field("termvector",customType5,"termvector"));
    doc.add(new Field("tvoffset",customType6,"tvoffset"));
    doc.add(new Field("tvposition",customType7,"tvposition"));
    doc.add(new Field("tvpositionoffset",customType8,"tvpositionoffset"));
    writer.addDocument(doc);
  }
  writer.close();
  reader=IndexReader.open(d,false);
  fieldNames=reader.getFieldNames(IndexReader.FieldOption.ALL);
  assertEquals(13,fieldNames.size());
  assertTrue(fieldNames.contains("keyword"));
  assertTrue(fieldNames.contains("text"));
  assertTrue(fieldNames.contains("unindexed"));
  assertTrue(fieldNames.contains("unstored"));
  assertTrue(fieldNames.contains("keyword2"));
  assertTrue(fieldNames.contains("text2"));
  assertTrue(fieldNames.contains("unindexed2"));
  assertTrue(fieldNames.contains("unstored2"));
  assertTrue(fieldNames.contains("tvnot"));
  assertTrue(fieldNames.contains("termvector"));
  assertTrue(fieldNames.contains("tvposition"));
  assertTrue(fieldNames.contains("tvoffset"));
  assertTrue(fieldNames.contains("tvpositionoffset"));
  fieldNames=reader.getFieldNames(IndexReader.FieldOption.INDEXED);
  assertEquals(11,fieldNames.size());
  assertTrue(fieldNames.contains("keyword"));
  assertTrue(fieldNames.contains("text"));
  assertTrue(fieldNames.contains("unstored"));
  assertTrue(fieldNames.contains("keyword2"));
  assertTrue(fieldNames.contains("text2"));
  assertTrue(fieldNames.contains("unstored2"));
  assertTrue(fieldNames.contains("tvnot"));
  assertTrue(fieldNames.contains("termvector"));
  assertTrue(fieldNames.contains("tvposition"));
  assertTrue(fieldNames.contains("tvoffset"));
  assertTrue(fieldNames.contains("tvpositionoffset"));
  fieldNames=reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);
  assertEquals(2,fieldNames.size());
  assertTrue(fieldNames.contains("unindexed"));
  assertTrue(fieldNames.contains("unindexed2"));
  fieldNames=reader.getFieldNames(IndexReader.FieldOption.TERMVECTOR);
  assertEquals(1,fieldNames.size());
  assertTrue(fieldNames.contains("termvector"));
  fieldNames=reader.getFieldNames(IndexReader.FieldOption.TERMVECTOR_WITH_POSITION);
  assertEquals(1,fieldNames.size());
  assertTrue(fieldNames.contains("tvposition"));
  fieldNames=reader.getFieldNames(IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET);
  assertEquals(1,fieldNames.size());
  assertTrue(fieldNames.contains("tvoffset"));
  fieldNames=reader.getFieldNames(IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET);
  assertEquals(1,fieldNames.size());
  assertTrue(fieldNames.contains("tvpositionoffset"));
  reader.close();
  d.close();
}
