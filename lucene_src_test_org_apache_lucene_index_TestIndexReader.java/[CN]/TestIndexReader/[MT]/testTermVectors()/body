{
  Directory d=newDirectory();
  IndexWriter writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));
  int mergeFactor=((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor();
  FieldType customType5=new FieldType(TextField.TYPE_STORED);
  customType5.setStoreTermVectors(true);
  FieldType customType6=new FieldType(TextField.TYPE_STORED);
  customType6.setStoreTermVectors(true);
  customType6.setStoreTermVectorOffsets(true);
  FieldType customType7=new FieldType(TextField.TYPE_STORED);
  customType7.setStoreTermVectors(true);
  customType7.setStoreTermVectorPositions(true);
  FieldType customType8=new FieldType(TextField.TYPE_STORED);
  customType8.setStoreTermVectors(true);
  customType8.setStoreTermVectorOffsets(true);
  customType8.setStoreTermVectorPositions(true);
  for (int i=0; i < 5 * mergeFactor; i++) {
    Document doc=new Document();
    doc.add(new Field("tvnot",TextField.TYPE_STORED,"one two two three three three"));
    doc.add(new Field("termvector",customType5,"one two two three three three"));
    doc.add(new Field("tvoffset",customType6,"one two two three three three"));
    doc.add(new Field("tvposition",customType7,"one two two three three three"));
    doc.add(new Field("tvpositionoffset",customType8,"one two two three three three"));
    writer.addDocument(doc);
  }
  writer.close();
  IndexReader reader=IndexReader.open(d,false);
  FieldSortedTermVectorMapper mapper=new FieldSortedTermVectorMapper(new TermVectorEntryFreqSortedComparator());
  reader.getTermFreqVector(0,mapper);
  Map<String,SortedSet<TermVectorEntry>> map=mapper.getFieldToTerms();
  assertTrue("map is null and it shouldn't be",map != null);
  assertTrue("map Size: " + map.size() + " is not: "+ 4,map.size() == 4);
  Set<TermVectorEntry> set=map.get("termvector");
  for (Iterator<TermVectorEntry> iterator=set.iterator(); iterator.hasNext(); ) {
    TermVectorEntry entry=iterator.next();
    assertTrue("entry is null and it shouldn't be",entry != null);
    if (VERBOSE)     System.out.println("Entry: " + entry);
  }
  reader.close();
  d.close();
}
