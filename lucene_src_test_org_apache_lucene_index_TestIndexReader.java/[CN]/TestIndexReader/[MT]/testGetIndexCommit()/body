{
  Directory d=newDirectory();
  IndexWriter writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)));
  for (int i=0; i < 27; i++)   addDocumentWithFields(writer);
  writer.close();
  SegmentInfos sis=new SegmentInfos();
  sis.read(d);
  IndexReader r=IndexReader.open(d,false);
  IndexCommit c=r.getIndexCommit();
  assertEquals(sis.getCurrentSegmentFileName(),c.getSegmentsFileName());
  assertTrue(c.equals(r.getIndexCommit()));
  writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)));
  for (int i=0; i < 7; i++)   addDocumentWithFields(writer);
  writer.close();
  IndexReader r2=IndexReader.openIfChanged(r);
  assertNotNull(r2);
  assertFalse(c.equals(r2.getIndexCommit()));
  assertFalse(r2.getIndexCommit().isOptimized());
  r2.close();
  writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));
  writer.optimize();
  writer.close();
  r2=IndexReader.openIfChanged(r);
  assertNotNull(r2);
  assertNull(IndexReader.openIfChanged(r2));
  assertTrue(r2.getIndexCommit().isOptimized());
  r.close();
  r2.close();
  d.close();
}
