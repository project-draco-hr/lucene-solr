{
  super(builder,config,parent,child,context);
  this.inputFieldName=getConfigs().getString(config,"inputField");
  this.outputFieldName=getConfigs().getString(config,"outputField");
  String solrFieldType=getConfigs().getString(config,"solrFieldType");
  Config solrLocatorConfig=getConfigs().getConfig(config,"solrLocator");
  SolrLocator locator=new SolrLocator(solrLocatorConfig,context);
  LOG.debug("solrLocator: {}",locator);
  IndexSchema schema=locator.getIndexSchema();
  FieldType fieldType=schema.getFieldTypeByName(solrFieldType);
  if (fieldType == null) {
    throw new MorphlineCompilationException("Missing Solr field type in schema.xml for name: " + solrFieldType,config);
  }
  this.analyzer=fieldType.getIndexAnalyzer();
  Preconditions.checkNotNull(analyzer);
  try {
    this.token=analyzer.tokenStream("content",reader).addAttribute(CharTermAttribute.class);
  }
 catch (  IOException e) {
    throw new MorphlineCompilationException("Cannot create token stream",config,e);
  }
  Preconditions.checkNotNull(token);
  validateArguments();
}
