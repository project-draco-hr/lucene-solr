{
  BinaryField bin;
  TextField t;
  TrieDateField dt;
  StrField s;
  TrieIntField ti;
  BoolField b;
  schema=IndexSchemaFactory.buildIndexSchema(testConfHome + "schema12.xml",config);
  dt=new TrieDateField();
  dt.init(schema,initMap);
  assertFalse(dt.hasProperty(FieldType.OMIT_NORMS));
  s=new StrField();
  s.init(schema,initMap);
  assertFalse(s.hasProperty(FieldType.OMIT_NORMS));
  ti=new TrieIntField();
  ti.init(schema,initMap);
  assertFalse(ti.hasProperty(FieldType.OMIT_NORMS));
  b=new BoolField();
  b.init(schema,initMap);
  assertFalse(b.hasProperty(FieldType.OMIT_NORMS));
  t=new TextField();
  t.init(schema,initMap);
  assertFalse(t.hasProperty(FieldType.OMIT_NORMS));
  bin=new BinaryField();
  bin.init(schema,initMap);
  assertFalse(bin.hasProperty(FieldType.OMIT_NORMS));
  schema=IndexSchemaFactory.buildIndexSchema(testConfHome + "schema15.xml",config);
  dt=new TrieDateField();
  dt.init(schema,initMap);
  assertTrue(dt.hasProperty(FieldType.OMIT_NORMS));
  s=new StrField();
  s.init(schema,initMap);
  assertTrue(s.hasProperty(FieldType.OMIT_NORMS));
  ti=new TrieIntField();
  ti.init(schema,initMap);
  assertTrue(ti.hasProperty(FieldType.OMIT_NORMS));
  b=new BoolField();
  b.init(schema,initMap);
  assertTrue(b.hasProperty(FieldType.OMIT_NORMS));
  t=new TextField();
  t.init(schema,initMap);
  assertFalse(t.hasProperty(FieldType.OMIT_NORMS));
  bin=new BinaryField();
  bin.init(schema,initMap);
  assertFalse(bin.hasProperty(FieldType.OMIT_NORMS));
}
