{
  final CoreContainer coreContainer=h.coreContainer;
  final String requestId=req.getParams().get(REQUESTID);
  final ZkController zkController=coreContainer.getZkController();
  Boolean flush=req.getParams().getBool(CollectionAdminParams.FLUSH,false);
  if (requestId == null && !flush) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Either requestid or flush parameter must be specified.");
  }
  if (requestId != null && flush) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Both requestid and flush parameters can not be specified together.");
  }
  if (flush) {
    zkController.getOverseerCompletedMap().clear();
    zkController.getOverseerFailureMap().clear();
    rsp.getValues().add("status","successfully cleared stored collection api responses");
    return null;
  }
 else {
    if (zkController.getOverseerCompletedMap().remove(requestId)) {
      rsp.getValues().add("status","successfully removed stored response for [" + requestId + "]");
    }
 else     if (zkController.getOverseerFailureMap().remove(requestId)) {
      rsp.getValues().add("status","successfully removed stored response for [" + requestId + "]");
    }
 else {
      rsp.getValues().add("status","[" + requestId + "] not found in stored responses");
    }
  }
  return null;
}
