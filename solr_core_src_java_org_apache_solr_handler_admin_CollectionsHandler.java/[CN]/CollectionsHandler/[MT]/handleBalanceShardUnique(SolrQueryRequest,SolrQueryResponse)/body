{
  req.getParams().required().check(COLLECTION_PROP,PROPERTY_PROP);
  Boolean shardUnique=Boolean.parseBoolean(req.getParams().get(SHARD_UNIQUE));
  String prop=req.getParams().get(PROPERTY_PROP).toLowerCase(Locale.ROOT);
  if (StringUtils.startsWith(prop,OverseerCollectionProcessor.COLL_PROP_PREFIX) == false) {
    prop=OverseerCollectionProcessor.COLL_PROP_PREFIX + prop;
  }
  if (shardUnique == false && Overseer.sliceUniqueBooleanProperties.contains(prop) == false) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Balancing properties amongst replicas in a slice requires that" + " the property be pre-defined as a unique property (e.g. 'preferredLeader') or that 'shardUnique' be set to 'true'. " + " Property: " + prop + " shardUnique: "+ Boolean.toString(shardUnique));
  }
  Map<String,Object> map=ZkNodeProps.makeMap(Overseer.QUEUE_OPERATION,BALANCESHARDUNIQUE.toLower());
  copyIfNotNull(req.getParams(),map,COLLECTION_PROP,PROPERTY_PROP,ONLY_ACTIVE_NODES,SHARD_UNIQUE);
  handleResponse(BALANCESHARDUNIQUE.toLower(),new ZkNodeProps(map),rsp);
}
