{
  log.info("Creating Collection : " + req.getParamString());
  Integer numReplicas=req.getParams().getInt(OverseerCollectionProcessor.REPLICATION_FACTOR,1);
  String name=req.getParams().required().get("name");
  String configName=req.getParams().get("collection.configName");
  String numShards=req.getParams().get(OverseerCollectionProcessor.NUM_SLICES);
  String maxShardsPerNode=req.getParams().get(OverseerCollectionProcessor.MAX_SHARDS_PER_NODE);
  String createNodeSetStr=req.getParams().get(OverseerCollectionProcessor.CREATE_NODE_SET);
  if (name == null) {
    log.error("Collection name is required to create a new collection");
    throw new SolrException(ErrorCode.BAD_REQUEST,"Collection name is required to create a new collection");
  }
  Map<String,Object> props=new HashMap<String,Object>();
  props.put(Overseer.QUEUE_OPERATION,OverseerCollectionProcessor.CREATECOLLECTION);
  props.put(OverseerCollectionProcessor.REPLICATION_FACTOR,numReplicas.toString());
  props.put("name",name);
  if (configName != null) {
    props.put("collection.configName",configName);
  }
  props.put(OverseerCollectionProcessor.NUM_SLICES,numShards);
  props.put(OverseerCollectionProcessor.MAX_SHARDS_PER_NODE,maxShardsPerNode);
  props.put(OverseerCollectionProcessor.CREATE_NODE_SET,createNodeSetStr);
  ZkNodeProps m=new ZkNodeProps(props);
  handleResponse(OverseerCollectionProcessor.CREATECOLLECTION,m,rsp);
}
