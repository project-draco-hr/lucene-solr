{
  ClusterState clusterState=handler.coreContainer.getZkController().getClusterState();
  String collectionName=req.getParams().required().get(COLLECTION_PROP);
  String sliceId=req.getParams().required().get(SHARD_ID_PROP);
  log.info("Force leader invoked, state: {}",clusterState);
  DocCollection collection=clusterState.getCollection(collectionName);
  Slice slice=collection.getSlice(sliceId);
  if (slice == null) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"No shard with name " + sliceId + " exists for collection "+ collectionName);
  }
  try {
    Replica leader=slice.getLeader();
    if (leader != null && leader.getState() == State.ACTIVE) {
      throw new SolrException(ErrorCode.SERVER_ERROR,"The shard already has an active leader. Force leader is not applicable. State: " + slice);
    }
    String lirPath=handler.coreContainer.getZkController().getLeaderInitiatedRecoveryZnodePath(collectionName,sliceId);
    if (handler.coreContainer.getZkController().getZkClient().exists(lirPath,true)) {
      StringBuilder sb=new StringBuilder();
      handler.coreContainer.getZkController().getZkClient().printLayout(lirPath,4,sb);
      log.info("Cleaning out LIR data, which was: {}",sb);
      handler.coreContainer.getZkController().getZkClient().clean(lirPath);
    }
    for (    Replica rep : slice.getReplicas()) {
      if (clusterState.getLiveNodes().contains(rep.getNodeName())) {
        ShardHandler shardHandler=handler.coreContainer.getShardHandlerFactory().getShardHandler();
        ModifiableSolrParams params=new ModifiableSolrParams();
        params.set(CoreAdminParams.ACTION,CoreAdminAction.FORCEPREPAREFORLEADERSHIP.toString());
        params.set(CoreAdminParams.CORE,rep.getStr("core"));
        String nodeName=rep.getNodeName();
        OverseerCollectionMessageHandler.sendShardRequest(nodeName,params,shardHandler,null,null,CommonParams.CORES_HANDLER_PATH,handler.coreContainer.getZkController().getZkStateReader());
      }
    }
    boolean success=false;
    for (int i=0; i < 9; i++) {
      Thread.sleep(5000);
      clusterState=handler.coreContainer.getZkController().getClusterState();
      collection=clusterState.getCollection(collectionName);
      slice=collection.getSlice(sliceId);
      if (slice.getLeader() != null && slice.getLeader().getState() == State.ACTIVE) {
        success=true;
        break;
      }
      log.warn("Force leader attempt {}. Waiting 5 secs for an active leader. State of the slice: {}",(i + 1),slice);
    }
    if (success) {
      log.info("Successfully issued FORCELEADER command for collection: {}, shard: {}",collectionName,sliceId);
    }
 else {
      log.info("Couldn't successfully force leader, collection: {}, shard: {}. Cluster state: {}",collectionName,sliceId,clusterState);
    }
  }
 catch (  SolrException e) {
    throw e;
  }
catch (  Exception e) {
    throw new SolrException(ErrorCode.SERVER_ERROR,"Error executing FORCELEADER operation for collection: " + collectionName + " shard: "+ sliceId,e);
  }
}
