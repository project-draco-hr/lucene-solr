{
  String custom=args.remove("custom");
  String language=args.remove("language");
  String country=args.remove("country");
  String variant=args.remove("variant");
  String strength=args.remove("strength");
  String decomposition=args.remove("decomposition");
  final Collator collator;
  if (custom == null && language == null)   throw new SolrException(ErrorCode.SERVER_ERROR,"Either custom or language is required.");
  if (custom != null && (language != null || country != null || variant != null))   throw new SolrException(ErrorCode.SERVER_ERROR,"Cannot specify both language and custom. " + "To tailor rules for a built-in language, see the javadocs for RuleBasedCollator. " + "Then save the entire customized ruleset to a file, and use with the custom parameter");
  if (language != null) {
    collator=createFromLocale(language,country,variant);
  }
 else {
    collator=createFromRules(custom,loader);
  }
  if (strength != null) {
    if (strength.equalsIgnoreCase("primary"))     collator.setStrength(Collator.PRIMARY);
 else     if (strength.equalsIgnoreCase("secondary"))     collator.setStrength(Collator.SECONDARY);
 else     if (strength.equalsIgnoreCase("tertiary"))     collator.setStrength(Collator.TERTIARY);
 else     if (strength.equalsIgnoreCase("identical"))     collator.setStrength(Collator.IDENTICAL);
 else     throw new SolrException(ErrorCode.SERVER_ERROR,"Invalid strength: " + strength);
  }
  if (decomposition != null) {
    if (decomposition.equalsIgnoreCase("no"))     collator.setDecomposition(Collator.NO_DECOMPOSITION);
 else     if (decomposition.equalsIgnoreCase("canonical"))     collator.setDecomposition(Collator.CANONICAL_DECOMPOSITION);
 else     if (decomposition.equalsIgnoreCase("full"))     collator.setDecomposition(Collator.FULL_DECOMPOSITION);
 else     throw new SolrException(ErrorCode.SERVER_ERROR,"Invalid decomposition: " + decomposition);
  }
  analyzer=new CollationKeyAnalyzer(Version.LUCENE_40,collator);
}
