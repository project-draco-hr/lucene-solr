{
  String resourceId="/schema/test/foo";
  String storedResourceId="_schema_test_foo.bin";
  MockAnalysisComponent observer=new MockAnalysisComponent();
  List<ManagedResourceObserver> observers=Arrays.asList((ManagedResourceObserver)observer);
  Map<String,Object> storedData=new HashMap<>();
  Map<String,Object> initArgs=new HashMap<>();
  initArgs.put("someArg","someVal");
  initArgs.put("arg2",Boolean.TRUE);
  List<String> arg3list=Arrays.asList("one","two","three");
  initArgs.put("arg3",arg3list);
  initArgs.put("arg4",18L);
  initArgs.put("arg5",0.9);
  Map<String,Long> arg6map=new HashMap<>();
  arg6map.put("uno",1L);
  arg6map.put("dos",2L);
  initArgs.put("arg6",arg6map);
  storedData.put("initArgs",initArgs);
  List<String> managedList=new ArrayList<>();
  managedList.add("1");
  managedList.add("2");
  managedList.add("3");
  storedData.put(ManagedResource.MANAGED_JSON_LIST_FIELD,managedList);
  ManagedResourceStorage.InMemoryStorageIO storageIO=new ManagedResourceStorage.InMemoryStorageIO();
  storageIO.storage.put(storedResourceId,ser2bytes((Serializable)storedData));
  CustomStorageFormatResource res=new CustomStorageFormatResource(resourceId,new SolrResourceLoader("./"),storageIO);
  res.loadManagedDataAndNotify(observers);
  assertTrue("Observer was not notified by ManagedResource!",observer.wasNotified);
  List<String> updatedData=new ArrayList<>();
  updatedData.add("1");
  updatedData.add("2");
  updatedData.add("3");
  updatedData.add("4");
  res.storeManagedData(updatedData);
  Object stored=res.storage.load(resourceId);
  assertNotNull(stored);
  assertTrue(stored instanceof Map);
  Map storedMap=(Map)stored;
  assertNotNull(storedMap.get("initArgs"));
  List storedList=(List)storedMap.get(ManagedResource.MANAGED_JSON_LIST_FIELD);
  assertTrue(storedList.contains("4"));
}
