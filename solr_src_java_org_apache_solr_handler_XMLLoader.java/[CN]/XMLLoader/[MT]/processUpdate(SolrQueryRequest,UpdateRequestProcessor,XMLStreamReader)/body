{
  AddUpdateCommand addCmd=null;
  while (true) {
    int event=parser.next();
switch (event) {
case XMLStreamConstants.END_DOCUMENT:
      parser.close();
    return;
case XMLStreamConstants.START_ELEMENT:
  String currTag=parser.getLocalName();
if (currTag.equals(XmlUpdateRequestHandler.ADD)) {
  XmlUpdateRequestHandler.log.trace("SolrCore.update(add)");
  addCmd=new AddUpdateCommand(req);
  for (int i=0; i < parser.getAttributeCount(); i++) {
    String attrName=parser.getAttributeLocalName(i);
    String attrVal=parser.getAttributeValue(i);
    if (XmlUpdateRequestHandler.OVERWRITE.equals(attrName)) {
      addCmd.overwrite=StrUtils.parseBoolean(attrVal);
    }
 else     if (XmlUpdateRequestHandler.COMMIT_WITHIN.equals(attrName)) {
      addCmd.commitWithin=Integer.parseInt(attrVal);
    }
 else {
      XmlUpdateRequestHandler.log.warn("Unknown attribute id in add:" + attrName);
    }
  }
}
 else if ("doc".equals(currTag)) {
  XmlUpdateRequestHandler.log.trace("adding doc...");
  addCmd.clear();
  addCmd.solrDoc=readDoc(parser);
  processor.processAdd(addCmd);
}
 else if (XmlUpdateRequestHandler.COMMIT.equals(currTag) || XmlUpdateRequestHandler.OPTIMIZE.equals(currTag)) {
  XmlUpdateRequestHandler.log.trace("parsing " + currTag);
  CommitUpdateCommand cmd=new CommitUpdateCommand(req,XmlUpdateRequestHandler.OPTIMIZE.equals(currTag));
  boolean sawWaitSearcher=false, sawWaitFlush=false;
  for (int i=0; i < parser.getAttributeCount(); i++) {
    String attrName=parser.getAttributeLocalName(i);
    String attrVal=parser.getAttributeValue(i);
    if (XmlUpdateRequestHandler.WAIT_FLUSH.equals(attrName)) {
      cmd.waitFlush=StrUtils.parseBoolean(attrVal);
      sawWaitFlush=true;
    }
 else     if (XmlUpdateRequestHandler.WAIT_SEARCHER.equals(attrName)) {
      cmd.waitSearcher=StrUtils.parseBoolean(attrVal);
      sawWaitSearcher=true;
    }
 else     if (UpdateParams.MAX_OPTIMIZE_SEGMENTS.equals(attrName)) {
      cmd.maxOptimizeSegments=Integer.parseInt(attrVal);
    }
 else     if (UpdateParams.EXPUNGE_DELETES.equals(attrName)) {
      cmd.expungeDeletes=StrUtils.parseBoolean(attrVal);
    }
 else {
      XmlUpdateRequestHandler.log.warn("unexpected attribute commit/@" + attrName);
    }
  }
  if (sawWaitFlush && !sawWaitSearcher) {
    cmd.waitSearcher=false;
  }
  processor.processCommit(cmd);
}
 else if (XmlUpdateRequestHandler.ROLLBACK.equals(currTag)) {
  XmlUpdateRequestHandler.log.trace("parsing " + currTag);
  RollbackUpdateCommand cmd=new RollbackUpdateCommand(req);
  processor.processRollback(cmd);
}
 else if (XmlUpdateRequestHandler.DELETE.equals(currTag)) {
  XmlUpdateRequestHandler.log.trace("parsing delete");
  processDelete(req,processor,parser);
}
break;
}
}
}
