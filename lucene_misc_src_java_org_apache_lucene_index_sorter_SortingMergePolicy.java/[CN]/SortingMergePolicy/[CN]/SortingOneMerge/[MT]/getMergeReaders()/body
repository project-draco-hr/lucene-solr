{
  final List<AtomicReader> readers=super.getMergeReaders();
switch (readers.size()) {
case 0:
    return readers;
case 1:
  return Collections.singletonList(SortingAtomicReader.wrap(readers.get(0),sorter));
default :
final IndexReader multiReader=new MultiReader(readers.toArray(new AtomicReader[readers.size()]));
final AtomicReader atomicReader=SlowCompositeReaderWrapper.wrap(multiReader);
final AtomicReader sortingReader=SortingAtomicReader.wrap(atomicReader,sorter);
if (sortingReader == atomicReader) {
return readers;
}
return Collections.singletonList(sortingReader);
}
}
