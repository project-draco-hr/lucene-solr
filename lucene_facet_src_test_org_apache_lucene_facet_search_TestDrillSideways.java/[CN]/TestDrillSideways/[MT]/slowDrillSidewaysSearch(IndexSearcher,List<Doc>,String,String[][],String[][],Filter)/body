{
  int numDims=dimValues.length;
  List<Doc> hits=new ArrayList<Doc>();
  Counters drillDownCounts=new Counters(dimValues);
  Counters[] drillSidewaysCounts=new Counters[dimValues.length];
  for (int dim=0; dim < numDims; dim++) {
    drillSidewaysCounts[dim]=new Counters(dimValues);
  }
  if (VERBOSE) {
    System.out.println("  compute expected");
  }
  nextDoc:   for (  Doc doc : docs) {
    if (doc.deleted) {
      continue;
    }
    if (onlyEven != null & (Integer.parseInt(doc.id) & 1) != 0) {
      continue;
    }
    if (contentToken == null || doc.contentToken.equals(contentToken)) {
      int failDim=-1;
      for (int dim=0; dim < numDims; dim++) {
        if (drillDowns[dim] != null) {
          String docValue=doc.dims[dim] == -1 ? null : dimValues[dim][doc.dims[dim]];
          String docValue2=doc.dims2[dim] == -1 ? null : dimValues[dim][doc.dims2[dim]];
          boolean matches=false;
          for (          String value : drillDowns[dim]) {
            if (value.equals(docValue) || value.equals(docValue2)) {
              matches=true;
              break;
            }
          }
          if (!matches) {
            if (failDim == -1) {
              failDim=dim;
            }
 else {
              continue nextDoc;
            }
          }
        }
      }
      if (failDim == -1) {
        if (VERBOSE) {
          System.out.println("    exp: id=" + doc.id + " is a hit");
        }
        hits.add(doc);
        drillDownCounts.inc(doc.dims,doc.dims2);
        for (int dim=0; dim < dimValues.length; dim++) {
          drillSidewaysCounts[dim].inc(doc.dims,doc.dims2);
        }
      }
 else {
        if (VERBOSE) {
          System.out.println("    exp: id=" + doc.id + " is a near-miss on dim="+ failDim);
        }
        drillSidewaysCounts[failDim].inc(doc.dims,doc.dims2,failDim);
      }
    }
  }
  Map<String,Integer> idToDocID=new HashMap<String,Integer>();
  for (int i=0; i < s.getIndexReader().maxDoc(); i++) {
    idToDocID.put(s.doc(i).get("id"),i);
  }
  Collections.sort(hits);
  SimpleFacetResult res=new SimpleFacetResult();
  res.hits=hits;
  res.counts=new int[numDims][];
  for (int dim=0; dim < numDims; dim++) {
    if (drillDowns[dim] != null) {
      res.counts[dim]=drillSidewaysCounts[dim].counts[dim];
    }
 else {
      res.counts[dim]=drillDownCounts.counts[dim];
    }
  }
  return res;
}
