{
  Directory dir=newDirectory();
  Directory taxoDir=newDirectory();
  writer=new RandomIndexWriter(random(),dir);
  taxoWriter=new DirectoryTaxonomyWriter(taxoDir,IndexWriterConfig.OpenMode.CREATE);
  facetFields=new FacetFields(taxoWriter);
  add("Author/Bob","Publish Date/2010/10/15");
  add("Author/Lisa","Publish Date/2010/10/20");
  add("Author/Lisa","Publish Date/2012/1/1");
  add("Author/Susan","Publish Date/2012/1/7");
  add("Author/Frank","Publish Date/1999/5/5");
  IndexSearcher searcher=newSearcher(writer.getReader());
  writer.close();
  TaxonomyReader taxoReader=new DirectoryTaxonomyReader(taxoWriter);
  taxoWriter.close();
  FacetSearchParams fsp=new FacetSearchParams(new CountFacetRequest(new FacetLabel("Publish Date"),10),new CountFacetRequest(new FacetLabel("Author"),10));
  DrillSideways ds=new DrillSideways(searcher,taxoReader);
  DrillDownQuery ddq=new DrillDownQuery(fsp.indexingParams,new MatchAllDocsQuery());
  ddq.add(new FacetLabel("Author","Lisa"));
  DrillSidewaysResult r=ds.search(null,ddq,10,fsp);
  assertEquals(2,r.hits.totalHits);
  assertEquals(2,r.facetResults.size());
  assertEquals("Publish Date: 2012=1 2010=1",toString(r.facetResults.get(0)));
  assertEquals("Author: Lisa=2 Frank=1 Susan=1 Bob=1",toString(r.facetResults.get(1)));
  ddq=new DrillDownQuery(fsp.indexingParams);
  ddq.add(new FacetLabel("Author","Lisa"));
  r=ds.search(null,ddq,10,fsp);
  assertEquals(2,r.hits.totalHits);
  assertEquals(2,r.facetResults.size());
  assertEquals("Publish Date: 2012=1 2010=1",toString(r.facetResults.get(0)));
  assertEquals(2,r.facetResults.get(0).getNumValidDescendants());
  assertEquals("Author: Lisa=2 Frank=1 Susan=1 Bob=1",toString(r.facetResults.get(1)));
  assertEquals(4,r.facetResults.get(1).getNumValidDescendants());
  ddq=new DrillDownQuery(fsp.indexingParams,new MatchAllDocsQuery());
  ddq.add(new FacetLabel("Author","Lisa"),new FacetLabel("Author","Bob"));
  r=ds.search(null,ddq,10,fsp);
  assertEquals(3,r.hits.totalHits);
  assertEquals(2,r.facetResults.size());
  assertEquals("Publish Date: 2010=2 2012=1",toString(r.facetResults.get(0)));
  assertEquals("Author: Lisa=2 Frank=1 Susan=1 Bob=1",toString(r.facetResults.get(1)));
  ddq=new DrillDownQuery(fsp.indexingParams,new MatchAllDocsQuery());
  ddq.add(new FacetLabel("Author","Lisa"));
  ddq.add(new FacetLabel("Publish Date","2010"));
  r=ds.search(null,ddq,10,fsp);
  assertEquals(1,r.hits.totalHits);
  assertEquals(2,r.facetResults.size());
  assertEquals("Publish Date: 2012=1 2010=1",toString(r.facetResults.get(0)));
  assertEquals("Author: Lisa=1 Bob=1",toString(r.facetResults.get(1)));
  ddq=new DrillDownQuery(fsp.indexingParams,new MatchAllDocsQuery());
  ddq.add(new FacetLabel("Author","Lisa"),new FacetLabel("Author","Bob"));
  ddq.add(new FacetLabel("Publish Date","2010"));
  r=ds.search(null,ddq,10,fsp);
  assertEquals(2,r.hits.totalHits);
  assertEquals(2,r.facetResults.size());
  assertEquals("Publish Date: 2010=2 2012=1",toString(r.facetResults.get(0)));
  assertEquals("Author: Lisa=1 Bob=1",toString(r.facetResults.get(1)));
  ddq=new DrillDownQuery(fsp.indexingParams,new MatchAllDocsQuery());
  ddq.add(new FacetLabel("Foobar","Baz"));
  fsp=new FacetSearchParams(new CountFacetRequest(new FacetLabel("Publish Date"),10),new CountFacetRequest(new FacetLabel("Foobar"),10));
  r=ds.search(null,ddq,10,fsp);
  assertEquals(0,r.hits.totalHits);
  assertEquals(2,r.facetResults.size());
  assertEquals("Publish Date:",toString(r.facetResults.get(0)));
  assertEquals("Foobar:",toString(r.facetResults.get(1)));
  ddq=new DrillDownQuery(fsp.indexingParams,new MatchAllDocsQuery());
  ddq.add(new FacetLabel("Author","Lisa"),new FacetLabel("Author","Tom"));
  fsp=new FacetSearchParams(new CountFacetRequest(new FacetLabel("Publish Date"),10),new CountFacetRequest(new FacetLabel("Author"),10));
  r=ds.search(null,ddq,10,fsp);
  assertEquals(2,r.hits.totalHits);
  assertEquals(2,r.facetResults.size());
  assertEquals("Publish Date: 2012=1 2010=1",toString(r.facetResults.get(0)));
  assertEquals("Author: Lisa=2 Frank=1 Susan=1 Bob=1",toString(r.facetResults.get(1)));
  ddq=new DrillDownQuery(fsp.indexingParams,new MatchAllDocsQuery());
  ddq.add(new FacetLabel("Author","Lisa"),new FacetLabel("Author","Tom"));
  fsp=new FacetSearchParams(new CountFacetRequest(new FacetLabel("Publish Date"),10));
  r=ds.search(null,ddq,10,fsp);
  assertEquals(2,r.hits.totalHits);
  assertEquals(1,r.facetResults.size());
  assertEquals("Publish Date: 2012=1 2010=1",toString(r.facetResults.get(0)));
  fsp=new FacetSearchParams(new CountFacetRequest(new FacetLabel("Publish Date"),10),new CountFacetRequest(new FacetLabel("Author"),10));
  ddq=new DrillDownQuery(fsp.indexingParams,new TermQuery(new Term("foobar","baz")));
  ddq.add(new FacetLabel("Author","Lisa"));
  r=ds.search(null,ddq,10,fsp);
  assertEquals(0,r.hits.totalHits);
  assertEquals(2,r.facetResults.size());
  assertEquals("Publish Date:",toString(r.facetResults.get(0)));
  assertEquals("Author:",toString(r.facetResults.get(1)));
  searcher.getIndexReader().close();
  taxoReader.close();
  dir.close();
  taxoDir.close();
}
