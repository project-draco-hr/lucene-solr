{
  final Weight w=q.weight(s);
  final Scorer scorer=w.scorer(s.getIndexReader());
  if (BooleanQuery.getUseScorer14())   return;
  final int[] which=new int[1];
  final int[] sdoc=new int[]{-1};
  final float maxDiff=1e-5f;
  s.search(q,new HitCollector(){
    public void collect(    int doc,    float score){
      try {
        boolean more=(which[0]++ & 0x02) == 0 ? scorer.skipTo(sdoc[0] + 1) : scorer.next();
        sdoc[0]=scorer.doc();
        float scorerScore=scorer.score();
        float scoreDiff=Math.abs(score - scorerScore);
        scoreDiff=0;
        if (more == false || doc != sdoc[0] || scoreDiff > maxDiff) {
          throw new RuntimeException("ERROR matching docs:" + "\n\tscorer.more=" + more + " doc="+ sdoc[0]+ " score="+ scorerScore+ "\n\thitCollector.doc="+ doc+ " score="+ score+ "\n\t Scorer="+ scorer+ "\n\t Query="+ q+ "\n\t Searcher="+ s);
        }
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  TestCase.assertFalse((which[0]++ & 0x02) == 0 ? scorer.skipTo(sdoc[0] + 1) : scorer.next());
}
