{
  SolrParams params=rb.req.getParams();
  if (!params.getBool(COMPONENT_NAME,false) || !params.getBool(ClusteringParams.USE_SEARCH_RESULTS,false)) {
    return;
  }
  sreq.params.remove(COMPONENT_NAME);
  if ((sreq.purpose & ShardRequest.PURPOSE_GET_FIELDS) != 0) {
    String fl=sreq.params.get(CommonParams.FL,"*");
    if (fl.indexOf('*') >= 0) {
      return;
    }
    String name=getClusteringEngineName(rb);
    SearchClusteringEngine engine=searchClusteringEngines.get(name);
    if (engine != null) {
      checkAvailable(name,engine);
      Set<String> fields=engine.getFieldsToLoad(rb.req);
      if (fields == null || fields.size() == 0) {
        return;
      }
      StringBuilder sb=new StringBuilder();
      String[] flparams=fl.split("[,\\s]+");
      Set<String> flParamSet=new HashSet<>(flparams.length);
      for (      String flparam : flparams) {
        flParamSet.add(flparam);
      }
      for (      String aFieldToLoad : fields) {
        if (!flParamSet.contains(aFieldToLoad)) {
          sb.append(',').append(aFieldToLoad);
        }
      }
      if (sb.length() > 0) {
        sreq.params.set(CommonParams.FL,fl + sb.toString());
      }
    }
 else {
      log.warn("No engine named: " + name);
    }
  }
}
