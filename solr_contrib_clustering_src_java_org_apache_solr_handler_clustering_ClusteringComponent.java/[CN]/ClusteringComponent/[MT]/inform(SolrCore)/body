{
  if (initParams != null) {
    log.info("Initializing Clustering Engines");
    SolrResourceLoader loader=core.getResourceLoader();
    for (    Map.Entry<String,Object> entry : initParams) {
      if ("engine".equals(entry.getKey())) {
        NamedList<Object> engineInitParams=(NamedList<Object>)entry.getValue();
        Boolean optional=engineInitParams.getBooleanArg("optional");
        optional=(optional == null ? Boolean.FALSE : optional);
        String engineClassName=StringUtils.defaultIfBlank((String)engineInitParams.get("classname"),CarrotClusteringEngine.class.getName());
        final ClusteringEngine engine=loader.newInstance(engineClassName,ClusteringEngine.class);
        final String name=StringUtils.defaultIfBlank(engine.init(engineInitParams,core),"");
        if (!engine.isAvailable()) {
          if (optional) {
            log.info("Optional clustering engine not available: " + name);
          }
 else {
            throw new SolrException(ErrorCode.SERVER_ERROR,"A required clustering engine failed to initialize, check the logs: " + name);
          }
        }
        final ClusteringEngine previousEntry;
        if (engine instanceof SearchClusteringEngine) {
          previousEntry=searchClusteringEngines.put(name,(SearchClusteringEngine)engine);
        }
 else         if (engine instanceof DocumentClusteringEngine) {
          previousEntry=documentClusteringEngines.put(name,(DocumentClusteringEngine)engine);
        }
 else {
          log.warn("Unknown type of a clustering engine for class: " + engineClassName);
          continue;
        }
        if (previousEntry != null) {
          log.warn("Duplicate clustering engine component named '" + name + "'.");
        }
      }
    }
    setupDefaultEngine("search results clustering",searchClusteringEngines);
    setupDefaultEngine("document clustering",documentClusteringEngines);
    log.info("Finished Initializing Clustering Engines");
  }
}
