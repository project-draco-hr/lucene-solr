{
  for (int pass=0; pass < 2; pass++) {
    boolean useCompoundFile=(pass % 2) != 0;
    KeepNoneOnInitDeletionPolicy policy=new KeepNoneOnInitDeletionPolicy();
    Directory dir=new RAMDirectory();
    IndexWriter writer=new IndexWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE).setIndexDeletionPolicy(policy).setMaxBufferedDocs(10));
    LogMergePolicy lmp=(LogMergePolicy)writer.getMergePolicy();
    lmp.setUseCompoundFile(useCompoundFile);
    lmp.setUseCompoundDocStore(useCompoundFile);
    for (int i=0; i < 107; i++) {
      addDoc(writer);
    }
    writer.close();
    writer=new IndexWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND).setIndexDeletionPolicy(policy));
    lmp=(LogMergePolicy)writer.getMergePolicy();
    lmp.setUseCompoundFile(useCompoundFile);
    lmp.setUseCompoundDocStore(useCompoundFile);
    writer.optimize();
    writer.close();
    assertEquals(2,policy.numOnInit);
    assertEquals(2,policy.numOnCommit);
    IndexReader reader=IndexReader.open(dir,true);
    reader.close();
    dir.close();
  }
}
