{
  double lower, upper;
  if (lowerVal == null) {
    lower=Double.NEGATIVE_INFINITY;
  }
 else {
    lower=Double.parseDouble(lowerVal);
  }
  if (upperVal == null) {
    upper=Double.POSITIVE_INFINITY;
  }
 else {
    upper=Double.parseDouble(upperVal);
  }
  final double l=lower;
  final double u=upper;
  if (includeLower && includeUpper) {
    return new ValueSourceScorer(readerContext,this){
      @Override public boolean matches(      int doc){
        if (!exists(doc))         return false;
        double docVal=doubleVal(doc);
        return docVal >= l && docVal <= u;
      }
    }
;
  }
 else   if (includeLower && !includeUpper) {
    return new ValueSourceScorer(readerContext,this){
      @Override public boolean matches(      int doc){
        if (!exists(doc))         return false;
        double docVal=doubleVal(doc);
        return docVal >= l && docVal < u;
      }
    }
;
  }
 else   if (!includeLower && includeUpper) {
    return new ValueSourceScorer(readerContext,this){
      @Override public boolean matches(      int doc){
        if (!exists(doc))         return false;
        double docVal=doubleVal(doc);
        return docVal > l && docVal <= u;
      }
    }
;
  }
 else {
    return new ValueSourceScorer(readerContext,this){
      @Override public boolean matches(      int doc){
        if (!exists(doc))         return false;
        double docVal=doubleVal(doc);
        return docVal > l && docVal < u;
      }
    }
;
  }
}
