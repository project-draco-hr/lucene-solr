{
  Directory dir1=new RAMDirectory();
  LuceneTaxonomyWriter tw1=new LuceneTaxonomyWriter(dir1);
  tw1.addCategory(new CategoryPath("Author","Mark Twain"));
  tw1.addCategory(new CategoryPath("Animals","Dog"));
  Directory dir2=new RAMDirectory();
  LuceneTaxonomyWriter tw2=new LuceneTaxonomyWriter(dir2);
  tw2.addCategory(new CategoryPath("Author","Rob Pike"));
  tw2.addCategory(new CategoryPath("Aardvarks","Bob"));
  tw2.close();
  Directory dir3=new RAMDirectory();
  LuceneTaxonomyWriter tw3=new LuceneTaxonomyWriter(dir3);
  tw3.addCategory(new CategoryPath("Author","Zebra Smith"));
  tw3.addCategory(new CategoryPath("Aardvarks","Bob"));
  tw3.addCategory(new CategoryPath("Aardvarks","Aaron"));
  tw3.close();
  MemoryOrdinalMap[] maps=new MemoryOrdinalMap[2];
  maps[0]=new MemoryOrdinalMap();
  maps[1]=new MemoryOrdinalMap();
  tw1.addTaxonomies(new Directory[]{dir2,dir3},maps);
  tw1.close();
  TaxonomyReader tr=new LuceneTaxonomyReader(dir1);
  assertEquals(tr.getPath(0).toString(),"");
  assertEquals(tr.getPath(1).toString(),"Author");
  assertEquals(tr.getPath(2).toString(),"Author/Mark Twain");
  assertEquals(tr.getPath(3).toString(),"Animals");
  assertEquals(tr.getPath(4).toString(),"Animals/Dog");
  assertEquals(tr.getPath(5).toString(),"Aardvarks");
  assertEquals(tr.getPath(6).toString(),"Aardvarks/Aaron");
  assertEquals(tr.getPath(7).toString(),"Aardvarks/Bob");
  assertEquals(tr.getPath(8).toString(),"Author/Rob Pike");
  assertEquals(tr.getPath(9).toString(),"Author/Zebra Smith");
  assertEquals(tr.getSize(),10);
  int[] map0=maps[0].getMap();
  assertEquals(5,map0.length);
  assertEquals(0,map0[0]);
  assertEquals(1,map0[1]);
  assertEquals(8,map0[2]);
  assertEquals(5,map0[3]);
  assertEquals(7,map0[4]);
  int[] map1=maps[1].getMap();
  assertEquals(6,map1.length);
  assertEquals(0,map1[0]);
  assertEquals(1,map1[1]);
  assertEquals(9,map1[2]);
  assertEquals(5,map1[3]);
  assertEquals(7,map1[4]);
  assertEquals(6,map1[5]);
}
