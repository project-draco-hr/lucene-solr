{
  SinkTokenizer sink1=new SinkTokenizer(null){
    public void add(    AttributeSource a) throws IOException {
      TermAttribute termAtt=null;
      if (a.hasAttribute(TermAttribute.class)) {
        termAtt=(TermAttribute)a.getAttribute(TermAttribute.class);
      }
      if (termAtt != null && termAtt.term().equalsIgnoreCase("The")) {
        super.add(a);
      }
    }
  }
;
  TokenStream source=new TeeTokenFilter(new WhitespaceTokenizer(new StringReader(buffer1.toString())),sink1);
  int i=0;
  TermAttribute termAtt=(TermAttribute)source.getAttribute(TermAttribute.class);
  while (source.incrementToken()) {
    assertTrue(termAtt.term() + " is not equal to " + tokens1[i],termAtt.term().equals(tokens1[i]) == true);
    i++;
  }
  assertTrue(i + " does not equal: " + tokens1.length,i == tokens1.length);
  assertTrue("sink1 Size: " + sink1.getTokens().size() + " is not: "+ 2,sink1.getTokens().size() == 2);
  i=0;
  termAtt=(TermAttribute)sink1.getAttribute(TermAttribute.class);
  while (sink1.incrementToken()) {
    assertTrue(termAtt.term() + " is not equal to " + "The",termAtt.term().equalsIgnoreCase("The") == true);
    i++;
  }
  assertTrue(i + " does not equal: " + sink1.getTokens().size(),i == sink1.getTokens().size());
}
