{
  Directory dir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(new MockAnalyzer(random()));
  conf.setMaxBufferedDocs(4);
  IndexWriter writer=new IndexWriter(dir,conf);
  final int numDocs=atLeast(10);
  for (int i=0; i < numDocs; i++) {
    Document doc=new Document();
    doc.add(new StringField("id","doc" + i,Store.NO));
    long value=random().nextInt();
    doc.add(new NumericDocValuesField("f",value));
    doc.add(new NumericDocValuesField("cf",value * 2));
    writer.addDocument(doc);
  }
  int numGens=atLeast(5);
  for (int i=0; i < numGens; i++) {
    int doc=random().nextInt(numDocs);
    Term t=new Term("id","doc" + doc);
    long value=random().nextLong();
    writer.updateDocValues(t,new NumericDocValuesField("f",value),new NumericDocValuesField("cf",value * 2));
    DirectoryReader reader=DirectoryReader.open(writer);
    for (    LeafReaderContext context : reader.leaves()) {
      LeafReader r=context.reader();
      NumericDocValues fndv=r.getNumericDocValues("f");
      NumericDocValues cfndv=r.getNumericDocValues("cf");
      for (int j=0; j < r.maxDoc(); j++) {
        assertEquals(j,fndv.nextDoc());
        assertEquals(j,cfndv.nextDoc());
        assertEquals(cfndv.longValue(),fndv.longValue() * 2);
      }
    }
    reader.close();
  }
  writer.close();
  dir.close();
}
