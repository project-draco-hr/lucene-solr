{
  Directory dir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(new MockAnalyzer(random()));
  conf.setMaxBufferedDocs(2);
  conf.setMergePolicy(NoMergePolicy.INSTANCE);
  IndexWriter writer=new IndexWriter(dir,conf);
  int numDocs=10;
  long[] expectedValues=new long[numDocs];
  for (int i=0; i < numDocs; i++) {
    writer.addDocument(doc(i));
    expectedValues[i]=i + 1;
  }
  writer.commit();
  for (int i=0; i < numDocs; i++) {
    if (random().nextDouble() < 0.4) {
      long value=(i + 1) * 2;
      writer.updateNumericDocValue(new Term("id","doc-" + i),"val",value);
      expectedValues[i]=value;
    }
  }
  final DirectoryReader reader;
  if (random().nextBoolean()) {
    writer.close();
    reader=DirectoryReader.open(dir);
  }
 else {
    reader=DirectoryReader.open(writer);
    writer.close();
  }
  for (  LeafReaderContext context : reader.leaves()) {
    LeafReader r=context.reader();
    NumericDocValues ndv=r.getNumericDocValues("val");
    assertNotNull(ndv);
    for (int i=0; i < r.maxDoc(); i++) {
      long expected=expectedValues[i + context.docBase];
      assertEquals(i,ndv.nextDoc());
      long actual=ndv.longValue();
      assertEquals(expected,actual);
    }
  }
  reader.close();
  dir.close();
}
