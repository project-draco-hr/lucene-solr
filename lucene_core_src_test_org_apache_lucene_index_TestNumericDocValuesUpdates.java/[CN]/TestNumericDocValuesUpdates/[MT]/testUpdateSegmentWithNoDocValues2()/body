{
  Directory dir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(new MockAnalyzer(random()));
  conf.setMergePolicy(NoMergePolicy.INSTANCE);
  IndexWriter writer=new IndexWriter(dir,conf);
  Document doc=new Document();
  doc.add(new StringField("id","doc0",Store.NO));
  doc.add(new NumericDocValuesField("ndv",3));
  writer.addDocument(doc);
  doc=new Document();
  doc.add(new StringField("id","doc4",Store.NO));
  writer.addDocument(doc);
  writer.commit();
  doc=new Document();
  doc.add(new StringField("id","doc1",Store.NO));
  doc.add(new NumericDocValuesField("foo",3));
  writer.addDocument(doc);
  doc=new Document();
  doc.add(new StringField("id","doc2",Store.NO));
  writer.addDocument(doc);
  writer.commit();
  writer.updateNumericDocValue(new Term("id","doc0"),"ndv",5L);
  writer.updateNumericDocValue(new Term("id","doc1"),"ndv",5L);
  writer.close();
  DirectoryReader reader=DirectoryReader.open(dir);
  for (  LeafReaderContext context : reader.leaves()) {
    LeafReader r=context.reader();
    NumericDocValues ndv=r.getNumericDocValues("ndv");
    assertEquals(0,ndv.nextDoc());
    assertEquals(5L,ndv.longValue());
    assertTrue(ndv.nextDoc() > 1);
  }
  reader.close();
  TestUtil.checkIndex(dir);
  conf=newIndexWriterConfig(new MockAnalyzer(random()));
  writer=new IndexWriter(dir,conf);
  writer.forceMerge(1);
  writer.close();
  reader=DirectoryReader.open(dir);
  LeafReader ar=getOnlyLeafReader(reader);
  assertEquals(DocValuesType.NUMERIC,ar.getFieldInfos().fieldInfo("foo").getDocValuesType());
  IndexSearcher searcher=new IndexSearcher(reader);
  TopFieldDocs td;
  td=searcher.search(new TermQuery(new Term("id","doc0")),1,new Sort(new SortField("ndv",SortField.Type.LONG)));
  assertEquals(5L,((FieldDoc)td.scoreDocs[0]).fields[0]);
  td=searcher.search(new TermQuery(new Term("id","doc1")),1,new Sort(new SortField("ndv",SortField.Type.LONG),new SortField("foo",SortField.Type.LONG)));
  assertEquals(5L,((FieldDoc)td.scoreDocs[0]).fields[0]);
  assertEquals(3L,((FieldDoc)td.scoreDocs[0]).fields[1]);
  td=searcher.search(new TermQuery(new Term("id","doc2")),1,new Sort(new SortField("ndv",SortField.Type.LONG)));
  assertEquals(0L,((FieldDoc)td.scoreDocs[0]).fields[0]);
  td=searcher.search(new TermQuery(new Term("id","doc4")),1,new Sort(new SortField("ndv",SortField.Type.LONG)));
  assertEquals(0L,((FieldDoc)td.scoreDocs[0]).fields[0]);
  reader.close();
  dir.close();
}
