{
  LeafReader leafReader=null;
  try {
    populateSampleIndex(analyzer);
    leafReader=SlowCompositeReaderWrapper.wrap(indexWriter.getReader());
    classifier.train(leafReader,textFieldName,classFieldName,analyzer,query);
    ClassificationResult<T> classificationResult=classifier.assignClass(inputDoc);
    assertNotNull(classificationResult.getAssignedClass());
    assertEquals("got an assigned class of " + classificationResult.getAssignedClass(),expectedResult,classificationResult.getAssignedClass());
    double score=classificationResult.getScore();
    assertTrue("score should be between 0 and 1, got: " + score,score <= 1 && score >= 0);
    updateSampleIndex(analyzer);
    ClassificationResult<T> secondClassificationResult=classifier.assignClass(inputDoc);
    assertEquals(classificationResult.getAssignedClass(),secondClassificationResult.getAssignedClass());
    assertEquals(Double.valueOf(score),Double.valueOf(secondClassificationResult.getScore()));
  }
  finally {
    if (leafReader != null)     leafReader.close();
  }
}
