{
  BooleanQuery query=new BooleanQuery();
  query.add(toPhraseQuery(analyze("abc",F,analyzerB),F),Occur.MUST);
  query.add(toPhraseQuery(analyze("bcd",F,analyzerB),F),Occur.MUST);
  FieldQuery fq=new FieldQuery(query,true,true);
  Map<String,QueryPhraseMap> map=fq.rootMaps;
  assertEquals(1,map.size());
  assertNull(map.get(null));
  assertNotNull(map.get(F));
  QueryPhraseMap qpm=map.get(F);
  assertEquals(2,qpm.subMap.size());
  assertNotNull(qpm.subMap.get("ab"));
  QueryPhraseMap qpm2=qpm.subMap.get("ab");
  assertFalse(qpm2.terminal);
  assertEquals(1,qpm2.subMap.size());
  assertNotNull(qpm2.subMap.get("bc"));
  QueryPhraseMap qpm3=qpm2.subMap.get("bc");
  assertTrue(qpm3.terminal);
  assertEquals(1F,qpm3.boost);
  assertEquals(1,qpm3.subMap.size());
  assertNotNull(qpm3.subMap.get("cd"));
  QueryPhraseMap qpm4=qpm3.subMap.get("cd");
  assertTrue(qpm4.terminal);
  assertEquals(1F,qpm4.boost);
  assertNotNull(qpm.subMap.get("bc"));
  qpm2=qpm.subMap.get("bc");
  assertFalse(qpm2.terminal);
  assertEquals(1,qpm2.subMap.size());
  assertNotNull(qpm2.subMap.get("cd"));
  qpm3=qpm2.subMap.get("cd");
  assertTrue(qpm3.terminal);
  assertEquals(1F,qpm3.boost);
  fq=new FieldQuery(query,false,true);
  map=fq.rootMaps;
  assertEquals(1,map.size());
  assertNull(map.get(null));
  assertNotNull(map.get(F));
  qpm=map.get(F);
  assertEquals(3,qpm.subMap.size());
  assertNotNull(qpm.subMap.get("ab"));
  qpm2=qpm.subMap.get("ab");
  assertTrue(qpm2.terminal);
  assertEquals(1F,qpm2.boost);
  assertEquals(1,qpm2.subMap.size());
  assertNotNull(qpm2.subMap.get("bc"));
  qpm3=qpm2.subMap.get("bc");
  assertTrue(qpm3.terminal);
  assertEquals(1F,qpm3.boost);
  assertEquals(1,qpm3.subMap.size());
  assertNotNull(qpm3.subMap.get("cd"));
  qpm4=qpm3.subMap.get("cd");
  assertTrue(qpm4.terminal);
  assertEquals(1F,qpm4.boost);
  assertNotNull(qpm.subMap.get("bc"));
  qpm2=qpm.subMap.get("bc");
  assertTrue(qpm2.terminal);
  assertEquals(1F,qpm2.boost);
  assertEquals(1,qpm2.subMap.size());
  assertNotNull(qpm2.subMap.get("cd"));
  qpm3=qpm2.subMap.get("cd");
  assertTrue(qpm3.terminal);
  assertEquals(1F,qpm3.boost);
  assertNotNull(qpm.subMap.get("cd"));
  qpm2=qpm.subMap.get("cd");
  assertTrue(qpm2.terminal);
  assertEquals(1F,qpm2.boost);
  assertEquals(0,qpm2.subMap.size());
}
