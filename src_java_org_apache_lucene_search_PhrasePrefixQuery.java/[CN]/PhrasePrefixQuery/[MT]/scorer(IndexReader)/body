{
  if (_termArrays.size() == 0)   return null;
  if (_termArrays.size() == 1) {
    Term[] terms=(Term[])_termArrays.get(0);
    BooleanQuery boq=new BooleanQuery();
    for (int i=0; i < terms.length; i++)     boq.add(new TermQuery(terms[i]),false,false);
    return boq.scorer(reader);
  }
  TermPositions[] tps=new TermPositions[_termArrays.size()];
  for (int i=0; i < tps.length; i++) {
    Term[] terms=(Term[])_termArrays.get(i);
    TermPositions p;
    if (terms.length > 1)     p=new MultipleTermPositions(reader,terms);
 else     p=reader.termPositions(terms[0]);
    if (p == null)     return null;
    tps[i]=p;
  }
  if (_slop == 0)   return new ExactPhraseScorer(tps,reader.norms(_field),_weight);
 else   return new SloppyPhraseScorer(tps,_slop,reader.norms(_field),_weight);
}
