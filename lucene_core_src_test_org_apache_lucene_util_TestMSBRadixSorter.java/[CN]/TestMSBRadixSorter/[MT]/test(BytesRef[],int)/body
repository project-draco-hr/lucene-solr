{
  BytesRef[] expected=Arrays.copyOf(refs,len);
  Arrays.sort(expected);
  int maxLength=0;
  for (int i=0; i < len; ++i) {
    BytesRef ref=refs[i];
    maxLength=Math.max(maxLength,ref.length);
  }
switch (random().nextInt(3)) {
case 0:
    maxLength+=TestUtil.nextInt(random(),1,5);
  break;
case 1:
maxLength=Integer.MAX_VALUE;
break;
default :
break;
}
new MSBRadixSorter(maxLength){
protected int byteAt(int i,int k){
BytesRef ref=refs[i];
if (ref.length <= k) {
return -1;
}
return ref.bytes[ref.offset + k] & 0xff;
}
@Override protected void swap(int i,int j){
BytesRef tmp=refs[i];
refs[i]=refs[j];
refs[j]=tmp;
}
}
.sort(0,len);
BytesRef[] actual=Arrays.copyOf(refs,len);
assertArrayEquals(expected,actual);
}
