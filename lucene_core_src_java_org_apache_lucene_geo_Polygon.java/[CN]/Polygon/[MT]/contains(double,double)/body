{
  if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {
    return false;
  }
  boolean inPoly=false;
  boolean previous=polyLats[0] > latitude;
  for (int i=1; i < polyLats.length; i++) {
    boolean current=polyLats[i] > latitude;
    if (current != previous) {
      if (longitude < (polyLons[i - 1] - polyLons[i]) * (latitude - polyLats[i]) / (polyLats[i - 1] - polyLats[i]) + polyLons[i]) {
        inPoly=!inPoly;
      }
      previous=current;
    }
  }
  if (inPoly) {
    for (    Polygon hole : holes) {
      if (hole.contains(latitude,longitude)) {
        return false;
      }
    }
    return true;
  }
 else {
    return false;
  }
}
