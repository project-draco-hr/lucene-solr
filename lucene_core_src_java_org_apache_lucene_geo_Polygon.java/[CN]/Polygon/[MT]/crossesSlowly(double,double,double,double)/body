{
  for (int i=1; i < polyLons.length; i++) {
    double cy=polyLats[i - 1];
    double dy=polyLats[i];
    double cx=polyLons[i - 1];
    double dx=polyLons[i];
    if ((cy < minLat && dy < minLat) || (cy > maxLat && dy > maxLat) || (cx < minLon && dx < minLon)|| (cx > maxLon && dx > maxLon)) {
      continue;
    }
    if (orient(cx,cy,dx,dy,minLon,maxLat) * orient(cx,cy,dx,dy,maxLon,maxLat) <= 0 && orient(minLon,maxLat,maxLon,maxLat,cx,cy) * orient(minLon,maxLat,maxLon,maxLat,dx,dy) <= 0) {
      return true;
    }
    if (orient(cx,cy,dx,dy,maxLon,maxLat) * orient(cx,cy,dx,dy,maxLon,minLat) <= 0 && orient(maxLon,maxLat,maxLon,minLat,cx,cy) * orient(maxLon,maxLat,maxLon,minLat,dx,dy) <= 0) {
      return true;
    }
    if (orient(cx,cy,dx,dy,maxLon,minLat) * orient(cx,cy,dx,dy,minLon,minLat) <= 0 && orient(maxLon,minLat,minLon,minLat,cx,cy) * orient(maxLon,minLat,minLon,minLat,dx,dy) <= 0) {
      return true;
    }
    if (orient(cx,cy,dx,dy,minLon,minLat) * orient(cx,cy,dx,dy,minLon,maxLat) <= 0 && orient(minLon,minLat,minLon,maxLat,cx,cy) * orient(minLon,minLat,minLon,maxLat,dx,dy) <= 0) {
      return true;
    }
  }
  return false;
}
