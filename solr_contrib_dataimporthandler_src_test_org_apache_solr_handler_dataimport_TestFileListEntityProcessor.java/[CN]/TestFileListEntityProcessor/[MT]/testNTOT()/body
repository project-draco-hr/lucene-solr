{
  File tmpdir=File.createTempFile("test","tmp",TEMP_DIR);
  tmpdir.delete();
  tmpdir.mkdir();
  tmpdir.deleteOnExit();
  createFile(tmpdir,"a.xml","a.xml".getBytes("UTF-8"),true);
  createFile(tmpdir,"b.xml","b.xml".getBytes("UTF-8"),true);
  createFile(tmpdir,"c.props","c.props".getBytes("UTF-8"),true);
  Map attrs=createMap(FileListEntityProcessor.FILE_NAME,"xml$",FileListEntityProcessor.BASE_DIR,tmpdir.getAbsolutePath(),FileListEntityProcessor.OLDER_THAN,"'NOW'");
  List<String> fList=getFiles(null,attrs);
  assertEquals(2,fList.size());
  attrs=createMap(FileListEntityProcessor.FILE_NAME,".xml$",FileListEntityProcessor.BASE_DIR,tmpdir.getAbsolutePath(),FileListEntityProcessor.NEWER_THAN,"'NOW-2HOURS'");
  fList=getFiles(null,attrs);
  assertEquals(2,fList.size());
  attrs=createMap(FileListEntityProcessor.FILE_NAME,".xml$",FileListEntityProcessor.BASE_DIR,tmpdir.getAbsolutePath(),FileListEntityProcessor.NEWER_THAN,"${a.x}");
  VariableResolver resolver=new VariableResolver();
  String lastMod=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",Locale.ROOT).format(new Date(System.currentTimeMillis() - 50000));
  resolver.addNamespace("a",createMap("x",lastMod));
  createFile(tmpdir,"t.xml","t.xml".getBytes("UTF-8"),false);
  fList=getFiles(resolver,attrs);
  assertEquals(1,fList.size());
  assertEquals("File name must be t.xml",new File(tmpdir,"t.xml").getAbsolutePath(),fList.get(0));
}
