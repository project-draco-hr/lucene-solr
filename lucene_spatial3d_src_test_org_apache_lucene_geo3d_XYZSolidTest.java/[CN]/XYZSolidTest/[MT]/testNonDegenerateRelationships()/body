{
  XYZSolid s;
  GeoShape shape;
  s=new XYZSolid(PlanetModel.SPHERE,-2.0,2.0,-2.0,2.0,-2.0,2.0);
  shape=new GeoCircle(PlanetModel.SPHERE,0.0,0.0,0.1);
  assertEquals(GeoArea.WITHIN,s.getRelationship(shape));
  shape=new GeoWorld(PlanetModel.SPHERE);
  assertEquals(GeoArea.OVERLAPS,s.getRelationship(shape));
  s=new XYZSolid(PlanetModel.SPHERE,-2.0,0.0,-2.0,2.0,-2.0,2.0);
  shape=new GeoCircle(PlanetModel.SPHERE,0.0,0.0,0.1);
  assertEquals(GeoArea.DISJOINT,s.getRelationship(shape));
  shape=new GeoCircle(PlanetModel.SPHERE,0.0,Math.PI,0.1);
  assertEquals(GeoArea.WITHIN,s.getRelationship(shape));
  shape=new GeoCircle(PlanetModel.SPHERE,0.0,Math.PI * 0.5,0.1);
  assertEquals(GeoArea.OVERLAPS,s.getRelationship(shape));
  shape=new GeoWorld(PlanetModel.SPHERE);
  assertEquals(GeoArea.CONTAINS,s.getRelationship(shape));
  s=new XYZSolid(PlanetModel.SPHERE,-0.1,0.1,-0.1,0.1,-0.1,0.1);
  shape=new GeoCircle(PlanetModel.SPHERE,0.0,0.0,0.1);
  assertEquals(GeoArea.DISJOINT,s.getRelationship(shape));
  shape=new GeoWorld(PlanetModel.SPHERE);
  assertEquals(GeoArea.DISJOINT,s.getRelationship(shape));
}
