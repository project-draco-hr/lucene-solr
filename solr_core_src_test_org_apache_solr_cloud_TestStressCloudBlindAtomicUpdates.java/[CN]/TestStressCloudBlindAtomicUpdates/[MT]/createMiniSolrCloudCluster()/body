{
  DOC_ID_INCR=TestUtil.nextInt(random(),1,7);
  NUM_THREADS=atLeast(3);
  EXEC_SERVICE=ExecutorUtil.newMDCAwareFixedThreadPool(NUM_THREADS,new DefaultSolrThreadFactory(DEBUG_LABEL));
  final int numShards=TEST_NIGHTLY ? 5 : 2;
  final int repFactor=2;
  final int numNodes=numShards * repFactor;
  final String configName=DEBUG_LABEL + "_config-set";
  final Path configDir=Paths.get(TEST_HOME(),"collection1","conf");
  configureCluster(numNodes).addConfig(configName,configDir).configure();
  CLOUD_CLIENT=cluster.getSolrClient();
  CLOUD_CLIENT.setDefaultCollection(COLLECTION_NAME);
  CollectionAdminRequest.createCollection(COLLECTION_NAME,configName,numShards,repFactor).withProperty("config","solrconfig-tlog.xml").withProperty("schema","schema-minimal-atomic-stress.xml").process(CLOUD_CLIENT);
  waitForRecoveriesToFinish(CLOUD_CLIENT);
  for (  JettySolrRunner jetty : cluster.getJettySolrRunners()) {
    CLIENTS.add(getHttpSolrClient(jetty.getBaseUrl() + "/" + COLLECTION_NAME+ "/"));
  }
  checkExpectedSchemaType(map("name","long","class","solr.TrieLongField","multiValued",Boolean.FALSE,"indexed",Boolean.FALSE,"stored",Boolean.FALSE,"docValues",Boolean.FALSE));
}
