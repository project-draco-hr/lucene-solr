{
  final String field="ascfield" + precisionStep;
  final long lower=-1000L, upper=+2000L;
  Query tq=NumericRangeQuery.newDoubleRange(field,precisionStep,NumericUtils.sortableLongToDouble(lower),NumericUtils.sortableLongToDouble(upper),true,true);
  TopDocs tTopDocs=searcher.search(tq,1);
  assertEquals("Returned count of range query must be equal to inclusive range length",upper - lower + 1,tTopDocs.totalHits);
  Filter tf=NumericRangeFilter.newDoubleRange(field,precisionStep,NumericUtils.sortableLongToDouble(lower),NumericUtils.sortableLongToDouble(upper),true,true);
  tTopDocs=searcher.search(new FilteredQuery(new MatchAllDocsQuery(),tf),1);
  assertEquals("Returned count of range filter must be equal to inclusive range length",upper - lower + 1,tTopDocs.totalHits);
}
