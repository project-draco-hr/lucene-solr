{
  long a=30;
  long b=50;
  long c=77;
  assertEquals(0,MathUtil.gcd(0,0));
  assertEquals(b,MathUtil.gcd(0,b));
  assertEquals(a,MathUtil.gcd(a,0));
  assertEquals(b,MathUtil.gcd(0,-b));
  assertEquals(a,MathUtil.gcd(-a,0));
  assertEquals(10,MathUtil.gcd(a,b));
  assertEquals(10,MathUtil.gcd(-a,b));
  assertEquals(10,MathUtil.gcd(a,-b));
  assertEquals(10,MathUtil.gcd(-a,-b));
  assertEquals(1,MathUtil.gcd(a,c));
  assertEquals(1,MathUtil.gcd(-a,c));
  assertEquals(1,MathUtil.gcd(a,-c));
  assertEquals(1,MathUtil.gcd(-a,-c));
  assertEquals(3L * (1L << 45),MathUtil.gcd(3L * (1L << 50),9L * (1L << 45)));
  assertEquals(1L << 45,MathUtil.gcd(1L << 45,Long.MIN_VALUE));
  assertEquals(Long.MAX_VALUE,MathUtil.gcd(Long.MAX_VALUE,0L));
  assertEquals(Long.MAX_VALUE,MathUtil.gcd(-Long.MAX_VALUE,0L));
  assertEquals(1,MathUtil.gcd(60247241209L,153092023L));
  assertEquals(Long.MIN_VALUE,MathUtil.gcd(Long.MIN_VALUE,0));
  assertEquals(Long.MIN_VALUE,MathUtil.gcd(0,Long.MIN_VALUE));
  assertEquals(Long.MIN_VALUE,MathUtil.gcd(Long.MIN_VALUE,Long.MIN_VALUE));
}
