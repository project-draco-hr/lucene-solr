{
  SolrZkClient zkClient=coreContainer.getZkController().getZkClient();
  String adminFile=getAdminFileFromZooKeeper(req,rsp,zkClient,hiddenFiles);
  if (adminFile == null) {
    return;
  }
  List<String> children=zkClient.getChildren(adminFile,null,true);
  if (children.size() > 0) {
    NamedList<SimpleOrderedMap<Object>> files=new SimpleOrderedMap<>();
    for (    String f : children) {
      if (isHiddenFile(req,rsp,f,false,hiddenFiles)) {
        continue;
      }
      SimpleOrderedMap<Object> fileInfo=new SimpleOrderedMap<>();
      files.add(f,fileInfo);
      List<String> fchildren=zkClient.getChildren(adminFile + "/" + f,null,true);
      if (fchildren.size() > 0) {
        fileInfo.add("directory",true);
      }
 else {
        fileInfo.add("size",f.length());
      }
    }
    rsp.add("files",files);
  }
 else {
    ModifiableSolrParams params=new ModifiableSolrParams(req.getParams());
    params.set(CommonParams.WT,"raw");
    req.setParams(params);
    ContentStreamBase content=new ContentStreamBase.ByteArrayStream(zkClient.getData(adminFile,null,null,true),adminFile);
    content.setContentType(req.getParams().get(USE_CONTENT_TYPE));
    rsp.add(RawResponseWriter.CONTENT,content);
  }
  rsp.setHttpCaching(false);
}
