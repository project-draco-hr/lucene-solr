{
  File adminFile=getAdminFileFromFileSystem(req,rsp,hiddenFiles);
  if (adminFile == null) {
    return;
  }
  if (!adminFile.exists()) {
    log.error("Can not find: " + adminFile.getName() + " ["+ adminFile.getAbsolutePath()+ "]");
    rsp.setException(new SolrException(ErrorCode.NOT_FOUND,"Can not find: " + adminFile.getName() + " ["+ adminFile.getAbsolutePath()+ "]"));
    return;
  }
  if (!adminFile.canRead() || adminFile.isHidden()) {
    log.error("Can not show: " + adminFile.getName() + " ["+ adminFile.getAbsolutePath()+ "]");
    rsp.setException(new SolrException(ErrorCode.NOT_FOUND,"Can not show: " + adminFile.getName() + " ["+ adminFile.getAbsolutePath()+ "]"));
    return;
  }
  if (adminFile.isDirectory()) {
    int basePath=adminFile.getAbsolutePath().length() + 1;
    NamedList<SimpleOrderedMap<Object>> files=new SimpleOrderedMap<SimpleOrderedMap<Object>>();
    for (    File f : adminFile.listFiles()) {
      String path=f.getAbsolutePath().substring(basePath);
      path=path.replace('\\','/');
      if (isHiddenFile(req,rsp,f.getName().replace('\\','/'),false,hiddenFiles)) {
        continue;
      }
      SimpleOrderedMap<Object> fileInfo=new SimpleOrderedMap<Object>();
      files.add(path,fileInfo);
      if (f.isDirectory()) {
        fileInfo.add("directory",true);
      }
 else {
        fileInfo.add("size",f.length());
      }
      fileInfo.add("modified",new Date(f.lastModified()));
    }
    rsp.add("files",files);
  }
 else {
    ModifiableSolrParams params=new ModifiableSolrParams(req.getParams());
    params.set(CommonParams.WT,"raw");
    req.setParams(params);
    ContentStreamBase content=new ContentStreamBase.FileStream(adminFile);
    content.setContentType(req.getParams().get(USE_CONTENT_TYPE));
    rsp.add(RawResponseWriter.CONTENT,content);
  }
  rsp.setHttpCaching(false);
}
