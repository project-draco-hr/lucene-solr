{
  super(args);
  assureMatchVersion();
  dictFile=get(args,"dictionary");
  encoding=get(args,"encoding");
  hypFile=require(args,"hyphenator");
  minWordSize=getInt(args,"minWordSize",Lucene43CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE);
  minSubwordSize=getInt(args,"minSubwordSize",Lucene43CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE);
  maxSubwordSize=getInt(args,"maxSubwordSize",Lucene43CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE);
  onlyLongestMatch=getBoolean(args,"onlyLongestMatch",false);
  if (!args.isEmpty()) {
    throw new IllegalArgumentException("Unknown parameters: " + args);
  }
}
