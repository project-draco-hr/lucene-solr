{
  super(args);
  assureMatchVersion();
  dictFile=args.remove("dictionary");
  encoding=args.remove("encoding");
  hypFile=args.remove("hyphenator");
  if (null == hypFile) {
    throw new IllegalArgumentException("Missing required parameter: hyphenator");
  }
  minWordSize=getInt(args,"minWordSize",CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE);
  minSubwordSize=getInt(args,"minSubwordSize",CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE);
  maxSubwordSize=getInt(args,"maxSubwordSize",CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE);
  onlyLongestMatch=getBoolean(args,"onlyLongestMatch",false);
  if (!args.isEmpty()) {
    throw new IllegalArgumentException("Unknown parameters: " + args);
  }
}
