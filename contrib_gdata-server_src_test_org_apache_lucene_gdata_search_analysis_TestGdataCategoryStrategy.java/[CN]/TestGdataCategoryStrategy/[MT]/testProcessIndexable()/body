{
  IndexableStub stub=new IndexableStub();
  stub.setReturnNull(true);
  try {
    this.strategy.processIndexable(stub);
    fail("retun value is null must fail");
  }
 catch (  NotIndexableException e) {
  }
  assertNull(this.strategy.content);
  try {
    this.strategy.createLuceneField();
    fail("content is not set");
  }
 catch (  GdataIndexerException e) {
  }
  String content="fooBar";
  stub.setReturnNull(false);
  stub.setReturnValueTextContent(content);
  this.strategy.processIndexable(stub);
  assertNotNull(this.strategy.content);
  assertNotNull(this.strategy.categoryScheme);
  assertEquals(content + " " + content,this.strategy.content.trim());
  assertEquals(content,this.strategy.categoryScheme);
  Field[] fields=this.strategy.createLuceneField();
  assertEquals(2,fields.length);
  assertEquals(this.field.getName(),fields[0].name());
  assertEquals(content + " " + content,fields[0].stringValue().trim());
  assertEquals(this.strategy.categorySchemeField,fields[1].name());
  assertEquals(content,fields[1].stringValue());
  assertFalse(fields[0].isStored());
  assertTrue(fields[0].isTokenized());
  this.field.setPath(null);
  this.strategy=new GdataCategoryStrategy(field);
  try {
    this.strategy.processIndexable(stub);
    fail("path is null must fail");
  }
 catch (  NotIndexableException e) {
  }
  try {
    this.strategy.createLuceneField();
    fail("content is not set");
  }
 catch (  GdataIndexerException e) {
  }
}
