{
  if (field == null) {
    throw new IllegalArgumentException("'field' can not be null");
  }
  if (num <= 0) {
    throw new IllegalArgumentException("'num' should be > 0");
  }
  if (collector == null) {
    throw new IllegalArgumentException("'collector' can not be null");
  }
  CompletionAnalyzer analyzer;
  if (queryAnalyzer instanceof CompletionAnalyzer) {
    analyzer=(CompletionAnalyzer)queryAnalyzer;
  }
 else {
    analyzer=new CompletionAnalyzer(queryAnalyzer);
  }
  final Automaton automaton=analyzer.toAutomaton(field,key);
  for (  LeafReaderContext context : getIndexReader().leaves()) {
    TopSuggestDocsCollector leafCollector=(TopSuggestDocsCollector)collector.getLeafCollector(context);
    LeafReader reader=context.reader();
    Terms terms=reader.terms(field);
    if (terms == null) {
      continue;
    }
    NRTSuggester suggester;
    if (terms instanceof CompletionTerms) {
      CompletionTerms completionTerms=(CompletionTerms)terms;
      suggester=completionTerms.suggester();
    }
 else {
      throw new IllegalArgumentException(field + " is not a SuggestField");
    }
    if (suggester == null) {
      continue;
    }
    DocIdSet docIdSet=null;
    if (filter != null) {
      docIdSet=filter.getDocIdSet(context,reader.getLiveDocs());
      if (docIdSet == null) {
        continue;
      }
    }
    suggester.lookup(reader,automaton,num,docIdSet,leafCollector);
  }
}
