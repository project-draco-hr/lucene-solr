{
  String x=Integer.toString(min);
  String y=Integer.toString(max);
  if (min > max || (digits > 0 && y.length() > digits)) {
    throw new IllegalArgumentException();
  }
  int d;
  if (digits > 0)   d=digits;
 else   d=y.length();
  StringBuilder bx=new StringBuilder();
  for (int i=x.length(); i < d; i++) {
    bx.append('0');
  }
  bx.append(x);
  x=bx.toString();
  StringBuilder by=new StringBuilder();
  for (int i=y.length(); i < d; i++) {
    by.append('0');
  }
  by.append(y);
  y=by.toString();
  LightAutomaton.Builder builder=new LightAutomaton.Builder();
  Collection<Integer> initials=new ArrayList<>();
  betweenLight(builder,x,y,0,initials,digits <= 0);
  LightAutomaton a1=builder.finish();
  if (digits <= 0) {
    LightAutomaton a2=new LightAutomaton();
    a2.createState();
    a2.copy(a1);
    for (    int p : initials) {
      if (p != 0) {
        a2.addEpsilon(0,p + 1);
      }
    }
    a2.finish();
    return a2;
  }
 else {
    return a1;
  }
}
