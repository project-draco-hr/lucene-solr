{
  Automaton a=new Automaton();
  String x=Integer.toString(min);
  String y=Integer.toString(max);
  if (min > max || (digits > 0 && y.length() > digits))   throw new IllegalArgumentException();
  int d;
  if (digits > 0)   d=digits;
 else   d=y.length();
  StringBuilder bx=new StringBuilder();
  for (int i=x.length(); i < d; i++)   bx.append('0');
  bx.append(x);
  x=bx.toString();
  StringBuilder by=new StringBuilder();
  for (int i=y.length(); i < d; i++)   by.append('0');
  by.append(y);
  y=by.toString();
  Collection<State> initials=new ArrayList<State>();
  a.initial=between(x,y,0,initials,digits <= 0);
  if (digits <= 0) {
    ArrayList<StatePair> pairs=new ArrayList<StatePair>();
    for (    State p : initials)     if (a.initial != p)     pairs.add(new StatePair(a.initial,p));
    BasicOperations.addEpsilons(a,pairs);
    a.initial.addTransition(new Transition('0',a.initial));
    a.deterministic=false;
  }
 else   a.deterministic=true;
  a.checkMinimizeAlways();
  return a;
}
