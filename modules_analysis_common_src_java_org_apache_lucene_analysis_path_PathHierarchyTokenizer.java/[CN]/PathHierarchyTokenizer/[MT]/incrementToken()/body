{
  clearAttributes();
  termAtt.append(resultToken);
  if (resultToken.length() == 0) {
    posAtt.setPositionIncrement(1);
  }
 else {
    posAtt.setPositionIncrement(0);
  }
  int length=0;
  boolean added=false;
  if (endDelimiter) {
    termAtt.append(replacement);
    length++;
    endDelimiter=false;
    added=true;
  }
  while (true) {
    int c=input.read();
    if (c < 0) {
      length+=resultToken.length();
      termAtt.setLength(length);
      finalOffset=correctOffset(length);
      offsetAtt.setOffset(correctOffset(0),finalOffset);
      if (added) {
        resultToken.setLength(0);
        resultToken.append(termAtt.buffer(),0,length);
      }
      return added;
    }
    added=true;
    if (c == delimiter) {
      if (length > 0) {
        endDelimiter=true;
        break;
      }
 else {
        termAtt.append(replacement);
        length++;
      }
    }
 else {
      termAtt.append((char)c);
      length++;
    }
  }
  length+=resultToken.length();
  termAtt.setLength(length);
  finalOffset=correctOffset(length);
  offsetAtt.setOffset(correctOffset(0),finalOffset);
  resultToken.setLength(0);
  resultToken.append(termAtt.buffer(),0,length);
  return true;
}
