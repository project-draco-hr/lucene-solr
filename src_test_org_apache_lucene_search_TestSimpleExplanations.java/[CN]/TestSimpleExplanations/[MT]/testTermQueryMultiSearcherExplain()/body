{
  Directory indexStoreA=new MockRAMDirectory();
  Directory indexStoreB=new MockRAMDirectory();
  Document lDoc=new Document();
  lDoc.add(new Field("handle","1 2",Field.Store.YES,Field.Index.ANALYZED));
  Document lDoc2=new Document();
  lDoc2.add(new Field("handle","1 2",Field.Store.YES,Field.Index.ANALYZED));
  Document lDoc3=new Document();
  lDoc3.add(new Field("handle","1 2",Field.Store.YES,Field.Index.ANALYZED));
  IndexWriter writerA=new IndexWriter(indexStoreA,new StandardAnalyzer(TEST_VERSION_CURRENT),true,IndexWriter.MaxFieldLength.LIMITED);
  IndexWriter writerB=new IndexWriter(indexStoreB,new StandardAnalyzer(TEST_VERSION_CURRENT),true,IndexWriter.MaxFieldLength.LIMITED);
  writerA.addDocument(lDoc);
  writerA.addDocument(lDoc2);
  writerA.optimize();
  writerA.close();
  writerB.addDocument(lDoc3);
  writerB.close();
  QueryParser parser=new QueryParser(TEST_VERSION_CURRENT,"fulltext",new StandardAnalyzer(TEST_VERSION_CURRENT));
  Query query=parser.parse("handle:1");
  Searcher[] searchers=new Searcher[2];
  searchers[0]=new IndexSearcher(indexStoreB,true);
  searchers[1]=new IndexSearcher(indexStoreA,true);
  Searcher mSearcher=new MultiSearcher(searchers);
  ScoreDoc[] hits=mSearcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  Explanation explain=mSearcher.explain(query,hits[0].doc);
  String exp=explain.toString(0);
  assertTrue(exp,exp.indexOf("maxDocs=3") > -1);
  assertTrue(exp,exp.indexOf("docFreq=3") > -1);
  query=parser.parse("handle:\"1 2\"");
  hits=mSearcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  explain=mSearcher.explain(query,hits[0].doc);
  exp=explain.toString(0);
  assertTrue(exp,exp.indexOf("1=3") > -1);
  assertTrue(exp,exp.indexOf("2=3") > -1);
  query=new SpanNearQuery(new SpanQuery[]{new SpanTermQuery(new Term("handle","1")),new SpanTermQuery(new Term("handle","2"))},0,true);
  hits=mSearcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  explain=mSearcher.explain(query,hits[0].doc);
  exp=explain.toString(0);
  assertTrue(exp,exp.indexOf("1=3") > -1);
  assertTrue(exp,exp.indexOf("2=3") > -1);
  mSearcher.close();
}
