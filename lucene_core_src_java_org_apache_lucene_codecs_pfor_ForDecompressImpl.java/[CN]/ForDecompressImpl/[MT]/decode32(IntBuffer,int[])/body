{
  final int numFrameBits=32;
  final int mask=(int)((1L << numFrameBits) - 1);
  int outputOffset=0;
  for (int step=0; step < 4; step++) {
    int intValue0=compressedBuffer.get();
    int intValue1=compressedBuffer.get();
    int intValue2=compressedBuffer.get();
    int intValue3=compressedBuffer.get();
    int intValue4=compressedBuffer.get();
    int intValue5=compressedBuffer.get();
    int intValue6=compressedBuffer.get();
    int intValue7=compressedBuffer.get();
    int intValue8=compressedBuffer.get();
    int intValue9=compressedBuffer.get();
    int intValue10=compressedBuffer.get();
    int intValue11=compressedBuffer.get();
    int intValue12=compressedBuffer.get();
    int intValue13=compressedBuffer.get();
    int intValue14=compressedBuffer.get();
    int intValue15=compressedBuffer.get();
    int intValue16=compressedBuffer.get();
    int intValue17=compressedBuffer.get();
    int intValue18=compressedBuffer.get();
    int intValue19=compressedBuffer.get();
    int intValue20=compressedBuffer.get();
    int intValue21=compressedBuffer.get();
    int intValue22=compressedBuffer.get();
    int intValue23=compressedBuffer.get();
    int intValue24=compressedBuffer.get();
    int intValue25=compressedBuffer.get();
    int intValue26=compressedBuffer.get();
    int intValue27=compressedBuffer.get();
    int intValue28=compressedBuffer.get();
    int intValue29=compressedBuffer.get();
    int intValue30=compressedBuffer.get();
    int intValue31=compressedBuffer.get();
    output[0 + outputOffset]=intValue0;
    output[1 + outputOffset]=intValue1;
    output[2 + outputOffset]=intValue2;
    output[3 + outputOffset]=intValue3;
    output[4 + outputOffset]=intValue4;
    output[5 + outputOffset]=intValue5;
    output[6 + outputOffset]=intValue6;
    output[7 + outputOffset]=intValue7;
    output[8 + outputOffset]=intValue8;
    output[9 + outputOffset]=intValue9;
    output[10 + outputOffset]=intValue10;
    output[11 + outputOffset]=intValue11;
    output[12 + outputOffset]=intValue12;
    output[13 + outputOffset]=intValue13;
    output[14 + outputOffset]=intValue14;
    output[15 + outputOffset]=intValue15;
    output[16 + outputOffset]=intValue16;
    output[17 + outputOffset]=intValue17;
    output[18 + outputOffset]=intValue18;
    output[19 + outputOffset]=intValue19;
    output[20 + outputOffset]=intValue20;
    output[21 + outputOffset]=intValue21;
    output[22 + outputOffset]=intValue22;
    output[23 + outputOffset]=intValue23;
    output[24 + outputOffset]=intValue24;
    output[25 + outputOffset]=intValue25;
    output[26 + outputOffset]=intValue26;
    output[27 + outputOffset]=intValue27;
    output[28 + outputOffset]=intValue28;
    output[29 + outputOffset]=intValue29;
    output[30 + outputOffset]=intValue30;
    output[31 + outputOffset]=intValue31;
    outputOffset+=32;
  }
}
