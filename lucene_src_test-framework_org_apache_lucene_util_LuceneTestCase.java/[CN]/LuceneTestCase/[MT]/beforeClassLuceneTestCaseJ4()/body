{
  state=State.INITIAL;
  tempDirs.clear();
  stores=Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());
  if (System.getProperty("solr.directoryFactory") == null) {
    System.setProperty("solr.directoryFactory","org.apache.solr.core.MockDirectoryFactory");
  }
  savedCodecProvider=CodecProvider.getDefault();
  if ("random".equals(TEST_CODECPROVIDER)) {
    if ("randomPerField".equals(TEST_CODEC)) {
      if (random.nextInt(4) == 0) {
        codec=installTestCodecs("PreFlex",CodecProvider.getDefault());
      }
 else {
        CodecProvider.setDefault(new RandomCodecProvider(random));
        codec=installTestCodecs(TEST_CODEC,CodecProvider.getDefault());
      }
    }
 else {
      codec=installTestCodecs(TEST_CODEC,CodecProvider.getDefault());
    }
  }
 else {
    try {
      Class<? extends CodecProvider> cpClazz=Class.forName(TEST_CODECPROVIDER).asSubclass(CodecProvider.class);
      CodecProvider cp=cpClazz.newInstance();
      String codecName;
      if (TEST_CODEC.startsWith("random")) {
        Set<String> codecSet=cp.listAll();
        String availableCodecs[]=codecSet.toArray(new String[codecSet.size()]);
        codecName=availableCodecs[random.nextInt(availableCodecs.length)];
      }
 else {
        codecName=TEST_CODEC;
      }
      codec=cp.lookup(codecName);
      cp.setDefaultFieldCodec(codecName);
      CodecProvider.setDefault(cp);
    }
 catch (    Exception e) {
      System.err.println("Could not instantiate CodecProvider: " + TEST_CODECPROVIDER);
      throw new RuntimeException(e);
    }
  }
  savedLocale=Locale.getDefault();
  locale=TEST_LOCALE.equals("random") ? randomLocale(random) : localeForName(TEST_LOCALE);
  Locale.setDefault(locale);
  savedTimeZone=TimeZone.getDefault();
  timeZone=TEST_TIMEZONE.equals("random") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);
  TimeZone.setDefault(timeZone);
  testsFailed=false;
}
