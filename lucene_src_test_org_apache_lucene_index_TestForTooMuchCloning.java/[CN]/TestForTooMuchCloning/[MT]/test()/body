{
  final MockDirectoryWrapper dir=newDirectory();
  final TieredMergePolicy tmp=new TieredMergePolicy();
  tmp.setMaxMergeAtOnce(2);
  final RandomIndexWriter w=new RandomIndexWriter(random,dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMaxBufferedDocs(2).setMergePolicy(tmp));
  final int numDocs=20;
  for (int docs=0; docs < numDocs; docs++) {
    StringBuilder sb=new StringBuilder();
    for (int terms=0; terms < 100; terms++) {
      sb.append(_TestUtil.randomRealisticUnicodeString(random));
      sb.append(' ');
    }
    final Document doc=new Document();
    doc.add(new TextField("field",sb.toString()));
    w.addDocument(doc);
  }
  final IndexReader r=w.getReader();
  w.close();
  final int cloneCount=dir.getInputCloneCount();
  assertTrue("too many calls to IndexInput.clone during merging: " + dir.getInputCloneCount(),cloneCount < 500);
  final IndexSearcher s=new IndexSearcher(r);
  final TopDocs hits=s.search(new TermRangeQuery("field",new BytesRef(),new BytesRef("\uFFFF"),true,true),10);
  assertTrue(hits.totalHits > 0);
  final int queryCloneCount=dir.getInputCloneCount() - cloneCount;
  assertTrue("too many calls to IndexInput.clone during TermRangeQuery: " + queryCloneCount,queryCloneCount < 50);
  s.close();
  r.close();
  dir.close();
}
