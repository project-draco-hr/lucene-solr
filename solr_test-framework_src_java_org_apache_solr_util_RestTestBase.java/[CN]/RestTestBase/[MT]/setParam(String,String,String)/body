{
  if (null == valueToSet) {
    valueToSet="";
  }
  try {
    StringBuilder builder=new StringBuilder();
    if (null == query || query.trim().isEmpty()) {
      builder.append(paramToSet);
      builder.append('=');
      StrUtils.partialURLEncodeVal(builder,valueToSet);
      return builder.toString();
    }
    MultiMapSolrParams requestParams=SolrRequestParsers.parseQueryString(query);
    String[] values=requestParams.getParams(paramToSet);
    if (null == values) {
      builder.append(query);
      builder.append('&');
      builder.append(paramToSet);
      builder.append('=');
      StrUtils.partialURLEncodeVal(builder,valueToSet);
      return builder.toString();
    }
    if (1 == values.length && valueToSet.equals(values[0])) {
      return query;
    }
    boolean isFirst=true;
    for (    Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {
      String key=entry.getKey();
      String[] valarr=entry.getValue();
      if (!key.equals(paramToSet)) {
        for (        String val : valarr) {
          builder.append(isFirst ? "" : '&');
          isFirst=false;
          builder.append(key);
          builder.append('=');
          StrUtils.partialURLEncodeVal(builder,null == val ? "" : val);
        }
      }
    }
    builder.append(isFirst ? "" : '&');
    builder.append(paramToSet);
    builder.append('=');
    StrUtils.partialURLEncodeVal(builder,valueToSet);
    return builder.toString();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
