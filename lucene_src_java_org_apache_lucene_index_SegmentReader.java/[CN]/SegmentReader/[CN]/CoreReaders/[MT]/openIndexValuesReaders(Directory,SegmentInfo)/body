{
  final int numFields=fieldInfos.size();
  for (int i=0; i < numFields; i++) {
    final FieldInfo fieldInfo=fieldInfos.fieldInfo(i);
    final Values v=fieldInfo.getIndexValues();
    final String field=fieldInfo.name;
    final String id=IndexFileNames.segmentFileName(segment,Integer.toString(fieldInfo.number),"");
    if (v != null && dir.fileExists(id + ".dat")) {
switch (v) {
case PACKED_INTS:
        indexValues.put(field,Ints.getReader(dir,id,false));
      break;
case PACKED_INTS_FIXED:
    indexValues.put(field,Ints.getReader(dir,id,true));
  break;
case SIMPLE_FLOAT_4BYTE:
indexValues.put(field,Floats.getReader(dir,id,si.docCount));
break;
case SIMPLE_FLOAT_8BYTE:
indexValues.put(field,Floats.getReader(dir,id,si.docCount));
break;
case BYTES_FIXED_STRAIGHT:
indexValues.put(field,Bytes.getReader(dir,id,Bytes.Mode.STRAIGHT,true,si.docCount));
break;
case BYTES_FIXED_DEREF:
indexValues.put(field,Bytes.getReader(dir,id,Bytes.Mode.DEREF,true,si.docCount));
break;
case BYTES_FIXED_SORTED:
indexValues.put(field,Bytes.getReader(dir,id,Bytes.Mode.SORTED,true,si.docCount));
break;
case BYTES_VAR_STRAIGHT:
indexValues.put(field,Bytes.getReader(dir,id,Bytes.Mode.STRAIGHT,false,si.docCount));
break;
case BYTES_VAR_DEREF:
indexValues.put(field,Bytes.getReader(dir,id,Bytes.Mode.DEREF,false,si.docCount));
break;
case BYTES_VAR_SORTED:
indexValues.put(field,Bytes.getReader(dir,id,Bytes.Mode.SORTED,false,si.docCount));
break;
default :
throw new IllegalStateException("unrecognized index values mode " + v);
}
}
}
}
