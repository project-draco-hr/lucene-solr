{
  Class result=classCache.get(name);
  if (result != null)   return result;
  AtomicReference<String> jarName=new AtomicReference<>();
  ByteBuffer buf=null;
  try {
    buf=getByteBuffer(name,jarName);
  }
 catch (  Exception e) {
    throw new ClassNotFoundException("class could not be loaded " + name,e);
  }
  if (buf == null)   throw new ClassNotFoundException("Class not found :" + name);
  ProtectionDomain defaultDomain=null;
  try {
    defaultDomain=new ProtectionDomain(new CodeSource(new URL("http://localhost/.system/blob/" + jarName.get()),(Certificate[])null),null);
  }
 catch (  MalformedURLException mue) {
    throw new ClassNotFoundException("Unexpected exception ",mue);
  }
  log.info("Defining_class {} from runtime jar {} ",name,jarName);
  result=defineClass(name,buf.array(),buf.arrayOffset(),buf.limit(),defaultDomain);
  classCache.put(name,result);
  return result;
}
