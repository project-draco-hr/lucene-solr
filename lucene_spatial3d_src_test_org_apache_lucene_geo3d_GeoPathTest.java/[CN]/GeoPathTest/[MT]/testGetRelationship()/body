{
  GeoArea rect;
  GeoPath p;
  GeoPath c;
  GeoPoint point;
  GeoPoint pointApprox;
  int relationship;
  GeoArea area;
  PlanetModel planetModel;
  planetModel=new PlanetModel(1.151145876105594,0.8488541238944061);
  c=new GeoPath(planetModel,0.008726646259971648);
  c.addPoint(-0.6925658899376476,0.6316613927914589);
  c.addPoint(0.27828548161836364,0.6785795524104564);
  c.done();
  point=new GeoPoint(planetModel,-0.49298555067758226,0.9892440995026406);
  pointApprox=new GeoPoint(0.5110940362119821,0.7774603209946239,-0.49984312299556544);
  area=GeoAreaFactory.makeGeoArea(planetModel,0.49937141144985997,0.5161765426256085,0.3337218719537796,0.8544419570901649,-0.6347692823688085,0.3069696588119369);
  assertTrue(!c.isWithin(point));
  p=new GeoPath(PlanetModel.SPHERE,0.1);
  p.addPoint(-0.3,-0.3);
  p.addPoint(0.3,0.3);
  p.done();
  rect=new GeoRectangle(PlanetModel.SPHERE,0.05,-0.05,-0.05,0.05);
  assertEquals(GeoArea.CONTAINS,rect.getRelationship(p));
  rect=new GeoRectangle(PlanetModel.SPHERE,0.05,-0.05,-0.05,0.5);
  assertEquals(GeoArea.OVERLAPS,rect.getRelationship(p));
  rect=new GeoRectangle(PlanetModel.SPHERE,0.05,-0.05,-0.5,0.5);
  assertEquals(GeoArea.OVERLAPS,rect.getRelationship(p));
  rect=new GeoRectangle(PlanetModel.SPHERE,0.5,-0.5,-0.5,0.5);
  assertEquals(GeoArea.WITHIN,rect.getRelationship(p));
  rect=new GeoRectangle(PlanetModel.SPHERE,0.1,0.0,-0.1,0.0);
  assertEquals(GeoArea.OVERLAPS,rect.getRelationship(p));
  rect=new GeoRectangle(PlanetModel.SPHERE,0.2,0.1,-0.2,-0.1);
  assertEquals(GeoArea.DISJOINT,rect.getRelationship(p));
  rect=new GeoRectangle(PlanetModel.SPHERE,0.5,-0.5,-0.5,-0.35);
  assertEquals(GeoArea.OVERLAPS,rect.getRelationship(p));
  rect=new GeoRectangle(PlanetModel.SPHERE,0.5,-0.5,-0.5,-0.45);
  assertEquals(GeoArea.DISJOINT,rect.getRelationship(p));
}
