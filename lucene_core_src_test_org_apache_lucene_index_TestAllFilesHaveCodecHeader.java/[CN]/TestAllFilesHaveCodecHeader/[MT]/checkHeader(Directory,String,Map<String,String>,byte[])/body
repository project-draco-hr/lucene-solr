{
  try (IndexInput in=dir.openInput(file,newIOContext(random()))){
    int val=in.readInt();
    assertEquals(file + " has no codec header, instead found: " + val,CodecUtil.CODEC_MAGIC,val);
    String codecName=in.readString();
    assertFalse(codecName.isEmpty());
    String extension=IndexFileNames.getExtension(file);
    if (extension == null) {
      assertTrue(file.startsWith(IndexFileNames.SEGMENTS));
      extension="<segments> (not a real extension, designates segments file)";
    }
    String previous=namesToExtensions.put(codecName,extension);
    if (previous != null && !previous.equals(extension)) {
      fail("extensions " + previous + " and "+ extension+ " share same codecName "+ codecName);
    }
    in.readInt();
    if (id != null) {
      byte actualID[]=new byte[StringHelper.ID_LENGTH];
      in.readBytes(actualID,0,actualID.length);
      assertArrayEquals("expected " + StringHelper.idToString(id) + ", got "+ StringHelper.idToString(actualID),id,actualID);
    }
  }
 }
