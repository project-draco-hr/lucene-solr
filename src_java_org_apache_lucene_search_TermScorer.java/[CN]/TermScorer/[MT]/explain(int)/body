{
  Explanation result=new Explanation();
  TermQuery query=(TermQuery)weight.getQuery();
  result.setDescription("termScore(" + query + "), product of:");
  Explanation weightExplanation=weight.explain();
  result.addDetail(weightExplanation);
  Explanation tfExplanation=new Explanation();
  int tf=0;
  while (pointer < pointerMax) {
    if (docs[pointer] == doc)     tf=freqs[pointer];
    pointer++;
  }
  if (tf == 0) {
    while (termDocs.next()) {
      if (termDocs.doc() == doc) {
        tf=termDocs.freq();
      }
    }
  }
  termDocs.close();
  tfExplanation.setValue(getSimilarity().tf(tf));
  tfExplanation.setDescription("tf(termFreq(" + query.getTerm() + ")="+ tf+ ")");
  result.addDetail(tfExplanation);
  Explanation normExplanation=new Explanation();
  normExplanation.setValue(Similarity.decodeNorm(norms[doc]));
  String field=query.getTerm().field();
  normExplanation.setDescription("norm(field=" + field + ", doc="+ doc+ ")");
  result.addDetail(normExplanation);
  result.setValue(weightExplanation.getValue() * tfExplanation.getValue() * normExplanation.getValue());
  return result;
}
