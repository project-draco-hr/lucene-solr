{
  if (req instanceof UpdateRequest) {
    UpdateRequest updateRequest=(UpdateRequest)req;
    if (isNull(updateRequest.getDocuments()) && isNull(updateRequest.getDeleteById()) && isNull(updateRequest.getDeleteQuery())) {
      return null;
    }
    final BAOS baos=new BAOS();
    new JavaBinUpdateRequestCodec().marshal(updateRequest,baos);
    List<ContentStream> l=new ArrayList<ContentStream>(1);
    l.add(new ContentStream(){
      public String getName(){
        return null;
      }
      public String getSourceInfo(){
        return "javabin";
      }
      public String getContentType(){
        return "application/octet-stream";
      }
      public Long getSize(){
        return new Long(baos.size());
      }
      public InputStream getStream() throws IOException {
        return new ByteArrayInputStream(baos.getbuf(),0,baos.size());
      }
      public Reader getReader() throws IOException {
        throw new RuntimeException("No reader available . this is a binarystream");
      }
    }
);
    return l;
  }
 else {
    return super.getContentStreams(req);
  }
}
