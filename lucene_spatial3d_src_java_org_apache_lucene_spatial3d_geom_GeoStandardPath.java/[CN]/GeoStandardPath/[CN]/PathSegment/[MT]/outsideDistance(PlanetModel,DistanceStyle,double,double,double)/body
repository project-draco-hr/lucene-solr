{
  final double upperDistance=distanceStyle.computeDistance(planetModel,upperConnectingPlane,x,y,z,lowerConnectingPlane,startCutoffPlane,endCutoffPlane);
  final double lowerDistance=distanceStyle.computeDistance(planetModel,lowerConnectingPlane,x,y,z,upperConnectingPlane,startCutoffPlane,endCutoffPlane);
  final double startDistance=distanceStyle.computeDistance(planetModel,startCutoffPlane,x,y,z,endCutoffPlane,lowerConnectingPlane,upperConnectingPlane);
  final double endDistance=distanceStyle.computeDistance(planetModel,endCutoffPlane,x,y,z,startCutoffPlane,lowerConnectingPlane,upperConnectingPlane);
  final double ULHCDistance=distanceStyle.computeDistance(ULHC,x,y,z);
  final double URHCDistance=distanceStyle.computeDistance(URHC,x,y,z);
  final double LLHCDistance=distanceStyle.computeDistance(LLHC,x,y,z);
  final double LRHCDistance=distanceStyle.computeDistance(LRHC,x,y,z);
  return Math.min(Math.min(Math.min(upperDistance,lowerDistance),Math.min(startDistance,endDistance)),Math.min(Math.min(ULHCDistance,URHCDistance),Math.min(LLHCDistance,LRHCDistance)));
}
