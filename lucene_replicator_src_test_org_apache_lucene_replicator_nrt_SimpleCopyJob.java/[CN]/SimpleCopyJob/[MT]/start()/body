{
  if (iter == null) {
    iter=toCopy.iterator();
    try {
      if (current != null) {
        c.out.writeByte((byte)0);
        c.out.writeString(current.name);
        c.out.writeVLong(current.getBytesCopied());
        totBytes+=current.metaData.length;
      }
      for (      Map.Entry<String,FileMetaData> ent : toCopy) {
        String fileName=ent.getKey();
        FileMetaData metaData=ent.getValue();
        totBytes+=metaData.length;
        c.out.writeByte((byte)0);
        c.out.writeString(fileName);
        c.out.writeVLong(0);
      }
      c.out.writeByte((byte)1);
      c.flush();
      c.s.shutdownOutput();
      if (current != null) {
        long len=c.in.readVLong();
        if (len != current.metaData.length) {
          throw new IllegalStateException("file " + current.name + ": meta data says length="+ current.metaData.length+ " but c.in says "+ len);
        }
      }
      dest.message("SimpleCopyJob.init: done start files count=" + toCopy.size() + " totBytes="+ totBytes);
    }
 catch (    Throwable t) {
      cancel("exc during start",t);
      throw new NodeCommunicationException("exc during start",t);
    }
  }
 else {
    throw new IllegalStateException("already started");
  }
}
