{
  if (type == Type.STRING || type == Type.STRING_VAL) {
    if (missingValue != STRING_FIRST && missingValue != STRING_LAST) {
      throw new IllegalArgumentException("For STRING type, missing value must be either STRING_FIRST or STRING_LAST");
    }
  }
 else   if (type == Type.INT) {
    if (missingValue != null && missingValue.getClass() != Integer.class)     throw new IllegalArgumentException("Missing values for Type.INT can only be of type java.lang.Integer, but got " + missingValue.getClass());
  }
 else   if (type == Type.LONG) {
    if (missingValue != null && missingValue.getClass() != Long.class)     throw new IllegalArgumentException("Missing values for Type.LONG can only be of type java.lang.Long, but got " + missingValue.getClass());
  }
 else   if (type == Type.FLOAT) {
    if (missingValue != null && missingValue.getClass() != Float.class)     throw new IllegalArgumentException("Missing values for Type.FLOAT can only be of type java.lang.Float, but got " + missingValue.getClass());
  }
 else   if (type == Type.DOUBLE) {
    if (missingValue != null && missingValue.getClass() != Double.class)     throw new IllegalArgumentException("Missing values for Type.DOUBLE can only be of type java.lang.Double, but got " + missingValue.getClass());
  }
 else {
    throw new IllegalArgumentException("Missing value only works for numeric or STRING types");
  }
  this.missingValue=missingValue;
}
