{
switch (random().nextInt(5)) {
case 0:
    return new BitDocIdSet(set,set.cardinality());
case 1:
  return new BitDocIdSet(copyOf(set,numBits),set.cardinality());
case 2:
final RoaringDocIdSet.Builder builder=new RoaringDocIdSet.Builder(numBits);
for (int i=set.nextSetBit(0); i != DocIdSetIterator.NO_MORE_DOCS; i=i + 1 >= numBits ? DocIdSetIterator.NO_MORE_DOCS : set.nextSetBit(i + 1)) {
builder.add(i);
}
return builder.build();
case 3:
FixedBitSet fbs=new FixedBitSet(numBits);
fbs.or(new BitSetIterator(set,0));
return new BitDocIdSet(fbs);
case 4:
SparseFixedBitSet sfbs=new SparseFixedBitSet(numBits);
sfbs.or(new BitSetIterator(set,0));
return new BitDocIdSet(sfbs);
default :
fail();
return null;
}
}
