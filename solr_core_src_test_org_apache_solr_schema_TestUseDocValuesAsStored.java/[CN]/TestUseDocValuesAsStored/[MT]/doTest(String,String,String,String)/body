{
  String id="" + this.id++;
  String[] xpaths=new String[value.length + 1];
  if (value.length > 1) {
    Set<String> valueSet=new HashSet<>();
    valueSet.addAll(Arrays.asList(value));
    String[] fieldAndValues=new String[value.length * 2 + 2];
    fieldAndValues[0]="id";
    fieldAndValues[1]=id;
    for (int i=0; i < value.length; ++i) {
      fieldAndValues[i * 2 + 2]=field;
      fieldAndValues[i * 2 + 3]=value[i];
      xpaths[i]="//arr[@name='" + field + "']/"+ type+ "[.='"+ value[i]+ "']";
    }
    xpaths[value.length]="*[count(//arr[@name='" + field + "']/"+ type+ ") = "+ (isStoredField(field) ? value.length : valueSet.size())+ "]";
    assertU(adoc(fieldAndValues));
  }
 else {
    assertU(adoc("id",id,field,value[0]));
    xpaths[0]="//" + type + "[@name='"+ field+ "'][.='"+ value[0]+ "']";
    xpaths[1]="*[count(//" + type + "[@name='"+ field+ "']) = 1]";
  }
  assertU(commit());
  String fl=field;
  assertQ(desc + ": " + fl,req("q","id:" + id,"fl",fl),xpaths);
  fl=field + ",*";
  assertQ(desc + ": " + fl,req("q","id:" + id,"fl",fl),xpaths);
  fl="*" + field.substring(field.length() - 3);
  assertQ(desc + ": " + fl,req("q","id:" + id,"fl",fl),xpaths);
  fl="*";
  assertQ(desc + ": " + fl,req("q","id:" + id,"fl",fl),xpaths);
  fl=field + ",fakeFieldName";
  assertQ(desc + ": " + fl,req("q","id:" + id,"fl",fl),xpaths);
  fl="*";
  assertQ(desc + ": " + fl,req("q","*:*","fl",fl),xpaths);
}
