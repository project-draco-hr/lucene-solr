{
  File dataDir=_TestUtil.getTempDir("trecFeedAllTypes");
  _TestUtil.unzip(getDataFile("trecdocs.zip"),dataDir);
  TrecContentSource tcs=new TrecContentSource();
  Properties props=new Properties();
  props.setProperty("print.props","false");
  props.setProperty("content.source.verbose","false");
  props.setProperty("content.source.excludeIteration","true");
  props.setProperty("doc.maker.forever","false");
  props.setProperty("docs.dir",dataDir.getCanonicalPath().replace('\\','/'));
  props.setProperty("trec.doc.parser",TrecParserByPath.class.getName());
  props.setProperty("content.source.forever","false");
  tcs.setConfig(new Config(props));
  tcs.resetInputs();
  DocData dd=new DocData();
  int n=0;
  boolean gotExpectedException=false;
  HashSet<ParsePathType> unseenTypes=new HashSet<ParsePathType>(Arrays.asList(ParsePathType.values()));
  try {
    while (n < 100) {
      dd=tcs.getNextDocData(dd);
      ++n;
      assertNotNull("doc data " + n + " should not be null!",dd);
      unseenTypes.remove(tcs.currPathType);
switch (tcs.currPathType) {
case GOV2:
        assertDocData(dd,"TEST-000","TEST-000 title","TEST-000 text",tcs.parseDate("Sun, 11 Jan 2009 08:00:00 GMT"));
      break;
case FBIS:
    assertDocData(dd,"TEST-001","TEST-001 Title","TEST-001 text",tcs.parseDate("1 January 1991"));
  break;
case FR94:
assertDocData(dd,"TEST-002",null,"DEPARTMENT OF SOMETHING",tcs.parseDate("February 3, 1994"));
break;
case FT:
assertDocData(dd,"TEST-003","Test-003 title","Some pub text",tcs.parseDate("980424"));
break;
case LATIMES:
assertDocData(dd,"TEST-004","Test-004 Title","Some paragraph",tcs.parseDate("January 17, 1997, Sunday"));
break;
default :
assertTrue("Should never get here!",false);
}
}
}
 catch (NoMoreDataException e) {
gotExpectedException=true;
}
assertTrue("Should have gotten NoMoreDataException!",gotExpectedException);
assertEquals("Wrong number of documents created by osurce!",5,n);
assertTrue("Did not see all types!",unseenTypes.isEmpty());
}
