{
  CollectionAdminRequest.Create create=new CollectionAdminRequest.Create();
  create.setConfigName("conf1").setCollectionName("foo").setAsyncId("foo").setNumShards(1).setReplicationFactor(1).process(cloudClient);
  create=new CollectionAdminRequest.Create();
  create.setConfigName("conf1").setCollectionName("bar").setAsyncId("bar").setNumShards(1).setReplicationFactor(1).process(cloudClient);
  RequestStatusState state=getRequestStateAfterCompletion("foo",30,cloudClient);
  assertEquals(RequestStatusState.COMPLETED,state);
  state=getRequestStateAfterCompletion("bar",30,cloudClient);
  assertEquals(RequestStatusState.COMPLETED,state);
  CollectionAdminRequest.DeleteStatus deleteStatus=new CollectionAdminRequest.DeleteStatus();
  deleteStatus.setFlush(true).process(cloudClient);
  assertEquals(RequestStatusState.NOT_FOUND,getRequestState("foo",cloudClient));
  assertEquals(RequestStatusState.NOT_FOUND,getRequestState("bar",cloudClient));
  deleteStatus=new CollectionAdminRequest.DeleteStatus();
  try {
    deleteStatus.process(cloudClient);
    fail("delete status should have failed");
  }
 catch (  HttpSolrClient.RemoteSolrException e) {
    assertTrue(e.getMessage().contains("Either requestid or flush parameter must be specified."));
  }
  deleteStatus=new CollectionAdminRequest.DeleteStatus();
  try {
    deleteStatus.setFlush(true).setRequestId("foo").process(cloudClient);
    fail("delete status should have failed");
  }
 catch (  HttpSolrClient.RemoteSolrException e) {
    assertTrue(e.getMessage().contains("Both requestid and flush parameters can not be specified together."));
  }
}
