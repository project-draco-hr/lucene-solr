{
  if (pendingBitsLeft == 0) {
    pending=in.readLong();
    pendingBitsLeft=64;
  }
  final long result;
  if (pendingBitsLeft >= bitsPerValue) {
    result=(pending >> (pendingBitsLeft - bitsPerValue)) & masks[bitsPerValue - 1];
    pendingBitsLeft-=bitsPerValue;
  }
 else {
    final int bits1=bitsPerValue - pendingBitsLeft;
    final long result1=(pending & masks[pendingBitsLeft - 1]) << bits1;
    pending=in.readLong();
    final long result2=(pending >> (64 - bits1)) & masks[bits1 - 1];
    pendingBitsLeft=64 + pendingBitsLeft - bitsPerValue;
    result=result1 | result2;
  }
  ++position;
  return currentValue=result;
}
