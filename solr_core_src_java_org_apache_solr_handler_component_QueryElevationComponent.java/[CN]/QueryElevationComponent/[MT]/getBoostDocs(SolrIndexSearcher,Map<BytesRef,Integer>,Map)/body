{
  IntIntOpenHashMap boostDocs=null;
  if (boosted != null) {
    if (context != null) {
      boostDocs=(IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);
    }
    if (boostDocs != null) {
      return boostDocs;
    }
    SchemaField idField=indexSearcher.getSchema().getUniqueKeyField();
    String fieldName=idField.getName();
    HashSet<BytesRef> localBoosts=new HashSet(boosted.size() * 2);
    Iterator<BytesRef> boostedIt=boosted.keySet().iterator();
    while (boostedIt.hasNext()) {
      localBoosts.add(boostedIt.next());
    }
    boostDocs=new IntIntOpenHashMap(boosted.size() * 2);
    List<LeafReaderContext> leaves=indexSearcher.getTopReaderContext().leaves();
    PostingsEnum postingsEnum=null;
    for (    LeafReaderContext leaf : leaves) {
      LeafReader reader=leaf.reader();
      int docBase=leaf.docBase;
      Bits liveDocs=reader.getLiveDocs();
      Terms terms=reader.terms(fieldName);
      TermsEnum termsEnum=terms.iterator();
      Iterator<BytesRef> it=localBoosts.iterator();
      while (it.hasNext()) {
        BytesRef ref=it.next();
        if (termsEnum.seekExact(ref)) {
          postingsEnum=termsEnum.postings(postingsEnum);
          int doc=postingsEnum.nextDoc();
          while (doc != PostingsEnum.NO_MORE_DOCS && liveDocs != null && liveDocs.get(doc) == false) {
            doc=postingsEnum.nextDoc();
          }
          if (doc != PostingsEnum.NO_MORE_DOCS) {
            int p=boosted.get(ref);
            boostDocs.put(doc + docBase,p);
            it.remove();
          }
        }
      }
    }
  }
  if (context != null) {
    context.put(BOOSTED_DOCIDS,boostDocs);
  }
  return boostDocs;
}
