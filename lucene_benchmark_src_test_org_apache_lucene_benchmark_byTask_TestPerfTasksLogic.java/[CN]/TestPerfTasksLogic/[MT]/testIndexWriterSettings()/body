{
  String algLines[]={"# ----- properties ","content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource","docs.file=" + getReuters20LinesFile(),"content.source.log.step=3","ram.flush.mb=-1","max.buffered=2","compound=cmpnd:true:false","doc.term.vector=vector:false:true","content.source.forever=false","directory=RAMDirectory","doc.stored=false","merge.factor=3","doc.tokenized=false","debug.level=1","# ----- alg ","{ \"Rounds\"","  ResetSystemErase","  CreateIndex","  { \"AddDocs\"  AddDoc > : * ","  NewRound","} : 2"};
  Benchmark benchmark=execBenchmark(algLines);
  final IndexWriter writer=benchmark.getRunData().getIndexWriter();
  assertEquals(2,writer.getConfig().getMaxBufferedDocs());
  assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH,(int)writer.getConfig().getRAMBufferSizeMB());
  assertEquals(3,((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor());
  assertEquals(0.0d,writer.getConfig().getMergePolicy().getNoCFSRatio(),0.0);
  writer.shutdown();
  Directory dir=benchmark.getRunData().getDirectory();
  IndexReader reader=DirectoryReader.open(dir);
  Fields tfv=reader.getTermVectors(0);
  assertNotNull(tfv);
  assertTrue(tfv.size() > 0);
  reader.close();
}
