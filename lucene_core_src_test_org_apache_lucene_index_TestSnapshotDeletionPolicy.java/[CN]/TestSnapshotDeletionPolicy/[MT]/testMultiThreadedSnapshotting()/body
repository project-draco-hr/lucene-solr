{
  Directory dir=newDirectory();
  final SnapshotDeletionPolicy sdp=getDeletionPolicy();
  final IndexWriter writer=new IndexWriter(dir,getConfig(random(),sdp));
  Thread[] threads=new Thread[10];
  for (int i=0; i < threads.length; i++) {
    threads[i]=new Thread(){
      @Override public void run(){
        try {
          writer.addDocument(new Document());
          writer.commit();
          sdp.snapshot(getName());
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
;
    threads[i].setName("t" + i);
  }
  for (  Thread t : threads) {
    t.start();
  }
  for (  Thread t : threads) {
    t.join();
  }
  writer.addDocument(new Document());
  writer.commit();
  for (  Thread t : threads) {
    sdp.release(t.getName());
    writer.deleteUnusedFiles();
  }
  assertEquals(1,DirectoryReader.listCommits(dir).size());
  writer.close();
  dir.close();
}
