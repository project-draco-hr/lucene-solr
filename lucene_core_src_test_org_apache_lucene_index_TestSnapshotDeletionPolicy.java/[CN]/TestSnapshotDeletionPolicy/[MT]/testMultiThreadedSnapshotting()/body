{
  Directory dir=newDirectory();
  if (dir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)dir).setEnableVirusScanner(false);
  }
  final IndexWriter writer=new IndexWriter(dir,getConfig(random(),getDeletionPolicy()));
  final SnapshotDeletionPolicy sdp=(SnapshotDeletionPolicy)writer.getConfig().getIndexDeletionPolicy();
  Thread[] threads=new Thread[10];
  final IndexCommit[] snapshots=new IndexCommit[threads.length];
  final CountDownLatch startingGun=new CountDownLatch(1);
  for (int i=0; i < threads.length; i++) {
    final int finalI=i;
    threads[i]=new Thread(){
      @Override public void run(){
        try {
          startingGun.await();
          writer.addDocument(new Document());
          writer.commit();
          snapshots[finalI]=sdp.snapshot();
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
;
    threads[i].setName("t" + i);
  }
  for (  Thread t : threads) {
    t.start();
  }
  startingGun.countDown();
  for (  Thread t : threads) {
    t.join();
  }
  writer.addDocument(new Document());
  writer.commit();
  for (int i=0; i < threads.length; i++) {
    sdp.release(snapshots[i]);
    writer.deleteUnusedFiles();
  }
  assertEquals(1,DirectoryReader.listCommits(dir).size());
  writer.close();
  dir.close();
}
