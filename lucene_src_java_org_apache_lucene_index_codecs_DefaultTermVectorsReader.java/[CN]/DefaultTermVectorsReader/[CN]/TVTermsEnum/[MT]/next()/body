{
  if (nextTerm >= numTerms) {
    return null;
  }
  term.copyBytes(lastTerm);
  final int start=tvf.readVInt();
  final int deltaLen=tvf.readVInt();
  term.length=start + deltaLen;
  term.grow(term.length);
  tvf.readBytes(term.bytes,start,deltaLen);
  freq=tvf.readVInt();
  if (storePositions) {
    positions=new int[freq];
    int pos=0;
    for (int posUpto=0; posUpto < freq; posUpto++) {
      pos+=tvf.readVInt();
      positions[posUpto]=pos;
    }
  }
  if (storeOffsets) {
    startOffsets=new int[freq];
    endOffsets=new int[freq];
    int offset=0;
    for (int posUpto=0; posUpto < freq; posUpto++) {
      startOffsets[posUpto]=offset + tvf.readVInt();
      offset=endOffsets[posUpto]=startOffsets[posUpto] + tvf.readVInt();
    }
  }
  lastTerm.copyBytes(term);
  nextTerm++;
  return term;
}
