{
  for (  String suggesterName : suggesterResult.getSuggesterNames()) {
    SimpleOrderedMap<NamedList<Object>> results=new SimpleOrderedMap<>();
    for (    String token : suggesterResult.getTokens(suggesterName)) {
      SimpleOrderedMap<Object> suggestionBody=new SimpleOrderedMap<>();
      List<LookupResult> lookupResults=suggesterResult.getLookupResult(suggesterName,token);
      suggestionBody.add(SuggesterResultLabels.SUGGESTION_NUM_FOUND,lookupResults.size());
      List<SimpleOrderedMap<Object>> suggestEntriesNamedList=new ArrayList<>();
      for (      LookupResult lookupResult : lookupResults) {
        String suggestionString=lookupResult.key.toString();
        long weight=lookupResult.value;
        String payload=(lookupResult.payload != null) ? lookupResult.payload.utf8ToString() : "";
        SimpleOrderedMap<Object> suggestEntryNamedList=new SimpleOrderedMap<>();
        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_TERM,suggestionString);
        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_WEIGHT,weight);
        suggestEntryNamedList.add(SuggesterResultLabels.SUGGESTION_PAYLOAD,payload);
        suggestEntriesNamedList.add(suggestEntryNamedList);
      }
      suggestionBody.add(SuggesterResultLabels.SUGGESTIONS,suggestEntriesNamedList);
      results.add(token,suggestionBody);
    }
    resultObj.put(suggesterName,results);
  }
}
