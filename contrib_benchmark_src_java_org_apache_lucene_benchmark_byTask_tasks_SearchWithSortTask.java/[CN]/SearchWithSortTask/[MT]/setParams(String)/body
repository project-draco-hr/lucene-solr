{
  super.setParams(sortField);
  String[] fields=sortField.split(",");
  SortField[] sortFields=new SortField[fields.length];
  int upto=0;
  for (int i=0; i < fields.length; i++) {
    String field=fields[i];
    SortField sortField0;
    if (field.equals("doc")) {
      sortField0=SortField.FIELD_DOC;
    }
 else     if (field.equals("noscore")) {
      doScore=false;
      continue;
    }
 else     if (field.equals("nomaxscore")) {
      doMaxScore=false;
      continue;
    }
 else {
      int index=field.lastIndexOf(":");
      String fieldName;
      String typeString;
      if (index != -1) {
        fieldName=field.substring(0,index);
        typeString=field.substring(1 + index,field.length());
      }
 else {
        throw new RuntimeException("You must specify the sort type ie page:int,subject:string");
      }
      int type=getType(typeString);
      sortField0=new SortField(fieldName,type);
    }
    sortFields[upto++]=sortField0;
  }
  if (upto < sortFields.length) {
    SortField[] newSortFields=new SortField[upto];
    System.arraycopy(sortFields,0,newSortFields,0,upto);
    sortFields=newSortFields;
  }
  this.sort=new Sort(sortFields);
}
