{
  makeIndexShortMV();
  FieldQuery fq=new FieldQuery(tq("d"),true,true);
  FieldTermStack stack=new FieldTermStack(reader,0,F,fq);
  FieldPhraseList fpl=new FieldPhraseList(stack,fq);
  SimpleFragListBuilder sflb=new SimpleFragListBuilder();
  FieldFragList ffl=sflb.createFieldFragList(fpl,100);
  SimpleFragmentsBuilder sfb=new SimpleFragmentsBuilder();
  sfb.setDiscreteMultiValueHighlighting(true);
  assertEquals("<b>d</b> e",sfb.createFragment(reader,0,F,ffl));
  make1dmfIndex("some text to highlight","highlight other text");
  fq=new FieldQuery(tq("text"),true,true);
  stack=new FieldTermStack(reader,0,F,fq);
  fpl=new FieldPhraseList(stack,fq);
  sflb=new SimpleFragListBuilder();
  ffl=sflb.createFieldFragList(fpl,32);
  String[] result=sfb.createFragments(reader,0,F,ffl,3);
  assertEquals(2,result.length);
  assertEquals("some <b>text</b> to highlight",result[0]);
  assertEquals("other <b>text</b>",result[1]);
  fq=new FieldQuery(tq("highlight"),true,true);
  stack=new FieldTermStack(reader,0,F,fq);
  fpl=new FieldPhraseList(stack,fq);
  sflb=new SimpleFragListBuilder();
  ffl=sflb.createFieldFragList(fpl,32);
  result=sfb.createFragments(reader,0,F,ffl,3);
  assertEquals(2,result.length);
  assertEquals("text to <b>highlight</b>",result[0]);
  assertEquals("<b>highlight</b> other text",result[1]);
}
