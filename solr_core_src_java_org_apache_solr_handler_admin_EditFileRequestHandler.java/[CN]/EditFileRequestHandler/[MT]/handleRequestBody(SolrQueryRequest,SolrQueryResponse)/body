{
  CoreContainer coreContainer=req.getCore().getCoreDescriptor().getCoreContainer();
  String op=req.getParams().get(OP_PARAM);
  if (OP_WRITE.equalsIgnoreCase(op) || OP_TEST.equalsIgnoreCase(op)) {
    String fname=req.getParams().get("file",null);
    if (fname == null) {
      rsp.setException(new SolrException(ErrorCode.BAD_REQUEST,"No file name specified for write operation."));
    }
 else {
      fname=fname.replace('\\','/');
      stream=getOneInputStream(req,rsp);
      if (stream == null) {
        return;
      }
      data=IOUtils.toByteArray(stream.getStream());
      if ("solrconfig.xml".equals(fname)) {
        try {
          new SolrConfig("unused",new InputSource(new ByteArrayInputStream(data)));
        }
 catch (        Exception e) {
          rsp.setException(new SolrException(ErrorCode.BAD_REQUEST,"Invalid solr config file: " + e.getMessage()));
          return;
        }
      }
 else       if (fname.endsWith(".xml")) {
        try {
          new Config(null,null,new InputSource(new ByteArrayInputStream(data)),null,false);
        }
 catch (        Exception e) {
          rsp.setException(new SolrException(ErrorCode.BAD_REQUEST,"Invalid XML file: " + e.getMessage()));
          return;
        }
      }
      if (ShowFileRequestHandler.isHiddenFile(req,rsp,fname,true,hiddenFiles) == false) {
        if (coreContainer.isZooKeeperAware()) {
          writeToZooKeeper(req,rsp);
        }
 else {
          writeToFileSystem(req,rsp);
        }
      }
    }
  }
}
