{
  Node n=getMatchingNode(parser,childNodes);
  Map<String,Object> decends=new HashMap<String,Object>();
  if (n != null) {
    childrenFound.add(n);
    n.parse(parser,handler,values,stack,recordStarted);
    return;
  }
  Node dn=this;
  do {
    if (dn.wildCardNodes != null) {
      n=getMatchingNode(parser,dn.wildCardNodes);
      if (n != null) {
        childrenFound.add(n);
        n.parse(parser,handler,values,stack,recordStarted);
        break;
      }
      for (      Node nn : dn.wildCardNodes)       decends.put(nn.name,nn);
    }
    dn=dn.wildAncestor;
  }
 while (dn != null);
  if (n == null) {
    int count=1;
    while (count != 0) {
      int token=parser.next();
      if (token == START_ELEMENT) {
        Node nn=(Node)decends.get(parser.getLocalName());
        if (nn != null) {
          childrenFound.add(nn);
          nn.parse(parser,handler,values,stack,recordStarted);
        }
 else         count++;
      }
 else       if (token == END_ELEMENT)       count--;
    }
  }
}
