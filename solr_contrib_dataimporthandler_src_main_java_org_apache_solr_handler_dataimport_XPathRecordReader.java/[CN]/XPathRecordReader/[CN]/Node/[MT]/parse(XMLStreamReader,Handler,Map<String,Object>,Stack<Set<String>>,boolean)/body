{
  Set<String> valuesAddedinThisFrame=null;
  if (isRecord) {
    recordStarted=true;
    valuesAddedinThisFrame=new HashSet<String>();
    stack.push(valuesAddedinThisFrame);
  }
 else   if (recordStarted) {
    valuesAddedinThisFrame=stack.peek();
  }
  try {
    if (attributes != null) {
      for (      Node node : attributes) {
        String value=parser.getAttributeValue(null,node.name);
        if (value != null || (recordStarted && !isRecord)) {
          putText(values,value,node.fieldName,node.multiValued);
          valuesAddedinThisFrame.add(node.fieldName);
        }
      }
    }
    Set<Node> childrenFound=new HashSet<Node>();
    int event=-1;
    int flattenedStarts=0;
    StringBuilder text=new StringBuilder();
    while (true) {
      event=parser.next();
      if (event == END_ELEMENT) {
        if (flattenedStarts > 0)         flattenedStarts--;
 else {
          if (text.length() > 0 && valuesAddedinThisFrame != null) {
            valuesAddedinThisFrame.add(fieldName);
            putText(values,text.toString(),fieldName,multiValued);
          }
          if (isRecord)           handler.handle(getDeepCopy(values),forEachPath);
          if (childNodes != null && recordStarted && !isRecord && !childrenFound.containsAll(childNodes)) {
            for (            Node n : childNodes) {
              if (!childrenFound.contains(n))               n.putNulls(values);
            }
          }
          return;
        }
      }
 else       if (hasText && (event == CDATA || event == CHARACTERS || event == SPACE)) {
        text.append(parser.getText());
      }
 else       if (event == START_ELEMENT) {
        if (flatten)         flattenedStarts++;
 else         handleStartElement(parser,childrenFound,handler,values,stack,recordStarted);
      }
 else       if (event == END_DOCUMENT)       return;
    }
  }
  finally {
    if ((isRecord || !recordStarted) && !stack.empty()) {
      Set<String> cleanThis=stack.pop();
      if (cleanThis != null) {
        for (        String fld : cleanThis)         values.remove(fld);
      }
    }
  }
}
