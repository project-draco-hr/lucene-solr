{
switch (random().nextInt(4)) {
case 0:
    return new MockAnalyzer(random(),MockTokenizer.SIMPLE,true);
case 1:
  return new MockAnalyzer(random(),MockTokenizer.SIMPLE,true,MockTokenFilter.ENGLISH_STOPSET);
case 2:
return new Analyzer(){
  @Override protected TokenStreamComponents createComponents(  String fieldName,  Reader reader){
    Tokenizer tokenizer=new MockTokenizer(reader);
    return new TokenStreamComponents(tokenizer,new CrazyTokenFilter(tokenizer));
  }
}
;
default :
return new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false);
}
}
