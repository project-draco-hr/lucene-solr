{
  StringBuilder fooField=new StringBuilder();
  StringBuilder termField=new StringBuilder();
  final int numFooTerms=random().nextInt(250 * RANDOM_MULTIPLIER);
  for (int i=0; i < numFooTerms; i++) {
    fooField.append(" ");
    fooField.append(randomTerm());
  }
  final int numTermTerms=random().nextInt(250 * RANDOM_MULTIPLIER);
  for (int i=0; i < numTermTerms; i++) {
    termField.append(" ");
    termField.append(randomTerm());
  }
  Directory ramdir=new RAMDirectory();
  Analyzer analyzer=randomAnalyzer();
  IndexWriter writer=new IndexWriter(ramdir,new IndexWriterConfig(TEST_VERSION_CURRENT,analyzer).setCodec(_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat())));
  Document doc=new Document();
  Field field1=newField("foo",fooField.toString(),TextField.TYPE_UNSTORED);
  Field field2=newField("term",termField.toString(),TextField.TYPE_UNSTORED);
  doc.add(field1);
  doc.add(field2);
  writer.addDocument(doc);
  writer.close();
  MemoryIndex memory=new MemoryIndex();
  memory.addField("foo",fooField.toString(),analyzer);
  memory.addField("term",termField.toString(),analyzer);
  if (VERBOSE) {
    System.out.println("Random MemoryIndex:\n" + memory.toString());
    System.out.println("Same index as RAMDirectory: " + RamUsageEstimator.humanReadableUnits(RamUsageEstimator.sizeOf(ramdir)));
    System.out.println();
  }
 else {
    assertTrue(memory.getMemorySize() > 0L);
  }
  assertAllQueries(memory,ramdir,analyzer);
  ramdir.close();
}
