{
  SrndQuery sq;
  String qstr=getString();
  if (qstr == null)   return null;
  String mbqparam=getParam(MBQParam);
  if (mbqparam == null) {
    this.maxBasicQueries=DEFMAXBASICQUERIES;
  }
 else {
    try {
      this.maxBasicQueries=Integer.parseInt(mbqparam);
    }
 catch (    Exception e) {
      LOG.warn("Couldn't parse maxBasicQueries value " + mbqparam + ", using default of 1000");
      this.maxBasicQueries=DEFMAXBASICQUERIES;
    }
  }
  try {
    sq=org.apache.lucene.queryparser.surround.parser.QueryParser.parse(qstr);
  }
 catch (  org.apache.lucene.queryparser.surround.parser.ParseException pe) {
    throw new org.apache.lucene.queryparser.classic.ParseException(pe.getMessage());
  }
  String defaultField=getParam(CommonParams.DF);
  if (defaultField == null) {
    defaultField=getReq().getSchema().getDefaultSearchFieldName();
  }
  BasicQueryFactory bqFactory=new BasicQueryFactory(this.maxBasicQueries);
  Query lquery=sq.makeLuceneQueryField(defaultField,bqFactory);
  return lquery;
}
