{
  BlobContent aBlob=blobs.get(key);
  if (aBlob == null) {
    if (this.coreContainer.isZooKeeperAware()) {
      Replica replica=getSystemCollReplica();
      String url=replica.getStr(BASE_URL_PROP) + "/.system/blob/" + key+ "?wt=filestream";
      HttpClient httpClient=coreContainer.getUpdateShardHandler().getHttpClient();
      HttpGet httpGet=new HttpGet(url);
      ByteBuffer b;
      try {
        HttpResponse entity=httpClient.execute(httpGet,HttpClientUtil.createNewHttpClientRequestContext());
        int statusCode=entity.getStatusLine().getStatusCode();
        if (statusCode != 200) {
          throw new SolrException(SolrException.ErrorCode.NOT_FOUND,"no such blob or version available: " + key);
        }
        b=SimplePostTool.inputStreamToByteArray(entity.getEntity().getContent());
      }
 catch (      Exception e) {
        if (e instanceof SolrException) {
          throw (SolrException)e;
        }
 else {
          throw new SolrException(SolrException.ErrorCode.NOT_FOUND,"could not load : " + key,e);
        }
      }
 finally {
        httpGet.releaseConnection();
      }
      blobs.put(key,aBlob=new BlobContent(key,b));
    }
 else {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Jar loading is not supported in non-cloud mode");
    }
  }
  BlobContentRef ref=new BlobContentRef(aBlob);
synchronized (aBlob.references) {
    aBlob.references.add(ref);
  }
  return ref;
}
