{
  String collectionName=core.getCoreDescriptor().getCloudDescriptor().getCollectionName();
  String shard=core.getCoreDescriptor().getCloudDescriptor().getShardId();
  CdcrUpdateLog ulog=(CdcrUpdateLog)core.getUpdateHandler().getUpdateLog();
  for (  CdcrReplicatorState state : replicatorStates) {
    state.closeLogReader();
    try {
      long checkpoint=this.getCheckpoint(state);
      log.info("Create new update log reader for target {} with checkpoint {} @ {}:{}",state.getTargetCollection(),checkpoint,collectionName,shard);
      CdcrUpdateLog.CdcrLogReader reader=ulog.newLogReader();
      boolean seek=reader.seek(checkpoint);
      state.init(reader);
      if (!seek) {
        final String targetCollection=state.getTargetCollection();
        state.setBootstrapInProgress(true);
        log.info("Attempting to bootstrap target collection: {}, shard: {}",targetCollection,shard);
        bootstrapStatusRunnable=new BootstrapStatusRunnable(core,state);
        log.info("Submitting bootstrap task to executor");
        try {
          bootstrapExecutor.submit(bootstrapStatusRunnable);
        }
 catch (        Exception e) {
          log.error("Unable to submit bootstrap call to executor",e);
        }
      }
    }
 catch (    IOException|SolrServerException|SolrException e) {
      log.warn("Unable to instantiate the log reader for target collection " + state.getTargetCollection(),e);
    }
catch (    InterruptedException e) {
      log.warn("Thread interrupted while instantiate the log reader for target collection " + state.getTargetCollection(),e);
      Thread.currentThread().interrupt();
    }
  }
}
