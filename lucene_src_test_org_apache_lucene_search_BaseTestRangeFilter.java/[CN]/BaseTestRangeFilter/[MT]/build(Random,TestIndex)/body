{
  RandomIndexWriter writer=new RandomIndexWriter(random,index.index,newIndexWriterConfig(random,TEST_VERSION_CURRENT,new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(_TestUtil.nextInt(random,50,1000)));
  LogMergePolicy lmp=(LogMergePolicy)writer.w.getMergePolicy();
  if (lmp.getMergeFactor() > 5) {
    lmp.setMergeFactor(5);
  }
  Document doc=new Document();
  Field idField=newField(random,"id","",Field.Store.YES,Field.Index.NOT_ANALYZED);
  Field randField=newField(random,"rand","",Field.Store.YES,Field.Index.NOT_ANALYZED);
  Field bodyField=newField(random,"body","",Field.Store.YES,Field.Index.NOT_ANALYZED);
  doc.add(idField);
  doc.add(randField);
  doc.add(bodyField);
  for (int d=minId; d <= maxId; d++) {
    idField.setValue(pad(d));
    int r=index.allowNegativeRandomInts ? random.nextInt() : random.nextInt(Integer.MAX_VALUE);
    if (index.maxR < r) {
      index.maxR=r;
    }
    if (r < index.minR) {
      index.minR=r;
    }
    randField.setValue(pad(r));
    bodyField.setValue("body");
    writer.addDocument(doc);
  }
  IndexReader ir=writer.getReader();
  writer.close();
  return ir;
}
