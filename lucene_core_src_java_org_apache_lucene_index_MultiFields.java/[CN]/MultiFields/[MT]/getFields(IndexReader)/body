{
  final List<LeafReaderContext> leaves=reader.leaves();
switch (leaves.size()) {
case 1:
    return leaves.get(0).reader().fields();
default :
  final List<Fields> fields=new ArrayList<>(leaves.size());
final List<ReaderSlice> slices=new ArrayList<>(leaves.size());
for (final LeafReaderContext ctx : leaves) {
final LeafReader r=ctx.reader();
if (r.getIndexSort() != null) {
  throw new IllegalArgumentException("cannot handle index sort: reader=" + r);
}
final Fields f=r.fields();
fields.add(f);
slices.add(new ReaderSlice(ctx.docBase,r.maxDoc(),fields.size() - 1));
}
if (fields.size() == 1) {
return fields.get(0);
}
 else {
return new MultiFields(fields.toArray(Fields.EMPTY_ARRAY),slices.toArray(ReaderSlice.EMPTY_ARRAY));
}
}
}
