{
  final String suggesterFuzzy="suggest_fuzzy_doc_dict";
  assertFalse("Precondition not met for test. useColdSearcher must be false",h.getCore().getSolrConfig().useColdSearcher);
  assertEquals(suggesterFuzzy,h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[3]/str[@name='name']",false));
  assertNull(h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[3]/str[@name='storeDir']",false));
  assertEquals("false",h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[3]/str[@name='buildOnStartup']",false));
  assertEquals("true",h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[3]/str[@name='buildOnCommit']",false));
  assertQ(req("qt",rh,SuggesterParams.SUGGEST_DICT,suggesterFuzzy,SuggesterParams.SUGGEST_Q,"exampel",SuggesterParams.SUGGEST_COUNT,"5"),"//lst[@name='suggest']/lst[@name='" + suggesterFuzzy + "']/lst[@name='exampel']/int[@name='numFound'][.='2']");
  reloadCore(createNewCores);
  if (System.getProperty(SYSPROP_NIGHTLY) != null) {
    Thread.sleep(1000);
  }
  assertQ(req("qt",rh,SuggesterParams.SUGGEST_DICT,suggesterFuzzy,SuggesterParams.SUGGEST_Q,"exampel",SuggesterParams.SUGGEST_COUNT,"5"),"//lst[@name='suggest']/lst[@name='" + suggesterFuzzy + "']/lst[@name='exampel']/int[@name='numFound'][.='0']");
  assertQ(req("qt",rh,SuggesterParams.SUGGEST_DICT,suggesterFuzzy,SuggesterParams.SUGGEST_BUILD,"true"),"//str[@name='command'][.='build']");
  assertQ(req("qt",rh,SuggesterParams.SUGGEST_DICT,suggesterFuzzy,SuggesterParams.SUGGEST_Q,"exampel",SuggesterParams.SUGGEST_COUNT,"5"),"//lst[@name='suggest']/lst[@name='" + suggesterFuzzy + "']/lst[@name='exampel']/int[@name='numFound'][.='2']");
  final String suggestStartup="suggest_fuzzy_doc_dict_build_startup";
  assertEquals(suggestStartup,h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[5]/str[@name='name']",false));
  assertNull(h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[5]/str[@name='storeDir']",false));
  assertEquals("true",h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[5]/str[@name='buildOnStartup']",false));
  assertEquals("false",h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[5]/str[@name='buildOnCommit']",false));
  reloadCore(createNewCores);
  assertQ(req("qt",rh,SuggesterParams.SUGGEST_DICT,suggestStartup,SuggesterParams.SUGGEST_Q,"exampel",SuggesterParams.SUGGEST_COUNT,"5"),"//lst[@name='suggest']/lst[@name='" + suggestStartup + "']/lst[@name='exampel']/int[@name='numFound'][.='2']");
  assertU(adoc("id","10","cat","example data extra ","price","40","weight","35"));
  assertU((commit()));
  waitForWarming();
  assertQ(req("qt",rh,SuggesterParams.SUGGEST_DICT,suggestStartup,SuggesterParams.SUGGEST_Q,"exampel",SuggesterParams.SUGGEST_COUNT,"5"),"//lst[@name='suggest']/lst[@name='" + suggestStartup + "']/lst[@name='exampel']/int[@name='numFound'][.='2']");
  assertQ(req("qt",rh,SuggesterParams.SUGGEST_DICT,suggestStartup,SuggesterParams.SUGGEST_BUILD,"true"),"//str[@name='command'][.='build']");
  assertQ(req("qt",rh,SuggesterParams.SUGGEST_DICT,suggestStartup,SuggesterParams.SUGGEST_Q,"exampel",SuggesterParams.SUGGEST_COUNT,"5"),"//lst[@name='suggest']/lst[@name='" + suggestStartup + "']/lst[@name='exampel']/int[@name='numFound'][.='3']");
}
