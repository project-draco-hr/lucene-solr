{
  FieldCache cache=FieldCache.DEFAULT;
  cache.purgeAllCaches();
  assertEquals(0,cache.getCacheEntries().length);
  cache.getNumerics(reader,"theDouble",FieldCache.DOUBLE_POINT_PARSER);
  assertEquals(2,cache.getCacheEntries().length);
  Bits bits=cache.getDocsWithField(reader,"theDouble",FieldCache.DOUBLE_POINT_PARSER);
  assertEquals(2,cache.getCacheEntries().length);
  assertTrue(bits instanceof Bits.MatchAllBits);
  NumericDocValues ints=cache.getNumerics(reader,"sparse",FieldCache.INT_POINT_PARSER);
  assertEquals(4,cache.getCacheEntries().length);
  for (int i=0; i < reader.maxDoc(); i++) {
    if (i % 2 == 0) {
      assertEquals(i,ints.nextDoc());
      assertEquals(i,ints.longValue());
    }
  }
  NumericDocValues numInts=cache.getNumerics(reader,"numInt",FieldCache.INT_POINT_PARSER);
  for (int i=0; i < reader.maxDoc(); i++) {
    if (i % 2 == 0) {
      assertEquals(i,numInts.nextDoc());
      assertEquals(i,numInts.longValue());
    }
  }
}
