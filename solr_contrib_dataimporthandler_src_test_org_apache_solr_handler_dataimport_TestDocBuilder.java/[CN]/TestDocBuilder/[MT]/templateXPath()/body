{
  DataImporter di=new DataImporter();
  di.loadAndInit(dc_variableXpath);
  DIHConfiguration cfg=di.getConfig();
  RequestInfo rp=new RequestInfo(null,createMap("command","full-import"),null);
  List<Map<String,Object>> l=new ArrayList<>();
  l.add(createMap("id",1,"name","iphone","manufacturer","Apple"));
  l.add(createMap("id",2,"name","ipad","manufacturer","Apple"));
  l.add(createMap("id",3,"name","pixel","manufacturer","Google"));
  MockDataSource.setIterator("select * from x",l.iterator());
  List<Map<String,Object>> nestedData=new ArrayList<>();
  nestedData.add(createMap("founded","Cupertino, California, U.S","year","1976","year2","1976"));
  nestedData.add(createMap("founded","Cupertino, California, U.S","year","1976","year2","1976"));
  nestedData.add(createMap("founded","Menlo Park, California, U.S","year","1998","year2","1998"));
  MockStringDataSource.setData("companies.xml",xml_attrVariableXpath);
  MockStringDataSource.setData("companies2.xml",xml_variableXpath);
  MockStringDataSource.setData("companies3.xml",xml_variableForEach);
  SolrWriterImpl swi=new SolrWriterImpl();
  di.runCmd(rp,swi);
  assertEquals(Boolean.TRUE,swi.deleteAllCalled);
  assertEquals(Boolean.TRUE,swi.commitCalled);
  assertEquals(Boolean.TRUE,swi.finishCalled);
  assertEquals(3,swi.docs.size());
  for (int i=0; i < l.size(); i++) {
    SolrInputDocument doc=swi.docs.get(i);
    Map<String,Object> map=l.get(i);
    for (    Map.Entry<String,Object> entry : map.entrySet()) {
      assertEquals(entry.getValue(),doc.getFieldValue(entry.getKey()));
    }
    map=nestedData.get(i);
    for (    Map.Entry<String,Object> entry : map.entrySet()) {
      assertEquals(entry.getValue(),doc.getFieldValue(entry.getKey()));
    }
  }
  assertEquals(1,di.getDocBuilder().importStatistics.queryCount.get());
  assertEquals(3,di.getDocBuilder().importStatistics.docCount.get());
}
