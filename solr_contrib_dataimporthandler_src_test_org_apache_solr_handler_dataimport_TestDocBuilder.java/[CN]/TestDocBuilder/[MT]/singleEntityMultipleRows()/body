{
  DataImporter di=new DataImporter();
  di.loadAndInit(dc_singleEntity);
  DIHConfiguration cfg=di.getConfig();
  Entity ent=cfg.getEntities().get(0);
  RequestInfo rp=new RequestInfo(null,createMap("command","full-import"),null);
  List<Map<String,Object>> l=new ArrayList<Map<String,Object>>();
  l.add(createMap("id",1,"desc","one"));
  l.add(createMap("id",2,"desc","two"));
  l.add(createMap("id",3,"desc","three"));
  MockDataSource.setIterator("select * from x",l.iterator());
  SolrWriterImpl swi=new SolrWriterImpl();
  di.runCmd(rp,swi);
  assertEquals(Boolean.TRUE,swi.deleteAllCalled);
  assertEquals(Boolean.TRUE,swi.commitCalled);
  assertEquals(Boolean.TRUE,swi.finishCalled);
  assertEquals(3,swi.docs.size());
  for (int i=0; i < l.size(); i++) {
    Map<String,Object> map=(Map<String,Object>)l.get(i);
    SolrInputDocument doc=swi.docs.get(i);
    for (    Map.Entry<String,Object> entry : map.entrySet()) {
      assertEquals(entry.getValue(),doc.getFieldValue(entry.getKey()));
    }
    assertEquals(map.get("desc"),doc.getFieldValue("desc_s"));
  }
  assertEquals(1,di.getDocBuilder().importStatistics.queryCount.get());
  assertEquals(3,di.getDocBuilder().importStatistics.docCount.get());
  assertEquals(3,di.getDocBuilder().importStatistics.rowsCount.get());
}
