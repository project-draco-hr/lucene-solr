{
  for (int i=0; i < iterations; ++i) {
    final long block0=blocks[blocksOffset++];
    values[valuesOffset++]=block0 >>> 54;
    values[valuesOffset++]=(block0 >>> 44) & 1023L;
    values[valuesOffset++]=(block0 >>> 34) & 1023L;
    values[valuesOffset++]=(block0 >>> 24) & 1023L;
    values[valuesOffset++]=(block0 >>> 14) & 1023L;
    values[valuesOffset++]=(block0 >>> 4) & 1023L;
    final long block1=blocks[blocksOffset++];
    values[valuesOffset++]=((block0 & 15L) << 6) | (block1 >>> 58);
    values[valuesOffset++]=(block1 >>> 48) & 1023L;
    values[valuesOffset++]=(block1 >>> 38) & 1023L;
    values[valuesOffset++]=(block1 >>> 28) & 1023L;
    values[valuesOffset++]=(block1 >>> 18) & 1023L;
    values[valuesOffset++]=(block1 >>> 8) & 1023L;
    final long block2=blocks[blocksOffset++];
    values[valuesOffset++]=((block1 & 255L) << 2) | (block2 >>> 62);
    values[valuesOffset++]=(block2 >>> 52) & 1023L;
    values[valuesOffset++]=(block2 >>> 42) & 1023L;
    values[valuesOffset++]=(block2 >>> 32) & 1023L;
    values[valuesOffset++]=(block2 >>> 22) & 1023L;
    values[valuesOffset++]=(block2 >>> 12) & 1023L;
    values[valuesOffset++]=(block2 >>> 2) & 1023L;
    final long block3=blocks[blocksOffset++];
    values[valuesOffset++]=((block2 & 3L) << 8) | (block3 >>> 56);
    values[valuesOffset++]=(block3 >>> 46) & 1023L;
    values[valuesOffset++]=(block3 >>> 36) & 1023L;
    values[valuesOffset++]=(block3 >>> 26) & 1023L;
    values[valuesOffset++]=(block3 >>> 16) & 1023L;
    values[valuesOffset++]=(block3 >>> 6) & 1023L;
    final long block4=blocks[blocksOffset++];
    values[valuesOffset++]=((block3 & 63L) << 4) | (block4 >>> 60);
    values[valuesOffset++]=(block4 >>> 50) & 1023L;
    values[valuesOffset++]=(block4 >>> 40) & 1023L;
    values[valuesOffset++]=(block4 >>> 30) & 1023L;
    values[valuesOffset++]=(block4 >>> 20) & 1023L;
    values[valuesOffset++]=(block4 >>> 10) & 1023L;
    values[valuesOffset++]=block4 & 1023L;
  }
}
