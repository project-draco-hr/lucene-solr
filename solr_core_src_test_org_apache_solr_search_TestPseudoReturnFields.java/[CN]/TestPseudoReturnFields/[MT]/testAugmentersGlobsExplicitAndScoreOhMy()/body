{
  Random random=random();
  final List<String> fl=Arrays.asList("id","[docid]","[explain]","score","val_*","subj*");
  final int iters=atLeast(random,10);
  for (int i=0; i < iters; i++) {
    Collections.shuffle(fl,random);
    final String singleFl=StringUtils.join(fl.toArray(),',');
    assertQ("fl=" + singleFl,req("q","*:*","rows","1","fl",singleFl),"//result[@numFound='5']","//result/doc/str[@name='id']","//result/doc/float[@name='score']","//result/doc/str[@name='subject']","//result/doc/int[@name='val_i']","//result/doc/int[@name='[docid]']","//result/doc/str[@name='[explain]']","//result/doc[count(*)=6]");
    final List<String> params=new ArrayList<>((fl.size() * 2) + 4);
    final StringBuilder info=new StringBuilder();
    params.addAll(Arrays.asList("q","*:*","rows","1"));
    for (    String item : fl) {
      params.add("fl");
      params.add(item);
      info.append("&fl=").append(item);
    }
    assertQ(info.toString(),req((String[])params.toArray(new String[0])),"//result[@numFound='5']","//result/doc/str[@name='id']","//result/doc/float[@name='score']","//result/doc/str[@name='subject']","//result/doc/int[@name='val_i']","//result/doc/int[@name='[docid]']","//result/doc/str[@name='[explain]']","//result/doc[count(*)=6]");
  }
}
