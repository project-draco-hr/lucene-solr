{
  int numShards=1;
  int replicationFactor=3;
  int maxShardsPerNode=1;
  String testCollectionName="c8n_1x3";
  String shardId="shard1";
  int minRf=2;
  createCollection(testCollectionName,numShards,replicationFactor,maxShardsPerNode);
  cloudClient.setDefaultCollection(testCollectionName);
  List<Replica> replicas=ensureAllReplicasAreActive(testCollectionName,shardId,numShards,replicationFactor,10);
  assertTrue("Expected active 2 replicas for " + testCollectionName,replicas.size() == 2);
  int rf=sendDoc(1,minRf);
  assertTrue("Expected rf=3 as all replicas are up, but got " + rf,rf == 3);
  getProxyForReplica(replicas.get(0)).close();
  rf=sendDoc(2,minRf);
  assertTrue("Expected rf=2 as one replica should be down, but got " + rf,rf == 2);
  getProxyForReplica(replicas.get(1)).close();
  rf=sendDoc(3,minRf);
  assertTrue("Expected rf=1 as both replicas should be down, but got " + rf,rf == 1);
  getProxyForReplica(replicas.get(0)).reopen();
  getProxyForReplica(replicas.get(1)).reopen();
  ensureAllReplicasAreActive(testCollectionName,shardId,numShards,replicationFactor,30);
  rf=sendDoc(4,minRf);
  assertTrue("Expected rf=3 as partitions to replicas have been healed, but got " + rf,rf == 3);
  List<SolrInputDocument> batch=new ArrayList<SolrInputDocument>(10);
  for (int i=5; i < 15; i++) {
    SolrInputDocument doc=new SolrInputDocument();
    doc.addField(id,String.valueOf(i));
    doc.addField("a_t","hello" + i);
    batch.add(doc);
  }
  UpdateRequest up=new UpdateRequest();
  up.setParam(UpdateRequest.MIN_REPFACT,String.valueOf(minRf));
  up.add(batch);
  int batchRf=cloudClient.getMinAchievedReplicationFactor(cloudClient.getDefaultCollection(),cloudClient.request(up));
  assertTrue("Expected rf=3 for batch but got " + batchRf,batchRf == 3);
  getProxyForReplica(replicas.get(0)).close();
  batch=new ArrayList<SolrInputDocument>(10);
  for (int i=15; i < 30; i++) {
    SolrInputDocument doc=new SolrInputDocument();
    doc.addField(id,String.valueOf(i));
    doc.addField("a_t","hello" + i);
    batch.add(doc);
  }
  up=new UpdateRequest();
  up.setParam(UpdateRequest.MIN_REPFACT,String.valueOf(minRf));
  up.add(batch);
  batchRf=cloudClient.getMinAchievedReplicationFactor(cloudClient.getDefaultCollection(),cloudClient.request(up));
  assertTrue("Expected rf=2 for batch (one replica is down) but got " + batchRf,batchRf == 2);
  getProxyForReplica(replicas.get(1)).close();
  batch=new ArrayList<SolrInputDocument>(10);
  for (int i=30; i < 45; i++) {
    SolrInputDocument doc=new SolrInputDocument();
    doc.addField(id,String.valueOf(i));
    doc.addField("a_t","hello" + i);
    batch.add(doc);
  }
  up=new UpdateRequest();
  up.setParam(UpdateRequest.MIN_REPFACT,String.valueOf(minRf));
  up.add(batch);
  batchRf=cloudClient.getMinAchievedReplicationFactor(cloudClient.getDefaultCollection(),cloudClient.request(up));
  assertTrue("Expected rf=1 for batch (two replicas are down) but got " + batchRf,batchRf == 1);
  getProxyForReplica(replicas.get(0)).reopen();
  getProxyForReplica(replicas.get(1)).reopen();
  Thread.sleep(1000);
}
