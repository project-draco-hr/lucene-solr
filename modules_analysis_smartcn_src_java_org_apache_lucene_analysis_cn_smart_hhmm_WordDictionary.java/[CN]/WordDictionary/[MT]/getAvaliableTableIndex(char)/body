{
  int hash1=(int)(hash1(c) % PRIME_INDEX_LENGTH);
  int hash2=hash2(c) % PRIME_INDEX_LENGTH;
  if (hash1 < 0)   hash1=PRIME_INDEX_LENGTH + hash1;
  if (hash2 < 0)   hash2=PRIME_INDEX_LENGTH + hash2;
  int index=hash1;
  int i=1;
  while (charIndexTable[index] != 0 && charIndexTable[index] != c && i < PRIME_INDEX_LENGTH) {
    index=(hash1 + i * hash2) % PRIME_INDEX_LENGTH;
    i++;
  }
  if (i < PRIME_INDEX_LENGTH && (charIndexTable[index] == 0 || charIndexTable[index] == c)) {
    return (short)index;
  }
 else   return -1;
}
