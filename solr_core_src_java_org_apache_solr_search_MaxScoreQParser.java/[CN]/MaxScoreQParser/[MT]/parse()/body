{
  Query q=super.parse();
  if (!(q instanceof BooleanQuery)) {
    return q;
  }
  BooleanQuery obq=(BooleanQuery)q;
  Collection<Query> should=new ArrayList<Query>();
  Collection<BooleanClause> prohibOrReq=new ArrayList<BooleanClause>();
  BooleanQuery newq=new BooleanQuery();
  for (  BooleanClause clause : obq.getClauses()) {
    if (clause.isProhibited() || clause.isRequired()) {
      prohibOrReq.add(clause);
    }
 else {
      BooleanQuery bq=new BooleanQuery();
      bq.add(clause);
      should.add(bq);
    }
  }
  if (should.size() > 0) {
    DisjunctionMaxQuery dmq=new DisjunctionMaxQuery(should,tie);
    newq.add(dmq,BooleanClause.Occur.SHOULD);
  }
  for (  BooleanClause c : prohibOrReq) {
    newq.add(c);
  }
  return newq;
}
