{
  final int NUM_DOCS=173;
  Directory dir=new MockRAMDirectory();
  IndexWriter w=new IndexWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new WhitespaceAnalyzer()).setCodecProvider(new MyCodecs()));
  w.setMergeFactor(3);
  Document doc=new Document();
  doc.add(new Field("field1","this field uses the standard codec as the test",Field.Store.NO,Field.Index.ANALYZED));
  doc.add(new Field("field2","this field uses the pulsing codec as the test",Field.Store.NO,Field.Index.ANALYZED));
  Field idField=new Field("id","",Field.Store.NO,Field.Index.NOT_ANALYZED);
  doc.add(idField);
  for (int i=0; i < NUM_DOCS; i++) {
    idField.setValue("" + i);
    w.addDocument(doc);
    if ((i + 1) % 10 == 0) {
      w.commit();
    }
  }
  w.deleteDocuments(new Term("id","77"));
  IndexReader r=w.getReader();
  IndexReader[] subs=r.getSequentialSubReaders();
  assertTrue(subs.length > 1);
  for (int i=0; i < subs.length; i++) {
    testTermsOrder(subs[i]);
  }
  testTermsOrder(r);
  assertEquals(NUM_DOCS - 1,r.numDocs());
  IndexSearcher s=new IndexSearcher(r);
  assertEquals(NUM_DOCS - 1,s.search(new TermQuery(new Term("field1","standard")),1).totalHits);
  assertEquals(NUM_DOCS - 1,s.search(new TermQuery(new Term("field2","pulsing")),1).totalHits);
  r.close();
  s.close();
  w.deleteDocuments(new Term("id","44"));
  w.optimize();
  r=w.getReader();
  assertEquals(NUM_DOCS - 2,r.maxDoc());
  assertEquals(NUM_DOCS - 2,r.numDocs());
  s=new IndexSearcher(r);
  assertEquals(NUM_DOCS - 2,s.search(new TermQuery(new Term("field1","standard")),1).totalHits);
  assertEquals(NUM_DOCS - 2,s.search(new TermQuery(new Term("field2","pulsing")),1).totalHits);
  assertEquals(1,s.search(new TermQuery(new Term("id","76")),1).totalHits);
  assertEquals(0,s.search(new TermQuery(new Term("id","77")),1).totalHits);
  assertEquals(0,s.search(new TermQuery(new Term("id","44")),1).totalHits);
  testTermsOrder(r);
  r.close();
  s.close();
  w.close();
  dir.close();
}
