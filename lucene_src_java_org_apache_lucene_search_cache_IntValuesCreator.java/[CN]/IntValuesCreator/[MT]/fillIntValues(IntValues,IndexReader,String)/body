{
  if (parser == null) {
    try {
      parser=FieldCache.DEFAULT_INT_PARSER;
      fillIntValues(vals,reader,field);
      return;
    }
 catch (    NumberFormatException ne) {
      vals.parserHashCode=null;
      parser=FieldCache.NUMERIC_UTILS_INT_PARSER;
      fillIntValues(vals,reader,field);
      return;
    }
  }
  setParserAndResetCounts(vals,parser);
  Terms terms=MultiFields.getTerms(reader,field);
  int maxDoc=reader.maxDoc();
  vals.values=null;
  if (terms != null) {
    final TermsEnum termsEnum=terms.iterator();
    FixedBitSet validBits=(hasOption(OPTION_CACHE_BITS)) ? new FixedBitSet(maxDoc) : null;
    DocsEnum docs=null;
    try {
      while (true) {
        final BytesRef term=termsEnum.next();
        if (term == null) {
          break;
        }
        final int termval=parser.parseInt(term);
        docs=termsEnum.docs(null,docs);
        while (true) {
          final int docID=docs.nextDoc();
          if (docID == DocIdSetIterator.NO_MORE_DOCS) {
            break;
          }
          if (vals.values == null) {
            vals.values=new int[maxDoc];
          }
          vals.values[docID]=termval;
          vals.numDocs++;
          if (validBits != null) {
            validBits.set(docID);
          }
        }
        vals.numTerms++;
      }
    }
 catch (    FieldCache.StopFillCacheException stop) {
    }
    if (vals.valid == null) {
      vals.valid=checkMatchAllBits(validBits,vals.numDocs,maxDoc);
    }
  }
  if (vals.values == null) {
    vals.values=new int[maxDoc];
  }
  if (vals.valid == null && vals.numDocs < 1) {
    vals.valid=new Bits.MatchNoBits(maxDoc);
  }
}
