{
  IndexInput input=null;
  try {
    input=openInput(directory,segmentsFileName,context);
    final int format=input.readInt();
    infos.setFormat(format);
    if (format > DefaultSegmentInfosWriter.FORMAT_MINIMUM)     throw new IndexFormatTooOldException(segmentsFileName,format,DefaultSegmentInfosWriter.FORMAT_MINIMUM,DefaultSegmentInfosWriter.FORMAT_CURRENT);
    if (format < DefaultSegmentInfosWriter.FORMAT_CURRENT)     throw new IndexFormatTooNewException(segmentsFileName,format,DefaultSegmentInfosWriter.FORMAT_MINIMUM,DefaultSegmentInfosWriter.FORMAT_CURRENT);
    infos.version=input.readLong();
    infos.counter=input.readInt();
    if (infos.getFormat() <= DefaultSegmentInfosWriter.FORMAT_4_0) {
      infos.setGlobalFieldMapVersion(input.readLong());
    }
    for (int i=input.readInt(); i > 0; i--) {
      SegmentInfo si=new SegmentInfo(directory,format,input,codecs);
      if (si.getVersion() == null) {
        Directory dir=directory;
        if (si.getDocStoreOffset() != -1) {
          if (si.getDocStoreIsCompoundFile()) {
            dir=new CompoundFileDirectory(dir,IndexFileNames.segmentFileName(si.getDocStoreSegment(),"",IndexFileNames.COMPOUND_FILE_STORE_EXTENSION),context,false);
          }
        }
 else         if (si.getUseCompoundFile()) {
          dir=new CompoundFileDirectory(dir,IndexFileNames.segmentFileName(si.name,"",IndexFileNames.COMPOUND_FILE_EXTENSION),context,false);
        }
        try {
          DefaultFieldsReader.checkCodeVersion(dir,si.getDocStoreSegment());
        }
  finally {
          if (dir != directory)           dir.close();
        }
        si.setVersion("3.0");
      }
 else       if (si.getVersion().equals("2.x")) {
        throw new IndexFormatTooOldException(si.name,si.getVersion());
      }
      infos.add(si);
    }
    infos.userData=input.readStringStringMap();
    finalizeInput(input);
  }
  finally {
    if (input != null) {
      input.close();
    }
  }
}
