{
  Query filteredquery=new FilteredQuery(query,filter,randomFilterStrategy(random(),useRandomAccess));
  ScoreDoc[] hits=searcher.search(filteredquery,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(1,hits[0].doc);
  QueryUtils.check(random(),filteredquery,searcher);
  hits=searcher.search(filteredquery,1000,new Sort(new SortField("sorter",SortField.Type.STRING))).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(1,hits[0].doc);
  filteredquery=new FilteredQuery(new TermQuery(new Term("field","one")),filter,randomFilterStrategy(random(),useRandomAccess));
  hits=searcher.search(filteredquery,1000).scoreDocs;
  assertEquals(2,hits.length);
  QueryUtils.check(random(),filteredquery,searcher);
  filteredquery=new FilteredQuery(new MatchAllDocsQuery(),filter,randomFilterStrategy(random(),useRandomAccess));
  hits=searcher.search(filteredquery,1000).scoreDocs;
  assertEquals(2,hits.length);
  QueryUtils.check(random(),filteredquery,searcher);
  filteredquery=new FilteredQuery(new TermQuery(new Term("field","x")),filter,randomFilterStrategy(random(),useRandomAccess));
  hits=searcher.search(filteredquery,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(3,hits[0].doc);
  QueryUtils.check(random(),filteredquery,searcher);
  filteredquery=new FilteredQuery(new TermQuery(new Term("field","y")),filter,randomFilterStrategy(random(),useRandomAccess));
  hits=searcher.search(filteredquery,1000).scoreDocs;
  assertEquals(0,hits.length);
  QueryUtils.check(random(),filteredquery,searcher);
  Filter f=newStaticFilterA();
  float boost=2.5f;
  BooleanQuery.Builder bq1=new BooleanQuery.Builder();
  TermQuery tq=new TermQuery(new Term("field","one"));
  tq.setBoost(boost);
  bq1.add(tq,Occur.MUST);
  bq1.add(new TermQuery(new Term("field","five")),Occur.MUST);
  BooleanQuery.Builder bq2=new BooleanQuery.Builder();
  tq=new TermQuery(new Term("field","one"));
  filteredquery=new FilteredQuery(tq,f,randomFilterStrategy(random(),useRandomAccess));
  filteredquery.setBoost(boost);
  bq2.add(filteredquery,Occur.MUST);
  bq2.add(new TermQuery(new Term("field","five")),Occur.MUST);
  assertScoreEquals(bq1.build(),bq2.build());
  assertEquals(boost,filteredquery.getBoost(),0);
  assertEquals(1.0f,tq.getBoost(),0);
}
