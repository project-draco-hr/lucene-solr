{
  if (polyLats.length != polyLons.length) {
    throw new IllegalArgumentException("polyLats and polyLons must be equal length");
  }
  double minLon=Double.POSITIVE_INFINITY;
  double maxLon=Double.NEGATIVE_INFINITY;
  double minLat=Double.POSITIVE_INFINITY;
  double maxLat=Double.NEGATIVE_INFINITY;
  for (int i=0; i < polyLats.length; i++) {
    if (GeoUtils.isValidLat(polyLats[i]) == false) {
      throw new IllegalArgumentException("invalid polyLats[" + i + "]="+ polyLats[i]);
    }
    if (GeoUtils.isValidLon(polyLons[i]) == false) {
      throw new IllegalArgumentException("invalid polyLons[" + i + "]="+ polyLons[i]);
    }
    minLat=min(polyLats[i],minLat);
    maxLat=max(polyLats[i],maxLat);
    minLon=min(polyLons[i],minLon);
    maxLon=max(polyLons[i],maxLon);
  }
  return new GeoRect(max(minLat - TOLERANCE,MIN_LAT_INCL),min(maxLat + TOLERANCE,MAX_LAT_INCL),max(minLon - TOLERANCE,MIN_LON_INCL),min(maxLon + TOLERANCE,MAX_LON_INCL));
}
