{
  GeoCircle c;
  Bounds b;
  c=new GeoCircle(PlanetModel.SPHERE,0.0,-0.5,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(-0.6,b.getLeftLongitude(),0.000001);
  assertEquals(-0.4,b.getRightLongitude(),0.000001);
  assertEquals(-0.1,b.getMinLatitude(),0.000001);
  assertEquals(0.1,b.getMaxLatitude(),0.000001);
  c=new GeoCircle(PlanetModel.SPHERE,0.0,0.5,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.4,b.getLeftLongitude(),0.000001);
  assertEquals(0.6,b.getRightLongitude(),0.000001);
  assertEquals(-0.1,b.getMinLatitude(),0.000001);
  assertEquals(0.1,b.getMaxLatitude(),0.000001);
  c=new GeoCircle(PlanetModel.SPHERE,0.0,0.0,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(-0.1,b.getLeftLongitude(),0.000001);
  assertEquals(0.1,b.getRightLongitude(),0.000001);
  assertEquals(-0.1,b.getMinLatitude(),0.000001);
  assertEquals(0.1,b.getMaxLatitude(),0.000001);
  c=new GeoCircle(PlanetModel.SPHERE,0.0,Math.PI,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(Math.PI - 0.1,b.getLeftLongitude(),0.000001);
  assertEquals(-Math.PI + 0.1,b.getRightLongitude(),0.000001);
  assertEquals(-0.1,b.getMinLatitude(),0.000001);
  assertEquals(0.1,b.getMaxLatitude(),0.000001);
  c=new GeoCircle(PlanetModel.SPHERE,Math.PI * 0.5,0.0,0.1);
  b=c.getBounds(null);
  assertTrue(b.checkNoLongitudeBound());
  assertTrue(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(Math.PI * 0.5 - 0.1,b.getMinLatitude(),0.000001);
  c=new GeoCircle(PlanetModel.SPHERE,-Math.PI * 0.5,0.0,0.1);
  b=c.getBounds(null);
  assertTrue(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertTrue(b.checkNoBottomLatitudeBound());
  assertEquals(-Math.PI * 0.5 + 0.1,b.getMaxLatitude(),0.000001);
  c=new GeoCircle(PlanetModel.SPHERE,0.01,0.0,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.11,b.getMaxLatitude(),0.000001);
  assertEquals(-0.09,b.getMinLatitude(),0.000001);
  assertEquals(-0.1,b.getLeftLongitude(),0.00001);
  assertEquals(0.1,b.getRightLongitude(),0.00001);
  c=new GeoCircle(PlanetModel.SPHERE,0.01,Math.PI,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.11,b.getMaxLatitude(),0.000001);
  assertEquals(-0.09,b.getMinLatitude(),0.000001);
  assertEquals(Math.PI - 0.1,b.getLeftLongitude(),0.00001);
  assertEquals(-Math.PI + 0.1,b.getRightLongitude(),0.00001);
  c=new GeoCircle(PlanetModel.SPHERE,0.01,Math.PI * 0.5,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.11,b.getMaxLatitude(),0.000001);
  assertEquals(-0.09,b.getMinLatitude(),0.000001);
  assertEquals(Math.PI * 0.5 - 0.1,b.getLeftLongitude(),0.00001);
  assertEquals(Math.PI * 0.5 + 0.1,b.getRightLongitude(),0.00001);
  c=new GeoCircle(PlanetModel.SPHERE,0.01,-Math.PI * 0.5,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.11,b.getMaxLatitude(),0.000001);
  assertEquals(-0.09,b.getMinLatitude(),0.000001);
  assertEquals(-Math.PI * 0.5 - 0.1,b.getLeftLongitude(),0.00001);
  assertEquals(-Math.PI * 0.5 + 0.1,b.getRightLongitude(),0.00001);
  c=new GeoCircle(PlanetModel.SPHERE,0.01,Math.PI * 0.25,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.11,b.getMaxLatitude(),0.000001);
  assertEquals(-0.09,b.getMinLatitude(),0.000001);
  assertEquals(Math.PI * 0.25 - 0.1,b.getLeftLongitude(),0.00001);
  assertEquals(Math.PI * 0.25 + 0.1,b.getRightLongitude(),0.00001);
  c=new GeoCircle(PlanetModel.SPHERE,0.01,-Math.PI * 0.25,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.11,b.getMaxLatitude(),0.000001);
  assertEquals(-0.09,b.getMinLatitude(),0.000001);
  assertEquals(-Math.PI * 0.25 - 0.1,b.getLeftLongitude(),0.00001);
  assertEquals(-Math.PI * 0.25 + 0.1,b.getRightLongitude(),0.00001);
  c=new GeoCircle(PlanetModel.SPHERE,-0.01,Math.PI * 0.25,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.09,b.getMaxLatitude(),0.000001);
  assertEquals(-0.11,b.getMinLatitude(),0.000001);
  assertEquals(Math.PI * 0.25 - 0.1,b.getLeftLongitude(),0.00001);
  assertEquals(Math.PI * 0.25 + 0.1,b.getRightLongitude(),0.00001);
  c=new GeoCircle(PlanetModel.SPHERE,-0.01,-Math.PI * 0.25,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.09,b.getMaxLatitude(),0.000001);
  assertEquals(-0.11,b.getMinLatitude(),0.000001);
  assertEquals(-Math.PI * 0.25 - 0.1,b.getLeftLongitude(),0.00001);
  assertEquals(-Math.PI * 0.25 + 0.1,b.getRightLongitude(),0.00001);
  c=new GeoCircle(PlanetModel.SPHERE,0.01,-0.5,0.1);
  b=c.getBounds(null);
  assertFalse(b.checkNoLongitudeBound());
  assertFalse(b.checkNoTopLatitudeBound());
  assertFalse(b.checkNoBottomLatitudeBound());
  assertEquals(0.11,b.getMaxLatitude(),0.000001);
  assertEquals(-0.09,b.getMinLatitude(),0.000001);
  assertEquals(-0.6,b.getLeftLongitude(),0.00001);
  assertEquals(-0.4,b.getRightLongitude(),0.00001);
}
