{
  super.configure(httpClient,config);
  if (System.getProperty(LOGIN_CONFIG_PROP) != null) {
    String configValue=System.getProperty(LOGIN_CONFIG_PROP);
    if (configValue != null) {
      logger.info("Setting up SPNego auth with config: " + configValue);
      final String useSubjectCredsProp="javax.security.auth.useSubjectCredsOnly";
      String useSubjectCredsVal=System.getProperty(useSubjectCredsProp);
      if (useSubjectCredsVal == null) {
        System.setProperty(useSubjectCredsProp,"false");
      }
 else       if (!useSubjectCredsVal.toLowerCase(Locale.ROOT).equals("false")) {
        logger.warn("System Property: " + useSubjectCredsProp + " set to: "+ useSubjectCredsVal+ " not false.  SPNego authentication may not be successful.");
      }
      javax.security.auth.login.Configuration.setConfiguration(jaasConfig);
      httpClient.getAuthSchemes().register(AuthSchemes.SPNEGO,new SPNegoSchemeFactory(true,false));
      Credentials useJaasCreds=new Credentials(){
        public String getPassword(){
          return null;
        }
        public Principal getUserPrincipal(){
          return null;
        }
      }
;
      httpClient.getCredentialsProvider().setCredentials(AuthScope.ANY,useJaasCreds);
      httpClient.addRequestInterceptor(bufferedEntityInterceptor);
    }
 else {
      httpClient.getCredentialsProvider().clear();
    }
  }
}
