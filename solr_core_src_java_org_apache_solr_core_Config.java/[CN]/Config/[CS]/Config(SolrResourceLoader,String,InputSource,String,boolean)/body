{
  if (loader == null) {
    loader=new SolrResourceLoader(null);
  }
  this.loader=loader;
  this.name=name;
  this.prefix=(prefix != null && !prefix.endsWith("/")) ? prefix + '/' : prefix;
  try {
    javax.xml.parsers.DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
    if (is == null) {
      InputStream in=loader.openConfig(name);
      if (in instanceof ZkSolrResourceLoader.ZkByteArrayInputStream) {
        zkVersion=((ZkSolrResourceLoader.ZkByteArrayInputStream)in).getStat().getVersion();
        log.info("loaded config {} with version {} ",name,zkVersion);
      }
      is=new InputSource(in);
      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));
    }
    if (is.getSystemId() != null) {
      try {
        dbf.setXIncludeAware(true);
        dbf.setNamespaceAware(true);
      }
 catch (      UnsupportedOperationException e) {
        log.warn(name + " XML parser doesn't support XInclude option");
      }
    }
    final DocumentBuilder db=dbf.newDocumentBuilder();
    db.setEntityResolver(new SystemIdResolver(loader));
    db.setErrorHandler(xmllog);
    try {
      doc=db.parse(is);
      origDoc=copyDoc(doc);
    }
  finally {
      IOUtils.closeQuietly(is.getByteStream());
    }
    if (substituteProps) {
      DOMUtil.substituteProperties(doc,getSubstituteProperties());
    }
  }
 catch (  ParserConfigurationException e) {
    SolrException.log(log,"Exception during parsing file: " + name,e);
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,e);
  }
catch (  SAXException e) {
    SolrException.log(log,"Exception during parsing file: " + name,e);
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,e);
  }
catch (  TransformerException e) {
    SolrException.log(log,"Exception during parsing file: " + name,e);
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,e);
  }
}
