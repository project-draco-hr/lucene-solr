{
  assertU(adoc("id","1","const_s","xx","x_i","100","1_s","a","x:x_i","100","1-1_s","a"));
  assertU(adoc("id","2","const_s","xx","x_i","300","1_s","c","x:x_i","300","1-1_s","c"));
  assertU(adoc("id","3","const_s","xx","x_i","200","1_s","b","x:x_i","200","1-1_s","b"));
  assertU(commit());
  String desc="/response/docs==[{'x_i':300},{'x_i':200},{'x_i':100}]";
  String asc="/response/docs==[{'x_i':100},{'x_i':200},{'x_i':300}]";
  String threeonetwo="/response/docs==[{'x_i':200},{'x_i':100},{'x_i':300}]";
  String q="id:[1 TO 3]";
  assertJQ(req("q",q,"fl","x_i","sort","add(x_i,x_i) desc"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","const_s asc, $x asc","x","add(x_i,x_i)"),asc);
  assertJQ(req("q",q,"fl","x_i","sort","$x asc, const_s asc, $y desc","x","5","y","add(x_i,x_i)"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","add( 10 , 10 ) asc, const_s asc, add(x_i , $const) desc","const","50"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","const_s asc, {!key=foo}add(x_i,x_i) desc"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","{!key=foo}add(x_i,x_i) desc, const_s asc"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","{!key=bar}add(10,20) asc, const_s asc, {!key=foo}add(x_i,x_i) desc"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","{!key=bar v=$s1} asc, {!key=foo v=$s2} desc","s1","add(3,4)","s2","add(x_i,5)"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","{!key=bar v=$s1}asc,const_s asc,{!key=foo v=$s2}desc","s1","add(3,4)","s2","add(x_i,5)"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","1_s asc"),asc);
  assertJQ(req("q",q,"fl","x_i","sort","x:x_i desc"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","1-1_s asc"),asc);
  assertJQ(req("q",q,"fl","x_i","sort","[]_s asc, {!key=foo}add(x_i,x_i) desc"),desc);
  assertJQ(req("q",q,"fl","x_i","sort","{!lucene v='id:3'}desc, {!key=foo}add(x_i,x_i) asc"),threeonetwo);
}
