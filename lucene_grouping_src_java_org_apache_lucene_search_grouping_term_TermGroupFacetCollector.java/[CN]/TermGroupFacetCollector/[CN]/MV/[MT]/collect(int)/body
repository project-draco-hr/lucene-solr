{
  if (doc > groupFieldTermsIndex.docID()) {
    groupFieldTermsIndex.advance(doc);
  }
  int groupOrd;
  if (doc == groupFieldTermsIndex.docID()) {
    groupOrd=groupFieldTermsIndex.ordValue();
  }
 else {
    groupOrd=-1;
  }
  if (facetFieldNumTerms == 0) {
    int segmentGroupedFacetsIndex=groupOrd * (facetFieldNumTerms + 1);
    if (facetPrefix != null || segmentGroupedFacetHits.exists(segmentGroupedFacetsIndex)) {
      return;
    }
    segmentTotalCount++;
    segmentFacetCounts[facetFieldNumTerms]++;
    segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);
    BytesRef groupKey;
    if (groupOrd == -1) {
      groupKey=null;
    }
 else {
      groupKey=BytesRef.deepCopyOf(groupFieldTermsIndex.lookupOrd(groupOrd));
    }
    groupedFacetHits.add(new GroupedFacetHit(groupKey,null));
    return;
  }
  if (doc > facetFieldDocTermOrds.docID()) {
    facetFieldDocTermOrds.advance(doc);
  }
  boolean empty=true;
  if (doc == facetFieldDocTermOrds.docID()) {
    long ord;
    while ((ord=facetFieldDocTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {
      process(groupOrd,(int)ord);
      empty=false;
    }
  }
  if (empty) {
    process(groupOrd,facetFieldNumTerms);
  }
}
