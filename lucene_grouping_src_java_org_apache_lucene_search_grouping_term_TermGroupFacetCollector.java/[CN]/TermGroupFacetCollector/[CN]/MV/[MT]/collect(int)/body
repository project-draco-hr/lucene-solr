{
  if (facetFieldDocTermOrds.isEmpty()) {
    return;
  }
  int groupOrd=groupFieldTermsIndex.getOrd(doc);
  if (facetOrdTermsEnum != null) {
    reuse=facetFieldDocTermOrds.lookup(doc,reuse);
  }
  int chunk;
  boolean first=true;
  int[] buffer=new int[5];
  do {
    chunk=reuse != null ? reuse.read(buffer) : 0;
    if (first && chunk == 0) {
      chunk=1;
      buffer[0]=facetFieldDocTermOrds.numTerms();
    }
    first=false;
    for (int pos=0; pos < chunk; pos++) {
      int facetOrd=buffer[pos];
      if (facetOrd < startFacetOrd || facetOrd >= endFacetOrd) {
        continue;
      }
      int segmentGroupedFacetsIndex=(groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;
      if (segmentGroupedFacetHits.exists(segmentGroupedFacetsIndex)) {
        continue;
      }
      segmentTotalCount++;
      segmentFacetCounts[facetOrd]++;
      segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);
      groupedFacetHits.add(new GroupedFacetHit(groupOrd == 0 ? null : groupFieldTermsIndex.lookup(groupOrd,new BytesRef()),facetOrd == facetFieldDocTermOrds.numTerms() ? null : BytesRef.deepCopyOf(facetFieldDocTermOrds.lookupTerm(facetOrdTermsEnum,facetOrd))));
    }
  }
 while (chunk >= buffer.length);
}
