{
  if (escapeChar == null || sequence1 == null || string == null)   throw new NullPointerException();
  int count=string.length();
  int sequence1Length=sequence1.length();
  if (sequence1Length == 0) {
    StringBuilder result=new StringBuilder((count + 1) * escapeChar.length());
    result.append(escapeChar);
    for (int i=0; i < count; i++) {
      result.append(string.charAt(i));
      result.append(escapeChar);
    }
    return result.toString();
  }
  StringBuilder result=new StringBuilder();
  char first=sequence1.charAt(0);
  int start=0, copyStart=0, firstIndex;
  while (start < count) {
    if ((firstIndex=string.toString().toLowerCase(locale).indexOf(first,start)) == -1)     break;
    boolean found=true;
    if (sequence1.length() > 1) {
      if (firstIndex + sequence1Length > count)       break;
      for (int i=1; i < sequence1Length; i++) {
        if (string.toString().toLowerCase(locale).charAt(firstIndex + i) != sequence1.charAt(i)) {
          found=false;
          break;
        }
      }
    }
    if (found) {
      result.append(string.toString().substring(copyStart,firstIndex));
      result.append(escapeChar);
      result.append(string.toString().substring(firstIndex,firstIndex + sequence1Length));
      copyStart=start=firstIndex + sequence1Length;
    }
 else {
      start=firstIndex + 1;
    }
  }
  if (result.length() == 0 && copyStart == 0)   return string;
  result.append(string.toString().substring(copyStart));
  return result.toString();
}
