{
  converter.setAnalyzer(new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName,    Reader reader){
      Tokenizer tokenizer=new KeywordTokenizer(reader);
      TokenStream filter=new PatternReplaceFilter(tokenizer,Pattern.compile("([^\\p{L}\\p{M}\\p{N}\\p{Cs}]*[\\p{L}\\p{M}\\p{N}\\p{Cs}\\_]+:)|([^\\p{L}\\p{M}\\p{N}\\p{Cs}])+")," ",true);
      filter=new LowerCaseFilter(TEST_VERSION_CURRENT,filter);
      filter=new TrimFilter(TEST_VERSION_CURRENT,filter);
      return new TokenStreamComponents(tokenizer,filter);
    }
  }
);
  assertConvertsTo("test1 +test2",new String[]{"test1 test2"});
  assertConvertsTo("test~",new String[]{"test"});
  assertConvertsTo("field:test",new String[]{"test"});
  assertConvertsTo("This is a test",new String[]{"this is a test"});
  assertConvertsTo(" This is  a test",new String[]{"this is a test"});
  assertConvertsTo("Foo (field:bar) text_hi:??????????????????    ",new String[]{"foo bar ??????????????????"});
}
