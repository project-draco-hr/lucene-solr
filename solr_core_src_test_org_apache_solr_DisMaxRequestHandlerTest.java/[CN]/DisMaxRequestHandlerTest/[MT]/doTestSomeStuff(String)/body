{
  assertQ("basic match",req("guide"),"//*[@numFound='2']","//lst[@name='facet_fields']/lst[@name='t_s']","*[count(//lst[@name='t_s']/int)=3]","//lst[@name='t_s']/int[@name='book'][.='2']","//lst[@name='t_s']/int[@name='movie'][.='1']");
  assertQ("basic cross field matching, boost on same field matching",req("cool stuff"),"//*[@numFound='3']","//result/doc[1]/int[@name='id'][.='42']","//result/doc[2]/int[@name='id'][.='666']","//result/doc[3]/int[@name='id'][.='8675309']");
  assertQ("multi qf",req("q","cool","qt",qt,CommonParams.VERSION,"2.2","qf","subject","qf","features_t"),"//*[@numFound='3']");
  assertQ("multi qf as local params",req("q","{!dismax qf=subject qf=features_t}cool"),"//*[@numFound='3']");
  assertQ("boost query",req("q","cool stuff","qt",qt,CommonParams.VERSION,"2.2","bq","subject:hell^400"),"//*[@numFound='3']","//result/doc[1]/int[@name='id'][.='666']","//result/doc[2]/int[@name='id'][.='42']","//result/doc[3]/int[@name='id'][.='8675309']");
  assertQ("multi boost query",req("q","cool stuff","qt",qt,CommonParams.VERSION,"2.2","bq","subject:hell^400","bq","subject:cool^4",CommonParams.DEBUG_QUERY,"true"),"//*[@numFound='3']","//result/doc[1]/int[@name='id'][.='666']","//result/doc[2]/int[@name='id'][.='8675309']","//result/doc[3]/int[@name='id'][.='42']");
  assertQ("minimum mm is three",req("cool stuff traveling"),"//*[@numFound='2']","//result/doc[1]/int[@name='id'][. ='42']","//result/doc[2]/int[@name='id'][. ='666']");
  assertQ("at 4 mm allows one missing ",req("cool stuff traveling jenny"),"//*[@numFound='3']");
  assertQ("relying on ALTQ from config",req("qt",qt,"fq","id:666","facet","false"),"//*[@numFound='1']");
  assertQ("explicit ALTQ",req("qt",qt,"q.alt","id:9999","fq","id:666","facet","false"),"//*[@numFound='0']");
  assertQ("no query slop == no match",req("qt",qt,"q","\"cool chick\""),"//*[@numFound='0']");
  assertQ("query slop == match",req("qt",qt,"qs","2","q","\"cool chick\""),"//*[@numFound='1']");
}
