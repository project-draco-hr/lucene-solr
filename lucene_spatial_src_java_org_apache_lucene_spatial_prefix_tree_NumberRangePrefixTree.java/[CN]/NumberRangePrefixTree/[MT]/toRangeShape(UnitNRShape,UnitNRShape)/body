{
  startUnit=startUnit.getShapeAtLevel(truncateStartVals(startUnit,0));
  endUnit=endUnit.getShapeAtLevel(truncateEndVals(endUnit,0));
  int cmp=comparePrefix(startUnit,endUnit);
  if (cmp > 0) {
    throw new IllegalArgumentException("Wrong order: " + startUnit + " TO "+ endUnit);
  }
  if (cmp == 0) {
    if (startUnit.getLevel() == endUnit.getLevel()) {
      return startUnit;
    }
 else     if (endUnit.getLevel() > startUnit.getLevel()) {
      if (truncateStartVals(endUnit,startUnit.getLevel()) == startUnit.getLevel()) {
        return endUnit;
      }
    }
 else {
      if (truncateEndVals(startUnit,endUnit.getLevel()) == endUnit.getLevel()) {
        return startUnit;
      }
    }
  }
  return new SpanUnitsNRShape(startUnit,endUnit);
}
