{
  ensureDecoded();
  int startCmp=comparePrefixLV(nrShape.getMinLV(),this);
  if (startCmp > 0) {
    return SpatialRelation.DISJOINT;
  }
  int endCmp=comparePrefixLV(nrShape.getMaxLV(),this);
  if (endCmp < 0) {
    return SpatialRelation.DISJOINT;
  }
  if ((startCmp < 0 || startCmp == 0 && nrShape.getMinLV().getLevel() <= getLevel()) && (endCmp > 0 || endCmp == 0 && nrShape.getMaxLV().getLevel() <= getLevel()))   return SpatialRelation.WITHIN;
  if (startCmp == 0 && endCmp == 0 && nrShape.getMinLV().getLevel() >= getLevel() && nrShape.getMaxLV().getLevel() >= getLevel())   return SpatialRelation.CONTAINS;
  return SpatialRelation.INTERSECTS;
}
