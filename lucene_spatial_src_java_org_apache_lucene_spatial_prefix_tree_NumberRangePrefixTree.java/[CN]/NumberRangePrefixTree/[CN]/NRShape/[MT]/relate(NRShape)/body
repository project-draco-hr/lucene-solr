{
  int extMin_intMax=comparePrefixLV(ext.getMinLV(),getMaxLV());
  if (extMin_intMax > 0)   return SpatialRelation.DISJOINT;
  int extMax_intMin=comparePrefixLV(ext.getMaxLV(),getMinLV());
  if (extMax_intMin < 0)   return SpatialRelation.DISJOINT;
  int extMin_intMin=comparePrefixLV(ext.getMinLV(),getMinLV());
  int extMax_intMax=comparePrefixLV(ext.getMaxLV(),getMaxLV());
  if ((extMin_intMin > 0 || extMin_intMin == 0 && ext.getMinLV().getLevel() >= getMinLV().getLevel()) && (extMax_intMax < 0 || extMax_intMax == 0 && ext.getMaxLV().getLevel() >= getMaxLV().getLevel()))   return SpatialRelation.CONTAINS;
  if ((extMin_intMin < 0 || extMin_intMin == 0 && ext.getMinLV().getLevel() <= getMinLV().getLevel()) && (extMax_intMax > 0 || extMax_intMax == 0 && ext.getMaxLV().getLevel() <= getMaxLV().getLevel()))   return SpatialRelation.WITHIN;
  return SpatialRelation.INTERSECTS;
}
