{
  int extMin_intMax=comparePrefix(ext.getMinUnit(),getMaxUnit());
  if (extMin_intMax > 0)   return SpatialRelation.DISJOINT;
  int extMax_intMin=comparePrefix(ext.getMaxUnit(),getMinUnit());
  if (extMax_intMin < 0)   return SpatialRelation.DISJOINT;
  int extMin_intMin=comparePrefix(ext.getMinUnit(),getMinUnit());
  int extMax_intMax=comparePrefix(ext.getMaxUnit(),getMaxUnit());
  if ((extMin_intMin > 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() >= getMinUnit().getLevel()) && (extMax_intMax < 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() >= getMaxUnit().getLevel()))   return SpatialRelation.CONTAINS;
  if ((extMin_intMin < 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() <= getMinUnit().getLevel()) && (extMax_intMax > 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() <= getMaxUnit().getLevel()))   return SpatialRelation.WITHIN;
  return SpatialRelation.INTERSECTS;
}
