{
  assertJQ("/schema/managed","/responseHeader/status==0");
  assertJQ("/config/managed","/managedResources==[]");
  String newEndpoint="/schema/analysis/protwords/english";
  assertJPut(newEndpoint,json("{ 'class':'solr.ManagedWordSetResource' }"),"/responseHeader/status==0");
  assertJQ("/schema/managed","/managedResources/[0]/class=='org.apache.solr.rest.schema.analysis.ManagedWordSetResource'","/managedResources/[0]/resourceId=='/schema/analysis/protwords/english'");
  assertJQ(newEndpoint,"/wordSet/managedList==[]");
  assertJPut(newEndpoint,JSONUtil.toJSON(Arrays.asList("this","is","a","test")),"/responseHeader/status==0");
  assertJQ(newEndpoint,"/wordSet/managedList==['a','is','test','this']","/wordSet/initArgs=={'ignoreCase':false}");
  assertJQ(newEndpoint + "/Test","/responseHeader/status==404");
  assertJPut(newEndpoint,json("{ 'initArgs':{ 'ignoreCase':'true' } }"),"/responseHeader/status==0");
  assertJQ(newEndpoint + "/Test","/responseHeader/status==0");
  assertJPut(newEndpoint,json("{ 'initArgs':{ 'ignoreCase':false } }"),"/responseHeader/status==400");
  assertQ(newEndpoint + "?wt=xml","/response/lst[@name='responseHeader']/int[@name='status']=0","/response/lst[@name='wordSet']/arr[@name='managedList']/str[1]='a'","/response/lst[@name='wordSet']/arr[@name='managedList']/str[2]='is'","/response/lst[@name='wordSet']/arr[@name='managedList']/str[3]='test'","/response/lst[@name='wordSet']/arr[@name='managedList']/str[4]='this'");
  assertJDelete(newEndpoint,"/responseHeader/status==0");
  assertJQ("/config/managed","/managedResources==[]");
}
