{
  String usage="java org.apache.lucene.demo.IndexFiles" + " [-index INDEX_PATH] [-docs DOCS_PATH] [-update]\n\n" + "This indexes the documents in DOCS_PATH, creating a Lucene index"+ "in INDEX_PATH that can be searched with SearchFiles";
  String indexPath="index";
  String docsPath=null;
  boolean create=true;
  for (int i=0; i < args.length; i++) {
    if ("-index".equals(args[i])) {
      indexPath=args[i + 1];
      i++;
    }
 else     if ("-docs".equals(args[i])) {
      docsPath=args[i + 1];
      i++;
    }
 else     if ("-update".equals(args[i])) {
      create=false;
    }
  }
  if (docsPath == null) {
    System.err.println("Usage: " + usage);
    System.exit(1);
  }
  final File docDir=new File(docsPath);
  if (!docDir.exists() || !docDir.canRead()) {
    System.out.println("Document directory '" + docDir.getAbsolutePath() + "' does not exist or is not readable, please check the path");
    System.exit(1);
  }
  Date start=new Date();
  try {
    System.out.println("Indexing to directory '" + indexPath + "'...");
    Directory dir=FSDirectory.open(new File(indexPath));
    Analyzer analyzer=new StandardAnalyzer();
    IndexWriterConfig iwc=new IndexWriterConfig(Version.LUCENE_5_0,analyzer);
    if (create) {
      iwc.setOpenMode(OpenMode.CREATE);
    }
 else {
      iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);
    }
    IndexWriter writer=new IndexWriter(dir,iwc);
    indexDocs(writer,docDir);
    writer.shutdown();
    Date end=new Date();
    System.out.println(end.getTime() - start.getTime() + " total milliseconds");
  }
 catch (  IOException e) {
    System.out.println(" caught a " + e.getClass() + "\n with message: "+ e.getMessage());
  }
}
