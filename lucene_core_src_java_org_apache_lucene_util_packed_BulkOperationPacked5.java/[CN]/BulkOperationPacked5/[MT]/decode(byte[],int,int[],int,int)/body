{
  for (int i=0; i < 8 * iterations; ++i) {
    final int byte0=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=byte0 >>> 3;
    final int byte1=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte0 & 7) << 2) | (byte1 >>> 6);
    values[valuesOffset++]=(byte1 >>> 1) & 31;
    final int byte2=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte1 & 1) << 4) | (byte2 >>> 4);
    final int byte3=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte2 & 15) << 1) | (byte3 >>> 7);
    values[valuesOffset++]=(byte3 >>> 2) & 31;
    final int byte4=blocks[blocksOffset++] & 0xFF;
    values[valuesOffset++]=((byte3 & 3) << 3) | (byte4 >>> 5);
    values[valuesOffset++]=byte4 & 31;
  }
}
