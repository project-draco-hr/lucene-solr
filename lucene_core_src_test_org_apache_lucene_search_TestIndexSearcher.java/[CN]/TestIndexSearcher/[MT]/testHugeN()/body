{
  ExecutorService service=new ThreadPoolExecutor(4,4,0L,TimeUnit.MILLISECONDS,new LinkedBlockingQueue<Runnable>(),new NamedThreadFactory("TestIndexSearcher"));
  IndexSearcher searchers[]=new IndexSearcher[]{new IndexSearcher(reader),new IndexSearcher(reader,service)};
  Query queries[]=new Query[]{new MatchAllDocsQuery(),new TermQuery(new Term("field","1"))};
  Sort sorts[]=new Sort[]{null,new Sort(new SortField("field2",SortField.Type.STRING))};
  Filter filters[]=new Filter[]{null,new QueryWrapperFilter(new TermQuery(new Term("field2","true")))};
  ScoreDoc afters[]=new ScoreDoc[]{null,new FieldDoc(0,0f,new Object[]{new BytesRef("boo!")})};
  for (  IndexSearcher searcher : searchers) {
    for (    ScoreDoc after : afters) {
      for (      Query query : queries) {
        for (        Sort sort : sorts) {
          for (          Filter filter : filters) {
            searcher.search(query,Integer.MAX_VALUE);
            searcher.searchAfter(after,query,Integer.MAX_VALUE);
            searcher.search(query,filter,Integer.MAX_VALUE);
            searcher.searchAfter(after,query,filter,Integer.MAX_VALUE);
            if (sort != null) {
              searcher.search(query,Integer.MAX_VALUE,sort);
              searcher.search(query,filter,Integer.MAX_VALUE,sort);
              searcher.search(query,filter,Integer.MAX_VALUE,sort,true,true);
              searcher.search(query,filter,Integer.MAX_VALUE,sort,true,false);
              searcher.search(query,filter,Integer.MAX_VALUE,sort,false,true);
              searcher.search(query,filter,Integer.MAX_VALUE,sort,false,false);
              searcher.searchAfter(after,query,filter,Integer.MAX_VALUE,sort);
              searcher.searchAfter(after,query,filter,Integer.MAX_VALUE,sort,true,true);
              searcher.searchAfter(after,query,filter,Integer.MAX_VALUE,sort,true,false);
              searcher.searchAfter(after,query,filter,Integer.MAX_VALUE,sort,false,true);
              searcher.searchAfter(after,query,filter,Integer.MAX_VALUE,sort,false,false);
            }
          }
        }
      }
    }
  }
  _TestUtil.shutdownExecutorService(service);
}
