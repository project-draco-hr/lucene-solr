{
  long startTime, endTime;
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  for (int i=100; i != 0; --i) {
    baos.reset();
    encoder.reInit(baos);
    for (    int value : data) {
      encoder.encode(value);
    }
    encoder.close();
  }
  startTime=System.currentTimeMillis();
  for (int factor=loopFactor; factor > 0; --factor) {
    baos.reset();
    encoder.reInit(baos);
    for (    int value : data) {
      encoder.encode(value);
    }
    encoder.close();
  }
  endTime=System.currentTimeMillis();
  long encodeTime=endTime - startTime;
  ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
  IntDecoder decoder=encoder.createMatchingDecoder();
  decoder.reInit(bais);
  for (int i=100; i != 0; --i) {
    bais.mark(baos.size());
    while (decoder.decode() != IntDecoder.EOS) {
    }
    bais.reset();
    decoder.reInit(bais);
  }
  decoder.reInit(bais);
  startTime=System.currentTimeMillis();
  for (int i=loopFactor; i > 0; --i) {
    bais.mark(baos.size());
    while (decoder.decode() != IntDecoder.EOS) {
    }
    bais.reset();
    decoder.reInit(bais);
  }
  endTime=System.currentTimeMillis();
  long decodeTime=endTime - startTime;
  System.out.println(String.format(resultsFormat,encoder,nf.format(baos.size() * 8.0 / data.length),encodeTime,nf.format(encodeTime * 1000000.0 / (loopFactor * data.length)),decodeTime,nf.format(decodeTime * 1000000.0 / (loopFactor * data.length))));
}
