{
  BooleanQuery.Builder current=new BooleanQuery.Builder();
  for (int i=0; i < rnd.nextInt(vals.length) + 1; i++) {
    int qType=0;
    if (level > 0) {
      qType=rnd.nextInt(10);
    }
    Query q;
    if (qType < 3) {
      q=new TermQuery(new Term(field,vals[rnd.nextInt(vals.length)]));
    }
 else     if (qType < 4) {
      String t1=vals[rnd.nextInt(vals.length)];
      String t2=vals[rnd.nextInt(vals.length)];
      q=new PhraseQuery(10,field,t1,t2);
    }
 else     if (qType < 7) {
      q=new WildcardQuery(new Term(field,"w*"));
    }
 else {
      q=randBoolQuery(rnd,allowMust,level - 1,field,vals,cb).build();
    }
    int r=rnd.nextInt(10);
    BooleanClause.Occur occur;
    if (r < 2) {
      occur=BooleanClause.Occur.MUST_NOT;
    }
 else     if (r < 5) {
      if (allowMust) {
        occur=BooleanClause.Occur.MUST;
      }
 else {
        occur=BooleanClause.Occur.SHOULD;
      }
    }
 else {
      occur=BooleanClause.Occur.SHOULD;
    }
    current.add(q,occur);
  }
  if (cb != null)   cb.postCreate(current);
  return current;
}
