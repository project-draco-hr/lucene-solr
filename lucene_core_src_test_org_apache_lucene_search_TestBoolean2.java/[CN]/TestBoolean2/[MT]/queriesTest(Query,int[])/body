{
  if (0 < NUM_FILLER_DOCS) {
    expDocNrs=Arrays.copyOf(expDocNrs,expDocNrs.length);
    for (int i=0; i < expDocNrs.length; i++) {
      expDocNrs[i]=PRE_FILLER_DOCS + ((NUM_FILLER_DOCS + 1) * expDocNrs[i]);
    }
  }
  final int topDocsToCheck=atLeast(1000);
  TopScoreDocCollector collector=TopScoreDocCollector.create(topDocsToCheck);
  searcher.search(query,collector);
  ScoreDoc[] hits1=collector.topDocs().scoreDocs;
  collector=TopScoreDocCollector.create(topDocsToCheck);
  searcher.search(query,collector);
  ScoreDoc[] hits2=collector.topDocs().scoreDocs;
  CheckHits.checkHitsQuery(query,hits1,hits2,expDocNrs);
  collector=TopScoreDocCollector.create(topDocsToCheck);
  singleSegmentSearcher.search(query,collector);
  hits2=collector.topDocs().scoreDocs;
  CheckHits.checkHitsQuery(query,hits1,hits2,expDocNrs);
  assertEquals(mulFactor * collector.totalHits,bigSearcher.search(query,1).totalHits);
  collector=TopScoreDocCollector.create(topDocsToCheck);
  bigSearcher.search(query,collector);
  hits1=collector.topDocs().scoreDocs;
  collector=TopScoreDocCollector.create(topDocsToCheck);
  bigSearcher.search(query,collector);
  hits2=collector.topDocs().scoreDocs;
  CheckHits.checkEqual(query,hits1,hits2);
}
