{
  directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),directory,newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));
  for (int i=0; i < docFields.length; i++) {
    Document doc=new Document();
    doc.add(newTextField(field,docFields[i],Field.Store.NO));
    writer.addDocument(doc);
  }
  writer.close();
  littleReader=DirectoryReader.open(directory);
  searcher=newSearcher(littleReader);
  searcher.setSimilarity(new ClassicSimilarity());
  dir2=new MockDirectoryWrapper(random(),TestUtil.ramCopyOf(directory));
  mulFactor=1;
  int docCount=0;
  if (VERBOSE) {
    System.out.println("\nTEST: now copy index...");
  }
  do {
    if (VERBOSE) {
      System.out.println("\nTEST: cycle...");
    }
    final Directory copy=new MockDirectoryWrapper(random(),TestUtil.ramCopyOf(dir2));
    RandomIndexWriter w=new RandomIndexWriter(random(),dir2);
    w.addIndexes(copy);
    docCount=w.maxDoc();
    w.close();
    mulFactor*=2;
  }
 while (docCount < 3000);
  RandomIndexWriter w=new RandomIndexWriter(random(),dir2,newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(TestUtil.nextInt(random(),50,1000)));
  Document doc=new Document();
  doc.add(newTextField("field2","xxx",Field.Store.NO));
  for (int i=0; i < NUM_EXTRA_DOCS / 2; i++) {
    w.addDocument(doc);
  }
  doc=new Document();
  doc.add(newTextField("field2","big bad bug",Field.Store.NO));
  for (int i=0; i < NUM_EXTRA_DOCS / 2; i++) {
    w.addDocument(doc);
  }
  reader=w.getReader();
  bigSearcher=newSearcher(reader);
  w.close();
}
