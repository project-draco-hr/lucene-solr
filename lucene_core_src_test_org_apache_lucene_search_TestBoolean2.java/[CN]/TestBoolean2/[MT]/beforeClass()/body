{
  NUM_FILLER_DOCS=random().nextBoolean() ? 0 : BooleanScorer.SIZE;
  PRE_FILLER_DOCS=TestUtil.nextInt(random(),0,(NUM_FILLER_DOCS / 2));
  if (NUM_FILLER_DOCS * PRE_FILLER_DOCS > 100000) {
    directory=newFSDirectory(createTempDir());
  }
 else {
    directory=newDirectory();
  }
  RandomIndexWriter writer=new RandomIndexWriter(random(),directory,newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));
  Document doc=new Document();
  for (int filler=0; filler < PRE_FILLER_DOCS; filler++) {
    writer.addDocument(doc);
  }
  for (int i=0; i < docFields.length; i++) {
    doc.add(newTextField(field,docFields[i],Field.Store.NO));
    writer.addDocument(doc);
    doc=new Document();
    for (int filler=0; filler < NUM_FILLER_DOCS; filler++) {
      writer.addDocument(doc);
    }
  }
  writer.close();
  littleReader=DirectoryReader.open(directory);
  searcher=newSearcher(littleReader);
  searcher.setSimilarity(new ClassicSimilarity());
  if (NUM_FILLER_DOCS * PRE_FILLER_DOCS > 100000) {
    singleSegmentDirectory=newFSDirectory(createTempDir());
  }
 else {
    singleSegmentDirectory=newDirectory();
  }
  for (  String fileName : directory.listAll()) {
    if (fileName.startsWith("extra")) {
      continue;
    }
    singleSegmentDirectory.copyFrom(directory,fileName,fileName,IOContext.DEFAULT);
    singleSegmentDirectory.sync(Collections.singleton(fileName));
  }
  IndexWriterConfig iwc=newIndexWriterConfig(new MockAnalyzer(random()));
  iwc.setMergePolicy(newLogMergePolicy());
  try (IndexWriter w=new IndexWriter(singleSegmentDirectory,iwc)){
    w.forceMerge(1,true);
  }
   singleSegmentReader=DirectoryReader.open(singleSegmentDirectory);
  singleSegmentSearcher=newSearcher(singleSegmentReader);
  singleSegmentSearcher.setSimilarity(searcher.getSimilarity(true));
  dir2=new MockDirectoryWrapper(random(),TestUtil.ramCopyOf(directory));
  mulFactor=1;
  int docCount=0;
  if (VERBOSE) {
    System.out.println("\nTEST: now copy index...");
  }
  do {
    if (VERBOSE) {
      System.out.println("\nTEST: cycle...");
    }
    final Directory copy=new MockDirectoryWrapper(random(),TestUtil.ramCopyOf(dir2));
    RandomIndexWriter w=new RandomIndexWriter(random(),dir2);
    w.addIndexes(copy);
    docCount=w.maxDoc();
    w.close();
    mulFactor*=2;
  }
 while (docCount < 3000 * NUM_FILLER_DOCS);
  RandomIndexWriter w=new RandomIndexWriter(random(),dir2,newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(TestUtil.nextInt(random(),50,1000)));
  doc=new Document();
  doc.add(newTextField("field2","xxx",Field.Store.NO));
  for (int i=0; i < NUM_EXTRA_DOCS / 2; i++) {
    w.addDocument(doc);
  }
  doc=new Document();
  doc.add(newTextField("field2","big bad bug",Field.Store.NO));
  for (int i=0; i < NUM_EXTRA_DOCS / 2; i++) {
    w.addDocument(doc);
  }
  reader=w.getReader();
  bigSearcher=newSearcher(reader);
  w.close();
}
