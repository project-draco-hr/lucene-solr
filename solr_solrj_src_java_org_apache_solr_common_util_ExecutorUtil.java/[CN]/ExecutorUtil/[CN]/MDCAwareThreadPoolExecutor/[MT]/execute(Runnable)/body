{
  final Map<String,String> submitterContext=MDC.getCopyOfContextMap();
  StringBuilder contextString=new StringBuilder();
  if (submitterContext != null) {
    Collection<String> values=submitterContext.values();
    for (    String value : values) {
      contextString.append(value + " ");
    }
    if (contextString.length() > 1) {
      contextString.setLength(contextString.length() - 1);
    }
  }
  String ctxStr=contextString.toString().replace("/","//");
  final String submitterContextStr=ctxStr.length() <= MAX_THREAD_NAME_LEN ? ctxStr : ctxStr.substring(0,MAX_THREAD_NAME_LEN);
  final Exception submitterStackTrace=new Exception("Submitter stack trace");
  super.execute(new Runnable(){
    @Override public void run(){
      Map<String,String> threadContext=MDC.getCopyOfContextMap();
      final Thread currentThread=Thread.currentThread();
      final String oldName=currentThread.getName();
      if (submitterContext != null && !submitterContext.isEmpty()) {
        MDC.setContextMap(submitterContext);
        currentThread.setName(oldName + "-processing-" + submitterContextStr);
      }
 else {
        MDC.clear();
      }
      try {
        command.run();
      }
 catch (      Throwable t) {
        if (t instanceof OutOfMemoryError) {
          throw t;
        }
        log.error("Uncaught exception {} thrown by thread: {}",t,currentThread.getName(),submitterStackTrace);
        throw t;
      }
 finally {
        if (threadContext != null && !threadContext.isEmpty()) {
          MDC.setContextMap(threadContext);
        }
 else {
          MDC.clear();
        }
        currentThread.setName(oldName);
      }
    }
  }
);
}
