{
  String test="The quick|JJ red|JJ fox|NN jumped|VB over the lazy|JJ brown|JJ dogs|NN";
  DelimitedPayloadTokenFilter filter=new DelimitedPayloadTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT,new StringReader(test)),DelimitedPayloadTokenFilter.DEFAULT_DELIMITER,new IdentityEncoder());
  TermAttribute termAtt=filter.getAttribute(TermAttribute.class);
  PayloadAttribute payAtt=filter.getAttribute(PayloadAttribute.class);
  assertTermEquals("The",filter,termAtt,payAtt,null);
  assertTermEquals("quick",filter,termAtt,payAtt,"JJ".getBytes("UTF-8"));
  assertTermEquals("red",filter,termAtt,payAtt,"JJ".getBytes("UTF-8"));
  assertTermEquals("fox",filter,termAtt,payAtt,"NN".getBytes("UTF-8"));
  assertTermEquals("jumped",filter,termAtt,payAtt,"VB".getBytes("UTF-8"));
  assertTermEquals("over",filter,termAtt,payAtt,null);
  assertTermEquals("the",filter,termAtt,payAtt,null);
  assertTermEquals("lazy",filter,termAtt,payAtt,"JJ".getBytes("UTF-8"));
  assertTermEquals("brown",filter,termAtt,payAtt,"JJ".getBytes("UTF-8"));
  assertTermEquals("dogs",filter,termAtt,payAtt,"NN".getBytes("UTF-8"));
  assertFalse(filter.incrementToken());
}
