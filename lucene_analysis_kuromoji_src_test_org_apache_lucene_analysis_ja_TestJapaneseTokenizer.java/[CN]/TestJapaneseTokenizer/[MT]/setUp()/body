{
  super.setUp();
  analyzer=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      Tokenizer tokenizer=new JapaneseTokenizer(newAttributeFactory(),readDict(),false,Mode.SEARCH);
      return new TokenStreamComponents(tokenizer,tokenizer);
    }
  }
;
  analyzerNormal=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      Tokenizer tokenizer=new JapaneseTokenizer(newAttributeFactory(),readDict(),false,Mode.NORMAL);
      return new TokenStreamComponents(tokenizer,tokenizer);
    }
  }
;
  analyzerNormalNBest=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      JapaneseTokenizer tokenizer=new JapaneseTokenizer(newAttributeFactory(),readDict(),false,Mode.NORMAL);
      tokenizer.setNBestCost(2000);
      return new TokenStreamComponents(tokenizer,tokenizer);
    }
  }
;
  analyzerNoPunct=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      Tokenizer tokenizer=new JapaneseTokenizer(newAttributeFactory(),readDict(),true,Mode.SEARCH);
      return new TokenStreamComponents(tokenizer,tokenizer);
    }
  }
;
  extendedModeAnalyzerNoPunct=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      Tokenizer tokenizer=new JapaneseTokenizer(newAttributeFactory(),readDict(),true,Mode.EXTENDED);
      return new TokenStreamComponents(tokenizer,tokenizer);
    }
  }
;
}
