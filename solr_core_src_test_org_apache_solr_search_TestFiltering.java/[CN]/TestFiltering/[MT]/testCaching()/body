{
  clearIndex();
  assertU(adoc("id","4","val_i","1"));
  assertU(adoc("id","1","val_i","2"));
  assertU(adoc("id","3","val_i","3"));
  assertU(adoc("id","2","val_i","4"));
  assertU(commit());
  int prevCount;
  prevCount=DelegatingCollector.setLastDelegateCount;
  assertJQ(req("q","*:*","fq","{!frange l=2 u=3 cache=false cost=100}val_i"),"/response/numFound==2");
  assertEquals(1,DelegatingCollector.setLastDelegateCount - prevCount);
  prevCount=DelegatingCollector.setLastDelegateCount;
  assertJQ(req("q","*:*","fq","{!frange l=2 u=3 cache=false cost=100}val_i"),"/response/numFound==2");
  assertEquals(0,DelegatingCollector.setLastDelegateCount - prevCount);
  prevCount=DelegatingCollector.setLastDelegateCount;
  assertJQ(req("q","*:*","fq","{!frange l=2 u=4}val_i"),"/response/numFound==3");
  assertEquals(0,DelegatingCollector.setLastDelegateCount - prevCount);
  prevCount=DelegatingCollector.setLastDelegateCount;
  assertJQ(req("q","*:*","fq","{!frange l=2 u=5 cache=false}val_i"),"/response/numFound==3");
  assertEquals(0,DelegatingCollector.setLastDelegateCount - prevCount);
  prevCount=DelegatingCollector.setLastDelegateCount;
  assertJQ(req("facet","true","facet.field","id","q","*:*","fq","{!frange l=2 u=6 cache=false cost=100}val_i"),"/response/numFound==3");
  assertEquals(1,DelegatingCollector.setLastDelegateCount - prevCount);
  prevCount=DelegatingCollector.setLastDelegateCount;
  assertJQ(req("facet","true","facet.field","id","q","*:*","fq","{!frange l=2 u=6 cache=false cost=100}val_i"),"/response/numFound==3");
  assertEquals(1,DelegatingCollector.setLastDelegateCount - prevCount);
  prevCount=DelegatingCollector.setLastDelegateCount;
  assertJQ(req("facet","true","facet.field","id","q","*:*","fq","{!frange l=2 u=7}val_i"),"/response/numFound==3");
  assertEquals(0,DelegatingCollector.setLastDelegateCount - prevCount);
  prevCount=DelegatingCollector.setLastDelegateCount;
  assertJQ(req("facet","true","facet.field","id","q","*:*","fq","{!frange l=2 u=8 cache=false}val_i"),"/response/numFound==3");
  assertEquals(0,DelegatingCollector.setLastDelegateCount - prevCount);
  assertJQ(req("q","{!cache=false}*:*","start","2","rows","1","sort","val_i asc","fl","val_i"),"/response/docs==[{'val_i':3}]");
}
