{
  SolrParams match_0=params("q","{!frange v=val_i l=0 u=1}","fq","{!frange v=val_i l=1 u=1}","fq","{!frange v=val_i l=0 u=1}","fq","-_query_:\"{!frange v=val_i l=1 u=1}\"","fq","-_query_:\"{!frange v=val_i l=0 u=1}\"");
  SolrParams match_1=params("q","{!frange v=val_i l=0 u=1}","fq","{!frange v=val_i l=0 u=1}","fq","{!frange v=val_i l=0 u=1}","fq","-_query_:\"{!frange v=val_i l=1 u=1}\"","fq","-_query_:\"{!frange v=val_i l=1 u=1}\"");
  final int numDocs=10;
  for (int i=0; i < numDocs; i++) {
    String val=Integer.toString(i);
    assertU(adoc("id",val,f,val));
  }
  assertU(commit());
  assertJQ(req("q","*:*"),"/response/numFound==" + numDocs);
  assertJQ(req(match_1),"/response/numFound==1");
  assertJQ(req(match_0),"/response/numFound==0");
  assertU(commit());
  assertJQ(req(match_0),"/response/numFound==0");
  assertJQ(req(match_1),"/response/numFound==1");
}
