{
  assertTrue(reader.getTopReaderContext().isAtomic);
  AtomicReaderContext context=(AtomicReaderContext)reader.getTopReaderContext();
  final CachingWrapperFilter cacher=new CachingWrapperFilter(filter);
  final DocIdSet originalSet=filter.getDocIdSet(context);
  final DocIdSet cachedSet=cacher.getDocIdSet(context);
  assertTrue(cachedSet.isCacheable());
  assertEquals(shouldCacheable,originalSet.isCacheable());
  if (originalSet.isCacheable()) {
    assertEquals("Cached DocIdSet must be of same class like uncached, if cacheable",originalSet.getClass(),cachedSet.getClass());
  }
 else {
    assertTrue("Cached DocIdSet must be an OpenBitSet if the original one was not cacheable",cachedSet instanceof OpenBitSetDISI || cachedSet == DocIdSet.EMPTY_DOCIDSET);
  }
}
