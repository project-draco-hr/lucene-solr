{
  Directory dir=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergeScheduler(new SerialMergeScheduler()).setMergePolicy(newLogMergePolicy(10)));
  IndexReader reader=IndexReader.open(writer.w,true);
  IndexSearcher searcher=newSearcher(reader,false);
  Document doc=new Document();
  doc.add(newField("id","1",StringField.TYPE_STORED));
  writer.addDocument(doc);
  reader=refreshReader(reader);
  searcher.close();
  searcher=newSearcher(reader,false);
  TopDocs docs=searcher.search(new MatchAllDocsQuery(),1);
  assertEquals("Should find a hit...",1,docs.totalHits);
  final Filter startFilter=new QueryWrapperFilter(new TermQuery(new Term("id","1")));
  CachingWrapperFilter filter=new CachingWrapperFilter(startFilter);
  docs=searcher.search(new MatchAllDocsQuery(),filter,1);
  assertEquals("[query + filter] Should find a hit...",1,docs.totalHits);
  int missCount=filter.missCount;
  assertTrue(missCount > 0);
  Query constantScore=new ConstantScoreQuery(filter);
  docs=searcher.search(constantScore,1);
  assertEquals("[just filter] Should find a hit...",1,docs.totalHits);
  assertEquals(missCount,filter.missCount);
  IndexReader oldReader=reader;
  writer.addDocument(doc);
  reader=refreshReader(reader);
  searcher.close();
  searcher=newSearcher(reader,false);
  docs=searcher.search(new MatchAllDocsQuery(),filter,1);
  assertEquals("[query + filter] Should find 2 hits...",2,docs.totalHits);
  assertTrue(filter.missCount > missCount);
  missCount=filter.missCount;
  constantScore=new ConstantScoreQuery(filter);
  docs=searcher.search(constantScore,1);
  assertEquals("[just filter] Should find a hit...",2,docs.totalHits);
  assertEquals(missCount,filter.missCount);
  IndexReader oldReader2=reader;
  writer.deleteDocuments(new Term("id","1"));
  reader=refreshReader(reader);
  searcher.close();
  searcher=newSearcher(reader,false);
  docs=searcher.search(new MatchAllDocsQuery(),filter,1);
  assertEquals("[query + filter] Should *not* find a hit...",0,docs.totalHits);
  assertEquals(missCount,filter.missCount);
  docs=searcher.search(constantScore,1);
  assertEquals("[just filter] Should *not* find a hit...",0,docs.totalHits);
  assertEquals(missCount,filter.missCount);
  assertTrue(oldReader != null);
  assertTrue(oldReader2 != null);
  searcher.close();
  reader.close();
  writer.close();
  dir.close();
}
