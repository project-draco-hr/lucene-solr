{
  if (label == FST.END_LABEL) {
    if (follow.isFinal()) {
      if (follow.target <= 0) {
        arc.flags=FST.BIT_LAST_ARC;
      }
 else {
        arc.flags=0;
        arc.nextArc=follow.target;
        arc.node=follow.target;
      }
      arc.output=follow.nextFinalOutput;
      arc.label=FST.END_LABEL;
      return arc;
    }
 else {
      return null;
    }
  }
  if (!FST.targetHasArcs(follow)) {
    return null;
  }
  fst.readFirstTargetArc(follow,arc,in);
  if (arc.bytesPerArc != 0 && arc.label != FST.END_LABEL) {
    int low=arc.arcIdx;
    int high=arc.numArcs - 1;
    int mid=0;
    while (low <= high) {
      mid=(low + high) >>> 1;
      in.pos=arc.posArcsStart;
      in.skip(arc.bytesPerArc * mid + 1);
      final int midLabel=fst.readLabel(in);
      final int cmp=midLabel - label;
      if (cmp < 0) {
        low=mid + 1;
      }
 else       if (cmp > 0) {
        high=mid - 1;
      }
 else {
        arc.arcIdx=mid - 1;
        return fst.readNextRealArc(arc,in);
      }
    }
    if (low == arc.numArcs) {
      return null;
    }
    arc.arcIdx=(low > high ? high : low);
    return fst.readNextRealArc(arc,in);
  }
  fst.readFirstRealTargetArc(follow.target,arc,in);
  while (true) {
    if (arc.label >= label) {
      return arc;
    }
 else     if (arc.isLast()) {
      return null;
    }
 else {
      fst.readNextRealArc(arc,in);
    }
  }
}
