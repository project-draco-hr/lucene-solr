{
  super(input);
  this.tokens=new LinkedList<Token>();
  this.minWordSize=minWordSize;
  this.minSubwordSize=minSubwordSize;
  this.maxSubwordSize=maxSubwordSize;
  this.onlyLongestMatch=onlyLongestMatch;
  if (dictionary == null || dictionary instanceof CharArraySet) {
    this.dictionary=(CharArraySet)dictionary;
  }
 else {
    this.dictionary=new CharArraySet(matchVersion,dictionary.size(),false);
    addAllLowerCase(this.dictionary,dictionary);
  }
}
