{
  log.info("SolrDispatchFilter.init()");
  boolean abortOnConfigurationError=true;
  try {
    this.pathPrefix=config.getInitParameter("path-prefix");
    SolrCore core=null;
    multicore=MultiCore.getRegistry();
    String instanceDir=SolrResourceLoader.locateInstanceDir();
    File multiconfig=new File(instanceDir,"multicore.xml");
    log.info("looking for multicore.xml: " + multiconfig.getAbsolutePath());
    if (multiconfig.exists()) {
      multicore.load(instanceDir,multiconfig);
    }
    if (multicore.isEnabled()) {
      core=multicore.getDefaultCore();
      if (core == null) {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Multicore configuration does not include a default");
      }
      singlecore=null;
    }
 else {
      singlecore=new SolrCore(null,null,new SolrConfig(),null);
      core=singlecore;
    }
    log.info("user.dir=" + System.getProperty("user.dir"));
    Config solrConfig=core.getSolrConfig();
    long uploadLimitKB=solrConfig.getInt("requestDispatcher/requestParsers/@multipartUploadLimitInKB",2000);
    boolean enableRemoteStreams=solrConfig.getBool("requestDispatcher/requestParsers/@enableRemoteStreaming",false);
    parsers=new SolrRequestParsers(enableRemoteStreams,uploadLimitKB);
    this.handleSelect=solrConfig.getBool("requestDispatcher/@handleSelect",false);
    abortOnConfigurationError=solrConfig.getBool("abortOnConfigurationError",true);
  }
 catch (  Throwable t) {
    log.log(Level.SEVERE,"Could not start SOLR. Check solr/home property",t);
    SolrConfig.severeErrors.add(t);
    SolrCore.log(t);
  }
  if (abortOnConfigurationError && SolrConfig.severeErrors.size() > 0) {
    StringWriter sw=new StringWriter();
    PrintWriter out=new PrintWriter(sw);
    out.println("Severe errors in solr configuration.\n");
    out.println("Check your log files for more detailed information on what may be wrong.\n");
    out.println("If you want solr to continue after configuration errors, change: \n");
    out.println(" <abortOnConfigurationError>false</abortOnConfigurationError>\n");
    out.println("in solrconfig.xml\n");
    for (    Throwable t : SolrConfig.severeErrors) {
      out.println("-------------------------------------------------------------");
      t.printStackTrace(out);
    }
    out.flush();
    abortErrorMessage=sw.toString();
  }
  log.info("SolrDispatchFilter.init() done");
}
