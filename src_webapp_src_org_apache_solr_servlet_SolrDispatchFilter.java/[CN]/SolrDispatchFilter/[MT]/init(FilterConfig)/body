{
  log.info("SolrDispatchFilter.init()");
  boolean abortOnConfigurationError=true;
  try {
    this.pathPrefix=config.getInitParameter("path-prefix");
    this.solrConfigFilename=config.getInitParameter("solrconfig-filename");
    this.cores=initMultiCore(config);
    if (cores != null && cores.isEnabled()) {
      abortOnConfigurationError=false;
      singleCoreDescriptor=null;
      for (      SolrCore c : cores.getCores()) {
        if (c.getSolrConfig().getBool("abortOnConfigurationError",false)) {
          abortOnConfigurationError=true;
          break;
        }
      }
    }
 else {
      SolrConfig cfg=this.solrConfigFilename == null ? new SolrConfig() : new SolrConfig(this.solrConfigFilename);
      singleCoreDescriptor=new CoreDescriptor((CoreContainer)null);
      singleCoreDescriptor.init("",cfg.getResourceLoader().getInstanceDir());
      SolrCore singlecore=new SolrCore(null,null,cfg,null,singleCoreDescriptor);
      singleCoreDescriptor.setCore(singlecore);
      abortOnConfigurationError=cfg.getBool("abortOnConfigurationError",abortOnConfigurationError);
    }
    log.info("user.dir=" + System.getProperty("user.dir"));
  }
 catch (  Throwable t) {
    log.log(Level.SEVERE,"Could not start SOLR. Check solr/home property",t);
    SolrConfig.severeErrors.add(t);
    SolrCore.log(t);
  }
  if (abortOnConfigurationError && SolrConfig.severeErrors.size() > 0) {
    StringWriter sw=new StringWriter();
    PrintWriter out=new PrintWriter(sw);
    out.println("Severe errors in solr configuration.\n");
    out.println("Check your log files for more detailed information on what may be wrong.\n");
    out.println("If you want solr to continue after configuration errors, change: \n");
    out.println(" <abortOnConfigurationError>false</abortOnConfigurationError>\n");
    if (cores != null && cores.isEnabled()) {
      out.println("in solr.xml\n");
    }
 else {
      out.println("in solrconfig.xml\n");
    }
    for (    Throwable t : SolrConfig.severeErrors) {
      out.println("-------------------------------------------------------------");
      t.printStackTrace(out);
    }
    out.flush();
    abortErrorMessage=sw.toString();
  }
  log.info("SolrDispatchFilter.init() done");
}
