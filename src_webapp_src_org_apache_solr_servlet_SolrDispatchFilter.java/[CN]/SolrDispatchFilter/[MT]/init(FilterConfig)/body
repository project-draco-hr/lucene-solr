{
  log.info("SolrDispatchFilter.init()");
  boolean abortOnConfigurationError=true;
  CoreContainer.Initializer init=createInitializer();
  try {
    this.pathPrefix=config.getInitParameter("path-prefix");
    init.setSolrConfigFilename(config.getInitParameter("solrconfig-filename"));
    this.cores=init.initialize();
    abortOnConfigurationError=init.isAbortOnConfigurationError();
    log.info("user.dir=" + System.getProperty("user.dir"));
  }
 catch (  Throwable t) {
    log.error("Could not start SOLR. Check solr/home property",t);
    SolrConfig.severeErrors.add(t);
    SolrCore.log(t);
  }
  if (abortOnConfigurationError && SolrConfig.severeErrors.size() > 0) {
    StringWriter sw=new StringWriter();
    PrintWriter out=new PrintWriter(sw);
    out.println("Severe errors in solr configuration.\n");
    out.println("Check your log files for more detailed information on what may be wrong.\n");
    out.println("If you want solr to continue after configuration errors, change: \n");
    out.println(" <abortOnConfigurationError>false</abortOnConfigurationError>\n");
    out.println("in " + init.getSolrConfigFilename() + "\n");
    for (    Throwable t : SolrConfig.severeErrors) {
      out.println("-------------------------------------------------------------");
      t.printStackTrace(out);
    }
    out.flush();
    abortErrorMessage=sw.toString();
  }
  log.info("SolrDispatchFilter.init() done");
}
