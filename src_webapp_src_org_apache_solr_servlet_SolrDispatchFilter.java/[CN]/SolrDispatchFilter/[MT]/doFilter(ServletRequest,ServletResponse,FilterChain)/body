{
  if (abortErrorMessage != null) {
    ((HttpServletResponse)response).sendError(500,abortErrorMessage);
    return;
  }
  if (request instanceof HttpServletRequest) {
    SolrQueryRequest solrReq=null;
    HttpServletRequest req=(HttpServletRequest)request;
    try {
      String path=req.getServletPath();
      if (req.getPathInfo() != null) {
        path+=req.getPathInfo();
      }
      if (pathPrefix != null && path.startsWith(pathPrefix)) {
        path=path.substring(pathPrefix.length());
      }
      int idx=path.indexOf(':');
      if (idx > 0) {
        path=path.substring(0,idx);
      }
      SolrRequestHandler handler=core.getRequestHandler(path);
      if (handler == null && handleSelect) {
        if ("/select".equals(path) || "/select/".equals(path)) {
          solrReq=parsers.parse(path,req);
          String qt=solrReq.getParams().get(SolrParams.QT);
          handler=core.getRequestHandler(qt);
          if (handler == null) {
            throw new SolrException(400,"unknown handler: " + qt);
          }
        }
      }
      if (handler != null) {
        if (solrReq == null) {
          solrReq=parsers.parse(path,req);
        }
        SolrQueryResponse solrRsp=new SolrQueryResponse();
        this.execute(req,handler,solrReq,solrRsp);
        if (solrRsp.getException() != null) {
          sendError((HttpServletResponse)response,solrRsp.getException());
          return;
        }
        QueryResponseWriter responseWriter=core.getQueryResponseWriter(solrReq);
        response.setContentType(responseWriter.getContentType(solrReq,solrRsp));
        PrintWriter out=response.getWriter();
        responseWriter.write(out,solrReq,solrRsp);
        return;
      }
    }
 catch (    Throwable ex) {
      sendError((HttpServletResponse)response,ex);
      return;
    }
 finally {
      if (solrReq != null) {
        solrReq.close();
      }
    }
  }
  chain.doFilter(request,response);
}
