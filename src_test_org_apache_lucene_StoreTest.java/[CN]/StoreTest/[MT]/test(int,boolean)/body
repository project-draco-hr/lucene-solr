{
  Random gen=new Random(1251971);
  int i;
  Date veryStart=new Date();
  Date start=new Date();
  Directory store;
  if (ram)   store=new RAMDirectory();
 else   store=new FSDirectory("test.store",true);
  final int LENGTH_MASK=0xFFF;
  for (i=0; i < count; i++) {
    String name=i + ".dat";
    int length=gen.nextInt() & LENGTH_MASK;
    byte b=(byte)(gen.nextInt() & 0x7F);
    OutputStream file=store.createFile(name);
    for (int j=0; j < length; j++)     file.writeByte(b);
    file.close();
  }
  store.close();
  Date end=new Date();
  System.out.print(end.getTime() - start.getTime());
  System.out.println(" total milliseconds to create");
  gen=new Random(1251971);
  start=new Date();
  if (!ram)   store=new FSDirectory("test.store",false);
  for (i=0; i < count; i++) {
    String name=i + ".dat";
    int length=gen.nextInt() & LENGTH_MASK;
    byte b=(byte)(gen.nextInt() & 0x7F);
    InputStream file=store.openFile(name);
    if (file.length() != length)     throw new Exception("length incorrect");
    for (int j=0; j < length; j++)     if (file.readByte() != b)     throw new Exception("contents incorrect");
    file.close();
  }
  end=new Date();
  System.out.print(end.getTime() - start.getTime());
  System.out.println(" total milliseconds to read");
  gen=new Random(1251971);
  start=new Date();
  for (i=0; i < count; i++) {
    String name=i + ".dat";
    store.deleteFile(name);
  }
  end=new Date();
  System.out.print(end.getTime() - start.getTime());
  System.out.println(" total milliseconds to delete");
  System.out.print(end.getTime() - veryStart.getTime());
  System.out.println(" total milliseconds");
  store.close();
}
