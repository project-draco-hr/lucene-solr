{
  if (numTokens < MAX_NUM_TOKENS_PER_GROUP) {
    if (numTokens == 0) {
      startOffset=matchStartOffset=token.startOffset();
      endOffset=matchEndOffset=token.endOffset();
      tot+=score;
    }
 else {
      startOffset=Math.min(startOffset,token.startOffset());
      endOffset=Math.max(endOffset,token.endOffset());
      if (score > 0) {
        if (tot == 0) {
          matchStartOffset=token.startOffset();
          matchEndOffset=token.endOffset();
        }
 else {
          matchStartOffset=Math.min(matchStartOffset,token.startOffset());
          matchEndOffset=Math.max(matchEndOffset,token.endOffset());
        }
        tot+=score;
      }
    }
    tokens[numTokens]=(Token)token.clone();
    scores[numTokens]=score;
    numTokens++;
  }
}
