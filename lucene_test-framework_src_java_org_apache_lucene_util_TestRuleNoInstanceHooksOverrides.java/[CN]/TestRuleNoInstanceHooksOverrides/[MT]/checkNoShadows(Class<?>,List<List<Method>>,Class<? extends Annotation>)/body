{
  List<List<Method>> methodHierarchy=filterIgnored(annotatedWith(all,ann));
  List<List<Method>> noOverrides=removeOverrides(methodHierarchy);
  if (!noOverrides.equals(methodHierarchy)) {
    Set<Method> shadowed=new HashSet<Method>(flatten(methodHierarchy));
    shadowed.removeAll(flatten(noOverrides));
    StringBuilder b=new StringBuilder();
    for (    Method m : shadowed) {
      String sig=signature(m);
      for (      Method other : flatten(methodHierarchy)) {
        if (other != m && sig.equals(signature(other))) {
          b.append("Method: " + m.toString() + "#"+ sig+ " possibly overriden by "+ other.toString()+ "#"+ signature(other)+ "\n");
        }
      }
    }
    throw new RuntimeException("There are overridden methods annotated with " + ann.getName() + ". These methods would not be executed by JUnit and need to manually chain themselves which can lead to"+ " maintenance problems. Consider using different method names or make hook methods private.\n"+ b.toString().trim());
  }
}
