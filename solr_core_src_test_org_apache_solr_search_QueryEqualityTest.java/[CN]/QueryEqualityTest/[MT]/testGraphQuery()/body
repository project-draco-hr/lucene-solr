{
  SolrQueryRequest req=req("from","node_s","to","edge_s","traversalFilter","foo","returnOnlyLeaf","true","returnRoot","false","maxDepth","2","useAutn","false");
  assertQueryEquals("graph",req,"{!graph from=node_s to=edge_s}*:*","{!graph from=$from to=$to}*:*");
  assertQueryEquals("graph",req,"{!graph from=node_s to=edge_s traversalFilter=foo}*:*","{!graph from=$from to=$to traversalFilter=$traversalFilter}*:*");
  assertQueryEquals("graph",req,"{!graph from=node_s to=edge_s traversalFilter=foo returnOnlyLeaf=true}*:*","{!graph from=$from to=$to traversalFilter=$traversalFilter returnOnlyLeaf=$returnOnlyLeaf}*:*");
  assertQueryEquals("graph",req,"{!graph from=node_s to=edge_s traversalFilter=foo returnOnlyLeaf=true returnRoot=false}*:*","{!graph from=$from to=$to traversalFilter=$traversalFilter returnOnlyLeaf=$returnOnlyLeaf returnRoot=$returnRoot}*:*");
  assertQueryEquals("graph",req,"{!graph from=node_s to=edge_s traversalFilter=foo returnOnlyLeaf=true returnRoot=false maxDepth=2}*:*","{!graph from=$from to=$to traversalFilter=$traversalFilter returnOnlyLeaf=$returnOnlyLeaf returnRoot=$returnRoot maxDepth=$maxDepth}*:*");
  assertQueryEquals("graph",req,"{!graph from=node_s to=edge_s traversalFilter=foo returnOnlyLeaf=true returnRoot=false maxDepth=2 useAutn=false}*:*","{!graph from=$from to=$to traversalFilter=$traversalFilter returnOnlyLeaf=$returnOnlyLeaf returnRoot=$returnRoot maxDepth=$maxDepth useAutn=$useAutn}*:*");
}
