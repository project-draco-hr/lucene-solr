{
  final PagedGrowableWriter newWriter=new PagedGrowableWriter(newSize,pageSize(),startBitsPerValue,acceptableOverheadRatio,false);
  final int numCommonPages=Math.min(newWriter.subWriters.length,subWriters.length);
  final long[] copyBuffer=new long[1024];
  for (int i=0; i < newWriter.subWriters.length; ++i) {
    final int valueCount=i == newWriter.subWriters.length - 1 ? lastPageSize(newSize) : pageSize();
    final int bpv=i < numCommonPages ? subWriters[i].getBitsPerValue() : startBitsPerValue;
    newWriter.subWriters[i]=new GrowableWriter(bpv,valueCount,acceptableOverheadRatio);
    if (i < numCommonPages) {
      final int copyLength=Math.min(valueCount,subWriters[i].size());
      PackedInts.copy(subWriters[i],0,newWriter.subWriters[i].getMutable(),0,copyLength,copyBuffer);
    }
  }
  return newWriter;
}
