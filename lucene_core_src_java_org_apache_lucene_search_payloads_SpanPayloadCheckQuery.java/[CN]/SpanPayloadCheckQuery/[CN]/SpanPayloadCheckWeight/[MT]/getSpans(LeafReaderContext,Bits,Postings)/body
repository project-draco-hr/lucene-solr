{
  final PayloadSpanCollector collector=new PayloadSpanCollector();
  Spans matchSpans=matchWeight.getSpans(context,acceptDocs,requiredPostings.atLeast(Postings.PAYLOADS));
  return (matchSpans == null) ? null : new FilterSpans(matchSpans){
    @Override protected AcceptStatus accept(    Spans candidate) throws IOException {
      collector.reset();
      candidate.collect(collector);
      Collection<byte[]> collected=collector.getPayloads();
      if (match instanceof SpanNearQuery) {
        return checkCompositePayloads(collected);
      }
 else {
        return checkOrderedPayloads(collected);
      }
    }
  }
;
}
