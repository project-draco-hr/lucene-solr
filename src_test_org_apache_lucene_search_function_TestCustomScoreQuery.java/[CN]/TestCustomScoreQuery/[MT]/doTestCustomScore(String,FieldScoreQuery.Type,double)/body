{
  float boost=(float)dboost;
  IndexSearcher s=new IndexSearcher(dir);
  FieldScoreQuery qValSrc=new FieldScoreQuery(field,tp);
  QueryParser qp=new QueryParser(TEXT_FIELD,anlzr);
  String qtxt="bleeding person chain knowledge";
  Query q1=qp.parse(qtxt);
  log(q1);
  CustomScoreQuery q2CustomNeutral=new CustomScoreQuery(q1);
  q2CustomNeutral.setBoost(boost);
  log(q2CustomNeutral);
  CustomScoreQuery q3CustomMul=new CustomScoreQuery(q1,qValSrc);
  q3CustomMul.setStrict(true);
  q3CustomMul.setBoost(boost);
  log(q3CustomMul);
  CustomScoreQuery q4CustomAdd=new CustomScoreQuery(q1,qValSrc){
    public String name(){
      return "customAdd";
    }
    public float customScore(    int doc,    float subQueryScore,    float valSrcScore){
      return subQueryScore + valSrcScore;
    }
    public Explanation customExplain(    int doc,    Explanation subQueryExpl,    Explanation valSrcExpl){
      float valSrcScore=valSrcExpl == null ? 0 : valSrcExpl.getValue();
      Explanation exp=new Explanation(valSrcScore + subQueryExpl.getValue(),"custom score: sum of:");
      exp.addDetail(subQueryExpl);
      if (valSrcExpl != null) {
        exp.addDetail(valSrcExpl);
      }
      return exp;
    }
  }
;
  q4CustomAdd.setStrict(true);
  q4CustomAdd.setBoost(boost);
  log(q4CustomAdd);
  CustomScoreQuery q5CustomMulAdd=new CustomScoreQuery(q1,qValSrc){
    public String name(){
      return "customMulAdd";
    }
    public float customScore(    int doc,    float subQueryScore,    float valSrcScore){
      return (1 + subQueryScore) * valSrcScore;
    }
    public Explanation customExplain(    int doc,    Explanation subQueryExpl,    Explanation valSrcExpl){
      Explanation exp=new Explanation(1 + subQueryExpl.getValue(),"sum of:");
      exp.addDetail(subQueryExpl);
      exp.addDetail(new Explanation(1,"const 1"));
      if (valSrcExpl == null) {
        exp.setDescription("CustomMulAdd, sum of:");
        return exp;
      }
      Explanation exp2=new Explanation(valSrcExpl.getValue() * exp.getValue(),"custom score: product of:");
      exp2.addDetail(valSrcExpl);
      exp2.addDetail(exp);
      return exp2;
    }
  }
;
  q5CustomMulAdd.setStrict(true);
  q5CustomMulAdd.setBoost(boost);
  log(q5CustomMulAdd);
  TopDocs td1=s.search(q1,null,1000);
  TopDocs td2CustomNeutral=s.search(q2CustomNeutral,null,1000);
  TopDocs td3CustomMul=s.search(q3CustomMul,null,1000);
  TopDocs td4CustomAdd=s.search(q4CustomAdd,null,1000);
  TopDocs td5CustomMulAdd=s.search(q5CustomMulAdd,null,1000);
  HashMap h1=topDocsToMap(td1);
  HashMap h2CustomNeutral=topDocsToMap(td2CustomNeutral);
  HashMap h3CustomMul=topDocsToMap(td3CustomMul);
  HashMap h4CustomAdd=topDocsToMap(td4CustomAdd);
  HashMap h5CustomMulAdd=topDocsToMap(td5CustomMulAdd);
  verifyResults(boost,s,h1,h2CustomNeutral,h3CustomMul,h4CustomAdd,h5CustomMulAdd,q1,q2CustomNeutral,q3CustomMul,q4CustomAdd,q5CustomMulAdd);
}
