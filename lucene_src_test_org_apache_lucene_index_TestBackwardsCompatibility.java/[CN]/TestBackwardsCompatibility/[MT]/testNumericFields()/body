{
  for (int i=0; i < oldNames.length; i++) {
    unzip(getDataFile("index." + oldNames[i] + ".zip"),oldNames[i]);
    String fullPath=fullDir(oldNames[i]);
    Directory dir=newFSDirectory(new File(fullPath));
    IndexSearcher searcher=new IndexSearcher(dir,true);
    for (int id=10; id < 15; id++) {
      ScoreDoc[] hits=searcher.search(NumericRangeQuery.newIntRange("trieInt",4,Integer.valueOf(id),Integer.valueOf(id),true,true),100).scoreDocs;
      assertEquals("wrong number of hits",1,hits.length);
      Document d=searcher.doc(hits[0].doc);
      assertEquals(String.valueOf(id),d.get("id"));
      hits=searcher.search(NumericRangeQuery.newLongRange("trieLong",4,Long.valueOf(id),Long.valueOf(id),true,true),100).scoreDocs;
      assertEquals("wrong number of hits",1,hits.length);
      d=searcher.doc(hits[0].doc);
      assertEquals(String.valueOf(id),d.get("id"));
    }
    ScoreDoc[] hits=searcher.search(NumericRangeQuery.newIntRange("trieInt",4,Integer.MIN_VALUE,Integer.MAX_VALUE,false,false),100).scoreDocs;
    assertEquals("wrong number of hits",34,hits.length);
    hits=searcher.search(NumericRangeQuery.newLongRange("trieLong",4,Long.MIN_VALUE,Long.MAX_VALUE,false,false),100).scoreDocs;
    assertEquals("wrong number of hits",34,hits.length);
    int[] fci=FieldCache.DEFAULT.getInts(searcher.getIndexReader(),"trieInt");
    for (    int val : fci) {
      assertTrue("value in id bounds",val >= 0 && val < 35);
    }
    long[] fcl=FieldCache.DEFAULT.getLongs(searcher.getIndexReader(),"trieLong");
    for (    long val : fcl) {
      assertTrue("value in id bounds",val >= 0L && val < 35L);
    }
    searcher.close();
    dir.close();
    rmDir(oldNames[i]);
  }
}
