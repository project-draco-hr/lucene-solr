{
  meta.writeVInt(field.number);
  meta.writeByte(BYTES);
  int minLength=Integer.MAX_VALUE;
  int maxLength=Integer.MIN_VALUE;
  final long startFP=data.getFilePointer();
  for (  BytesRef v : values) {
    minLength=Math.min(minLength,v.length);
    maxLength=Math.max(maxLength,v.length);
    data.writeBytes(v.bytes,v.offset,v.length);
  }
  meta.writeLong(startFP);
  meta.writeLong(data.getFilePointer() - startFP);
  meta.writeVInt(minLength);
  meta.writeVInt(maxLength);
  if (minLength != maxLength) {
    meta.writeVInt(PackedInts.VERSION_CURRENT);
    meta.writeVInt(BLOCK_SIZE);
    final MonotonicBlockPackedWriter writer=new MonotonicBlockPackedWriter(data,BLOCK_SIZE);
    long addr=0;
    for (    BytesRef v : values) {
      addr+=v.length;
      writer.add(addr);
    }
    writer.finish();
  }
}
