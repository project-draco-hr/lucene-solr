{
  clearIndex();
  assertU(commit());
  long version=addAndGetVersion(sdoc("id","1"),null);
  assertU(commit("softCommit","true"));
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  h.reload();
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  assertU(commit("softCommit","true"));
  assertJQ(req("q","id:1"),"/response/numFound==1");
  Random rand=random();
  int iter=atLeast(20);
  for (int i=0; i < iter; i++) {
    if (rand.nextBoolean()) {
      version=addAndGetVersion(sdoc("id","1"),null);
    }
    if (rand.nextBoolean()) {
      if (rand.nextBoolean()) {
        assertU(commit("openSearcher","false"));
      }
 else {
        boolean softCommit=rand.nextBoolean();
        System.out.println("!!! softCommit" + softCommit);
      }
    }
    if (rand.nextBoolean()) {
      assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
    }
    if (rand.nextBoolean()) {
      assertJQ(req("q","id:1"),"/response/numFound==1");
    }
    if (rand.nextBoolean()) {
      h.reload();
    }
  }
}
