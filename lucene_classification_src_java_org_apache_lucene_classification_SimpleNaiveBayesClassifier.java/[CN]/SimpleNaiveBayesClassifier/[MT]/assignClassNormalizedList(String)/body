{
  List<ClassificationResult<BytesRef>> assignedClasses=new ArrayList<>();
  Terms classes=MultiFields.getTerms(leafReader,classFieldName);
  if (classes != null) {
    TermsEnum classesEnum=classes.iterator();
    BytesRef next;
    String[] tokenizedText=tokenize(inputDocument);
    int docsWithClassSize=countDocsWithClass();
    while ((next=classesEnum.next()) != null) {
      if (next.length > 0) {
        Term term=new Term(this.classFieldName,next);
        double clVal=calculateLogPrior(term,docsWithClassSize) + calculateLogLikelihood(tokenizedText,term,docsWithClassSize);
        assignedClasses.add(new ClassificationResult<>(term.bytes(),clVal));
      }
    }
  }
  return normClassificationResults(assignedClasses);
}
