{
  List<ClassificationResult<BytesRef>> assignedClasses=new ArrayList<>();
  Terms classes=MultiFields.getTerms(leafReader,classFieldName);
  TermsEnum classesEnum=classes.iterator();
  BytesRef next;
  String[] tokenizedText=tokenize(inputDocument);
  int docsWithClassSize=countDocsWithClass();
  while ((next=classesEnum.next()) != null) {
    if (next.length > 0) {
      next=BytesRef.deepCopyOf(next);
      double clVal=calculateLogPrior(next,docsWithClassSize) + calculateLogLikelihood(tokenizedText,next,docsWithClassSize);
      assignedClasses.add(new ClassificationResult<>(next,clVal));
    }
  }
  ArrayList<ClassificationResult<BytesRef>> assignedClassesNorm=normClassificationResults(assignedClasses);
  return assignedClassesNorm;
}
