{
  UpdateHandler uhandler=req.getCore().getUpdateHandler();
  UpdateLog ulog=uhandler.getUpdateLog();
  ulog.init(uhandler,req.getCore());
  clearIndex();
  assertU(commit());
  String docId=Integer.toString(1);
  assertU(adoc("id",docId));
  assertU(commit());
  Long maxVersionFromIndex=ulog.getMaxVersionFromIndex();
  assertNotNull(maxVersionFromIndex);
  assertTrue(maxVersionFromIndex != 0L);
  VersionInfo vInfo=ulog.getVersionInfo();
  Long version=vInfo.getVersionFromIndex(new BytesRef(docId));
  assertNotNull("version info should not be null for test doc: " + docId,version);
  assertTrue("max version from index should be less than or equal to the version of first doc added, diff: " + (version - maxVersionFromIndex),maxVersionFromIndex <= version);
  BytesRef idBytes=new BytesRef(docId);
  int bucketHash=Hash.murmurhash3_x86_32(idBytes.bytes,idBytes.offset,idBytes.length,0);
  VersionBucket bucket=vInfo.bucket(bucketHash);
  assertTrue(bucket.highest == version.longValue());
  docId=Integer.toString(2);
  assertU(adoc("id",docId));
  assertU(commit());
  maxVersionFromIndex=ulog.getMaxVersionFromIndex();
  assertNotNull(maxVersionFromIndex);
  assertTrue(maxVersionFromIndex != 0L);
  vInfo=ulog.getVersionInfo();
  version=vInfo.getVersionFromIndex(new BytesRef(docId));
  assertNotNull("version info should not be null for test doc: " + docId,version);
  assertTrue("max version from index should be less than version of last doc added, diff: " + (version - maxVersionFromIndex),maxVersionFromIndex < version);
  idBytes=new BytesRef(docId);
  bucketHash=Hash.murmurhash3_x86_32(idBytes.bytes,idBytes.offset,idBytes.length,0);
  bucket=vInfo.bucket(bucketHash);
  assertTrue(bucket.highest == version.longValue());
  Long versionFromTLog=ulog.lookupVersion(idBytes);
  Long versionFromIndex=vInfo.getVersionFromIndex(idBytes);
  assertEquals("version from tlog and version from index should be the same",versionFromTLog,versionFromIndex);
  CoreContainer coreContainer=req.getCore().getCoreDescriptor().getCoreContainer();
  coreContainer.reload(req.getCore().getName());
  maxVersionFromIndex=ulog.getMaxVersionFromIndex();
  assertEquals("max version from index should be equal to version of last doc added after reload",maxVersionFromIndex,version);
  docId=Integer.toString(3);
  assertU(adoc("id",docId));
  assertU(commit());
  maxVersionFromIndex=ulog.getMaxVersionFromIndex();
  assertNotNull(maxVersionFromIndex);
  assertTrue(maxVersionFromIndex != 0L);
  vInfo=ulog.getVersionInfo();
  version=vInfo.getVersionFromIndex(new BytesRef(docId));
  assertNotNull("version info should not be null for test doc: " + docId,version);
  assertTrue("max version from index should be less than version of last doc added, diff: " + (version - maxVersionFromIndex),maxVersionFromIndex < version);
  idBytes=new BytesRef(docId);
  bucketHash=Hash.murmurhash3_x86_32(idBytes.bytes,idBytes.offset,idBytes.length,0);
  bucket=vInfo.bucket(bucketHash);
  assertTrue(bucket.highest == version.longValue());
}
