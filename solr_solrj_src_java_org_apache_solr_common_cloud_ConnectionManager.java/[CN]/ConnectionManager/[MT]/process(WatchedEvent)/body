{
  if (log.isInfoEnabled()) {
    log.info("Watcher " + this + " name:"+ name+ " got event "+ event+ " path:"+ event.getPath()+ " type:"+ event.getType());
  }
  checkClosed();
  state=event.getState();
  if (state == KeeperState.SyncConnected) {
    connected=true;
    clientConnected.countDown();
  }
 else   if (state == KeeperState.Expired) {
    connected=false;
    log.info("Attempting to reconnect to recover relationship with ZooKeeper...");
    try {
      connectionStrategy.reconnect(zkServerAddress,zkClientTimeout,this,new ZkClientConnectionStrategy.ZkUpdate(){
        @Override public void update(        SolrZooKeeper keeper) throws TimeoutException {
synchronized (connectionStrategy) {
            checkClosed();
            try {
              waitForConnected(SolrZkClient.DEFAULT_CLIENT_CONNECT_TIMEOUT);
              checkClosed();
              client.updateKeeper(keeper);
            }
 catch (            InterruptedException e) {
              throw new RuntimeException("Giving up on connecting - we were interrupted");
            }
            checkClosed();
            if (onReconnect != null) {
              onReconnect.command();
            }
synchronized (ConnectionManager.this) {
              ConnectionManager.this.connected=true;
            }
          }
        }
      }
);
    }
 catch (    Exception e) {
      SolrException.log(log,"",e);
    }
    log.info("Connected:" + connected);
  }
 else   if (state == KeeperState.Disconnected) {
    connected=false;
  }
 else {
    connected=false;
  }
  notifyAll();
}
