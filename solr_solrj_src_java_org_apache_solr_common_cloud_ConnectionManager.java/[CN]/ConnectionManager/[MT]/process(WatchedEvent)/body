{
  if (log.isInfoEnabled()) {
    log.info("Watcher " + this + " name:"+ name+ " got event "+ event+ " path:"+ event.getPath()+ " type:"+ event.getType());
  }
  if (isClosed) {
    log.info("Client->ZooKeeper status change trigger but we are already closed");
    return;
  }
  state=event.getState();
  if (state == KeeperState.SyncConnected) {
    connected=true;
    clientConnected.countDown();
    connectionStrategy.connected();
  }
 else   if (state == KeeperState.Expired) {
    connected=false;
    log.info("Our previous ZooKeeper session was expired. Attempting to reconnect to recover relationship with ZooKeeper...");
    try {
      connectionStrategy.reconnect(zkServerAddress,zkClientTimeout,this,new ZkClientConnectionStrategy.ZkUpdate(){
        @Override public void update(        SolrZooKeeper keeper){
          try {
            waitForConnected(Long.MAX_VALUE);
          }
 catch (          Exception e1) {
            closeKeeper(keeper);
            throw new RuntimeException(e1);
          }
          log.info("Connection with ZooKeeper reestablished.");
          try {
            client.updateKeeper(keeper);
          }
 catch (          InterruptedException e) {
            closeKeeper(keeper);
            Thread.currentThread().interrupt();
            throw new RuntimeException(e);
          }
catch (          Throwable t) {
            closeKeeper(keeper);
            throw new RuntimeException(t);
          }
          if (onReconnect != null) {
            onReconnect.command();
          }
synchronized (ConnectionManager.this) {
            ConnectionManager.this.connected=true;
          }
        }
      }
);
    }
 catch (    Exception e) {
      SolrException.log(log,"",e);
    }
    log.info("Connected:" + connected);
  }
 else   if (state == KeeperState.Disconnected) {
    log.info("zkClient has disconnected");
    connected=false;
    connectionStrategy.disconnected();
  }
 else {
    connected=false;
  }
  notifyAll();
}
