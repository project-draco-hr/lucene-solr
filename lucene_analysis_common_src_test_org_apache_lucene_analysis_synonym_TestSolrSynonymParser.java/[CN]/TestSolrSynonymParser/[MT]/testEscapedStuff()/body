{
  String testFile="a\\=>a => b\\=>b\n" + "a\\,a => b\\,b";
  Analyzer analyzer=new MockAnalyzer(random(),MockTokenizer.KEYWORD,false);
  SolrSynonymParser parser=new SolrSynonymParser(true,true,analyzer);
  parser.parse(new StringReader(testFile));
  final SynonymMap map=parser.build();
  analyzer.close();
  analyzer=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      Tokenizer tokenizer=new MockTokenizer(MockTokenizer.KEYWORD,false);
      return new TokenStreamComponents(tokenizer,new SynonymFilter(tokenizer,map,false));
    }
  }
;
  assertAnalyzesTo(analyzer,"ball",new String[]{"ball"},new int[]{1});
  assertAnalyzesTo(analyzer,"a=>a",new String[]{"b=>b"},new int[]{1});
  assertAnalyzesTo(analyzer,"a,a",new String[]{"b,b"},new int[]{1});
  analyzer.close();
}
