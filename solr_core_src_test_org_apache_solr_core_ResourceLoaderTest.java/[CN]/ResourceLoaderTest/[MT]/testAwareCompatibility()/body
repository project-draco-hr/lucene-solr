{
  SolrResourceLoader loader=new SolrResourceLoader(".");
  Class clazz=ResourceLoaderAware.class;
  loader.assertAwareCompatibility(clazz,new NGramFilterFactory(new HashMap<String,String>()));
  loader.assertAwareCompatibility(clazz,new KeywordTokenizerFactory(new HashMap<String,String>()));
  Object[] invalid=new Object[]{"hello",new Float(12.3f),new LukeRequestHandler(),new JSONResponseWriter()};
  for (  Object obj : invalid) {
    try {
      loader.assertAwareCompatibility(clazz,obj);
      Assert.fail("Should be invalid class: " + obj + " FOR "+ clazz);
    }
 catch (    SolrException ex) {
    }
  }
  clazz=SolrCoreAware.class;
  loader.assertAwareCompatibility(clazz,new LukeRequestHandler());
  loader.assertAwareCompatibility(clazz,new FacetComponent());
  loader.assertAwareCompatibility(clazz,new JSONResponseWriter());
  invalid=new Object[]{new NGramFilterFactory(new HashMap<String,String>()),"hello",new Float(12.3f),new KeywordTokenizerFactory(new HashMap<String,String>())};
  for (  Object obj : invalid) {
    try {
      loader.assertAwareCompatibility(clazz,obj);
      Assert.fail("Should be invalid class: " + obj + " FOR "+ clazz);
    }
 catch (    SolrException ex) {
    }
  }
}
