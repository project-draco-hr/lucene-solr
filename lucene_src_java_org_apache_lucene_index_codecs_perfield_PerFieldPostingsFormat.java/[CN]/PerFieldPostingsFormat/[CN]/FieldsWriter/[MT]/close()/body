{
  IOUtils.close(formats.values());
  final String mapFileName=IndexFileNames.segmentFileName(segmentWriteState.segmentName,segmentWriteState.segmentSuffix,PER_FIELD_EXTENSION);
  final IndexOutput out=segmentWriteState.directory.createOutput(mapFileName,segmentWriteState.context);
  boolean success=false;
  try {
    CodecUtil.writeHeader(out,PER_FIELD_NAME,VERSION_LATEST);
    out.writeVInt(formats.size());
    for (    Map.Entry<PostingsFormat,FieldsConsumerAndID> ent : formats.entrySet()) {
      out.writeString(ent.getValue().segmentSuffix);
      out.writeString(ent.getKey().getName());
    }
    out.writeVInt(fieldToFormat.size());
    for (    Map.Entry<String,PostingsFormat> ent : fieldToFormat.entrySet()) {
      out.writeString(ent.getKey());
      out.writeString(ent.getValue().getName());
    }
    success=true;
  }
  finally {
    if (!success) {
      IOUtils.closeWhileHandlingException(out);
    }
 else {
      IOUtils.close(out);
    }
  }
}
