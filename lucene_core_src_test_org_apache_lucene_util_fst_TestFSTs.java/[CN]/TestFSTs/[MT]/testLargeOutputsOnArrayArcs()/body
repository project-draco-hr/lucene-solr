{
  final ByteSequenceOutputs outputs=ByteSequenceOutputs.getSingleton();
  final Builder<BytesRef> builder=new Builder<>(FST.INPUT_TYPE.BYTE1,outputs);
  final byte[] bytes=new byte[300];
  final IntsRefBuilder input=new IntsRefBuilder();
  input.append(0);
  final BytesRef output=new BytesRef(bytes);
  for (int arc=0; arc < 6; arc++) {
    input.setIntAt(0,arc);
    output.bytes[0]=(byte)arc;
    builder.add(input.get(),BytesRef.deepCopyOf(output));
  }
  final FST<BytesRef> fst=builder.finish();
  for (int arc=0; arc < 6; arc++) {
    input.setIntAt(0,arc);
    final BytesRef result=Util.get(fst,input.get());
    assertNotNull(result);
    assertEquals(300,result.length);
    assertEquals(result.bytes[result.offset],arc);
    for (int byteIDX=1; byteIDX < result.length; byteIDX++) {
      assertEquals(0,result.bytes[result.offset + byteIDX]);
    }
  }
}
