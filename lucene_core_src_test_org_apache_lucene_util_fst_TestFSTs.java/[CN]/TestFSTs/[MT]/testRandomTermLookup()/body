{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setOpenMode(IndexWriterConfig.OpenMode.CREATE));
  Document doc=new Document();
  Field f=newStringField("field","",Field.Store.NO);
  doc.add(f);
  final int NUM_TERMS=(int)(1000 * RANDOM_MULTIPLIER * (1 + random().nextDouble()));
  if (VERBOSE) {
    System.out.println("TEST: NUM_TERMS=" + NUM_TERMS);
  }
  final Set<String> allTerms=new HashSet<String>();
  while (allTerms.size() < NUM_TERMS) {
    allTerms.add(simpleRandomString(random()));
  }
  for (  String term : allTerms) {
    f.setStringValue(term);
    w.addDocument(doc);
  }
  if (VERBOSE) {
    System.out.println("TEST: get reader");
  }
  IndexReader r=w.getReader();
  if (VERBOSE) {
    System.out.println("TEST: got reader=" + r);
  }
  IndexSearcher s=newSearcher(r);
  w.close();
  final List<String> allTermsList=new ArrayList<String>(allTerms);
  Collections.shuffle(allTermsList,random());
  for (  String term : allTermsList) {
    if (VERBOSE) {
      System.out.println("TEST: term=" + term);
    }
    assertEquals("term=" + term,1,s.search(new TermQuery(new Term("field",term)),1).totalHits);
  }
  r.close();
  dir.close();
}
