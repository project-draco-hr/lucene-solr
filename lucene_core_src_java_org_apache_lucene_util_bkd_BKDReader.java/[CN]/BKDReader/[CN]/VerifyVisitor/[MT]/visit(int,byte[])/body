{
  if (docID < 0 || docID >= maxDoc) {
    throw new RuntimeException("docID=" + docID + " is out of bounds of 0.."+ maxDoc);
  }
  for (int dim=0; dim < numDims; dim++) {
    if (StringHelper.compare(bytesPerDim,cellMinPacked,dim * bytesPerDim,packedValue,dim * bytesPerDim) > 0) {
      throw new RuntimeException("value=" + new BytesRef(packedValue,dim * bytesPerDim,bytesPerDim) + " for docID="+ docID+ " dim="+ dim+ " is less than this leaf block's minimum="+ new BytesRef(cellMinPacked,dim * bytesPerDim,bytesPerDim));
    }
    if (StringHelper.compare(bytesPerDim,cellMaxPacked,dim * bytesPerDim,packedValue,dim * bytesPerDim) < 0) {
      throw new RuntimeException("value=" + new BytesRef(packedValue,dim * bytesPerDim,bytesPerDim) + " for docID="+ docID+ " dim="+ dim+ " is greater than this leaf block's maximum="+ new BytesRef(cellMaxPacked,dim * bytesPerDim,bytesPerDim));
    }
  }
  if (numDims == 1) {
    if (lastPackedValue == null) {
      lastPackedValue=Arrays.copyOf(packedValue,packedValue.length);
    }
 else     if (BKDUtil.compare(bytesPerDim,lastPackedValue,0,packedValue,0) > 0) {
      throw new RuntimeException("value=" + new BytesRef(packedValue) + " for docID="+ docID+ " dim=0"+ " sorts before last value="+ new BytesRef(lastPackedValue));
    }
 else {
      System.arraycopy(packedValue,0,lastPackedValue,0,bytesPerDim);
    }
  }
}
