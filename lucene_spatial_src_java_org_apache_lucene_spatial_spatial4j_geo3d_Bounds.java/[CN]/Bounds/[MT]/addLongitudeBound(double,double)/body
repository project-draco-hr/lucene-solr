{
  if (leftLongitude == null && rightLongitude == null) {
    leftLongitude=newLeftLongitude;
    rightLongitude=newRightLongitude;
  }
 else {
    double currentLeftLongitude=leftLongitude;
    double currentRightLongitude=rightLongitude;
    if (currentRightLongitude < currentLeftLongitude)     currentRightLongitude+=2.0 * Math.PI;
    double adjustedLeftLongitude=newLeftLongitude;
    double adjustedRightLongitude=newRightLongitude;
    if (adjustedRightLongitude < adjustedLeftLongitude)     adjustedRightLongitude+=2.0 * Math.PI;
    if (currentLeftLongitude <= adjustedLeftLongitude && currentRightLongitude >= adjustedRightLongitude) {
    }
 else     if (currentLeftLongitude >= adjustedLeftLongitude && currentRightLongitude <= adjustedRightLongitude) {
      leftLongitude=newLeftLongitude;
      rightLongitude=newRightLongitude;
    }
 else {
      if (currentLeftLongitude > adjustedLeftLongitude) {
        leftLongitude=newLeftLongitude;
      }
      if (currentRightLongitude < adjustedRightLongitude) {
        rightLongitude=newRightLongitude;
      }
    }
  }
  double testRightLongitude=rightLongitude;
  if (testRightLongitude < leftLongitude)   testRightLongitude+=Math.PI * 2.0;
  if (testRightLongitude - leftLongitude >= Math.PI * 2.0) {
    noLongitudeBound=true;
    leftLongitude=null;
    rightLongitude=null;
  }
}
