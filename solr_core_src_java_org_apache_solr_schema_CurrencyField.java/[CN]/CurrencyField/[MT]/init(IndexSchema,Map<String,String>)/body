{
  super.init(schema,args);
  this.schema=schema;
  this.exchangeRateProviderClass=args.get(PARAM_RATE_PROVIDER_CLASS);
  this.defaultCurrency=args.get(PARAM_DEFAULT_CURRENCY);
  if (this.defaultCurrency == null) {
    this.defaultCurrency=DEFAULT_DEFAULT_CURRENCY;
  }
  if (this.exchangeRateProviderClass == null) {
    this.exchangeRateProviderClass=DEFAULT_RATE_PROVIDER_CLASS;
  }
  if (java.util.Currency.getInstance(this.defaultCurrency) == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Invalid currency code " + this.defaultCurrency);
  }
  args.remove(PARAM_RATE_PROVIDER_CLASS);
  args.remove(PARAM_DEFAULT_CURRENCY);
  try {
    Class<?> c=Class.forName(exchangeRateProviderClass);
    Object clazz=c.newInstance();
    if (clazz instanceof ExchangeRateProvider) {
      provider=(ExchangeRateProvider)clazz;
      provider.init(args);
    }
 else {
      throw new SolrException(ErrorCode.BAD_REQUEST,"exchangeRateProvider " + exchangeRateProviderClass + " needs to implement ExchangeRateProvider");
    }
  }
 catch (  Exception e) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Error instansiating exhange rate provider " + exchangeRateProviderClass + ". Please check your FieldType configuration",e);
  }
}
