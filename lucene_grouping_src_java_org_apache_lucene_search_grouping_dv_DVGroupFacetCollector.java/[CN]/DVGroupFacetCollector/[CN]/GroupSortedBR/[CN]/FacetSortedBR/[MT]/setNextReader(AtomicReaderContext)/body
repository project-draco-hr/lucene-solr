{
  if (segmentFacetCounts != null) {
    segmentResults.add(createSegmentResult());
  }
  groupFieldSource=getDocValuesSortedSource(groupField,groupDvType,groupDiskResident,context.reader());
  facetFieldSource=getDocValuesSortedSource(facetField,facetFieldDvType,facetDiskResident,context.reader());
  segmentFacetCounts=new int[facetFieldSource.getValueCount()];
  segmentTotalCount=0;
  segmentGroupedFacetHits.clear();
  for (  GroupedFacetHit groupedFacetHit : groupedFacetHits) {
    int facetOrd=facetFieldSource.getOrdByValue(groupedFacetHit.facetValue,facetSpare);
    if (facetOrd < 0) {
      continue;
    }
    int groupOrd=groupFieldSource.getOrdByValue(groupedFacetHit.groupValue,groupSpare);
    if (groupOrd < 0) {
      continue;
    }
    int segmentGroupedFacetsIndex=(groupOrd * facetFieldSource.getValueCount()) + facetOrd;
    segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);
  }
  if (facetPrefix != null) {
    startFacetOrd=facetFieldSource.getOrdByValue(facetPrefix,facetSpare);
    if (startFacetOrd < 0) {
      startFacetOrd=-startFacetOrd - 1;
    }
    BytesRef facetEndPrefix=BytesRef.deepCopyOf(facetPrefix);
    facetEndPrefix.append(UnicodeUtil.BIG_TERM);
    endFacetOrd=facetFieldSource.getOrdByValue(facetEndPrefix,facetSpare);
    endFacetOrd=-endFacetOrd - 1;
  }
 else {
    startFacetOrd=0;
    endFacetOrd=facetFieldSource.getValueCount();
  }
}
