{
  int numSnapshots=3;
  MockDirectoryWrapper dir=newMockDirectory();
  IndexWriter writer=new IndexWriter(dir,getConfig(random(),getDeletionPolicy(dir)));
  PersistentSnapshotDeletionPolicy psdp=(PersistentSnapshotDeletionPolicy)writer.getConfig().getIndexDeletionPolicy();
  assertNull(psdp.getLastSaveFile());
  prepareIndexAndSnapshots(psdp,writer,numSnapshots);
  assertNotNull(psdp.getLastSaveFile());
  writer.shutdown();
  int count=0;
  for (  String file : dir.listAll()) {
    if (file.startsWith(PersistentSnapshotDeletionPolicy.SNAPSHOTS_PREFIX)) {
      count++;
    }
  }
  assertEquals(1,count);
  dir.crash();
  dir.clearCrash();
  psdp=new PersistentSnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy(),dir,OpenMode.APPEND);
  writer=new IndexWriter(dir,getConfig(random(),psdp));
  psdp=(PersistentSnapshotDeletionPolicy)writer.getConfig().getIndexDeletionPolicy();
  assertEquals(numSnapshots,psdp.getSnapshots().size());
  assertEquals(numSnapshots,psdp.getSnapshotCount());
  assertSnapshotExists(dir,psdp,numSnapshots,false);
  writer.addDocument(new Document());
  writer.commit();
  snapshots.add(psdp.snapshot());
  assertEquals(numSnapshots + 1,psdp.getSnapshots().size());
  assertEquals(numSnapshots + 1,psdp.getSnapshotCount());
  assertSnapshotExists(dir,psdp,numSnapshots + 1,false);
  writer.shutdown();
  dir.close();
}
