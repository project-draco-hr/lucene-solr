{
  SolrQueryRequest req=rb.req;
  SolrQueryResponse rsp=rb.rsp;
  final CharsRef spare=new CharsRef();
  boolean fsv=req.getParams().getBool(ResponseBuilder.FIELD_SORT_VALUES,false);
  if (fsv) {
    Sort sort=searcher.weightSort(rb.getSortSpec().getSort());
    SortField[] sortFields=sort == null ? new SortField[]{SortField.FIELD_SCORE} : sort.getSort();
    NamedList<Object[]> sortVals=new NamedList<Object[]>();
    Field field=new StringField("dummy","",Field.Store.NO);
    IndexReaderContext topReaderContext=searcher.getTopReaderContext();
    List<AtomicReaderContext> leaves=topReaderContext.leaves();
    AtomicReaderContext currentLeaf=null;
    if (leaves.size() == 1) {
      currentLeaf=leaves.get(0);
      leaves=null;
    }
    DocList docList=rb.getResults().docList;
    int nDocs=docList.size();
    long[] sortedIds=new long[nDocs];
    DocIterator it=rb.getResults().docList.iterator();
    for (int i=0; i < nDocs; i++) {
      sortedIds[i]=(((long)it.nextDoc()) << 32) | i;
    }
    Arrays.sort(sortedIds);
    for (    SortField sortField : sortFields) {
      SortField.Type type=sortField.getType();
      if (type == SortField.Type.SCORE || type == SortField.Type.DOC)       continue;
      FieldComparator comparator=null;
      String fieldname=sortField.getField();
      FieldType ft=fieldname == null ? null : req.getSchema().getFieldTypeNoEx(fieldname);
      Object[] vals=new Object[nDocs];
      int lastIdx=-1;
      int idx=0;
      for (      long idAndPos : sortedIds) {
        int doc=(int)(idAndPos >>> 32);
        int position=(int)idAndPos;
        if (leaves != null) {
          idx=ReaderUtil.subIndex(doc,leaves);
          currentLeaf=leaves.get(idx);
          if (idx != lastIdx) {
            comparator=null;
          }
        }
        if (comparator == null) {
          comparator=sortField.getComparator(1,0);
          comparator=comparator.setNextReader(currentLeaf);
        }
        doc-=currentLeaf.docBase;
        comparator.copy(0,doc);
        Object val=comparator.value(0);
        if (val instanceof String) {
          field.setStringValue((String)val);
          val=ft.toObject(field);
        }
        if (val instanceof BytesRef) {
          UnicodeUtil.UTF8toUTF16((BytesRef)val,spare);
          field.setStringValue(spare.toString());
          val=ft.toObject(field);
        }
        vals[position]=val;
      }
      sortVals.add(fieldname,vals);
    }
    rsp.add("sort_values",sortVals);
  }
}
