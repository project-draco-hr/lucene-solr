{
  ShardRequest sreq=new ShardRequest();
  sreq.purpose=ShardRequest.PURPOSE_GET_TOP_IDS;
  String keyFieldName=rb.req.getSchema().getUniqueKeyField().getName();
  ReturnFields fields=rb.rsp.getReturnFields();
  if (fields != null && fields.wantsField(keyFieldName) && fields.getRequestedFieldNames() != null && Arrays.asList(keyFieldName,"score").containsAll(fields.getRequestedFieldNames())) {
    sreq.purpose|=ShardRequest.PURPOSE_GET_FIELDS;
    rb.onePassDistributedQuery=true;
  }
  sreq.params=new ModifiableSolrParams(rb.req.getParams());
  sreq.params.remove(ShardParams.SHARDS);
  if (rb.shards_start > -1) {
    sreq.params.set(CommonParams.START,rb.shards_start);
  }
 else {
    sreq.params.set(CommonParams.START,"0");
  }
  if (rb.shards_rows > -1) {
    sreq.params.set(CommonParams.ROWS,rb.shards_rows);
  }
 else {
    sreq.params.set(CommonParams.ROWS,rb.getSortSpec().getOffset() + rb.getSortSpec().getCount());
  }
  sreq.params.set(ResponseBuilder.FIELD_SORT_VALUES,"true");
  if ((rb.getFieldFlags() & SolrIndexSearcher.GET_SCORES) != 0 || rb.getSortSpec().includesScore()) {
    sreq.params.set(CommonParams.FL,keyFieldName + ",score");
  }
 else {
    sreq.params.set(CommonParams.FL,keyFieldName);
  }
  rb.addRequest(this,sreq);
}
