{
  try {
    StringBuilder builder=new StringBuilder();
    char[] buf=new char[8];
    int len;
    while ((len=input.read(buf)) != -1)     builder.append(buf,0,len);
switch (type) {
case INTEGER:
      return new IntTrieTokenStream(Integer.parseInt(builder.toString()),precisionStep);
case FLOAT:
    return new IntTrieTokenStream(TrieUtils.floatToSortableInt(Float.parseFloat(builder.toString())),precisionStep);
case LONG:
  return new LongTrieTokenStream(Long.parseLong(builder.toString()),precisionStep);
case DOUBLE:
return new LongTrieTokenStream(TrieUtils.doubleToSortableLong(Double.parseDouble(builder.toString())),precisionStep);
case DATE:
return new LongTrieTokenStream(dateField.parseMath(null,builder.toString()).getTime(),precisionStep);
default :
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unknown type for trie field");
}
}
 catch (IOException e) {
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unable to create TrieIndexTokenizer",e);
}
}
