{
  super(reader);
  StringBuilder builder=new StringBuilder();
  char[] buf=new char[8];
  int len;
  while ((len=reader.read(buf)) != -1)   builder.append(buf,0,len);
switch (type) {
case INTEGER:
    this.trieVals=TrieUtils.trieCodeInt(Integer.parseInt(builder.toString()),precisionStep);
  break;
case FLOAT:
this.trieVals=TrieUtils.trieCodeInt(TrieUtils.floatToSortableInt(Float.parseFloat(builder.toString())),precisionStep);
break;
case LONG:
this.trieVals=TrieUtils.trieCodeLong(Long.parseLong(builder.toString()),precisionStep);
break;
case DOUBLE:
this.trieVals=TrieUtils.trieCodeLong(TrieUtils.doubleToSortableLong(Double.parseDouble(builder.toString())),precisionStep);
break;
case DATE:
this.trieVals=TrieUtils.trieCodeLong(dateField.parseMath(null,builder.toString()).getTime(),precisionStep);
break;
default :
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unknown type for trie field");
}
}
