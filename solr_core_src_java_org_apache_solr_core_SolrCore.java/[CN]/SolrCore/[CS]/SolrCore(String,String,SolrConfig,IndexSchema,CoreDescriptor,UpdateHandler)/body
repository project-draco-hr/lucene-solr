{
  coreDescriptor=cd;
  this.setName(name);
  resourceLoader=config.getResourceLoader();
  if (dataDir == null) {
    if (cd.usingDefaultDataDir())     dataDir=config.getDataDir();
    if (dataDir == null)     dataDir=cd.getDataDir();
  }
  dataDir=SolrResourceLoader.normalizeDir(dataDir);
  log.info(logid + "Opening new SolrCore at " + resourceLoader.getInstanceDir()+ ", dataDir="+ dataDir);
  if (schema == null) {
    schema=new IndexSchema(config,IndexSchema.DEFAULT_SCHEMA_FILE,null);
  }
  if (config.jmxConfig.enabled) {
    infoRegistry=new JmxMonitoredMap<String,SolrInfoMBean>(name,String.valueOf(this.hashCode()),config.jmxConfig);
  }
 else {
    log.info("JMX monitoring not detected for core: " + name);
    infoRegistry=new ConcurrentHashMap<String,SolrInfoMBean>();
  }
  infoRegistry.put("fieldCache",new SolrFieldCacheMBean());
  this.schema=schema;
  this.dataDir=dataDir;
  this.solrConfig=config;
  this.startTime=System.currentTimeMillis();
  this.maxWarmingSearchers=config.maxWarmingSearchers;
  booleanQueryMaxClauseCount();
  initListeners();
  initDeletionPolicy();
  this.codec=initCodec(solrConfig,schema);
  if (updateHandler == null) {
    initDirectoryFactory();
  }
 else {
    directoryFactory=updateHandler.getIndexWriterProvider().getDirectoryFactory();
  }
  initIndex();
  initWriters();
  initQParsers();
  initValueSourceParsers();
  initTransformerFactories();
  this.searchComponents=Collections.unmodifiableMap(loadSearchComponents());
  updateProcessorChains=loadUpdateProcessorChains();
  reqHandlers=new RequestHandlers(this);
  reqHandlers.initHandlersFromConfig(solrConfig);
  initDeprecatedSupport();
  final CountDownLatch latch=new CountDownLatch(1);
  try {
    searcherExecutor.submit(new Callable(){
      public Object call() throws Exception {
        latch.await();
        return null;
      }
    }
);
    getSearcher(false,false,null);
    String updateHandlerClass=solrConfig.getUpdateHandlerInfo().className;
    if (updateHandler == null) {
      this.updateHandler=createUpdateHandler(updateHandlerClass == null ? DirectUpdateHandler2.class.getName() : updateHandlerClass);
    }
 else {
      this.updateHandler=createUpdateHandler(updateHandlerClass == null ? DirectUpdateHandler2.class.getName() : updateHandlerClass,updateHandler);
    }
    infoRegistry.put("updateHandler",this.updateHandler);
    resourceLoader.inform(resourceLoader);
    resourceLoader.inform(this);
  }
 catch (  Throwable e) {
    latch.countDown();
    close();
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,null,e);
  }
 finally {
    latch.countDown();
  }
  infoRegistry.put("core",this);
  resourceLoader.inform(infoRegistry);
}
