{
  coreDescriptor=cd;
  this.setName(name);
  resourceLoader=config.getResourceLoader();
  this.solrConfig=config;
  if (updateHandler == null) {
    initDirectoryFactory();
  }
  if (dataDir == null) {
    if (cd.usingDefaultDataDir())     dataDir=config.getDataDir();
    if (dataDir == null) {
      try {
        dataDir=cd.getDataDir();
        if (!directoryFactory.isAbsolute(dataDir)) {
          dataDir=directoryFactory.getDataHome(cd);
        }
      }
 catch (      IOException e) {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,null,e);
      }
    }
  }
  dataDir=SolrResourceLoader.normalizeDir(dataDir);
  log.info(logid + "Opening new SolrCore at " + resourceLoader.getInstanceDir()+ ", dataDir="+ dataDir);
  if (null != cd && null != cd.getCloudDescriptor()) {
    try {
      VersionInfo.getAndCheckVersionField(schema);
    }
 catch (    SolrException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Schema will not work with SolrCloud mode: " + e.getMessage(),e);
    }
  }
  if (config.jmxConfig.enabled) {
    infoRegistry=new JmxMonitoredMap<String,SolrInfoMBean>(name,String.valueOf(this.hashCode()),config.jmxConfig);
  }
 else {
    log.info("JMX monitoring not detected for core: " + name);
    infoRegistry=new ConcurrentHashMap<String,SolrInfoMBean>();
  }
  infoRegistry.put("fieldCache",new SolrFieldCacheMBean());
  if (schema == null) {
    schema=IndexSchemaFactory.buildIndexSchema(IndexSchema.DEFAULT_SCHEMA_FILE,config);
  }
  this.schema=schema;
  final SimilarityFactory similarityFactory=schema.getSimilarityFactory();
  if (similarityFactory instanceof SolrCoreAware) {
    ((SolrCoreAware)similarityFactory).inform(this);
  }
  this.dataDir=dataDir;
  this.startTime=System.currentTimeMillis();
  this.maxWarmingSearchers=config.maxWarmingSearchers;
  booleanQueryMaxClauseCount();
  final CountDownLatch latch=new CountDownLatch(1);
  try {
    initListeners();
    if (delPolicy == null) {
      initDeletionPolicy();
    }
 else {
      this.solrDelPolicy=delPolicy;
    }
    this.codec=initCodec(solrConfig,schema);
    if (updateHandler == null) {
      solrCoreState=new DefaultSolrCoreState(getDirectoryFactory());
    }
 else {
      solrCoreState=updateHandler.getSolrCoreState();
      directoryFactory=solrCoreState.getDirectoryFactory();
      this.isReloaded=true;
    }
    initIndex(prev != null);
    initWriters();
    initQParsers();
    initValueSourceParsers();
    initTransformerFactories();
    this.searchComponents=Collections.unmodifiableMap(loadSearchComponents());
    updateProcessorChains=loadUpdateProcessorChains();
    reqHandlers=new RequestHandlers(this);
    reqHandlers.initHandlersFromConfig(solrConfig);
    initDeprecatedSupport();
    searcherExecutor.submit(new Callable<Void>(){
      @Override public Void call() throws Exception {
        latch.await();
        return null;
      }
    }
);
    RefCounted<IndexWriter> iwRef=null;
    if (prev != null) {
      iwRef=prev.getUpdateHandler().getSolrCoreState().getIndexWriter(null);
      if (iwRef != null) {
        final IndexWriter iw=iwRef.get();
        final SolrCore core=this;
        newReaderCreator=new Callable<DirectoryReader>(){
          @Override public DirectoryReader call() throws Exception {
            if (getSolrConfig().nrtMode) {
              return indexReaderFactory.newReader(iw,core);
            }
 else {
              return indexReaderFactory.newReader(iw.getDirectory(),core);
            }
          }
        }
;
      }
    }
    String updateHandlerClass=solrConfig.getUpdateHandlerInfo().className;
    if (updateHandler == null) {
      this.updateHandler=createUpdateHandler(updateHandlerClass == null ? DirectUpdateHandler2.class.getName() : updateHandlerClass);
    }
 else {
      this.updateHandler=createUpdateHandler(updateHandlerClass == null ? DirectUpdateHandler2.class.getName() : updateHandlerClass,updateHandler);
    }
    infoRegistry.put("updateHandler",this.updateHandler);
    try {
      getSearcher(false,false,null,true);
    }
  finally {
      newReaderCreator=null;
      if (iwRef != null)       iwRef.decref();
    }
    resourceLoader.inform(resourceLoader);
    resourceLoader.inform(this);
  }
 catch (  Throwable e) {
    latch.countDown();
    close();
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,e.getMessage(),e);
  }
 finally {
    latch.countDown();
  }
  infoRegistry.put("core",this);
  resourceLoader.inform(infoRegistry);
  CoreContainer cc=cd.getCoreContainer();
  if (cc != null && cc.isZooKeeperAware() && Slice.CONSTRUCTION.equals(cd.getCloudDescriptor().getShardState())) {
    getUpdateHandler().getUpdateLog().bufferUpdates();
    cd.getCloudDescriptor().setShardState(null);
    cd.getCloudDescriptor().setShardRange(null);
    cd.getCloudDescriptor().setShardParent(null);
  }
  ruleExpiryLock=new ReentrantLock();
}
