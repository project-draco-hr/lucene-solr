{
  if (isClosed()) {
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"openNewSearcher called on closed core");
  }
  SolrIndexSearcher tmp;
  RefCounted<SolrIndexSearcher> newestSearcher=null;
  boolean nrt=solrConfig.nrtMode && updateHandlerReopens;
  openSearcherLock.lock();
  try {
    String newIndexDir=getNewIndexDir();
    String indexDirFile=null;
    String newIndexDirFile=null;
    if (!nrt) {
      indexDirFile=getDirectoryFactory().normalize(getIndexDir());
      newIndexDirFile=getDirectoryFactory().normalize(newIndexDir);
    }
synchronized (searcherLock) {
      newestSearcher=realtimeSearcher;
      if (newestSearcher != null) {
        newestSearcher.incref();
      }
    }
    if (newestSearcher != null && (nrt || indexDirFile.equals(newIndexDirFile))) {
      DirectoryReader newReader;
      DirectoryReader currentReader=newestSearcher.get().getIndexReader();
      RefCounted<IndexWriter> writer=getUpdateHandler().getSolrCoreState().getIndexWriter(null);
      try {
        if (writer != null && solrConfig.nrtMode) {
          newReader=DirectoryReader.openIfChanged(currentReader,writer.get(),true);
        }
 else {
          newReader=DirectoryReader.openIfChanged(currentReader);
        }
      }
  finally {
        if (writer != null) {
          writer.decref();
        }
      }
      if (newReader == null) {
        if (realtime) {
          newestSearcher.incref();
          return newestSearcher;
        }
 else         if (newestSearcher.get().isCachingEnabled() && newestSearcher.get().getSchema() == getLatestSchema()) {
          newestSearcher.incref();
          log.info("SolrIndexSearcher has not changed - not re-opening: " + newestSearcher.get().getName());
          return newestSearcher;
        }
        currentReader.incRef();
        newReader=currentReader;
      }
      final boolean useCaches=!realtime;
      final String newName=realtime ? "realtime" : "main";
      tmp=new SolrIndexSearcher(this,newIndexDir,getLatestSchema(),getSolrConfig().indexConfig,newName,newReader,true,useCaches,true,directoryFactory);
    }
 else {
      if (newReaderCreator != null) {
        DirectoryReader newReader=newReaderCreator.call();
        tmp=new SolrIndexSearcher(this,newIndexDir,getLatestSchema(),getSolrConfig().indexConfig,(realtime ? "realtime" : "main"),newReader,true,!realtime,true,directoryFactory);
      }
 else       if (solrConfig.nrtMode) {
        RefCounted<IndexWriter> writer=getUpdateHandler().getSolrCoreState().getIndexWriter(this);
        DirectoryReader newReader=null;
        try {
          newReader=indexReaderFactory.newReader(writer.get(),this);
        }
  finally {
          writer.decref();
        }
        tmp=new SolrIndexSearcher(this,newIndexDir,getLatestSchema(),getSolrConfig().indexConfig,(realtime ? "realtime" : "main"),newReader,true,!realtime,true,directoryFactory);
      }
 else {
        tmp=new SolrIndexSearcher(this,newIndexDir,getLatestSchema(),getSolrConfig().indexConfig,"main",true,directoryFactory);
      }
    }
    List<RefCounted<SolrIndexSearcher>> searcherList=realtime ? _realtimeSearchers : _searchers;
    RefCounted<SolrIndexSearcher> newSearcher=newHolder(tmp,searcherList);
    newSearcher.incref();
synchronized (searcherLock) {
      if (realtimeSearcher != null) {
        realtimeSearcher.decref();
      }
      realtimeSearcher=newSearcher;
      searcherList.add(realtimeSearcher);
    }
    return newSearcher;
  }
 catch (  Exception e) {
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Error opening new searcher",e);
  }
 finally {
    openSearcherLock.unlock();
    if (newestSearcher != null) {
      newestSearcher.decref();
    }
  }
}
