{
  TokenStream ts=new TrimFilter(new IterTokenStream(new Token(" a ",1,5),new Token("b   ",6,10),new Token("cCc",11,15),new Token("   ",16,20)),false);
  Token token=ts.next();
  assertEquals("a",new String(token.termBuffer(),0,token.termLength()));
  token=ts.next();
  assertEquals("b",new String(token.termBuffer(),0,token.termLength()));
  token=ts.next();
  assertEquals("cCc",new String(token.termBuffer(),0,token.termLength()));
  token=ts.next();
  assertEquals("",new String(token.termBuffer(),0,token.termLength()));
  token=ts.next();
  assertNull(token);
  ts=new TrimFilter(new IterTokenStream(new Token(" a",0,2),new Token("b ",0,2),new Token(" c ",0,3),new Token("   ",0,3)),true);
  List<Token> expect=tokens("a,1,1,2 b,1,0,1 c,1,1,2 ,1,3,3");
  List<Token> real=getTokens(ts);
  for (  Token t : expect) {
    System.out.println("TEST:" + t);
  }
  for (  Token t : real) {
    System.out.println("REAL:" + t);
  }
  assertTokEqualOff(expect,real);
}
