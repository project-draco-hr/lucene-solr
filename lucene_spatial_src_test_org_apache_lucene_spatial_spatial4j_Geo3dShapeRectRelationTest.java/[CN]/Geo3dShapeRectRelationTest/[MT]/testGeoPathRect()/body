{
  new RectIntersectionTestHelper<Geo3dShape>(ctx){
    @Override protected Geo3dShape generateRandomShape(    Point nearP){
      final Point centerPoint=randomPoint();
      final int maxDistance=random().nextInt(160) + 20;
      final int pointCount=random().nextInt(5) + 1;
      final double width=(random().nextInt(89) + 1) * DEGREES_TO_RADIANS;
      while (true) {
        try {
          final GeoPath path=new GeoPath(width);
          int i=0;
          while (i < pointCount) {
            final Point nextPoint=randomPoint();
            if (ctx.getDistCalc().distance(nextPoint,centerPoint) > maxDistance)             continue;
            path.addPoint(nextPoint.getY() * DEGREES_TO_RADIANS,nextPoint.getX() * DEGREES_TO_RADIANS);
            i++;
          }
          path.done();
          return new Geo3dShape(path,ctx);
        }
 catch (        IllegalArgumentException e) {
          continue;
        }
      }
    }
    @Override protected Point randomPointInEmptyShape(    Geo3dShape shape){
      throw new IllegalStateException("unexpected; need to finish test code");
    }
    @Override protected int getWithinMinimum(    int laps){
      return laps / 10000;
    }
  }
.testRelateWithRectangle();
}
