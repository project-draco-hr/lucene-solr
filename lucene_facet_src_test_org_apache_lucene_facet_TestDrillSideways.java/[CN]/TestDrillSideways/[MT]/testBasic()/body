{
  Directory dir=newDirectory();
  Directory taxoDir=newDirectory();
  DirectoryTaxonomyWriter taxoWriter=new DirectoryTaxonomyWriter(taxoDir,IndexWriterConfig.OpenMode.CREATE);
  FacetsConfig config=new FacetsConfig(taxoWriter);
  config.setHierarchical("Publish Date",true);
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  doc.add(new FacetField("Author","Bob"));
  doc.add(new FacetField("Publish Date","2010","10","15"));
  writer.addDocument(config.build(doc));
  doc=new Document();
  doc.add(new FacetField("Author","Lisa"));
  doc.add(new FacetField("Publish Date","2010","10","20"));
  writer.addDocument(config.build(doc));
  doc=new Document();
  doc.add(new FacetField("Author","Lisa"));
  doc.add(new FacetField("Publish Date","2012","1","1"));
  writer.addDocument(config.build(doc));
  doc=new Document();
  doc.add(new FacetField("Author","Susan"));
  doc.add(new FacetField("Publish Date","2012","1","7"));
  writer.addDocument(config.build(doc));
  doc=new Document();
  doc.add(new FacetField("Author","Frank"));
  doc.add(new FacetField("Publish Date","1999","5","5"));
  writer.addDocument(config.build(doc));
  IndexSearcher searcher=newSearcher(writer.getReader());
  TaxonomyReader taxoReader=new DirectoryTaxonomyReader(taxoWriter);
  DrillSideways ds=new DrillSideways(searcher,config,taxoReader);
  DrillDownQuery ddq=new DrillDownQuery(config);
  ddq.add("Author","Lisa");
  DrillSidewaysResult r=ds.search(null,ddq,10);
  assertEquals(2,r.hits.totalHits);
  assertEquals("value=2 childCount=2\n  2010 (1)\n  2012 (1)\n",r.facets.getTopChildren(10,"Publish Date").toString());
  assertEquals("value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n",r.facets.getTopChildren(10,"Author").toString());
  ddq=new DrillDownQuery(config);
  ddq.add("Author","Lisa");
  r=ds.search(null,ddq,10);
  assertEquals(2,r.hits.totalHits);
  assertEquals("value=2 childCount=2\n  2010 (1)\n  2012 (1)\n",r.facets.getTopChildren(10,"Publish Date").toString());
  assertEquals("value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n",r.facets.getTopChildren(10,"Author").toString());
  ddq=new DrillDownQuery(config);
  ddq.add("Author","Lisa");
  ddq.add("Author","Bob");
  r=ds.search(null,ddq,10);
  assertEquals(3,r.hits.totalHits);
  assertEquals("value=3 childCount=2\n  2010 (2)\n  2012 (1)\n",r.facets.getTopChildren(10,"Publish Date").toString());
  assertEquals("value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n",r.facets.getTopChildren(10,"Author").toString());
  ddq=new DrillDownQuery(config);
  ddq.add("Author","Lisa");
  ddq.add("Publish Date","2010");
  r=ds.search(null,ddq,10);
  assertEquals(1,r.hits.totalHits);
  assertEquals("value=2 childCount=2\n  2010 (1)\n  2012 (1)\n",r.facets.getTopChildren(10,"Publish Date").toString());
  assertEquals("value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n",r.facets.getTopChildren(10,"Author").toString());
  ddq=new DrillDownQuery(config);
  ddq.add("Author","Lisa");
  ddq.add("Publish Date","2010");
  ddq.add("Author","Bob");
  r=ds.search(null,ddq,10);
  assertEquals(2,r.hits.totalHits);
  assertEquals("value=3 childCount=2\n  2010 (2)\n  2012 (1)\n",r.facets.getTopChildren(10,"Publish Date").toString());
  assertEquals("value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n",r.facets.getTopChildren(10,"Author").toString());
  ddq=new DrillDownQuery(config);
  ddq.add("Foobar","Baz");
  r=ds.search(null,ddq,10);
  assertEquals(0,r.hits.totalHits);
  assertNull(r.facets.getTopChildren(10,"Publish Date"));
  assertNull(r.facets.getTopChildren(10,"Foobar"));
  ddq=new DrillDownQuery(config);
  ddq.add("Author","Lisa");
  ddq.add("Author","Tom");
  r=ds.search(null,ddq,10);
  assertEquals(2,r.hits.totalHits);
  assertEquals("value=2 childCount=2\n  2010 (1)\n  2012 (1)\n",r.facets.getTopChildren(10,"Publish Date").toString());
  assertEquals("value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n",r.facets.getTopChildren(10,"Author").toString());
  ddq=new DrillDownQuery(config);
  ddq.add("Author","Lisa");
  ddq.add("Author","Tom");
  r=ds.search(null,ddq,10);
  assertEquals(2,r.hits.totalHits);
  assertEquals("value=2 childCount=2\n  2010 (1)\n  2012 (1)\n",r.facets.getTopChildren(10,"Publish Date").toString());
  ddq=new DrillDownQuery(config,new TermQuery(new Term("foobar","baz")));
  ddq.add("Author","Lisa");
  r=ds.search(null,ddq,10);
  assertEquals(0,r.hits.totalHits);
  assertNull(r.facets.getTopChildren(10,"Publish Date"));
  assertNull(r.facets.getTopChildren(10,"Author"));
  IOUtils.close(searcher.getIndexReader(),taxoReader,writer,taxoWriter,dir,taxoDir);
}
