{
  NumericEntry entry=numerics.get(field.number);
  data.seek(entry.offset);
  if (entry.tableized) {
    int size=data.readVInt();
    final long decode[]=new long[size];
    for (int i=0; i < decode.length; i++) {
      decode[i]=data.readLong();
    }
    final int bitsPerValue=data.readVInt();
    final PackedInts.Reader reader=PackedInts.getReaderNoHeader(data,PackedInts.Format.PACKED,entry.packedIntsVersion,entry.count,bitsPerValue);
    return new NumericDocValues(){
      @Override public long get(      int docID){
        return decode[(int)reader.get(docID)];
      }
    }
;
  }
 else {
    final int blockSize=data.readVInt();
    final BlockPackedReader reader=new BlockPackedReader(data,entry.packedIntsVersion,blockSize,entry.count,false);
    return new NumericDocValues(){
      @Override public long get(      int docID){
        return reader.get(docID);
      }
    }
;
  }
}
