{
  int fieldNumber=meta.readVInt();
  while (fieldNumber != -1) {
    int fieldType=meta.readByte();
    if (fieldType == Lucene42DocValuesConsumer.NUMBER) {
      NumericEntry entry=new NumericEntry();
      entry.offset=meta.readLong();
      entry.tableized=meta.readByte() != 0;
      numerics.put(fieldNumber,entry);
    }
 else     if (fieldType == Lucene42DocValuesConsumer.BYTES) {
      BinaryEntry entry=new BinaryEntry();
      entry.offset=meta.readLong();
      entry.numBytes=meta.readLong();
      entry.minLength=meta.readVInt();
      entry.maxLength=meta.readVInt();
      binaries.put(fieldNumber,entry);
    }
 else     if (fieldType == Lucene42DocValuesConsumer.FST) {
      FSTEntry entry=new FSTEntry();
      entry.offset=meta.readLong();
      entry.numOrds=meta.readVInt();
      fsts.put(fieldNumber,entry);
    }
 else {
      throw new CorruptIndexException("invalid entry type: " + fieldType + ", input="+ meta);
    }
    fieldNumber=meta.readVInt();
  }
}
