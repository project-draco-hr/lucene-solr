{
  String metaName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,metaExtension);
  IndexInput in=state.directory.openInput(metaName,state.context);
  boolean success=false;
  try {
    CodecUtil.checkHeader(in,metaCodec,Lucene42DocValuesConsumer.VERSION_START,Lucene42DocValuesConsumer.VERSION_START);
    numerics=new HashMap<Integer,NumericEntry>();
    binaries=new HashMap<Integer,BinaryEntry>();
    fsts=new HashMap<Integer,FSTEntry>();
    readFields(in,state.fieldInfos);
    success=true;
  }
  finally {
    if (success) {
      IOUtils.close(in);
    }
 else {
      IOUtils.closeWhileHandlingException(in);
    }
  }
  String dataName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,dataExtension);
  data=state.directory.openInput(dataName,state.context);
  CodecUtil.checkHeader(data,dataCodec,Lucene42DocValuesConsumer.VERSION_START,Lucene42DocValuesConsumer.VERSION_START);
}
