{
  SolrParams params=rb.req.getParams();
  if (!params.getBool(COMPONENT_NAME,false)) {
    return;
  }
  String name=params.get(ClusteringParams.ENGINE_NAME,ClusteringEngine.DEFAULT_ENGINE_NAME);
  boolean useResults=params.getBool(ClusteringParams.USE_SEARCH_RESULTS,false);
  if (useResults == true) {
    SearchClusteringEngine engine=searchClusteringEngines.get(name);
    if (engine != null) {
      DocListAndSet results=rb.getResults();
      Object clusters=engine.cluster(rb.getQuery(),results.docList,rb.req);
      rb.rsp.add("clusters",clusters);
    }
 else {
      log.warn("No engine for: " + name);
    }
  }
  boolean useCollection=params.getBool(ClusteringParams.USE_COLLECTION,false);
  if (useCollection == true) {
    DocumentClusteringEngine engine=documentClusteringEngines.get(name);
    if (engine != null) {
      boolean useDocSet=params.getBool(ClusteringParams.USE_DOC_SET,false);
      NamedList nl=null;
      if (useDocSet == true) {
        nl=engine.cluster(rb.getResults().docSet,params);
      }
 else {
        nl=engine.cluster(params);
      }
      rb.rsp.add("clusters",nl);
    }
 else {
      log.warn("No engine for " + name);
    }
  }
}
