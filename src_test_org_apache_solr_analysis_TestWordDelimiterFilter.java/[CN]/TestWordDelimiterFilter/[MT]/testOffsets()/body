{
  WordDelimiterFilter wdf=new WordDelimiterFilter(new TokenStream(){
    Token t;
    public Token next() throws IOException {
      if (t != null)       return null;
      t=new Token("foo-bar",5,12);
      return t;
    }
  }
,1,1,0,0,1,1);
  int i=0;
  for (Token t; (t=wdf.next()) != null; ) {
    if (t.termText().equals("foo")) {
      assertEquals(5,t.startOffset());
      assertEquals(8,t.endOffset());
      i++;
    }
    if (t.termText().equals("bar")) {
      assertEquals(9,t.startOffset());
      assertEquals(12,t.endOffset());
      i++;
    }
    if (t.termText().equals("foobar")) {
      assertEquals(5,t.startOffset());
      assertEquals(12,t.endOffset());
      i++;
    }
  }
  assertEquals(3,i);
  wdf=new WordDelimiterFilter(new TokenStream(){
    Token t;
    public Token next() throws IOException {
      if (t != null)       return null;
      t=new Token("foo-bar",5,6);
      return t;
    }
  }
,1,1,0,0,1,1);
  for (Token t; (t=wdf.next()) != null; ) {
    assertEquals(5,t.startOffset());
    assertEquals(6,t.endOffset());
  }
}
