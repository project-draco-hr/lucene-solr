{
  boolean success=false;
  try {
    CodecUtil.writeFooter(out);
    success=true;
  }
  finally {
    if (success) {
      IOUtils.close(delegate,out);
    }
 else {
      IOUtils.closeWhileHandlingException(delegate,out);
    }
  }
  String metaFileName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,RangeTreeDocValuesFormat.META_EXTENSION);
  IndexOutput metaOut=state.directory.createOutput(metaFileName,state.context);
  success=false;
  try {
    CodecUtil.writeIndexHeader(metaOut,RangeTreeDocValuesFormat.META_CODEC_NAME,RangeTreeDocValuesFormat.META_VERSION_CURRENT,state.segmentInfo.getId(),state.segmentSuffix);
    metaOut.writeVInt(fieldIndexFPs.size());
    for (    Map.Entry<Integer,Long> ent : fieldIndexFPs.entrySet()) {
      metaOut.writeVInt(ent.getKey());
      metaOut.writeVLong(ent.getValue());
    }
    CodecUtil.writeFooter(metaOut);
    success=true;
  }
  finally {
    if (success) {
      IOUtils.close(metaOut);
    }
 else {
      IOUtils.closeWhileHandlingException(metaOut);
    }
  }
}
