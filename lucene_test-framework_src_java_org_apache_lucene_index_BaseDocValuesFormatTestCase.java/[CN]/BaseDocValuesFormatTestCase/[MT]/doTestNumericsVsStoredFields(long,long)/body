{
  Directory dir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir,conf);
  Document doc=new Document();
  Field idField=new StringField("id","",Field.Store.NO);
  Field storedField=newStringField("stored","",Field.Store.YES);
  Field dvField=new NumericDocValuesField("dv",0);
  doc.add(idField);
  doc.add(storedField);
  doc.add(dvField);
  int numDocs=atLeast(300);
  for (int i=0; i < numDocs; i++) {
    idField.setStringValue(Integer.toString(i));
    long value=_TestUtil.nextLong(random(),minValue,maxValue);
    storedField.setStringValue(Long.toString(value));
    dvField.setLongValue(value);
    writer.addDocument(doc);
    if (random().nextInt(31) == 0) {
      writer.commit();
    }
  }
  int numDeletions=random().nextInt(numDocs / 10);
  for (int i=0; i < numDeletions; i++) {
    int id=random().nextInt(numDocs);
    writer.deleteDocuments(new Term("id",Integer.toString(id)));
  }
  writer.close();
  DirectoryReader ir=DirectoryReader.open(dir);
  for (  AtomicReaderContext context : ir.leaves()) {
    AtomicReader r=context.reader();
    NumericDocValues docValues=r.getNumericDocValues("dv");
    for (int i=0; i < r.maxDoc(); i++) {
      long storedValue=Long.parseLong(r.document(i).get("stored"));
      assertEquals(storedValue,docValues.get(i));
    }
  }
  ir.close();
  dir.close();
}
