{
  BytesRef ref;
  while ((ref=expected.next()) != null) {
    assertEquals(ref,actual.next());
    assertEquals(expected.ord(),actual.ord());
    assertEquals(expected.term(),actual.term());
  }
  assertNull(actual.next());
  for (long i=0; i < numOrds; i++) {
    expected.seekExact(i);
    actual.seekExact(i);
    assertEquals(expected.ord(),actual.ord());
    assertEquals(expected.term(),actual.term());
  }
  for (long i=0; i < numOrds; i++) {
    expected.seekExact(i);
    assertTrue(actual.seekExact(expected.term()));
    assertEquals(expected.ord(),actual.ord());
    assertEquals(expected.term(),actual.term());
  }
  for (long i=0; i < numOrds; i++) {
    expected.seekExact(i);
    assertEquals(SeekStatus.FOUND,actual.seekCeil(expected.term()));
    assertEquals(expected.ord(),actual.ord());
    assertEquals(expected.term(),actual.term());
  }
  for (long i=0; i < numOrds; i++) {
    long randomOrd=_TestUtil.nextLong(random(),0,numOrds - 1);
    expected.seekExact(randomOrd);
    actual.seekExact(randomOrd);
    assertEquals(expected.ord(),actual.ord());
    assertEquals(expected.term(),actual.term());
  }
  for (long i=0; i < numOrds; i++) {
    long randomOrd=_TestUtil.nextLong(random(),0,numOrds - 1);
    expected.seekExact(randomOrd);
    actual.seekExact(expected.term());
    assertEquals(expected.ord(),actual.ord());
    assertEquals(expected.term(),actual.term());
  }
  for (long i=0; i < numOrds; i++) {
    BytesRef target=new BytesRef(_TestUtil.randomUnicodeString(random()));
    SeekStatus expectedStatus=expected.seekCeil(target);
    assertEquals(expectedStatus,actual.seekCeil(target));
    if (expectedStatus != SeekStatus.END) {
      assertEquals(expected.ord(),actual.ord());
      assertEquals(expected.term(),actual.term());
    }
  }
}
