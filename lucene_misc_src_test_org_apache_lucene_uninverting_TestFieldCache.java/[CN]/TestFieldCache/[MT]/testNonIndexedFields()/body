{
  Directory dir=newDirectory();
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  doc.add(new StoredField("bogusbytes","bogus"));
  doc.add(new StoredField("bogusshorts","bogus"));
  doc.add(new StoredField("bogusints","bogus"));
  doc.add(new StoredField("boguslongs","bogus"));
  doc.add(new StoredField("bogusfloats","bogus"));
  doc.add(new StoredField("bogusdoubles","bogus"));
  doc.add(new StoredField("bogusterms","bogus"));
  doc.add(new StoredField("bogustermsindex","bogus"));
  doc.add(new StoredField("bogusmultivalued","bogus"));
  doc.add(new StoredField("bogusbits","bogus"));
  iw.addDocument(doc);
  DirectoryReader ir=iw.getReader();
  iw.shutdown();
  AtomicReader ar=getOnlySegmentReader(ir);
  final FieldCache cache=FieldCache.DEFAULT;
  cache.purgeAllCaches();
  assertEquals(0,cache.getCacheEntries().length);
  NumericDocValues ints=cache.getNumerics(ar,"bogusints",FieldCache.NUMERIC_UTILS_INT_PARSER,true);
  assertEquals(0,ints.get(0));
  NumericDocValues longs=cache.getNumerics(ar,"boguslongs",FieldCache.NUMERIC_UTILS_LONG_PARSER,true);
  assertEquals(0,longs.get(0));
  NumericDocValues floats=cache.getNumerics(ar,"bogusfloats",FieldCache.NUMERIC_UTILS_FLOAT_PARSER,true);
  assertEquals(0,floats.get(0));
  NumericDocValues doubles=cache.getNumerics(ar,"bogusdoubles",FieldCache.NUMERIC_UTILS_DOUBLE_PARSER,true);
  assertEquals(0,doubles.get(0));
  BytesRef scratch=new BytesRef();
  BinaryDocValues binaries=cache.getTerms(ar,"bogusterms",true);
  binaries.get(0,scratch);
  assertEquals(0,scratch.length);
  SortedDocValues sorted=cache.getTermsIndex(ar,"bogustermsindex");
  assertEquals(-1,sorted.getOrd(0));
  sorted.get(0,scratch);
  assertEquals(0,scratch.length);
  SortedSetDocValues sortedSet=cache.getDocTermOrds(ar,"bogusmultivalued",null);
  sortedSet.setDocument(0);
  assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd());
  Bits bits=cache.getDocsWithField(ar,"bogusbits");
  assertFalse(bits.get(0));
  assertEquals(0,cache.getCacheEntries().length);
  ir.close();
  dir.close();
}
