{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(TEST_VERSION_CURRENT,null);
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwc);
  Document doc=new Document();
  doc.add(new BinaryDocValuesField("binary",new BytesRef("binary value")));
  doc.add(new SortedDocValuesField("sorted",new BytesRef("sorted value")));
  doc.add(new NumericDocValuesField("numeric",42));
  if (defaultCodecSupportsSortedSet()) {
    doc.add(new SortedSetDocValuesField("sortedset",new BytesRef("sortedset value1")));
    doc.add(new SortedSetDocValuesField("sortedset",new BytesRef("sortedset value2")));
  }
  iw.addDocument(doc);
  DirectoryReader ir=iw.getReader();
  iw.shutdown();
  AtomicReader ar=getOnlySegmentReader(ir);
  BytesRef scratch=new BytesRef();
  try {
    FieldCache.DEFAULT.getNumerics(ar,"binary",FieldCache.NUMERIC_UTILS_INT_PARSER,false);
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  BinaryDocValues binary=FieldCache.DEFAULT.getTerms(ar,"binary",true);
  binary.get(0,scratch);
  assertEquals("binary value",scratch.utf8ToString());
  try {
    FieldCache.DEFAULT.getTermsIndex(ar,"binary");
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  try {
    FieldCache.DEFAULT.getDocTermOrds(ar,"binary");
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  try {
    new DocTermOrds(ar,null,"binary");
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  Bits bits=FieldCache.DEFAULT.getDocsWithField(ar,"binary");
  assertTrue(bits.get(0));
  try {
    FieldCache.DEFAULT.getNumerics(ar,"sorted",FieldCache.NUMERIC_UTILS_INT_PARSER,false);
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  try {
    new DocTermOrds(ar,null,"sorted");
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  binary=FieldCache.DEFAULT.getTerms(ar,"sorted",true);
  binary.get(0,scratch);
  assertEquals("sorted value",scratch.utf8ToString());
  SortedDocValues sorted=FieldCache.DEFAULT.getTermsIndex(ar,"sorted");
  assertEquals(0,sorted.getOrd(0));
  assertEquals(1,sorted.getValueCount());
  sorted.get(0,scratch);
  assertEquals("sorted value",scratch.utf8ToString());
  SortedSetDocValues sortedSet=FieldCache.DEFAULT.getDocTermOrds(ar,"sorted");
  sortedSet.setDocument(0);
  assertEquals(0,sortedSet.nextOrd());
  assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd());
  assertEquals(1,sortedSet.getValueCount());
  bits=FieldCache.DEFAULT.getDocsWithField(ar,"sorted");
  assertTrue(bits.get(0));
  NumericDocValues numeric=FieldCache.DEFAULT.getNumerics(ar,"numeric",FieldCache.NUMERIC_UTILS_INT_PARSER,false);
  assertEquals(42,numeric.get(0));
  try {
    FieldCache.DEFAULT.getTerms(ar,"numeric",true);
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  try {
    FieldCache.DEFAULT.getTermsIndex(ar,"numeric");
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  try {
    FieldCache.DEFAULT.getDocTermOrds(ar,"numeric");
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  try {
    new DocTermOrds(ar,null,"numeric");
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  bits=FieldCache.DEFAULT.getDocsWithField(ar,"numeric");
  assertTrue(bits.get(0));
  if (defaultCodecSupportsSortedSet()) {
    try {
      FieldCache.DEFAULT.getNumerics(ar,"sortedset",FieldCache.NUMERIC_UTILS_INT_PARSER,false);
      fail();
    }
 catch (    IllegalStateException expected) {
    }
    try {
      FieldCache.DEFAULT.getTerms(ar,"sortedset",true);
      fail();
    }
 catch (    IllegalStateException expected) {
    }
    try {
      FieldCache.DEFAULT.getTermsIndex(ar,"sortedset");
      fail();
    }
 catch (    IllegalStateException expected) {
    }
    try {
      new DocTermOrds(ar,null,"sortedset");
      fail();
    }
 catch (    IllegalStateException expected) {
    }
    sortedSet=FieldCache.DEFAULT.getDocTermOrds(ar,"sortedset");
    sortedSet.setDocument(0);
    assertEquals(0,sortedSet.nextOrd());
    assertEquals(1,sortedSet.nextOrd());
    assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd());
    assertEquals(2,sortedSet.getValueCount());
    bits=FieldCache.DEFAULT.getDocsWithField(ar,"sortedset");
    assertTrue(bits.get(0));
  }
  ir.close();
  dir.close();
}
