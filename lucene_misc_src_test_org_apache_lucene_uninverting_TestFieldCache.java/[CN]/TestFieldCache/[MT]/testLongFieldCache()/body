{
  Directory dir=newDirectory();
  IndexWriterConfig cfg=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  cfg.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,cfg);
  Document doc=new Document();
  LongField field=new LongField("f",0L,Store.YES);
  doc.add(field);
  final long[] values=new long[TestUtil.nextInt(random(),1,10)];
  for (int i=0; i < values.length; ++i) {
    final long v;
switch (random().nextInt(10)) {
case 0:
      v=Long.MIN_VALUE;
    break;
case 1:
  v=0;
break;
case 2:
v=Long.MAX_VALUE;
break;
default :
v=TestUtil.nextLong(random(),-10,10);
break;
}
values[i]=v;
if (v == 0 && random().nextBoolean()) {
iw.addDocument(new Document());
}
 else {
field.setLongValue(v);
iw.addDocument(doc);
}
}
iw.forceMerge(1);
final DirectoryReader reader=iw.getReader();
final NumericDocValues longs=FieldCache.DEFAULT.getNumerics(getOnlySegmentReader(reader),"f",FieldCache.NUMERIC_UTILS_LONG_PARSER,false);
for (int i=0; i < values.length; ++i) {
assertEquals(values[i],longs.get(i));
}
reader.close();
iw.shutdown();
dir.close();
}
