{
  final int cardinality=set.cardinality();
  long length;
  try (IndexOutput out=dir.createOutput("foo",IOContext.DEFAULT)){
    IndexedDISI.writeBitSet(new BitSetIterator(set,cardinality),out);
    length=out.getFilePointer();
  }
   try (IndexInput in=dir.openInput("foo",IOContext.DEFAULT)){
    IndexedDISI disi=new IndexedDISI(in,0L,length,cardinality);
    BitSetIterator disi2=new BitSetIterator(set,cardinality);
    int i=0;
    for (int doc=disi2.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc=disi2.nextDoc()) {
      assertEquals(doc,disi.nextDoc());
      assertEquals(i++,disi.index());
    }
    assertEquals(DocIdSetIterator.NO_MORE_DOCS,disi.nextDoc());
  }
   for (  int step : new int[]{1,10,100,1000,10000,100000}) {
    try (IndexInput in=dir.openInput("foo",IOContext.DEFAULT)){
      IndexedDISI disi=new IndexedDISI(in,0L,length,cardinality);
      BitSetIterator disi2=new BitSetIterator(set,cardinality);
      int index=-1;
      while (true) {
        int target=disi2.docID() + step;
        int doc;
        do {
          doc=disi2.nextDoc();
          index++;
        }
 while (doc < target);
        assertEquals(doc,disi.advance(target));
        if (doc == DocIdSetIterator.NO_MORE_DOCS) {
          break;
        }
        assertEquals(index,disi.index());
      }
    }
   }
  for (  int step : new int[]{10,100,1000,10000,100000}) {
    try (IndexInput in=dir.openInput("foo",IOContext.DEFAULT)){
      IndexedDISI disi=new IndexedDISI(in,0L,length,cardinality);
      BitSetIterator disi2=new BitSetIterator(set,cardinality);
      int index=-1;
      for (int target=0; target < set.length(); ) {
        target+=TestUtil.nextInt(random(),0,step);
        int doc=disi2.docID();
        while (doc < target) {
          doc=disi2.nextDoc();
          index++;
        }
        boolean exists=disi.advanceExact(target);
        assertEquals(doc == target,exists);
        if (exists) {
          assertEquals(index,disi.index());
        }
 else         if (random().nextBoolean()) {
          assertEquals(doc,disi.nextDoc());
          assertEquals(index,disi.index());
          target=doc;
        }
      }
    }
   }
  dir.deleteFile("foo");
}
