{
  boolean ordered=(flags & UNORDERED) == 0;
  if (!ordered) {
    Map mapA=new HashMap(a.size());
    for (int i=0; i < a.size(); i++) {
      Object prev=mapA.put(a.getName(i),a.getVal(i));
    }
    Map mapB=new HashMap(b.size());
    for (int i=0; i < b.size(); i++) {
      Object prev=mapB.put(b.getName(i),b.getVal(i));
    }
    return compare(mapA,mapB,flags,handle);
  }
  int posa=0, posb=0;
  int aSkipped=0, bSkipped=0;
  for (; ; ) {
    if (posa >= a.size() && posb >= b.size()) {
      break;
    }
    String namea=null, nameb=null;
    Object vala=null, valb=null;
    int flagsa=0, flagsb=0;
    while (posa < a.size()) {
      namea=a.getName(posa);
      vala=a.getVal(posa);
      posa++;
      flagsa=flags(handle,namea);
      if ((flagsa & SKIP) != 0) {
        namea=null;
        vala=null;
        aSkipped++;
        continue;
      }
      break;
    }
    while (posb < b.size()) {
      nameb=b.getName(posb);
      valb=b.getVal(posb);
      posb++;
      flagsb=flags(handle,nameb);
      if ((flagsb & SKIP) != 0) {
        nameb=null;
        valb=null;
        bSkipped++;
        continue;
      }
      if (eq(namea,nameb)) {
        break;
      }
      return "." + namea + "!="+ nameb+ " (unordered or missing)";
    }
    if ((flagsa & SKIPVAL) != 0)     continue;
    String cmp=compare(vala,valb,flagsa,handle);
    if (cmp != null)     return "." + namea + cmp;
  }
  if (a.size() - aSkipped != b.size() - bSkipped) {
    return ".size()==" + a.size() + ","+ b.size()+ " skipped="+ aSkipped+ ","+ bSkipped;
  }
  return null;
}
