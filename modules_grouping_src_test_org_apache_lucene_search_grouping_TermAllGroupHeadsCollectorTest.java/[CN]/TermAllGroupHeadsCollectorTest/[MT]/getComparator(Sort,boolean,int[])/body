{
  final SortField[] sortFields=sort.getSort();
  return new Comparator<GroupDoc>(){
    @Override public int compare(    GroupDoc d1,    GroupDoc d2){
      for (      SortField sf : sortFields) {
        final int cmp;
        if (sf.getType() == SortField.Type.SCORE) {
          if (d1.score > d2.score) {
            cmp=-1;
          }
 else           if (d1.score < d2.score) {
            cmp=1;
          }
 else {
            cmp=sortByScoreOnly ? fieldIdToDocID[d1.id] - fieldIdToDocID[d2.id] : 0;
          }
        }
 else         if (sf.getField().equals("sort1")) {
          cmp=d1.sort1.compareTo(d2.sort1);
        }
 else         if (sf.getField().equals("sort2")) {
          cmp=d1.sort2.compareTo(d2.sort2);
        }
 else         if (sf.getField().equals("sort3")) {
          cmp=d1.sort3.compareTo(d2.sort3);
        }
 else {
          assertEquals(sf.getField(),"id");
          cmp=d1.id - d2.id;
        }
        if (cmp != 0) {
          return sf.getReverse() ? -cmp : cmp;
        }
      }
      fail();
      return 0;
    }
  }
;
}
