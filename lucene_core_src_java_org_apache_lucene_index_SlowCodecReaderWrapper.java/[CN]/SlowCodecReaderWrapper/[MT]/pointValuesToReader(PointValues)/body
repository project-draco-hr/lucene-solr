{
  if (values == null) {
    return null;
  }
  return new PointReader(){
    @Override public void intersect(    String fieldName,    IntersectVisitor visitor) throws IOException {
      values.intersect(fieldName,visitor);
    }
    @Override public void checkIntegrity() throws IOException {
    }
    @Override public void close(){
    }
    @Override public long ramBytesUsed(){
      return 0;
    }
    @Override public byte[] getMinPackedValue(    String fieldName) throws IOException {
      return values.getMinPackedValue(fieldName);
    }
    @Override public byte[] getMaxPackedValue(    String fieldName) throws IOException {
      return values.getMaxPackedValue(fieldName);
    }
    @Override public int getNumDimensions(    String fieldName) throws IOException {
      return values.getNumDimensions(fieldName);
    }
    @Override public int getBytesPerDimension(    String fieldName) throws IOException {
      return values.getBytesPerDimension(fieldName);
    }
    @Override public long size(    String fieldName){
      return values.size(fieldName);
    }
    @Override public int getDocCount(    String fieldName){
      return values.getDocCount(fieldName);
    }
  }
;
}
