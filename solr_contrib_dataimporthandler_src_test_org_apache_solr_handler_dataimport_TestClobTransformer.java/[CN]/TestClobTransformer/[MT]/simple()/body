{
  List<Map<String,String>> flds=new ArrayList<Map<String,String>>();
  Map<String,String> f=new HashMap<String,String>();
  f.put(DataImporter.COLUMN,"dsc");
  f.put(ClobTransformer.CLOB,"true");
  f.put(DataImporter.NAME,"description");
  flds.add(f);
  Context ctx=getContext(null,new VariableResolver(),null,Context.FULL_DUMP,flds,Collections.EMPTY_MAP);
  Transformer t=new ClobTransformer();
  Map<String,Object> row=new HashMap<String,Object>();
  Clob clob=(Clob)Proxy.newProxyInstance(this.getClass().getClassLoader(),new Class[]{Clob.class},new InvocationHandler(){
    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      if (method.getName().equals("getCharacterStream")) {
        return new StringReader("hello!");
      }
      return null;
    }
  }
);
  row.put("dsc",clob);
  t.transformRow(row,ctx);
  assertEquals("hello!",row.get("dsc"));
}
