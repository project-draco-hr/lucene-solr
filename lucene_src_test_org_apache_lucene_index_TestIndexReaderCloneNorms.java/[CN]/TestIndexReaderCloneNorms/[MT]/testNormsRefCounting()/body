{
  Directory dir1=new MockRAMDirectory();
  TestIndexReaderReopen.createIndex(dir1,false);
  IndexReader reader1=IndexReader.open(dir1,false);
  IndexReader reader2C=(IndexReader)reader1.clone();
  SegmentReader segmentReader2C=SegmentReader.getOnlySegmentReader(reader2C);
  segmentReader2C.norms("field1");
  Norm reader2CNorm=segmentReader2C.norms.get("field1");
  assertTrue("reader2CNorm.bytesRef()=" + reader2CNorm.bytesRef(),reader2CNorm.bytesRef().get() == 2);
  IndexReader reader3C=(IndexReader)reader2C.clone();
  SegmentReader segmentReader3C=SegmentReader.getOnlySegmentReader(reader3C);
  Norm reader3CCNorm=segmentReader3C.norms.get("field1");
  assertEquals(3,reader3CCNorm.bytesRef().get());
  IndexReader reader4C=(IndexReader)reader3C.clone();
  SegmentReader segmentReader4C=SegmentReader.getOnlySegmentReader(reader4C);
  assertEquals(4,reader3CCNorm.bytesRef().get());
  reader4C.setNorm(5,"field1",0.33f);
  try {
    reader3C.setNorm(1,"field1",0.99f);
    fail("did not hit expected exception");
  }
 catch (  Exception ex) {
  }
  assertTrue(Similarity.getDefault().decodeNormValue(segmentReader3C.norms("field1")[5]) != Similarity.getDefault().decodeNormValue(segmentReader4C.norms("field1")[5]));
  Norm reader4CCNorm=segmentReader4C.norms.get("field1");
  assertEquals(3,reader3CCNorm.bytesRef().get());
  assertEquals(1,reader4CCNorm.bytesRef().get());
  IndexReader reader5C=(IndexReader)reader4C.clone();
  SegmentReader segmentReader5C=SegmentReader.getOnlySegmentReader(reader5C);
  Norm reader5CCNorm=segmentReader5C.norms.get("field1");
  reader5C.setNorm(5,"field1",0.7f);
  assertEquals(1,reader5CCNorm.bytesRef().get());
  reader5C.close();
  reader4C.close();
  reader3C.close();
  reader2C.close();
  reader1.close();
  dir1.close();
}
