{
  super();
  this.fst=dict;
  this.fstReader=fst.getBytesReader();
  this.fstOutputs=dict.outputs;
  this.fsa=compiled.runAutomaton;
  this.level=-1;
  this.stack=new Frame[16];
  for (int i=0; i < stack.length; i++) {
    this.stack[i]=new Frame();
  }
  Frame frame;
  frame=loadVirtualFrame(newFrame());
  this.level++;
  frame=loadFirstFrame(newFrame());
  pushFrame(frame);
  this.meta=null;
  this.metaUpto=1;
  this.decoded=false;
  this.pending=false;
  if (startTerm == null) {
    pending=isAccept(topFrame());
  }
 else {
    doSeekCeil(startTerm);
    pending=!startTerm.equals(term) && isValid(topFrame()) && isAccept(topFrame());
  }
}
