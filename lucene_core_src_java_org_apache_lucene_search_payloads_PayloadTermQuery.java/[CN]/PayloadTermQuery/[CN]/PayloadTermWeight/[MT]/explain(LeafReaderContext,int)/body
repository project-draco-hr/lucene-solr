{
  PayloadTermSpanScorer scorer=scorer(context,context.reader().getLiveDocs());
  if (scorer != null) {
    int newDoc=scorer.advance(doc);
    if (newDoc == doc) {
      float freq=scorer.sloppyFreq();
      Explanation freqExplanation=Explanation.match(freq,"phraseFreq=" + freq);
      SimScorer docScorer=similarity.simScorer(context);
      Explanation scoreExplanation=docScorer.explain(doc,freqExplanation);
      Explanation expl=Explanation.match(scoreExplanation.getValue(),"weight(" + getQuery() + " in "+ doc+ ") ["+ similarity.getClass().getSimpleName()+ "], result of:",scoreExplanation);
      String field=((SpanQuery)getQuery()).getField();
      Explanation payloadExpl=function.explain(doc,field,scorer.payloadsSeen,scorer.payloadScore);
      if (includeSpanScore) {
        return Explanation.match(expl.getValue() * payloadExpl.getValue(),"btq, product of:",expl,payloadExpl);
      }
 else {
        return Explanation.match(payloadExpl.getValue(),"btq(includeSpanScore=false), result of:",payloadExpl);
      }
    }
  }
  return Explanation.noMatch("no matching term");
}
