{
  DocValues.Type[] values=DocValues.Type.values();
  DocValues.Type type=values[r.nextInt(values.length)];
  String name="random_" + type.name() + ""+ docValuesFieldPrefix;
  if ("Lucene3x".equals(codec.getName()) || doc.getField(name) != null) {
    return;
  }
  final Field f;
switch (type) {
case BYTES_FIXED_DEREF:
    f=new DerefBytesDocValuesField(name,getFixedRandomBytes(),true);
  break;
case BYTES_VAR_DEREF:
f=new DerefBytesDocValuesField(name,new BytesRef(_TestUtil.randomUnicodeString(r,20)),false);
break;
case BYTES_FIXED_STRAIGHT:
f=new StraightBytesDocValuesField(name,getFixedRandomBytes(),true);
break;
case BYTES_VAR_STRAIGHT:
f=new StraightBytesDocValuesField(name,new BytesRef(_TestUtil.randomUnicodeString(r,20)),false);
break;
case BYTES_FIXED_SORTED:
f=new SortedBytesDocValuesField(name,getFixedRandomBytes(),true);
break;
case BYTES_VAR_SORTED:
f=new SortedBytesDocValuesField(name,new BytesRef(_TestUtil.randomUnicodeString(r,20)),false);
break;
case FLOAT_32:
f=new FloatDocValuesField(name,r.nextFloat());
break;
case FLOAT_64:
f=new DoubleDocValuesField(name,r.nextDouble());
break;
case VAR_INTS:
f=new PackedLongDocValuesField(name,r.nextLong());
break;
case FIXED_INTS_16:
f=new ShortDocValuesField(name,(short)r.nextInt(Short.MAX_VALUE));
break;
case FIXED_INTS_32:
f=new IntDocValuesField(name,r.nextInt());
break;
case FIXED_INTS_64:
f=new LongDocValuesField(name,r.nextLong());
break;
case FIXED_INTS_8:
f=new ByteDocValuesField(name,(byte)r.nextInt(128));
break;
default :
throw new IllegalArgumentException("no such type: " + type);
}
doc.add(f);
}
