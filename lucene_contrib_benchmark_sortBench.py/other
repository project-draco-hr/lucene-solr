import types
import re
import time
import os
import shutil
import sys
import cPickle
import datetime
if (sys.platform.lower().find('darwin') != (-1)):
    osName = 'osx'
elif (sys.platform.lower().find('win') != (-1)):
    osName = 'windows'
elif (sys.platform.lower().find('linux') != (-1)):
    osName = 'linux'
else:
    osName = 'unix'
TRUNK_DIR = '/lucene/clean'
FLEX_DIR = '/lucene/flex.branch'
DEBUG = False
JAVA_COMMAND = 'java -Xms2048M -Xmx2048M -Xbatch -server'
INDEX_NUM_THREADS = 1
INDEX_NUM_DOCS = 5000000
LOG_DIR = 'logs'
DO_BALANCED = False
if (osName == 'osx'):
    WIKI_FILE = '/x/lucene/enwiki-20090724-pages-articles.xml.bz2'
    INDEX_DIR_BASE = '/lucene'
else:
    WIKI_FILE = '/x/lucene/enwiki-20090724-pages-articles.xml.bz2'
    INDEX_DIR_BASE = '/x/lucene'
if DEBUG:
    NUM_ROUND = 0
else:
    NUM_ROUND = 7
if 0:
    print 'compile...'
    if ('-nocompile' not in sys.argv):
        if (os.system('ant compile > compile.log 2>&1') != 0):
            raise RuntimeError('compile failed (see compile.log)')
BASE_SEARCH_ALG = '\nanalyzer=org.apache.lucene.analysis.standard.StandardAnalyzer\ndirectory=FSDirectory\nwork.dir = $INDEX$\nsearch.num.hits = $NUM_HITS$\nquery.maker=org.apache.lucene.benchmark.byTask.feeds.FileBasedQueryMaker\nfile.query.maker.file = queries.txt\nprint.hits.field = $PRINT_FIELD$\nlog.queries=true\nlog.step=100000\n\n$OPENREADER$\n{"XSearchWarm" $SEARCH$}\n\n# Turn off printing, after warming:\nSetProp(print.hits.field,)\n\n$ROUNDS$\nCloseReader \nRepSumByPrefRound XSearch\n'
BASE_INDEX_ALG = '\nanalyzer=org.apache.lucene.analysis.standard.StandardAnalyzer\n\n$OTHER$\ndeletion.policy = org.apache.lucene.index.NoDeletionPolicy\ndoc.tokenized = false\ndoc.body.tokenized = true\ndoc.stored = true\ndoc.body.stored = false\ndoc.term.vector = false\nlog.step.AddDoc=10000\n\ndirectory=FSDirectory\nautocommit=false\ncompound=false\n\nwork.dir=$WORKDIR$\n\n{ "BuildIndex"\n  - CreateIndex\n  $INDEX_LINE$\n  - CommitIndex(dp0)\n  - CloseIndex\n  $DELETIONS$\n}\n\nRepSumByPrefRound BuildIndex\n'
if (__name__ == '__main__'):
    main()
