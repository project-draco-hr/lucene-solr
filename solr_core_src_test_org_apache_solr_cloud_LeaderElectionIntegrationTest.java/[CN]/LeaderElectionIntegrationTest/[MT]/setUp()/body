{
  super.setUp();
  ignoreException("No UpdateLog found - cannot sync");
  ignoreException("No UpdateLog found - cannot recover");
  System.setProperty("zkClientTimeout","8000");
  zkDir=createTempDir("zkData").toFile().getAbsolutePath();
  zkServer=new ZkTestServer(zkDir);
  zkServer.run();
  System.setProperty("zkHost",zkServer.getZkAddress());
  AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),zkServer.getZkAddress(),"solrconfig.xml","schema.xml");
  log.info("####SETUP_START " + getTestName());
  System.setProperty("solr.test.sys.prop1","propone");
  System.setProperty("solr.test.sys.prop2","proptwo");
  for (int i=7000; i < 7000 + NUM_SHARD_REPLICAS; i++) {
    try {
      setupContainer(i,"shard1");
    }
 catch (    Throwable t) {
      log.error("!!!Could not start container:" + i + " The exception thrown was: "+ t.getClass()+ " "+ t.getMessage());
      fail("Could not start container:" + i + ". Reason:"+ t.getClass()+ " "+ t.getMessage());
    }
  }
  try {
    setupContainer(3333,"shard2");
  }
 catch (  Throwable t) {
    log.error("!!!Could not start container 3333. The exception thrown was: " + t.getClass() + " "+ t.getMessage());
    fail("Could not start container: 3333");
  }
  zkClient=new SolrZkClient(zkServer.getZkAddress(),AbstractZkTestCase.TIMEOUT);
  reader=new ZkStateReader(zkClient);
  reader.createClusterStateWatchersAndUpdate();
  boolean initSuccessful=false;
  for (int i=0; i < 30; i++) {
    List<String> liveNodes=zkClient.getChildren("/live_nodes",null,true);
    if (liveNodes.size() == NUM_SHARD_REPLICAS + 1) {
      initSuccessful=true;
      break;
    }
    Thread.sleep(1000);
    log.info("Waiting for more nodes to come up, now: " + liveNodes.size() + "/"+ (NUM_SHARD_REPLICAS + 1));
  }
  if (!initSuccessful) {
    fail("Init was not successful!");
  }
  log.info("####SETUP_END " + getTestName());
}
