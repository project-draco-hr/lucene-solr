{
  assertU(delQ("*:*"));
  assertU(commit());
  String[] doc={"id","1","term_s","YYYY","group_s","group1","test_ti","5","test_tl","10","test_tf","2000"};
  assertU(adoc(doc));
  String[] doc1={"id","2","term_s","YYYY","group_s","group1","test_ti","50","test_tl","100","test_tf","200"};
  assertU(adoc(doc1));
  String[] doc2={"id","3","term_s","YYYY","test_ti","5000","test_tl","100","test_tf","200"};
  assertU(adoc(doc2));
  String[] doc3={"id","4","term_s","YYYY","test_ti","500","test_tl","1000","test_tf","2000"};
  assertU(adoc(doc3));
  String[] doc4={"id","5","term_s","YYYY","group_s","group2","test_ti","4","test_tl","10","test_tf","2000"};
  assertU(adoc(doc4));
  String[] doc5={"id","6","term_s","YYYY","group_s","group2","test_ti","10","test_tl","100","test_tf","200"};
  assertU(adoc(doc5));
  String[] doc6={"id","7","term_s","YYYY","group_s","group1","test_ti","5","test_tl","10","test_tf","2000"};
  assertU(adoc(doc6));
  String[] doc7={"id","8","term_s","YYYY","group_s","group1","test_ti","50","test_tl","100","test_tf","200"};
  assertU(adoc(doc7));
  String[] doc8={"id","9","term_s","YYYY","test_ti","5000","test_tl","100","test_tf","200"};
  assertU(adoc(doc8));
  String[] doc9={"id","10","term_s","YYYY","test_ti","500","test_tl","1000","test_tf","2000"};
  assertU(adoc(doc9));
  String[] doc10={"id","11","term_s","YYYY","group_s","group2","test_ti","4","test_tl","10","test_tf","2000"};
  assertU(adoc(doc10));
  assertU(commit());
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add("rq","{!" + ReRankQParserPlugin.NAME + " "+ ReRankQParserPlugin.RERANK_QUERY+ "=$rqq "+ ReRankQParserPlugin.RERANK_DOCS+ "=11 "+ ReRankQParserPlugin.RERANK_WEIGHT+ "=2}");
  params.add("q","{!edismax bq=$bqq1}*:*");
  params.add("bqq1","id:1^10 id:2^20 id:3^30 id:4^40 id:5^50 id:6^60 id:7^70 id:8^80 id:9^90 id:10^100 id:11^110");
  params.add("rqq","test_ti:50^1000");
  params.add("fl","id,score");
  params.add("start","0");
  params.add("rows","2");
  assertQ(req(params),"*[count(//doc)=2]","//result/doc[1]/float[@name='id'][.='8.0']","//result/doc[2]/float[@name='id'][.='2.0']");
  params=new ModifiableSolrParams();
  params.add("rq","{!" + ReRankQParserPlugin.NAME + " "+ ReRankQParserPlugin.RERANK_QUERY+ "=$rqq "+ ReRankQParserPlugin.RERANK_DOCS+ "=11 "+ ReRankQParserPlugin.RERANK_WEIGHT+ "=2}");
  params.add("q","{!edismax bq=$bqq1}*:*");
  params.add("bqq1","id:1^10 id:2^20 id:3^30 id:4^40 id:5^50 id:6^60 id:7^70 id:8^80 id:9^90 id:10^100 id:11^110");
  params.add("rqq","test_ti:50^1000");
  params.add("fl","id,score");
  params.add("start","0");
  params.add("rows","3");
  params.add("qt","/elevate");
  params.add("elevateIds","1,4");
  assertQ(req(params),"*[count(//doc)=3]","//result/doc[1]/float[@name='id'][.='1.0']","//result/doc[2]/float[@name='id'][.='4.0']","//result/doc[3]/float[@name='id'][.='8.0']");
}
