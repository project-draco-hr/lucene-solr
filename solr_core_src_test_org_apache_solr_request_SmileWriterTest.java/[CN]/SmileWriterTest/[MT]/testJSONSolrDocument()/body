{
  SolrQueryRequest req=req(CommonParams.WT,"json",CommonParams.FL,"id,score");
  SolrQueryResponse rsp=new SolrQueryResponse();
  SmileResponseWriter w=new SmileResponseWriter();
  ReturnFields returnFields=new SolrReturnFields(req);
  rsp.setReturnFields(returnFields);
  ByteArrayOutputStream buf=new ByteArrayOutputStream();
  SolrDocument solrDoc=new SolrDocument();
  solrDoc.addField("id","1");
  solrDoc.addField("subject","hello2");
  solrDoc.addField("title","hello3");
  solrDoc.addField("score","0.7");
  SolrDocumentList list=new SolrDocumentList();
  list.setNumFound(1);
  list.setStart(0);
  list.setMaxScore(0.7f);
  list.add(solrDoc);
  rsp.add("response",list);
  w.write(buf,req,rsp);
  byte[] bytes=buf.toByteArray();
  Map m=(Map)decodeSmile(new ByteArrayInputStream(bytes));
  m=(Map)m.get("response");
  List l=(List)m.get("docs");
  Map doc=(Map)l.get(0);
  assertFalse(doc.containsKey("subject"));
  assertFalse(doc.containsKey("title"));
  assertTrue(doc.containsKey("id"));
  assertTrue(doc.containsKey("score"));
  req.close();
}
