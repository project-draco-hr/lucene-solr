{
  SolrQueryRequest req=req("dummy");
  SolrQueryResponse rsp=new SolrQueryResponse();
  rsp.add("data1",Float.NaN);
  rsp.add("data2",Double.NEGATIVE_INFINITY);
  rsp.add("data3",Float.POSITIVE_INFINITY);
  SmileResponseWriter smileResponseWriter=new SmileResponseWriter();
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  smileResponseWriter.write(baos,req,rsp);
  Map m=(Map)decodeSmile(new ByteArrayInputStream(baos.toByteArray()));
  CharArr out=new CharArr();
  JSONWriter jsonWriter=new JSONWriter(out,2);
  jsonWriter.setIndentSize(-1);
  jsonWriter.write(m);
  String s=new String(ZkStateReader.toUTF8(out),StandardCharsets.UTF_8);
  assertEquals(s,"{\"data1\":NaN,\"data2\":-Infinity,\"data3\":Infinity}");
  req.close();
}
