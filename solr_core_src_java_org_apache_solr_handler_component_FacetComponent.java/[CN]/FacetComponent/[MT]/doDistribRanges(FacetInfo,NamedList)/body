{
  @SuppressWarnings("unchecked") SimpleOrderedMap<SimpleOrderedMap<Object>> facet_ranges=(SimpleOrderedMap<SimpleOrderedMap<Object>>)facet_counts.get("facet_ranges");
  if (facet_ranges != null) {
    for (    Map.Entry<String,SimpleOrderedMap<Object>> entry : facet_ranges) {
      final String field=entry.getKey();
      SimpleOrderedMap<Object> fieldMap=fi.rangeFacets.get(field);
      if (fieldMap == null) {
        fi.rangeFacets.add(field,entry.getValue());
      }
 else {
        @SuppressWarnings("unchecked") NamedList<Integer> shardFieldValues=(NamedList<Integer>)entry.getValue().get("counts");
        @SuppressWarnings("unchecked") NamedList<Integer> existFieldValues=(NamedList<Integer>)fieldMap.get("counts");
        for (        Map.Entry<String,Integer> existPair : existFieldValues) {
          final String key=existPair.getKey();
          Integer newValue=shardFieldValues.get(key);
          if (null != newValue) {
            Integer oldValue=existPair.getValue();
            existPair.setValue(oldValue + newValue);
          }
        }
        for (        String otherKey : OTHER_KEYS) {
          Integer shardValue=(Integer)entry.getValue().get(otherKey);
          if (shardValue != null && shardValue > 0) {
            Integer existingValue=(Integer)fieldMap.get(otherKey);
            int idx=fieldMap.indexOf(otherKey,0);
            fieldMap.setVal(idx,existingValue + shardValue);
          }
        }
      }
    }
  }
}
