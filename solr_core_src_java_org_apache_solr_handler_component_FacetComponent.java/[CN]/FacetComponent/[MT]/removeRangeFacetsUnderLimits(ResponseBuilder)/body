{
  if (rb.stage != ResponseBuilder.STAGE_EXECUTE_QUERY) {
    return;
  }
  FacetInfo fi=rb._facetInfo;
  @SuppressWarnings("unchecked") SimpleOrderedMap<SimpleOrderedMap<Object>> facet_ranges=(SimpleOrderedMap<SimpleOrderedMap<Object>>)fi.rangeFacets;
  if (facet_ranges == null) {
    return;
  }
  for (  Map.Entry<String,SimpleOrderedMap<Object>> entry : facet_ranges) {
    boolean replace=false;
    final String field=entry.getKey();
    int minCount=rb.req.getParams().getFieldInt(field,FacetParams.FACET_MINCOUNT,0);
    if (minCount == 0) {
      continue;
    }
    @SuppressWarnings("unchecked") NamedList<Integer> vals=(NamedList<Integer>)facet_ranges.get(field).get("counts");
    NamedList newList=new NamedList();
    for (    Map.Entry<String,Integer> pair : vals) {
      if (pair.getValue() >= minCount) {
        newList.add(pair.getKey(),pair.getValue());
      }
 else {
        log.trace("Removing facet/key: " + pair.getKey() + "/"+ pair.getValue().toString()+ " mincount="+ minCount);
        replace=true;
      }
    }
    if (replace) {
      vals.clear();
      vals.addAll(newList);
    }
  }
}
