{
  assertQ("test default operator with mm (AND + 0% => 0 hits)",req("q","(line notfound) OR notfound","qf","text","q.op","AND","mm","0%","defType","edismax"),"*[count(//doc)=0]");
  assertQ("test default operator with mm (OR + 0% => 1 hit)",req("q","line notfound OR notfound","qf","text","q.op","OR","mm","0%","defType","edismax"),"*[count(//doc)=1]");
  assertQ("test default operator with mm (OR + 100% => 0 hits)",req("q","line notfound OR notfound","qf","text","q.op","OR","mm","100%","defType","edismax"),"*[count(//doc)=0]");
  assertQ("test default operator with mm (OR + 35% => 1 hit)",req("q","line notfound notfound2 OR notfound","qf","text","q.op","OR","mm","35%","defType","edismax"),"*[count(//doc)=1]");
  assertQ("test default operator with mm (OR + 75% => 0 hits)",req("q","line notfound notfound2 OR notfound3","qf","text","q.op","OR","mm","75%","defType","edismax"),"*[count(//doc)=0]");
  assertQ("test default operator with mm (AND + 0% => 1 hit)",req("q","(line enemy) OR notfound","qf","text","q.op","AND","mm","0%","defType","edismax"),"*[count(//doc)=1]");
  assertQ("test default operator with mm (AND + 50% => 1 hit)",req("q","(line enemy) OR (line notfound) OR (death cannons) OR (death notfound)","qf","text","q.op","AND","mm","50%","defType","edismax"),"*[count(//doc)=1]");
  assertQ("test default operator with mm (AND + 75% => 0 hits)",req("q","(line enemy) OR (line notfound) OR (death cannons) OR (death notfound)","qf","text","q.op","AND","mm","75%","defType","edismax"),"*[count(//doc)=0]");
}
