{
  assertU(adoc("id","s0","phrase_sw","foo bar a b c","boost_d","1.0"));
  assertU(adoc("id","s1","phrase_sw","foo a bar b c","boost_d","2.0"));
  assertU(adoc("id","s2","phrase_sw","foo a b bar c","boost_d","3.0"));
  assertU(adoc("id","s3","phrase_sw","foo a b c bar","boost_d","4.0"));
  assertU(commit());
  assertQ("default order assumption wrong",req("q","foo bar","qf","phrase_sw","bf","boost_d","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s3']","//doc[2]/str[@name='id'][.='s2']","//doc[3]/str[@name='id'][.='s1']","//doc[4]/str[@name='id'][.='s0']");
  assertQ("pf not working",req("q","foo bar","qf","phrase_sw","pf","phrase_sw^10","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s0']");
  assertQ("pf2 not working",req("q","foo bar","qf","phrase_sw","pf2","phrase_sw^10","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s0']");
  assertQ("pf3 not working",req("q","a b bar","qf","phrase_sw","pf3","phrase_sw^10","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s2']");
  assertQ("ps not working for pf2",req("q","bar foo","qf","phrase_sw","pf2","phrase_sw^10","ps","2","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s0']");
  assertQ("ps not working for pf3",req("q","a bar foo","qf","phrase_sw","pf3","phrase_sw^10","ps","3","fl","score,*","debugQuery","true","defType","edismax"),"//doc[1]/str[@name='id'][.='s1']");
  assertQ("ps/ps2/ps3 with default slop overrides not working",req("q","zzzz xxxx cccc vvvv","qf","phrase_sw","pf","phrase_sw~1^10 phrase_sw~2^20 phrase_sw^30","pf2","phrase_sw~2^22 phrase_sw^33","pf3","phrase_sw~2^222 phrase_sw^333","ps","3","defType","edismax","debugQuery","true"),"//str[@name='parsedquery'][contains(.,'(phrase_sw:\"zzzz xxxx cccc vvvv\"~1)^10.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"zzzz xxxx cccc vvvv\"~2)^20.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"zzzz xxxx cccc vvvv\"~3)^30.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"zzzz xxxx\"~2)^22.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"xxxx cccc\"~2)^22.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"cccc vvvv\"~2)^22.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"zzzz xxxx\"~3)^33.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"xxxx cccc\"~3)^33.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"cccc vvvv\"~3)^33.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"zzzz xxxx cccc\"~2)^222.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"xxxx cccc vvvv\"~2)^222.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"zzzz xxxx cccc\"~3)^333.0')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"xxxx cccc vvvv\"~3)^333.0')]");
  assertQ("ps2 not working",req("q","bar foo","qf","phrase_sw","pf2","phrase_sw^10","ps2","2","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s0']");
  assertQ("Specifying slop in pf2 param not working",req("q","bar foo","qf","phrase_sw","pf2","phrase_sw~2^10","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s0']");
  assertQ("Slop in ps2 parameter should override ps",req("q","bar foo","qf","phrase_sw","pf2","phrase_sw^10","ps","0","ps2","2","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s0']");
  assertQ("ps3 not working",req("q","a bar foo","qf","phrase_sw","pf3","phrase_sw^10","ps3","3","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s1']");
  assertQ("Specifying slop in pf3 param not working",req("q","a bar foo","qf","phrase_sw","pf3","phrase_sw~3^10","fl","score,*","defType","edismax"),"//doc[1]/str[@name='id'][.='s1']");
  assertQ("ps2 should not override slop specified inline in pf2",req("q","zzzz xxxx cccc vvvv","qf","phrase_sw","pf2","phrase_sw~2^22","ps2","4","defType","edismax","debugQuery","true"),"//str[@name='parsedquery'][contains(.,'(phrase_sw:\"zzzz xxxx\"~2)^22.0')]");
  assertQ("phrase field queries spanning multiple fields should be within their own dismax queries",req("q","aaaa bbbb cccc","qf","phrase_sw phrase1_sw","pf2","phrase_sw phrase1_sw","pf3","phrase_sw phrase1_sw","defType","edismax","debugQuery","true"),"//str[@name='parsedquery'][contains(.,'(phrase_sw:\"aaaa bbbb\" | phrase1_sw:\"aaaa bbbb\")')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"bbbb cccc\" | phrase1_sw:\"bbbb cccc\")')]","//str[@name='parsedquery'][contains(.,'(phrase_sw:\"aaaa bbbb cccc\" | phrase1_sw:\"aaaa bbbb cccc\")')]");
}
