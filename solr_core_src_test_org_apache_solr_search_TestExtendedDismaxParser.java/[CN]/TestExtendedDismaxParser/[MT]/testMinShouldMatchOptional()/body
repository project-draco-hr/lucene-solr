{
  assertQ("test minShouldMatch (top level optional terms only)",req("q","stocks oil gold","qf","text_sw","mm","50%","defType","edismax"),"*[count(//doc)=4]");
  assertQ("test minShouldMatch (top level optional and negative terms mm=50%)",req("q","stocks oil gold -stockade","qf","text_sw","mm","50%","defType","edismax"),"*[count(//doc)=3]");
  assertQ("test minShouldMatch (top level optional and negative terms mm=100%)",req("q","stocks gold -stockade","qf","text_sw","mm","100%","defType","edismax"),"*[count(//doc)=1]");
  assertQ("test minShouldMatch (top level required terms only)",req("q","stocks AND oil","qf","text_sw","mm","50%","defType","edismax"),"*[count(//doc)=1]");
  assertQ("test minShouldMatch (top level optional and required terms)",req("q","oil gold +stocks","qf","text_sw","mm","50%","defType","edismax"),"*[count(//doc)=3]");
  assertQ("test minShouldMatch (top level optional with explicit OR and parens)",req("q","(snake OR stocks) oil","qf","text_sw","mm","100%","defType","edismax"),"*[count(//doc)=2]");
  assertQ("test minShouldMatch (top level optional with explicit OR without parens)",req("q","snake OR stocks oil","qf","text_sw","q.op","OR","mm","100%","defType","edismax"),"*[count(//doc)=0]");
  assertQ("test minShouldMatch (top level optional with explicit OR without parens)",req("q","snake OR stocks oil","qf","text_sw","q.op","AND","mm","100%","defType","edismax"),"*[count(//doc)=0]");
}
