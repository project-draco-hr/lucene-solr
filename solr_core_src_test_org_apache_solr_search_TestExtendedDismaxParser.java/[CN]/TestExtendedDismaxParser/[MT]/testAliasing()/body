{
  String oner="*[count(//doc)=1]";
  String twor="*[count(//doc)=2]";
  String nor="*[count(//doc)=0]";
  assertQ(req("defType","edismax","q","myalias:Zapp"),nor);
  assertQ(req("defType","edismax","q","myalias:Zapp","f.myalias.qf","name"),oner);
  assertQ(req("defType","edismax","uf","myalias","q","myalias:(Zapp Obnoxious)","f.myalias.qf","name^2.0 mytrait_ss^5.0","mm","50%"),oner);
  assertQ(req("defType","edismax","q","Zapp Obnoxious","f.myalias.qf","name^2.0 mytrait_ss^5.0"),nor);
  assertQ(req("defType","edismax","q","Zapp Obnoxious","qf","myalias^10.0","f.myalias.qf","name^2.0 mytrait_ss^5.0"),oner);
  assertQ(req("defType","edismax","q","Zapp Obnoxious","qf","myalias^10.0","f.myalias.qf","name^2.0 trait_ss^5.0"),twor);
  assertQ(req("defType","edismax","q","Zapp Obnoxious","qf","myalias^10.0","f.myalias.qf","name^2.0 trait_ss^5.0","mm","100%"),oner);
  assertQ(req("defType","edismax","q","Zapp Obnoxious","qf","who^10.0 where^3.0","f.who.qf","name^2.0","f.where.qf","mytrait_ss^5.0"),oner);
  assertQ(req("defType","edismax","q","Zapp Obnoxious","qf","myalias","f.myalias.qf","name mytrait_ss","uf","myalias"),oner);
  assertQ(req("defType","edismax","uf","who","q","who:(Zapp Obnoxious)","f.who.qf","name^2.0 trait_ss^5.0","qf","id"),twor);
  assertQ(req("defType","edismax","uf","* -name","q","who:(Zapp Obnoxious)","f.who.qf","name^2.0 trait_ss^5.0"),twor);
}
