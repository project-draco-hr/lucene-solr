{
  String name=op.getStr(NAME);
  Map<String,Object> dataMap=op.getDataMap();
  if (op.hasError())   return null;
  dataMap=getDeepCopy(dataMap,3);
  dataMap.remove(NAME);
  String before=(String)dataMap.remove("before");
  for (  String key : dataMap.keySet()) {
    if (!Permission.knownKeys.contains(key))     op.addError("Unknown key, " + key);
  }
  try {
    Permission.load(name,dataMap);
  }
 catch (  Exception e) {
    op.addError(e.getMessage());
    return null;
  }
  Map<String,Object> permissions=getMapValue(latestConf,"permissions");
  if (before == null) {
    permissions.put(name,dataMap);
  }
 else {
    Map<String,Object> permissionsCopy=new LinkedHashMap<>();
    for (    Map.Entry<String,Object> e : permissions.entrySet()) {
      if (e.getKey().equals(before))       permissionsCopy.put(name,dataMap);
      permissionsCopy.put(e.getKey(),e.getValue());
    }
    if (!permissionsCopy.containsKey(name)) {
      op.addError("Invalid 'before' :" + before);
      return null;
    }
    latestConf.put("permissions",permissionsCopy);
  }
  return latestConf;
}
