{
  if (permissions == null || permissions.isEmpty())   return MatchStatus.NO_PERMISSIONS_FOUND;
  Principal principal=context.getUserPrincipal();
  loopPermissions:   for (int i=0; i < permissions.size(); i++) {
    Permission permission=permissions.get(i);
    if (PermissionNameProvider.values.containsKey(permission.name)) {
      if (context.getHandler() instanceof PermissionNameProvider) {
        PermissionNameProvider handler=(PermissionNameProvider)context.getHandler();
        PermissionNameProvider.Name permissionName=handler.getPermissionName(context);
        if (permissionName == null || !permission.name.equals(permissionName.name)) {
          continue;
        }
      }
 else {
        if (permission.wellknownName != PermissionNameProvider.Name.ALL)         continue;
      }
    }
 else {
      if (permission.method != null && !permission.method.contains(context.getHttpMethod())) {
        continue;
      }
      if (permission.params != null) {
        for (        Map.Entry<String,Function<String[],Boolean>> e : permission.params.entrySet()) {
          String[] paramVal=context.getParams().getParams(e.getKey());
          if (!e.getValue().apply(paramVal))           continue loopPermissions;
        }
      }
    }
    if (permission.role == null) {
      return MatchStatus.PERMITTED;
    }
    if (principal == null) {
      log.info("request has come without principal. failed permission {} ",permission);
      return MatchStatus.USER_REQUIRED;
    }
 else     if (permission.role.contains("*")) {
      return MatchStatus.PERMITTED;
    }
    for (    String role : permission.role) {
      Set<String> userRoles=usersVsRoles.get(principal.getName());
      if (userRoles != null && userRoles.contains(role))       return MatchStatus.PERMITTED;
    }
    log.info("This resource is configured to have a permission {}, The principal {} does not have the right role ",permission,principal);
    return MatchStatus.FORBIDDEN;
  }
  log.debug("No permissions configured for the resource {} . So allowed to access",context.getResource());
  return MatchStatus.NO_PERMISSIONS_FOUND;
}
