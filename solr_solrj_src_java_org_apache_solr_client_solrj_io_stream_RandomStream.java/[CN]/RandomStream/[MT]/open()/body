{
  if (cache != null) {
    cloudSolrClient=cache.getCloudSolrClient(zkHost);
  }
 else {
    cloudSolrClient=new CloudSolrClient(zkHost);
  }
  ModifiableSolrParams params=getParams(this.props);
  params.remove("sort");
  Random rand=new Random();
  int seed=rand.nextInt();
  String sortField="random_" + seed;
  params.add("sort",sortField + " asc");
  QueryRequest request=new QueryRequest(params);
  try {
    QueryResponse response=request.process(cloudSolrClient,collection);
    SolrDocumentList docs=response.getResults();
    documentIterator=docs.iterator();
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
}
