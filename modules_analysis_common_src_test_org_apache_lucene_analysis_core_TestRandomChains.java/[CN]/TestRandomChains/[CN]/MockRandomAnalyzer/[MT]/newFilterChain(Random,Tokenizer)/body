{
  TokenFilterSpec spec=new TokenFilterSpec();
  spec.stream=tokenizer;
  StringBuilder descr=new StringBuilder();
  int numFilters=random.nextInt(5);
  for (int i=0; i < numFilters; i++) {
    boolean success=false;
    while (!success) {
      try {
        int idx=random.nextInt(tokenfilters.length);
        try {
          Constructor c=tokenfilters[idx].getConstructor(Version.class,TokenStream.class);
          spec.stream=(TokenFilter)c.newInstance(TEST_VERSION_CURRENT,spec.stream);
        }
 catch (        NoSuchMethodException e) {
          Constructor c=tokenfilters[idx].getConstructor(TokenStream.class);
          spec.stream=(TokenFilter)c.newInstance(spec.stream);
        }
        if (descr.length() > 0) {
          descr.append(",");
        }
        descr.append(tokenfilters[idx].toString());
        success=true;
      }
 catch (      Exception e) {
      }
    }
  }
  spec.toString=descr.toString();
  return spec;
}
