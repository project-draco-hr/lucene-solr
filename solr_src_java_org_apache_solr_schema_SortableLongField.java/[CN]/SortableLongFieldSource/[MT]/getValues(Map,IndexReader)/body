{
  final long def=defVal;
  return new StringIndexDocValues(this,reader,field){
    protected String toTerm(    String readableValue){
      return NumberUtils.long2sortableStr(readableValue);
    }
    public float floatVal(    int doc){
      return (float)longVal(doc);
    }
    public int intVal(    int doc){
      return (int)longVal(doc);
    }
    public long longVal(    int doc){
      int ord=termsIndex.getOrd(doc);
      return ord == 0 ? def : NumberUtils.SortableStr2long(termsIndex.lookup(ord,new BytesRef()),0,5);
    }
    public double doubleVal(    int doc){
      return (double)longVal(doc);
    }
    public String strVal(    int doc){
      return Long.toString(longVal(doc));
    }
    public String toString(    int doc){
      return description() + '=' + longVal(doc);
    }
    @Override public ValueFiller getValueFiller(){
      return new ValueFiller(){
        private final MutableValueLong mval=new MutableValueLong();
        @Override public MutableValue getValue(){
          return mval;
        }
        @Override public void fillValue(        int doc){
          mval.value=longVal(doc);
        }
      }
;
    }
  }
;
}
