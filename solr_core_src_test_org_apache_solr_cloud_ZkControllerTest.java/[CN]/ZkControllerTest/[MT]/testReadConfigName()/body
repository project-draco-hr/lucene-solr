{
  String zkDir=dataDir.getAbsolutePath() + File.separator + "zookeeper/server1/data";
  ZkTestServer server=new ZkTestServer(zkDir);
  try {
    server.run();
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    SolrZkClient zkClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    String actualConfigName="firstConfig";
    zkClient.makePath(ZkController.CONFIGS_ZKNODE + "/" + actualConfigName,true);
    Map<String,String> props=new HashMap<String,String>();
    props.put("configName",actualConfigName);
    ZkNodeProps zkProps=new ZkNodeProps(props);
    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + "/" + COLLECTION_NAME,ZkStateReader.toJSON(zkProps),CreateMode.PERSISTENT,true);
    if (DEBUG) {
      zkClient.printLayoutToStdOut();
    }
    zkClient.close();
    ZkController zkController=new ZkController(null,server.getZkAddress(),TIMEOUT,10000,"localhost","8983","solr",new CurrentCoreDescriptorProvider(){
      @Override public List<CoreDescriptor> getCurrentDescriptors(){
        return null;
      }
    }
);
    try {
      String configName=zkController.readConfigName(COLLECTION_NAME);
      assertEquals(configName,actualConfigName);
    }
  finally {
      zkController.close();
    }
  }
  finally {
    server.shutdown();
  }
}
