{
  assertEquals("localhost:8888_solr",ZkController.generateNodeName("localhost","8888","solr"));
  assertEquals("localhost:8888_solr",ZkController.generateNodeName("localhost","8888","/solr"));
  assertEquals("localhost:8888_solr",ZkController.generateNodeName("localhost","8888","/solr/"));
  assertEquals("localhost:8888_",ZkController.generateNodeName("localhost","8888",""));
  assertEquals("localhost:8888_",ZkController.generateNodeName("localhost","8888","/"));
  assertEquals("foo-bar:77_solr%2Fsub_dir",ZkController.generateNodeName("foo-bar","77","solr/sub_dir"));
  assertEquals("foo-bar:77_solr%2Fsub_dir",ZkController.generateNodeName("foo-bar","77","/solr/sub_dir"));
  assertEquals("foo-bar:77_solr%2Fsub_dir",ZkController.generateNodeName("foo-bar","77","/solr/sub_dir/"));
  String zkDir=createTempDir("zkData").getAbsolutePath();
  ZkTestServer server=new ZkTestServer(zkDir);
  try {
    server.run();
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    ZkStateReader zkStateReader=new ZkStateReader(server.getZkAddress(),TIMEOUT,TIMEOUT);
    try {
      assertEquals("http://zzz.xxx:1234/solr",zkStateReader.getBaseUrlForNodeName("zzz.xxx:1234_solr"));
      assertEquals("http://xxx:99",zkStateReader.getBaseUrlForNodeName("xxx:99_"));
      assertEquals("http://foo-bar.baz.org:9999/some_dir",zkStateReader.getBaseUrlForNodeName("foo-bar.baz.org:9999_some_dir"));
      assertEquals("http://foo-bar.baz.org:9999/solr/sub_dir",zkStateReader.getBaseUrlForNodeName("foo-bar.baz.org:9999_solr%2Fsub_dir"));
      assertEquals("http://foo:9876/solr",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo","9876","solr")));
      assertEquals("http://foo:9876/solr",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo","9876","/solr")));
      assertEquals("http://foo:9876/solr",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo","9876","/solr/")));
      assertEquals("http://foo.bar.com:9876/solr/sub_dir",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo.bar.com","9876","solr/sub_dir")));
      assertEquals("http://foo.bar.com:9876/solr/sub_dir",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo.bar.com","9876","/solr/sub_dir/")));
      assertEquals("http://foo-bar:9876",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo-bar","9876","")));
      assertEquals("http://foo-bar:9876",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo-bar","9876","/")));
      assertEquals("http://foo-bar.com:80/some_dir",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo-bar.com","80","some_dir")));
      assertEquals("http://foo-bar.com:80/some_dir",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo-bar.com","80","/some_dir")));
      zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,ZkStateReader.toJSON(Collections.singletonMap("urlScheme","https")),CreateMode.PERSISTENT,true);
      assertEquals("https://zzz.xxx:1234/solr",zkStateReader.getBaseUrlForNodeName("zzz.xxx:1234_solr"));
      assertEquals("https://foo-bar.com:80/some_dir",zkStateReader.getBaseUrlForNodeName(ZkController.generateNodeName("foo-bar.com","80","/some_dir")));
    }
  finally {
      zkStateReader.close();
    }
  }
  finally {
    server.shutdown();
  }
}
