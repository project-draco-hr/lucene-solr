{
  this.a=a;
  if (a.getNumStates() == 0) {
    throw new IllegalArgumentException("this automaton accepts nothing");
  }
  this.transitions=a.getSortedTransitions();
  leadsToAccept=new HashMap<>();
  final Map<Integer,List<ArrivingTransition>> allArriving=new HashMap<>();
  final LinkedList<Integer> q=new LinkedList<>();
  final Set<Integer> seen=new HashSet<>();
  int numStates=a.getNumStates();
  for (int s=0; s < numStates; s++) {
    for (    Transition t : transitions[s]) {
      List<ArrivingTransition> tl=allArriving.get(t.dest);
      if (tl == null) {
        tl=new ArrayList<>();
        allArriving.put(t.dest,tl);
      }
      tl.add(new ArrivingTransition(s,t));
    }
    if (a.isAccept(s)) {
      q.add(s);
      seen.add(s);
    }
  }
  while (q.isEmpty() == false) {
    final int s=q.removeFirst();
    List<ArrivingTransition> arriving=allArriving.get(s);
    if (arriving != null) {
      for (      ArrivingTransition at : arriving) {
        final int from=at.from;
        if (!seen.contains(from)) {
          q.add(from);
          seen.add(from);
          leadsToAccept.put(at.t,Boolean.TRUE);
        }
      }
    }
  }
}
