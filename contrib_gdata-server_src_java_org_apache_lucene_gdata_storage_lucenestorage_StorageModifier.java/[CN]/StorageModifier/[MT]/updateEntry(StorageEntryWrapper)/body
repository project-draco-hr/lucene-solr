{
  if (wrapper.getOperation() != StorageOperation.UPDATE)   throw new StorageException("Illegal method call -- updateEntry does not accept other storageOperations than update");
  this.lock.lock();
  try {
    Term tempTerm=new Term(StorageEntryWrapper.FIELD_ENTRY_ID,wrapper.getEntryId());
    this.documentMap.put(wrapper.getEntryId(),wrapper.getLuceneDocument());
    this.deletedForUpdateDocumentQueue.add(tempTerm);
    storageModified();
    if (this.modifiedCounter != 0)     try {
      this.controller.writeRecoverEntry(wrapper);
      this.buffer.addEntry(wrapper);
    }
 catch (    Exception e) {
      this.documentMap.remove(wrapper.getEntryId());
      this.deletedForUpdateDocumentQueue.remove(tempTerm);
    }
  }
  finally {
    this.lock.unlock();
  }
}
