{
  PhraseQuery.Builder builder=new PhraseQuery.Builder();
  Term[] terms=query.getTerms();
  int[] positions=query.getPositions();
  for (int i=0; i < terms.length; ++i) {
    builder.add(terms[i],positions[i]);
  }
  builder.setSlop(slop);
  query=builder.build();
  MockDirectoryWrapper ramDir=new MockDirectoryWrapper(random(),new RAMDirectory());
  RandomIndexWriter writer=new RandomIndexWriter(random(),ramDir,new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false));
  writer.addDocument(doc);
  IndexReader reader=writer.getReader();
  IndexSearcher searcher=newSearcher(reader);
  MaxFreqCollector c=new MaxFreqCollector();
  searcher.search(query,c);
  assertEquals("slop: " + slop + "  query: "+ query+ "  doc: "+ doc+ "  Wrong number of hits",expectedNumResults,c.totalHits);
  writer.close();
  reader.close();
  ramDir.close();
  return c.max;
}
