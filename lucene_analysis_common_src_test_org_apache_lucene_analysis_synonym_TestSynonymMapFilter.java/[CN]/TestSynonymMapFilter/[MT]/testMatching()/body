{
  b=new SynonymMap.Builder(true);
  final boolean keepOrig=false;
  add("a b","ab",keepOrig);
  add("a c","ac",keepOrig);
  add("a","aa",keepOrig);
  add("b","bb",keepOrig);
  add("z x c v","zxcv",keepOrig);
  add("x c","xc",keepOrig);
  final SynonymMap map=b.build();
  Analyzer a=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName,    Reader reader){
      Tokenizer tokenizer=new MockTokenizer(reader,MockTokenizer.WHITESPACE,false);
      return new TokenStreamComponents(tokenizer,new SynonymFilter(tokenizer,map,true));
    }
  }
;
  checkOneTerm(a,"$","$");
  checkOneTerm(a,"a","aa");
  checkOneTerm(a,"b","bb");
  assertAnalyzesTo(a,"a $",new String[]{"aa","$"},new int[]{1,1});
  assertAnalyzesTo(a,"$ a",new String[]{"$","aa"},new int[]{1,1});
  assertAnalyzesTo(a,"a a",new String[]{"aa","aa"},new int[]{1,1});
  assertAnalyzesTo(a,"z x c v",new String[]{"zxcv"},new int[]{1});
  assertAnalyzesTo(a,"z x c $",new String[]{"z","xc","$"},new int[]{1,1,1});
}
