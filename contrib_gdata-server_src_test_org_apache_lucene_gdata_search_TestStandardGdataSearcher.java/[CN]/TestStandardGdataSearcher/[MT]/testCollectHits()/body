{
  Query q=new TermQuery(new Term(FIELDNAME,FIELDVALUE));
  Hits hits=this.searcher.get().search(q);
  assertEquals(amountDocuments,hits.length());
  List<String> returnValue=this.gdataSearcher.collectHits(hits,1,0);
  assertEquals(hits.doc(0).getField(IndexDocument.FIELD_ENTRY_ID).stringValue(),returnValue.get(0));
  returnValue=this.gdataSearcher.collectHits(hits,1,1);
  assertEquals(hits.doc(0).getField(IndexDocument.FIELD_ENTRY_ID).stringValue(),returnValue.get(0));
  returnValue=this.gdataSearcher.collectHits(hits,1,this.amountDocuments);
  assertEquals(1,returnValue.size());
  assertEquals(hits.doc(this.amountDocuments - 1).getField(IndexDocument.FIELD_ENTRY_ID).stringValue(),returnValue.get(0));
  returnValue=this.gdataSearcher.collectHits(hits,10,this.amountDocuments);
  assertEquals(1,returnValue.size());
  assertEquals(hits.doc(this.amountDocuments - 1).getField(IndexDocument.FIELD_ENTRY_ID).stringValue(),returnValue.get(0));
  returnValue=this.gdataSearcher.collectHits(hits,50,0);
  assertEquals(this.amountDocuments,returnValue.size());
  assertTrue(returnValue.containsAll(this.idlist));
  returnValue=this.gdataSearcher.collectHits(hits,1,5);
  assertEquals(1,returnValue.size());
  assertEquals(hits.doc(4).getField(IndexDocument.FIELD_ENTRY_ID).stringValue(),returnValue.get(0));
  returnValue=this.gdataSearcher.collectHits(hits,50,this.amountDocuments);
  assertEquals(1,returnValue.size());
  assertEquals(hits.doc(this.amountDocuments - 1).getField(IndexDocument.FIELD_ENTRY_ID).stringValue(),returnValue.get(0));
  returnValue=this.gdataSearcher.collectHits(hits,1,this.amountDocuments + 1);
  assertEquals(0,returnValue.size());
}
