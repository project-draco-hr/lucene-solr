{
  String text="Qwerty";
  Map<String,Analyzer> analyzerPerField=Collections.<String,Analyzer>singletonMap("special",new SimpleAnalyzer());
  Analyzer defaultAnalyzer=new WhitespaceAnalyzer();
  PerFieldAnalyzerWrapper analyzer=new PerFieldAnalyzerWrapper(defaultAnalyzer,analyzerPerField);
  try (TokenStream tokenStream=analyzer.tokenStream("field",text)){
    CharTermAttribute termAtt=tokenStream.getAttribute(CharTermAttribute.class);
    tokenStream.reset();
    assertTrue(tokenStream.incrementToken());
    assertEquals("WhitespaceAnalyzer does not lowercase","Qwerty",termAtt.toString());
    assertFalse(tokenStream.incrementToken());
    tokenStream.end();
  }
   try (TokenStream tokenStream=analyzer.tokenStream("special",text)){
    CharTermAttribute termAtt=tokenStream.getAttribute(CharTermAttribute.class);
    tokenStream.reset();
    assertTrue(tokenStream.incrementToken());
    assertEquals("SimpleAnalyzer lowercases","qwerty",termAtt.toString());
    assertFalse(tokenStream.incrementToken());
    tokenStream.end();
  }
   analyzer.close();
  defaultAnalyzer.close();
  IOUtils.close(analyzerPerField.values());
}
