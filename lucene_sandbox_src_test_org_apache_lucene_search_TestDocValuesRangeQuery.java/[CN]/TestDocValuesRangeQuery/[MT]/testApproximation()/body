{
  Directory dir=newDirectory();
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir);
  final int numDocs=atLeast(100);
  for (int i=0; i < numDocs; ++i) {
    Document doc=new Document();
    final int numValues=random().nextInt(3);
    for (int j=0; j < numValues; ++j) {
      final long value=TestUtil.nextLong(random(),-100,10000);
      doc.add(new SortedNumericDocValuesField("dv1",value));
      doc.add(new SortedSetDocValuesField("dv2",toSortableBytes(value)));
      doc.add(new LongPoint("idx",value));
      doc.add(new StringField("f",random().nextBoolean() ? "a" : "b",Store.NO));
    }
    iw.addDocument(doc);
  }
  if (random().nextBoolean()) {
    iw.deleteDocuments(LongPoint.newRangeQuery("idx",0L,10L));
  }
  iw.commit();
  final IndexReader reader=iw.getReader();
  final IndexSearcher searcher=newSearcher(reader,false);
  iw.close();
  for (int i=0; i < 100; ++i) {
    final Long min=TestUtil.nextLong(random(),-100,1000);
    final Long max=TestUtil.nextLong(random(),-100,1000);
    BooleanQuery.Builder ref=new BooleanQuery.Builder();
    ref.add(LongPoint.newRangeQuery("idx",min,max),Occur.FILTER);
    ref.add(new TermQuery(new Term("f","a")),Occur.MUST);
    BooleanQuery.Builder bq1=new BooleanQuery.Builder();
    bq1.add(DocValuesRangeQuery.newLongRange("dv1",min,max,true,true),Occur.FILTER);
    bq1.add(new TermQuery(new Term("f","a")),Occur.MUST);
    assertSameMatches(searcher,ref.build(),bq1.build(),true);
    BooleanQuery.Builder bq2=new BooleanQuery.Builder();
    bq2.add(DocValuesRangeQuery.newBytesRefRange("dv2",toSortableBytes(min),toSortableBytes(max),true,true),Occur.FILTER);
    bq2.add(new TermQuery(new Term("f","a")),Occur.MUST);
    assertSameMatches(searcher,ref.build(),bq2.build(),true);
  }
  reader.close();
  dir.close();
}
