{
  final SolrQueryRequest req=new LocalSolrQueryRequest(factory.core,Collections.<String,String[]>emptyMap());
  try {
    final SolrQueryResponse rsp=new SolrQueryResponse();
    SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req,rsp));
    try {
      if (!factory.iAmInChargeOfPeriodicDeletes()) {
        return;
      }
      log.info("Begining periodic deletion of expired docs");
      UpdateRequestProcessorChain chain=core.getUpdateProcessingChain(deleteChainName);
      UpdateRequestProcessor proc=chain.createProcessor(req,rsp);
      if (null == proc) {
        log.warn("No active processors, skipping automatic deletion " + "of expired docs using chain: {}",deleteChainName);
        return;
      }
      try {
        DeleteUpdateCommand del=new DeleteUpdateCommand(req);
        del.setQuery("{!cache=false}" + expireField + ":[* TO "+ SolrRequestInfo.getRequestInfo().getNOW().toInstant()+ "]");
        proc.processDelete(del);
        CommitUpdateCommand commit=new CommitUpdateCommand(req,false);
        commit.softCommit=true;
        commit.openSearcher=true;
        proc.processCommit(commit);
      }
  finally {
        proc.finish();
      }
      log.info("Finished periodic deletion of expired docs");
    }
 catch (    IOException ioe) {
      log.error("IOException in periodic deletion of expired docs: " + ioe.getMessage(),ioe);
    }
catch (    RuntimeException re) {
      log.error("Runtime error in periodic deletion of expired docs: " + re.getMessage(),re);
    }
 finally {
      SolrRequestInfo.clearRequestInfo();
    }
  }
  finally {
    req.close();
  }
}
