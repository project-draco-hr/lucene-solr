{
  SolrQueryRequest req=rb.req;
  SolrParams params=req.getParams();
  rb.isDistrib=params.getBool("distrib",false);
  String shards=params.get(ShardParams.SHARDS);
  boolean hasShardURL=shards != null && shards.indexOf('/') > 0;
  rb.isDistrib=hasShardURL | rb.isDistrib;
  if (rb.isDistrib) {
    CloudState cloudState=null;
    Map<String,Slice> slices=null;
    CoreDescriptor coreDescriptor=req.getCore().getCoreDescriptor();
    CloudDescriptor cloudDescriptor=coreDescriptor.getCloudDescriptor();
    ZkController zkController=coreDescriptor.getCoreContainer().getZkController();
    if (shards != null) {
      List<String> lst=StrUtils.splitSmart(shards,",",true);
      rb.shards=lst.toArray(new String[lst.size()]);
      rb.slices=new String[rb.shards.length];
      if (zkController != null) {
        for (int i=0; i < rb.shards.length; i++) {
          if (rb.shards[i].indexOf('/') < 0) {
            rb.slices[i]=rb.shards[i];
            rb.shards[i]=null;
          }
        }
      }
    }
 else     if (zkController != null) {
      cloudState=zkController.getCloudState();
      slices=cloudState.getSlices(cloudDescriptor.getCollectionName());
      rb.slices=slices.keySet().toArray(new String[slices.size()]);
      rb.shards=new String[rb.slices.length];
    }
    if (zkController != null) {
      for (int i=0; i < rb.shards.length; i++) {
        if (rb.shards[i] == null) {
          if (cloudState == null) {
            cloudState=zkController.getCloudState();
            slices=cloudState.getSlices(cloudDescriptor.getCollectionName());
          }
          String sliceName=rb.slices[i];
          Slice slice=slices.get(sliceName);
          if (slice == null) {
            rb.shards[i]="";
            continue;
          }
          Map<String,ZkNodeProps> sliceShards=slice.getShards();
          Set<String> liveNodes=cloudState.getLiveNodes();
          StringBuilder sliceShardsStr=new StringBuilder();
          boolean first=true;
          for (          ZkNodeProps nodeProps : sliceShards.values()) {
            if (!liveNodes.contains(nodeProps.get(ZkStateReader.NODE_NAME)))             continue;
            if (first) {
              first=false;
            }
 else {
              sliceShardsStr.append('|');
            }
            String url=nodeProps.get("url");
            if (url.startsWith("http://"))             url=url.substring(7);
            sliceShardsStr.append(url);
          }
          rb.shards[i]=sliceShardsStr.toString();
        }
      }
    }
  }
  String shards_rows=params.get(ShardParams.SHARDS_ROWS);
  if (shards_rows != null) {
    rb.shards_rows=Integer.parseInt(shards_rows);
  }
  String shards_start=params.get(ShardParams.SHARDS_START);
  if (shards_start != null) {
    rb.shards_start=Integer.parseInt(shards_start);
  }
}
