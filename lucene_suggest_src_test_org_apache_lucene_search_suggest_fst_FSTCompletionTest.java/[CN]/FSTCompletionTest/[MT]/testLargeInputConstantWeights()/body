{
  FSTCompletionLookup lookup=new FSTCompletionLookup(10,true);
  Random r=random();
  List<TermFreq> keys=new ArrayList<TermFreq>();
  for (int i=0; i < 5000; i++) {
    keys.add(new TermFreq(_TestUtil.randomSimpleString(r),-1));
  }
  lookup.build(new TermFreqArrayIterator(keys));
  Long previous=null;
  for (  TermFreq tf : keys) {
    Long current=((Number)lookup.get(_TestUtil.bytesToCharSequence(tf.term,random()))).longValue();
    if (previous != null) {
      assertEquals(previous,current);
    }
    previous=current;
  }
}
