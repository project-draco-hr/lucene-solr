{
  long minValue=pending[0];
  long maxValue=pending[0];
  for (int i=1; i < pendingOff; ++i) {
    minValue=Math.min(minValue,pending[i]);
    maxValue=Math.max(maxValue,pending[i]);
  }
  final long delta=maxValue - minValue;
  minValues[valuesOff]=minValue;
  if (delta == 0) {
    deltas[valuesOff]=new PackedInts.NullReader(pendingOff);
  }
 else {
    final int bitsRequired=delta < 0 ? 64 : PackedInts.bitsRequired(delta);
    for (int i=0; i < pendingOff; ++i) {
      pending[i]-=minValue;
    }
    final PackedInts.Mutable mutable=PackedInts.getMutable(pendingOff,bitsRequired,PackedInts.COMPACT);
    for (int i=0; i < pendingOff; ) {
      i+=mutable.set(i,pending,i,pendingOff - i);
    }
    deltas[valuesOff]=mutable;
  }
}
