{
  p.set("Z_num_i","Z_" + p.get("num_i"));
  if (p.get("num_is") == null)   p.add("num_is","num_is");
  if (p.get("num_fs") == null)   p.add("num_fs","num_fs");
  MacroExpander m=new MacroExpander(p.getMap());
  String cat_s=m.expand("${cat_s}");
  String where_s=m.expand("${where_s}");
  String num_d=m.expand("${num_d}");
  String num_i=m.expand("${num_i}");
  String num_is=m.expand("${num_is}");
  String num_fs=m.expand("${num_fs}");
  String Z_num_i=m.expand("${Z_num_i}");
  String val_b=m.expand("${val_b}");
  String date=m.expand("${date}");
  String super_s=m.expand("${super_s}");
  String sparse_s=m.expand("${sparse_s}");
  String multi_ss=m.expand("${multi_ss}");
  client.deleteByQuery("*:*",null);
  SolrInputDocument doc=sdoc("id","1",cat_s,"A",where_s,"NY",num_d,"4",num_i,"2",num_is,"2",num_is,"-5",num_fs,"2",num_fs,"-5",super_s,"zodiac",date,"2001-01-01T01:01:01Z",val_b,"true",sparse_s,"one");
  client.add(doc,null);
  client.add(doc,null);
  client.add(doc,null);
  client.add(sdoc("id","2",cat_s,"B",where_s,"NJ",num_d,"-9",num_i,"-5",num_is,"3",num_is,"-1",num_fs,"3",num_fs,"-1.5",super_s,"superman",date,"2002-02-02T02:02:02Z",val_b,"false",multi_ss,"a",multi_ss,"b",Z_num_i,"0"),null);
  client.add(sdoc("id","3"),null);
  client.commit();
  client.add(sdoc("id","4",cat_s,"A",where_s,"NJ",num_d,"2",num_i,"3",num_is,"0",num_is,"3",num_fs,"0",num_fs,"3",super_s,"spiderman",date,"2003-03-03T03:03:03Z",multi_ss,"b",Z_num_i,"" + Integer.MIN_VALUE),null);
  client.add(sdoc("id","5",cat_s,"B",where_s,"NJ",num_d,"11",num_i,"7",num_is,"0",num_fs,"0",super_s,"batman",date,"2001-02-03T01:02:03Z",sparse_s,"two",multi_ss,"a"),null);
  client.commit();
  client.add(sdoc("id","6",cat_s,"B",where_s,"NY",num_d,"-5",num_i,"-5",num_is,"-1",num_fs,"-1.5",super_s,"hulk",date,"2002-03-01T03:02:01Z",multi_ss,"b",multi_ss,"a",Z_num_i,"" + Integer.MAX_VALUE),null);
  client.commit();
  ModifiableSolrParams debugP=params(p);
  debugP.set("debugQuery","true");
  client.testJQ(params(debugP,"q","*:*","json.facet","{catA:{query:{q:'${cat_s}:A'}},  catA2:{query:{query:'${cat_s}:A'}},  catA3:{query:'${cat_s}:A'}    }"),"facets=={ 'count':6, 'catA':{ 'count':2}, 'catA2':{ 'count':2}, 'catA3':{ 'count':2}}","debug/facet-trace==");
  client.testJQ(params(p,"q","*:*","json.facet","{catA:{query:{q:'${cat_s}:A'}},  catA2:{query:{query:'${cat_s}:A'}},  catA3:{query:'${cat_s}:A'}    }"),"facets=={ 'count':6, 'catA':{ 'count':2}, 'catA2':{ 'count':2}, 'catA3':{ 'count':2}}");
  client.testJQ(params(p,"q","*:*","json.facet","{ catB:{type:query, q:'${cat_s}:B', facet:{nj:{query:'${where_s}:NJ'}, ny:{query:'${where_s}:NY'}} }}"),"facets=={ 'count':6, 'catB':{'count':3, 'nj':{'count':2}, 'ny':{'count':1}}}");
  client.testJQ(params(p,"q","id:(2 3)","json.facet","{ catB:{query:{q:'${cat_s}:B', facet:{nj:{query:'${where_s}:NJ'}, ny:{query:'${where_s}:NY'}} }}}"),"facets=={ 'count':2, 'catB':{'count':1, 'nj':{'count':1}, 'ny':{'count':0}}}");
  client.testJQ(params(p,"q","*:*","json.facet","{ catB:{query:{q:'${cat_s}:B', facet:{nj:{query:{q:'${where_s}:NJ'}}, ny:{query:'${where_s}:NY'}} }}}"),"facets=={ 'count':6, 'catB':{'count':3, 'nj':{'count':2}, 'ny':{'count':1}}}");
  client.testJQ(params(p,"q","*:*","json.facet","{c1:{field:'${cat_s}'}, c2:{field:{field:'${cat_s}'}}, c3:{${terms} type:terms, field:'${cat_s}'}  }"),"facets=={ 'count':6, " + "'c1':{ 'buckets':[{ 'val':'B', 'count':3}, { 'val':'A', 'count':2}]}, " + "'c2':{ 'buckets':[{ 'val':'B', 'count':3}, { 'val':'A', 'count':2}]}, "+ "'c3':{ 'buckets':[{ 'val':'B', 'count':3}, { 'val':'A', 'count':2}]}} ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:'${cat_s}', mincount:3}}}"),"facets=={ 'count':6, " + "'f1':{  'buckets':[{ 'val':'B', 'count':3}]} } ");
  client.testJQ(params(p,"q","id:1","json.facet","{f1:{terms:'${cat_s}'}}"),"facets=={ 'count':1, " + "'f1':{  'buckets':[{ 'val':'A', 'count':1}]} } ");
  client.testJQ(params(p,"q","id:1","json.facet","{processEmpty:true, f1:{terms:{${terms} field:'${cat_s}', mincount:0}}}"),"facets=={ 'count':1, " + "'f1':{  'buckets':[{ 'val':'A', 'count':1}, { 'val':'B', 'count':0}]} } ");
  client.testJQ(params(p,"q","id:1","json.facet","{processEmpty:true, f1:{terms:{${terms} field:'${cat_s}', mincount:0, allBuckets:true, facet:{n1:'sum(${num_d})'}  }}}"),"facets=={ 'count':1, " + "'f1':{ allBuckets:{ 'count':1, n1:4.0}, 'buckets':[{ 'val':'A', 'count':1, n1:4.0}, { 'val':'B', 'count':0 /*, n1:0.0 */ }]} } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:'${cat_s}', sort:'n1 desc', facet:{n1:'sum(${num_d})'}  }}" + " , f2:{terms:{${terms} field:'${cat_s}', sort:'n1 asc', facet:{n1:'sum(${num_d})'}  }} }"),"facets=={ 'count':6, " + "  f1:{  'buckets':[{ val:'A', count:2, n1:6.0 }, { val:'B', count:3, n1:-3.0}]}" + ", f2:{  'buckets':[{ val:'B', count:3, n1:-3.0}, { val:'A', count:2, n1:6.0 }]} }");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{${terms} type:terms, field:'${cat_s}', sort:'x desc', facet:{x:'min(${num_d})'}  }" + " , f2:{${terms} type:terms, field:'${cat_s}', sort:'x desc', facet:{x:'max(${num_d})'}  } " + " , f3:{${terms} type:terms, field:'${cat_s}', sort:'x desc', facet:{x:'unique(${where_s})'}  } "+ " , f4:{${terms} type:terms, field:'${cat_s}', sort:'x desc', facet:{x:'hll(${where_s})'}  } "+ "}"),"facets=={ 'count':6, " + "  f1:{  'buckets':[{ val:'A', count:2, x:2.0 },  { val:'B', count:3, x:-9.0}]}" + ", f2:{  'buckets':[{ val:'B', count:3, x:11.0 }, { val:'A', count:2, x:4.0 }]} "+ ", f3:{  'buckets':[{ val:'A', count:2, x:2 },    { val:'B', count:3, x:2 }]} "+ ", f4:{  'buckets':[{ val:'A', count:2, x:2 },    { val:'B', count:3, x:2 }]} "+ "}");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:'${cat_s}', sort:'n1 desc', facet:{n1:'avg(add(${num_d},${num_d}))'}  }}" + " , f2:{terms:{${terms} field:'${cat_s}', sort:'n1 asc', facet:{n1:'avg(add(${num_d},${num_d}))'}  }} }"),"facets=={ 'count':6, " + "  f1:{  'buckets':[{ val:'A', count:2, n1:6.0 }, { val:'B', count:3, n1:-2.0}]}" + ", f2:{  'buckets':[{ val:'B', count:3, n1:-2.0}, { val:'A', count:2, n1:6.0 }]} }");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:'${cat_s}', sort:'n1 desc', facet:{n1:'percentile(${num_d},50)'}  }}" + " , f2:{terms:{${terms} field:'${cat_s}', sort:'n1 asc', facet:{n1:'percentile(${num_d},50)'}  }} }"),"facets=={ 'count':6, " + "  f1:{  'buckets':[{ val:'A', count:2, n1:3.0 }, { val:'B', count:3, n1:-5.0}]}" + ", f2:{  'buckets':[{ val:'B', count:3, n1:-5.0}, { val:'A', count:2, n1:3.0 }]} }");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${cat_s}, sort:'n1 desc', facet:{n1:'percentile(${num_d},50,0,100)'}  }}" + " , f2:{terms:{${terms} field:${cat_s}, sort:'n1 asc', facet:{n1:'percentile(${num_d},50,0,100)'}  }} }"),"facets=={ 'count':6, " + "  f1:{  'buckets':[{ val:'A', count:2, n1:[3.0,2.0,4.0] }, { val:'B', count:3, n1:[-5.0,-9.0,11.0] }]}" + ", f2:{  'buckets':[{ val:'B', count:3, n1:[-5.0,-9.0,11.0]}, { val:'A', count:2, n1:[3.0,2.0,4.0] }]} }");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:'${cat_s}', sort:'count desc' }  }" + "           , f2:{terms:{${terms} field:'${cat_s}', sort:'count asc'  }  }" + "           , f3:{terms:{${terms} field:'${cat_s}', sort:'index asc'  }  }"+ "           , f4:{terms:{${terms} field:'${cat_s}', sort:'index desc' }  }"+ "}"),"facets=={ count:6 " + " ,f1:{buckets:[ {val:B,count:3}, {val:A,count:2} ] }" + " ,f2:{buckets:[ {val:A,count:2}, {val:B,count:3} ] }"+ " ,f3:{buckets:[ {val:A,count:2}, {val:B,count:3} ] }"+ " ,f4:{buckets:[ {val:B,count:3}, {val:A,count:2} ] }"+ "}");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:'${cat_s}', sort:'count' }  }" + "           , f2:{terms:{${terms} field:'${cat_s}', sort:'count asc'  }  }" + "           , f3:{terms:{${terms} field:'${cat_s}', sort:'index'  }  }"+ "           , f4:{terms:{${terms} field:'${cat_s}', sort:'index desc' }  }"+ "}"),"facets=={ count:6 " + " ,f1:{buckets:[ {val:B,count:3}, {val:A,count:2} ] }" + " ,f2:{buckets:[ {val:A,count:2}, {val:B,count:3} ] }"+ " ,f3:{buckets:[ {val:A,count:2}, {val:B,count:3} ] }"+ " ,f4:{buckets:[ {val:B,count:3}, {val:A,count:2} ] }"+ "}");
  client.testJQ(params(p,"q","id:1 id:6","json.facet","{f1:{terms:{${terms} field:'${cat_s}', sort:'count desc' }  }" + "           , f2:{terms:{${terms} field:'${cat_s}', sort:'count asc'  }  }" + "}"),"facets=={ count:2 " + " ,f1:{buckets:[ {val:A,count:1}, {val:B,count:1} ] }" + " ,f2:{buckets:[ {val:A,count:1}, {val:B,count:1} ] }"+ "}");
  client.testJQ(params(p,"q","*:*","json.facet","{cat:{terms:{${terms} field:'${cat_s}', facet:{nj:{query:'${where_s}:NJ'}}    }   }} }"),"facets=={ 'count':6, " + "'cat':{ 'buckets':[{ 'val':'B', 'count':3, 'nj':{ 'count':2}}, { 'val':'A', 'count':2, 'nj':{ 'count':1}}]} }");
  client.testJQ(params(p,"q","id:(2 5 4)","json.facet","{cat:{terms:{${terms} field:'${cat_s}', facet:{nj:{query:'${where_s}:NJ'}}    }   }} }"),"facets=={ 'count':3, " + "'cat':{ 'buckets':[{ 'val':'B', 'count':2, 'nj':{ 'count':2}}, { 'val':'A', 'count':1, 'nj':{ 'count':1}}]} }");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${super_s}, prefix:s, mincount:0 }}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[{val:spiderman, count:1}, {val:superman, count:1}]} } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${super_s}, prefix:ttt, mincount:0 }}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[]} } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${super_s}, prefix:aaaaaa, mincount:0 }}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[]} } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${super_s}, prefix:zzzzzz, mincount:0 }}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[]} } ");
  client.testJQ(params(p,"q","*:*","json.facet","{" + " f1:{${terms} type:terms, field:${where_s}, prefix:N  }" + ",f2:{${terms} type:terms, field:${where_s}, prefix:NY }"+ ",f3:{${terms} type:terms, field:${where_s}, prefix:NJ }"+ "}"),"facets=={ 'count':6 " + ",f1:{ 'buckets':[ {val:NJ,count:3}, {val:NY,count:2} ]}" + ",f2:{ 'buckets':[ {val:NY,count:2} ]}"+ ",f3:{ 'buckets':[ {val:NJ,count:3} ]}"+ " } ");
  client.testJQ(params(p,"q","*:*","json.facet","{" + " f1:{${terms} type:terms, field:${multi_ss}, prefix:A  }" + ",f2:{${terms} type:terms, field:${multi_ss}, prefix:z }"+ ",f3:{${terms} type:terms, field:${multi_ss}, prefix:aa }"+ ",f4:{${terms} type:terms, field:${multi_ss}, prefix:bb }"+ ",f5:{${terms} type:terms, field:${multi_ss}, prefix:a }"+ ",f6:{${terms} type:terms, field:${multi_ss}, prefix:b }"+ "}"),"facets=={ 'count':6 " + ",f1:{buckets:[]}" + ",f2:{buckets:[]}"+ ",f3:{buckets:[]}"+ ",f4:{buckets:[]}"+ ",f5:{buckets:[ {val:a,count:3} ]}"+ ",f6:{buckets:[ {val:b,count:3} ]}"+ " } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${noexist}, missing:true}}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[], missing:{count:6} } } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${sparse_s}, missing:true }}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[{val:one, count:1}, {val:two, count:1}], missing:{count:4} } } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${sparse_s}, missing:true, facet:{x:'sum(${num_d})'}   }}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[{val:one, count:1, x:4.0}, {val:two, count:1, x:11.0}], missing:{count:4, x:-12.0}   } } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${sparse_s}, missing:true, prefix:on, facet:{x:'sum(${num_d})'}   }}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[{val:one, count:1, x:4.0}], missing:{count:4, x:-12.0}   } } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f1:{terms:{${terms} field:${sparse_s}, missing:true, prefix:ppp, facet:{x:'sum(${num_d})'}   }}}"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[], missing:{count:4, x:-12.0}   } } ");
  client.testJQ(params(p,"q","*:*","rows","0","facet","true","json.facet","{f1:{terms:{${terms} field:${cat_s}, numBuckets:true, limit:1}}}"),"facets=={ 'count':6, " + "'f1':{ numBuckets:2, buckets:[{val:B, count:3}]} } ");
  client.testJQ(params(p,"q","*:*","rows","0","facet","true","json.facet","{f1:{terms:{${terms} field:${cat_s}, numBuckets:true, prefix:B}}}"),"facets=={ 'count':6, " + "'f1':{ numBuckets:1, buckets:[{val:B, count:3}]} } ");
  client.testJQ(params(p,"q","*:*","rows","0","facet","true","json.facet","{f1:{terms:{${terms} field:${cat_s}, numBuckets:true, mincount:3}}}"),"facets=={ 'count':6, " + "'f1':{ numBuckets:1, buckets:[{val:B, count:3}]} } ");
  client.testJQ(params(p,"q","*:*","json.facet","{f:{type:range, field:${num_d}, start:-5, end:10, gap:5}}"),"facets=={count:6, f:{buckets:[ {val:-5.0,count:1}, {val:0.0,count:2}, {val:5.0,count:0} ] } }");
  client.testJQ(params(p,"q","*:*","json.facet","{f:{type:range, field:${date}, start:'2001-01-01T00:00:00Z', end:'2003-01-01T00:00:00Z', gap:'+1YEAR'}}"),"facets=={count:6, f:{buckets:[ {val:'2001-01-01T00:00:00Z',count:2}, {val:'2002-01-01T00:00:00Z',count:2}] } }");
  client.testJQ(params(p,"q","*:*","json.facet","{f:{type:range, field:${date}, start:'2002-01-01T00:00:00Z', end:'2005-01-01T00:00:00Z', gap:'+1YEAR',   other:all, facet:{ x:'avg(${num_d})' } } }"),"facets=={count:6, f:{buckets:[ {val:'2002-01-01T00:00:00Z',count:2,x:-7.0}, {val:'2003-01-01T00:00:00Z',count:1,x:2.0}, {val:'2004-01-01T00:00:00Z',count:0}], before:{count:2,x:7.5}, after:{count:0}, between:{count:3,x:-4.0}  } }");
  client.testJQ(params(p,"q","*:*","json.facet","{f:{range:{field:${num_d}, start:-5, end:10, gap:5, include:upper}}}"),"facets=={count:6, f:{buckets:[ {val:-5.0,count:0}, {val:0.0,count:2}, {val:5.0,count:0} ] } }");
  client.testJQ(params(p,"q","*:*","json.facet","{f:{range:{field:${num_d}, start:-5, end:10, gap:5,   facet:{ x:'sum(${num_i})', ny:{query:'${where_s}:NY'}}   }}}"),"facets=={count:6, f:{buckets:[ {val:-5.0,count:1,x:-5.0,ny:{count:1}}, {val:0.0,count:2,x:5.0,ny:{count:1}}, {val:5.0,count:0 /* ,x:0.0,ny:{count:0} */ } ] } }");
  client.testJQ(params(p,"q","*:*","json.facet","{f:{range:{field:${num_d}, start:-5, end:10, gap:5, other:all,   facet:{ x:'sum(${num_i})', ny:{query:'${where_s}:NY'}}   }}}"),"facets=={count:6, f:{buckets:[ {val:-5.0,count:1,x:-5.0,ny:{count:1}}, {val:0.0,count:2,x:5.0,ny:{count:1}}, {val:5.0,count:0 /* ,x:0.0,ny:{count:0} */} ]" + ",before: {count:1,x:-5.0,ny:{count:0}}" + ",after:  {count:1,x:7.0, ny:{count:0}}"+ ",between:{count:3,x:0.0, ny:{count:2}}"+ " } }");
  client.testJQ(params(p,"q","*:*","json.facet","{f:{type:range, field:${num_d}, start:-5, end:10, gap:5, other:all, mincount:2,    facet:{ x:'sum(${num_i})', ny:{query:'${where_s}:NY'}}   }}"),"facets=={count:6, f:{buckets:[  {val:0.0,count:2,x:5.0,ny:{count:1}} ]" + ",before: {count:1,x:-5.0,ny:{count:0}}" + ",after:  {count:1,x:7.0, ny:{count:0}}"+ ",between:{count:3,x:0.0, ny:{count:2}}"+ " } }");
  client.testJQ(params(p,"q","id:(3 4 6)","json.facet","{f:{range:{field:${num_d}, start:-5, end:10, gap:5, other:all,   facet:{ x:'sum(${num_i})', ny:{query:'${where_s}:NY'}}   }}}"),"facets=={count:3, f:{buckets:[ {val:-5.0,count:1,x:-5.0,ny:{count:1}}, {val:0.0,count:1,x:3.0,ny:{count:0}}, {val:5.0,count:0 /* ,x:0.0,ny:{count:0} */} ]" + ",before: {count:0 /* ,x:0.0,ny:{count:0} */ }" + ",after:  {count:0 /* ,x:0.0,ny:{count:0} */}"+ ",between:{count:2,x:-2.0, ny:{count:1}}"+ " } }");
  client.testJQ(params(p,"q","*:*","json.facet","{ sum1:'sum(${num_d})', sumsq1:'sumsq(${num_d})', avg1:'avg(${num_d})', avg2:'avg(def(${num_d},0))', min1:'min(${num_d})', max1:'max(${num_d})'" + ", numwhere:'unique(${where_s})', unique_num_i:'unique(${num_i})', unique_num_d:'unique(${num_d})', unique_date:'unique(${date})'" + ", where_hll:'hll(${where_s})', hll_num_i:'hll(${num_i})', hll_num_d:'hll(${num_d})', hll_date:'hll(${date})'"+ ", med:'percentile(${num_d},50)', perc:'percentile(${num_d},0,50.0,100)' }"),"facets=={ 'count':6, " + "sum1:3.0, sumsq1:247.0, avg1:0.6, avg2:0.5, min1:-9.0, max1:11.0" + ", numwhere:2, unique_num_i:4, unique_num_d:5, unique_date:5"+ ", where_hll:2, hll_num_i:4, hll_num_d:5, hll_date:5"+ ", med:2.0, perc:[-9.0,2.0,11.0]  }");
  client.testJQ(params(p,"q","id:DOESNOTEXIST","json.facet","{ sum1:'sum(${num_d})', sumsq1:'sumsq(${num_d})', avg1:'avg(${num_d})', min1:'min(${num_d})', max1:'max(${num_d})'" + ", numwhere:'unique(${where_s})', unique_num_i:'unique(${num_i})', unique_num_d:'unique(${num_d})', unique_date:'unique(${date})'" + ", where_hll:'hll(${where_s})', hll_num_i:'hll(${num_i})', hll_num_d:'hll(${num_d})', hll_date:'hll(${date})'"+ ", med:'percentile(${num_d},50)', perc:'percentile(${num_d},0,50.0,100)' }"),"facets=={count:0 " + "/* ,sum1:0.0, sumsq1:0.0, avg1:0.0, min1:'NaN', max1:'NaN', numwhere:0 */" + " }");
  client.testJQ(params(p,"q","*:*","json.facet","{cat:{terms:{${terms} field:'${multi_ss}', facet:{nj:{query:'${where_s}:NJ'}}    }   }} }"),"facets=={ 'count':6, " + "'cat':{ 'buckets':[{ 'val':'a', 'count':3, 'nj':{ 'count':2}}, { 'val':'b', 'count':3, 'nj':{ 'count':2}}]} }");
  client.testJQ(params(p,"q","*:*","json.facet","{" + "x:'unique(${multi_ss})'" + ",y:{query:{q:'id:2', facet:{x:'unique(${multi_ss})'} }}  "+ ",x2:'hll(${multi_ss})'"+ ",y2:{query:{q:'id:2', facet:{x:'hll(${multi_ss})'} }}  "+ " }"),"facets=={count:6 " + ",x:2" + ",y:{count:1, x:2}"+ ",x2:2"+ ",y2:{count:1, x:2}"+ " }");
  client.testJQ(params(p,"q","*:*","json.facet","{x:{terms:{${terms} field:'${multi_ss}',allBuckets:true}}}"),"facets=={ count:6, " + "x:{ buckets:[{val:a, count:3}, {val:b, count:3}] , allBuckets:{count:6} } }");
  client.testJQ(params(p,"q","*:*","json.facet","{" + " f0:{${terms} type:terms, field:${multi_ss}, allBuckets:true, limit:0} " + ",f1:{${terms} type:terms, field:${multi_ss}, allBuckets:true, limit:0, offset:1} "+ ",f2:{${terms} type:terms, field:${multi_ss}, allBuckets:true, limit:0, facet:{x:'sum(${num_d})'}, sort:'x desc' } "+ ",f3:{${terms} type:terms, field:${multi_ss}, allBuckets:true, limit:0, missing:true, facet:{x:'sum(${num_d})', y:'avg(${num_d})'}, sort:'x desc' } "+ "}"),"facets=={ 'count':6, " + " f0:{allBuckets:{count:6}, buckets:[]}" + ",f1:{allBuckets:{count:6}, buckets:[]}"+ ",f2:{allBuckets:{count:6, x:-15.0}, buckets:[]} "+ ",f3:{allBuckets:{count:6, x:-15.0, y:-2.5}, buckets:[], missing:{count:2, x:4.0, y:4.0} }} "+ "}");
  client.testJQ(params(p,"q","*:*","json.facet","{" + " f0:{${terms} type:terms, field:${num_i}, allBuckets:true, limit:0} " + ",f1:{${terms} type:terms, field:${num_i}, allBuckets:true, limit:0, offset:1} "+ ",f2:{${terms} type:terms, field:${num_i}, allBuckets:true, limit:0, facet:{x:'sum(${num_d})'}, sort:'x desc' } "+ "}"),"facets=={ 'count':6, " + " f0:{allBuckets:{count:5}, buckets:[]}" + ",f1:{allBuckets:{count:5}, buckets:[]}"+ ",f2:{allBuckets:{count:5, x:3.0}, buckets:[]} "+ "}");
  client.testJQ(params(p,"q","*:*","facet","true","facet.version","2","facet.field","{!key=f1}${cat_s}","facet.mincount","3"),"facets=={ 'count':6, " + "'f1':{  'buckets':[{ 'val':'B', 'count':3}]} } ");
  client.testJQ(params(p,"q","*:*","facet","true","facet.version","2","facet.field","{!key=f1}${super_s}","facet.prefix","s","facet.mincount","0"),"facets=={ 'count':6, " + "'f1':{ 'buckets':[{val:spiderman, count:1}, {val:superman, count:1}]} } ");
  client.testJQ(params(p,"q","*:*","facet","true","facet.version","2","facet.range","{!key=f}${num_d}","facet.range.start","-5","facet.range.end","10","facet.range.gap","5","f.f.facet.stat","x:sum(${num_i})","subfacet.f.query","{!key=ny}${where_s}:NY"),"facets=={count:6, f:{buckets:[ {val:-5.0,count:1,x:-5.0,ny:{count:1}}, {val:0.0,count:2,x:5.0,ny:{count:1}}, {val:5.0,count:0 /* ,x:0.0,ny:{count:0} */ } ] } }");
  client.testJQ(params(p,"q","*:*","facet","true","facet.version","2","facet.field","{!key=f1}${cat_s}","f.f1.facet.sort","n1 desc","facet.stat","n1:sum(${num_d})","facet.field","{!key=f2}${cat_s}","f.f1.facet.sort","n1 asc"),"facets=={ 'count':6, " + "  f1:{  'buckets':[{ val:'A', count:2, n1:6.0 }, { val:'B', count:3, n1:-3.0}]}" + ", f2:{  'buckets':[{ val:'B', count:3, n1:-3.0}, { val:'A', count:2, n1:6.0 }]} }");
  client.testJQ(params(p,"q","id:(3 4 6)","facet","true","facet.version","2","facet.range","{!key=f}${num_d}","facet.range.start","-5","facet.range.end","10","facet.range.gap","5","f.f.facet.stat","x:sum(${num_i})","subfacet.f.query","{!key=ny}${where_s}:NY","facet.range.other","all"),"facets=={count:3, f:{buckets:[ {val:-5.0,count:1,x:-5.0,ny:{count:1}}, {val:0.0,count:1,x:3.0,ny:{count:0}}, {val:5.0,count:0 /* ,x:0.0,ny:{count:0} */} ]" + ",before: {count:0 /* ,x:0.0,ny:{count:0} */ }" + ",after:  {count:0 /* ,x:0.0,ny:{count:0} */}"+ ",between:{count:2,x:-2.0, ny:{count:1}}"+ " } }");
  client.testJQ(params(p,"q","{!cache=false}*:*","fq","{!tag=doc3,allfilt}-id:3","json.facet","{" + "f1:{${terms} type:terms, field:${cat_s}, domain:{excludeTags:doc3} }  " + "}"),"facets=={ count:5, " + " f1:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }" + "}");
  client.testJQ(params(p,"q","*:*","fq","{!tag=abc}id:(2 3)","json.facet","{ processEmpty:true," + " f1:{query:{q:'${cat_s}:B', facet:{nj:{query:'${where_s}:NJ'}, ny:{query:'${where_s}:NY'}} , excludeTags:[xyz,qaz]}}" + ",f2:{query:{q:'${cat_s}:B', facet:{nj:{query:'${where_s}:NJ'}, ny:{query:'${where_s}:NY'}} , excludeTags:abc }}"+ ",f3:{query:{q:'${cat_s}:B', facet:{nj:{query:'${where_s}:NJ'}, ny:{query:'${where_s}:NY'}} , excludeTags:'xyz,abc,qaz' }}"+ ",f4:{query:{q:'${cat_s}:B', facet:{nj:{query:'${where_s}:NJ'}, ny:{query:'${where_s}:NY'}} , excludeTags:[xyz , abc , qaz] }}"+ ",f5:{query:{q:'${cat_s}:B', facet:{nj:{query:'${where_s}:NJ'}, ny:{query:'${where_s}:NY'}} , excludeTags:[xyz,qaz]}}"+ ",f6:{query:{q:'${cat_s}:B', facet:{processEmpty:true, nj:{query:'${where_s}:NJ'}, ny:{ type:query, q:'${where_s}:NY', excludeTags:abc}}  }}"+ ",f7:{query:{q:'${cat_s}:B', facet:{processEmpty:true, nj:{query:'${where_s}:NJ'}, ny:{ type:query, q:'${where_s}:NY', excludeTags:xyz}}  }}"+ "}"),"facets=={ 'count':2, " + " 'f1':{'count':1, 'nj':{'count':1}, 'ny':{'count':0}}" + ",'f2':{'count':3, 'nj':{'count':2}, 'ny':{'count':1}}"+ ",'f3':{'count':3, 'nj':{'count':2}, 'ny':{'count':1}}"+ ",'f4':{'count':3, 'nj':{'count':2}, 'ny':{'count':1}}"+ ",'f5':{'count':1, 'nj':{'count':1}, 'ny':{'count':0}}"+ ",'f6':{'count':1, 'nj':{'count':1}, 'ny':{'count':1}}"+ ",'f7':{'count':1, 'nj':{'count':1}, 'ny':{'count':0}}"+ "}");
  client.testJQ(params(p,"q","{!cache=false}*:*","fq","{!tag=doc6,allfilt}-id:6","fq","{!tag=doc3,allfilt}-id:3","json.facet","{processEmpty:true, " + " f0:{${terms} type:terms, field:${cat_s},                                    facet:{nj:{query:'${where_s}:NJ'}} }  " + ",f1:{${terms} type:terms, field:${cat_s}, domain:{excludeTags:doc3},   missing:true,  facet:{nj:{query:'${where_s}:NJ'}} }  "+ ",f2:{${terms} type:terms, field:${cat_s}, domain:{excludeTags:allfilt},missing:true,  facet:{nj:{query:'${where_s}:NJ'}} }  "+ ",f3:{${terms} type:terms, field:${cat_s}, domain:{excludeTags:doc6},   missing:true,  facet:{nj:{query:'${where_s}:NJ'}} }  "+ "}"),"facets=={ count:4, " + " f0:{ buckets:[ {val:A, count:2, nj:{ count:1}}, {val:B, count:2, nj:{count:2}} ] }" + ",f1:{ buckets:[ {val:A, count:2, nj:{ count:1}}, {val:B, count:2, nj:{count:2}} ] , missing:{count:1,nj:{count:0}} }"+ ",f2:{ buckets:[ {val:B, count:3, nj:{ count:2}}, {val:A, count:2, nj:{count:1}} ] , missing:{count:1,nj:{count:0}} }"+ ",f3:{ buckets:[ {val:B, count:3, nj:{ count:2}}, {val:A, count:2, nj:{count:1}} ] , missing:{count:0} }"+ "}");
  client.testJQ(params(p,"q","*:*","fq","{!tag=doc6,allfilt}-id:6","fq","{!tag=doc3,allfilt}-id:3","json.facet","{processEmpty:true " + ", f1:{type:range, field:${num_d}, start:-5, end:10, gap:5, other:all,   facet:{ x:'sum(${num_i})', ny:{query:'${where_s}:NY'}} , domain:{excludeTags:allfilt} }" + ", f2:{type:range, field:${num_d}, start:-5, end:10, gap:5, other:all,   facet:{ x:'sum(${num_i})', ny:{query:'${where_s}:NY'}}  }"+ "}"),"facets=={count:4" + ",f1:{buckets:[ {val:-5.0,count:1,x:-5.0,ny:{count:1}}, {val:0.0,count:2,x:5.0,ny:{count:1}}, {val:5.0,count:0} ]" + ",before: {count:1,x:-5.0,ny:{count:0}}"+ ",after:  {count:1,x:7.0, ny:{count:0}}"+ ",between:{count:3,x:0.0, ny:{count:2}} }"+ ",f2:{buckets:[ {val:-5.0,count:0}, {val:0.0,count:2,x:5.0,ny:{count:1}}, {val:5.0,count:0} ]"+ ",before: {count:1,x:-5.0,ny:{count:0}}"+ ",after:  {count:1,x:7.0, ny:{count:0}}"+ ",between:{count:2,x:5.0, ny:{count:1}} }"+ "}");
  client.testJQ(params(p,"q","*:*","json.facet","{" + " f1:{${terms}  type:field, field:${num_i} }" + ",f2:{${terms}  type:field, field:${num_i}, sort:'count asc' }"+ ",f3:{${terms}  type:field, field:${num_i}, sort:'index asc' }"+ ",f4:{${terms}  type:field, field:${num_i}, sort:'index desc' }"+ ",f5:{${terms}  type:field, field:${num_i}, sort:'index desc', limit:1, missing:true, allBuckets:true, numBuckets:true }"+ ",f6:{${terms}  type:field, field:${num_i}, sort:'index desc', mincount:2, numBuckets:true }"+ ",f7:{${terms}  type:field, field:${num_i}, sort:'index desc', offset:2, numBuckets:true }"+ ",f8:{${terms}  type:field, field:${num_i}, sort:'index desc', offset:100, numBuckets:true }"+ ",f9:{${terms}  type:field, field:${num_i}, sort:'x desc', facet:{x:'avg(${num_d})'}, missing:true, allBuckets:true, numBuckets:true }"+ ",f10:{${terms}  type:field, field:${num_i}, facet:{a:{query:'${cat_s}:A'}}, missing:true, allBuckets:true, numBuckets:true }"+ ",f11:{${terms}  type:field, field:${num_i}, facet:{a:'unique(${num_d})'} ,missing:true, allBuckets:true, sort:'a desc' }"+ "}"),"facets=={count:6 " + ",f1:{ buckets:[{val:-5,count:2},{val:2,count:1},{val:3,count:1},{val:7,count:1} ] } " + ",f2:{ buckets:[{val:2,count:1},{val:3,count:1},{val:7,count:1},{val:-5,count:2} ] } "+ ",f3:{ buckets:[{val:-5,count:2},{val:2,count:1},{val:3,count:1},{val:7,count:1} ] } "+ ",f4:{ buckets:[{val:7,count:1},{val:3,count:1},{val:2,count:1},{val:-5,count:2} ] } "+ ",f5:{ buckets:[{val:7,count:1}]   , numBuckets:4, allBuckets:{count:5}, missing:{count:1}  } "+ ",f6:{ buckets:[{val:-5,count:2}]  , numBuckets:1  } "+ ",f7:{ buckets:[{val:2,count:1},{val:-5,count:2}] , numBuckets:4 } "+ ",f8:{ buckets:[] , numBuckets:4 } "+ ",f9:{ buckets:[{val:7,count:1,x:11.0},{val:2,count:1,x:4.0},{val:3,count:1,x:2.0},{val:-5,count:2,x:-7.0} ],  numBuckets:4, allBuckets:{count:5,x:0.6},missing:{count:1,x:0.0} } "+ ",f10:{ buckets:[{val:-5,count:2,a:{count:0}},{val:2,count:1,a:{count:1}},{val:3,count:1,a:{count:1}},{val:7,count:1,a:{count:0}} ],  numBuckets:4, allBuckets:{count:5},missing:{count:1,a:{count:0}} } "+ ",f11:{ buckets:[{val:-5,count:2,a:2},{val:2,count:1,a:1},{val:3,count:1,a:1},{val:7,count:1,a:1} ] , missing:{count:1,a:0} , allBuckets:{count:5,a:5}  } "+ "}");
  client.testJQ(params(p,"q","*:*","json.facet","{" + " f1:{${terms}  type:field, field:${num_d} }" + ",f2:{${terms}  type:field, field:${num_d}, sort:'index desc' }"+ "}"),"facets=={count:6 " + ",f1:{ buckets:[{val:-9.0,count:1},{val:-5.0,count:1},{val:2.0,count:1},{val:4.0,count:1},{val:11.0,count:1} ] } " + ",f2:{ buckets:[{val:11.0,count:1},{val:4.0,count:1},{val:2.0,count:1},{val:-5.0,count:1},{val:-9.0,count:1} ] } "+ "}");
  client.testJQ(params(p,"q","*:*","json.facet","{" + " u : 'unique(${Z_num_i})'" + ", f1:{${terms}  type:field, field:${Z_num_i} }"+ "}"),"facets=={count:6 " + ",u:3" + ",f1:{ buckets:[{val:" + Integer.MIN_VALUE + ",count:1},{val:0,count:1},{val:"+ Integer.MAX_VALUE+ ",count:1}]} "+ "}");
  client.testJQ(params(p,"q","*:*","json.facet","{ " + " c1:'unique(${num_is})', c2:'hll(${num_is})'" + ",f1:{${terms} type:terms, field:${num_is} }  "+ "}"),"facets=={ count:6 " + ", c1:5, c2:5" + ", f1:{ buckets:[ {val:-1,count:2},{val:0,count:2},{val:3,count:2},{val:-5,count:1},{val:2,count:1}  ] } "+ "} ");
  client.testJQ(params(p,"q","*:*","json.facet","{ " + " c1:'unique(${num_fs})', c2:'hll(${num_fs})'" + ",f1:{${terms} type:terms, field:${num_fs} }  "+ "}"),"facets=={ count:6 " + ", c1:5, c2:5" + ", f1:{ buckets:[ {val:-1.5,count:2},{val:0.0,count:2},{val:3.0,count:2},{val:-5.0,count:1},{val:2.0,count:1}  ] } "+ "} ");
  if (!client.local()) {
    client.testJQ(params(p,"q","*:*","json.facet","{" + "cat0:{type:terms, field:${cat_s}, limit:1, overrequest:0}" + ",cat1:{type:terms, field:${cat_s}, limit:1, overrequest:1}"+ ",catDef:{type:terms, field:${cat_s}, limit:1, overrequest:-1}"+ ",catBig:{type:terms, field:${cat_s}, offset:1, limit:2147483647, overrequest:2147483647}"+ "}"),"facets=={ count:6" + ", cat0:{ buckets:[ {val:A,count:2} ] }" + ", cat1:{ buckets:[ {val:B,count:3} ] }"+ ", catDef:{ buckets:[ {val:B,count:3} ] }"+ ", catBig:{ buckets:[ {val:A,count:2} ] }"+ "}");
  }
 else {
    client.testJQ(params(p,"q","*:*","json.facet","{" + "cat0:{type:terms, field:${cat_s}, limit:1, overrequest:0}" + ",cat1:{type:terms, field:${cat_s}, limit:1, overrequest:1}"+ ",catDef:{type:terms, field:${cat_s}, limit:1, overrequest:-1}"+ ",catBig:{type:terms, field:${cat_s}, offset:1, limit:2147483647, overrequest:2147483647}"+ "}"),"facets=={ count:6" + ", cat0:{ buckets:[ {val:B,count:3} ] }" + ", cat1:{ buckets:[ {val:B,count:3} ] }"+ ", catDef:{ buckets:[ {val:B,count:3} ] }"+ ", catBig:{ buckets:[ {val:A,count:2} ] }"+ "}");
  }
}
