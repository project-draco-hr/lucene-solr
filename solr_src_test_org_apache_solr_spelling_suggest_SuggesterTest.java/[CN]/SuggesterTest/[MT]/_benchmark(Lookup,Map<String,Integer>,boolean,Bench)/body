{
  long start=System.currentTimeMillis();
  lookup.build(getTFIT());
  long buildTime=System.currentTimeMillis() - start;
  TermFreqIterator tfit=getTFIT();
  long elapsed=0;
  while (tfit.hasNext()) {
    String key=tfit.next();
    int len=key.length() > 4 ? key.length() / 3 : 2;
    String prefix=key.substring(0,len);
    start=System.nanoTime();
    List<LookupResult> res=lookup.lookup(prefix,true,10);
    elapsed+=System.nanoTime() - start;
    assertTrue(res.size() > 0);
    for (    LookupResult lr : res) {
      assertTrue(lr.key.startsWith(prefix));
    }
    if (ref != null) {
      Integer Cnt=ref.get(key);
      if (Cnt == null) {
        ref.put(key,res.size());
      }
 else {
        assertEquals(key + ", prefix: " + prefix,Cnt.intValue(),res.size());
      }
    }
  }
  if (estimate) {
    RamUsageEstimator rue=new RamUsageEstimator();
    long size=rue.estimateRamUsage(lookup);
    System.err.println(lookup.getClass().getSimpleName() + " - size=" + size);
  }
  if (bench != null) {
    bench.buildTime+=buildTime;
    bench.lookupTime+=elapsed;
  }
}
