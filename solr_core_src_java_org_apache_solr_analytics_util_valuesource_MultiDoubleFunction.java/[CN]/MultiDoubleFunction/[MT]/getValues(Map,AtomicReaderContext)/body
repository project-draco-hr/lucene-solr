{
  final FunctionValues[] valsArr=new FunctionValues[sources.length];
  for (int i=0; i < sources.length; i++) {
    valsArr[i]=sources[i].getValues(context,readerContext);
  }
  return new DoubleDocValues(this){
    @Override public double doubleVal(    int doc){
      return func(doc,valsArr);
    }
    @Override public boolean exists(    int doc){
      boolean exists=true;
      for (      FunctionValues val : valsArr) {
        exists=exists & val.exists(doc);
      }
      return exists;
    }
    @Override public String toString(    int doc){
      StringBuilder sb=new StringBuilder();
      sb.append(name()).append('(');
      boolean firstTime=true;
      for (      FunctionValues vals : valsArr) {
        if (firstTime) {
          firstTime=false;
        }
 else {
          sb.append(',');
        }
        sb.append(vals.toString(doc));
      }
      sb.append(')');
      return sb.toString();
    }
  }
;
}
