{
  XMLResponseParser parser=new XMLResponseParser();
  InputStream is=new SolrResourceLoader(null,null).openResource("solrj/sampleGroupResponse.xml");
  assertNotNull(is);
  Reader in=new InputStreamReader(is,StandardCharsets.UTF_8);
  NamedList<Object> response=parser.processResponse(in);
  in.close();
  QueryResponse qr=new QueryResponse(response,null);
  assertNotNull(qr);
  GroupResponse groupResponse=qr.getGroupResponse();
  assertNotNull(groupResponse);
  List<GroupCommand> commands=groupResponse.getValues();
  assertNotNull(commands);
  assertEquals(3,commands.size());
  GroupCommand fieldCommand=commands.get(0);
  assertEquals("acco_id",fieldCommand.getName());
  assertEquals(30000000,fieldCommand.getMatches());
  assertEquals(5687,fieldCommand.getNGroups().intValue());
  List<Group> fieldCommandGroups=fieldCommand.getValues();
  assertEquals(10,fieldCommandGroups.size());
  assertEquals("116_ar",fieldCommandGroups.get(0).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(0).getResult().size());
  assertEquals(2236,fieldCommandGroups.get(0).getResult().getNumFound());
  assertEquals("116_hi",fieldCommandGroups.get(1).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(1).getResult().size());
  assertEquals(2234,fieldCommandGroups.get(1).getResult().getNumFound());
  assertEquals("953_ar",fieldCommandGroups.get(2).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(2).getResult().size());
  assertEquals(1020,fieldCommandGroups.get(2).getResult().getNumFound());
  assertEquals("953_hi",fieldCommandGroups.get(3).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(3).getResult().size());
  assertEquals(1030,fieldCommandGroups.get(3).getResult().getNumFound());
  assertEquals("954_ar",fieldCommandGroups.get(4).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(4).getResult().size());
  assertEquals(2236,fieldCommandGroups.get(4).getResult().getNumFound());
  assertEquals("954_hi",fieldCommandGroups.get(5).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(5).getResult().size());
  assertEquals(2234,fieldCommandGroups.get(5).getResult().getNumFound());
  assertEquals("546_ar",fieldCommandGroups.get(6).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(6).getResult().size());
  assertEquals(4984,fieldCommandGroups.get(6).getResult().getNumFound());
  assertEquals("546_hi",fieldCommandGroups.get(7).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(7).getResult().size());
  assertEquals(4984,fieldCommandGroups.get(7).getResult().getNumFound());
  assertEquals("708_ar",fieldCommandGroups.get(8).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(8).getResult().size());
  assertEquals(4627,fieldCommandGroups.get(8).getResult().getNumFound());
  assertEquals("708_hi",fieldCommandGroups.get(9).getGroupValue());
  assertEquals(2,fieldCommandGroups.get(9).getResult().size());
  assertEquals(4627,fieldCommandGroups.get(9).getResult().getNumFound());
  GroupCommand funcCommand=commands.get(1);
  assertEquals("sum(price, price)",funcCommand.getName());
  assertEquals(30000000,funcCommand.getMatches());
  assertNull(funcCommand.getNGroups());
  List<Group> funcCommandGroups=funcCommand.getValues();
  assertEquals(10,funcCommandGroups.size());
  assertEquals("95000.0",funcCommandGroups.get(0).getGroupValue());
  assertEquals(2,funcCommandGroups.get(0).getResult().size());
  assertEquals(43666,funcCommandGroups.get(0).getResult().getNumFound());
  assertEquals("91400.0",funcCommandGroups.get(1).getGroupValue());
  assertEquals(2,funcCommandGroups.get(1).getResult().size());
  assertEquals(27120,funcCommandGroups.get(1).getResult().getNumFound());
  assertEquals("104800.0",funcCommandGroups.get(2).getGroupValue());
  assertEquals(2,funcCommandGroups.get(2).getResult().size());
  assertEquals(34579,funcCommandGroups.get(2).getResult().getNumFound());
  assertEquals("99400.0",funcCommandGroups.get(3).getGroupValue());
  assertEquals(2,funcCommandGroups.get(3).getResult().size());
  assertEquals(40519,funcCommandGroups.get(3).getResult().getNumFound());
  assertEquals("109600.0",funcCommandGroups.get(4).getGroupValue());
  assertEquals(2,funcCommandGroups.get(4).getResult().size());
  assertEquals(36203,funcCommandGroups.get(4).getResult().getNumFound());
  assertEquals("102400.0",funcCommandGroups.get(5).getGroupValue());
  assertEquals(2,funcCommandGroups.get(5).getResult().size());
  assertEquals(37852,funcCommandGroups.get(5).getResult().getNumFound());
  assertEquals("116800.0",funcCommandGroups.get(6).getGroupValue());
  assertEquals(2,funcCommandGroups.get(6).getResult().size());
  assertEquals(40393,funcCommandGroups.get(6).getResult().getNumFound());
  assertEquals("107800.0",funcCommandGroups.get(7).getGroupValue());
  assertEquals(2,funcCommandGroups.get(7).getResult().size());
  assertEquals(41639,funcCommandGroups.get(7).getResult().getNumFound());
  assertEquals("136200.0",funcCommandGroups.get(8).getGroupValue());
  assertEquals(2,funcCommandGroups.get(8).getResult().size());
  assertEquals(25929,funcCommandGroups.get(8).getResult().getNumFound());
  assertEquals("131400.0",funcCommandGroups.get(9).getGroupValue());
  assertEquals(2,funcCommandGroups.get(9).getResult().size());
  assertEquals(29179,funcCommandGroups.get(9).getResult().getNumFound());
  GroupCommand queryCommand=commands.get(2);
  assertEquals("country:fr",queryCommand.getName());
  assertNull(queryCommand.getNGroups());
  assertEquals(30000000,queryCommand.getMatches());
  List<Group> queryCommandGroups=queryCommand.getValues();
  assertEquals(1,queryCommandGroups.size());
  assertEquals("country:fr",queryCommandGroups.get(0).getGroupValue());
  assertEquals(2,queryCommandGroups.get(0).getResult().size());
  assertEquals(57074,queryCommandGroups.get(0).getResult().getNumFound());
}
