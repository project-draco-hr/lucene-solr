{
  writer.write("<?xml version='1.0' encoding='UTF-8'?>");
  writer.write("<solr");
  if (this.libDir != null) {
    writer.write(" sharedLib='");
    XML.escapeAttributeValue(libDir,writer);
    writer.write('\'');
  }
  writer.write(" persistent='");
  if (isPersistent()) {
    writer.write("true'");
  }
 else {
    writer.write("false'");
  }
  writer.write(">\n");
  if (containerProperties != null && !containerProperties.isEmpty()) {
    writeProperties(writer,containerProperties);
  }
  writer.write("<cores adminPath='");
  XML.escapeAttributeValue(adminPath,writer);
  writer.write('\'');
  writer.write(">\n");
  Map<SolrCore,LinkedList<String>> aliases=new HashMap<SolrCore,LinkedList<String>>();
synchronized (cores) {
    for (    Map.Entry<String,SolrCore> entry : cores.entrySet()) {
      String name=entry.getKey();
      LinkedList<String> a=aliases.get(entry.getValue());
      if (a == null)       a=new LinkedList<String>();
      if (name.equals(entry.getValue().getName())) {
        a.addFirst(name);
      }
 else {
        a.addLast(name);
      }
      aliases.put(entry.getValue(),a);
    }
  }
  for (  Map.Entry<SolrCore,LinkedList<String>> entry : aliases.entrySet()) {
    persist(writer,entry.getValue(),entry.getKey().getCoreDescriptor());
  }
  writer.write("</cores>\n");
  writer.write("</solr>\n");
}
