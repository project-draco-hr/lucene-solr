{
  if (numEncoded >= numValues) {
    throw new IllegalStateException("encodeNext called more than " + numValues + " times.");
  }
  if (lastEncoded > x) {
    throw new IllegalArgumentException(x + " smaller than previous " + lastEncoded);
  }
  if (x > upperBound) {
    throw new IllegalArgumentException(x + " larger than upperBound " + upperBound);
  }
  long highValue=x >>> numLowBits;
  encodeUpperBits(highValue);
  encodeLowerBits(x & lowerBitsMask);
  lastEncoded=x;
  long indexValue=(currentEntryIndex + 1) * indexInterval;
  while (indexValue <= highValue) {
    long afterZeroBitPosition=indexValue + numEncoded;
    packValue(afterZeroBitPosition,upperZeroBitPositionIndex,nIndexEntryBits,currentEntryIndex);
    currentEntryIndex+=1;
    indexValue+=indexInterval;
  }
  numEncoded++;
}
