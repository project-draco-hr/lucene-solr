{
  initRandom();
  state=State.INITIAL;
  tempDirs.clear();
  stores=Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());
  if (System.getProperty("solr.directoryFactory") == null) {
    System.setProperty("solr.directoryFactory","org.apache.solr.core.MockDirectoryFactory");
  }
  if (VERBOSE) {
    Set<String> codecs=Codec.availableCodecs();
    for (    String codec : codecs) {
      System.out.println("Loaded codec: '" + codec + "': "+ Codec.forName(codec).getClass().getName());
    }
    Set<String> postingsFormats=PostingsFormat.availablePostingsFormats();
    for (    String postingsFormat : postingsFormats) {
      System.out.println("Loaded postingsFormat: '" + postingsFormat + "': "+ PostingsFormat.forName(postingsFormat).getClass().getName());
    }
  }
  savedInfoStream=InfoStream.getDefault();
  if (INFOSTREAM) {
    random.nextBoolean();
    InfoStream.setDefault(new PrintStreamInfoStream(System.out));
  }
 else {
    if (random.nextBoolean()) {
      InfoStream.setDefault(new NullInfoStream());
    }
  }
  PREFLEX_IMPERSONATION_IS_ACTIVE=false;
  savedCodec=Codec.getDefault();
  final Codec codec;
  int randomVal=random.nextInt(10);
  if ("Lucene3x".equals(TEST_CODEC) || ("random".equals(TEST_CODEC) && randomVal <= 3)) {
    codec=new PreFlexRWCodec();
    PREFLEX_IMPERSONATION_IS_ACTIVE=true;
  }
 else   if ("SimpleText".equals(TEST_CODEC) || (false && "random".equals(TEST_CODEC) && randomVal == 9)) {
    codec=new SimpleTextCodec();
  }
 else   if (!"random".equals(TEST_CODEC)) {
    codec=Codec.forName(TEST_CODEC);
  }
 else   if ("random".equals(TEST_POSTINGSFORMAT)) {
    codec=new RandomCodec(random,useNoMemoryExpensiveCodec);
  }
 else {
    codec=new Lucene40Codec(){
      private final PostingsFormat format=PostingsFormat.forName(TEST_POSTINGSFORMAT);
      @Override public PostingsFormat getPostingsFormatForField(      String field){
        return format;
      }
      @Override public String toString(){
        return super.toString() + ": " + format.toString();
      }
    }
;
  }
  Codec.setDefault(codec);
  savedLocale=Locale.getDefault();
  if (!icuTested) {
    icuTested=true;
    try {
      Locale.setDefault(Locale.US);
      Class.forName("com.ibm.icu.util.ULocale");
    }
 catch (    ClassNotFoundException cnfe) {
    }
  }
  locale=TEST_LOCALE.equals("random") ? randomLocale(random) : localeForName(TEST_LOCALE);
  Locale.setDefault(locale);
  savedTimeZone=TimeZone.getDefault();
  timeZone=TEST_TIMEZONE.equals("random") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);
  TimeZone.setDefault(timeZone);
  similarityProvider=new RandomSimilarityProvider(random);
  testsFailed=false;
}
