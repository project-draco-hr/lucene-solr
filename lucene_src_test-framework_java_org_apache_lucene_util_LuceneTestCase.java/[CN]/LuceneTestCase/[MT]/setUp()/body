{
  seed="random".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;
  random.setSeed(seed);
  State s=state;
  state=State.SETUP;
  savedUncaughtExceptionHandler=Thread.getDefaultUncaughtExceptionHandler();
  Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
    public void uncaughtException(    Thread t,    Throwable e){
      testsFailed=true;
      uncaughtExceptions.add(new UncaughtExceptionEntry(t,e));
      if (savedUncaughtExceptionHandler != null)       savedUncaughtExceptionHandler.uncaughtException(t,e);
    }
  }
);
  savedBoolMaxClauseCount=BooleanQuery.getMaxClauseCount();
  if (!testsFailed) {
    assertTrue("ensure your tearDown() calls super.tearDown()!!!",(s == State.INITIAL || s == State.TEARDOWN));
  }
  if (useNoMemoryExpensiveCodec) {
    String defFormat=_TestUtil.getPostingsFormat("thisCodeMakesAbsolutelyNoSenseCanWeDeleteIt");
    if ("SimpleText".equals(defFormat) || "Memory".equals(defFormat)) {
      System.err.println("NOTE: A test method in " + getClass().getSimpleName() + " was ignored, as it uses too much memory with "+ defFormat+ ".");
      Assume.assumeTrue(false);
    }
  }
}
