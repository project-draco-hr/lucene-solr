{
  IndexWriterConfig c=new IndexWriterConfig(v,a);
  c.setSimilarityProvider(similarityProvider);
  if (r.nextBoolean()) {
    c.setMergeScheduler(new SerialMergeScheduler());
  }
  if (r.nextBoolean()) {
    if (rarely(r)) {
      c.setMaxBufferedDocs(_TestUtil.nextInt(r,2,7));
    }
 else {
      c.setMaxBufferedDocs(_TestUtil.nextInt(r,8,1000));
    }
  }
  if (r.nextBoolean()) {
    if (rarely(r)) {
      c.setTermIndexInterval(r.nextBoolean() ? _TestUtil.nextInt(r,1,31) : _TestUtil.nextInt(r,129,1000));
    }
 else {
      c.setTermIndexInterval(_TestUtil.nextInt(r,32,128));
    }
  }
  if (r.nextBoolean()) {
    c.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(_TestUtil.nextInt(r,1,20)));
  }
  if (r.nextBoolean()) {
    c.setMergePolicy(newTieredMergePolicy());
  }
 else   if (r.nextBoolean()) {
    c.setMergePolicy(newLogMergePolicy());
  }
 else {
    c.setMergePolicy(new MockRandomMergePolicy(r));
  }
  c.setReaderPooling(r.nextBoolean());
  c.setReaderTermsIndexDivisor(_TestUtil.nextInt(r,1,4));
  return c;
}
