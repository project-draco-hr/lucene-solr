{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random));
  IndexWriter w=new IndexWriter(dir,iwc);
  w.addDocument(new Document());
  Document doc=new Document();
  doc.add(new TextField("c","test"));
  w.addDocument(doc);
  w.commit();
  w.deleteDocuments(new Term("c","test"));
  w.close();
  SegmentMerger sm=new SegmentMerger(InfoStream.getDefault(),dir,1,"a",MergeState.CheckAbort.NONE,null,null,Codec.getDefault(),newIOContext(random));
  boolean doFail=false;
  try {
    IndexWriter.createCompoundFile(dir,"b1",MergeState.CheckAbort.NONE,w.segmentInfos.info(0),newIOContext(random));
    doFail=true;
  }
 catch (  AssertionError e) {
  }
  assertFalse("should not have been able to create a .cfs with .del and .s* files",doFail);
  w=new IndexWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));
  doc=new Document();
  doc.add(new TextField("c","test"));
  w.addDocument(doc);
  w.close();
  IndexReader r=IndexReader.open(dir,false);
  r.setNorm(0,"c",(byte)1);
  r.close();
  SegmentInfos sis=new SegmentInfos();
  sis.read(dir);
  try {
    IndexWriter.createCompoundFile(dir,"b2",MergeState.CheckAbort.NONE,sis.info(0),newIOContext(random));
    doFail=true;
  }
 catch (  AssertionError e) {
  }
  assertFalse("should not have been able to create a .cfs with .del and .s* files",doFail);
  dir.close();
}
