{
  SegmentMerger merger=new SegmentMerger(mergedDir,IndexWriterConfig.DEFAULT_TERM_INDEX_INTERVAL,mergedSegment,null,null,new FieldInfos(),Codec.getDefault(),newIOContext(random));
  merger.add(reader1);
  merger.add(reader2);
  int docsMerged=merger.merge();
  assertTrue(docsMerged == 2);
  final FieldInfos fieldInfos=merger.fieldInfos();
  SegmentReader mergedReader=SegmentReader.get(false,mergedDir,new SegmentInfo(mergedSegment,docsMerged,mergedDir,false,merger.getCodec(),fieldInfos),true,IndexReader.DEFAULT_TERMS_INDEX_DIVISOR,newIOContext(random));
  assertTrue(mergedReader != null);
  assertTrue(mergedReader.numDocs() == 2);
  Document newDoc1=mergedReader.document(0);
  assertTrue(newDoc1 != null);
  assertTrue(DocHelper.numFields(newDoc1) == DocHelper.numFields(doc1) - DocHelper.unstored.size());
  Document newDoc2=mergedReader.document(1);
  assertTrue(newDoc2 != null);
  assertTrue(DocHelper.numFields(newDoc2) == DocHelper.numFields(doc2) - DocHelper.unstored.size());
  DocsEnum termDocs=MultiFields.getTermDocsEnum(mergedReader,MultiFields.getLiveDocs(mergedReader),DocHelper.TEXT_FIELD_2_KEY,new BytesRef("field"));
  assertTrue(termDocs != null);
  assertTrue(termDocs.nextDoc() != DocsEnum.NO_MORE_DOCS);
  Collection<String> stored=mergedReader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);
  assertTrue(stored != null);
  assertTrue("We do not have 3 fields that were indexed with term vector",stored.size() == 3);
  TermFreqVector vector=mergedReader.getTermFreqVector(0,DocHelper.TEXT_FIELD_2_KEY);
  assertTrue(vector != null);
  BytesRef[] terms=vector.getTerms();
  assertTrue(terms != null);
  assertTrue(terms.length == 3);
  int[] freqs=vector.getTermFrequencies();
  assertTrue(freqs != null);
  assertTrue(vector instanceof TermPositionVector == true);
  for (int i=0; i < terms.length; i++) {
    String term=terms[i].utf8ToString();
    int freq=freqs[i];
    assertTrue(DocHelper.FIELD_2_TEXT.indexOf(term) != -1);
    assertTrue(DocHelper.FIELD_2_FREQS[i] == freq);
  }
  TestSegmentReader.checkNorms(mergedReader);
  mergedReader.close();
}
