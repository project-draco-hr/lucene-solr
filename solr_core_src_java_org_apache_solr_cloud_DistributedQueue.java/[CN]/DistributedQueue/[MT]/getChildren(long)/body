{
  LatchWatcher watcher;
  TreeMap<Long,String> children;
synchronized (childrenWatcherLock) {
    watcher=childrenWatcher;
    children=fetchedChildren;
  }
  if (watcher == null || watcher.getWatchedEvent() != null) {
    watcher=new LatchWatcher(Watcher.Event.EventType.NodeChildrenChanged);
    while (true) {
      try {
        children=orderedChildren(watcher);
        break;
      }
 catch (      KeeperException.NoNodeException e) {
        zookeeper.create(dir,new byte[0],CreateMode.PERSISTENT,true);
      }
    }
synchronized (childrenWatcherLock) {
      childrenWatcher=watcher;
      fetchedChildren=children;
    }
  }
  while (true) {
    if (!children.isEmpty())     break;
    watcher.await(wait == Long.MAX_VALUE ? DEFAULT_TIMEOUT : wait);
    if (watcher.getWatchedEvent() != null) {
      children=orderedChildren(null);
    }
    if (wait != Long.MAX_VALUE)     break;
  }
  return Collections.unmodifiableMap(children);
}
