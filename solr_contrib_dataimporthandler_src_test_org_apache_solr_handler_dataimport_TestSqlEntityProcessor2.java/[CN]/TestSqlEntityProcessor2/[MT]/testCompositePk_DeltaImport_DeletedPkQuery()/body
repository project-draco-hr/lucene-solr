{
  List parentRow=new ArrayList();
  parentRow.add(createMap("id","11"));
  MockDataSource.setIterator("select * from x",parentRow.iterator());
  List childRow=new ArrayList();
  childRow.add(createMap("desc","hello"));
  MockDataSource.setIterator("select * from y where y.A=11",childRow.iterator());
  runFullImport(dataConfig);
  assertQ(req("id:11"),"//*[@numFound='1']");
  List deltaRow=new ArrayList();
  deltaRow.add(createMap("id","15"));
  deltaRow.add(createMap("id","17"));
  MockDataSource.setIterator("select id from x where last_modified > NOW",deltaRow.iterator());
  List deltaDeleteRow=new ArrayList();
  deltaDeleteRow.add(createMap("id","11"));
  deltaDeleteRow.add(createMap("id","17"));
  MockDataSource.setIterator("select id from x where last_modified > NOW AND deleted='true'",deltaDeleteRow.iterator());
  parentRow=new ArrayList();
  parentRow.add(createMap("id","15"));
  MockDataSource.setIterator("select * from x where id = '15'",parentRow.iterator());
  parentRow=new ArrayList();
  parentRow.add(createMap("id","17"));
  MockDataSource.setIterator("select * from x where id = '17'",parentRow.iterator());
  runDeltaImport(dataConfig);
  assertQ(req("id:15"),"//*[@numFound='1']");
  assertQ(req("id:11"),"//*[@numFound='0']");
  assertQ(req("id:17"),"//*[@numFound='0']");
}
