{
  final Weight fastMatchWeight=fastMatchQuery == null ? null : searcher.createWeight(fastMatchQuery,false);
  return new ConstantScoreWeight(this){
    @Override public Scorer scorer(    LeafReaderContext context) throws IOException {
      final int maxDoc=context.reader().maxDoc();
      final DocIdSetIterator approximation;
      if (fastMatchWeight == null) {
        approximation=DocIdSetIterator.all(maxDoc);
      }
 else {
        Scorer s=fastMatchWeight.scorer(context);
        if (s == null) {
          return null;
        }
        approximation=s.iterator();
      }
      final FunctionValues values=valueSource.getValues(Collections.emptyMap(),context);
      final TwoPhaseIterator twoPhase=new TwoPhaseIterator(approximation){
        @Override public boolean matches() throws IOException {
          return range.accept(values.longVal(approximation.docID()));
        }
        @Override public float matchCost(){
          return 100;
        }
      }
;
      return new ConstantScoreScorer(this,score(),twoPhase);
    }
  }
;
}
