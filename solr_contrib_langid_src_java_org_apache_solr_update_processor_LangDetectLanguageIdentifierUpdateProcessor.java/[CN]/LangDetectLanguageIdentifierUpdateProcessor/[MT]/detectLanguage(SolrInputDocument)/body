{
  try {
    Detector detector=DetectorFactory.create();
    detector.setMaxTextLength(maxTotalChars);
    for (    String fieldName : inputFields) {
      log.debug("Appending field " + fieldName);
      if (doc.containsKey(fieldName)) {
        Collection<Object> fieldValues=doc.getFieldValues(fieldName);
        if (fieldValues != null) {
          for (          Object content : fieldValues) {
            if (content instanceof String) {
              String stringContent=(String)content;
              if (stringContent.length() > maxFieldValueChars) {
                detector.append(stringContent.substring(0,maxFieldValueChars));
              }
 else {
                detector.append(stringContent);
              }
              detector.append(" ");
            }
 else {
              log.warn("Field " + fieldName + " not a String value, not including in detection");
            }
          }
        }
      }
    }
    ArrayList<Language> langlist=detector.getProbabilities();
    ArrayList<DetectedLanguage> solrLangList=new ArrayList<>();
    for (    Language l : langlist) {
      solrLangList.add(new DetectedLanguage(l.lang,l.prob));
    }
    return solrLangList;
  }
 catch (  LangDetectException e) {
    log.debug("Could not determine language, returning empty list: ",e);
    return Collections.emptyList();
  }
}
