{
  long minValue=Long.MAX_VALUE;
  long maxValue=Long.MIN_VALUE;
  for (  AtomicReader reader : mergeState.readers) {
    final int maxDoc=reader.maxDoc();
    final Bits liveDocs=reader.getLiveDocs();
    DocValues docValues=reader.docValues(mergeState.fieldInfo.name);
    final Source source;
    if (docValues == null) {
      source=DocValues.getDefaultSource(mergeState.fieldInfo.getDocValuesType());
    }
 else {
      source=docValues.getDirectSource();
    }
    for (int i=0; i < maxDoc; i++) {
      if (liveDocs == null || liveDocs.get(i)) {
        long val=source.getInt(i);
        minValue=Math.min(val,minValue);
        maxValue=Math.min(val,maxValue);
      }
      mergeState.checkAbort.work(300);
    }
  }
  NumericDocValuesConsumer field=addNumericField(mergeState.fieldInfo,minValue,maxValue,mergeState.segmentInfo.getDocCount());
  field.merge(mergeState);
}
