{
  long minValue=Long.MAX_VALUE;
  long maxValue=Long.MIN_VALUE;
  for (int readerIDX=0; readerIDX < toMerge.size(); readerIDX++) {
    AtomicReader reader=mergeState.readers.get(readerIDX);
    int maxDoc=reader.maxDoc();
    Bits liveDocs=reader.getLiveDocs();
    NumericDocValues values=toMerge.get(readerIDX);
    for (int i=0; i < maxDoc; i++) {
      if (liveDocs == null || liveDocs.get(i)) {
        long val=values.get(i);
        minValue=Math.min(val,minValue);
        maxValue=Math.max(val,maxValue);
      }
      mergeState.checkAbort.work(300);
    }
  }
  NumericDocValuesConsumer field=addNumericField(fieldInfo,minValue,maxValue);
  field.merge(mergeState,toMerge);
}
