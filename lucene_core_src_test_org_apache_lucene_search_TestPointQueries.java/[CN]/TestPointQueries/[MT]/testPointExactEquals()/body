{
  Query q1=IntPoint.newExactQuery("a",1000);
  Query q2=IntPoint.newExactQuery("a",1000);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  assertFalse(q1.equals(IntPoint.newExactQuery("a",1)));
  q1=LongPoint.newExactQuery("a",1000);
  q2=LongPoint.newExactQuery("a",1000);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  assertFalse(q1.equals(LongPoint.newExactQuery("a",1)));
  q1=FloatPoint.newExactQuery("a",1000);
  q2=FloatPoint.newExactQuery("a",1000);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  assertFalse(q1.equals(FloatPoint.newExactQuery("a",1)));
  q1=DoublePoint.newExactQuery("a",1000);
  q2=DoublePoint.newExactQuery("a",1000);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  assertFalse(q1.equals(DoublePoint.newExactQuery("a",1)));
  byte[] ones=new byte[5];
  Arrays.fill(ones,(byte)0xff);
  q1=BinaryPoint.newExactQuery("a",ones);
  q2=BinaryPoint.newExactQuery("a",ones);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  byte[] other=ones.clone();
  other[2]=(byte)5;
  assertFalse(q1.equals(BinaryPoint.newExactQuery("a",other)));
}
