{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig();
  iwc.setCodec(getCodec());
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,iwc);
  Document doc=new Document();
  doc.add(new BinaryPoint("value",toUTF8("abc")));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new BinaryPoint("value",toUTF8("def")));
  w.addDocument(doc);
  IndexReader r=w.getReader();
  IndexSearcher s=newSearcher(r,false);
  assertEquals(1,s.count(BinaryPoint.newRangeQuery("value",toUTF8("aaa"),toUTF8("bbb"))));
  assertEquals(1,s.count(BinaryPoint.newRangeQuery("value",toUTF8("c",3),toUTF8("e",3))));
  assertEquals(2,s.count(BinaryPoint.newRangeQuery("value",toUTF8("a",3),toUTF8("z",3))));
  assertEquals(1,s.count(BinaryPoint.newRangeQuery("value",toUTF8("",3),toUTF8("abc"))));
  assertEquals(1,s.count(BinaryPoint.newRangeQuery("value",toUTF8("a",3),toUTF8("abc"))));
  assertEquals(0,s.count(BinaryPoint.newRangeQuery("value",toUTF8("a",3),toUTF8("abb"))));
  assertEquals(1,s.count(BinaryPoint.newRangeQuery("value",toUTF8("def"),toUTF8("zzz"))));
  assertEquals(1,s.count(BinaryPoint.newRangeQuery("value",toUTF8(("def")),toUTF8("z",3))));
  assertEquals(0,s.count(BinaryPoint.newRangeQuery("value",toUTF8("deg"),toUTF8("z",3))));
  IOUtils.close(r,w,dir);
}
