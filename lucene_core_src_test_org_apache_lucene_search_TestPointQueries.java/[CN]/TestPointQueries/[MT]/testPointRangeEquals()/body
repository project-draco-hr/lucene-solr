{
  Query q1, q2;
  q1=IntPoint.newRangeQuery("a",0,1000);
  q2=IntPoint.newRangeQuery("a",0,1000);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  assertFalse(q1.equals(IntPoint.newRangeQuery("a",1,1000)));
  assertFalse(q1.equals(IntPoint.newRangeQuery("b",0,1000)));
  q1=LongPoint.newRangeQuery("a",0,1000);
  q2=LongPoint.newRangeQuery("a",0,1000);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  assertFalse(q1.equals(LongPoint.newRangeQuery("a",1,1000)));
  q1=FloatPoint.newRangeQuery("a",0,1000);
  q2=FloatPoint.newRangeQuery("a",0,1000);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  assertFalse(q1.equals(FloatPoint.newRangeQuery("a",1,1000)));
  q1=DoublePoint.newRangeQuery("a",0,1000);
  q2=DoublePoint.newRangeQuery("a",0,1000);
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  assertFalse(q1.equals(DoublePoint.newRangeQuery("a",1,1000)));
  byte[] zeros=new byte[5];
  byte[] ones=new byte[5];
  Arrays.fill(ones,(byte)0xff);
  q1=BinaryPoint.newRangeQuery("a",new byte[][]{zeros},new byte[][]{ones});
  q2=BinaryPoint.newRangeQuery("a",new byte[][]{zeros},new byte[][]{ones});
  assertEquals(q1,q2);
  assertEquals(q1.hashCode(),q2.hashCode());
  byte[] other=ones.clone();
  other[2]=(byte)5;
  assertFalse(q1.equals(BinaryPoint.newRangeQuery("a",new byte[][]{zeros},new byte[][]{other})));
}
