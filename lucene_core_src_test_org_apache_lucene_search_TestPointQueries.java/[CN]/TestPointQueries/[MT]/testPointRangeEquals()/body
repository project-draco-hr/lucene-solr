{
  Query q=IntPoint.newRangeQuery("a",0,1000);
  assertEquals(q,IntPoint.newRangeQuery("a",0,1000));
  assertFalse(q.equals(IntPoint.newRangeQuery("a",1,1000)));
  q=LongPoint.newRangeQuery("a",0,1000);
  assertEquals(q,LongPoint.newRangeQuery("a",0,1000));
  assertFalse(q.equals(LongPoint.newRangeQuery("a",1,1000)));
  q=FloatPoint.newRangeQuery("a",0,1000);
  assertEquals(q,FloatPoint.newRangeQuery("a",0,1000));
  assertFalse(q.equals(FloatPoint.newRangeQuery("a",1,1000)));
  q=DoublePoint.newRangeQuery("a",0,1000);
  assertEquals(q,DoublePoint.newRangeQuery("a",0,1000));
  assertFalse(q.equals(DoublePoint.newRangeQuery("a",1,1000)));
  byte[] zeros=new byte[5];
  byte[] ones=new byte[5];
  Arrays.fill(ones,(byte)0xff);
  q=BinaryPoint.newRangeQuery("a",new byte[][]{zeros},new byte[][]{ones});
  assertEquals(q,BinaryPoint.newRangeQuery("a",new byte[][]{zeros},new byte[][]{ones}));
  byte[] other=ones.clone();
  other[2]=(byte)5;
  assertFalse(q.equals(BinaryPoint.newRangeQuery("a",new byte[][]{zeros},new byte[][]{other})));
}
