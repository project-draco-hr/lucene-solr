{
  Directory dir=newDirectory();
  IndexWriter w=new IndexWriter(dir,new IndexWriterConfig(new MockAnalyzer(random())));
  Document doc=new Document();
  doc.add(new FloatPoint("point",Float.NEGATIVE_INFINITY));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new FloatPoint("point",-0.0F));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new FloatPoint("point",+0.0F));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new FloatPoint("point",Float.MIN_VALUE));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new FloatPoint("point",Float.MAX_VALUE));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new FloatPoint("point",Float.POSITIVE_INFINITY));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new FloatPoint("point",Float.NaN));
  w.addDocument(doc);
  DirectoryReader r=DirectoryReader.open(w);
  IndexSearcher s=new IndexSearcher(r);
  assertEquals(1,s.count(FloatPoint.newExactQuery("point",Float.NEGATIVE_INFINITY)));
  assertEquals(1,s.count(FloatPoint.newExactQuery("point",-0.0F)));
  assertEquals(1,s.count(FloatPoint.newExactQuery("point",+0.0F)));
  assertEquals(1,s.count(FloatPoint.newExactQuery("point",Float.MIN_VALUE)));
  assertEquals(1,s.count(FloatPoint.newExactQuery("point",Float.MAX_VALUE)));
  assertEquals(1,s.count(FloatPoint.newExactQuery("point",Float.POSITIVE_INFINITY)));
  assertEquals(1,s.count(FloatPoint.newExactQuery("point",Float.NaN)));
  float set[]=new float[]{Float.MAX_VALUE,Float.NaN,+0.0F,Float.NEGATIVE_INFINITY,Float.MIN_VALUE,-0.0F,Float.POSITIVE_INFINITY};
  assertEquals(7,s.count(FloatPoint.newSetQuery("point",set)));
  assertEquals(2,s.count(FloatPoint.newRangeQuery("point",Float.NEGATIVE_INFINITY,-0.0F)));
  assertEquals(2,s.count(FloatPoint.newRangeQuery("point",-0.0F,0.0F)));
  assertEquals(2,s.count(FloatPoint.newRangeQuery("point",0.0F,Float.MIN_VALUE)));
  assertEquals(2,s.count(FloatPoint.newRangeQuery("point",Float.MIN_VALUE,Float.MAX_VALUE)));
  assertEquals(2,s.count(FloatPoint.newRangeQuery("point",Float.MAX_VALUE,Float.POSITIVE_INFINITY)));
  assertEquals(2,s.count(FloatPoint.newRangeQuery("point",Float.POSITIVE_INFINITY,Float.NaN)));
  w.close();
  r.close();
  dir.close();
}
