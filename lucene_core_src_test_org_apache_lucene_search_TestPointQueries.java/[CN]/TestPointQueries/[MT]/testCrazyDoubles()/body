{
  Directory dir=newDirectory();
  IndexWriter w=new IndexWriter(dir,new IndexWriterConfig(new MockAnalyzer(random())));
  Document doc=new Document();
  doc.add(new DoublePoint("point",Double.NEGATIVE_INFINITY));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new DoublePoint("point",-0.0D));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new DoublePoint("point",+0.0D));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new DoublePoint("point",Double.MIN_VALUE));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new DoublePoint("point",Double.MAX_VALUE));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new DoublePoint("point",Double.POSITIVE_INFINITY));
  w.addDocument(doc);
  doc=new Document();
  doc.add(new DoublePoint("point",Double.NaN));
  w.addDocument(doc);
  DirectoryReader r=DirectoryReader.open(w);
  IndexSearcher s=new IndexSearcher(r);
  assertEquals(1,s.count(DoublePoint.newExactQuery("point",Double.NEGATIVE_INFINITY)));
  assertEquals(1,s.count(DoublePoint.newExactQuery("point",-0.0D)));
  assertEquals(1,s.count(DoublePoint.newExactQuery("point",+0.0D)));
  assertEquals(1,s.count(DoublePoint.newExactQuery("point",Double.MIN_VALUE)));
  assertEquals(1,s.count(DoublePoint.newExactQuery("point",Double.MAX_VALUE)));
  assertEquals(1,s.count(DoublePoint.newExactQuery("point",Double.POSITIVE_INFINITY)));
  assertEquals(1,s.count(DoublePoint.newExactQuery("point",Double.NaN)));
  double set[]=new double[]{Double.MAX_VALUE,Double.NaN,+0.0D,Double.NEGATIVE_INFINITY,Double.MIN_VALUE,-0.0D,Double.POSITIVE_INFINITY};
  assertEquals(7,s.count(DoublePoint.newSetQuery("point",set)));
  assertEquals(2,s.count(DoublePoint.newRangeQuery("point",Double.NEGATIVE_INFINITY,-0.0D)));
  assertEquals(2,s.count(DoublePoint.newRangeQuery("point",-0.0D,0.0D)));
  assertEquals(2,s.count(DoublePoint.newRangeQuery("point",0.0D,Double.MIN_VALUE)));
  assertEquals(2,s.count(DoublePoint.newRangeQuery("point",Double.MIN_VALUE,Double.MAX_VALUE)));
  assertEquals(2,s.count(DoublePoint.newRangeQuery("point",Double.MAX_VALUE,Double.POSITIVE_INFINITY)));
  assertEquals(2,s.count(DoublePoint.newRangeQuery("point",Double.POSITIVE_INFINITY,Double.NaN)));
  w.close();
  r.close();
  dir.close();
}
