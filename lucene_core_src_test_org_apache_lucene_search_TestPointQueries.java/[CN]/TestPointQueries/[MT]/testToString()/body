{
  assertEquals("field:[1 TO 2}",IntPoint.newRangeQuery("field",1,true,2,false).toString());
  assertEquals("field:{-2 TO 1]",IntPoint.newRangeQuery("field",-2,false,1,true).toString());
  assertEquals("field:[* TO 2}",IntPoint.newRangeQuery("field",null,true,2,false).toString());
  assertEquals("field:[1099511627776 TO 2199023255552}",LongPoint.newRangeQuery("field",1L << 40,true,1L << 41,false).toString());
  assertEquals("field:{-5 TO 6]",LongPoint.newRangeQuery("field",-5L,false,6L,true).toString());
  assertEquals("field:[* TO 2}",LongPoint.newRangeQuery("field",null,true,2L,false).toString());
  assertEquals("field:[1.3 TO 2.5}",FloatPoint.newRangeQuery("field",1.3F,true,2.5F,false).toString());
  assertEquals("field:{-2.9 TO 1.0]",FloatPoint.newRangeQuery("field",-2.9F,false,1.0F,true).toString());
  assertEquals("field:{-2.9 TO *]",FloatPoint.newRangeQuery("field",-2.9F,false,null,true).toString());
  assertEquals("field:[1.3 TO 2.5}",DoublePoint.newRangeQuery("field",1.3,true,2.5,false).toString());
  assertEquals("field:{-2.9 TO 1.0]",DoublePoint.newRangeQuery("field",-2.9,false,1.0,true).toString());
  assertEquals("field:{-2.9 TO *]",DoublePoint.newRangeQuery("field",-2.9,false,null,true).toString());
  assertEquals("field:[1.3 TO 2.5},{-2.9 TO 1.0]",DoublePoint.newMultiRangeQuery("field",new Double[]{1.3,-2.9},new boolean[]{true,false},new Double[]{2.5,1.0},new boolean[]{false,true}).toString());
}
