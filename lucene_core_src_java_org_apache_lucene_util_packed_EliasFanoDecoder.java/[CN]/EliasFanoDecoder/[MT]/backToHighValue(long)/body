{
  int curSetBits=Long.bitCount(curHighLong);
  int curClearBits=Long.SIZE - curSetBits - getCurrentLeftShift();
  while ((currentHighValue() - curClearBits) > highTarget) {
    efIndex-=curSetBits;
    if (efIndex < 0) {
      return NO_MORE_VALUES;
    }
    toPreviousHighLong();
    curSetBits=Long.bitCount(curHighLong);
    curClearBits=Long.SIZE - curSetBits;
  }
  long highValue=previousHighValue();
  while (highValue > highTarget) {
    if (!toBeforeCurrentHighBit()) {
      return NO_MORE_VALUES;
    }
    highValue=previousHighValue();
  }
  return highValue;
}
