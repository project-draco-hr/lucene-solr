{
  String[] arguments=ExpressionFactory.getArguments(expressionString);
  if (arguments.length != 2) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Invalid arguments were given for \"" + AnalyticsParams.FILTER + "\".");
  }
  ValueSource delegateSource=buildSourceTree(schema,arguments[0],sourceType);
  if (delegateSource == null) {
    return null;
  }
  Object defaultObject;
  Class<? extends ValueSource> type=delegateSource.getClass();
  ValueSource src=delegateSource;
  if (delegateSource instanceof FilterFieldSource) {
    src=((FilterFieldSource)delegateSource).getRootSource();
  }
  if (src instanceof IntFieldSource) {
    try {
      defaultObject=new Integer(arguments[1]);
    }
 catch (    NumberFormatException e) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"The filter value " + arguments[1] + " cannot be converted into an integer.",e);
    }
  }
 else   if (src instanceof LongFieldSource) {
    try {
      defaultObject=new Long(arguments[1]);
    }
 catch (    NumberFormatException e) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"The filter value " + arguments[1] + " cannot be converted into a long.",e);
    }
  }
 else   if (src instanceof FloatFieldSource) {
    try {
      defaultObject=new Float(arguments[1]);
    }
 catch (    NumberFormatException e) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"The filter value " + arguments[1] + " cannot be converted into a float.",e);
    }
  }
 else   if (src instanceof DoubleFieldSource || src instanceof SingleDoubleFunction || src instanceof DualDoubleFunction|| src instanceof MultiDoubleFunction) {
    try {
      defaultObject=new Double(arguments[1]);
    }
 catch (    NumberFormatException e) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"The filter value " + arguments[1] + " cannot be converted into a double.",e);
    }
  }
 else   if (src instanceof DateFieldSource || src instanceof MultiDateFunction) {
    try {
      defaultObject=TrieDateField.parseDate(arguments[1]);
    }
 catch (    ParseException e) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"The filter value " + arguments[1] + " cannot be converted into a date.",e);
    }
  }
 else {
    defaultObject=arguments[1];
  }
  return new FilterFieldSource(delegateSource,defaultObject);
}
