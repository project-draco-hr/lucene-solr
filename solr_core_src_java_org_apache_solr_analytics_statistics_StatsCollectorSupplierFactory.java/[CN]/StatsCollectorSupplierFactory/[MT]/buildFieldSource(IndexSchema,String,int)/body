{
  SchemaField sf;
  try {
    sf=schema.getField(expressionString);
  }
 catch (  SolrException e) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"The field " + expressionString + " does not exist.",e);
  }
  FieldType type=sf.getType();
  if (type instanceof TrieIntField) {
    if (sourceType != NUMBER_TYPE && sourceType != FIELD_TYPE) {
      return null;
    }
    return new IntFieldSource(expressionString){
      public String description(){
        return field;
      }
    }
;
  }
 else   if (type instanceof TrieLongField) {
    if (sourceType != NUMBER_TYPE && sourceType != FIELD_TYPE) {
      return null;
    }
    return new LongFieldSource(expressionString){
      public String description(){
        return field;
      }
    }
;
  }
 else   if (type instanceof TrieFloatField) {
    if (sourceType != NUMBER_TYPE && sourceType != FIELD_TYPE) {
      return null;
    }
    return new FloatFieldSource(expressionString){
      public String description(){
        return field;
      }
    }
;
  }
 else   if (type instanceof TrieDoubleField) {
    if (sourceType != NUMBER_TYPE && sourceType != FIELD_TYPE) {
      return null;
    }
    return new DoubleFieldSource(expressionString){
      public String description(){
        return field;
      }
    }
;
  }
 else   if (type instanceof TrieDateField) {
    if (sourceType != DATE_TYPE && sourceType != FIELD_TYPE) {
      return null;
    }
    return new DateFieldSource(expressionString){
      public String description(){
        return field;
      }
    }
;
  }
 else   if (type instanceof StrField) {
    if (sourceType != STRING_TYPE && sourceType != FIELD_TYPE) {
      return null;
    }
    return new BytesRefFieldSource(expressionString){
      public String description(){
        return field;
      }
    }
;
  }
  throw new SolrException(ErrorCode.BAD_REQUEST,type.toString() + " is not a supported field type in Solr Analytics.");
}
