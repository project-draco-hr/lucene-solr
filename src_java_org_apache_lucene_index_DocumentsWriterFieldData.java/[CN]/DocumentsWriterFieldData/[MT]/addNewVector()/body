{
  if (postingsVectorsUpto == threadState.postingsVectors.length) {
    final int newSize;
    if (threadState.postingsVectors.length < 2)     newSize=2;
 else     newSize=(int)(1.5 * threadState.postingsVectors.length);
    PostingVector[] newArray=new PostingVector[newSize];
    System.arraycopy(threadState.postingsVectors,0,newArray,0,threadState.postingsVectors.length);
    threadState.postingsVectors=newArray;
  }
  p.vector=threadState.postingsVectors[postingsVectorsUpto];
  if (p.vector == null)   p.vector=threadState.postingsVectors[postingsVectorsUpto]=new PostingVector();
  postingsVectorsUpto++;
  final PostingVector v=p.vector;
  v.p=p;
  if (doVectorPositions) {
    final int upto=threadState.vectorsPool.newSlice(ByteBlockPool.FIRST_LEVEL_SIZE);
    v.posStart=v.posUpto=threadState.vectorsPool.byteOffset + upto;
  }
  if (doVectorOffsets) {
    final int upto=threadState.vectorsPool.newSlice(ByteBlockPool.FIRST_LEVEL_SIZE);
    v.offsetStart=v.offsetUpto=threadState.vectorsPool.byteOffset + upto;
  }
  return v;
}
