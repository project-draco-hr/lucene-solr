{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir);
  final int numDocs=atLeast(500);
  final Number[] answers=new Number[numDocs];
  final NumericType[] typeAnswers=new NumericType[numDocs];
  for (int id=0; id < numDocs; id++) {
    Document doc=new Document();
    final Field nf;
    final Field sf;
    final Number answer;
    final NumericType typeAnswer;
    if (random().nextBoolean()) {
      if (random().nextBoolean()) {
        final float f=random().nextFloat();
        answer=Float.valueOf(f);
        nf=new FloatField("nf",f,Field.Store.NO);
        sf=new StoredField("nf",f);
        typeAnswer=NumericType.FLOAT;
      }
 else {
        final double d=random().nextDouble();
        answer=Double.valueOf(d);
        nf=new DoubleField("nf",d,Field.Store.NO);
        sf=new StoredField("nf",d);
        typeAnswer=NumericType.DOUBLE;
      }
    }
 else {
      if (random().nextBoolean()) {
        final int i=random().nextInt();
        answer=Integer.valueOf(i);
        nf=new IntField("nf",i,Field.Store.NO);
        sf=new StoredField("nf",i);
        typeAnswer=NumericType.INT;
      }
 else {
        final long l=random().nextLong();
        answer=Long.valueOf(l);
        nf=new LongField("nf",l,Field.Store.NO);
        sf=new StoredField("nf",l);
        typeAnswer=NumericType.LONG;
      }
    }
    doc.add(nf);
    doc.add(sf);
    answers[id]=answer;
    typeAnswers[id]=typeAnswer;
    FieldType ft=new FieldType(IntField.TYPE_NOT_STORED);
    ft.setNumericPrecisionStep(Integer.MAX_VALUE);
    doc.add(new IntField("id",id,ft));
    w.addDocument(doc);
  }
  final DirectoryReader r=w.getReader();
  w.close();
  assertEquals(numDocs,r.numDocs());
  for (  AtomicReaderContext ctx : r.leaves()) {
    final AtomicReader sub=ctx.reader();
    final int[] ids=FieldCache.DEFAULT.getInts(sub,"id",false);
    for (int docID=0; docID < sub.numDocs(); docID++) {
      final Document doc=sub.document(docID);
      final Field f=(Field)doc.getField("nf");
      assertTrue("got f=" + f,f instanceof StoredField);
      assertEquals(answers[ids[docID]],f.numericValue());
    }
  }
  r.close();
  dir.close();
}
