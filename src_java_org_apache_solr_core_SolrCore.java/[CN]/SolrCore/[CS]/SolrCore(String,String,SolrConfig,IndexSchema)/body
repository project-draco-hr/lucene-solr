{
synchronized (SolrCore.class) {
    instance=this;
    this.setName(name);
    SolrResourceLoader loader=config.getResourceLoader();
    if (dataDir == null)     dataDir=config.get("dataDir",loader.getInstanceDir() + "data/");
    dataDir=SolrResourceLoader.normalizeDir(dataDir);
    log.info(logid + "Opening new SolrCore at " + loader.getInstanceDir()+ ", dataDir="+ dataDir);
    if (schema == null) {
      schema=new IndexSchema(config,IndexSchema.DEFAULT_SCHEMA_FILE,null);
    }
    this.schema=schema;
    this.dataDir=dataDir;
    this.solrConfig=config;
    this.startTime=System.currentTimeMillis();
    this.maxWarmingSearchers=config.getInt("query/maxWarmingSearchers",Integer.MAX_VALUE);
    booleanQueryMaxClauseCount();
    parseListeners();
    initIndex();
    initWriters();
    initQParsers();
    initValueSourceParsers();
    this.searchComponents=loadSearchComponents(config);
    updateProcessors=loadUpdateProcessors();
    reqHandlers=new RequestHandlers(this);
    reqHandlers.initHandlersFromConfig(solrConfig);
    highlighter=createHighlighter(solrConfig.get("highlighting/@class",DefaultSolrHighlighter.class.getName()));
    highlighter.initalize(solrConfig);
    try {
      getSearcher(false,false,null);
      updateHandler=createUpdateHandler(solrConfig.get("updateHandler/@class",DirectUpdateHandler.class.getName()));
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
    loader.inform(loader);
    loader.inform(this);
  }
}
