{
  XmlPullParser xpp=null;
  try {
    xpp=factory.newPullParser();
  }
 catch (  XmlPullParserException e) {
    throw new RuntimeException(e);
  }
  long startTime=System.currentTimeMillis();
  try {
    xpp.setInput(reader);
    xpp.nextTag();
    String currTag=xpp.getName();
    if ("add".equals(currTag)) {
      log.finest("SolrCore.update(add)");
      AddUpdateCommand cmd=new AddUpdateCommand();
      cmd.allowDups=false;
      int status=0;
      boolean pendingAttr=false, committedAttr=false;
      int attrcount=xpp.getAttributeCount();
      for (int i=0; i < attrcount; i++) {
        String attrName=xpp.getAttributeName(i);
        String attrVal=xpp.getAttributeValue(i);
        if ("allowDups".equals(attrName)) {
          cmd.allowDups=StrUtils.parseBoolean(attrVal);
        }
 else         if ("overwritePending".equals(attrName)) {
          cmd.overwritePending=StrUtils.parseBoolean(attrVal);
          pendingAttr=true;
        }
 else         if ("overwriteCommitted".equals(attrName)) {
          cmd.overwriteCommitted=StrUtils.parseBoolean(attrVal);
          committedAttr=true;
        }
 else {
          log.warning("Unknown attribute id in add:" + attrName);
        }
      }
      if (!pendingAttr)       cmd.overwritePending=!cmd.allowDups;
      if (!committedAttr)       cmd.overwriteCommitted=!cmd.allowDups;
      DocumentBuilder builder=new DocumentBuilder(schema);
      int eventType=0;
      while (true) {
        cmd.id=null;
        if (eventType != 0) {
          eventType=xpp.getEventType();
          if (eventType == XmlPullParser.END_DOCUMENT)           break;
        }
        eventType=xpp.nextTag();
        if (eventType == XmlPullParser.END_TAG || eventType == XmlPullParser.END_DOCUMENT)         break;
        try {
          readDoc(builder,xpp);
          builder.endDoc();
          cmd.doc=builder.getDoc();
          log.finest("adding doc...");
          updateHandler.addDoc(cmd);
          log.info("add " + status + " "+ (System.currentTimeMillis() - startTime));
          writer.write("<result status=\"" + status + "\"></result>");
        }
 catch (        SolrException e) {
          log(e);
          log.info("add " + e.code + " "+ (System.currentTimeMillis() - startTime));
          writeResult(writer,e);
          eventType=xpp.getEventType();
          while (true) {
            if (eventType == XmlPullParser.END_DOCUMENT || (eventType == XmlPullParser.END_TAG && "add".equals(xpp.getName()))) {
              break;
            }
            eventType=xpp.next();
          }
        }
      }
    }
 else     if ("commit".equals(currTag) || "optimize".equals(currTag)) {
      log.finest("parsing " + currTag);
      try {
        CommitUpdateCommand cmd=new CommitUpdateCommand("optimize".equals(currTag));
        boolean sawWaitSearcher=false, sawWaitFlush=false;
        int attrcount=xpp.getAttributeCount();
        for (int i=0; i < attrcount; i++) {
          String attrName=xpp.getAttributeName(i);
          String attrVal=xpp.getAttributeValue(i);
          if ("waitFlush".equals(attrName)) {
            cmd.waitFlush=StrUtils.parseBoolean(attrVal);
            sawWaitFlush=true;
          }
 else           if ("waitSearcher".equals(attrName)) {
            cmd.waitSearcher=StrUtils.parseBoolean(attrVal);
            sawWaitSearcher=true;
          }
 else {
            log.warning("unexpected attribute commit/@" + attrName);
          }
        }
        if (sawWaitFlush && !sawWaitSearcher) {
          cmd.waitSearcher=false;
        }
        updateHandler.commit(cmd);
        if ("optimize".equals(currTag)) {
          log.info("optimize 0 " + (System.currentTimeMillis() - startTime));
        }
 else {
          log.info("commit 0 " + (System.currentTimeMillis() - startTime));
        }
        while (true) {
          int eventType=xpp.nextTag();
          if (eventType == XmlPullParser.END_TAG)           break;
        }
        writer.write("<result status=\"0\"></result>");
      }
 catch (      SolrException e) {
        log(e);
        if ("optimize".equals(currTag)) {
          log.info("optimize " + e.code + " "+ (System.currentTimeMillis() - startTime));
        }
 else {
          log.info("commit " + e.code + " "+ (System.currentTimeMillis() - startTime));
        }
        writeResult(writer,e);
      }
catch (      Exception e) {
        SolrException.log(log,"Exception during commit/optimize",e);
        writeResult(writer,e);
      }
    }
 else     if ("delete".equals(currTag)) {
      log.finest("parsing delete");
      try {
        DeleteUpdateCommand cmd=new DeleteUpdateCommand();
        cmd.fromPending=true;
        cmd.fromCommitted=true;
        int attrcount=xpp.getAttributeCount();
        for (int i=0; i < attrcount; i++) {
          String attrName=xpp.getAttributeName(i);
          String attrVal=xpp.getAttributeValue(i);
          if ("fromPending".equals(attrName)) {
            cmd.fromPending=StrUtils.parseBoolean(attrVal);
          }
 else           if ("fromCommitted".equals(attrName)) {
            cmd.fromCommitted=StrUtils.parseBoolean(attrVal);
          }
 else {
            log.warning("unexpected attribute delete/@" + attrName);
          }
        }
        int eventType=xpp.nextTag();
        currTag=xpp.getName();
        String val=xpp.nextText();
        if ("id".equals(currTag)) {
          cmd.id=val;
          updateHandler.delete(cmd);
          log.info("delete(id " + val + ") 0 "+ (System.currentTimeMillis() - startTime));
        }
 else         if ("query".equals(currTag)) {
          cmd.query=val;
          updateHandler.deleteByQuery(cmd);
          log.info("deleteByQuery(query " + val + ") 0 "+ (System.currentTimeMillis() - startTime));
        }
 else {
          log.warning("unexpected XML tag /delete/" + currTag);
          throw new SolrException(400,"unexpected XML tag /delete/" + currTag);
        }
        writer.write("<result status=\"0\"></result>");
        while (xpp.nextTag() != XmlPullParser.END_TAG)         ;
      }
 catch (      SolrException e) {
        log(e);
        log.info("delete " + e.code + " "+ (System.currentTimeMillis() - startTime));
        writeResult(writer,e);
      }
catch (      Exception e) {
        log(e);
        writeResult(writer,e);
      }
    }
  }
 catch (  XmlPullParserException e) {
    log(e);
    writeResult(writer,e);
  }
catch (  IOException e) {
    log(e);
    writeResult(writer,e);
  }
catch (  SolrException e) {
    log(e);
    log.info("update " + e.code + " "+ (System.currentTimeMillis() - startTime));
    writeResult(writer,e);
  }
catch (  Throwable e) {
    log(e);
    writeResult(writer,e);
  }
}
