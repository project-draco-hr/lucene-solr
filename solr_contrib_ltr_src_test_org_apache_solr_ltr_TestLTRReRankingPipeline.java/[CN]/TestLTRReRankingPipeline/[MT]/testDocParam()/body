{
  final Map<String,Object> test=new HashMap<String,Object>();
  test.put("fake",2);
  List<Feature> features=makeFieldValueFeatures(new int[]{0},"final-score");
  List<Normalizer> norms=new ArrayList<Normalizer>(Collections.nCopies(features.size(),IdentityNormalizer.INSTANCE));
  List<Feature> allFeatures=makeFieldValueFeatures(new int[]{0},"final-score");
  MockModel ltrScoringModel=new MockModel("test",features,norms,"test",allFeatures,null);
  LTRScoringQuery query=new LTRScoringQuery(ltrScoringModel);
  LTRScoringQuery.ModelWeight wgt=query.createWeight(null,true,1f);
  LTRScoringQuery.ModelWeight.ModelScorer modelScr=wgt.scorer(null);
  modelScr.getDocInfo().setOriginalDocScore(new Float(1f));
  for (  final Scorer.ChildScorer feat : modelScr.getChildren()) {
    assertNotNull(((Feature.FeatureWeight.FeatureScorer)feat.child).getDocInfo().getOriginalDocScore());
  }
  features=makeFieldValueFeatures(new int[]{0,1,2},"final-score");
  norms=new ArrayList<Normalizer>(Collections.nCopies(features.size(),IdentityNormalizer.INSTANCE));
  allFeatures=makeFieldValueFeatures(new int[]{0,1,2,3,4,5,6,7,8,9},"final-score");
  ltrScoringModel=new MockModel("test",features,norms,"test",allFeatures,null);
  query=new LTRScoringQuery(ltrScoringModel);
  wgt=query.createWeight(null,true,1f);
  modelScr=wgt.scorer(null);
  modelScr.getDocInfo().setOriginalDocScore(new Float(1f));
  for (  final Scorer.ChildScorer feat : modelScr.getChildren()) {
    assertNotNull(((Feature.FeatureWeight.FeatureScorer)feat.child).getDocInfo().getOriginalDocScore());
  }
}
