{
  RAMFile file=new RAMFile();
  final IndexOutput output=new RAMOutputStream(file,false);
  AtomicLong fakeChecksum=new AtomicLong();
  IndexOutput fakeOutput=new IndexOutput("fake","fake"){
    @Override public void close() throws IOException {
      output.close();
    }
    @Override public long getFilePointer(){
      return output.getFilePointer();
    }
    @Override public long getChecksum() throws IOException {
      return fakeChecksum.get();
    }
    @Override public void writeByte(    byte b) throws IOException {
      output.writeByte(b);
    }
    @Override public void writeBytes(    byte[] b,    int offset,    int length) throws IOException {
      output.writeBytes(b,offset,length);
    }
  }
;
  fakeChecksum.set(-1L);
  try {
    CodecUtil.writeCRC(fakeOutput);
    fail("didn't get expected exception");
  }
 catch (  IllegalStateException expected) {
  }
  fakeChecksum.set(1L << 32);
  try {
    CodecUtil.writeCRC(fakeOutput);
    fail("didn't get expected exception");
  }
 catch (  IllegalStateException expected) {
  }
  fakeChecksum.set(-(1L << 32));
  try {
    CodecUtil.writeCRC(fakeOutput);
    fail("didn't get expected exception");
  }
 catch (  IllegalStateException expected) {
  }
  fakeChecksum.set((1L << 32) - 1);
  CodecUtil.writeCRC(fakeOutput);
}
