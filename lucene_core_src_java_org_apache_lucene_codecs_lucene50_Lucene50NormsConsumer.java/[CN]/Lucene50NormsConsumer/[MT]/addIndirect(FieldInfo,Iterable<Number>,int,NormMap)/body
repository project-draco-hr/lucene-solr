{
  int commonCount=uniqueValues.maxFreq();
  final long commonValue=uniqueValues.getDecodeTable()[uniqueValues.maxOrd()];
  meta.writeVInt(count - commonCount);
  meta.writeByte(INDIRECT);
  meta.writeLong(data.getFilePointer());
  writeDocsWithValue(values,commonValue);
  writeNormsField(field,new Iterable<Number>(){
    @Override public Iterator<Number> iterator(){
      return new FilterIterator<Number,Number>(values.iterator()){
        @Override protected boolean predicateFunction(        Number value){
          return value.longValue() != commonValue;
        }
      }
;
    }
  }
,1);
}
