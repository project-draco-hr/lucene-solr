{
  int timeout=req.getParams().getInt(BaseSolrResource.UPDATE_TIMEOUT_SECS,-1);
  long startTime=System.nanoTime();
  long endTime=timeout > 0 ? System.nanoTime() + (timeout * 1000 * 1000) : Long.MAX_VALUE;
  SolrCore core=req.getCore();
  for (; System.nanoTime() < endTime; ) {
    managedIndexSchema=(ManagedIndexSchema)core.getLatestSchema();
    for (    Operation op : operations) {
      if (ADD_FIELD.equals(op.name) || ADD_DYNAMIC_FIELD.equals(op.name)) {
        applyAddField(op);
      }
 else       if (ADD_COPY_FIELD.equals(op.name)) {
        applyAddCopyField(op);
      }
 else       if (ADD_FIELD_TYPE.equals(op.name)) {
        applyAddType(op);
      }
 else {
        op.addError("No such operation : " + op.name);
      }
    }
    List errs=captureErrors(operations);
    if (!errs.isEmpty())     return errs;
    try {
      managedIndexSchema.persistManagedSchema(false);
      core.setLatestSchema(managedIndexSchema);
      waitForOtherReplicasToUpdate(timeout,startTime);
      return EMPTY_LIST;
    }
 catch (    ManagedIndexSchema.SchemaChangedInZkException e) {
      String s="Failed to update schema because schema is modified";
      log.warn(s,e);
      continue;
    }
catch (    Exception e) {
      String s="Exception persisting schema";
      log.warn(s,e);
      return singletonList(s + e.getMessage());
    }
  }
  return singletonList("Unable to persist schema");
}
