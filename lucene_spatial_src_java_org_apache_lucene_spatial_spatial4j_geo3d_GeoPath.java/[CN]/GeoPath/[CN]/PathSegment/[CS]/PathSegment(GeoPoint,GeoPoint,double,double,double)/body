{
  this.start=start;
  this.end=end;
  this.planeBoundingOffset=planeBoundingOffset;
  this.arcWidth=arcWidth;
  this.chordDistance=chordDistance;
  fullDistance=start.arcDistance(end);
  fullNormalDistance=start.normalDistance(end);
  fullLinearDistance=start.linearDistance(end);
  normalizedConnectingPlane=new Plane(start,end).normalize();
  if (normalizedConnectingPlane == null) {
    upperConnectingPlane=null;
    lowerConnectingPlane=null;
    startCutoffPlane=null;
    endCutoffPlane=null;
    upperConnectingPlanePoints=null;
    lowerConnectingPlanePoints=null;
    startCutoffPlanePoints=null;
    endCutoffPlanePoints=null;
    invertedStartCutoffPlane=null;
    invertedEndCutoffPlane=null;
  }
 else {
    upperConnectingPlane=new SidedPlane(start,normalizedConnectingPlane,-planeBoundingOffset);
    lowerConnectingPlane=new SidedPlane(start,normalizedConnectingPlane,planeBoundingOffset);
    startCutoffPlane=new SidedPlane(end,normalizedConnectingPlane,start);
    endCutoffPlane=new SidedPlane(start,normalizedConnectingPlane,end);
    final Membership[] upperSide=new Membership[]{upperConnectingPlane};
    final Membership[] lowerSide=new Membership[]{lowerConnectingPlane};
    final Membership[] startSide=new Membership[]{startCutoffPlane};
    final Membership[] endSide=new Membership[]{endCutoffPlane};
    final GeoPoint ULHC=upperConnectingPlane.findIntersections(startCutoffPlane,lowerSide,endSide)[0];
    final GeoPoint URHC=upperConnectingPlane.findIntersections(endCutoffPlane,lowerSide,startSide)[0];
    final GeoPoint LLHC=lowerConnectingPlane.findIntersections(startCutoffPlane,upperSide,endSide)[0];
    final GeoPoint LRHC=lowerConnectingPlane.findIntersections(endCutoffPlane,upperSide,startSide)[0];
    upperConnectingPlanePoints=new GeoPoint[]{ULHC,URHC};
    lowerConnectingPlanePoints=new GeoPoint[]{LLHC,LRHC};
    startCutoffPlanePoints=new GeoPoint[]{ULHC,LLHC};
    endCutoffPlanePoints=new GeoPoint[]{URHC,LRHC};
    invertedStartCutoffPlane=new SidedPlane(startCutoffPlane);
    invertedEndCutoffPlane=new SidedPlane(endCutoffPlane);
  }
}
