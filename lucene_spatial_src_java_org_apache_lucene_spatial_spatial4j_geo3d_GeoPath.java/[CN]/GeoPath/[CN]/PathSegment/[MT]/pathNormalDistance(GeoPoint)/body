{
  if (!isWithin(point))   return Double.MAX_VALUE;
  final double pointEval=Math.abs(normalizedConnectingPlane.evaluate(point));
  final double perpX=normalizedConnectingPlane.y * point.z - normalizedConnectingPlane.z * point.y;
  final double perpY=normalizedConnectingPlane.z * point.x - normalizedConnectingPlane.x * point.z;
  final double perpZ=normalizedConnectingPlane.x * point.y - normalizedConnectingPlane.y * point.x;
  if (Math.abs(perpX) < Vector.MINIMUM_RESOLUTION && Math.abs(perpY) < Vector.MINIMUM_RESOLUTION && Math.abs(perpZ) < Vector.MINIMUM_RESOLUTION)   return point.normalDistance(start);
  final double normFactor=1.0 / Math.sqrt(perpX * perpX + perpY * perpY + perpZ * perpZ);
  final double perpEval=Math.abs(perpX * start.x + perpY * start.y + perpZ * start.z);
  return perpEval * normFactor + pointEval;
}
