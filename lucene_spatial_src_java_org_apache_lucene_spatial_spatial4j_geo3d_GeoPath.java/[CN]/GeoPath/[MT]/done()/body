{
  if (points.size() == 0)   throw new IllegalArgumentException("Path must have at least one point");
  if (segments.size() > 0) {
    edgePoints=new GeoPoint[]{points.get(0).circlePlane.getSampleIntersectionPoint(segments.get(0).invertedStartCutoffPlane)};
  }
  for (int i=0; i < points.size(); i++) {
    final SegmentEndpoint pathPoint=points.get(i);
    Membership previousEndBound=null;
    GeoPoint[] previousEndNotablePoints=null;
    Membership nextStartBound=null;
    GeoPoint[] nextStartNotablePoints=null;
    if (i > 0) {
      final PathSegment previousSegment=segments.get(i - 1);
      previousEndBound=previousSegment.invertedEndCutoffPlane;
      previousEndNotablePoints=previousSegment.endCutoffPlanePoints;
    }
    if (i < segments.size()) {
      final PathSegment nextSegment=segments.get(i);
      nextStartBound=nextSegment.invertedStartCutoffPlane;
      nextStartNotablePoints=nextSegment.startCutoffPlanePoints;
    }
    pathPoint.setCutoffPlanes(previousEndNotablePoints,previousEndBound,nextStartNotablePoints,nextStartBound);
  }
}
