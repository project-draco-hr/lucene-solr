{
  if (lat < -Math.PI * 0.5 || lat > Math.PI * 0.5)   throw new IllegalArgumentException("Latitude out of range");
  if (lon < -Math.PI || lon > Math.PI)   throw new IllegalArgumentException("Longitude out of range");
  final GeoPoint end=new GeoPoint(lat,lon);
  if (points.size() > 0) {
    final GeoPoint start=points.get(points.size() - 1).point;
    final PathSegment ps=new PathSegment(start,end,cutoffOffset,cutoffAngle,chordDistance);
    if (ps.isDegenerate())     return;
    segments.add(ps);
  }
 else {
    double newLat=lat + cutoffAngle;
    double newLon=lon;
    if (newLat > Math.PI * 0.5) {
      newLat=Math.PI - newLat;
      newLon+=Math.PI;
    }
    while (newLon > Math.PI) {
      newLon-=Math.PI * 2.0;
    }
    final GeoPoint edgePoint=new GeoPoint(newLat,newLon);
    this.edgePoints=new GeoPoint[]{edgePoint};
  }
  final SegmentEndpoint se=new SegmentEndpoint(end,originDistance,cutoffOffset,cutoffAngle,chordDistance);
  points.add(se);
}
