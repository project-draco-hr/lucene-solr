{
  List<FieldParams> allPhraseFields=config.getAllPhraseFields();
  if (allPhraseFields.size() > 0) {
    List<Clause> normalClauses=new ArrayList<>(clauses.size());
    for (    Clause clause : clauses) {
      if (clause.field != null || clause.isPhrase)       continue;
      if (clause.isBareWord()) {
        String s=clause.val;
        if ("OR".equals(s) || "AND".equals(s) || "NOT".equals(s)|| "TO".equals(s))         continue;
      }
      normalClauses.add(clause);
    }
    Multimap<Integer,FieldParams> phraseFieldsByWordGram=Multimaps.index(allPhraseFields,WORD_GRAM_EXTRACTOR);
    for (    Map.Entry<Integer,Collection<FieldParams>> phraseFieldsByWordGramEntry : phraseFieldsByWordGram.asMap().entrySet()) {
      Multimap<Integer,FieldParams> phraseFieldsBySlop=Multimaps.index(phraseFieldsByWordGramEntry.getValue(),PHRASE_SLOP_EXTRACTOR);
      for (      Map.Entry<Integer,Collection<FieldParams>> phraseFieldsBySlopEntry : phraseFieldsBySlop.asMap().entrySet()) {
        addShingledPhraseQueries(query,normalClauses,phraseFieldsBySlopEntry.getValue(),phraseFieldsByWordGramEntry.getKey(),config.tiebreaker,phraseFieldsBySlopEntry.getKey());
      }
    }
  }
}
