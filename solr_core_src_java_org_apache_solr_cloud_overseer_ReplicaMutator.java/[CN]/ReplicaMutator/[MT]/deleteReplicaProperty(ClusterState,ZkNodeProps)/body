{
  if (checkKeyExistence(message,ZkStateReader.COLLECTION_PROP) == false || checkKeyExistence(message,ZkStateReader.SHARD_ID_PROP) == false || checkKeyExistence(message,ZkStateReader.REPLICA_PROP) == false || checkKeyExistence(message,ZkStateReader.PROPERTY_PROP) == false) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Overseer DELETEREPLICAPROP requires " + ZkStateReader.COLLECTION_PROP + " and "+ ZkStateReader.SHARD_ID_PROP+ " and "+ ZkStateReader.REPLICA_PROP+ " and "+ ZkStateReader.PROPERTY_PROP+ " no action taken.");
  }
  String collectionName=message.getStr(ZkStateReader.COLLECTION_PROP);
  String sliceName=message.getStr(ZkStateReader.SHARD_ID_PROP);
  String replicaName=message.getStr(ZkStateReader.REPLICA_PROP);
  String property=message.getStr(ZkStateReader.PROPERTY_PROP).toLowerCase(Locale.ROOT);
  if (StringUtils.startsWith(property,COLL_PROP_PREFIX) == false) {
    property=OverseerCollectionMessageHandler.COLL_PROP_PREFIX + property;
  }
  DocCollection collection=clusterState.getCollection(collectionName);
  Replica replica=collection.getReplica(replicaName);
  if (replica == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Could not find collection/slice/replica " + collectionName + "/"+ sliceName+ "/"+ replicaName+ " no action taken.");
  }
  log.info("Deleting property " + property + " for collection: "+ collectionName+ " slice "+ sliceName+ " replica "+ replicaName+ ". Full message: "+ message);
  String curProp=replica.getStr(property);
  if (curProp == null)   return ZkStateWriter.NO_OP;
  log.info("Deleting property " + property + " for collection: "+ collectionName+ " slice "+ sliceName+ " replica "+ replicaName+ ". Full message: "+ message);
  Slice slice=collection.getSlice(sliceName);
  DocCollection newCollection=SliceMutator.updateReplica(collection,slice,replicaName,unsetProperty(replica,property));
  return new ZkWriteCommand(collectionName,newCollection);
}
