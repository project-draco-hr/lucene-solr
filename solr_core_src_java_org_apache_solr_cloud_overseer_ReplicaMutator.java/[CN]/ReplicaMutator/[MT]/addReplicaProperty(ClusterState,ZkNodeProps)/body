{
  if (checkKeyExistence(message,ZkStateReader.COLLECTION_PROP) == false || checkKeyExistence(message,ZkStateReader.SHARD_ID_PROP) == false || checkKeyExistence(message,ZkStateReader.REPLICA_PROP) == false || checkKeyExistence(message,ZkStateReader.PROPERTY_PROP) == false || checkKeyExistence(message,ZkStateReader.PROPERTY_VALUE_PROP) == false) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Overseer ADDREPLICAPROP requires " + ZkStateReader.COLLECTION_PROP + " and "+ ZkStateReader.SHARD_ID_PROP+ " and "+ ZkStateReader.REPLICA_PROP+ " and "+ ZkStateReader.PROPERTY_PROP+ " and "+ ZkStateReader.PROPERTY_VALUE_PROP+ " no action taken.");
  }
  String collectionName=message.getStr(ZkStateReader.COLLECTION_PROP);
  String sliceName=message.getStr(ZkStateReader.SHARD_ID_PROP);
  String replicaName=message.getStr(ZkStateReader.REPLICA_PROP);
  String property=message.getStr(ZkStateReader.PROPERTY_PROP).toLowerCase(Locale.ROOT);
  if (StringUtils.startsWith(property,COLL_PROP_PREFIX) == false) {
    property=OverseerCollectionMessageHandler.COLL_PROP_PREFIX + property;
  }
  property=property.toLowerCase(Locale.ROOT);
  String propVal=message.getStr(ZkStateReader.PROPERTY_VALUE_PROP);
  String shardUnique=message.getStr(OverseerCollectionMessageHandler.SHARD_UNIQUE);
  boolean isUnique=false;
  if (SliceMutator.SLICE_UNIQUE_BOOLEAN_PROPERTIES.contains(property)) {
    if (StringUtils.isNotBlank(shardUnique) && Boolean.parseBoolean(shardUnique) == false) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Overseer ADDREPLICAPROP for " + property + " cannot have "+ OverseerCollectionMessageHandler.SHARD_UNIQUE+ " set to anything other than"+ "'true'. No action taken");
    }
    isUnique=true;
  }
 else {
    isUnique=Boolean.parseBoolean(shardUnique);
  }
  Replica replica=clusterState.getReplica(collectionName,replicaName);
  if (replica == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Could not find collection/slice/replica " + collectionName + "/"+ sliceName+ "/"+ replicaName+ " no action taken.");
  }
  log.info("Setting property " + property + " with value: "+ propVal+ " for collection: "+ collectionName+ ". Full message: "+ message);
  if (StringUtils.equalsIgnoreCase(replica.getStr(property),propVal))   return ZkStateWriter.NO_OP;
  Map<String,Replica> replicas=clusterState.getSlice(collectionName,sliceName).getReplicasCopy();
  if (isUnique == false) {
    replicas.get(replicaName).getProperties().put(property,propVal);
  }
 else {
    for (    Replica rep : replicas.values()) {
      if (rep.getName().equalsIgnoreCase(replicaName)) {
        rep.getProperties().put(property,propVal);
      }
 else {
        rep.getProperties().remove(property);
      }
    }
  }
  Slice newSlice=new Slice(sliceName,replicas,clusterState.getSlice(collectionName,sliceName).shallowCopy());
  DocCollection newCollection=CollectionMutator.updateSlice(collectionName,clusterState.getCollection(collectionName),newSlice);
  return new ZkWriteCommand(collectionName,newCollection);
}
