{
  setupGeo();
  adoc("999",(Shape)null);
  commit();
  BBoxStrategy bboxStrategy=(BBoxStrategy)strategy;
  checkValueSource(bboxStrategy.makeOverlapRatioValueSource(randomRectangle(),0.0),new float[]{0f},0f);
  for (int SHIFT=0; SHIFT < 360; SHIFT+=10) {
    Rectangle queryBox=shiftedRect(0,40,-20,20,SHIFT);
    final boolean MSL=random().nextBoolean();
    final double minSideLength=MSL ? 0.1 : 0.0;
    BBoxOverlapRatioValueSource sim=new BBoxOverlapRatioValueSource(null,true,queryBox,0.5,minSideLength);
    int nudge=SHIFT == 0 ? 0 : random().nextInt(3) * 10 - 10;
    final double EPS=0.0000001;
    assertEquals("within",(200d / 1600d * 0.5) + (0.5),sim.score(shiftedRect(10,30,0,10,SHIFT + nudge),null),EPS);
    assertEquals("in25%",0.25,sim.score(shiftedRect(30,70,-20,20,SHIFT),null),EPS);
    assertEquals("wrap",0.2794117,sim.score(shiftedRect(30,10,-20,20,SHIFT + nudge),null),EPS);
    assertEquals("no intersection H",0.0,sim.score(shiftedRect(-10,-10,-20,20,SHIFT),null),EPS);
    assertEquals("no intersection V",0.0,sim.score(shiftedRect(0,20,-30,-30,SHIFT),null),EPS);
    assertEquals("point",0.5 + (MSL ? (0.1 * 0.1 / 1600.0 / 2.0) : 0),sim.score(shiftedRect(0,0,0,0,SHIFT),null),EPS);
    assertEquals("line 25% intersection",0.25 / 2 + (MSL ? (10.0 * 0.1 / 1600.0 / 2.0) : 0.0),sim.score(shiftedRect(-30,10,0,0,SHIFT),null),EPS);
    sim=new BBoxOverlapRatioValueSource(null,true,shiftedRect(0,0,0,0,SHIFT),0.5,minSideLength);
    assertEquals("same",1.0,sim.score(shiftedRect(0,0,0,0,SHIFT),null),EPS);
    assertEquals("contains",0.5 + (MSL ? (0.1 * 0.1 / (30 * 10) / 2.0) : 0.0),sim.score(shiftedRect(0,30,0,10,SHIFT),null),EPS);
    sim=new BBoxOverlapRatioValueSource(null,true,shiftedRect(0,0,20,40,SHIFT),0.5,minSideLength);
    assertEquals("line 50%",0.5,sim.score(shiftedRect(0,0,10,30,SHIFT),null),EPS);
    assertEquals("point",0.5 + (MSL ? (0.1 * 0.1 / (20 * 0.1) / 2.0) : 0.0),sim.score(shiftedRect(0,0,30,30,SHIFT),null),EPS);
  }
}
