{
  final Facets facets=new Facets(level);
  PrefixTreeFacetCounter.compute(this,context,filter,facetRange,level,new PrefixTreeFacetCounter.FacetVisitor(){
    Facets.FacetParentVal parentFacet;
    UnitNRShape parentShape;
    @Override public void visit(    Cell cell,    int count){
      if (cell.getLevel() < level - 1) {
        parentFacet=null;
        parentShape=null;
        facets.topLeaves+=count;
      }
 else       if (cell.getLevel() == level - 1) {
        setupParent((UnitNRShape)cell.getShape());
        parentFacet.parentLeaves+=count;
      }
 else {
        UnitNRShape unitShape=(UnitNRShape)cell.getShape();
        UnitNRShape unitShapeParent=unitShape.getShapeAtLevel(unitShape.getLevel() - 1);
        if (parentFacet == null || !parentShape.equals(unitShapeParent)) {
          setupParent(unitShapeParent);
        }
        if (parentFacet.childCounts == null) {
          parentFacet.childCounts=new int[parentFacet.childCountsLen];
        }
        parentFacet.childCounts[unitShape.getValAtLevel(cell.getLevel())]+=count;
      }
    }
    private void setupParent(    UnitNRShape unitShape){
      parentShape=unitShape.clone();
      parentFacet=facets.parents.get(parentShape);
      if (parentFacet == null) {
        parentFacet=new Facets.FacetParentVal();
        parentFacet.childCountsLen=getGrid().getNumSubCells(parentShape);
        facets.parents.put(parentShape,parentFacet);
      }
    }
  }
);
  return facets;
}
