{
  final Writer output=openOutput(schemaVersion,"sparse_sparse",TestType.UNION);
  final Random random=new Random(randomLong());
  final HLL hll=newHLL(HLLType.EMPTY);
  final HLL emptyHLL=newHLL(HLLType.EMPTY);
  cumulativeUnionLine(output,hll,emptyHLL,schemaVersion);
  for (int i=0; i < SPARSE_THRESHOLD; i++) {
    final HLL sparseHLL=newHLL(HLLType.SPARSE);
    final int registerIndex=Math.abs(random.nextInt()) % REGISTER_COUNT;
    final int registerValue=((Math.abs(random.nextInt()) % REGISTER_MAX_VALUE) + 1);
    final long rawValue=constructHLLValue(LOG2M,registerIndex,registerValue);
    sparseHLL.addRaw(rawValue);
    cumulativeUnionLine(output,hll,sparseHLL,schemaVersion);
  }
  output.flush();
  output.close();
}
