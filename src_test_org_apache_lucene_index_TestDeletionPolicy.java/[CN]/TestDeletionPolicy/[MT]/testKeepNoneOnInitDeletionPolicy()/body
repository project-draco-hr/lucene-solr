{
  for (int pass=0; pass < 4; pass++) {
    boolean autoCommit=pass < 2;
    boolean useCompoundFile=(pass % 2) > 0;
    KeepNoneOnInitDeletionPolicy policy=new KeepNoneOnInitDeletionPolicy();
    Directory dir=new RAMDirectory();
    IndexWriter writer=new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,policy,IndexWriter.MaxFieldLength.LIMITED);
    writer.setMaxBufferedDocs(10);
    writer.setUseCompoundFile(useCompoundFile);
    for (int i=0; i < 107; i++) {
      addDoc(writer);
    }
    writer.close();
    writer=new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),false,policy,IndexWriter.MaxFieldLength.LIMITED);
    writer.setUseCompoundFile(useCompoundFile);
    writer.optimize();
    writer.close();
    assertEquals(2,policy.numOnInit);
    if (!autoCommit)     assertEquals(2,policy.numOnCommit);
    IndexReader reader=IndexReader.open(dir);
    reader.close();
    dir.close();
  }
}
