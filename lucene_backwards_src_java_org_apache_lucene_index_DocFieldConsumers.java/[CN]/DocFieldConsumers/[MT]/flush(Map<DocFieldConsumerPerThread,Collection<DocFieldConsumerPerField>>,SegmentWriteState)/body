{
  Map<DocFieldConsumerPerThread,Collection<DocFieldConsumerPerField>> oneThreadsAndFields=new HashMap<DocFieldConsumerPerThread,Collection<DocFieldConsumerPerField>>();
  Map<DocFieldConsumerPerThread,Collection<DocFieldConsumerPerField>> twoThreadsAndFields=new HashMap<DocFieldConsumerPerThread,Collection<DocFieldConsumerPerField>>();
  for (  Map.Entry<DocFieldConsumerPerThread,Collection<DocFieldConsumerPerField>> entry : threadsAndFields.entrySet()) {
    final DocFieldConsumersPerThread perThread=(DocFieldConsumersPerThread)entry.getKey();
    final Collection<DocFieldConsumerPerField> fields=entry.getValue();
    Iterator<DocFieldConsumerPerField> fieldsIt=fields.iterator();
    Collection<DocFieldConsumerPerField> oneFields=new HashSet<DocFieldConsumerPerField>();
    Collection<DocFieldConsumerPerField> twoFields=new HashSet<DocFieldConsumerPerField>();
    while (fieldsIt.hasNext()) {
      DocFieldConsumersPerField perField=(DocFieldConsumersPerField)fieldsIt.next();
      oneFields.add(perField.one);
      twoFields.add(perField.two);
    }
    oneThreadsAndFields.put(perThread.one,oneFields);
    twoThreadsAndFields.put(perThread.two,twoFields);
  }
  one.flush(oneThreadsAndFields,state);
  two.flush(twoThreadsAndFields,state);
}
