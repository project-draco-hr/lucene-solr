{
  Path backupPath=Paths.get(backupLocation).resolve(backupName);
  SimpleDateFormat dateFormat=new SimpleDateFormat(SnapShooter.DATE_FMT,Locale.ROOT);
  String restoreIndexName="restore." + dateFormat.format(new Date());
  String restoreIndexPath=core.getDataDir() + restoreIndexName;
  Directory restoreIndexDir=null;
  Directory indexDir=null;
  try (Directory backupDir=FSDirectory.open(backupPath)){
    restoreIndexDir=core.getDirectoryFactory().get(restoreIndexPath,DirectoryFactory.DirContext.DEFAULT,core.getSolrConfig().indexConfig.lockType);
    indexDir=core.getDirectoryFactory().get(core.getIndexDir(),DirectoryFactory.DirContext.DEFAULT,core.getSolrConfig().indexConfig.lockType);
    for (    String filename : backupDir.listAll()) {
      checkInterrupted();
      log.info("Copying file {} to restore directory ",filename);
      try (IndexInput indexInput=backupDir.openInput(filename,IOContext.READONCE)){
        Long checksum=null;
        try {
          checksum=CodecUtil.retrieveChecksum(indexInput);
        }
 catch (        Exception e) {
          log.warn("Could not read checksum from index file: " + filename,e);
        }
        long length=indexInput.length();
        IndexFetcher.CompareResult compareResult=IndexFetcher.compareFile(indexDir,filename,length,checksum);
        if (!compareResult.equal || (IndexFetcher.filesToAlwaysDownloadIfNoChecksums(filename,length,compareResult))) {
          restoreIndexDir.copyFrom(backupDir,filename,filename,IOContext.READONCE);
        }
 else {
          restoreIndexDir.copyFrom(indexDir,filename,filename,IOContext.READONCE);
        }
      }
 catch (      Exception e) {
        throw new SolrException(SolrException.ErrorCode.UNKNOWN,"Exception while restoring the backup index",e);
      }
    }
    log.debug("Switching directories");
    IndexFetcher.modifyIndexProps(core,restoreIndexName);
    boolean success;
    try {
      core.getUpdateHandler().newIndexWriter(false);
      openNewSearcher();
      success=true;
      log.info("Successfully restored to the backup index");
    }
 catch (    Exception e) {
      log.warn("Could not switch to restored index. Rolling back to the current index");
      Directory dir=null;
      try {
        dir=core.getDirectoryFactory().get(core.getDataDir(),DirectoryFactory.DirContext.META_DATA,core.getSolrConfig().indexConfig.lockType);
        dir.deleteFile(IndexFetcher.INDEX_PROPERTIES);
      }
  finally {
        if (dir != null) {
          core.getDirectoryFactory().release(dir);
        }
      }
      core.getDirectoryFactory().doneWithDirectory(restoreIndexDir);
      core.getDirectoryFactory().remove(restoreIndexDir);
      core.getUpdateHandler().newIndexWriter(false);
      openNewSearcher();
      throw new SolrException(SolrException.ErrorCode.UNKNOWN,"Exception while restoring the backup index",e);
    }
    if (success) {
      core.getDirectoryFactory().doneWithDirectory(indexDir);
      core.getDirectoryFactory().remove(indexDir);
    }
    return true;
  }
  finally {
    if (restoreIndexDir != null) {
      core.getDirectoryFactory().release(restoreIndexDir);
    }
    if (indexDir != null) {
      core.getDirectoryFactory().release(indexDir);
    }
  }
}
