{
  SolrParams params=params("q","*:*","rows","0","facet","true","stats","true","facet.pivot","{!range=s1 query=s2 stats=s3}place_t,company_t","facet.range","{!tag=s1 key=price}price_ti","facet.query","{!tag=s2 key=highPrice}price_ti:[25 TO 100]","facet.query","{!tag=s2 key=lowPrice}price_ti:[0 TO 20]","stats.field",("{!tag=s3 key=avg_price}price_ti"),"facet.range.start","0","facet.range.end","100","facet.range.gap","20",FacetParams.FACET_SORT,FacetParams.FACET_SORT_COUNT,FacetParams.FACET_LIMIT,"2");
  UnorderedEqualityArrayList<PivotField> expectedPlacePivots=new UnorderedEqualityArrayList<>();
  UnorderedEqualityArrayList<PivotField> expectedDublinPivots=new UnorderedEqualityArrayList<>();
  expectedDublinPivots.add(new ComparablePivotField("company_t","polecat",4,null,createExpectedQCount(new String[]{"highPrice","lowPrice"},new int[]{1,2}),createExpectedRange("price",0,100,20,2,1,0,0,0)));
  expectedDublinPivots.add(new ComparablePivotField("company_t","microsoft",4,null,createExpectedQCount(new String[]{"highPrice","lowPrice"},new int[]{1,2}),createExpectedRange("price",0,100,20,2,1,0,0,0)));
  UnorderedEqualityArrayList<PivotField> expectedLondonPivots=new UnorderedEqualityArrayList<>();
  expectedLondonPivots.add(new ComparablePivotField("company_t","null",3,null,createExpectedQCount(new String[]{"highPrice","lowPrice"},new int[]{2,0}),createExpectedRange("price",0,100,20,0,2,0,0,0)));
  expectedLondonPivots.add(new ComparablePivotField("company_t","polecat",3,null,createExpectedQCount(new String[]{"highPrice","lowPrice"},new int[]{2,0}),createExpectedRange("price",0,100,20,0,2,0,0,0)));
  expectedPlacePivots.add(new ComparablePivotField("place_t","dublin",4,expectedDublinPivots,createExpectedQCount(new String[]{"highPrice","lowPrice"},new int[]{1,2}),createExpectedRange("price",0,100,20,2,1,0,0,0)));
  expectedPlacePivots.add(new ComparablePivotField("place_t","london",4,expectedLondonPivots,createExpectedQCount(new String[]{"highPrice","lowPrice"},new int[]{3,0}),createExpectedRange("price",0,100,20,0,3,0,0,0)));
  QueryResponse rsp=query(params);
  List<PivotField> placePivots=rsp.getFacetPivot().get("place_t,company_t");
  assertEquals(expectedPlacePivots,placePivots);
  PivotField dublinPivotField=placePivots.get(0);
  assertEquals("dublin",dublinPivotField.getValue());
  assertEquals(4,dublinPivotField.getCount());
  PivotField microsoftPivotField=dublinPivotField.getPivot().get(0);
  assertEquals("microsoft",microsoftPivotField.getValue());
  assertEquals(4,microsoftPivotField.getCount());
  FieldStatsInfo dublinMicrosoftStatsInfo=microsoftPivotField.getFieldStatsInfo().get("avg_price");
  assertEquals(21.0,(double)dublinMicrosoftStatsInfo.getMean(),0.1E-7);
  assertEquals(15.0,dublinMicrosoftStatsInfo.getMin());
  assertEquals(29.0,dublinMicrosoftStatsInfo.getMax());
  assertEquals(3,(long)dublinMicrosoftStatsInfo.getCount());
  assertEquals(1,(long)dublinMicrosoftStatsInfo.getMissing());
  assertEquals(63.0,dublinMicrosoftStatsInfo.getSum());
  assertEquals(1427.0,dublinMicrosoftStatsInfo.getSumOfSquares(),0.1E-7);
  assertEquals(7.211102550927978,dublinMicrosoftStatsInfo.getStddev(),0.1E-7);
}
