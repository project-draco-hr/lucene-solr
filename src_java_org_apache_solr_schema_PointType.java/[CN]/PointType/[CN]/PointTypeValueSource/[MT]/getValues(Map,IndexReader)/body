{
  final DocValues[] valsArr1=new DocValues[dimension];
  String name=field.getName();
  String suffix=FieldType.POLY_FIELD_SEPARATOR + subType.typeName;
  int len=name.length();
  StringBuilder bldr=new StringBuilder(len + 3 + suffix.length());
  bldr.append(name);
  for (int i=0; i < dimension; i++) {
    bldr.append(i).append(suffix);
    SchemaField sf=schema.getField(bldr.toString());
    valsArr1[i]=subType.getValueSource(sf,parser).getValues(context,reader);
    bldr.setLength(len);
  }
  return new DocValues(){
    @Override public void doubleVal(    int doc,    double[] vals){
      for (int i=0; i < dimension; i++) {
        vals[i]=valsArr1[i].doubleVal(doc);
      }
    }
    @Override public String toString(    int doc){
      StringBuilder sb=new StringBuilder("point(");
      boolean firstTime=true;
      for (      DocValues docValues : valsArr1) {
        if (firstTime == false) {
          sb.append(",");
        }
 else {
          firstTime=true;
        }
        sb.append(docValues.toString(doc));
      }
      sb.append(")");
      return sb.toString();
    }
  }
;
}
