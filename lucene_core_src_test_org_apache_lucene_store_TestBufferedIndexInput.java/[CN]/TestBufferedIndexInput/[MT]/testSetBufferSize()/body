{
  File indexDir=createTempDir("testSetBufferSize");
  MockFSDirectory dir=new MockFSDirectory(indexDir,random());
  try {
    IndexWriter writer=new IndexWriter(dir,new IndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setMergePolicy(newLogMergePolicy(false)));
    for (int i=0; i < 37; i++) {
      Document doc=new Document();
      doc.add(newTextField("content","aaa bbb ccc ddd" + i,Field.Store.YES));
      doc.add(newTextField("id","" + i,Field.Store.YES));
      writer.addDocument(doc);
    }
    dir.allIndexInputs.clear();
    IndexReader reader=DirectoryReader.open(writer,true);
    Term aaa=new Term("content","aaa");
    Term bbb=new Term("content","bbb");
    reader.close();
    dir.tweakBufferSizes();
    writer.deleteDocuments(new Term("id","0"));
    reader=DirectoryReader.open(writer,true);
    IndexSearcher searcher=newSearcher(reader);
    ScoreDoc[] hits=searcher.search(new TermQuery(bbb),null,1000).scoreDocs;
    dir.tweakBufferSizes();
    assertEquals(36,hits.length);
    reader.close();
    dir.tweakBufferSizes();
    writer.deleteDocuments(new Term("id","4"));
    reader=DirectoryReader.open(writer,true);
    searcher=newSearcher(reader);
    hits=searcher.search(new TermQuery(bbb),null,1000).scoreDocs;
    dir.tweakBufferSizes();
    assertEquals(35,hits.length);
    dir.tweakBufferSizes();
    hits=searcher.search(new TermQuery(new Term("id","33")),null,1000).scoreDocs;
    dir.tweakBufferSizes();
    assertEquals(1,hits.length);
    hits=searcher.search(new TermQuery(aaa),null,1000).scoreDocs;
    dir.tweakBufferSizes();
    assertEquals(35,hits.length);
    writer.close();
    reader.close();
  }
  finally {
    IOUtils.rm(indexDir);
  }
}
