{
  this.startDocIn=BlockPackedPostingsReader.this.docIn;
  this.docIn=(IndexInput)startDocIn.clone();
  this.posIn=(IndexInput)BlockPackedPostingsReader.this.posIn.clone();
  this.payIn=(IndexInput)BlockPackedPostingsReader.this.payIn.clone();
  encoded=new byte[blockSize * 4];
  encodedBuffer=ByteBuffer.wrap(encoded).asLongBuffer();
  indexHasOffsets=fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
  if (indexHasOffsets) {
    offsetStartDeltaBuffer=new long[blockSize];
    offsetLengthBuffer=new long[blockSize];
    offsetStartDeltaLBuffer=LongBuffer.wrap(offsetStartDeltaBuffer);
    offsetLengthLBuffer=LongBuffer.wrap(offsetLengthBuffer);
  }
 else {
    offsetStartDeltaBuffer=null;
    offsetStartDeltaLBuffer=null;
    offsetLengthBuffer=null;
    offsetLengthLBuffer=null;
    startOffset=-1;
    endOffset=-1;
  }
  indexHasPayloads=fieldInfo.hasPayloads();
  if (indexHasPayloads) {
    payloadLengthBuffer=new long[blockSize];
    payloadLengthLBuffer=LongBuffer.wrap(payloadLengthBuffer);
    payloadBytes=new byte[128];
    payload=new BytesRef();
  }
 else {
    payloadLengthBuffer=null;
    payloadLengthLBuffer=null;
    payloadBytes=null;
    payload=null;
  }
}
