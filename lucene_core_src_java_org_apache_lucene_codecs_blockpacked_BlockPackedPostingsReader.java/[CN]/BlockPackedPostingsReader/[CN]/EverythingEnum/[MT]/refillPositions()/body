{
  if (DEBUG) {
    System.out.println("      refillPositions");
  }
  if (posIn.getFilePointer() == lastPosBlockFP) {
    if (DEBUG) {
      System.out.println("        vInt pos block @ fp=" + posIn.getFilePointer() + " hasPayloads="+ indexHasPayloads+ " hasOffsets="+ indexHasOffsets);
    }
    final int count=posIn.readVInt();
    int payloadLength=0;
    payloadByteUpto=0;
    for (int i=0; i < count; i++) {
      int code=posIn.readVInt();
      if (indexHasPayloads) {
        if ((code & 1) != 0) {
          payloadLength=posIn.readVInt();
        }
        if (DEBUG) {
          System.out.println("        i=" + i + " payloadLen="+ payloadLength);
        }
        payloadLengthBuffer[i]=payloadLength;
        posDeltaBuffer[i]=code >>> 1;
        if (payloadLength != 0) {
          if (payloadByteUpto + payloadLength > payloadBytes.length) {
            payloadBytes=ArrayUtil.grow(payloadBytes,payloadByteUpto + payloadLength);
          }
          posIn.readBytes(payloadBytes,payloadByteUpto,payloadLength);
          payloadByteUpto+=payloadLength;
        }
      }
 else {
        posDeltaBuffer[i]=code;
      }
      if (indexHasOffsets) {
        if (DEBUG) {
          System.out.println("        i=" + i + " read offsets from posIn.fp="+ posIn.getFilePointer());
        }
        offsetStartDeltaBuffer[i]=posIn.readVInt();
        offsetLengthBuffer[i]=posIn.readVInt();
        if (DEBUG) {
          System.out.println("          startOffDelta=" + offsetStartDeltaBuffer[i] + " offsetLen="+ offsetLengthBuffer[i]);
        }
      }
    }
    payloadByteUpto=0;
  }
 else {
    if (DEBUG) {
      System.out.println("        bulk pos block @ fp=" + posIn.getFilePointer());
    }
    ForUtil.readBlock(posIn,encoded,posDeltaBuffer);
    if (indexHasPayloads) {
      if (DEBUG) {
        System.out.println("        bulk payload block @ pay.fp=" + payIn.getFilePointer());
      }
      ForUtil.readBlock(payIn,encoded,payloadLengthBuffer);
      int numBytes=payIn.readVInt();
      if (DEBUG) {
        System.out.println("        " + numBytes + " payload bytes @ pay.fp="+ payIn.getFilePointer());
      }
      if (numBytes > payloadBytes.length) {
        payloadBytes=ArrayUtil.grow(payloadBytes,numBytes);
      }
      payIn.readBytes(payloadBytes,0,numBytes);
      payloadByteUpto=0;
    }
    if (indexHasOffsets) {
      if (DEBUG) {
        System.out.println("        bulk offset block @ pay.fp=" + payIn.getFilePointer());
      }
      ForUtil.readBlock(payIn,encoded,offsetStartDeltaBuffer);
      ForUtil.readBlock(payIn,encoded,offsetLengthBuffer);
    }
  }
}
