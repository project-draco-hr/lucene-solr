{
  checkNullField(field);
  if ("*".equals(termStr)) {
    if ("*".equals(field) || getExplicitField() == null) {
      return newMatchAllDocsQuery();
    }
  }
  FieldType fieldType=schema.getFieldType(field);
  termStr=analyzeIfMultitermTermText(field,termStr,fieldType);
  ReversedWildcardFilterFactory factory=getReversedWildcardFilterFactory(fieldType);
  if (factory != null) {
    Term term=new Term(field,termStr);
    Automaton automaton=WildcardQuery.toAutomaton(term);
    if (factory.shouldReverse(termStr)) {
      automaton=BasicOperations.concatenate(automaton,BasicAutomata.makeChar(factory.getMarkerChar()));
      SpecialOperations.reverse(automaton);
    }
 else {
      Automaton falsePositives=BasicOperations.concatenate(BasicAutomata.makeChar(factory.getMarkerChar()),BasicAutomata.makeAnyString());
      automaton=BasicOperations.minus(automaton,falsePositives);
    }
    return new AutomatonQuery(term,automaton){
      @Override public String toString(      String field){
        StringBuilder buffer=new StringBuilder();
        if (!getField().equals(field)) {
          buffer.append(getField());
          buffer.append(":");
        }
        buffer.append(term.text());
        buffer.append(ToStringUtils.boost(getBoost()));
        return buffer.toString();
      }
    }
;
  }
  return newWildcardQuery(new Term(field,termStr));
}
