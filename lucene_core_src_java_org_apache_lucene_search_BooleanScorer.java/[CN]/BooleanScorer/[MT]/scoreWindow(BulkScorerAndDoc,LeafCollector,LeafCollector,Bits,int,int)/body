{
  final int windowBase=top.next & ~MASK;
  final int windowMin=Math.max(min,windowBase);
  final int windowMax=Math.min(max,windowBase + SIZE);
  leads[0]=head.pop();
  int maxFreq=1;
  while (head.size() > 0 && head.top().next < windowMax) {
    leads[maxFreq++]=head.pop();
  }
  if (minShouldMatch == 1 && maxFreq == 1) {
    final BulkScorerAndDoc bulkScorer=leads[0];
    scoreWindowSingleScorer(bulkScorer,collector,singleClauseCollector,acceptDocs,windowMin,windowMax,max);
    return head.add(bulkScorer);
  }
 else {
    scoreWindowMultipleScorers(collector,acceptDocs,windowBase,windowMin,windowMax,maxFreq);
    return head.top();
  }
}
