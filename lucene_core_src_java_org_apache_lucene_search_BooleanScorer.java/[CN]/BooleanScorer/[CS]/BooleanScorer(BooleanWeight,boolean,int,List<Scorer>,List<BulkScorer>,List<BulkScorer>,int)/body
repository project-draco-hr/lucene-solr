{
  this.minNrShouldMatch=minNrShouldMatch;
  this.weight=weight;
  this.requiredNrMatchers=requiredScorers.size();
  if (this.requiredNrMatchers > 0) {
    BulkScorer requiredScorer=new Weight.DefaultBulkScorer(new ConjunctionScorer(this.weight,requiredScorers.toArray(new Scorer[requiredScorers.size()])));
    scorers=new SubScorer(requiredScorer,true,false,bucketTable.newCollector(REQUIRED_MASK),scorers);
  }
  for (  BulkScorer scorer : optionalScorers) {
    scorers=new SubScorer(scorer,false,false,bucketTable.newCollector(0),scorers);
  }
  for (  BulkScorer scorer : prohibitedScorers) {
    scorers=new SubScorer(scorer,false,true,bucketTable.newCollector(PROHIBITED_MASK),scorers);
  }
  coordFactors=new float[requiredScorers.size() + optionalScorers.size() + 1];
  for (int i=0; i < coordFactors.length; i++) {
    coordFactors[i]=disableCoord ? 1.0f : weight.coord(i,maxCoord);
  }
}
