{
  System.setProperty("CLOUD_UPDATE_DELAY","1");
  String zkDir=dataDir.getAbsolutePath() + File.separator + "zookeeper/server1/data";
  ZkTestServer server=null;
  SolrZkClient zkClient=null;
  ZkController zkController=null;
  server=new ZkTestServer(zkDir);
  server.run();
  try {
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    zkClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    String shardsPath1="/collections/collection1/shards/shardid1";
    String shardsPath2="/collections/collection1/shards/shardid2";
    zkClient.makePath(shardsPath1);
    zkClient.makePath(shardsPath2);
    addShardToZk(zkClient,shardsPath1,SHARD1,URL1);
    addShardToZk(zkClient,shardsPath1,SHARD2,URL2);
    addShardToZk(zkClient,shardsPath2,SHARD3,URL3);
    removeShardFromZk(server.getZkAddress(),zkClient,shardsPath1);
    zkController=new ZkController(server.getZkAddress(),TIMEOUT,1000,"localhost","8983","solr");
    zkController.getZkStateReader().updateCloudState(true);
    CloudState cloudInfo=zkController.getCloudState();
    Map<String,Slice> slices=cloudInfo.getSlices("collection1");
    assertFalse(slices.containsKey("shardid1"));
    zkClient.makePath(shardsPath1);
    addShardToZk(zkClient,shardsPath1,SHARD1,URL1);
    zkController.getZkStateReader().updateCloudState(true);
    cloudInfo=zkController.getCloudState();
    slices=cloudInfo.getSlices("collection1");
    assertTrue(slices.containsKey("shardid1"));
    updateUrl(zkClient,shardsPath1,SHARD1,"fake");
    addShardToZk(zkClient,shardsPath2,SHARD4,URL4);
    zkController.getZkStateReader().updateCloudState(true);
    cloudInfo=zkController.getCloudState();
    String url=cloudInfo.getSlices("collection1").get("shardid1").getShards().get(SHARD1).get("url");
    assertEquals(URL1,url);
  }
  finally {
    server.shutdown();
    zkClient.close();
    zkController.close();
  }
}
