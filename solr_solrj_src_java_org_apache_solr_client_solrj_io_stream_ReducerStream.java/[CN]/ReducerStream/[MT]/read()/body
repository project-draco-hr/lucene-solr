{
  while (true) {
    Tuple t=stream.read();
    if (t.EOF) {
      if (needsReduce) {
        stream.pushBack(t);
        needsReduce=false;
        return op.reduce();
      }
 else {
        return t;
      }
    }
    if (currentGroupHead == null) {
      currentGroupHead=t;
      op.operate(t);
      needsReduce=true;
    }
 else {
      if (eq.test(currentGroupHead,t)) {
        op.operate(t);
        needsReduce=true;
      }
 else {
        stream.pushBack(t);
        currentGroupHead=null;
        needsReduce=false;
        return op.reduce();
      }
    }
  }
}
