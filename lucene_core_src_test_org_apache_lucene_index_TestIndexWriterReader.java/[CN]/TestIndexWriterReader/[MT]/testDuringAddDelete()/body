{
  Directory dir1=newDirectory();
  final IndexWriter writer=new IndexWriter(dir1,newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(2)));
  createIndexNoClose(false,"test",writer);
  writer.commit();
  DirectoryReader r=writer.getReader();
  final int iters=TEST_NIGHTLY ? 1000 : 10;
  final List<Throwable> excs=Collections.synchronizedList(new ArrayList<Throwable>());
  final Thread[] threads=new Thread[numThreads];
  final AtomicInteger remainingThreads=new AtomicInteger(numThreads);
  for (int i=0; i < numThreads; i++) {
    threads[i]=new Thread(){
      final Random r=new Random(random().nextLong());
      @Override public void run(){
        int count=0;
        do {
          try {
            for (int docUpto=0; docUpto < 10; docUpto++) {
              writer.addDocument(DocHelper.createDocument(10 * count + docUpto,"test",4));
            }
            count++;
            final int limit=count * 10;
            for (int delUpto=0; delUpto < 5; delUpto++) {
              int x=r.nextInt(limit);
              writer.deleteDocuments(new Term("field3","b" + x));
            }
          }
 catch (          Throwable t) {
            excs.add(t);
            throw new RuntimeException(t);
          }
        }
 while (count < iters);
        remainingThreads.decrementAndGet();
      }
    }
;
    threads[i].setDaemon(true);
    threads[i].start();
  }
  int sum=0;
  while (remainingThreads.get() > 0) {
    DirectoryReader r2=DirectoryReader.openIfChanged(r);
    if (r2 != null) {
      r.close();
      r=r2;
      Query q=new TermQuery(new Term("indexname","test"));
      IndexSearcher searcher=newSearcher(r);
      sum+=searcher.search(q,10).totalHits;
    }
  }
  for (int i=0; i < numThreads; i++) {
    threads[i].join();
  }
  DirectoryReader r2=DirectoryReader.openIfChanged(r);
  if (r2 != null) {
    r.close();
    r=r2;
  }
  Query q=new TermQuery(new Term("indexname","test"));
  IndexSearcher searcher=newSearcher(r);
  sum+=searcher.search(q,10).totalHits;
  assertTrue("no documents found at all",sum > 0);
  assertEquals(0,excs.size());
  writer.close();
  r.close();
  dir1.close();
}
