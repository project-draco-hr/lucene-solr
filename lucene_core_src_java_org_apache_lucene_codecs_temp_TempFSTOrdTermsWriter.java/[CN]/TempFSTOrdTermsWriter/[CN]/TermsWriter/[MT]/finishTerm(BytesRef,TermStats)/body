{
  if (numTerms > 0 && numTerms % SKIP_INTERVAL == 0) {
    bufferSkip();
  }
  final long longs[]=new long[longsSize];
  final long delta=stats.totalTermFreq - stats.docFreq;
  if (stats.totalTermFreq > 0) {
    if (delta == 0) {
      statsOut.writeVInt(stats.docFreq << 1 | 1);
    }
 else {
      statsOut.writeVInt(stats.docFreq << 1 | 0);
      statsOut.writeVLong(stats.totalTermFreq - stats.docFreq);
    }
  }
 else {
    statsOut.writeVInt(stats.docFreq);
  }
  BlockTermState state=postingsWriter.newTermState();
  state.docFreq=stats.docFreq;
  state.totalTermFreq=stats.totalTermFreq;
  postingsWriter.finishTerm(state);
  postingsWriter.encodeTerm(longs,metaBytesOut,fieldInfo,state,false);
  for (int i=0; i < longsSize; i++) {
    metaLongsOut.writeVLong(longs[i]);
    lastLongs[i]+=longs[i];
  }
  metaLongsOut.writeVLong(metaBytesOut.getFilePointer() - lastMetaBytesFP);
  builder.add(Util.toIntsRef(text,scratchTerm),numTerms);
  numTerms++;
  lastMetaBytesFP=metaBytesOut.getFilePointer();
}
