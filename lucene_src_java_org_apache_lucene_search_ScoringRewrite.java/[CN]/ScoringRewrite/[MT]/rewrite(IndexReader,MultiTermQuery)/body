{
  final Q result=getTopLevelQuery();
  final ParallelArraysTermCollector col=new ParallelArraysTermCollector();
  collectTerms(reader,query,col);
  final int size=col.terms.size();
  if (size > 0) {
    final int sort[]=col.terms.sort(col.termsEnum.getComparator());
    final float[] boost=col.array.boost;
    final TermContext[] termStates=col.array.termState;
    for (int i=0; i < size; i++) {
      final int pos=sort[i];
      final Term term=new Term(query.getField(),col.terms.get(pos,new BytesRef()));
      addClause(result,term,termStates[pos].docFreq(),query.getBoost() * boost[pos],termStates[pos]);
    }
  }
  return result;
}
