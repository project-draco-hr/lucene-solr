{
  NamedList<Object> fieldNL=new NamedList<Object>();
  docNL.add(field,fieldNL);
  BytesRef text;
  DocsAndPositionsEnum dpEnum=null;
  while ((text=termsEnum.next()) != null) {
    String term=text.utf8ToString();
    NamedList<Object> termInfo=new NamedList<Object>();
    fieldNL.add(term,termInfo);
    final int freq=(int)termsEnum.totalTermFreq();
    if (fieldOptions.termFreq == true) {
      termInfo.add("tf",freq);
    }
    dpEnum=termsEnum.docsAndPositions(null,dpEnum);
    boolean useOffsets=false;
    boolean usePositions=false;
    if (dpEnum != null) {
      dpEnum.nextDoc();
      usePositions=fieldOptions.positions;
      useOffsets=fieldOptions.offsets;
    }
    NamedList<Integer> positionsNL=null;
    NamedList<Number> theOffsets=null;
    if (usePositions || useOffsets) {
      for (int i=0; i < freq; i++) {
        final int pos=dpEnum.nextPosition();
        if (usePositions && pos >= 0) {
          if (positionsNL == null) {
            positionsNL=new NamedList<Integer>();
            termInfo.add("positions",positionsNL);
          }
          positionsNL.add("position",pos);
        }
        if (useOffsets && theOffsets == null) {
          if (dpEnum.startOffset() == -1) {
            useOffsets=false;
          }
 else {
            theOffsets=new NamedList<Number>();
            termInfo.add("offsets",theOffsets);
          }
        }
        if (theOffsets != null) {
          theOffsets.add("start",dpEnum.startOffset());
          theOffsets.add("end",dpEnum.endOffset());
        }
      }
    }
    if (fieldOptions.docFreq) {
      termInfo.add("df",getDocFreq(reader,field,text));
    }
    if (fieldOptions.tfIdf) {
      double tfIdfVal=((double)freq) / getDocFreq(reader,field,text);
      termInfo.add("tf-idf",tfIdfVal);
    }
  }
}
