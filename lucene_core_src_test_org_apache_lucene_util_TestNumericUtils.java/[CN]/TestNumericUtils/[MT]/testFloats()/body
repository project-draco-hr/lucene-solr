{
  float[] values=new float[]{Float.NEGATIVE_INFINITY,-2.3E25f,-1.0E15f,-1.0f,-1.0E-1f,-1.0E-2f,-0.0f,+0.0f,1.0E-2f,1.0E-1f,1.0f,1.0E15f,2.3E25f,Float.POSITIVE_INFINITY,Float.NaN};
  int[] encoded=new int[values.length];
  for (int i=0; i < values.length; i++) {
    encoded[i]=NumericUtils.floatToSortableInt(values[i]);
    assertTrue("forward and back conversion should generate same float",Float.compare(values[i],NumericUtils.sortableIntToFloat(encoded[i])) == 0);
  }
  for (int i=1; i < encoded.length; i++) {
    assertTrue("check sort order",encoded[i - 1] < encoded[i]);
  }
}
