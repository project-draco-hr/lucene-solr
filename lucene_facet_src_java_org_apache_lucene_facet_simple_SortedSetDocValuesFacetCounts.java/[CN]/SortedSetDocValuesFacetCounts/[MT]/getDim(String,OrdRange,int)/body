{
  TopOrdCountQueue q=null;
  int bottomCount=0;
  int dimCount=0;
  TopOrdCountQueue.OrdAndCount reuse=null;
  for (int ord=ordRange.start; ord <= ordRange.end; ord++) {
    if (counts[ord] > 0) {
      dimCount+=counts[ord];
      if (counts[ord] > bottomCount) {
        if (reuse == null) {
          reuse=new TopOrdCountQueue.OrdAndCount();
        }
        reuse.ord=ord;
        reuse.count=counts[ord];
        if (q == null) {
          q=new TopOrdCountQueue(topN);
        }
        reuse=q.insertWithOverflow(reuse);
        if (q.size() == topN) {
          bottomCount=q.top().count;
        }
      }
    }
  }
  if (q == null) {
    return null;
  }
  BytesRef scratch=new BytesRef();
  LabelAndValue[] labelValues=new LabelAndValue[q.size()];
  for (int i=labelValues.length - 1; i >= 0; i--) {
    TopOrdCountQueue.OrdAndCount ordAndCount=q.pop();
    dv.lookupOrd(ordAndCount.ord,scratch);
    String s=scratch.utf8ToString();
    labelValues[i]=new LabelAndValue(s.substring(dim.length() + 1,s.length()),ordAndCount.count);
  }
  return new SimpleFacetResult(new FacetLabel(dim),dimCount,labelValues);
}
