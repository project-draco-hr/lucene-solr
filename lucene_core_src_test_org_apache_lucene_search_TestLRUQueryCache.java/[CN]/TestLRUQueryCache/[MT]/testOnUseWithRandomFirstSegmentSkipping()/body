{
  try (final Directory directory=newDirectory()){
    try (final RandomIndexWriter indexWriter=new RandomIndexWriter(random(),directory,newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE))){
      Document doc=new Document();
      doc.add(new StringField("f","bar",Store.NO));
      indexWriter.addDocument(doc);
      if (random().nextBoolean()) {
        indexWriter.getReader().close();
      }
      doc=new Document();
      doc.add(new StringField("f","foo",Store.NO));
      doc.add(new StringField("f","bar",Store.NO));
      indexWriter.addDocument(doc);
      indexWriter.commit();
    }
     try (final IndexReader indexReader=DirectoryReader.open(directory)){
      final FrequencyCountingPolicy policy=new FrequencyCountingPolicy();
      final IndexSearcher indexSearcher=new IndexSearcher(indexReader);
      indexSearcher.setQueryCache(new LRUQueryCache(100,10240));
      indexSearcher.setQueryCachingPolicy(policy);
      final Query foo=new TermQuery(new Term("f","foo"));
      final Query bar=new TermQuery(new Term("f","bar"));
      final BooleanQuery.Builder query=new BooleanQuery.Builder();
      if (random().nextBoolean()) {
        query.add(foo,Occur.FILTER);
        query.add(bar,Occur.FILTER);
      }
 else {
        query.add(bar,Occur.FILTER);
        query.add(foo,Occur.FILTER);
      }
      indexSearcher.count(query.build());
      assertEquals(1,policy.frequency(query.build()));
      assertEquals(1,policy.frequency(foo));
      assertEquals(1,policy.frequency(bar));
    }
   }
 }
