{
  Directory dir=newDirectory();
  final RandomIndexWriter w=new RandomIndexWriter(random(),dir);
  w.addDocument(new Document());
  IndexReader reader=w.getReader();
  final LRUQueryCache queryCache=new LRUQueryCache(1,10000);
  final IndexSearcher searcher=newSearcher(reader);
  searcher.setQueryCache(queryCache);
  searcher.setQueryCachingPolicy(QueryCachingPolicy.ALWAYS_CACHE);
  BadQuery query=new BadQuery();
  searcher.count(query);
  query.i[0]+=1;
  try {
    searcher.count(new MatchAllDocsQuery());
    fail();
  }
 catch (  ConcurrentModificationException e) {
  }
catch (  RuntimeException e) {
    Throwable cause=e.getCause();
    assertTrue(cause instanceof ExecutionException);
    assertTrue(cause.getCause() instanceof ConcurrentModificationException);
  }
  IOUtils.close(w,reader,dir);
}
