{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE);
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,iwc);
  w.addDocument(new Document());
  DirectoryReader reader=w.getReader();
  IndexSearcher searcher=newSearcher(reader);
  searcher.setQueryCachingPolicy(QueryCachingPolicy.ALWAYS_CACHE);
  LRUQueryCache cache=new LRUQueryCache(2,10000,new LRUQueryCache.MinSegmentSizePredicate(2,0f));
  searcher.setQueryCache(cache);
  searcher.count(new DummyQuery());
  assertEquals(0,cache.getCacheCount());
  cache=new LRUQueryCache(2,10000,new LRUQueryCache.MinSegmentSizePredicate(1,0f));
  searcher.setQueryCache(cache);
  searcher.count(new DummyQuery());
  assertEquals(1,cache.getCacheCount());
  cache=new LRUQueryCache(2,10000,new LRUQueryCache.MinSegmentSizePredicate(0,.6f));
  searcher.setQueryCache(cache);
  searcher.count(new DummyQuery());
  assertEquals(1,cache.getCacheCount());
  w.addDocument(new Document());
  reader.close();
  reader=w.getReader();
  searcher=newSearcher(reader);
  searcher.setQueryCachingPolicy(QueryCachingPolicy.ALWAYS_CACHE);
  cache=new LRUQueryCache(2,10000,new LRUQueryCache.MinSegmentSizePredicate(0,.6f));
  searcher.setQueryCache(cache);
  searcher.count(new DummyQuery());
  assertEquals(0,cache.getCacheCount());
  reader.close();
  w.close();
  dir.close();
}
