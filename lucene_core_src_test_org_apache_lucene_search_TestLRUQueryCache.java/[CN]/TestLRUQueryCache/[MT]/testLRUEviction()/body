{
  Directory dir=newDirectory();
  final RandomIndexWriter w=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  StringField f=new StringField("color","blue",Store.NO);
  doc.add(f);
  w.addDocument(doc);
  f.setStringValue("red");
  w.addDocument(doc);
  f.setStringValue("green");
  w.addDocument(doc);
  final DirectoryReader reader=w.getReader();
  final IndexSearcher searcher=newSearcher(reader);
  final LRUQueryCache queryCache=new LRUQueryCache(2,100000);
  final Query blue=new TermQuery(new Term("color","blue"));
  final Query red=new TermQuery(new Term("color","red"));
  final Query green=new TermQuery(new Term("color","green"));
  assertEquals(Collections.emptyList(),queryCache.cachedQueries());
  searcher.setQueryCache(queryCache);
  searcher.setQueryCachingPolicy(NEVER_CACHE);
  searcher.search(new ConstantScoreQuery(green),1);
  assertEquals(Collections.emptyList(),queryCache.cachedQueries());
  searcher.setQueryCachingPolicy(QueryCachingPolicy.ALWAYS_CACHE);
  searcher.search(new ConstantScoreQuery(red),1);
  assertEquals(Collections.singletonList(red),queryCache.cachedQueries());
  searcher.search(new ConstantScoreQuery(green),1);
  assertEquals(Arrays.asList(red,green),queryCache.cachedQueries());
  searcher.search(new ConstantScoreQuery(red),1);
  assertEquals(Arrays.asList(green,red),queryCache.cachedQueries());
  searcher.search(new ConstantScoreQuery(blue),1);
  assertEquals(Arrays.asList(red,blue),queryCache.cachedQueries());
  searcher.search(new ConstantScoreQuery(blue),1);
  assertEquals(Arrays.asList(red,blue),queryCache.cachedQueries());
  searcher.search(new ConstantScoreQuery(green),1);
  assertEquals(Arrays.asList(blue,green),queryCache.cachedQueries());
  searcher.setQueryCachingPolicy(NEVER_CACHE);
  searcher.search(new ConstantScoreQuery(red),1);
  assertEquals(Arrays.asList(blue,green),queryCache.cachedQueries());
  reader.close();
  w.close();
  dir.close();
}
