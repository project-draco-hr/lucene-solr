{
  for (int i=0; i < iterations; ++i) {
    final long block0=blocks[blocksOffset++];
    values[valuesOffset++]=block0 >>> 46;
    values[valuesOffset++]=(block0 >>> 28) & 262143L;
    values[valuesOffset++]=(block0 >>> 10) & 262143L;
    final long block1=blocks[blocksOffset++];
    values[valuesOffset++]=((block0 & 1023L) << 8) | (block1 >>> 56);
    values[valuesOffset++]=(block1 >>> 38) & 262143L;
    values[valuesOffset++]=(block1 >>> 20) & 262143L;
    values[valuesOffset++]=(block1 >>> 2) & 262143L;
    final long block2=blocks[blocksOffset++];
    values[valuesOffset++]=((block1 & 3L) << 16) | (block2 >>> 48);
    values[valuesOffset++]=(block2 >>> 30) & 262143L;
    values[valuesOffset++]=(block2 >>> 12) & 262143L;
    final long block3=blocks[blocksOffset++];
    values[valuesOffset++]=((block2 & 4095L) << 6) | (block3 >>> 58);
    values[valuesOffset++]=(block3 >>> 40) & 262143L;
    values[valuesOffset++]=(block3 >>> 22) & 262143L;
    values[valuesOffset++]=(block3 >>> 4) & 262143L;
    final long block4=blocks[blocksOffset++];
    values[valuesOffset++]=((block3 & 15L) << 14) | (block4 >>> 50);
    values[valuesOffset++]=(block4 >>> 32) & 262143L;
    values[valuesOffset++]=(block4 >>> 14) & 262143L;
    final long block5=blocks[blocksOffset++];
    values[valuesOffset++]=((block4 & 16383L) << 4) | (block5 >>> 60);
    values[valuesOffset++]=(block5 >>> 42) & 262143L;
    values[valuesOffset++]=(block5 >>> 24) & 262143L;
    values[valuesOffset++]=(block5 >>> 6) & 262143L;
    final long block6=blocks[blocksOffset++];
    values[valuesOffset++]=((block5 & 63L) << 12) | (block6 >>> 52);
    values[valuesOffset++]=(block6 >>> 34) & 262143L;
    values[valuesOffset++]=(block6 >>> 16) & 262143L;
    final long block7=blocks[blocksOffset++];
    values[valuesOffset++]=((block6 & 65535L) << 2) | (block7 >>> 62);
    values[valuesOffset++]=(block7 >>> 44) & 262143L;
    values[valuesOffset++]=(block7 >>> 26) & 262143L;
    values[valuesOffset++]=(block7 >>> 8) & 262143L;
    final long block8=blocks[blocksOffset++];
    values[valuesOffset++]=((block7 & 255L) << 10) | (block8 >>> 54);
    values[valuesOffset++]=(block8 >>> 36) & 262143L;
    values[valuesOffset++]=(block8 >>> 18) & 262143L;
    values[valuesOffset++]=block8 & 262143L;
  }
}
