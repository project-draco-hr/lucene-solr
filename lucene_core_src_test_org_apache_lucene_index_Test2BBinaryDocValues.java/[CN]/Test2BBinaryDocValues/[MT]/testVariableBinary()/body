{
  BaseDirectoryWrapper dir=newFSDirectory(createTempDir("2BVariableBinary"));
  if (dir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)dir).setThrottling(MockDirectoryWrapper.Throttling.NEVER);
  }
  IndexWriter w=new IndexWriter(dir,new IndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH).setRAMBufferSizeMB(256.0).setMergeScheduler(new ConcurrentMergeScheduler()).setMergePolicy(newLogMergePolicy(false,10)).setOpenMode(IndexWriterConfig.OpenMode.CREATE));
  Document doc=new Document();
  byte bytes[]=new byte[4];
  ByteArrayDataOutput encoder=new ByteArrayDataOutput(bytes);
  BytesRef data=new BytesRef(bytes);
  BinaryDocValuesField dvField=new BinaryDocValuesField("dv",data);
  doc.add(dvField);
  for (int i=0; i < Integer.MAX_VALUE; i++) {
    encoder.reset(bytes);
    encoder.writeVInt(i % 65535);
    data.length=encoder.getPosition();
    w.addDocument(doc);
    if (i % 100000 == 0) {
      System.out.println("indexed: " + i);
      System.out.flush();
    }
  }
  w.forceMerge(1);
  w.close();
  System.out.println("verifying...");
  System.out.flush();
  DirectoryReader r=DirectoryReader.open(dir);
  int expectedValue=0;
  ByteArrayDataInput input=new ByteArrayDataInput();
  for (  AtomicReaderContext context : r.leaves()) {
    AtomicReader reader=context.reader();
    BinaryDocValues dv=reader.getBinaryDocValues("dv");
    for (int i=0; i < reader.maxDoc(); i++) {
      final BytesRef term=dv.get(i);
      input.reset(term.bytes,term.offset,term.length);
      assertEquals(expectedValue % 65535,input.readVInt());
      assertTrue(input.eof());
      expectedValue++;
    }
  }
  r.close();
  dir.close();
}
