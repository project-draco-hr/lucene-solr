{
  if (index == null)   return new NumberedTermEnum(reader,this,"",0){
    ArrayList<String> lst;
    protected boolean setTerm(){
      boolean b=super.setTerm();
      if (b && (pos & intervalMask) == 0) {
        String text=term().text();
        sizeOfStrings+=text.length() << 1;
        if (lst == null) {
          lst=new ArrayList<String>();
        }
        lst.add(text);
      }
      return b;
    }
    public boolean skipTo(    Term target) throws IOException {
      throw new UnsupportedOperationException();
    }
    public boolean skipTo(    int termNumber) throws IOException {
      throw new UnsupportedOperationException();
    }
    public void close() throws IOException {
      nTerms=pos;
      super.close();
      index=lst != null ? lst.toArray(new String[lst.size()]) : new String[0];
    }
  }
;
 else   return new NumberedTermEnum(reader,this,"",0);
}
