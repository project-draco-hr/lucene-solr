{
  String COLL_NAME="delDeadColl";
  CloudSolrServer client=createCloudClient(null);
  createCloudClient(null);
  createColl(COLL_NAME,client);
  DocCollection testcoll=getCommonCloudSolrServer().getZkStateReader().getClusterState().getCollection(COLL_NAME);
  final Slice shard1=testcoll.getSlices().iterator().next();
  if (!shard1.getState().equals(Slice.ACTIVE))   fail("shard is not active");
  Replica replica1=shard1.getReplicas().iterator().next();
  boolean stopped=false;
  JettySolrRunner stoppedJetty=null;
  StringBuilder sb=new StringBuilder();
  for (  JettySolrRunner jetty : jettys) {
    sb.append(jetty.getBaseUrl()).append(",");
    if (jetty.getBaseUrl().toString().startsWith(replica1.getStr(ZkStateReader.BASE_URL_PROP))) {
      stoppedJetty=jetty;
      ChaosMonkey.stop(jetty);
      stopped=true;
      break;
    }
  }
  if (!stopped) {
    fail("Could not find jetty for replica " + replica1 + "jettys: "+ sb);
  }
  long endAt=System.currentTimeMillis() + 3000;
  boolean success=false;
  while (System.currentTimeMillis() < endAt) {
    testcoll=getCommonCloudSolrServer().getZkStateReader().getClusterState().getCollection(COLL_NAME);
    if (!"active".equals(testcoll.getSlice(shard1.getName()).getReplica(replica1.getName()).getStr(Slice.STATE))) {
      success=true;
    }
    if (success)     break;
    Thread.sleep(100);
  }
  log.info("removed_replicas {}/{} ",shard1.getName(),replica1.getName());
  removeAndWaitForReplicaGone(COLL_NAME,client,replica1,shard1.getName());
  client.shutdown();
  ChaosMonkey.start(stoppedJetty);
  log.info("restarted jetty");
  Map m=makeMap("qt","/admin/cores","action","status");
  NamedList<Object> resp=new HttpSolrServer(replica1.getStr("base_url")).request(new QueryRequest(new MapSolrParams(m)));
  assertNull("The core is up and running again",((NamedList)resp.get("status")).get(replica1.getStr("core")));
}
