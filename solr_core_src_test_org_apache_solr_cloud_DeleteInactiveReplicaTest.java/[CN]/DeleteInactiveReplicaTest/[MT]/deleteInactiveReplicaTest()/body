{
  CloudSolrServer client=createCloudClient(null);
  String collectionName="delDeadColl";
  setClusterProp(client,ZkStateReader.LEGACY_CLOUD,"false");
  createCollection(collectionName,client);
  waitForRecoveriesToFinish(collectionName,false);
  Thread.sleep(3000);
  boolean stopped=false;
  JettySolrRunner stoppedJetty=null;
  StringBuilder sb=new StringBuilder();
  Replica replica1=null;
  Slice shard1=null;
  long timeout=System.currentTimeMillis() + 3000;
  DocCollection testcoll=null;
  while (!stopped && System.currentTimeMillis() < timeout) {
    testcoll=client.getZkStateReader().getClusterState().getCollection(collectionName);
    for (    JettySolrRunner jetty : jettys)     sb.append(jetty.getBaseUrl()).append(",");
    for (    Slice slice : testcoll.getActiveSlices()) {
      for (      Replica replica : slice.getReplicas())       for (      JettySolrRunner jetty : jettys) {
        URL baseUrl=null;
        try {
          baseUrl=jetty.getBaseUrl();
        }
 catch (        Exception e) {
          continue;
        }
        if (baseUrl.toString().startsWith(replica.getStr(ZkStateReader.BASE_URL_PROP))) {
          stoppedJetty=jetty;
          ChaosMonkey.stop(jetty);
          replica1=replica;
          shard1=slice;
          stopped=true;
          break;
        }
      }
    }
    Thread.sleep(100);
  }
  if (!stopped) {
    fail("Could not find jetty to stop in collection " + testcoll + " jettys: "+ sb);
  }
  long endAt=System.currentTimeMillis() + 3000;
  boolean success=false;
  while (System.currentTimeMillis() < endAt) {
    testcoll=client.getZkStateReader().getClusterState().getCollection(collectionName);
    if (!"active".equals(testcoll.getSlice(shard1.getName()).getReplica(replica1.getName()).getStr(Slice.STATE))) {
      success=true;
    }
    if (success)     break;
    Thread.sleep(100);
  }
  log.info("removed_replicas {}/{} ",shard1.getName(),replica1.getName());
  removeAndWaitForReplicaGone(collectionName,client,replica1,shard1.getName());
  ChaosMonkey.start(stoppedJetty);
  log.info("restarted jetty");
  Map m=makeMap("qt","/admin/cores","action","status");
  SolrServer server=new HttpSolrServer(replica1.getStr(ZkStateReader.BASE_URL_PROP));
  NamedList<Object> resp=server.request(new QueryRequest(new MapSolrParams(m)));
  assertNull("The core is up and running again",((NamedList)resp.get("status")).get(replica1.getStr("core")));
  server.shutdown();
  server=null;
  Exception exp=null;
  try {
    m=makeMap("action",CoreAdminParams.CoreAdminAction.CREATE.toString(),ZkStateReader.COLLECTION_PROP,collectionName,ZkStateReader.SHARD_ID_PROP,"shard2",CoreAdminParams.NAME,"testcore");
    QueryRequest request=new QueryRequest(new MapSolrParams(m));
    request.setPath("/admin/cores");
    NamedList<Object> rsp=client.request(request);
  }
 catch (  Exception e) {
    exp=e;
    log.info("error_expected",e);
  }
  assertNotNull("Exception expected",exp);
  setClusterProp(client,ZkStateReader.LEGACY_CLOUD,null);
  client.shutdown();
}
