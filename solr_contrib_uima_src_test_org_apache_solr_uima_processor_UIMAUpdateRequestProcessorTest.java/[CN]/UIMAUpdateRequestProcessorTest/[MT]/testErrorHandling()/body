{
  try {
    addDoc("uima-not-ignoreErrors",adoc("id","2312312321312","text","SpellCheckComponent got improvement related to recent Lucene changes. \n  " + "Add support for specifying Spelling SuggestWord Comparator to Lucene spell " + "checkers for SpellCheckComponent. Issue SOLR-2053 is already fixed, patch is"+ " attached if you need it, but it is also committed to trunk and 3_x branch."+ " Last Lucene European Conference has been held in Prague."));
    fail("exception shouldn't be ignored");
  }
 catch (  RuntimeException expected) {
  }
  assertU(commit());
  assertQ(req("*:*"),"//*[@numFound='0']");
  addDoc("uima-ignoreErrors",adoc("id","2312312321312","text","SpellCheckComponent got improvement related to recent Lucene changes. \n  " + "Add support for specifying Spelling SuggestWord Comparator to Lucene spell " + "checkers for SpellCheckComponent. Issue SOLR-2053 is already fixed, patch is"+ " attached if you need it, but it is also committed to trunk and 3_x branch."+ " Last Lucene European Conference has been held in Prague."));
  assertU(commit());
  assertQ(req("*:*"),"//*[@numFound='1']");
  try {
    addDoc("uima-not-ignoreErrors",adoc("id","2312312321312","text","SpellCheckComponent got improvement related to recent Lucene changes."));
    fail("exception shouldn't be ignored");
  }
 catch (  StringIndexOutOfBoundsException e) {
    fail("exception shouldn't be raised");
  }
catch (  SolrException expected) {
  }
  try {
    addDoc("uima-ignoreErrors",adoc("id","2312312321312","text","SpellCheckComponent got improvement related to recent Lucene changes."));
  }
 catch (  StringIndexOutOfBoundsException e) {
    fail("exception shouldn't be raised");
  }
}
