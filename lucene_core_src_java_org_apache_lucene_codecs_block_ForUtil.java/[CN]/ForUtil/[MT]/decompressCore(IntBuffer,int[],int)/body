{
switch (numBits) {
case 0:
    PackedIntsDecompress.decode0(intBuffer,data);
  break;
case 1:
PackedIntsDecompress.decode1(intBuffer,data);
break;
case 2:
PackedIntsDecompress.decode2(intBuffer,data);
break;
case 3:
PackedIntsDecompress.decode3(intBuffer,data);
break;
case 4:
PackedIntsDecompress.decode4(intBuffer,data);
break;
case 5:
PackedIntsDecompress.decode5(intBuffer,data);
break;
case 6:
PackedIntsDecompress.decode6(intBuffer,data);
break;
case 7:
PackedIntsDecompress.decode7(intBuffer,data);
break;
case 8:
PackedIntsDecompress.decode8(intBuffer,data);
break;
case 9:
PackedIntsDecompress.decode9(intBuffer,data);
break;
case 10:
PackedIntsDecompress.decode10(intBuffer,data);
break;
case 11:
PackedIntsDecompress.decode11(intBuffer,data);
break;
case 12:
PackedIntsDecompress.decode12(intBuffer,data);
break;
case 13:
PackedIntsDecompress.decode13(intBuffer,data);
break;
case 14:
PackedIntsDecompress.decode14(intBuffer,data);
break;
case 15:
PackedIntsDecompress.decode15(intBuffer,data);
break;
case 16:
PackedIntsDecompress.decode16(intBuffer,data);
break;
case 17:
PackedIntsDecompress.decode17(intBuffer,data);
break;
case 18:
PackedIntsDecompress.decode18(intBuffer,data);
break;
case 19:
PackedIntsDecompress.decode19(intBuffer,data);
break;
case 20:
PackedIntsDecompress.decode20(intBuffer,data);
break;
case 21:
PackedIntsDecompress.decode21(intBuffer,data);
break;
case 22:
PackedIntsDecompress.decode22(intBuffer,data);
break;
case 23:
PackedIntsDecompress.decode23(intBuffer,data);
break;
case 24:
PackedIntsDecompress.decode24(intBuffer,data);
break;
case 25:
PackedIntsDecompress.decode25(intBuffer,data);
break;
case 26:
PackedIntsDecompress.decode26(intBuffer,data);
break;
case 27:
PackedIntsDecompress.decode27(intBuffer,data);
break;
case 28:
PackedIntsDecompress.decode28(intBuffer,data);
break;
case 29:
PackedIntsDecompress.decode29(intBuffer,data);
break;
case 30:
PackedIntsDecompress.decode30(intBuffer,data);
break;
case 31:
PackedIntsDecompress.decode31(intBuffer,data);
break;
case 32:
PackedIntsDecompress.decode32(intBuffer,data);
break;
}
}
