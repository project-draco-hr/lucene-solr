{
  super(TermQuery.this);
  if (needsScores && termStates == null) {
    throw new IllegalStateException("termStates are required when scores are needed");
  }
  this.needsScores=needsScores;
  this.termStates=termStates;
  this.similarity=searcher.getSimilarity(needsScores);
  final CollectionStatistics collectionStats;
  final TermStatistics termStats;
  if (needsScores) {
    collectionStats=searcher.collectionStatistics(term.field());
    termStats=searcher.termStatistics(term,termStates);
  }
 else {
    final int maxDoc=searcher.getIndexReader().maxDoc();
    collectionStats=new CollectionStatistics(term.field(),maxDoc,-1,-1,-1);
    termStats=new TermStatistics(term.bytes(),maxDoc,-1);
  }
  this.stats=similarity.computeWeight(boost,collectionStats,termStats);
}
