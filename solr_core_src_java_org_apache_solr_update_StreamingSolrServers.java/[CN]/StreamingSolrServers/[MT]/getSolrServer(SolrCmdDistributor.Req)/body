{
  String url=getFullUrl(req.node.getUrl());
  ConcurrentUpdateSolrServer server=solrServers.get(url);
  if (server == null) {
    server=new ConcurrentUpdateSolrServer(url,httpClient,100,1,updateExecutor,true){
      @Override public void handleError(      Throwable ex){
        req.trackRequestResult(null,false);
        log.error("error",ex);
        Error error=new Error();
        error.e=(Exception)ex;
        if (ex instanceof SolrException) {
          error.statusCode=((SolrException)ex).code();
        }
        error.req=req;
        errors.add(error);
      }
      @Override public void onSuccess(      HttpResponse resp){
        req.trackRequestResult(resp,true);
      }
    }
;
    server.setParser(new BinaryResponseParser());
    server.setRequestWriter(new BinaryRequestWriter());
    server.setPollQueueTime(0);
    Set<String> queryParams=new HashSet<>(2);
    queryParams.add(DistributedUpdateProcessor.DISTRIB_FROM);
    queryParams.add(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM);
    server.setQueryParams(queryParams);
    solrServers.put(url,server);
  }
  return server;
}
