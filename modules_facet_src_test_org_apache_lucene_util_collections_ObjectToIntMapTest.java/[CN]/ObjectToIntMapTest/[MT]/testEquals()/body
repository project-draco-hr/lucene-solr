{
  ObjectToIntMap<Float> map1=new ObjectToIntMap<Float>(100);
  ObjectToIntMap<Float> map2=new ObjectToIntMap<Float>(100);
  assertEquals("Empty maps should be equal",map1,map2);
  assertEquals("hashCode() for empty maps should be equal",map1.hashCode(),map2.hashCode());
  for (int i=0; i < 100; ++i) {
    map1.put(i * 1.1f,100 + i);
    map2.put(i * 1.1f,100 + i);
  }
  assertEquals("Identical maps should be equal",map1,map2);
  assertEquals("hashCode() for identical maps should be equal",map1.hashCode(),map2.hashCode());
  for (int i=10; i < 20; i++) {
    map1.remove(i * 1.1f);
  }
  assertFalse("Different maps should not be equal",map1.equals(map2));
  for (int i=19; i >= 10; --i) {
    map2.remove(i * 1.1f);
  }
  assertEquals("Identical maps should be equal",map1,map2);
  assertEquals("hashCode() for identical maps should be equal",map1.hashCode(),map2.hashCode());
  map1.put(-1.1f,-1);
  map2.put(-1.1f,-2);
  assertFalse("Different maps should not be equal",map1.equals(map2));
  map2.put(-1.1f,-1);
  assertEquals("Identical maps should be equal",map1,map2);
  assertEquals("hashCode() for identical maps should be equal",map1.hashCode(),map2.hashCode());
}
