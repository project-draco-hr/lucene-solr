{
  if (curLiveDocs != null && curLiveDocs.get(docID) == false) {
    return;
  }
  double docLatitude=decodeLatitude(packedValue,0);
  double docLongitude=decodeLongitude(packedValue,Integer.BYTES);
  if (docLatitude < minLat || docLatitude > maxLat) {
    return;
  }
  if ((docLongitude < minLon || docLongitude > maxLon) && (docLongitude < minLon2)) {
    return;
  }
  pointCheckCount++;
  double distanceMeters=SloppyMath.haversinMeters(pointLat,pointLon,docLatitude,docLongitude);
  int fullDocID=curDocBase + docID;
  if (hitQueue.size() == topN) {
    NearestHit hit=hitQueue.peek();
    if (distanceMeters < hit.distanceMeters || (distanceMeters == hit.distanceMeters && fullDocID < hit.docID)) {
      hitQueue.poll();
      hit.docID=fullDocID;
      hit.distanceMeters=distanceMeters;
      hitQueue.offer(hit);
      maybeUpdateBBox();
    }
  }
 else {
    NearestHit hit=new NearestHit();
    hit.docID=fullDocID;
    hit.distanceMeters=distanceMeters;
    hitQueue.offer(hit);
  }
}
