{
  final LineFileDocs lfd=new LineFileDocs(null,"/lucenedata/enwiki/enwiki-20120502-lines-1k.txt",false);
  lfd.nextDoc();
  Analyzer analyzer=new MockAnalyzer(random());
  FreeTextSuggester sug=new FreeTextSuggester(analyzer);
  sug.build(new InputIterator(){
    private int count;
    @Override public long weight(){
      return 1;
    }
    @Override public BytesRef next(){
      Document doc;
      try {
        doc=lfd.nextDoc();
      }
 catch (      IOException ioe) {
        throw new RuntimeException(ioe);
      }
      if (doc == null) {
        return null;
      }
      if (count++ == 10000) {
        return null;
      }
      return new BytesRef(doc.get("body"));
    }
    @Override public BytesRef payload(){
      return null;
    }
    @Override public boolean hasPayloads(){
      return false;
    }
    @Override public Set<BytesRef> contexts(){
      return null;
    }
    @Override public boolean hasContexts(){
      return false;
    }
  }
);
  if (VERBOSE) {
    System.out.println(sug.ramBytesUsed() + " bytes");
    List<LookupResult> results=sug.lookup("general r",10);
    System.out.println("results:");
    for (    LookupResult result : results) {
      System.out.println("  " + result);
    }
  }
  analyzer.close();
}
