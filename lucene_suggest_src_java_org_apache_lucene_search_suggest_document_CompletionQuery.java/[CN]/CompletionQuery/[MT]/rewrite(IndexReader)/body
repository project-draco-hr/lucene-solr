{
  byte type=0;
  boolean first=true;
  Terms terms;
  for (  LeafReaderContext context : reader.leaves()) {
    LeafReader leafReader=context.reader();
    try {
      if ((terms=leafReader.terms(getField())) == null) {
        continue;
      }
    }
 catch (    IOException e) {
      continue;
    }
    if (terms instanceof CompletionTerms) {
      CompletionTerms completionTerms=(CompletionTerms)terms;
      byte t=completionTerms.getType();
      if (first) {
        type=t;
        first=false;
      }
 else       if (type != t) {
        throw new IllegalStateException(getField() + " has values of multiple types");
      }
    }
  }
  if (first == false) {
    if (this instanceof ContextQuery) {
      if (type == SuggestField.TYPE) {
        throw new IllegalStateException(this.getClass().getSimpleName() + " can not be executed against a non context-enabled SuggestField: " + getField());
      }
    }
 else {
      if (type == ContextSuggestField.TYPE) {
        return new ContextQuery(this);
      }
    }
  }
  return super.rewrite(reader);
}
