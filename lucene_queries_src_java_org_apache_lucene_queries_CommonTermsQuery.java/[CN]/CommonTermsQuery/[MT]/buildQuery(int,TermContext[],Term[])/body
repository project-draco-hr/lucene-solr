{
  BooleanQuery lowFreq=new BooleanQuery(disableCoord);
  BooleanQuery highFreq=new BooleanQuery(disableCoord);
  highFreq.setBoost(highFreqBoost);
  lowFreq.setBoost(lowFreqBoost);
  if (lowFreqOccur == Occur.SHOULD) {
    lowFreq.setMinimumNumberShouldMatch(minNrShouldMatch);
  }
  BooleanQuery query=new BooleanQuery(true);
  for (int i=0; i < queryTerms.length; i++) {
    TermContext termContext=contextArray[i];
    if (termContext == null) {
      System.out.println("term: " + queryTerms[i] + " context: "+ -1+ " maxTermFrequency: "+ maxTermFrequency+ " LOW");
      lowFreq.add(new TermQuery(queryTerms[i]),lowFreqOccur);
    }
 else {
      if ((maxTermFrequency >= 1f && termContext.docFreq() > maxTermFrequency) || (termContext.docFreq() > (int)Math.ceil(maxTermFrequency * (float)maxDoc))) {
        System.out.println("term: " + queryTerms[i] + " context: "+ termContext.docFreq()+ " maxTermFrequency: "+ maxTermFrequency+ " HIGH");
        highFreq.add(new TermQuery(queryTerms[i],termContext),highFreqOccur);
      }
 else {
        System.out.println("term: " + queryTerms[i] + " context: "+ termContext.docFreq()+ " maxTermFrequency: "+ maxTermFrequency+ " LOW");
        lowFreq.add(new TermQuery(queryTerms[i],termContext),lowFreqOccur);
      }
    }
  }
  if (lowFreq.clauses().isEmpty()) {
    if (highFreqOccur == Occur.MUST) {
      highFreq.setBoost(getBoost());
      return highFreq;
    }
 else {
      BooleanQuery highFreqConjunction=new BooleanQuery();
      for (      BooleanClause booleanClause : highFreq) {
        highFreqConjunction.add(booleanClause.getQuery(),Occur.MUST);
      }
      highFreqConjunction.setBoost(getBoost());
      return highFreqConjunction;
    }
  }
 else   if (highFreq.clauses().isEmpty()) {
    lowFreq.setBoost(getBoost());
    return lowFreq;
  }
 else {
    query.add(highFreq,Occur.SHOULD);
    query.add(lowFreq,Occur.MUST);
    query.setBoost(getBoost());
    return query;
  }
}
