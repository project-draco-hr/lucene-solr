{
  si=info;
  if (indexDivisor < 0) {
    indexDivisor=-indexDivisor;
  }
  boolean success=false;
  try {
    TermInfosReader r=new TermInfosReader(dir,info.name,fieldInfos,readBufferSize,indexDivisor);
    if (indexDivisor == -1) {
      tisNoIndex=r;
    }
 else {
      tisNoIndex=null;
      tis=r;
    }
    this.readBufferSize=readBufferSize;
    this.fieldInfos=fieldInfos;
    freqStream=dir.openInput(info.name + ".frq",readBufferSize);
    boolean anyProx=false;
    final int numFields=fieldInfos.size();
    for (int i=0; i < numFields; i++) {
      final FieldInfo fieldInfo=fieldInfos.fieldInfo(i);
      if (fieldInfo.isIndexed) {
        fields.put(fieldInfo.name,fieldInfo);
        preTerms.put(fieldInfo.name,new PreTerms(fieldInfo));
        if (!fieldInfo.omitTermFreqAndPositions) {
          anyProx=true;
        }
      }
    }
    if (anyProx) {
      proxStream=dir.openInput(info.name + ".prx",readBufferSize);
    }
 else {
      proxStream=null;
    }
    success=true;
  }
  finally {
    if (!success) {
      close();
    }
  }
  this.dir=dir;
}
