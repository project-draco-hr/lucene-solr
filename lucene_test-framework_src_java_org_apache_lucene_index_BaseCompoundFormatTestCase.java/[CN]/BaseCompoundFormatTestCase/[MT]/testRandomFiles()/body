{
  Directory dir=newDirectory();
  String segment="_123";
  int chunk=1024;
  createRandomFile(dir,segment + ".zero",0);
  createRandomFile(dir,segment + ".one",1);
  createRandomFile(dir,segment + ".ten",10);
  createRandomFile(dir,segment + ".hundred",100);
  createRandomFile(dir,segment + ".big1",chunk);
  createRandomFile(dir,segment + ".big2",chunk - 1);
  createRandomFile(dir,segment + ".big3",chunk + 1);
  createRandomFile(dir,segment + ".big4",3 * chunk);
  createRandomFile(dir,segment + ".big5",3 * chunk - 1);
  createRandomFile(dir,segment + ".big6",3 * chunk + 1);
  createRandomFile(dir,segment + ".big7",1000 * chunk);
  String files[]=dir.listAll();
  SegmentInfo si=newSegmentInfo(dir,"_123");
  si.setFiles(Arrays.asList(files));
  si.getCodec().compoundFormat().write(dir,si,IOContext.DEFAULT);
  Directory cfs=si.getCodec().compoundFormat().getCompoundReader(dir,si,IOContext.DEFAULT);
  for (int i=0; i < files.length; i++) {
    IndexInput check=dir.openInput(files[i],newIOContext(random()));
    IndexInput test=cfs.openInput(files[i],newIOContext(random()));
    assertSameStreams(files[i],check,test);
    assertSameSeekBehavior(files[i],check,test);
    test.close();
    check.close();
  }
  cfs.close();
  dir.close();
}
