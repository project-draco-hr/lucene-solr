{
  HashSet uniques=new HashSet();
  for (int i=0; i < queries.length; i++) {
    Query query=queries[i];
    BooleanClause[] clauses=null;
    boolean splittable=(query instanceof BooleanQuery);
    if (splittable) {
      BooleanQuery bq=(BooleanQuery)query;
      splittable=bq.isCoordDisabled();
      clauses=bq.getClauses();
      for (int j=0; splittable && j < clauses.length; j++) {
        splittable=(clauses[j].getOccur() == BooleanClause.Occur.SHOULD);
      }
    }
    if (splittable) {
      for (int j=0; j < clauses.length; j++) {
        uniques.add(clauses[j].getQuery());
      }
    }
 else {
      uniques.add(query);
    }
  }
  if (uniques.size() == 1) {
    return (Query)uniques.iterator().next();
  }
  Iterator it=uniques.iterator();
  BooleanQuery result=new BooleanQuery(true);
  while (it.hasNext())   result.add((Query)it.next(),BooleanClause.Occur.SHOULD);
  return result;
}
