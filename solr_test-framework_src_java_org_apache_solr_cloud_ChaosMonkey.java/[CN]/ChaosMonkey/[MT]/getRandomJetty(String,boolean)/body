{
  int numRunning=0;
  int numRecovering=0;
  int numActive=0;
  for (  CloudJettyRunner cloudJetty : shardToJetty.get(slice)) {
    boolean running=true;
    zkStateReader.updateClusterState(true);
    Slice theShards=zkStateReader.getClusterState().getSlicesMap(collection).get(slice);
    ZkNodeProps props=theShards.getReplicasMap().get(cloudJetty.coreNodeName);
    if (props == null) {
      throw new RuntimeException("shard name " + cloudJetty.coreNodeName + " not found in "+ theShards.getReplicasMap().keySet());
    }
    String state=props.getStr(ZkStateReader.STATE_PROP);
    String nodeName=props.getStr(ZkStateReader.NODE_NAME_PROP);
    if (!cloudJetty.jetty.isRunning() || !state.equals(ZkStateReader.ACTIVE) || !zkStateReader.getClusterState().liveNodesContain(nodeName)) {
      running=false;
    }
    if (cloudJetty.jetty.isRunning() && state.equals(ZkStateReader.RECOVERING) && zkStateReader.getClusterState().liveNodesContain(nodeName)) {
      numRecovering++;
    }
    if (cloudJetty.jetty.isRunning() && state.equals(ZkStateReader.ACTIVE) && zkStateReader.getClusterState().liveNodesContain(nodeName)) {
      numActive++;
    }
    if (running) {
      numRunning++;
    }
  }
  if (numActive < 2) {
    monkeyLog("only one active node in shard - monkey cannot kill :(");
    return null;
  }
  Random random=LuceneTestCase.random();
  int chance=random.nextInt(10);
  CloudJettyRunner cjetty;
  if (chance <= 5 && aggressivelyKillLeaders) {
    cjetty=shardToLeaderJetty.get(slice);
  }
 else {
    List<CloudJettyRunner> jetties=shardToJetty.get(slice);
    int index=random.nextInt(jetties.size());
    cjetty=jetties.get(index);
    ZkNodeProps leader=null;
    try {
      leader=zkStateReader.getLeaderProps(collection,slice);
    }
 catch (    Throwable t) {
      log.error("Could not get leader",t);
      return null;
    }
    FilterHolder fh=cjetty.jetty.getDispatchFilter();
    if (fh == null) {
      monkeyLog("selected jetty not running correctly - skip");
      return null;
    }
    SolrDispatchFilter df=((SolrDispatchFilter)fh.getFilter());
    if (df == null) {
      monkeyLog("selected jetty not running correctly - skip");
      return null;
    }
    CoreContainer cores=df.getCores();
    if (cores == null) {
      monkeyLog("selected jetty not running correctly - skip");
      return null;
    }
    SolrCore core=cores.getCore(leader.getStr(ZkStateReader.CORE_NAME_PROP));
    if (core == null) {
      monkeyLog("selected jetty not running correctly - skip");
      return null;
    }
    boolean rtIsLeader;
    try {
      rtIsLeader=core.getCoreDescriptor().getCloudDescriptor().isLeader();
    }
  finally {
      core.close();
    }
    boolean isLeader=leader.getStr(ZkStateReader.NODE_NAME_PROP).equals(jetties.get(index).nodeName) || rtIsLeader;
    if (!aggressivelyKillLeaders && isLeader) {
      monkeyLog("abort! I don't kill leaders");
      return null;
    }
  }
  if (cjetty.jetty.getLocalPort() == -1) {
    monkeyLog("abort! This guy is already dead");
    return null;
  }
  monkeyLog("chose a victim! " + cjetty.jetty.getLocalPort());
  return cjetty;
}
