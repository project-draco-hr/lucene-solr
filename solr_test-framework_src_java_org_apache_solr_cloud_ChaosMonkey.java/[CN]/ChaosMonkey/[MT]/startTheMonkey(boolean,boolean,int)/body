{
  if (!MONKEY_ENABLED) {
    monkeyLog("The Monkey is disabled and will not start");
    return;
  }
  monkeyLog("starting");
  this.aggressivelyKillLeaders=killLeaders;
  startTime=System.currentTimeMillis();
  stop=false;
  monkeyThread=new Thread(){
    private List<CloudJettyRunner> deadPool=new ArrayList<CloudJettyRunner>();
    @Override public void run(){
      while (!stop) {
        try {
          Random random=LuceneTestCase.random();
          Thread.sleep(random.nextInt(roundPauseUpperLimit));
          if (random.nextBoolean()) {
            if (!deadPool.isEmpty()) {
              int index=random.nextInt(deadPool.size());
              JettySolrRunner jetty=deadPool.get(index).jetty;
              if (jetty.isStopped() && !ChaosMonkey.start(jetty)) {
                continue;
              }
              deadPool.remove(index);
              starts.incrementAndGet();
              continue;
            }
          }
          int rnd=random.nextInt(10);
          if (expireSessions && rnd < EXPIRE_PERCENT) {
            expireRandomSession();
          }
          if (causeConnectionLoss && rnd < CONLOSS_PERCENT) {
            randomConnectionLoss();
          }
          CloudJettyRunner cjetty;
          if (random.nextBoolean()) {
            cjetty=stopRandomShard();
          }
 else {
            cjetty=killRandomShard();
          }
          if (cjetty == null) {
          }
 else {
            deadPool.add(cjetty);
          }
        }
 catch (        InterruptedException e) {
        }
catch (        Exception e) {
          e.printStackTrace();
        }
      }
      monkeyLog("finished");
      monkeyLog("I ran for " + (System.currentTimeMillis() - startTime) / 1000.0f + "sec. I stopped " + stops + " and I started " + starts + ". I also expired " + expires.get() + " and caused " + connloss + " connection losses");
      if (startDeadPool) {
        for (        CloudJettyRunner jetty : deadPool) {
          try {
            if (jetty.jetty.isStopped())             ChaosMonkey.start(jetty.jetty);
          }
 catch (          Exception e) {
            log.error("",e);
          }
        }
      }
    }
  }
;
  monkeyThread.start();
}
