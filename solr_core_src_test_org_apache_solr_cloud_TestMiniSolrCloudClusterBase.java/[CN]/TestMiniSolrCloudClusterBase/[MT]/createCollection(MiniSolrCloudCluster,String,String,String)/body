{
  String configName="solrCloudCollectionConfig";
  File configDir=new File(SolrTestCaseJ4.TEST_HOME() + File.separator + "collection1"+ File.separator+ "conf");
  miniCluster.uploadConfigDir(configDir,configName);
  Map<String,String> collectionProperties=new HashMap<>();
  collectionProperties.put(CoreDescriptor.CORE_CONFIG,"solrconfig-tlog.xml");
  collectionProperties.put("solr.tests.maxBufferedDocs","100000");
  collectionProperties.put("solr.tests.ramBufferSizeMB","100");
  if (random().nextBoolean()) {
    collectionProperties.put(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_MERGEPOLICY,TieredMergePolicy.class.getName());
    collectionProperties.put(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY,"true");
    collectionProperties.put(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY,"false");
  }
 else {
    collectionProperties.put(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_MERGEPOLICYFACTORY,TieredMergePolicyFactory.class.getName());
    collectionProperties.put(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY,"true");
    collectionProperties.put(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY,"false");
  }
  collectionProperties.put("solr.tests.mergeScheduler","org.apache.lucene.index.ConcurrentMergeScheduler");
  collectionProperties.put("solr.directoryFactory","solr.RAMDirectoryFactory");
  miniCluster.createCollection(collectionName,NUM_SHARDS,REPLICATION_FACTOR,configName,createNodeSet,asyncId,collectionProperties);
}
