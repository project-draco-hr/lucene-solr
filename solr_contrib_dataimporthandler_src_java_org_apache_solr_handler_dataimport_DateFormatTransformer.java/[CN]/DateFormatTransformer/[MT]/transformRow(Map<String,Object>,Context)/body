{
  for (  Map<String,String> map : context.getAllEntityFields()) {
    Locale locale=Locale.ENGLISH;
    String customLocale=map.get(LOCALE);
    if (customLocale != null) {
      try {
        locale=new Locale.Builder().setLanguageTag(customLocale).build();
      }
 catch (      IllformedLocaleException e) {
        throw new DataImportHandlerException(DataImportHandlerException.SEVERE,"Invalid Locale specified: " + customLocale,e);
      }
    }
    String fmt=map.get(DATE_TIME_FMT);
    if (fmt == null)     continue;
    VariableResolver resolver=context.getVariableResolver();
    fmt=resolver.replaceTokens(fmt);
    String column=map.get(DataImporter.COLUMN);
    String srcCol=map.get(RegexTransformer.SRC_COL_NAME);
    if (srcCol == null)     srcCol=column;
    try {
      Object o=aRow.get(srcCol);
      if (o instanceof List) {
        List inputs=(List)o;
        List<Date> results=new ArrayList<>();
        for (        Object input : inputs) {
          results.add(process(input,fmt,locale));
        }
        aRow.put(column,results);
      }
 else {
        if (o != null) {
          aRow.put(column,process(o,fmt,locale));
        }
      }
    }
 catch (    ParseException e) {
      LOG.warn("Could not parse a Date field ",e);
    }
  }
  return aRow;
}
