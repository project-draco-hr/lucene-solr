{
  final IntBlockTermState termState=(IntBlockTermState)_termState;
  final boolean fieldHasPositions=fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;
  final boolean fieldHasOffsets=fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
  final boolean fieldHasPayloads=fieldInfo.hasPayloads();
  if (absolute) {
    termState.docStartFP=0;
    termState.posStartFP=0;
    termState.payStartFP=0;
  }
  if (version < Lucene41PostingsFormat.VERSION_META_ARRAY) {
    _decodeTerm(in,fieldInfo,termState);
    return;
  }
  termState.docStartFP+=longs[0];
  if (fieldHasPositions) {
    termState.posStartFP+=longs[1];
    if (fieldHasOffsets || fieldHasPayloads) {
      termState.payStartFP+=longs[2];
    }
  }
  if (termState.docFreq == 1) {
    termState.singletonDocID=in.readVInt();
  }
 else {
    termState.singletonDocID=-1;
  }
  if (fieldHasPositions) {
    if (termState.totalTermFreq > BLOCK_SIZE) {
      termState.lastPosBlockOffset=in.readVLong();
    }
 else {
      termState.lastPosBlockOffset=-1;
    }
  }
  if (termState.docFreq > BLOCK_SIZE) {
    termState.skipOffset=in.readVLong();
  }
 else {
    termState.skipOffset=-1;
  }
}
