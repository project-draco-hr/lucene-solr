{
  BytesRef term;
  PostingsEnum leftPositions=null;
  PostingsEnum rightPositions=null;
  PostingsEnum leftDocs=null;
  PostingsEnum rightDocs=null;
  while ((term=leftTermsEnum.next()) != null) {
    assertEquals(term,rightTermsEnum.next());
    assertTermStats(leftTermsEnum,rightTermsEnum);
    if (deep) {
      if (hasPositions) {
        assertDocsAndPositionsEnum(leftPositions=leftTermsEnum.postings(leftPositions,PostingsEnum.ALL),rightPositions=rightTermsEnum.postings(rightPositions,PostingsEnum.ALL));
        assertPositionsSkipping(leftTermsEnum.docFreq(),leftPositions=leftTermsEnum.postings(leftPositions,PostingsEnum.ALL),rightPositions=rightTermsEnum.postings(rightPositions,PostingsEnum.ALL));
        assertDocsAndPositionsEnum(leftPositions=leftTermsEnum.postings(leftPositions,PostingsEnum.PAYLOADS),rightPositions=rightTermsEnum.postings(rightPositions,PostingsEnum.PAYLOADS));
        assertPositionsSkipping(leftTermsEnum.docFreq(),leftPositions=leftTermsEnum.postings(leftPositions,PostingsEnum.PAYLOADS),rightPositions=rightTermsEnum.postings(rightPositions,PostingsEnum.PAYLOADS));
        assertDocsAndPositionsEnum(leftPositions=leftTermsEnum.postings(leftPositions,PostingsEnum.OFFSETS),rightPositions=rightTermsEnum.postings(rightPositions,PostingsEnum.OFFSETS));
        assertPositionsSkipping(leftTermsEnum.docFreq(),leftPositions=leftTermsEnum.postings(leftPositions,PostingsEnum.OFFSETS),rightPositions=rightTermsEnum.postings(rightPositions,PostingsEnum.OFFSETS));
        assertDocsAndPositionsEnum(leftPositions=leftTermsEnum.postings(leftPositions,PostingsEnum.POSITIONS),rightPositions=rightTermsEnum.postings(rightPositions,PostingsEnum.POSITIONS));
        assertPositionsSkipping(leftTermsEnum.docFreq(),leftPositions=leftTermsEnum.postings(leftPositions,PostingsEnum.POSITIONS),rightPositions=rightTermsEnum.postings(rightPositions,PostingsEnum.POSITIONS));
      }
      assertDocsEnum(leftDocs=leftTermsEnum.postings(leftDocs),rightDocs=rightTermsEnum.postings(rightDocs));
      assertDocsEnum(leftDocs=leftTermsEnum.postings(leftDocs,PostingsEnum.NONE),rightDocs=rightTermsEnum.postings(rightDocs,PostingsEnum.NONE));
      assertDocsSkipping(leftTermsEnum.docFreq(),leftDocs=leftTermsEnum.postings(leftDocs),rightDocs=rightTermsEnum.postings(rightDocs));
      assertDocsSkipping(leftTermsEnum.docFreq(),leftDocs=leftTermsEnum.postings(leftDocs,PostingsEnum.NONE),rightDocs=rightTermsEnum.postings(rightDocs,PostingsEnum.NONE));
    }
  }
  assertNull(rightTermsEnum.next());
}
