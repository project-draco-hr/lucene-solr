{
  if (!finished) {
    while (true) {
      Tuple tuple=stream.read();
      if (tuple.EOF) {
        finished=true;
        int s=top.size();
        for (int i=0; i < s; i++) {
          Tuple t=top.poll();
          topList.addFirst(t);
        }
        topList.addLast(tuple);
        break;
      }
 else {
        if (top.size() >= size) {
          Tuple peek=top.peek();
          if (comp.compare(tuple,peek) < 0) {
            top.poll();
            top.add(tuple);
          }
        }
 else {
          top.add(tuple);
        }
      }
    }
  }
  return topList.pollFirst();
}
