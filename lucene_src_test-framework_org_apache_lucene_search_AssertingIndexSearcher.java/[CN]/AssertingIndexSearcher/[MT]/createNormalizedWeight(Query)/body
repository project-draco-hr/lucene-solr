{
  final Weight w=super.createNormalizedWeight(query);
  return new Weight(){
    @Override public Explanation explain(    AtomicReaderContext context,    int doc) throws IOException {
      return w.explain(context,doc);
    }
    @Override public Query getQuery(){
      return w.getQuery();
    }
    @Override public void normalize(    float norm,    float topLevelBoost){
      throw new IllegalStateException("Weight already normalized.");
    }
    @Override public Scorer scorer(    AtomicReaderContext context,    ScorerContext scorerContext) throws IOException {
      return w.scorer(context,scorerContext);
    }
    @Override public float getValueForNormalization() throws IOException {
      throw new IllegalStateException("Weight already normalized.");
    }
    @Override public boolean scoresDocsOutOfOrder(){
      return w.scoresDocsOutOfOrder();
    }
  }
;
}
