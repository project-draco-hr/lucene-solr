{
  if (superType == null)   return false;
  if (!superType.isInterface())   return false;
  if (typeToCheck == null)   return false;
  if (typeToCheck.equals(Object.class))   return false;
  if (typeToCheck.equals(superType))   return true;
  Class[] interfaces=typeToCheck.getInterfaces();
  for (int i=0; i < interfaces.length; i++) {
    if (implementsType(interfaces[i],superType))     return true;
  }
  return implementsType(typeToCheck.getSuperclass(),superType);
}
