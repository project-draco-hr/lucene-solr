{
  final IntParser parser=(IntParser)key.custom;
  if (parser == null) {
    try {
      return wrapper.getInts(reader,key.field,DEFAULT_INT_PARSER,setDocsWithField);
    }
 catch (    NumberFormatException ne) {
      return wrapper.getInts(reader,key.field,NUMERIC_UTILS_INT_PARSER,setDocsWithField);
    }
  }
  final HoldsOneThing<int[]> valuesRef=new HoldsOneThing<int[]>();
  Uninvert u=new Uninvert(){
    private int currentValue;
    private int[] values;
    @Override public void visitTerm(    BytesRef term){
      currentValue=parser.parseInt(term);
      if (values == null) {
        values=new int[reader.maxDoc()];
        valuesRef.set(values);
      }
    }
    @Override public void visitDoc(    int docID){
      values[docID]=currentValue;
    }
  }
;
  u.uninvert(reader,key.field,setDocsWithField);
  if (setDocsWithField) {
    wrapper.setDocsWithField(reader,key.field,u.docsWithField);
  }
  int[] values=valuesRef.get();
  if (values == null) {
    values=new int[reader.maxDoc()];
  }
  return new IntsFromArray(values);
}
