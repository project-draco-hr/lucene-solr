{
  LuceneTestCase.replaceMaxFailureRule(new TestRuleIgnoreAfterMaxFailures(1));
  JUnitCore core=new JUnitCore();
  final StringBuilder results=new StringBuilder();
  core.addListener(new RunListener(){
    char lastTest;
    @Override public void testStarted(    Description description) throws Exception {
      lastTest='S';
    }
    @Override public void testAssumptionFailure(    Failure failure){
      lastTest='A';
    }
    @Override public void testFailure(    Failure failure) throws Exception {
      lastTest='F';
      System.out.println(failure.getMessage());
    }
    @Override public void testFinished(    Description description) throws Exception {
      results.append(lastTest);
    }
  }
);
  Result result=core.run(Nested2.class);
  if (Nested2.die != null) {
    Nested2.die.countDown();
    Nested2.zombie.join();
  }
  super.prevSysOut.println(results.toString());
  Assert.assertEquals(Nested2.TOTAL_ITERS,result.getRunCount());
  Assert.assertEquals(results.toString(),"SFAAAAAAAA",results.toString());
}
