{
  ScoreDoc[] scoreDocs=new ScoreDoc[documents.size()];
  int j=0;
  for (  NamedList<Object> document : documents) {
    Object docId=document.get("id");
    if (docId != null) {
      docId=docId.toString();
    }
 else {
      log.error("doc {} has null 'id'",document);
    }
    Float score=(Float)document.get("score");
    if (score == null) {
      score=Float.NaN;
    }
    Object[] sortValues=null;
    Object sortValuesVal=document.get("sortValues");
    if (sortValuesVal != null) {
      sortValues=((List)sortValuesVal).toArray();
      for (int k=0; k < sortValues.length; k++) {
        SchemaField field=groupSort.getSort()[k].getField() != null ? schema.getFieldOrNull(groupSort.getSort()[k].getField()) : null;
        if (field != null) {
          FieldType fieldType=field.getType();
          if (sortValues[k] != null) {
            sortValues[k]=fieldType.unmarshalSortValue(sortValues[k]);
          }
        }
      }
    }
 else {
      log.debug("doc {} has null 'sortValues'",document);
    }
    scoreDocs[j++]=new ShardDoc(score,sortValues,docId,shard);
  }
  return scoreDocs;
}
