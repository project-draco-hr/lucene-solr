{
  LRUCache<Object,Object> lruCache=new LRUCache<Object,Object>();
  Map<String,String> params=new HashMap<String,String>();
  params.put("size",String.valueOf(limit));
  params.put("initialSize","10");
  params.put("autowarmCount",percentage + "%");
  CacheRegenerator cr=new NoOpRegenerator();
  Object o=lruCache.init(params,null,cr);
  lruCache.setState(SolrCache.State.LIVE);
  for (int i=1; i <= limit; i++) {
    lruCache.put(i,"" + i);
  }
  LRUCache<Object,Object> lruCacheNew=new LRUCache<Object,Object>();
  lruCacheNew.init(params,o,cr);
  lruCacheNew.warm(null,lruCache);
  lruCacheNew.setState(SolrCache.State.LIVE);
  lruCache.close();
  for (  int hit : hits) {
    assertEquals("The value " + hit + " should be on new cache",String.valueOf(hit),lruCacheNew.get(hit));
  }
  for (  int miss : misses) {
    assertEquals("The value " + miss + " should NOT be on new cache",null,lruCacheNew.get(miss));
  }
  lruCacheNew.close();
}
