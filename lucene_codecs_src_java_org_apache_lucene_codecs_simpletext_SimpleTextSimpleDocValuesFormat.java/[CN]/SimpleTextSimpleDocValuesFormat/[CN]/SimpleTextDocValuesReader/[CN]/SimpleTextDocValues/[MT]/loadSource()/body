{
  DocValues.Type dvType=field.fieldInfo.getDocValuesType();
  if (DocValues.isNumber(dvType)) {
    Source source=loadDirectSource();
    long[] values=new long[maxDoc];
    for (int docID=0; docID < maxDoc; docID++) {
      values[docID]=source.getInt(docID);
    }
    return DocValuesArraySource.forType(DocValues.Type.FIXED_INTS_64).newFromArray(values);
  }
 else   if (DocValues.isBytes(dvType)) {
    Source source=loadDirectSource();
    final byte[][] values=new byte[maxDoc][];
    for (int docID=0; docID < maxDoc; docID++) {
      BytesRef value=source.getBytes(docID,null);
      byte[] bytes=new byte[value.length];
      System.arraycopy(value.bytes,value.offset,bytes,0,value.length);
      values[docID]=bytes;
    }
    return new Source(dvType){
      @Override public BytesRef getBytes(      int docID,      BytesRef result){
        result.bytes=values[docID];
        result.offset=0;
        result.length=result.bytes.length;
        return result;
      }
    }
;
  }
 else   if (DocValues.isSortedBytes(dvType)) {
    SortedSource source=(SortedSource)loadDirectSource();
    final byte[][] values=new byte[field.numValues][];
    BytesRef scratch=new BytesRef();
    for (int ord=0; ord < field.numValues; ord++) {
      source.getByOrd(ord,scratch);
      values[ord]=new byte[scratch.length];
      System.arraycopy(scratch.bytes,scratch.offset,values[ord],0,scratch.length);
    }
    final int[] ords=new int[maxDoc];
    for (int docID=0; docID < maxDoc; docID++) {
      ords[docID]=source.ord(docID);
    }
    return new SortedSource(dvType,BytesRef.getUTF8SortedAsUnicodeComparator()){
      @Override public int ord(      int docID){
        return ords[docID];
      }
      @Override public BytesRef getByOrd(      int ord,      BytesRef result){
        result.bytes=values[ord];
        result.offset=0;
        result.length=result.bytes.length;
        return result;
      }
      @Override public int getValueCount(){
        return field.numValues;
      }
      @Override public PackedInts.Reader getDocToOrd(){
        return null;
      }
    }
;
  }
 else   if (DocValues.isFloat(dvType)) {
    return null;
  }
 else {
    throw new AssertionError();
  }
}
