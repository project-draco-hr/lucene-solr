{
  double overSampleFactor=getSamplingParams().getOversampleFactor();
  if (overSampleFactor <= 1) {
    return facetResult;
  }
  OverSampledFacetRequest sampledFreq=null;
  try {
    sampledFreq=(OverSampledFacetRequest)facetResult.getFacetRequest();
  }
 catch (  ClassCastException e) {
    throw new IllegalArgumentException("It is only valid to call this method with result obtained for a " + "facet request created through sampler.overSamlpingSearchParams()",e);
  }
  FacetRequest origFrq=sampledFreq.orig;
  MutableFacetResultNode trimmedRootNode=MutableFacetResultNode.toImpl(facetResult.getFacetResultNode());
  trimmedRootNode.trimSubResults(origFrq.getNumResults());
  return new FacetResult(origFrq,trimmedRootNode,facetResult.getNumValidDescendants());
}
