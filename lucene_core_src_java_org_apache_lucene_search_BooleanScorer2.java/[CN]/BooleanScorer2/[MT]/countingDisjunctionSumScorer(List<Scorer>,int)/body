{
  if (minNrShouldMatch > 1) {
    return new MinShouldMatchSumScorer(weight,scorers,minNrShouldMatch){
      @Override public float score() throws IOException {
        coordinator.nrMatchers+=super.nrMatchers;
        return super.score();
      }
    }
;
  }
 else {
    return new DisjunctionSumScorer(weight,scorers.toArray(new Scorer[scorers.size()]),null){
      @Override public float score() throws IOException {
        coordinator.nrMatchers+=super.nrMatchers;
        return (float)super.score;
      }
    }
;
  }
}
