{
  Evaluator dateFormatEval=new DateFormatEvaluator();
  ContextImpl context=new ContextImpl(null,resolver,null,Context.FULL_DUMP,Collections.<String,Object>emptyMap(),null,null);
  String currentLocale=Locale.getDefault().toString();
{
{
      SimpleDateFormat sdfDate=new SimpleDateFormat("yyyy-MM-dd HH",Locale.ROOT);
      String sdf=sdfDate.format(getNow());
      String dfe=dateFormatEval.evaluate("'NOW-2DAYS','yyyy-MM-dd HH'",context);
      assertEquals(sdf,dfe);
    }
{
      SimpleDateFormat sdfDate=new SimpleDateFormat("yyyy-MM-dd HH",Locale.getDefault());
      String sdf=sdfDate.format(getNow());
      String dfe=dateFormatEval.evaluate("'NOW-2DAYS','yyyy-MM-dd HH','" + currentLocale + "'",context);
      assertEquals(sdf,dfe);
      for (      String tz : TimeZone.getAvailableIDs()) {
        sdfDate.setTimeZone(TimeZone.getTimeZone(tz));
        sdf=sdfDate.format(getNow());
        dfe=dateFormatEval.evaluate("'NOW-2DAYS','yyyy-MM-dd HH','" + currentLocale + "','"+ tz+ "'",context);
        assertEquals(sdf,dfe);
      }
    }
  }
  Date d=new Date();
  Map<String,Object> map=new HashMap<String,Object>();
  map.put("key",d);
  resolver.addNamespace("A",map);
  assertEquals(new SimpleDateFormat("yyyy-MM-dd HH:mm",Locale.ROOT).format(d),dateFormatEval.evaluate("A.key, 'yyyy-MM-dd HH:mm'",context));
  assertEquals(new SimpleDateFormat("yyyy-MM-dd HH:mm",Locale.getDefault()).format(d),dateFormatEval.evaluate("A.key, 'yyyy-MM-dd HH:mm','" + currentLocale + "'",context));
  SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm",Locale.getDefault());
  for (  String tz : TimeZone.getAvailableIDs()) {
    sdf.setTimeZone(TimeZone.getTimeZone(tz));
    assertEquals(sdf.format(d),dateFormatEval.evaluate("A.key, 'yyyy-MM-dd HH:mm','" + currentLocale + "', '"+ tz+ "'",context));
  }
}
