{
  final String TEXT="the fox did not jump";
  final Directory directory=newDirectory();
  final IndexWriter indexWriter=new IndexWriter(directory,newIndexWriterConfig(null));
  try {
    final Document document=new Document();
    FieldType customType=new FieldType(TextField.TYPE_NOT_STORED);
    customType.setStoreTermVectors(true);
    customType.setStoreTermVectorOffsets(true);
    document.add(new Field(FIELD,new OverlappingTokenStream(),customType));
    indexWriter.addDocument(document);
  }
  finally {
    indexWriter.close();
  }
  final IndexReader indexReader=DirectoryReader.open(directory);
  try {
    assertEquals(1,indexReader.numDocs());
    final IndexSearcher indexSearcher=newSearcher(indexReader);
    final Query phraseQuery=new SpanNearQuery(new SpanQuery[]{new SpanTermQuery(new Term(FIELD,"the")),new SpanTermQuery(new Term(FIELD,"fox"))},0,true);
    TopDocs hits=indexSearcher.search(phraseQuery,1);
    assertEquals(1,hits.totalHits);
    final Highlighter highlighter=new Highlighter(new SimpleHTMLFormatter(),new SimpleHTMLEncoder(),new QueryScorer(phraseQuery));
    final TokenStream tokenStream=TokenSources.getTermVectorTokenStreamOrNull(FIELD,indexReader.getTermVectors(0),-1);
    assertEquals("<B>the fox</B> did not jump",highlighter.getBestFragment(tokenStream,TEXT));
  }
  finally {
    indexReader.close();
    directory.close();
  }
}
