{
  TermFreqPayload keys[]=new TermFreqPayload[]{new TermFreqPayload("a penny saved is a penny earned",10,new BytesRef("foobaz"))};
  File tempDir=_TestUtil.getTempDir("AnalyzingInfixSuggesterTest");
  Analyzer a=new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false);
  AnalyzingInfixSuggester suggester=new AnalyzingInfixSuggester(TEST_VERSION_CURRENT,tempDir,a,a,3);
  suggester.build(new TermFreqPayloadArrayIterator(keys));
  List<LookupResult> results=suggester.lookup(_TestUtil.stringToCharSequence("penn",random()),10,true,true);
  assertEquals(1,results.size());
  assertEquals("a <b>penn</b>y saved is a <b>penn</b>y earned",results.get(0).key);
  suggester.close();
}
