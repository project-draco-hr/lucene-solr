{
  TermFreqPayload keys[]=new TermFreqPayload[]{new TermFreqPayload("lend me your ear",8,new BytesRef("foobar")),new TermFreqPayload("a penny saved is a penny earned",10,new BytesRef("foobaz"))};
  File tempDir=_TestUtil.getTempDir("AnalyzingInfixSuggesterTest");
  Analyzer a=new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false);
  AnalyzingInfixSuggester suggester=new AnalyzingInfixSuggester(TEST_VERSION_CURRENT,tempDir,a,a,3);
  suggester.build(new TermFreqPayloadArrayIterator(keys));
  suggester.close();
  suggester=new AnalyzingInfixSuggester(TEST_VERSION_CURRENT,tempDir,a,a,3);
  List<LookupResult> results=suggester.lookup(_TestUtil.stringToCharSequence("ear",random()),10,true,true);
  assertEquals(2,results.size());
  assertEquals("a penny saved is a penny <b>ear</b>ned",results.get(0).key);
  assertEquals(10,results.get(0).value);
  assertEquals(new BytesRef("foobaz"),results.get(0).payload);
  suggester.close();
}
