{
  File tempDir=TestUtil.getTempDir("AnalyzingInfixSuggesterTest");
  Analyzer a=new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false);
  AnalyzingInfixSuggester suggester=new AnalyzingInfixSuggester(TEST_VERSION_CURRENT,tempDir,a,a,3){
    @Override protected Directory getDirectory(    File path){
      return newDirectory();
    }
  }
;
  suggester.build(new InputArrayIterator(new Input[0]));
  suggester.add(new BytesRef("the pen is pretty"),10,new BytesRef("foobaz"));
  suggester.refresh();
  List<LookupResult> results=suggester.lookup(TestUtil.stringToCharSequence("pen p",random()),10,true,true);
  assertEquals(1,results.size());
  assertEquals("the <b>pen</b> is <b>p</b>retty",results.get(0).key);
  assertEquals(10,results.get(0).value);
  assertEquals(new BytesRef("foobaz"),results.get(0).payload);
  suggester.close();
}
