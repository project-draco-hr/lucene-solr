{
  boolean deletionsUpToDate=(this.si.hasDeletions() == si.hasDeletions()) && (!si.hasDeletions() || this.si.getDelFileName().equals(si.getDelFileName()));
  boolean normsUpToDate=true;
  boolean[] fieldNormsChanged=new boolean[fieldInfos.size()];
  final int fieldCount=fieldInfos.size();
  for (int i=0; i < fieldCount; i++) {
    if (!this.si.getNormFileName(i).equals(si.getNormFileName(i))) {
      normsUpToDate=false;
      fieldNormsChanged[i]=true;
    }
  }
  if (normsUpToDate && deletionsUpToDate && !doClone&& openReadOnly == readOnly) {
    return this;
  }
  SegmentReader clone;
  try {
    if (openReadOnly)     clone=(SegmentReader)READONLY_IMPL.newInstance();
 else     clone=(SegmentReader)IMPL.newInstance();
  }
 catch (  Exception e) {
    throw new RuntimeException("cannot load SegmentReader class: " + e,e);
  }
  boolean success=false;
  try {
    clone.readOnly=openReadOnly;
    clone.directory=directory;
    clone.si=si;
    clone.segment=segment;
    clone.readBufferSize=readBufferSize;
    clone.cfsReader=cfsReader;
    clone.storeCFSReader=storeCFSReader;
    clone.fieldInfos=fieldInfos;
    clone.tis=tis;
    clone.freqStream=freqStream;
    clone.proxStream=proxStream;
    clone.termVectorsReaderOrig=termVectorsReaderOrig;
    if (fieldsReaderOrig != null) {
      clone.fieldsReaderOrig=(FieldsReader)fieldsReaderOrig.clone();
    }
    if (deletedDocsRef != null) {
      deletedDocsRef.incRef();
    }
    if (doClone) {
      clone.deletedDocs=deletedDocs;
      clone.deletedDocsRef=deletedDocsRef;
    }
 else {
      if (!deletionsUpToDate) {
        clone.deletedDocs=null;
        clone.deletedDocsRef=null;
        clone.loadDeletedDocs();
      }
 else {
        clone.deletedDocs=deletedDocs;
        clone.deletedDocsRef=deletedDocsRef;
      }
    }
    clone.norms=new HashMap();
    for (int i=0; i < fieldNormsChanged.length; i++) {
      if (doClone || !fieldNormsChanged[i]) {
        final String curField=fieldInfos.fieldInfo(i).name;
        Norm norm=(Norm)this.norms.get(curField);
        if (norm != null)         clone.norms.put(curField,norm.clone());
      }
    }
    clone.openNorms(si.getUseCompoundFile() ? cfsReader : directory(),readBufferSize);
    success=true;
  }
  finally {
    if (this.referencedSegmentReader != null) {
      clone.referencedSegmentReader=this.referencedSegmentReader;
    }
 else {
      clone.referencedSegmentReader=this;
    }
    clone.referencedSegmentReader.incRefReaderNotNorms();
    if (!success) {
      clone.decRef();
    }
  }
  return clone;
}
