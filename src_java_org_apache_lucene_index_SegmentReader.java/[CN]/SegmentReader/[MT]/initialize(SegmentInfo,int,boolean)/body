{
  segment=si.name;
  this.si=si;
  this.readBufferSize=readBufferSize;
  boolean success=false;
  try {
    Directory cfsDir=directory();
    if (si.getUseCompoundFile()) {
      cfsReader=new CompoundFileReader(directory(),segment + "." + IndexFileNames.COMPOUND_FILE_EXTENSION,readBufferSize);
      cfsDir=cfsReader;
    }
    final Directory storeDir;
    if (doOpenStores) {
      if (si.getDocStoreOffset() != -1) {
        if (si.getDocStoreIsCompoundFile()) {
          storeCFSReader=new CompoundFileReader(directory(),si.getDocStoreSegment() + "." + IndexFileNames.COMPOUND_FILE_STORE_EXTENSION,readBufferSize);
          storeDir=storeCFSReader;
        }
 else {
          storeDir=directory();
        }
      }
 else {
        storeDir=cfsDir;
      }
    }
 else     storeDir=null;
    fieldInfos=new FieldInfos(cfsDir,segment + ".fnm");
    boolean anyProx=false;
    final int numFields=fieldInfos.size();
    for (int i=0; !anyProx && i < numFields; i++)     if (!fieldInfos.fieldInfo(i).omitTf)     anyProx=true;
    final String fieldsSegment;
    if (si.getDocStoreOffset() != -1)     fieldsSegment=si.getDocStoreSegment();
 else     fieldsSegment=segment;
    if (doOpenStores) {
      fieldsReader=new FieldsReader(storeDir,fieldsSegment,fieldInfos,readBufferSize,si.getDocStoreOffset(),si.docCount);
      if (si.getDocStoreOffset() == -1 && fieldsReader.size() != si.docCount) {
        throw new CorruptIndexException("doc counts differ for segment " + si.name + ": fieldsReader shows "+ fieldsReader.size()+ " but segmentInfo shows "+ si.docCount);
      }
    }
    tis=new TermInfosReader(cfsDir,segment,fieldInfos,readBufferSize);
    loadDeletedDocs();
    freqStream=cfsDir.openInput(segment + ".frq",readBufferSize);
    if (anyProx)     proxStream=cfsDir.openInput(segment + ".prx",readBufferSize);
    openNorms(cfsDir,readBufferSize);
    if (doOpenStores && fieldInfos.hasVectors()) {
      final String vectorsSegment;
      if (si.getDocStoreOffset() != -1)       vectorsSegment=si.getDocStoreSegment();
 else       vectorsSegment=segment;
      termVectorsReaderOrig=new TermVectorsReader(storeDir,vectorsSegment,fieldInfos,readBufferSize,si.getDocStoreOffset(),si.docCount);
    }
    success=true;
  }
  finally {
    if (!success) {
      doClose();
    }
  }
}
