{
  segment=si.name;
  this.si=si;
  this.readBufferSize=readBufferSize;
  boolean success=false;
  try {
    Directory cfsDir=directory();
    if (si.getUseCompoundFile()) {
      cfsReader=new CompoundFileReader(directory(),segment + "." + IndexFileNames.COMPOUND_FILE_EXTENSION,readBufferSize);
      cfsDir=cfsReader;
    }
    fieldInfos=new FieldInfos(cfsDir,segment + ".fnm");
    if (doOpenStores) {
      openDocStores();
    }
    boolean anyProx=false;
    final int numFields=fieldInfos.size();
    for (int i=0; !anyProx && i < numFields; i++)     if (!fieldInfos.fieldInfo(i).omitTermFreqAndPositions)     anyProx=true;
    tis=new TermInfosReader(cfsDir,segment,fieldInfos,readBufferSize);
    loadDeletedDocs();
    freqStream=cfsDir.openInput(segment + ".frq",readBufferSize);
    if (anyProx)     proxStream=cfsDir.openInput(segment + ".prx",readBufferSize);
    openNorms(cfsDir,readBufferSize);
    success=true;
  }
  finally {
    if (!success) {
      doClose();
    }
  }
}
