{
  long nextNormSeek=SegmentMerger.NORMS_HEADER.length;
  int maxDoc=maxDoc();
  for (int i=0; i < fieldInfos.size(); i++) {
    FieldInfo fi=fieldInfos.fieldInfo(i);
    if (fi.isIndexed && !fi.omitNorms) {
      Directory d=directory();
      String fileName=si.getNormFileName(fi.number);
      if (!si.hasSeparateNorms(fi.number)) {
        d=cfsDir;
      }
      boolean singleNormFile=fileName.endsWith("." + IndexFileNames.NORMS_EXTENSION);
      IndexInput normInput=null;
      long normSeek;
      if (singleNormFile) {
        normSeek=nextNormSeek;
        if (singleNormStream == null) {
          singleNormStream=d.openInput(fileName);
        }
        normInput=singleNormStream;
      }
 else {
        normSeek=0;
        normInput=d.openInput(fileName);
      }
      norms.put(fi.name,new Norm(normInput,fi.number,normSeek));
      nextNormSeek+=maxDoc;
    }
  }
}
