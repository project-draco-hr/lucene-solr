{
  if (crashed)   throw new IOException("cannot createOutput after crash");
  init();
synchronized (openFiles) {
    if (preventDoubleWrite && createdFiles.contains(name) && !name.equals("segments.gen"))     throw new IOException("file \"" + name + "\" was already written to");
    if (noDeleteOpenFile && openFiles.containsKey(name))     throw new IOException("MockRAMDirectory: file \"" + name + "\" is still open: cannot overwrite");
  }
  RAMFile file=new RAMFile(this);
synchronized (this) {
    if (crashed)     throw new IOException("cannot createOutput after crash");
    unSyncedFiles.add(name);
    createdFiles.add(name);
    RAMFile existing=(RAMFile)fileMap.get(name);
    if (existing != null && !name.equals("segments.gen"))     throw new IOException("file " + name + " already exists");
 else {
      if (existing != null) {
        sizeInBytes-=existing.sizeInBytes;
        existing.directory=null;
      }
      fileMap.put(name,file);
    }
  }
  return new MockRAMOutputStream(this,file,name);
}
