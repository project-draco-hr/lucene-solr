{
  String body1="AMANAPLANPANAMA";
  String body2="qwertasdfgzxcvb";
  String body3="1234567890";
  SolrCore core=h.getCore();
  Map<String,String[]> args=new HashMap<String,String[]>();
  args.put(CommonParams.STREAM_BODY,new String[]{body1});
  List<ContentStream> streams=new ArrayList<ContentStream>();
  SolrQueryRequest req=parser.buildRequestFrom(core,new MultiMapSolrParams(args),streams);
  assertEquals(1,streams.size());
  assertEquals(body1,IOUtils.toString(streams.get(0).getStream()));
  req.close();
  streams=new ArrayList<ContentStream>();
  args.put(CommonParams.STREAM_BODY,new String[]{body1,body2,body3});
  req=parser.buildRequestFrom(core,new MultiMapSolrParams(args),streams);
  assertEquals(3,streams.size());
  ArrayList<String> input=new ArrayList<String>();
  ArrayList<String> output=new ArrayList<String>();
  input.add(body1);
  input.add(body2);
  input.add(body3);
  output.add(IOUtils.toString(streams.get(0).getStream()));
  output.add(IOUtils.toString(streams.get(1).getStream()));
  output.add(IOUtils.toString(streams.get(2).getStream()));
  Collections.sort(input);
  Collections.sort(output);
  assertEquals(input.toString(),output.toString());
  req.close();
  String ctype="text/xxx";
  streams=new ArrayList<ContentStream>();
  args.put(CommonParams.STREAM_CONTENTTYPE,new String[]{ctype});
  req=parser.buildRequestFrom(core,new MultiMapSolrParams(args),streams);
  for (  ContentStream s : streams) {
    assertEquals(ctype,s.getContentType());
  }
  req.close();
}
