{
  String qpattern="\\'([^\\']+)\\'";
  String[][] tests={{"-1","--","aaa--bbb--ccc","aaa bbb ccc"},{"-1",":","aaa:bbb:ccc","aaa bbb ccc"},{"-1","\\p{Space}","aaa   bbb \t\tccc  ","aaa bbb ccc"},{"-1",":","boo:and:foo","boo and foo"},{"-1","o","boo:and:foo","b :and:f"},{"0",":","boo:and:foo",": :"},{"0",qpattern,"aaa 'bbb' 'ccc'","'bbb' 'ccc'"},{"1",qpattern,"aaa 'bbb' 'ccc'","bbb ccc"}};
  Map<String,String> args=new HashMap<String,String>();
  for (  String[] test : tests) {
    args.put(PatternTokenizerFactory.GROUP,test[0]);
    args.put(PatternTokenizerFactory.PATTERN,test[1]);
    PatternTokenizerFactory tokenizer=new PatternTokenizerFactory();
    tokenizer.init(args);
    TokenStream stream=tokenizer.create(new StringReader(test[2]));
    String out=tsToString(stream);
    assertEquals("pattern: " + test[1] + " with input: "+ test[2],test[3],out);
  }
}
