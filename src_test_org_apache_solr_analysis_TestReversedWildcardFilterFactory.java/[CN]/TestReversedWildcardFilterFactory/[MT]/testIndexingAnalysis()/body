{
  Analyzer a=schema.getAnalyzer();
  String text="one two three";
  String expected1="one \u0001eno two \u0001owt three \u0001eerht";
  List<Token> expectedTokens1=getTokens(new WhitespaceTokenizer(new StringReader(expected1)));
  for (int i=1; i < expectedTokens1.size(); i+=2) {
    Token t=expectedTokens1.get(i);
    t.setPositionIncrement(0);
  }
  String expected2="\u0001eno \u0001owt \u0001eerht";
  List<Token> expectedTokens2=getTokens(new WhitespaceTokenizer(new StringReader(expected2)));
  String expected3="one two three";
  List<Token> expectedTokens3=getTokens(new WhitespaceTokenizer(new StringReader(expected3)));
  TokenStream input=a.tokenStream("one",new StringReader(text));
  List<Token> realTokens=getTokens(input);
  assertTokEqual(realTokens,expectedTokens1);
  input=a.tokenStream("two",new StringReader(text));
  realTokens=getTokens(input);
  assertTokEqual(realTokens,expectedTokens2);
  input=a.tokenStream("three",new StringReader(text));
  realTokens=getTokens(input);
  assertTokEqual(realTokens,expectedTokens3);
}
