{
  if (minSimilarity >= 1.0f)   throw new IllegalArgumentException("minimumSimilarity cannot be greater than or equal to 1");
 else   if (minSimilarity < 0.0f)   throw new IllegalArgumentException("minimumSimilarity cannot be less than 0");
  if (prefixLength < 0)   throw new IllegalArgumentException("prefixLength cannot be less than 0");
  this.reader=reader;
  this.term=term;
  final String utf16=term.text();
  this.termText=new int[utf16.codePointCount(0,utf16.length())];
  for (int cp, i=0, j=0; i < utf16.length(); i+=Character.charCount(cp))   termText[j++]=cp=utf16.codePointAt(i);
  this.termLength=termText.length;
  this.realPrefixLength=prefixLength > termLength ? termLength : prefixLength;
  this.minSimilarity=minSimilarity;
  this.scale_factor=1.0f / (1.0f - minSimilarity);
  maxEdits=initialMaxDistance(minSimilarity,termLength);
  TermsEnum subEnum=getAutomatonEnum(maxEdits,null);
  setEnum(subEnum != null ? subEnum : new LinearFuzzyTermsEnum());
}
