{
  super(reader,term.field());
  if (minSimilarity >= 1.0f)   throw new IllegalArgumentException("minimumSimilarity cannot be greater than or equal to 1");
 else   if (minSimilarity < 0.0f)   throw new IllegalArgumentException("minimumSimilarity cannot be less than 0");
  if (prefixLength < 0)   throw new IllegalArgumentException("prefixLength cannot be less than 0");
  this.minimumSimilarity=minSimilarity;
  this.scale_factor=1.0f / (1.0f - minimumSimilarity);
  final int fullSearchTermLength=term.text().length();
  final int realPrefixLength=prefixLength > fullSearchTermLength ? fullSearchTermLength : prefixLength;
  this.text=term.text().substring(realPrefixLength).toCharArray();
  final String prefix=term.text().substring(0,realPrefixLength);
  prefixBytesRef=new BytesRef(prefix);
  prefixLen=prefix.length();
  initializeMaxDistances();
  this.d=initDistanceArray();
  setInitialSeekTerm(prefixBytesRef);
}
