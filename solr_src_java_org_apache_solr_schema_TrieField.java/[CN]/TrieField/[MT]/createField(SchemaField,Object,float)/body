{
  TrieFieldHelper.FieldInfo info=new TrieFieldHelper.FieldInfo();
  info.index=field.indexed();
  info.store=field.stored();
  info.precisionStep=precisionStep;
  info.omitNorms=field.omitNorms();
  info.omitTF=field.omitTf();
  if (!info.index && !info.store) {
    if (log.isTraceEnabled())     log.trace("Ignoring unindexed/unstored field: " + field);
    return null;
  }
switch (type) {
case INTEGER:
    int i=(value instanceof Number) ? ((Number)value).intValue() : Integer.parseInt(value.toString());
  return TrieFieldHelper.createIntField(field.getName(),i,info,boost);
case FLOAT:
float f=(value instanceof Number) ? ((Number)value).floatValue() : Float.parseFloat(value.toString());
return TrieFieldHelper.createFloatField(field.getName(),f,info,boost);
case LONG:
long l=(value instanceof Number) ? ((Number)value).longValue() : Long.parseLong(value.toString());
return TrieFieldHelper.createLongField(field.getName(),l,info,boost);
case DOUBLE:
double d=(value instanceof Number) ? ((Number)value).doubleValue() : Double.parseDouble(value.toString());
return TrieFieldHelper.createDoubleField(field.getName(),d,info,boost);
case DATE:
Date date=(value instanceof Date) ? ((Date)value) : dateField.parseMath(null,value.toString());
return TrieFieldHelper.createDateField(field.getName(),date,info,boost);
default :
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unknown type for trie field: " + type);
}
}
