{
  boolean indexed=field.indexed();
  boolean stored=field.stored();
  if (!indexed && !stored) {
    if (log.isTraceEnabled())     log.trace("Ignoring unindexed/unstored field: " + field);
    return null;
  }
  int ps=precisionStep;
  byte[] arr=null;
  TokenStream ts=null;
switch (type) {
case INTEGER:
    int i=Integer.parseInt(externalVal);
  if (stored)   arr=toArr(i);
if (indexed) ts=new NumericTokenStream(ps).setIntValue(i);
break;
case FLOAT:
float f=Float.parseFloat(externalVal);
if (stored) arr=toArr(f);
if (indexed) ts=new NumericTokenStream(ps).setFloatValue(f);
break;
case LONG:
long l=Long.parseLong(externalVal);
if (stored) arr=toArr(l);
if (indexed) ts=new NumericTokenStream(ps).setLongValue(l);
break;
case DOUBLE:
double d=Double.parseDouble(externalVal);
if (stored) arr=toArr(d);
if (indexed) ts=new NumericTokenStream(ps).setDoubleValue(d);
break;
case DATE:
long time=dateField.parseMath(null,externalVal).getTime();
if (stored) arr=toArr(time);
if (indexed) ts=new NumericTokenStream(ps).setLongValue(time);
break;
default :
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unknown type for trie field: " + type);
}
Field f;
if (stored) {
f=new Field(field.getName(),arr);
if (indexed) f.setTokenStream(ts);
}
 else {
f=new Field(field.getName(),ts);
}
f.setOmitNorms(field.omitNorms());
f.setOmitTermFreqAndPositions(field.omitTf());
f.setBoost(boost);
return f;
}
