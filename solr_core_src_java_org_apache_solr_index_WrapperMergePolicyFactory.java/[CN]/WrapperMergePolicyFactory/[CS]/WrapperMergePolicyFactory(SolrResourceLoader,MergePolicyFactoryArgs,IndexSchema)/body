{
  super(resourceLoader,args,schema);
  wrappedMergePolicyArgs=filterWrappedMergePolicyFactoryArgs();
  if (wrappedMergePolicyArgs == null) {
    wrappedMergePolicyClassName=null;
  }
 else {
    wrappedMergePolicyClassName=(String)wrappedMergePolicyArgs.remove(CLASS);
    if (wrappedMergePolicyClassName == null) {
      throw new IllegalArgumentException("Class name not defined for wrapped MergePolicyFactory!");
    }
  }
  if (wrappedMergePolicyArgs != null) {
    final Set<String> overshadowedWrappedMergePolicyArgs=new HashSet<>(wrappedMergePolicyArgs.keys());
    overshadowedWrappedMergePolicyArgs.retainAll(args.keys());
    if (!overshadowedWrappedMergePolicyArgs.isEmpty()) {
      throw new IllegalArgumentException("Wrapping and wrapped merge policy args overlap! " + overshadowedWrappedMergePolicyArgs);
    }
  }
}
