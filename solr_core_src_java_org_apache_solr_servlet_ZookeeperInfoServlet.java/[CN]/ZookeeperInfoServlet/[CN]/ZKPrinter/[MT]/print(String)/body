{
  if (zkClient == null) {
    return;
  }
  if (path == null) {
    path="/";
  }
 else {
    path.trim();
    if (path.length() == 0) {
      path="/";
    }
  }
  if (path.endsWith("/") && path.length() > 1) {
    path=path.substring(0,path.length() - 1);
  }
  int idx=path.lastIndexOf('/');
  String parent=idx >= 0 ? path.substring(0,idx) : path;
  if (parent.length() == 0) {
    parent="/";
  }
  CharArr chars=new CharArr();
  JSONWriter json=new JSONWriter(chars,2);
  json.startObject();
  if (detail) {
    if (!printZnode(json,path)) {
      return;
    }
    json.writeValueSeparator();
  }
  json.writeString("tree");
  json.writeNameSeparator();
  json.startArray();
  if (!printTree(json,path)) {
    return;
  }
  json.endArray();
  json.endObject();
  out.println(chars.toString());
}
