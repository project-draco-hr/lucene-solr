{
  CharacterRunAutomaton stopWords=new CharacterRunAutomaton(BasicAutomata.makeString("on"));
  Analyzer oneStopAnalyzer=new MockAnalyzer(MockTokenizer.SIMPLE,true,stopWords,true);
  QueryParser qp=new QueryParser(TEST_VERSION_CURRENT,"field",oneStopAnalyzer);
  Query q=qp.parse("on^1.0");
  assertNotNull(q);
  q=qp.parse("\"hello\"^2.0");
  assertNotNull(q);
  assertEquals(q.getBoost(),(float)2.0,(float)0.5);
  q=qp.parse("hello^2.0");
  assertNotNull(q);
  assertEquals(q.getBoost(),(float)2.0,(float)0.5);
  q=qp.parse("\"on\"^1.0");
  assertNotNull(q);
  QueryParser qp2=new QueryParser(TEST_VERSION_CURRENT,"field",new MockAnalyzer(MockTokenizer.SIMPLE,true,MockTokenFilter.ENGLISH_STOPSET,true));
  q=qp2.parse("the^3");
  assertNotNull(q);
  assertEquals("",q.toString());
  assertEquals(1.0f,q.getBoost(),0.01f);
}
