{
  Directory dir=newDirectory();
  if (dir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)dir).setEnableVirusScanner(false);
  }
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(10));
  for (int i=0; i < 14; i++) {
    TestIndexWriter.addDoc(writer);
  }
  writer.close();
  Term searchTerm=new Term("content","aaa");
  IndexReader reader=DirectoryReader.open(dir);
  IndexSearcher searcher=newSearcher(reader);
  ScoreDoc[] hits=searcher.search(new TermQuery(searchTerm),1000).scoreDocs;
  assertEquals("first number of hits",14,hits.length);
  reader.close();
  writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(10));
  for (int j=0; j < 17; j++) {
    TestIndexWriter.addDoc(writer);
  }
  writer.deleteDocuments(searchTerm);
  reader=DirectoryReader.open(dir);
  searcher=newSearcher(reader);
  hits=searcher.search(new TermQuery(searchTerm),1000).scoreDocs;
  assertEquals("reader incorrectly sees changes from writer",14,hits.length);
  reader.close();
  writer.rollback();
  TestIndexWriter.assertNoUnreferencedFiles(dir,"unreferenced files remain after rollback()");
  reader=DirectoryReader.open(dir);
  searcher=newSearcher(reader);
  hits=searcher.search(new TermQuery(searchTerm),1000).scoreDocs;
  assertEquals("saw changes after writer.abort",14,hits.length);
  reader.close();
  writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(10));
  if (dir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)dir).setPreventDoubleWrite(false);
  }
  for (int i=0; i < 12; i++) {
    for (int j=0; j < 17; j++) {
      TestIndexWriter.addDoc(writer);
    }
    IndexReader r=DirectoryReader.open(dir);
    searcher=newSearcher(r);
    hits=searcher.search(new TermQuery(searchTerm),1000).scoreDocs;
    assertEquals("reader incorrectly sees changes from writer",14,hits.length);
    r.close();
  }
  writer.close();
  IndexReader r=DirectoryReader.open(dir);
  searcher=newSearcher(r);
  hits=searcher.search(new TermQuery(searchTerm),1000).scoreDocs;
  assertEquals("didn't see changes after close",218,hits.length);
  r.close();
  dir.close();
}
