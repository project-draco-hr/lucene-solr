{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())));
  for (int i=0; i < 14; i++) {
    TestIndexWriter.addDoc(writer);
  }
  writer.close();
  Term searchTerm=new Term("content","aaa");
  DirectoryReader reader=DirectoryReader.open(dir);
  IndexSearcher searcher=new IndexSearcher(reader);
  ScoreDoc[] hits=searcher.search(new TermQuery(searchTerm),null,1000).scoreDocs;
  assertEquals("first number of hits",14,hits.length);
  reader.close();
  reader=DirectoryReader.open(dir);
  writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())));
  for (int i=0; i < 3; i++) {
    for (int j=0; j < 11; j++) {
      TestIndexWriter.addDoc(writer);
    }
    IndexReader r=DirectoryReader.open(dir);
    searcher=new IndexSearcher(r);
    hits=searcher.search(new TermQuery(searchTerm),null,1000).scoreDocs;
    assertEquals("reader incorrectly sees changes from writer",14,hits.length);
    r.close();
    assertTrue("reader should have still been current",reader.isCurrent());
  }
  writer.close();
  assertFalse("reader should not be current now",reader.isCurrent());
  IndexReader r=DirectoryReader.open(dir);
  searcher=new IndexSearcher(r);
  hits=searcher.search(new TermQuery(searchTerm),null,1000).scoreDocs;
  assertEquals("reader did not see changes after writer was closed",47,hits.length);
  r.close();
  reader.close();
  dir.close();
}
