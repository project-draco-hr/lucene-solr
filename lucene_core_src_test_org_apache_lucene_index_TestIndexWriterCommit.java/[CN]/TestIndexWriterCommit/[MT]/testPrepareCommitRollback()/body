{
  Directory dir=newDirectory();
  MockDirectoryWrapper mockDir;
  if (dir instanceof MockDirectoryWrapper) {
    mockDir=(MockDirectoryWrapper)dir;
    mockDir.setPreventDoubleWrite(false);
  }
 else {
    mockDir=null;
  }
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(5)));
  writer.commit();
  for (int i=0; i < 23; i++) {
    TestIndexWriter.addDoc(writer);
  }
  DirectoryReader reader=DirectoryReader.open(dir);
  assertEquals(0,reader.numDocs());
  writer.prepareCommit();
  IndexReader reader2=DirectoryReader.open(dir);
  assertEquals(0,reader2.numDocs());
  if (mockDir != null) {
    mockDir.setEnableVirusScanner(false);
  }
  writer.rollback();
  if (mockDir != null) {
    mockDir.setEnableVirusScanner(true);
  }
  IndexReader reader3=DirectoryReader.openIfChanged(reader);
  assertNull(reader3);
  assertEquals(0,reader.numDocs());
  assertEquals(0,reader2.numDocs());
  reader.close();
  reader2.close();
  writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())));
  for (int i=0; i < 17; i++) {
    TestIndexWriter.addDoc(writer);
  }
  reader=DirectoryReader.open(dir);
  assertEquals(0,reader.numDocs());
  reader.close();
  writer.prepareCommit();
  reader=DirectoryReader.open(dir);
  assertEquals(0,reader.numDocs());
  reader.close();
  writer.commit();
  reader=DirectoryReader.open(dir);
  assertEquals(17,reader.numDocs());
  reader.close();
  writer.close();
  dir.close();
}
