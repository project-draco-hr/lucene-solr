{
  final int times=atLeast(100);
  for (int i=0; i < times; i++) {
    final double p1Lat=(randomFloat() * 180.0 - 90.0) * DistanceUtils.DEGREES_TO_RADIANS;
    final double p1Lon=(randomFloat() * 360.0 - 180.0) * DistanceUtils.DEGREES_TO_RADIANS;
    final double p2Lat=(randomFloat() * 180.0 - 90.0) * DistanceUtils.DEGREES_TO_RADIANS;
    final double p2Lon=(randomFloat() * 360.0 - 180.0) * DistanceUtils.DEGREES_TO_RADIANS;
    final GeoPoint p1=new GeoPoint(PlanetModel.SPHERE,p1Lat,p1Lon);
    final GeoPoint p2=new GeoPoint(PlanetModel.SPHERE,p2Lat,p2Lon);
    final double arcDistance=p1.arcDistance(p2);
    final double surfaceDistance=PlanetModel.SPHERE.surfaceDistance(p1,p2);
    assertEquals(arcDistance,surfaceDistance,1e-6);
  }
}
