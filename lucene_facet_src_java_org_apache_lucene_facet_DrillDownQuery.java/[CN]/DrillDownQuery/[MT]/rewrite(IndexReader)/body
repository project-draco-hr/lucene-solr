{
  if (query.clauses().size() == 0) {
    return new MatchAllDocsQuery();
  }
  List<Filter> filters=new ArrayList<>();
  List<Query> queries=new ArrayList<>();
  List<BooleanClause> clauses=query.clauses();
  Query baseQuery;
  int startIndex;
  if (drillDownDims.size() == query.clauses().size()) {
    baseQuery=new MatchAllDocsQuery();
    startIndex=0;
  }
 else {
    baseQuery=clauses.get(0).getQuery();
    startIndex=1;
  }
  for (int i=startIndex; i < clauses.size(); i++) {
    BooleanClause clause=clauses.get(i);
    Query queryClause=clause.getQuery();
    Filter filter=getFilter(queryClause);
    if (filter != null) {
      filters.add(filter);
    }
 else {
      queries.add(queryClause);
    }
  }
  if (filters.isEmpty()) {
    return query;
  }
 else {
    Query wrapped;
    if (queries.isEmpty()) {
      wrapped=baseQuery;
    }
 else {
      BooleanQuery wrappedBQ=new BooleanQuery(true);
      if ((baseQuery instanceof MatchAllDocsQuery) == false) {
        wrappedBQ.add(baseQuery,BooleanClause.Occur.MUST);
      }
      for (      Query q : queries) {
        wrappedBQ.add(q,BooleanClause.Occur.MUST);
      }
      wrapped=wrappedBQ;
    }
    for (    Filter filter : filters) {
      wrapped=new FilteredQuery(wrapped,filter,FilteredQuery.QUERY_FIRST_FILTER_STRATEGY);
    }
    return wrapped;
  }
}
