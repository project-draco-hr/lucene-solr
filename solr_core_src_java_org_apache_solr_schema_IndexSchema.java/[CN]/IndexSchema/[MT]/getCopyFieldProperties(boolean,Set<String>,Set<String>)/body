{
  List<SimpleOrderedMap<Object>> copyFieldProperties=new ArrayList<>();
  SortedMap<String,List<CopyField>> sortedCopyFields=new TreeMap<>(copyFieldsMap);
  for (  List<CopyField> copyFields : sortedCopyFields.values()) {
    Collections.sort(copyFields,new Comparator<CopyField>(){
      @Override public int compare(      CopyField cf1,      CopyField cf2){
        return cf1.getDestination().getName().compareTo(cf2.getDestination().getName());
      }
    }
);
    for (    CopyField copyField : copyFields) {
      final String source=copyField.getSource().getName();
      final String destination=copyField.getDestination().getName();
      if ((null == requestedSourceFields || requestedSourceFields.contains(source)) && (null == requestedDestinationFields || requestedDestinationFields.contains(destination))) {
        SimpleOrderedMap<Object> props=new SimpleOrderedMap<>();
        props.add(SOURCE,source);
        props.add(DESTINATION,destination);
        if (0 != copyField.getMaxChars()) {
          props.add(MAX_CHARS,copyField.getMaxChars());
        }
        copyFieldProperties.add(props);
      }
    }
  }
  for (  IndexSchema.DynamicCopy dynamicCopy : dynamicCopyFields) {
    final String source=dynamicCopy.getRegex();
    final String destination=dynamicCopy.getDestFieldName();
    if ((null == requestedSourceFields || requestedSourceFields.contains(source)) && (null == requestedDestinationFields || requestedDestinationFields.contains(destination))) {
      SimpleOrderedMap<Object> dynamicCopyProps=new SimpleOrderedMap<>();
      dynamicCopyProps.add(SOURCE,dynamicCopy.getRegex());
      if (showDetails) {
        IndexSchema.DynamicField sourceDynamicBase=dynamicCopy.getSourceDynamicBase();
        if (null != sourceDynamicBase) {
          dynamicCopyProps.add(SOURCE_DYNAMIC_BASE,sourceDynamicBase.getRegex());
        }
 else         if (source.contains("*")) {
          List<String> sourceExplicitFields=new ArrayList<>();
          Pattern pattern=Pattern.compile(source.replace("*",".*"));
          for (          String field : fields.keySet()) {
            if (pattern.matcher(field).matches()) {
              sourceExplicitFields.add(field);
            }
          }
          if (sourceExplicitFields.size() > 0) {
            Collections.sort(sourceExplicitFields);
            dynamicCopyProps.add(SOURCE_EXPLICIT_FIELDS,sourceExplicitFields);
          }
        }
      }
      dynamicCopyProps.add(DESTINATION,dynamicCopy.getDestFieldName());
      if (showDetails) {
        IndexSchema.DynamicField destDynamicBase=dynamicCopy.getDestDynamicBase();
        if (null != destDynamicBase) {
          dynamicCopyProps.add(DESTINATION_DYNAMIC_BASE,destDynamicBase.getRegex());
        }
      }
      if (0 != dynamicCopy.getMaxChars()) {
        dynamicCopyProps.add(MAX_CHARS,dynamicCopy.getMaxChars());
      }
      copyFieldProperties.add(dynamicCopyProps);
    }
  }
  return copyFieldProperties;
}
