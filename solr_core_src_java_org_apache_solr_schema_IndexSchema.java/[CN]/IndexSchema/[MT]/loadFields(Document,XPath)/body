{
  Map<String,Boolean> explicitRequiredProp=new HashMap<>();
  ArrayList<DynamicField> dFields=new ArrayList<>();
  String expression=stepsToPath(SCHEMA,FIELD) + XPATH_OR + stepsToPath(SCHEMA,DYNAMIC_FIELD)+ XPATH_OR+ stepsToPath(SCHEMA,FIELDS,FIELD)+ XPATH_OR+ stepsToPath(SCHEMA,FIELDS,DYNAMIC_FIELD);
  NodeList nodes=(NodeList)xpath.evaluate(expression,document,XPathConstants.NODESET);
  for (int i=0; i < nodes.getLength(); i++) {
    Node node=nodes.item(i);
    NamedNodeMap attrs=node.getAttributes();
    String name=DOMUtil.getAttr(attrs,NAME,"field definition");
    log.trace("reading field def " + name);
    String type=DOMUtil.getAttr(attrs,TYPE,"field " + name);
    FieldType ft=fieldTypes.get(type);
    if (ft == null) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"Unknown " + FIELD_TYPE + " '"+ type+ "' specified on field "+ name);
    }
    Map<String,String> args=DOMUtil.toMapExcept(attrs,NAME,TYPE);
    if (null != args.get(REQUIRED)) {
      explicitRequiredProp.put(name,Boolean.valueOf(args.get(REQUIRED)));
    }
    SchemaField f=SchemaField.create(name,ft,args);
    if (node.getNodeName().equals(FIELD)) {
      SchemaField old=fields.put(f.getName(),f);
      if (old != null) {
        String msg="[schema.xml] Duplicate field definition for '" + f.getName() + "' [[["+ old.toString()+ "]]] and [[["+ f.toString()+ "]]]";
        throw new SolrException(ErrorCode.SERVER_ERROR,msg);
      }
      log.debug("field defined: " + f);
      if (f.getDefaultValue() != null) {
        log.debug(name + " contains default value: " + f.getDefaultValue());
        fieldsWithDefaultValue.add(f);
      }
      if (f.isRequired()) {
        log.debug(name + " is required in this schema");
        requiredFields.add(f);
      }
    }
 else     if (node.getNodeName().equals(DYNAMIC_FIELD)) {
      if (isValidDynamicField(dFields,f)) {
        addDynamicFieldNoDupCheck(dFields,f);
      }
    }
 else {
      throw new RuntimeException("Unknown field type");
    }
  }
  requiredFields.addAll(fieldsWithDefaultValue);
  dynamicFields=dynamicFieldListToSortedArray(dFields);
  return explicitRequiredProp;
}
