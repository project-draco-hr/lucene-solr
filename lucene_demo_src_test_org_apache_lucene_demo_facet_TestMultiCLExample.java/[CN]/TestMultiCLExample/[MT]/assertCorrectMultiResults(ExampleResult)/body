{
  List<FacetResult> results=exampleResults.getFacetResults();
  FacetResult result=results.get(0);
  assertNotNull("Result should not be null",result);
  FacetResultNode node=result.getFacetResultNode();
  assertEquals("Invalid label","5",node.label.toString());
  assertEquals("Invalid # of subresults",3,node.subResults.size());
  Iterator<? extends FacetResultNode> subResults=node.subResults.iterator();
  FacetResultNode sub=subResults.next();
  assertEquals("Invalid subresult value",1.0,sub.value,0.0);
  assertEquals("Invalid subresult label","5/2",sub.label.toString());
  sub=subResults.next();
  assertEquals("Invalid subresult value",1.0,sub.value,0.0);
  assertEquals("Invalid subresult label","5/7",sub.label.toString());
  sub=subResults.next();
  assertEquals("Invalid subresult value",1.0,sub.value,0.0);
  assertEquals("Invalid subresult label","5/5",sub.label.toString());
  result=results.get(1);
  node=result.getFacetResultNode();
  assertNotNull("Result should not be null",result);
  assertEquals("Invalid label","5/5",node.label.toString());
  assertEquals("Invalid value",1,node.value,0.0);
  assertEquals("Invalid number of subresults",0,node.subResults.size());
  result=results.get(2);
  node=result.getFacetResultNode();
  assertNotNull("Result should not be null",result);
  assertEquals("Invalid label","6/2",node.label.toString());
  assertEquals("Invalid value",1,node.value,0.0);
  assertEquals("Invalid number of subresults",0,node.subResults.size());
}
