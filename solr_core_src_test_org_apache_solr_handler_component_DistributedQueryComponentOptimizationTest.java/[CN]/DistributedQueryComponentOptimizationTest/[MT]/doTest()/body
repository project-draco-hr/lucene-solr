{
  del("*:*");
  index(id,"1","text","a","payload",ByteBuffer.wrap(new byte[]{0x12,0x62,0x15}),"asdfasdf_field_should_match_catchall_dynamic_field_adsfasdf","value");
  index(id,"2","text","b","payload",ByteBuffer.wrap(new byte[]{0x25,0x21,0x16}));
  index(id,"3","text","a","payload",ByteBuffer.wrap(new byte[]{0x35,0x32,0x58}));
  index(id,"4","text","b","payload",ByteBuffer.wrap(new byte[]{0x25,0x21,0x15}));
  index(id,"5","text","a","payload",ByteBuffer.wrap(new byte[]{0x35,0x35,0x10,0x00}));
  index(id,"6","text","c","payload",ByteBuffer.wrap(new byte[]{0x1a,0x2b,0x3c,0x00,0x00,0x03}));
  index(id,"7","text","c","payload",ByteBuffer.wrap(new byte[]{0x00,0x3c,0x73}));
  index(id,"8","text","c","payload",ByteBuffer.wrap(new byte[]{0x59,0x2d,0x4d}));
  index(id,"9","text","a","payload",ByteBuffer.wrap(new byte[]{0x39,0x79,0x7a}));
  index(id,"10","text","b","payload",ByteBuffer.wrap(new byte[]{0x31,0x39,0x7c}));
  index(id,"11","text","d","payload",ByteBuffer.wrap(new byte[]{(byte)0xff,(byte)0xaf,(byte)0x9c}));
  index(id,"12","text","d","payload",ByteBuffer.wrap(new byte[]{0x34,(byte)0xdd,0x4d}));
  index(id,"13","text","d","payload",ByteBuffer.wrap(new byte[]{(byte)0x80,0x11,0x33}));
  commit();
  handle.put("QTime",SKIPVAL);
  QueryResponse rsp;
  rsp=query("q","*:*","fl","id,score","sort","payload asc","rows","20");
  assertFieldValues(rsp.getResults(),id,7,1,6,4,2,10,12,3,5,9,8,13,11);
  rsp=query("q","*:*","fl","id,score","sort","payload desc","rows","20");
  assertFieldValues(rsp.getResults(),id,11,13,8,9,5,3,12,10,2,4,6,1,7);
  rsp=query("q","*:*","fl","id","sort","payload desc","rows","20");
  assertFieldValues(rsp.getResults(),id,11,13,8,9,5,3,12,10,2,4,6,1,7);
}
