{
  this.requestMockControl.expectAndDefaultReturn(this.mockRequest.getMethod(),METHOD_GET);
  this.requestMockControl.expectAndDefaultReturn(this.mockRequest.getHeader(METHOD_HEADER_NAME),METHOD_GET);
  this.requestMockControl.replay();
  try {
    this.servletInstance.service(this.mockRequest,this.mockResponse);
  }
 catch (  ServletException e) {
    fail("ServeltExpception not expected");
  }
catch (  IOException e) {
    fail("IOExpception not expected");
  }
  this.requestMockControl.verify();
  this.requestMockControl.reset();
  this.requestMockControl.expectAndDefaultReturn(this.mockRequest.getMethod(),METHOD_POST);
  this.requestMockControl.expectAndDefaultReturn(this.mockRequest.getHeader(METHOD_HEADER_NAME),METHOD_GET);
  this.requestMockControl.replay();
  try {
    this.servletInstance.service(this.mockRequest,this.mockResponse);
  }
 catch (  ServletException e) {
    fail("ServeltExpception not expected");
  }
catch (  IOException e) {
    fail("IOExpception not expected");
  }
  this.requestMockControl.verify();
}
