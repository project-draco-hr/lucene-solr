{
  RAMDirectory indexStore=new RAMDirectory();
  PerFieldAnalyzerWrapper analyzer=new PerFieldAnalyzerWrapper(new WhitespaceAnalyzer(TEST_VERSION_CURRENT));
  analyzer.addAnalyzer("US",usAnalyzer);
  analyzer.addAnalyzer("France",franceAnalyzer);
  analyzer.addAnalyzer("Sweden",swedenAnalyzer);
  analyzer.addAnalyzer("Denmark",denmarkAnalyzer);
  IndexWriter writer=new IndexWriter(indexStore,new IndexWriterConfig(TEST_VERSION_CURRENT,analyzer));
  String[][] sortData=new String[][]{{"A","x","p\u00EAche","p\u00EAche","p\u00EAche","p\u00EAche"},{"B","y","HAT","HAT","HAT","HAT"},{"C","x","p\u00E9ch\u00E9","p\u00E9ch\u00E9","p\u00E9ch\u00E9","p\u00E9ch\u00E9"},{"D","y","HUT","HUT","HUT","HUT"},{"E","x","peach","peach","peach","peach"},{"F","y","H\u00C5T","H\u00C5T","H\u00C5T","H\u00C5T"},{"G","x","sin","sin","sin","sin"},{"H","y","H\u00D8T","H\u00D8T","H\u00D8T","H\u00D8T"},{"I","x","s\u00EDn","s\u00EDn","s\u00EDn","s\u00EDn"},{"J","y","HOT","HOT","HOT","HOT"}};
  for (int i=0; i < sortData.length; ++i) {
    Document doc=new Document();
    doc.add(new Field("tracer",sortData[i][0],Field.Store.YES,Field.Index.NO));
    doc.add(new Field("contents",sortData[i][1],Field.Store.NO,Field.Index.ANALYZED));
    if (sortData[i][2] != null)     doc.add(new Field("US",sortData[i][2],Field.Store.NO,Field.Index.ANALYZED));
    if (sortData[i][3] != null)     doc.add(new Field("France",sortData[i][3],Field.Store.NO,Field.Index.ANALYZED));
    if (sortData[i][4] != null)     doc.add(new Field("Sweden",sortData[i][4],Field.Store.NO,Field.Index.ANALYZED));
    if (sortData[i][5] != null)     doc.add(new Field("Denmark",sortData[i][5],Field.Store.NO,Field.Index.ANALYZED));
    writer.addDocument(doc);
  }
  writer.optimize();
  writer.close();
  Searcher searcher=new IndexSearcher(indexStore,true);
  Sort sort=new Sort();
  Query queryX=new TermQuery(new Term("contents","x"));
  Query queryY=new TermQuery(new Term("contents","y"));
  sort.setSort(new SortField("US",SortField.STRING));
  assertMatches(searcher,queryY,sort,usResult);
  sort.setSort(new SortField("France",SortField.STRING));
  assertMatches(searcher,queryX,sort,"EACGI");
  sort.setSort(new SortField("Sweden",SortField.STRING));
  assertMatches(searcher,queryY,sort,"BJDFH");
  sort.setSort(new SortField("Denmark",SortField.STRING));
  assertMatches(searcher,queryY,sort,"BJDHF");
}
