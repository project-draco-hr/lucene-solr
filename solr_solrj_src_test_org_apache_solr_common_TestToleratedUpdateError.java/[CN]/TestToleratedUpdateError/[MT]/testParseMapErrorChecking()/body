{
  SimpleOrderedMap<String> bogus=new SimpleOrderedMap<String>();
  try {
    ToleratedUpdateError.parseMap(bogus);
    fail("map should not be parsable");
  }
 catch (  SolrException e) {
    assertTrue(e.toString(),e.getMessage().contains("Map does not represent a ToleratedUpdateError"));
  }
  bogus.add("id","some id");
  bogus.add("message","some message");
  try {
    ToleratedUpdateError.parseMap(bogus);
    fail("map should still not be parsable");
  }
 catch (  SolrException e) {
    assertTrue(e.toString(),e.getMessage().contains("Map does not represent a ToleratedUpdateError"));
  }
  bogus.add("type","not a real type");
  try {
    ToleratedUpdateError.parseMap(bogus);
    fail("invalid type should not be parsable");
  }
 catch (  SolrException e) {
    assertTrue(e.toString(),e.getMessage().contains("Invalid type"));
  }
}
