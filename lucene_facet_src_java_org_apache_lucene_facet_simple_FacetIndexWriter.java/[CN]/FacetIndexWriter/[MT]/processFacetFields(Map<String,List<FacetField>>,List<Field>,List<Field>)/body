{
  for (  Map.Entry<String,List<FacetField>> ent : byField.entrySet()) {
    String indexedFieldName=ent.getKey();
    IntsRef ordinals=new IntsRef(32);
    for (    FacetField facetField : ent.getValue()) {
      FacetsConfig.DimConfig ft=facetsConfig.getDimConfig(facetField.dim);
      if (facetField.path.length > 1 && ft.hierarchical == false) {
        throw new IllegalArgumentException("dimension \"" + facetField.dim + "\" is not hierarchical yet has "+ facetField.path.length+ " components");
      }
      String[] fullPath=new String[facetField.path.length + 1];
      fullPath[0]=facetField.dim;
      System.arraycopy(facetField.path,0,fullPath,1,facetField.path.length);
      CategoryPath cp=new CategoryPath(fullPath);
      int ordinal=taxoWriter.addCategory(cp);
      ordinals.ints[ordinals.length++]=ordinal;
      if (ft.hierarchical && ft.multiValued) {
        int parent=taxoWriter.getParent(ordinal);
        while (parent > 0) {
          if (ordinals.ints.length == ordinals.length) {
            ordinals.grow(ordinals.length + 1);
          }
          ordinals.ints[ordinals.length++]=parent;
          parent=taxoWriter.getParent(parent);
        }
      }
      for (int i=2; i <= cp.length; i++) {
        addedIndexedFields.add(new StringField(indexedFieldName,cp.subpath(i).toString(facetDelimChar),Field.Store.NO));
      }
    }
    addedStoredFields.add(new BinaryDocValuesField(indexedFieldName,dedupAndEncode(ordinals)));
  }
}
