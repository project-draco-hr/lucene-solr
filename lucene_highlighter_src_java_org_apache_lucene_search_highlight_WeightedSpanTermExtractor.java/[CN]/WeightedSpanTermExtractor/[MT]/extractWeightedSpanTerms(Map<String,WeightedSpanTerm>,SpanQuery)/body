{
  Set<String> fieldNames;
  if (fieldName == null) {
    fieldNames=new HashSet<>();
    collectSpanQueryFields(spanQuery,fieldNames);
  }
 else {
    fieldNames=new HashSet<>(1);
    fieldNames.add(fieldName);
  }
  if (defaultField != null) {
    fieldNames.add(defaultField);
  }
  Map<String,SpanQuery> queries=new HashMap<>();
  Set<Term> nonWeightedTerms=new HashSet<>();
  final boolean mustRewriteQuery=mustRewriteQuery(spanQuery);
  if (mustRewriteQuery) {
    for (    final String field : fieldNames) {
      final SpanQuery rewrittenQuery=(SpanQuery)spanQuery.rewrite(getLeafContext().reader());
      queries.put(field,rewrittenQuery);
      rewrittenQuery.extractTerms(nonWeightedTerms);
    }
  }
 else {
    spanQuery.extractTerms(nonWeightedTerms);
  }
  List<PositionSpan> spanPositions=new ArrayList<>();
  for (  final String field : fieldNames) {
    final SpanQuery q;
    if (mustRewriteQuery) {
      q=queries.get(field);
    }
 else {
      q=spanQuery;
    }
    AtomicReaderContext context=getLeafContext();
    Map<Term,TermContext> termContexts=new HashMap<>();
    TreeSet<Term> extractedTerms=new TreeSet<>();
    q.extractTerms(extractedTerms);
    for (    Term term : extractedTerms) {
      termContexts.put(term,TermContext.build(context,term));
    }
    Bits acceptDocs=context.reader().getLiveDocs();
    final Spans spans=q.getSpans(context,acceptDocs,termContexts);
    while (spans.next()) {
      spanPositions.add(new PositionSpan(spans.start(),spans.end() - 1));
    }
  }
  if (spanPositions.size() == 0) {
    return;
  }
  for (  final Term queryTerm : nonWeightedTerms) {
    if (fieldNameComparator(queryTerm.field())) {
      WeightedSpanTerm weightedSpanTerm=terms.get(queryTerm.text());
      if (weightedSpanTerm == null) {
        weightedSpanTerm=new WeightedSpanTerm(spanQuery.getBoost(),queryTerm.text());
        weightedSpanTerm.addPositionSpans(spanPositions);
        weightedSpanTerm.positionSensitive=true;
        terms.put(queryTerm.text(),weightedSpanTerm);
      }
 else {
        if (spanPositions.size() > 0) {
          weightedSpanTerm.addPositionSpans(spanPositions);
        }
      }
    }
  }
}
