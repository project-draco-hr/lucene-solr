{
  format=input.readVInt();
  if (format > FORMAT_MINIMUM) {
    throw new IndexFormatTooOldException(fileName,format,FORMAT_MINIMUM,FORMAT_CURRENT);
  }
  if (format < FORMAT_CURRENT) {
    throw new IndexFormatTooNewException(fileName,format,FORMAT_MINIMUM,FORMAT_CURRENT);
  }
  final int size=input.readVInt();
  for (int i=0; i < size; i++) {
    String name=input.readString();
    final int fieldNumber=format <= FORMAT_PER_FIELD_CODEC ? input.readInt() : i;
    final int codecId=format <= FORMAT_PER_FIELD_CODEC ? input.readInt() : 0;
    byte bits=input.readByte();
    boolean isIndexed=(bits & IS_INDEXED) != 0;
    boolean storeTermVector=(bits & STORE_TERMVECTOR) != 0;
    boolean storePositionsWithTermVector=(bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;
    boolean storeOffsetWithTermVector=(bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;
    boolean omitNorms=(bits & OMIT_NORMS) != 0;
    boolean storePayloads=(bits & STORE_PAYLOADS) != 0;
    boolean omitTermFreqAndPositions=(bits & OMIT_TERM_FREQ_AND_POSITIONS) != 0;
    if (omitTermFreqAndPositions) {
      storePayloads=false;
    }
    hasVectors|=storeTermVector;
    hasProx|=isIndexed && !omitTermFreqAndPositions;
    ValueType docValuesType=null;
    if (format <= FORMAT_INDEX_VALUES) {
      final byte b=input.readByte();
switch (b) {
case 0:
        docValuesType=null;
      break;
case 1:
    docValuesType=ValueType.VAR_INTS;
  break;
case 2:
docValuesType=ValueType.FLOAT_32;
break;
case 3:
docValuesType=ValueType.FLOAT_64;
break;
case 4:
docValuesType=ValueType.BYTES_FIXED_STRAIGHT;
break;
case 5:
docValuesType=ValueType.BYTES_FIXED_DEREF;
break;
case 6:
docValuesType=ValueType.BYTES_FIXED_SORTED;
break;
case 7:
docValuesType=ValueType.BYTES_VAR_STRAIGHT;
break;
case 8:
docValuesType=ValueType.BYTES_VAR_DEREF;
break;
case 9:
docValuesType=ValueType.BYTES_VAR_SORTED;
break;
case 10:
docValuesType=ValueType.FIXED_INTS_16;
break;
case 11:
docValuesType=ValueType.FIXED_INTS_32;
break;
case 12:
docValuesType=ValueType.FIXED_INTS_64;
break;
case 13:
docValuesType=ValueType.FIXED_INTS_8;
break;
default :
throw new IllegalStateException("unhandled indexValues type " + b);
}
}
final FieldInfo addInternal=addInternal(name,fieldNumber,isIndexed,storeTermVector,storePositionsWithTermVector,storeOffsetWithTermVector,omitNorms,storePayloads,omitTermFreqAndPositions,docValuesType);
addInternal.setCodecId(codecId);
}
if (input.getFilePointer() != input.length()) {
throw new CorruptIndexException("did not read all bytes from file \"" + fileName + "\": read "+ input.getFilePointer()+ " vs size "+ input.length());
}
}
