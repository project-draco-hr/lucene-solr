{
  format=input.readVInt();
  if (format > FORMAT_MINIMUM) {
    throw new IndexFormatTooOldException(fileName,format,FORMAT_MINIMUM,FORMAT_CURRENT);
  }
  if (format < FORMAT_CURRENT) {
    throw new IndexFormatTooNewException(fileName,format,FORMAT_MINIMUM,FORMAT_CURRENT);
  }
  final int size=input.readVInt();
  for (int i=0; i < size; i++) {
    String name=StringHelper.intern(input.readString());
    final int fieldNumber=format <= FORMAT_PER_FIELD_CODEC ? input.readInt() : i;
    final int codecId=format <= FORMAT_PER_FIELD_CODEC ? input.readInt() : 0;
    byte bits=input.readByte();
    boolean isIndexed=(bits & IS_INDEXED) != 0;
    boolean storeTermVector=(bits & STORE_TERMVECTOR) != 0;
    boolean storePositionsWithTermVector=(bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;
    boolean storeOffsetWithTermVector=(bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;
    boolean omitNorms=(bits & OMIT_NORMS) != 0;
    boolean storePayloads=(bits & STORE_PAYLOADS) != 0;
    boolean omitTermFreqAndPositions=(bits & OMIT_TERM_FREQ_AND_POSITIONS) != 0;
    final FieldInfo addInternal=addInternal(name,fieldNumber,isIndexed,storeTermVector,storePositionsWithTermVector,storeOffsetWithTermVector,omitNorms,storePayloads,omitTermFreqAndPositions);
    addInternal.setCodecId(codecId);
  }
  if (input.getFilePointer() != input.length()) {
    throw new CorruptIndexException("did not read all bytes from file \"" + fileName + "\": read "+ input.getFilePointer()+ " vs size "+ input.length());
  }
}
