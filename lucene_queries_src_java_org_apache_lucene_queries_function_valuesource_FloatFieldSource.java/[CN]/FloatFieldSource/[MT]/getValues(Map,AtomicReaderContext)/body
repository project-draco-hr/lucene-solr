{
  final FieldCache.Floats arr=cache.getFloats(readerContext.reader(),field,parser,true);
  final Bits valid=cache.getDocsWithField(readerContext.reader(),field);
  return new FloatDocValues(this){
    @Override public float floatVal(    int doc){
      return arr.get(doc);
    }
    @Override public Object objectVal(    int doc){
      return valid.get(doc) ? arr.get(doc) : null;
    }
    @Override public boolean exists(    int doc){
      return valid.get(doc);
    }
    @Override public ValueFiller getValueFiller(){
      return new ValueFiller(){
        private final MutableValueFloat mval=new MutableValueFloat();
        @Override public MutableValue getValue(){
          return mval;
        }
        @Override public void fillValue(        int doc){
          mval.value=arr.get(doc);
          mval.exists=valid.get(doc);
        }
      }
;
    }
  }
;
}
