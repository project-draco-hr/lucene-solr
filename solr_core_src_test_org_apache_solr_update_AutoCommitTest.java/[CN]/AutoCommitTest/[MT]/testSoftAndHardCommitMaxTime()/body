{
  SolrCore core=h.getCore();
  NewSearcherListener trigger=new NewSearcherListener();
  core.registerNewSearcherListener(trigger);
  DirectUpdateHandler2 updater=(DirectUpdateHandler2)core.getUpdateHandler();
  CommitTracker hardTracker=updater.commitTracker;
  CommitTracker softTracker=updater.softCommitTracker;
  softTracker.setTimeUpperBound(200);
  softTracker.setDocsUpperBound(-1);
  hardTracker.setTimeUpperBound(1000);
  hardTracker.setDocsUpperBound(-1);
  XmlUpdateRequestHandler handler=new XmlUpdateRequestHandler();
  handler.init(null);
  MapSolrParams params=new MapSolrParams(new HashMap<String,String>());
  SolrQueryResponse rsp=new SolrQueryResponse();
  SolrQueryRequestBase req=new SolrQueryRequestBase(core,params){
  }
;
  req.setContentStreams(toContentStreams(adoc("id","529","field_t","what's inside?","subject","info"),null));
  trigger.reset();
  handler.handleRequest(req,rsp);
  assertQ("shouldn't find any",req("id:529"),"//result[@numFound=0]");
  assertTrue(trigger.waitForNewSearcher(30000));
  trigger.reset();
  req.setContentStreams(toContentStreams(adoc("id","530","field_t","what's inside?","subject","info"),null));
  handler.handleRequest(req,rsp);
  assertQ("should find one",req("id:529"),"//result[@numFound=1]");
  assertQ("should find none",req("id:530"),"//result[@numFound=0]");
  assertU(delI("529"));
  assertQ("deleted, but should still be there",req("id:529"),"//result[@numFound=1]");
  assertTrue(trigger.waitForNewSearcher(15000));
  trigger.reset();
  req.setContentStreams(toContentStreams(adoc("id","550","field_t","what's inside?","subject","info"),null));
  handler.handleRequest(req,rsp);
  assertEquals(2,softTracker.getCommitCount());
  assertQ("deleted and time has passed",req("id:529"),"//result[@numFound=0]");
  req.setContentStreams(toContentStreams(adoc("id","500"),null));
  for (int i=0; i < 5; i++) {
    handler.handleRequest(req,rsp);
  }
  assertQ("should not be there yet",req("id:500"),"//result[@numFound=0]");
  assertTrue(trigger.waitForNewSearcher(15000));
  trigger.reset();
  req.setContentStreams(toContentStreams(adoc("id","531","field_t","what's inside?","subject","info"),null));
  handler.handleRequest(req,rsp);
  int softCommitCnt=softTracker.getCommitCount();
  assertTrue("commit cnt:" + softCommitCnt,softCommitCnt == 2 || softCommitCnt == 3);
  assertEquals(1,hardTracker.getCommitCount());
  assertQ("now it should",req("id:500"),"//result[@numFound=1]");
  assertQ("but not this",req("id:531"),"//result[@numFound=0]");
}
