{
  List<ZkCoreNodeProps> nodes=zkController.getZkStateReader().getReplicaProps(collection,shardId,leaderProps.get(ZkStateReader.NODE_NAME_PROP),leaderProps.get(ZkStateReader.CORE_NAME_PROP),ZkStateReader.ACTIVE);
  if (nodes == null) {
    return;
  }
  ZkCoreNodeProps zkLeader=new ZkCoreNodeProps(leaderProps);
  for (  ZkCoreNodeProps node : nodes) {
    try {
      log.info("try and ask " + node.getCoreUrl() + " to sync");
      requestSync(zkLeader.getCoreUrl(),node.getCoreName());
    }
 catch (    Exception e) {
      SolrException.log(log,"Error syncing replica to leader",e);
    }
  }
  for (; ; ) {
    ShardResponse srsp=shardHandler.takeCompletedOrError();
    if (srsp == null)     break;
    boolean success=handleResponse(srsp);
    if (!success) {
      try {
        log.info("Sync failed - asking replica to recover.");
        RequestRecovery recoverRequestCmd=new RequestRecovery();
        recoverRequestCmd.setAction(CoreAdminAction.REQUESTRECOVERY);
        recoverRequestCmd.setCoreName(((SyncShardRequest)srsp.getShardRequest()).coreName);
        HttpSolrServer server=new HttpSolrServer(zkLeader.getBaseUrl());
        server.request(recoverRequestCmd);
      }
 catch (      Exception e) {
        log.info("Could not tell a replica to recover",e);
      }
      shardHandler.cancelAll();
      break;
    }
  }
}
