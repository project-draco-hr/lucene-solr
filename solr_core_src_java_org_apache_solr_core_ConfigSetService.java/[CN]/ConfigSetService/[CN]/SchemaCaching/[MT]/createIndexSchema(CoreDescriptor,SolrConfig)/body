{
  final String resourceNameToBeUsed=IndexSchemaFactory.getResourceNameToBeUsed(cd.getSchemaName(),solrConfig);
  Path schemaFile=Paths.get(solrConfig.getResourceLoader().getConfigDir()).resolve(resourceNameToBeUsed);
  if (Files.exists(schemaFile)) {
    try {
      String cachedName=cacheName(schemaFile);
      return schemaCache.get(cachedName,new Callable<IndexSchema>(){
        @Override public IndexSchema call() throws Exception {
          logger.info("Creating new index schema for core {}",cd.getName());
          return IndexSchemaFactory.buildIndexSchema(cd.getSchemaName(),solrConfig);
        }
      }
);
    }
 catch (    ExecutionException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Error creating index schema for core " + cd.getName(),e);
    }
catch (    IOException e) {
      logger.warn("Couldn't get last modified time for schema file {}: {}",schemaFile,e.getMessage());
      logger.warn("Will not use schema cache");
    }
  }
  return IndexSchemaFactory.buildIndexSchema(cd.getSchemaName(),solrConfig);
}
