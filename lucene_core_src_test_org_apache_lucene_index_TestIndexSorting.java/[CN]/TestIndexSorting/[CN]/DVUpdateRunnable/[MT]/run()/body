{
  try {
    latch.await();
    while (updateCount.decrementAndGet() >= 0) {
      final int id=random.nextInt(numDocs);
      final long value=random.nextInt(20);
synchronized (values) {
        w.updateDocValues(new Term("id",Integer.toString(id)),new NumericDocValuesField("foo",value));
        values.put(id,value);
      }
switch (random.nextInt(10)) {
case 0:
case 1:
        DirectoryReader.open(w).close();
      break;
case 2:
    w.forceMerge(3);
  break;
}
}
}
 catch (IOException|InterruptedException e) {
throw new RuntimeException(e);
}
}
