{
  final Document doc=new Document();
  doc.add(new StringField(ID_FIELD,Integer.toString(id),Store.YES));
  doc.add(new StringField(DOCS_ENUM_FIELD,DOCS_ENUM_TERM,Store.NO));
  positions.setId(id);
  doc.add(new Field(DOC_POSITIONS_FIELD,positions,POSITIONS_TYPE));
  doc.add(new NumericDocValuesField(NUMERIC_DV_FIELD,id));
  TextField norms=new TextField(NORMS_FIELD,Integer.toString(id),Store.NO);
  norms.setBoost(Float.intBitsToFloat(id));
  doc.add(norms);
  doc.add(new BinaryDocValuesField(BINARY_DV_FIELD,new BytesRef(Integer.toString(id))));
  doc.add(new SortedDocValuesField(SORTED_DV_FIELD,new BytesRef(Integer.toString(id))));
  doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD,new BytesRef(Integer.toString(id))));
  doc.add(new SortedSetDocValuesField(SORTED_SET_DV_FIELD,new BytesRef(Integer.toString(id + 1))));
  doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD,id));
  doc.add(new SortedNumericDocValuesField(SORTED_NUMERIC_DV_FIELD,id + 1));
  doc.add(new Field(TERM_VECTORS_FIELD,Integer.toString(id),TERM_VECTORS_TYPE));
  byte[] bytes=new byte[4];
  NumericUtils.intToSortableBytes(id,bytes,0);
  doc.add(new BinaryPoint(DIMENSIONAL_FIELD,bytes));
  return doc;
}
