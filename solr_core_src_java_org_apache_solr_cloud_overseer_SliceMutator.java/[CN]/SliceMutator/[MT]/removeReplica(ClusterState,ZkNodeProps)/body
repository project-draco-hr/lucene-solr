{
  final String cnn=message.getStr(ZkStateReader.CORE_NODE_NAME_PROP);
  final String collection=message.getStr(ZkStateReader.COLLECTION_PROP);
  if (!checkCollectionKeyExistence(message))   return ZkStateWriter.NO_OP;
  DocCollection coll=clusterState.getCollectionOrNull(collection);
  if (coll == null) {
    return new ZkWriteCommand(collection,null);
  }
  Map<String,Slice> newSlices=new LinkedHashMap<>();
  boolean lastSlice=false;
  for (  Slice slice : coll.getSlices()) {
    Replica replica=slice.getReplica(cnn);
    if (replica != null) {
      Map<String,Replica> newReplicas=slice.getReplicasCopy();
      newReplicas.remove(cnn);
      if (newReplicas.size() == 0) {
        slice=null;
        lastSlice=true;
      }
 else {
        slice=new Slice(slice.getName(),newReplicas,slice.getProperties());
      }
    }
    if (slice != null) {
      newSlices.put(slice.getName(),slice);
    }
  }
  if (lastSlice) {
    for (    Slice slice : coll.getSlices()) {
      if (slice.getReplicas().size() == 0) {
        newSlices.remove(slice.getName());
      }
    }
  }
  if (newSlices.size() == 0) {
    return new ClusterStateMutator(zkStateReader).deleteCollection(clusterState,new ZkNodeProps(Utils.makeMap(NAME,collection)));
  }
 else {
    return new ZkWriteCommand(collection,coll.copyWithSlices(newSlices));
  }
}
