{
  StringBuilder sb=new StringBuilder();
  String baseUrl=message.getStr(ZkStateReader.BASE_URL_PROP);
  String coreName=message.getStr(ZkStateReader.CORE_NAME_PROP);
  sb.append(baseUrl);
  if (baseUrl != null && !baseUrl.endsWith("/"))   sb.append("/");
  sb.append(coreName == null ? "" : coreName);
  if (!(sb.substring(sb.length() - 1).equals("/")))   sb.append("/");
  String leaderUrl=sb.length() > 0 ? sb.toString() : null;
  String collectionName=message.getStr(ZkStateReader.COLLECTION_PROP);
  String sliceName=message.getStr(ZkStateReader.SHARD_ID_PROP);
  DocCollection coll=clusterState.getCollectionOrNull(collectionName);
  if (coll == null) {
    log.error("Could not mark shard leader for non existing collection:" + collectionName);
    return ZkStateWriter.NO_OP;
  }
  Map<String,Slice> slices=coll.getSlicesMap();
  Slice slice=slices.get(sliceName);
  Replica oldLeader=slice.getLeader();
  final Map<String,Replica> newReplicas=new LinkedHashMap<>();
  for (  Replica replica : slice.getReplicas()) {
    String coreURL=ZkCoreNodeProps.getCoreUrl(replica.getStr(ZkStateReader.BASE_URL_PROP),replica.getStr(ZkStateReader.CORE_NAME_PROP));
    if (replica == oldLeader && !coreURL.equals(leaderUrl)) {
      replica=new ReplicaMutator(zkStateReader).unsetLeader(replica);
    }
 else     if (coreURL.equals(leaderUrl)) {
      replica=new ReplicaMutator(zkStateReader).setLeader(replica);
    }
    newReplicas.put(replica.getName(),replica);
  }
  Map<String,Object> newSliceProps=slice.shallowCopy();
  newSliceProps.put(Slice.REPLICAS,newReplicas);
  slice=new Slice(slice.getName(),newReplicas,slice.getProperties());
  return new ZkWriteCommand(collectionName,CollectionMutator.updateSlice(collectionName,coll,slice));
}
