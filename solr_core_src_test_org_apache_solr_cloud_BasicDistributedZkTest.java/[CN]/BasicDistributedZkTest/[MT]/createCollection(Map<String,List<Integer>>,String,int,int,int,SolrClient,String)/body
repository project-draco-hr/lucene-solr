{
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.set("action",CollectionAction.CREATE.toString());
  params.set(OverseerCollectionProcessor.NUM_SLICES,numShards);
  params.set(ZkStateReader.REPLICATION_FACTOR,numReplicas);
  params.set(ZkStateReader.MAX_SHARDS_PER_NODE,maxShardsPerNode);
  if (createNodeSetStr != null)   params.set(OverseerCollectionProcessor.CREATE_NODE_SET,createNodeSetStr);
  int clientIndex=clients.size() > 1 ? random().nextInt(2) : 0;
  List<Integer> list=new ArrayList<>();
  list.add(numShards);
  list.add(numReplicas);
  if (collectionInfos != null) {
    collectionInfos.put(collectionName,list);
  }
  params.set("name",collectionName);
  SolrRequest request=new QueryRequest(params);
  request.setPath("/admin/collections");
  CollectionAdminResponse res=new CollectionAdminResponse();
  if (client == null) {
    final String baseUrl=((HttpSolrClient)clients.get(clientIndex)).getBaseURL().substring(0,((HttpSolrClient)clients.get(clientIndex)).getBaseURL().length() - DEFAULT_COLLECTION.length() - 1);
    try (SolrClient aClient=createNewSolrClient("",baseUrl)){
      res.setResponse(aClient.request(request));
    }
   }
 else {
    res.setResponse(client.request(request));
  }
  return res;
}
