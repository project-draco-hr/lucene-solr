{
  Map<String,Map<String,Slice>> collections=solrj.getZkStateReader().getCloudState().getCollectionStates();
  if (collections.containsKey(collectionName)) {
    Map<String,Slice> slices=collections.get(collectionName);
    Iterator<Entry<String,Slice>> it=slices.entrySet().iterator();
    while (it.hasNext()) {
      Entry<String,Slice> sliceEntry=it.next();
      Map<String,ZkNodeProps> sliceShards=sliceEntry.getValue().getShards();
      Iterator<Entry<String,ZkNodeProps>> shardIt=sliceShards.entrySet().iterator();
      while (shardIt.hasNext()) {
        Entry<String,ZkNodeProps> shardEntry=shardIt.next();
        ZkCoreNodeProps coreProps=new ZkCoreNodeProps(shardEntry.getValue());
        CoreAdminResponse mcr=CoreAdminRequest.getStatus(coreProps.getCoreName(),new HttpSolrServer(coreProps.getBaseUrl()));
        long before=mcr.getStartTime(coreProps.getCoreName()).getTime();
        urlToTime.put(coreProps.getCoreUrl(),before);
      }
    }
  }
 else {
    throw new IllegalArgumentException("Could not find collection in :" + collections.keySet());
  }
}
