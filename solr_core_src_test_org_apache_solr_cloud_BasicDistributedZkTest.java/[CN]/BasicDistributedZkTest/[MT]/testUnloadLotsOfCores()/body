{
  SolrServer client=clients.get(2);
  String url3=getBaseUrl(client);
  final HttpSolrServer server=new HttpSolrServer(url3);
  ThreadPoolExecutor executor=new ThreadPoolExecutor(0,Integer.MAX_VALUE,5,TimeUnit.SECONDS,new SynchronousQueue<Runnable>(),new DefaultSolrThreadFactory("testExecutor"));
  int cnt=atLeast(6);
  createCores(server,executor,"multiunload",2,cnt);
  executor.shutdown();
  executor.awaitTermination(120,TimeUnit.SECONDS);
  executor=new ThreadPoolExecutor(0,Integer.MAX_VALUE,5,TimeUnit.SECONDS,new SynchronousQueue<Runnable>(),new DefaultSolrThreadFactory("testExecutor"));
  for (int j=0; j < cnt; j++) {
    final int freezeJ=j;
    executor.execute(new Runnable(){
      @Override public void run(){
        Unload unloadCmd=new Unload(true);
        unloadCmd.setCoreName("multiunload" + freezeJ);
        try {
          server.request(unloadCmd);
        }
 catch (        SolrServerException e) {
          throw new RuntimeException(e);
        }
catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
    Thread.sleep(random().nextInt(50));
  }
  executor.shutdown();
  executor.awaitTermination(120,TimeUnit.SECONDS);
}
