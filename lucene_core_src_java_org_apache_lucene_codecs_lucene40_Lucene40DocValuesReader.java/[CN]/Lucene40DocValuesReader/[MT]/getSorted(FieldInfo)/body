{
  SortedDocValues instance=sortedInstances.get(field.number);
  if (instance == null) {
    String dataName=IndexFileNames.segmentFileName(state.segmentInfo.name,Integer.toString(field.number),"dat");
    String indexName=IndexFileNames.segmentFileName(state.segmentInfo.name,Integer.toString(field.number),"idx");
    IndexInput data=null;
    IndexInput index=null;
    boolean success=false;
    try {
      data=dir.openInput(dataName,state.context);
      index=dir.openInput(indexName,state.context);
switch (LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {
case BYTES_FIXED_SORTED:
        instance=loadBytesFixedSorted(field,data,index);
      break;
case BYTES_VAR_SORTED:
    instance=loadBytesVarSorted(field,data,index);
  break;
default :
throw new AssertionError();
}
success=true;
}
  finally {
if (success) {
IOUtils.close(data,index);
}
 else {
IOUtils.closeWhileHandlingException(data,index);
}
}
sortedInstances.put(field.number,instance);
}
return instance;
}
