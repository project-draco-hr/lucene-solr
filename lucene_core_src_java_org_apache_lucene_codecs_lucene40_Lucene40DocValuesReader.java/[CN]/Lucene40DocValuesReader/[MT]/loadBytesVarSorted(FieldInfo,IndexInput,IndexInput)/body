{
  CodecUtil.checkHeader(data,Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);
  CodecUtil.checkHeader(index,Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_START,Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);
  long maxAddress=index.readLong();
  PagedBytes bytes=new PagedBytes(16);
  bytes.copy(data,maxAddress);
  final PagedBytes.Reader bytesReader=bytes.freeze(true);
  final PackedInts.Reader addressReader=PackedInts.getReader(index);
  final PackedInts.Reader ordsReader=PackedInts.getReader(index);
  final int valueCount=addressReader.size() - 1;
  ramBytesUsed.addAndGet(bytes.ramBytesUsed() + addressReader.ramBytesUsed() + ordsReader.ramBytesUsed());
  return correctBuggyOrds(new SortedDocValues(){
    @Override public int getOrd(    int docID){
      return (int)ordsReader.get(docID);
    }
    @Override public void lookupOrd(    int ord,    BytesRef result){
      long startAddress=addressReader.get(ord);
      long endAddress=addressReader.get(ord + 1);
      bytesReader.fillSlice(result,startAddress,(int)(endAddress - startAddress));
    }
    @Override public int getValueCount(){
      return valueCount;
    }
  }
);
}
