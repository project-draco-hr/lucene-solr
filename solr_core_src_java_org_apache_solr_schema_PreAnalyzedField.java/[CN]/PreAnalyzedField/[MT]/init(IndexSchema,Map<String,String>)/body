{
  super.init(schema,args);
  String implName=args.get(PARSER_IMPL);
  if (implName == null) {
    parser=new JsonPreAnalyzedParser();
  }
 else {
    try {
      Class<?> implClazz=Class.forName(implName);
      if (!PreAnalyzedParser.class.isAssignableFrom(implClazz)) {
        throw new Exception("must implement " + PreAnalyzedParser.class.getName());
      }
      Constructor<?> c=implClazz.getConstructor(new Class<?>[0]);
      parser=(PreAnalyzedParser)c.newInstance(new Object[0]);
    }
 catch (    Exception e) {
      LOG.warn("Can't use the configured PreAnalyzedParser class '" + implName + "' ("+ e.getMessage()+ "), using default "+ DEFAULT_IMPL);
      parser=new JsonPreAnalyzedParser();
    }
  }
}
