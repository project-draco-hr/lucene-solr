{
  if (val == null || val.trim().length() == 0) {
    return null;
  }
  PreAnalyzedTokenizer parse=new PreAnalyzedTokenizer(new StringReader(val),parser);
  parse.reset();
  org.apache.lucene.document.FieldType type=createFieldType(field);
  if (type == null) {
    parse.close();
    return null;
  }
  Field f=null;
  if (parse.getStringValue() != null) {
    if (field.stored()) {
      f=new Field(field.getName(),parse.getStringValue(),type);
    }
 else {
      type.setStored(false);
    }
  }
 else   if (parse.getBinaryValue() != null) {
    if (field.isBinary()) {
      f=new Field(field.getName(),parse.getBinaryValue(),type);
    }
  }
 else {
    type.setStored(false);
  }
  if (parse.hasTokenStream()) {
    if (field.indexed()) {
      type.setIndexed(true);
      type.setTokenized(true);
      if (f != null) {
        f.setTokenStream(parse);
      }
 else {
        f=new Field(field.getName(),parse,type);
      }
    }
 else {
      if (f != null) {
        f.fieldType().setIndexed(false);
        f.fieldType().setTokenized(false);
      }
    }
  }
  if (f != null) {
    f.setBoost(boost);
  }
  return f;
}
