{
  numRequests.increment();
  TimerContext timer=requestTimes.time();
  try {
    if (pluginInfo != null && pluginInfo.attributes.containsKey(USEPARAM))     req.getContext().put(USEPARAM,pluginInfo.attributes.get(USEPARAM));
    SolrPluginUtils.setDefaults(this,req,defaults,appends,invariants);
    req.getContext().remove(USEPARAM);
    rsp.setHttpCaching(httpCaching);
    handleRequestBody(req,rsp);
    NamedList header=rsp.getResponseHeader();
    if (header != null) {
      Object partialResults=header.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY);
      boolean timedOut=partialResults == null ? false : (Boolean)partialResults;
      if (timedOut) {
        numTimeouts.increment();
        rsp.setHttpCaching(false);
      }
    }
  }
 catch (  Exception e) {
    boolean incrementErrors=true;
    boolean isServerError=true;
    if (e instanceof SolrException) {
      SolrException se=(SolrException)e;
      if (se.code() == SolrException.ErrorCode.CONFLICT.code) {
        incrementErrors=false;
      }
 else       if (se.code() >= 400 && se.code() < 500) {
        isServerError=false;
      }
    }
 else {
      if (e instanceof SyntaxError) {
        isServerError=false;
        e=new SolrException(SolrException.ErrorCode.BAD_REQUEST,e);
      }
    }
    rsp.setException(e);
    if (incrementErrors) {
      SolrException.log(log,e);
      if (isServerError) {
        numServerErrors.increment();
      }
 else {
        numClientErrors.increment();
      }
    }
  }
 finally {
    timer.stop();
  }
}
