{
  final HashMap newDeleteTerms;
  if (terms.size() > 0) {
    newDeleteTerms=new HashMap();
    Iterator iter=terms.entrySet().iterator();
    while (iter.hasNext()) {
      Entry entry=(Entry)iter.next();
      Num num=(Num)entry.getValue();
      newDeleteTerms.put(entry.getKey(),new Num(mapper.remap(num.getNum())));
    }
  }
 else   newDeleteTerms=null;
  final List newDeleteDocIDs;
  if (docIDs.size() > 0) {
    newDeleteDocIDs=new ArrayList(docIDs.size());
    Iterator iter=docIDs.iterator();
    while (iter.hasNext()) {
      Integer num=(Integer)iter.next();
      newDeleteDocIDs.add(new Integer(mapper.remap(num.intValue())));
    }
  }
 else   newDeleteDocIDs=null;
  final HashMap newDeleteQueries;
  if (queries.size() > 0) {
    newDeleteQueries=new HashMap(queries.size());
    Iterator iter=queries.entrySet().iterator();
    while (iter.hasNext()) {
      Entry entry=(Entry)iter.next();
      Integer num=(Integer)entry.getValue();
      newDeleteQueries.put(entry.getKey(),new Integer(mapper.remap(num.intValue())));
    }
  }
 else   newDeleteQueries=null;
  if (newDeleteTerms != null)   terms=newDeleteTerms;
  if (newDeleteDocIDs != null)   docIDs=newDeleteDocIDs;
  if (newDeleteQueries != null)   queries=newDeleteQueries;
}
