{
  boolean success=false;
  clear();
  ChecksumIndexInput input=new ChecksumIndexInput(directory.openInput(segmentFileName));
  generation=generationFromSegmentsFileName(segmentFileName);
  lastGeneration=generation;
  try {
    int format=input.readInt();
    if (format < 0) {
      if (format < CURRENT_FORMAT)       throw new CorruptIndexException("Unknown format version: " + format);
      version=input.readLong();
      counter=input.readInt();
    }
 else {
      counter=format;
    }
    for (int i=input.readInt(); i > 0; i--) {
      add(new SegmentInfo(directory,format,input,codecs));
    }
    if (format >= 0) {
      if (input.getFilePointer() >= input.length())       version=System.currentTimeMillis();
 else       version=input.readLong();
    }
    if (format <= FORMAT_USER_DATA) {
      if (format <= FORMAT_DIAGNOSTICS) {
        userData=input.readStringStringMap();
      }
 else       if (0 != input.readByte()) {
        userData=Collections.singletonMap("userData",input.readString());
      }
 else {
        userData=Collections.<String,String>emptyMap();
      }
    }
 else {
      userData=Collections.<String,String>emptyMap();
    }
    if (format <= FORMAT_CHECKSUM) {
      final long checksumNow=input.getChecksum();
      final long checksumThen=input.readLong();
      if (checksumNow != checksumThen)       throw new CorruptIndexException("checksum mismatch in segments file");
    }
    success=true;
  }
  finally {
    input.close();
    if (!success) {
      clear();
    }
  }
}
