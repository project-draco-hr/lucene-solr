{
  if (minLength > maxLength)   throw new IllegalArgumentException("minLength must be >= maxLength");
  final boolean lenEqual=minLength == maxLength;
  final int end=lenEqual ? minLength : minLength + r.nextInt(maxLength - minLength + 1);
  if (end == 0) {
    return "";
  }
  final int fixedPlane=5;
  final char[] buffer=new char[end];
  for (int i=0; i < end; i++) {
    int t=lenEqual ? fixedPlane : r.nextInt(5);
    if (0 == t && i < end - 1 && !lenEqual) {
      buffer[i++]=(char)nextInt(r,0xd800,0xdbff);
      buffer[i]=(char)nextInt(r,0xdc00,0xdfff);
    }
 else     if (t <= 1)     buffer[i]=(char)r.nextInt(0x80);
 else     if (2 == t)     buffer[i]=(char)nextInt(r,0x80,0x800);
 else     if (3 == t)     buffer[i]=(char)nextInt(r,0x800,0xd7ff);
 else     if (4 == t)     buffer[i]=(char)nextInt(r,0xe000,0xffff);
  }
  return new String(buffer,0,end);
}
