{
  for (int i=0; i < iterations; ++i) {
    final long block0=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(block0 >>> 49);
    values[valuesOffset++]=(int)((block0 >>> 34) & 32767L);
    values[valuesOffset++]=(int)((block0 >>> 19) & 32767L);
    values[valuesOffset++]=(int)((block0 >>> 4) & 32767L);
    final long block1=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block0 & 15L) << 11) | (block1 >>> 53));
    values[valuesOffset++]=(int)((block1 >>> 38) & 32767L);
    values[valuesOffset++]=(int)((block1 >>> 23) & 32767L);
    values[valuesOffset++]=(int)((block1 >>> 8) & 32767L);
    final long block2=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block1 & 255L) << 7) | (block2 >>> 57));
    values[valuesOffset++]=(int)((block2 >>> 42) & 32767L);
    values[valuesOffset++]=(int)((block2 >>> 27) & 32767L);
    values[valuesOffset++]=(int)((block2 >>> 12) & 32767L);
    final long block3=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block2 & 4095L) << 3) | (block3 >>> 61));
    values[valuesOffset++]=(int)((block3 >>> 46) & 32767L);
    values[valuesOffset++]=(int)((block3 >>> 31) & 32767L);
    values[valuesOffset++]=(int)((block3 >>> 16) & 32767L);
    values[valuesOffset++]=(int)((block3 >>> 1) & 32767L);
    final long block4=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block3 & 1L) << 14) | (block4 >>> 50));
    values[valuesOffset++]=(int)((block4 >>> 35) & 32767L);
    values[valuesOffset++]=(int)((block4 >>> 20) & 32767L);
    values[valuesOffset++]=(int)((block4 >>> 5) & 32767L);
    final long block5=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block4 & 31L) << 10) | (block5 >>> 54));
    values[valuesOffset++]=(int)((block5 >>> 39) & 32767L);
    values[valuesOffset++]=(int)((block5 >>> 24) & 32767L);
    values[valuesOffset++]=(int)((block5 >>> 9) & 32767L);
    final long block6=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block5 & 511L) << 6) | (block6 >>> 58));
    values[valuesOffset++]=(int)((block6 >>> 43) & 32767L);
    values[valuesOffset++]=(int)((block6 >>> 28) & 32767L);
    values[valuesOffset++]=(int)((block6 >>> 13) & 32767L);
    final long block7=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block6 & 8191L) << 2) | (block7 >>> 62));
    values[valuesOffset++]=(int)((block7 >>> 47) & 32767L);
    values[valuesOffset++]=(int)((block7 >>> 32) & 32767L);
    values[valuesOffset++]=(int)((block7 >>> 17) & 32767L);
    values[valuesOffset++]=(int)((block7 >>> 2) & 32767L);
    final long block8=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block7 & 3L) << 13) | (block8 >>> 51));
    values[valuesOffset++]=(int)((block8 >>> 36) & 32767L);
    values[valuesOffset++]=(int)((block8 >>> 21) & 32767L);
    values[valuesOffset++]=(int)((block8 >>> 6) & 32767L);
    final long block9=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block8 & 63L) << 9) | (block9 >>> 55));
    values[valuesOffset++]=(int)((block9 >>> 40) & 32767L);
    values[valuesOffset++]=(int)((block9 >>> 25) & 32767L);
    values[valuesOffset++]=(int)((block9 >>> 10) & 32767L);
    final long block10=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block9 & 1023L) << 5) | (block10 >>> 59));
    values[valuesOffset++]=(int)((block10 >>> 44) & 32767L);
    values[valuesOffset++]=(int)((block10 >>> 29) & 32767L);
    values[valuesOffset++]=(int)((block10 >>> 14) & 32767L);
    final long block11=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block10 & 16383L) << 1) | (block11 >>> 63));
    values[valuesOffset++]=(int)((block11 >>> 48) & 32767L);
    values[valuesOffset++]=(int)((block11 >>> 33) & 32767L);
    values[valuesOffset++]=(int)((block11 >>> 18) & 32767L);
    values[valuesOffset++]=(int)((block11 >>> 3) & 32767L);
    final long block12=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block11 & 7L) << 12) | (block12 >>> 52));
    values[valuesOffset++]=(int)((block12 >>> 37) & 32767L);
    values[valuesOffset++]=(int)((block12 >>> 22) & 32767L);
    values[valuesOffset++]=(int)((block12 >>> 7) & 32767L);
    final long block13=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block12 & 127L) << 8) | (block13 >>> 56));
    values[valuesOffset++]=(int)((block13 >>> 41) & 32767L);
    values[valuesOffset++]=(int)((block13 >>> 26) & 32767L);
    values[valuesOffset++]=(int)((block13 >>> 11) & 32767L);
    final long block14=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block13 & 2047L) << 4) | (block14 >>> 60));
    values[valuesOffset++]=(int)((block14 >>> 45) & 32767L);
    values[valuesOffset++]=(int)((block14 >>> 30) & 32767L);
    values[valuesOffset++]=(int)((block14 >>> 15) & 32767L);
    values[valuesOffset++]=(int)(block14 & 32767L);
  }
}
