{
  Directory dir=newDirectory();
  IndexWriterConfig conf=new IndexWriterConfig(TEST_VERSION_CURRENT,null);
  conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(conf.getIndexDeletionPolicy()));
  IndexWriter writer=new IndexWriter(dir,conf);
  try {
    writer.addDocument(new Document());
    writer.commit();
    Revision rev=new IndexRevision(writer);
    @SuppressWarnings("unchecked") Map<String,List<RevisionFile>> sourceFiles=rev.getSourceFiles();
    String source=sourceFiles.keySet().iterator().next();
    for (    RevisionFile file : sourceFiles.values().iterator().next()) {
      IndexInput src=dir.openInput(file.fileName,IOContext.READONCE);
      InputStream in=rev.open(source,file.fileName);
      assertEquals(src.length(),in.available());
      byte[] srcBytes=new byte[(int)src.length()];
      byte[] inBytes=new byte[(int)src.length()];
      int offset=0;
      if (random().nextBoolean()) {
        int skip=random().nextInt(10);
        if (skip >= src.length()) {
          skip=0;
        }
        in.skip(skip);
        src.seek(skip);
        offset=skip;
      }
      src.readBytes(srcBytes,offset,srcBytes.length - offset);
      in.read(inBytes,offset,inBytes.length - offset);
      assertArrayEquals(srcBytes,inBytes);
      IOUtils.close(src,in);
    }
    writer.shutdown();
  }
  finally {
    IOUtils.close(dir);
  }
}
