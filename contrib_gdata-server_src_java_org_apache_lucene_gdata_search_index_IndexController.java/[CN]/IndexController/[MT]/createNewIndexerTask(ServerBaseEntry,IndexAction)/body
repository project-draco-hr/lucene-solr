{
  if (this.destroyed.get())   throw new IllegalStateException("IndexController has been destroyed");
  if (!this.isInitialized.get())   throw new IllegalStateException("IndexController has not been initialized");
  String serviceName=entry.getServiceConfig().getName();
  if (LOG.isInfoEnabled())   LOG.info("New Indexer Task submitted - Action: " + action + " for service: "+ serviceName);
  ServiceIndex bean=this.indexerMap.get(serviceName);
  if (bean == null)   throw new RuntimeException("no indexer for service " + serviceName + " registered");
  Lock lock=bean.getLock();
  lock.lock();
  try {
    IndexSchema schema=bean.getSchema();
    boolean commitAfter=bean.incrementActionAndReset(schema.getCommitAfterDocuments());
    IndexDocumentBuilder<IndexDocument> callable=new IndexDocumentBuilderTask<IndexDocument>(entry,bean.getSchema(),action,commitAfter,bean.getOptimize(schema.getOptimizeAfterCommit()));
    Future<IndexDocument> task=this.taskExecutor.submit(callable);
    GDataIndexer indexer=bean.getIndexer();
    try {
      indexer.addIndexableDocumentTask(task);
    }
 catch (    InterruptedException e) {
      throw new GdataIndexerException("Can not accept any index tasks -- interrupted. ",e);
    }
  }
  finally {
    lock.unlock();
  }
}
