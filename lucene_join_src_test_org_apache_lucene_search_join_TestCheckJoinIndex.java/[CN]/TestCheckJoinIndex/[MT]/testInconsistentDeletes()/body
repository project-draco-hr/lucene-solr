{
  final Directory dir=newDirectory();
  final IndexWriterConfig iwc=newIndexWriterConfig();
  iwc.setMergePolicy(NoMergePolicy.INSTANCE);
  final RandomIndexWriter w=new RandomIndexWriter(random(),dir,iwc);
  List<Document> block=new ArrayList<>();
  final int numChildren=TestUtil.nextInt(random(),1,3);
  for (int i=0; i < numChildren; ++i) {
    Document doc=new Document();
    doc.add(new StringField("child",Integer.toString(i),Store.NO));
    block.add(doc);
  }
  Document parent=new Document();
  parent.add(new StringField("parent","true",Store.NO));
  block.add(parent);
  w.addDocuments(block);
  if (random().nextBoolean()) {
    w.deleteDocuments(new Term("parent","true"));
  }
 else {
    w.deleteDocuments(new Term("child",Integer.toString(random().nextInt(numChildren))));
  }
  final IndexReader reader=w.getReader();
  w.close();
  BitSetProducer parentsFilter=new QueryBitSetProducer(new QueryWrapperFilter(new TermQuery(new Term("parent","true"))));
  try {
    CheckJoinIndex.check(reader,parentsFilter);
    fail("Invalid index");
  }
 catch (  IllegalStateException e) {
  }
 finally {
    reader.close();
    dir.close();
  }
}
