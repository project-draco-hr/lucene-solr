{
  CharacterRunAutomaton cra=new CharacterRunAutomaton(automaton);
  ByteRunAutomaton bra=new ByteRunAutomaton(automaton);
  final AutomatonTestUtil.RandomAcceptedStrings ras=new AutomatonTestUtil.RandomAcceptedStrings(automaton);
  for (int i=0; i < 1000 * _TestUtil.getRandomMultiplier(); i++) {
    final String string;
    if (random.nextBoolean()) {
      string=_TestUtil.randomUnicodeString(random);
    }
 else {
      int[] codepoints=ras.getRandomAcceptedString(random);
      try {
        string=UnicodeUtil.newString(codepoints,0,codepoints.length);
      }
 catch (      Exception e) {
        System.out.println(codepoints.length + " codepoints:");
        for (int j=0; j < codepoints.length; j++) {
          System.out.println("  " + Integer.toHexString(codepoints[j]));
        }
        throw e;
      }
    }
    byte bytes[]=string.getBytes("UTF-8");
    assertEquals(cra.run(string),bra.run(bytes,0,bytes.length));
  }
}
