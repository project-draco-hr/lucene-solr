{
  final Random r=random;
  int ITERS=10 * RANDOM_MULTIPLIER;
  int ITERS_PER_DFA=100 * RANDOM_MULTIPLIER;
  for (int iter=0; iter < ITERS; iter++) {
    int x1=getCodeStart(r);
    int x2=getCodeStart(r);
    final int startCode, endCode;
    if (x1 < x2) {
      startCode=x1;
      endCode=x2;
    }
 else {
      startCode=x2;
      endCode=x1;
    }
    if (isSurrogate(startCode) && isSurrogate(endCode)) {
      iter--;
      continue;
    }
    final Automaton a=new Automaton();
    final State end=new State();
    end.setAccept(true);
    a.getInitialState().addTransition(new Transition(startCode,endCode,end));
    a.setDeterministic(true);
    testOne(r,new ByteRunAutomaton(a),startCode,endCode,ITERS_PER_DFA);
  }
}
