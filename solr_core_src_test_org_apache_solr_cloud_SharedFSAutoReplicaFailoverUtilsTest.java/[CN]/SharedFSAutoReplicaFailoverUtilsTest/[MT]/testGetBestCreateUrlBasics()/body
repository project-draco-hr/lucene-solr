{
  Result result=buildClusterState("csr1R*r2",NODE1);
  String createUrl=OverseerAutoReplicaFailoverThread.getBestCreateUrl(result.reader,result.badReplica,null);
  assertNull("Should be no live node to failover to",createUrl);
  result=buildClusterState("csr1R*r2",NODE1,NODE2);
  createUrl=OverseerAutoReplicaFailoverThread.getBestCreateUrl(result.reader,result.badReplica,null);
  assertNull("Only failover candidate node already has a replica",createUrl);
  result=buildClusterState("csr1R*r2sr3",NODE1,NODE2,NODE3);
  createUrl=OverseerAutoReplicaFailoverThread.getBestCreateUrl(result.reader,result.badReplica,null);
  assertEquals("Node3 does not have a replica from the bad slice and should be the best choice",NODE3_URL,createUrl);
  result=buildClusterState("csr1R*r2Fsr3r4r5",NODE1,NODE2,NODE3);
  createUrl=OverseerAutoReplicaFailoverThread.getBestCreateUrl(result.reader,result.badReplica,null);
  assertTrue(createUrl.equals(NODE3_URL));
  result=buildClusterState("csr1*r2r3sr3r3sr4",NODE1,NODE2,NODE3,NODE4);
  createUrl=OverseerAutoReplicaFailoverThread.getBestCreateUrl(result.reader,result.badReplica,null);
  assertEquals(NODE4_URL,createUrl);
  result=buildClusterState("csr1*r2sr3r3sr4sr4",NODE1,NODE2,NODE3,NODE4);
  createUrl=OverseerAutoReplicaFailoverThread.getBestCreateUrl(result.reader,result.badReplica,null);
  assertTrue(createUrl.equals(NODE3_URL) || createUrl.equals(NODE4_URL));
}
