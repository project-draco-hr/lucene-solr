{
  assertTrue("spans is null and it shouldn't be",spans != null);
  int seen=0;
  while (spans.next() == true) {
    if (expectedNumPayloads > 0) {
      assertTrue("isPayloadAvailable is not returning the correct value: " + spans.isPayloadAvailable() + " and it should be: "+ (expectedNumPayloads > 0),spans.isPayloadAvailable() == true);
    }
 else {
      assertTrue("isPayloadAvailable should be false",spans.isPayloadAvailable() == false);
    }
    if (spans.isPayloadAvailable()) {
      Collection<byte[]> payload=spans.getPayload();
      assertTrue("payload Size: " + payload.size() + " is not: "+ expectedNumPayloads,payload.size() == expectedNumPayloads);
      for (      final byte[] thePayload : payload) {
        assertTrue("payload[0] Size: " + thePayload.length + " is not: "+ expectedPayloadLength,thePayload.length == expectedPayloadLength);
        assertTrue(thePayload[0] + " does not equal: " + expectedFirstByte,thePayload[0] == expectedFirstByte);
      }
    }
    seen++;
  }
  assertTrue(seen + " does not equal: " + expectedNumSpans,seen == expectedNumSpans);
}
