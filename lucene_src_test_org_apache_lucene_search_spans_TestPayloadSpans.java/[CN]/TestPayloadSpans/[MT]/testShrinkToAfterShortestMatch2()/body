{
  MockRAMDirectory directory=new MockRAMDirectory();
  IndexWriter writer=new IndexWriter(directory,new IndexWriterConfig(TEST_VERSION_CURRENT,new TestPayloadAnalyzer()));
  Document doc=new Document();
  doc.add(new Field("content",new StringReader("a b a d k f a h i k a k")));
  writer.addDocument(doc);
  writer.close();
  IndexSearcher is=new IndexSearcher(directory,true);
  SpanTermQuery stq1=new SpanTermQuery(new Term("content","a"));
  SpanTermQuery stq2=new SpanTermQuery(new Term("content","k"));
  SpanQuery[] sqs={stq1,stq2};
  SpanNearQuery snq=new SpanNearQuery(sqs,0,true);
  Spans spans=snq.getSpans(is.getIndexReader());
  TopDocs topDocs=is.search(snq,1);
  Set<String> payloadSet=new HashSet<String>();
  for (int i=0; i < topDocs.scoreDocs.length; i++) {
    while (spans.next()) {
      Collection<byte[]> payloads=spans.getPayload();
      for (      final byte[] payload : payloads) {
        payloadSet.add(new String(payload));
      }
    }
  }
  assertEquals(2,payloadSet.size());
  assertTrue(payloadSet.contains("a:Noise:10"));
  assertTrue(payloadSet.contains("k:Noise:11"));
}
