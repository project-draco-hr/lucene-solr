{
  if (getBackupLocation() == null) {
    return;
  }
  String backupName="invalidbackuprequest";
  CloudSolrClient solrClient=cluster.getSolrClient();
  ClusterProp req=CollectionAdminRequest.setClusterProperty(CoreAdminParams.BACKUP_LOCATION,"/location/does/not/exist");
  assertEquals(0,req.process(solrClient).getStatus());
  CollectionAdminRequest.Backup backup=CollectionAdminRequest.backupCollection(collectionName,backupName).setRepositoryName(getBackupRepoName());
  try {
    backup.process(solrClient);
    fail("This request should have failed since the cluster property value for backup location property is invalid.");
  }
 catch (  SolrServerException ex) {
    assertTrue(ex.getCause() instanceof RemoteSolrException);
    assertEquals(ErrorCode.SERVER_ERROR.code,((RemoteSolrException)ex.getCause()).code());
  }
  String restoreCollectionName=collectionName + "_invalidrequest";
  CollectionAdminRequest.Restore restore=CollectionAdminRequest.restoreCollection(restoreCollectionName,backupName).setRepositoryName(getBackupRepoName());
  try {
    restore.process(solrClient);
    fail("This request should have failed since the cluster property value for backup location property is invalid.");
  }
 catch (  SolrServerException ex) {
    assertTrue(ex.getCause() instanceof RemoteSolrException);
    assertEquals(ErrorCode.SERVER_ERROR.code,((RemoteSolrException)ex.getCause()).code());
  }
}
