{
  try {
    DirectUpdateHandler2.commitOnClose=false;
    UpdateLog ulog=h.getCore().getUpdateHandler().getUpdateLog();
    File logDir=new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());
    clearIndex();
    assertU(commit());
    assertU(adoc("id","G1"));
    assertU(adoc("id","G2"));
    assertU(adoc("id","G3"));
    h.close();
    String[] files=ulog.getLogList(logDir);
    Arrays.sort(files);
    RandomAccessFile raf=new RandomAccessFile(new File(logDir,files[files.length - 1]),"rw");
    long len=raf.length();
    raf.seek(0);
    raf.write(new byte[(int)len]);
    raf.close();
    ignoreException("Failure to open existing log file");
    createCore();
    resetExceptionIgnores();
    assertJQ(req("q","*:*"),"/response/numFound==0");
    updateJ(jsonAdd(sdoc("id","G4","_version_","104")),params(DISTRIB_UPDATE_PARAM,FROM_LEADER));
    updateJ(jsonAdd(sdoc("id","G5","_version_","105")),params(DISTRIB_UPDATE_PARAM,FROM_LEADER));
    updateJ(jsonAdd(sdoc("id","G6","_version_","106")),params(DISTRIB_UPDATE_PARAM,FROM_LEADER));
    assertJQ(req("qt","/get","getVersions","3"),"/versions==[106,105,104]");
    assertU(commit());
    assertJQ(req("q","*:*"),"/response/numFound==3");
    deleteLogs();
  }
  finally {
    DirectUpdateHandler2.commitOnClose=true;
    UpdateLog.testing_logReplayHook=null;
    UpdateLog.testing_logReplayFinishHook=null;
  }
}
