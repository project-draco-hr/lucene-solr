{
  TermVectorsReader reader=new TermVectorsReader(dir,seg,fieldInfos,IOContext.READ);
  TermPositionVector vector;
  BytesRef[] terms;
  vector=(TermPositionVector)reader.get(0,testFields[0]);
  assertTrue(vector != null);
  terms=vector.getTerms();
  assertTrue(terms != null);
  assertTrue(terms.length == testTerms.length);
  for (int i=0; i < terms.length; i++) {
    String term=terms[i].utf8ToString();
    assertTrue(term.equals(testTerms[i]));
    int[] positions=vector.getTermPositions(i);
    assertTrue(positions != null);
    assertTrue(positions.length == this.positions[i].length);
    for (int j=0; j < positions.length; j++) {
      int position=positions[j];
      assertTrue(position == this.positions[i][j]);
    }
    TermVectorOffsetInfo[] offset=vector.getOffsets(i);
    assertTrue(offset != null);
    assertTrue(offset.length == this.offsets[i].length);
    for (int j=0; j < offset.length; j++) {
      TermVectorOffsetInfo termVectorOffsetInfo=offset[j];
      assertTrue(termVectorOffsetInfo.equals(offsets[i][j]));
    }
  }
  TermFreqVector freqVector=reader.get(0,testFields[1]);
  assertTrue(freqVector != null);
  assertTrue(freqVector instanceof TermPositionVector == false);
  terms=freqVector.getTerms();
  assertTrue(terms != null);
  assertTrue(terms.length == testTerms.length);
  for (int i=0; i < terms.length; i++) {
    String term=terms[i].utf8ToString();
    assertTrue(term.equals(testTerms[i]));
  }
  reader.close();
}
