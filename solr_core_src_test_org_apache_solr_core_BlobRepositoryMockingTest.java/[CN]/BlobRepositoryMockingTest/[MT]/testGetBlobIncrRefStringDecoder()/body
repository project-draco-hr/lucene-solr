{
  expect(mockContainer.isZooKeeperAware()).andReturn(true);
  expect(mapMock.get("foo!mocked")).andReturn(null);
  expect(mapMock.put(eq("foo!mocked"),anyObject(BlobRepository.BlobContent.class))).andReturn(null);
  EasyMock.replay(mocks);
  BlobRepository.BlobContentRef ref=repository.getBlobIncRef("foo!",new BlobRepository.Decoder<Object>(){
    @Override public Object decode(    InputStream inputStream){
      StringWriter writer=new StringWriter();
      try {
        IOUtils.copy(inputStream,writer,UTF8);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
      assertEquals(BLOBSTR,writer.toString());
      return PARSED;
    }
    @Override public String getName(){
      return "mocked";
    }
  }
);
  assertEquals("foo!",blobKey);
  assertTrue(blobFetched);
  assertNotNull(ref.blob);
  assertEquals(PARSED,ref.blob.get());
}
