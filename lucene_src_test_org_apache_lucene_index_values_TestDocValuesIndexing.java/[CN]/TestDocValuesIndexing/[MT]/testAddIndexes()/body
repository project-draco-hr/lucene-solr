{
  int valuesPerIndex=10;
  List<Type> values=Arrays.asList(Type.values());
  Collections.shuffle(values,random);
  Type first=values.get(0);
  Type second=values.get(1);
  String msg="[first=" + first.name() + ", second="+ second.name()+ "]";
  Directory d_1=newDirectory();
  IndexWriter w_1=new IndexWriter(d_1,writerConfig(random.nextBoolean()));
  indexValues(w_1,valuesPerIndex,first,values,false,7);
  w_1.commit();
  assertEquals(valuesPerIndex,w_1.maxDoc());
  _TestUtil.checkIndex(d_1,w_1.getConfig().getCodecProvider());
  Directory d_2=newDirectory();
  IndexWriter w_2=new IndexWriter(d_2,writerConfig(random.nextBoolean()));
  indexValues(w_2,valuesPerIndex,second,values,false,7);
  w_2.commit();
  assertEquals(valuesPerIndex,w_2.maxDoc());
  _TestUtil.checkIndex(d_2,w_2.getConfig().getCodecProvider());
  Directory target=newDirectory();
  IndexWriter w=new IndexWriter(target,writerConfig(random.nextBoolean()));
  IndexReader r_1=IndexReader.open(w_1);
  IndexReader r_2=IndexReader.open(w_2);
  if (random.nextBoolean()) {
    w.addIndexes(d_1,d_2);
  }
 else {
    w.addIndexes(r_1,r_2);
  }
  w.optimize(true);
  w.commit();
  _TestUtil.checkIndex(target,w.getConfig().getCodecProvider());
  assertEquals(valuesPerIndex * 2,w.maxDoc());
  IndexReader merged=IndexReader.open(w);
  DocValuesEnum vE_1=getValuesEnum(getDocValues(r_1,first.name()));
  DocValuesEnum vE_2=getValuesEnum(getDocValues(r_2,second.name()));
  DocValuesEnum vE_1_merged=getValuesEnum(getDocValues(merged,first.name()));
  DocValuesEnum vE_2_merged=getValuesEnum(getDocValues(merged,second.name()));
  if (second == Type.BYTES_VAR_STRAIGHT || second == Type.BYTES_FIXED_STRAIGHT) {
    assertEquals(msg,valuesPerIndex - 1,vE_2_merged.advance(valuesPerIndex - 1));
  }
  for (int i=0; i < valuesPerIndex; i++) {
    assertEquals(msg,i,vE_1.nextDoc());
    assertEquals(msg,i,vE_1_merged.nextDoc());
    assertEquals(msg,i,vE_2.nextDoc());
    assertEquals(msg,i + valuesPerIndex,vE_2_merged.nextDoc());
  }
  assertEquals(msg,DocValuesEnum.NO_MORE_DOCS,vE_1.nextDoc());
  assertEquals(msg,DocValuesEnum.NO_MORE_DOCS,vE_2.nextDoc());
  assertEquals(msg,DocValuesEnum.NO_MORE_DOCS,vE_1_merged.advance(valuesPerIndex * 2));
  assertEquals(msg,DocValuesEnum.NO_MORE_DOCS,vE_2_merged.nextDoc());
  r_1.close();
  r_2.close();
  merged.close();
  w_1.close(true);
  w_2.close(true);
  w.close(true);
  d_1.close();
  d_2.close();
  target.close();
}
