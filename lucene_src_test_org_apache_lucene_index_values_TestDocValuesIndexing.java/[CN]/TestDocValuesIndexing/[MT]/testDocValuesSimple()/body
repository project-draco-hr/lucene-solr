{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,writerConfig(false));
  for (int i=0; i < 5; i++) {
    Document doc=new Document();
    IndexDocValuesField valuesField=new IndexDocValuesField("docId");
    valuesField.setInt(i);
    doc.add(valuesField);
    doc.add(new TextField("docId","" + i));
    writer.addDocument(doc);
  }
  writer.commit();
  writer.forceMerge(1,true);
  writer.close(true);
  IndexReader reader=IndexReader.open(dir,1);
  assertEquals(1,reader.getSequentialSubReaders().length);
  IndexSearcher searcher=new IndexSearcher(reader);
  BooleanQuery query=new BooleanQuery();
  query.add(new TermQuery(new Term("docId","0")),BooleanClause.Occur.SHOULD);
  query.add(new TermQuery(new Term("docId","1")),BooleanClause.Occur.SHOULD);
  query.add(new TermQuery(new Term("docId","2")),BooleanClause.Occur.SHOULD);
  query.add(new TermQuery(new Term("docId","3")),BooleanClause.Occur.SHOULD);
  query.add(new TermQuery(new Term("docId","4")),BooleanClause.Occur.SHOULD);
  TopDocs search=searcher.search(query,10);
  assertEquals(5,search.totalHits);
  ScoreDoc[] scoreDocs=search.scoreDocs;
  IndexDocValues docValues=MultiPerDocValues.getPerDocs(reader).docValues("docId");
  Source source=docValues.getSource();
  for (int i=0; i < scoreDocs.length; i++) {
    assertEquals(i,scoreDocs[i].doc);
    assertEquals(i,source.getInt(scoreDocs[i].doc));
  }
  reader.close();
  dir.close();
}
