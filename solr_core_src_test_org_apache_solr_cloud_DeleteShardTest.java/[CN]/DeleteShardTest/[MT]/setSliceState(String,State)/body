{
  DistributedQueue inQueue=Overseer.getStateUpdateQueue(cloudClient.getZkStateReader().getZkClient());
  Map<String,Object> propMap=new HashMap<>();
  propMap.put(Overseer.QUEUE_OPERATION,OverseerAction.UPDATESHARDSTATE.toLower());
  propMap.put(slice,state.toString());
  propMap.put(ZkStateReader.COLLECTION_PROP,"collection1");
  ZkNodeProps m=new ZkNodeProps(propMap);
  ZkStateReader zkStateReader=cloudClient.getZkStateReader();
  inQueue.offer(Utils.toJSON(m));
  boolean transition=false;
  for (int counter=10; counter > 0; counter--) {
    ClusterState clusterState=zkStateReader.getClusterState();
    State sliceState=clusterState.getSlice("collection1",slice).getState();
    if (sliceState == state) {
      transition=true;
      break;
    }
    Thread.sleep(1000);
  }
  if (!transition) {
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Could not set shard [" + slice + "] as "+ state);
  }
}
