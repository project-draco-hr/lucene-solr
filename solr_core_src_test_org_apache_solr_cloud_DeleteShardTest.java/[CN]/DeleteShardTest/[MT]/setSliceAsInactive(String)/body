{
  DistributedQueue inQueue=Overseer.getInQueue(cloudClient.getZkStateReader().getZkClient());
  Map<String,Object> propMap=new HashMap<String,Object>();
  propMap.put(Overseer.QUEUE_OPERATION,"updateshardstate");
  propMap.put(slice,Slice.INACTIVE);
  propMap.put(ZkStateReader.COLLECTION_PROP,"collection1");
  ZkNodeProps m=new ZkNodeProps(propMap);
  ZkStateReader zkStateReader=cloudClient.getZkStateReader();
  inQueue.offer(ZkStateReader.toJSON(m));
  boolean transition=false;
  for (int counter=10; counter > 0; counter--) {
    zkStateReader.updateClusterState(true);
    ClusterState clusterState=zkStateReader.getClusterState();
    String sliceState=clusterState.getSlice("collection1",slice).getState();
    if (sliceState.equals(Slice.INACTIVE)) {
      transition=true;
      break;
    }
    Thread.sleep(1000);
  }
  if (!transition) {
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Could not set shard [" + slice + "] as INACTIVE");
  }
}
