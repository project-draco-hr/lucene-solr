{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));
  Term ta=new Term("content","aaa");
  for (int i=0; i < 10; i++)   addDoc(writer,"aaa aaa aaa aaa");
  Term tb=new Term("content","bbb");
  for (int i=0; i < 16; i++)   addDoc(writer,"bbb bbb bbb bbb");
  Term tc=new Term("content","ccc");
  for (int i=0; i < 50; i++)   addDoc(writer,"ccc ccc ccc ccc");
  writer.forceMerge(1);
  writer.close();
  IndexReader reader=DirectoryReader.open(dir,indexDivisor);
  DocsEnum tdocs=_TestUtil.docs(random(),reader,ta.field(),new BytesRef(ta.text()),MultiFields.getLiveDocs(reader),null,DocsEnum.FLAG_FREQS);
  assertTrue(tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(0,tdocs.docID());
  assertEquals(4,tdocs.freq());
  assertTrue(tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(1,tdocs.docID());
  assertEquals(4,tdocs.freq());
  assertTrue(tdocs.advance(0) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(2,tdocs.docID());
  assertTrue(tdocs.advance(4) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(4,tdocs.docID());
  assertTrue(tdocs.advance(9) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(9,tdocs.docID());
  assertFalse(tdocs.advance(10) != DocIdSetIterator.NO_MORE_DOCS);
  tdocs=_TestUtil.docs(random(),reader,ta.field(),new BytesRef(ta.text()),MultiFields.getLiveDocs(reader),null,0);
  assertTrue(tdocs.advance(0) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(0,tdocs.docID());
  assertTrue(tdocs.advance(4) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(4,tdocs.docID());
  assertTrue(tdocs.advance(9) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(9,tdocs.docID());
  assertFalse(tdocs.advance(10) != DocIdSetIterator.NO_MORE_DOCS);
  tdocs=_TestUtil.docs(random(),reader,tb.field(),new BytesRef(tb.text()),MultiFields.getLiveDocs(reader),null,DocsEnum.FLAG_FREQS);
  assertTrue(tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(10,tdocs.docID());
  assertEquals(4,tdocs.freq());
  assertTrue(tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(11,tdocs.docID());
  assertEquals(4,tdocs.freq());
  assertTrue(tdocs.advance(5) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(12,tdocs.docID());
  assertTrue(tdocs.advance(15) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(15,tdocs.docID());
  assertTrue(tdocs.advance(24) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(24,tdocs.docID());
  assertTrue(tdocs.advance(25) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(25,tdocs.docID());
  assertFalse(tdocs.advance(26) != DocIdSetIterator.NO_MORE_DOCS);
  tdocs=_TestUtil.docs(random(),reader,tb.field(),new BytesRef(tb.text()),MultiFields.getLiveDocs(reader),null,DocsEnum.FLAG_FREQS);
  assertTrue(tdocs.advance(5) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(10,tdocs.docID());
  assertTrue(tdocs.advance(15) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(15,tdocs.docID());
  assertTrue(tdocs.advance(24) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(24,tdocs.docID());
  assertTrue(tdocs.advance(25) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(25,tdocs.docID());
  assertFalse(tdocs.advance(26) != DocIdSetIterator.NO_MORE_DOCS);
  tdocs=_TestUtil.docs(random(),reader,tc.field(),new BytesRef(tc.text()),MultiFields.getLiveDocs(reader),null,DocsEnum.FLAG_FREQS);
  assertTrue(tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(26,tdocs.docID());
  assertEquals(4,tdocs.freq());
  assertTrue(tdocs.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(27,tdocs.docID());
  assertEquals(4,tdocs.freq());
  assertTrue(tdocs.advance(5) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(28,tdocs.docID());
  assertTrue(tdocs.advance(40) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(40,tdocs.docID());
  assertTrue(tdocs.advance(57) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(57,tdocs.docID());
  assertTrue(tdocs.advance(74) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(74,tdocs.docID());
  assertTrue(tdocs.advance(75) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(75,tdocs.docID());
  assertFalse(tdocs.advance(76) != DocIdSetIterator.NO_MORE_DOCS);
  tdocs=_TestUtil.docs(random(),reader,tc.field(),new BytesRef(tc.text()),MultiFields.getLiveDocs(reader),null,0);
  assertTrue(tdocs.advance(5) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(26,tdocs.docID());
  assertTrue(tdocs.advance(40) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(40,tdocs.docID());
  assertTrue(tdocs.advance(57) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(57,tdocs.docID());
  assertTrue(tdocs.advance(74) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(74,tdocs.docID());
  assertTrue(tdocs.advance(75) != DocIdSetIterator.NO_MORE_DOCS);
  assertEquals(75,tdocs.docID());
  assertFalse(tdocs.advance(76) != DocIdSetIterator.NO_MORE_DOCS);
  reader.close();
  dir.close();
}
