{
  if (zkController != null && zkController.getCoreContainer().isShutDown())   return;
  org.apache.zookeeper.data.Stat stat=new org.apache.zookeeper.data.Stat();
  String path="/overseer_elect/leader";
  byte[] data=null;
  try {
    data=zkClient.getData(path,null,stat,true);
  }
 catch (  Exception e) {
    log.error("could not read the data",e);
    return;
  }
  try {
    Map m=(Map)Utils.fromJSON(data);
    String id=(String)m.get("id");
    if (overseerCollectionProcessor.getId().equals(id)) {
      try {
        log.info("I'm exiting , but I'm still the leader");
        zkClient.delete(path,stat.getVersion(),true);
      }
 catch (      KeeperException.BadVersionException e) {
      }
catch (      Exception e) {
        log.error("Could not delete my leader node ",e);
      }
    }
 else {
      log.info("somebody else has already taken up the overseer position");
    }
  }
  finally {
    try {
      if (zkController != null && !zkController.getCoreContainer().isShutDown()) {
        zkController.rejoinOverseerElection(null,false);
      }
    }
 catch (    Exception e) {
      log.warn("Unable to rejoinElection ",e);
    }
  }
}
