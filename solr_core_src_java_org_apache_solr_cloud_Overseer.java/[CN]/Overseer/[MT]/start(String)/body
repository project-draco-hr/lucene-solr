{
  this.id=id;
  closed=false;
  doClose();
  stats=new Stats();
  log.info("Overseer (id=" + id + ") starting");
  createOverseerNode(reader.getZkClient());
  ThreadGroup tg=new ThreadGroup("Overseer state updater.");
  updaterThread=new OverseerThread(tg,new ClusterStateUpdater(reader,id,stats),"OverseerStateUpdate-" + id);
  updaterThread.setDaemon(true);
  ThreadGroup ccTg=new ThreadGroup("Overseer collection creation process.");
  OverseerNodePrioritizer overseerPrioritizer=new OverseerNodePrioritizer(reader,adminPath,shardHandler.getShardHandlerFactory());
  overseerCollectionConfigSetProcessor=new OverseerCollectionConfigSetProcessor(reader,id,shardHandler,adminPath,stats,Overseer.this,overseerPrioritizer);
  ccThread=new OverseerThread(ccTg,overseerCollectionConfigSetProcessor,"OverseerCollectionConfigSetProcessor-" + id);
  ccThread.setDaemon(true);
  ThreadGroup ohcfTg=new ThreadGroup("Overseer Hdfs SolrCore Failover Thread.");
  OverseerAutoReplicaFailoverThread autoReplicaFailoverThread=new OverseerAutoReplicaFailoverThread(config,reader,updateShardHandler);
  arfoThread=new OverseerThread(ohcfTg,autoReplicaFailoverThread,"OverseerHdfsCoreFailoverThread-" + id);
  arfoThread.setDaemon(true);
  updaterThread.start();
  ccThread.start();
  arfoThread.start();
}
