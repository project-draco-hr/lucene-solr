{
  log.info("Create collection {} with numShards {}",collectionName,numShards);
  HashPartitioner hp=new HashPartitioner();
  List<HashPartitioner.Range> ranges=hp.partitionRange(numShards,hp.fullRange());
  Map<String,Map<String,Slice>> newStates=new LinkedHashMap<String,Map<String,Slice>>();
  Map<String,Slice> newSlices=new LinkedHashMap<String,Slice>();
  newStates.putAll(state.getCollectionStates());
  for (int i=0; i < numShards; i++) {
    final String sliceName="shard" + (i + 1);
    Map<String,Object> sliceProps=new LinkedHashMap<String,Object>(1);
    sliceProps.put(Slice.RANGE,ranges.get(i));
    newSlices.put(sliceName,new Slice(sliceName,null,sliceProps));
  }
  newStates.put(collectionName,newSlices);
  ClusterState newClusterState=new ClusterState(state.getLiveNodes(),newStates);
  return newClusterState;
}
