{
  if (STATE.equals(operation)) {
    if (isLegacy(clusterProps)) {
      clusterState=updateState(clusterState,message);
    }
 else {
      clusterState=updateStateNew(clusterState,message);
    }
  }
 else   if (DELETECORE.equals(operation)) {
    clusterState=removeCore(clusterState,message);
  }
 else   if (REMOVECOLLECTION.equals(operation)) {
    clusterState=removeCollection(clusterState,message);
  }
 else   if (REMOVESHARD.equals(operation)) {
    clusterState=removeShard(clusterState,message);
  }
 else   if (ZkStateReader.LEADER_PROP.equals(operation)) {
    StringBuilder sb=new StringBuilder();
    String baseUrl=message.getStr(ZkStateReader.BASE_URL_PROP);
    String coreName=message.getStr(ZkStateReader.CORE_NAME_PROP);
    sb.append(baseUrl);
    if (baseUrl != null && !baseUrl.endsWith("/"))     sb.append("/");
    sb.append(coreName == null ? "" : coreName);
    if (!(sb.substring(sb.length() - 1).equals("/")))     sb.append("/");
    clusterState=setShardLeader(clusterState,message.getStr(ZkStateReader.COLLECTION_PROP),message.getStr(ZkStateReader.SHARD_ID_PROP),sb.length() > 0 ? sb.toString() : null);
  }
 else   if (CREATESHARD.equals(operation)) {
    clusterState=createShard(clusterState,message);
  }
 else   if (UPDATESHARDSTATE.equals(operation)) {
    clusterState=updateShardState(clusterState,message);
  }
 else   if (OverseerCollectionProcessor.CREATECOLLECTION.equals(operation)) {
    clusterState=buildCollection(clusterState,message);
  }
 else   if (ADDREPLICA.isEqual(operation)) {
    clusterState=createReplica(clusterState,message);
  }
 else   if (Overseer.ADD_ROUTING_RULE.equals(operation)) {
    clusterState=addRoutingRule(clusterState,message);
  }
 else   if (Overseer.REMOVE_ROUTING_RULE.equals(operation)) {
    clusterState=removeRoutingRule(clusterState,message);
  }
 else   if (CLUSTERPROP.isEqual(operation)) {
    handleProp(message);
  }
 else   if (QUIT.equals(operation)) {
    log.info("Quit command received {}",LeaderElector.getNodeName(myId));
    overseerCollectionProcessor.close();
    close();
  }
 else {
    throw new RuntimeException("unknown operation:" + operation + " contents:"+ message.getProperties());
  }
  return clusterState;
}
