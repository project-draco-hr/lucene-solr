{
  String cnn=message.getStr(ZkStateReader.CORE_NODE_NAME_PROP);
  final String collection=message.getStr(ZkStateReader.COLLECTION_PROP);
  final Map<String,DocCollection> newCollections=new LinkedHashMap<String,DocCollection>(clusterState.getCollectionStates());
  DocCollection coll=newCollections.get(collection);
  if (coll == null) {
    try {
      zkClient.clean("/collections/" + collection);
    }
 catch (    InterruptedException e) {
      SolrException.log(log,"Cleaning up collection in zk was interrupted:" + collection,e);
      Thread.currentThread().interrupt();
    }
catch (    KeeperException e) {
      SolrException.log(log,"Problem cleaning up collection in zk:" + collection,e);
    }
    return clusterState;
  }
  Map<String,Slice> newSlices=new LinkedHashMap<String,Slice>();
  boolean lastSlice=false;
  for (  Slice slice : coll.getSlices()) {
    Replica replica=slice.getReplica(cnn);
    if (replica != null) {
      Map<String,Replica> newReplicas=slice.getReplicasCopy();
      newReplicas.remove(cnn);
      if (newReplicas.size() == 0) {
        slice=null;
        lastSlice=true;
      }
 else {
        slice=new Slice(slice.getName(),newReplicas,slice.getProperties());
      }
    }
    if (slice != null) {
      newSlices.put(slice.getName(),slice);
    }
  }
  if (lastSlice) {
    for (    Slice slice : coll.getSlices()) {
      if (slice.getReplicas().size() == 0) {
        newSlices.remove(slice.getName());
      }
    }
  }
  if (newSlices.size() == 0) {
    newCollections.remove(coll.getName());
    try {
      zkClient.clean("/collections/" + collection);
    }
 catch (    InterruptedException e) {
      SolrException.log(log,"Cleaning up collection in zk was interrupted:" + collection,e);
      Thread.currentThread().interrupt();
    }
catch (    KeeperException e) {
      SolrException.log(log,"Problem cleaning up collection in zk:" + collection,e);
    }
  }
 else {
    DocCollection newCollection=new DocCollection(coll.getName(),newSlices,coll.getProperties(),coll.getRouter());
    newCollections.put(newCollection.getName(),newCollection);
  }
  ClusterState newState=new ClusterState(clusterState.getLiveNodes(),newCollections);
  return newState;
}
