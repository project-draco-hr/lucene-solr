{
  NamedList<Object> commands=new SimpleOrderedMap<>();
  for (  Map.Entry<String,?> entry : result.entrySet()) {
    Object value=entry.getValue();
    if (TopGroups.class.isInstance(value)) {
      @SuppressWarnings("unchecked") TopGroups<BytesRef> topGroups=(TopGroups<BytesRef>)value;
      NamedList<Object> command=new SimpleOrderedMap<>();
      command.add("matches",rb.totalHitCount);
      Integer totalGroupCount=rb.mergedGroupCounts.get(entry.getKey());
      if (totalGroupCount != null) {
        command.add("ngroups",totalGroupCount);
      }
      List<NamedList> groups=new ArrayList<>();
      SchemaField groupField=searcher.getSchema().getField(entry.getKey());
      FieldType groupFieldType=groupField.getType();
      for (      GroupDocs<BytesRef> group : topGroups.groups) {
        SimpleOrderedMap<Object> groupResult=new SimpleOrderedMap<>();
        if (group.groupValue != null) {
          groupResult.add("groupValue",groupFieldType.toObject(groupField.createField(group.groupValue.utf8ToString(),1.0f)));
        }
 else {
          groupResult.add("groupValue",null);
        }
        SolrDocumentList docList=new SolrDocumentList();
        docList.setNumFound(group.totalHits);
        if (!Float.isNaN(group.maxScore)) {
          docList.setMaxScore(group.maxScore);
        }
        docList.setStart(rb.getGroupingSpec().getGroupOffset());
        for (        ScoreDoc scoreDoc : group.scoreDocs) {
          docList.add(solrDocumentSource.retrieve(scoreDoc));
        }
        groupResult.add("doclist",docList);
        groups.add(groupResult);
      }
      command.add("groups",groups);
      commands.add(entry.getKey(),command);
    }
 else     if (QueryCommandResult.class.isInstance(value)) {
      QueryCommandResult queryCommandResult=(QueryCommandResult)value;
      NamedList<Object> command=new SimpleOrderedMap<>();
      command.add("matches",queryCommandResult.getMatches());
      SolrDocumentList docList=new SolrDocumentList();
      docList.setNumFound(queryCommandResult.getTopDocs().totalHits);
      if (!Float.isNaN(queryCommandResult.getTopDocs().getMaxScore())) {
        docList.setMaxScore(queryCommandResult.getTopDocs().getMaxScore());
      }
      docList.setStart(rb.getGroupingSpec().getGroupOffset());
      for (      ScoreDoc scoreDoc : queryCommandResult.getTopDocs().scoreDocs) {
        docList.add(solrDocumentSource.retrieve(scoreDoc));
      }
      command.add("doclist",docList);
      commands.add(entry.getKey(),command);
    }
  }
  rb.rsp.add("grouped",commands);
}
