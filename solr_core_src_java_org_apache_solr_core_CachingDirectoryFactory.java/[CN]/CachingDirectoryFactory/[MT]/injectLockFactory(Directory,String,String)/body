{
  if (null == rawLockType) {
    log.warn("No lockType configured for " + dir + " assuming 'simple'");
    rawLockType="simple";
  }
  final String lockType=rawLockType.toLowerCase(Locale.ROOT).trim();
  if ("simple".equals(lockType)) {
    dir.setLockFactory(new SimpleFSLockFactory(lockPath));
  }
 else   if ("native".equals(lockType)) {
    dir.setLockFactory(new NativeFSLockFactory(lockPath));
  }
 else   if ("single".equals(lockType)) {
    if (!(dir.getLockFactory() instanceof SingleInstanceLockFactory))     dir.setLockFactory(new SingleInstanceLockFactory());
  }
 else   if ("hdfs".equals(lockType)) {
    Directory del=dir;
    if (dir instanceof NRTCachingDirectory) {
      del=((NRTCachingDirectory)del).getDelegate();
    }
    if (del instanceof BlockDirectory) {
      del=((BlockDirectory)del).getDirectory();
    }
    if (!(del instanceof HdfsDirectory)) {
      throw new SolrException(ErrorCode.FORBIDDEN,"Directory: " + del.getClass().getName() + ", but hdfs lock factory can only be used with HdfsDirectory");
    }
    dir.setLockFactory(new HdfsLockFactory(((HdfsDirectory)del).getHdfsDirPath(),((HdfsDirectory)del).getConfiguration()));
  }
 else   if ("none".equals(lockType)) {
    log.error("CONFIGURATION WARNING: locks are disabled on " + dir);
    dir.setLockFactory(NoLockFactory.getNoLockFactory());
  }
 else {
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unrecognized lockType: " + rawLockType);
  }
  return dir;
}
