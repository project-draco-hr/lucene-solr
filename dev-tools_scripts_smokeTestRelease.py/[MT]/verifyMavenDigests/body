def verifyMavenDigests(artifacts):
    reJarWarPom = re.compile('\\.(?:[wj]ar|pom)$')
    for project in ('lucene', 'solr'):
        for artifactFile in [a for a in artifacts[project] if reJarWarPom.search(a)]:
            if ((artifactFile + '.md5') not in artifacts[project]):
                raise RuntimeError(('missing: MD5 digest for %s' % artifactFile))
            if ((artifactFile + '.sha1') not in artifacts[project]):
                raise RuntimeError(('missing: SHA1 digest for %s' % artifactFile))
            with open((artifactFile + '.md5'), 'r') as md5File:
                md5Expected = md5File.read().strip()
            with open((artifactFile + '.sha1'), 'r') as sha1File:
                sha1Expected = sha1File.read().strip()
            md5 = hashlib.md5()
            sha1 = hashlib.sha1()
            inputFile = open(artifactFile)
            while True:
                bytes = inputFile.read(65536)
                if (bytes == ''):
                    break
                md5.update(bytes)
                sha1.update(bytes)
            inputFile.close()
            md5Actual = md5.hexdigest()
            sha1Actual = sha1.hexdigest()
            if (md5Actual != md5Expected):
                raise RuntimeError(('MD5 digest mismatch for %s: expected %s but got %s' % (artifactFile, md5Expected, md5Actual)))
            if (sha1Actual != sha1Expected):
                raise RuntimeError(('SHA1 digest mismatch for %s: expected %s but got %s' % (artifactFile, sha1Expected, sha1Actual)))
