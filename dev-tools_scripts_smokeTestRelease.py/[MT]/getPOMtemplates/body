def getPOMtemplates(POMtemplates, tmpDir, releaseBranchSvnURL):
    allPOMtemplates = []
    sourceLocation = releaseBranchSvnURL
    if (sourceLocation is None):
        sourceLocation = os.path.abspath(('%s/../maven' % sys.path[0]))
        rePOMtemplate = re.compile('^pom.xml.template$')
        for (root, dirs, files) in os.walk(sourceLocation):
            allPOMtemplates.extend([os.path.join(root, f) for f in files if rePOMtemplate.search(f)])
    else:
        sourceLocation += 'dev-tools/maven/'
        targetDir = ('%s/dev-tools/maven' % tmpDir)
        if (not os.path.exists(targetDir)):
            os.makedirs(targetDir)
        crawl(allPOMtemplates, sourceLocation, targetDir, set(['Apache Subversion']))
    POMtemplates['lucene'] = [p for p in allPOMtemplates if ('/maven/lucene/' in p)]
    if (POMtemplates['lucene'] is None):
        raise RuntimeError(('No Lucene POMs found at %s' % sourceLocation))
    POMtemplates['solr'] = [p for p in allPOMtemplates if ('/maven/solr/' in p)]
    if (POMtemplates['solr'] is None):
        raise RuntimeError(('No Solr POMs found at %s' % sourceLocation))
    POMtemplates['grandfather'] = [p for p in allPOMtemplates if ('/maven/pom.xml.template' in p)]
    if (POMtemplates['grandfather'] is None):
        raise RuntimeError(('No Lucene/Solr grandfather POM found at %s' % sourceLocation))
