{
  IndexWriter iwriter=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setMergeScheduler(new SerialMergeScheduler()).setMergePolicy(newLogMergePolicy()));
  iwriter.commit();
  IndexReader reader=IndexReader.open(dir,false);
  try {
    int M=3;
    FieldType customType=new FieldType(TextField.TYPE_STORED);
    customType.setTokenized(false);
    FieldType customType2=new FieldType(TextField.TYPE_STORED);
    customType2.setTokenized(false);
    customType2.setOmitNorms(true);
    FieldType customType3=new FieldType();
    customType3.setStored(true);
    for (int i=0; i < 4; i++) {
      for (int j=0; j < M; j++) {
        Document doc=new Document();
        doc.add(newField("id",i + "_" + j,customType));
        doc.add(newField("id2",i + "_" + j,customType2));
        doc.add(newField("id3",i + "_" + j,customType3));
        iwriter.addDocument(doc);
        if (i > 0) {
          int k=i - 1;
          int n=j + k * M;
          Document prevItereationDoc=reader.document(n);
          assertNotNull(prevItereationDoc);
          String id=prevItereationDoc.get("id");
          assertEquals(k + "_" + j,id);
        }
      }
      iwriter.commit();
      if (withReopen) {
        IndexReader r2=reader.reopen();
        if (reader != r2) {
          reader.close();
          reader=r2;
        }
      }
 else {
        reader.close();
        reader=IndexReader.open(dir,false);
      }
    }
  }
  finally {
    iwriter.close();
    reader.close();
  }
}
