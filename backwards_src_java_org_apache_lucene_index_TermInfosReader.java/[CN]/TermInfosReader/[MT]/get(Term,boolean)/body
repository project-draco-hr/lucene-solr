{
  if (size == 0)   return null;
  ensureIndexIsRead();
  TermInfo ti;
  ThreadResources resources=getThreadResources();
  Cache<Term,TermInfo> cache=null;
  if (useCache) {
    cache=resources.termInfoCache;
    ti=cache.get(term);
    if (ti != null) {
      return ti;
    }
  }
  SegmentTermEnum enumerator=resources.termEnum;
  if (enumerator.term() != null && ((enumerator.prev() != null && term.compareTo(enumerator.prev()) > 0) || term.compareTo(enumerator.term()) >= 0)) {
    int enumOffset=(int)(enumerator.position / totalIndexInterval) + 1;
    if (indexTerms.length == enumOffset || term.compareTo(indexTerms[enumOffset]) < 0) {
      int numScans=enumerator.scanTo(term);
      if (enumerator.term() != null && term.compareTo(enumerator.term()) == 0) {
        ti=enumerator.termInfo();
        if (cache != null && numScans > 1) {
          cache.put(term,ti);
        }
      }
 else {
        ti=null;
      }
      return ti;
    }
  }
  seekEnum(enumerator,getIndexOffset(term));
  enumerator.scanTo(term);
  if (enumerator.term() != null && term.compareTo(enumerator.term()) == 0) {
    ti=enumerator.termInfo();
    if (cache != null) {
      cache.put(term,ti);
    }
  }
 else {
    ti=null;
  }
  return ti;
}
