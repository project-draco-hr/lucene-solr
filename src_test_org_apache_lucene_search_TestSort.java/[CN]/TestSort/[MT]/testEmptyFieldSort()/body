{
  sort.setSort("string");
  assertMatches(full,queryF,sort,"ZJI");
  sort.setSort("string",true);
  assertMatches(full,queryF,sort,"IJZ");
  sort.setSort("int");
  assertMatches(full,queryF,sort,"IZJ");
  sort.setSort("int",true);
  assertMatches(full,queryF,sort,"JZI");
  sort.setSort("float");
  assertMatches(full,queryF,sort,"ZJI");
  sort.setSort(new SortField[]{new SortField("nosuchfield",SortField.STRING),new SortField("float")});
  assertMatches(full,queryF,sort,"ZJI");
  sort.setSort("float",true);
  assertMatches(full,queryF,sort,"IJZ");
  sort.setSort(new SortField[]{new SortField("int"),new SortField("string",SortField.STRING),new SortField("float")});
  assertMatches(full,queryG,sort,"ZWXY");
  sort.setSort(new SortField[]{new SortField("int"),new SortField("string",SortField.STRING),new SortField("float",true)});
  assertMatches(full,queryG,sort,"ZYXW");
  Searcher multiSearcher=new MultiSearcher(new Searchable[]{full});
  sort.setSort(new SortField[]{new SortField("int"),new SortField("string",SortField.STRING),new SortField("float")});
  assertMatches(multiSearcher,queryG,sort,"ZWXY");
  sort.setSort(new SortField[]{new SortField("int"),new SortField("string",SortField.STRING),new SortField("float",true)});
  assertMatches(multiSearcher,queryG,sort,"ZYXW");
  Searcher parallelSearcher=new ParallelMultiSearcher(new Searchable[]{full});
  sort.setSort(new SortField[]{new SortField("int"),new SortField("string",SortField.STRING),new SortField("float")});
  assertMatches(parallelSearcher,queryG,sort,"ZWXY");
  sort.setSort(new SortField[]{new SortField("int"),new SortField("string",SortField.STRING),new SortField("float",true)});
  assertMatches(parallelSearcher,queryG,sort,"ZYXW");
}
