{
  String stringIncludingLocalParams=qstr;
  ModifiableSolrParams localParams=null;
  SolrParams globalParams=req.getParams();
  boolean valFollowedParams=true;
  int localParamsEnd=-1;
  if (qstr != null && qstr.startsWith(QueryParsing.LOCALPARAM_START)) {
    localParams=new ModifiableSolrParams();
    localParamsEnd=QueryParsing.parseLocalParams(qstr,0,localParams,globalParams);
    String val=localParams.get(QueryParsing.V);
    if (val != null) {
      valFollowedParams=false;
    }
 else {
      valFollowedParams=true;
      val=qstr.substring(localParamsEnd);
      localParams.set(QueryParsing.V,val);
    }
  }
  String parserName;
  if (localParams == null) {
    parserName=defaultParser;
  }
 else {
    parserName=localParams.get(QueryParsing.TYPE,defaultParser);
    qstr=localParams.get("v");
  }
  parserName=parserName == null ? QParserPlugin.DEFAULT_QTYPE : parserName;
  QParserPlugin qplug=req.getCore().getQueryPlugin(parserName);
  QParser parser=qplug.createParser(qstr,localParams,req.getParams(),req);
  parser.stringIncludingLocalParams=stringIncludingLocalParams;
  parser.valFollowedParams=valFollowedParams;
  parser.localParamsEnd=localParamsEnd;
  return parser;
}
