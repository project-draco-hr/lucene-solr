{
  LightAutomaton result=new LightAutomaton();
  int numStates=getNumStates();
  for (int i=0; i < numStates; i++) {
    result.createState();
    result.setAccept(i,isAccept(i));
  }
  int deadState=result.createState();
  result.addTransition(deadState,deadState,Character.MIN_CODE_POINT,Character.MAX_CODE_POINT);
  Transition t=new Transition();
  for (int i=0; i < numStates; i++) {
    int maxi=Character.MIN_CODE_POINT;
    int count=initTransition(i,t);
    for (int j=0; j < count; j++) {
      getNextTransition(t);
      result.addTransition(i,t.dest,t.min,t.max);
      if (t.min > maxi) {
        result.addTransition(i,deadState,maxi,t.min - 1);
      }
      if (t.max + 1 > maxi) {
        maxi=t.max + 1;
      }
    }
    if (maxi <= Character.MAX_CODE_POINT) {
      result.addTransition(i,deadState,maxi,Character.MAX_CODE_POINT);
    }
  }
  result.finishState();
  return result;
}
