{
  if (intervalStr == null)   throw new SyntaxError("empty facet interval");
  intervalStr=intervalStr.trim();
  if (intervalStr.length() == 0)   throw new SyntaxError("empty facet interval");
  key=intervalStr;
  if (intervalStr.charAt(0) == '(') {
    startOpen=true;
  }
 else   if (intervalStr.charAt(0) == '[') {
    startOpen=false;
  }
 else {
    throw new SyntaxError("Invalid start character " + intervalStr.charAt(0) + " in facet interval "+ intervalStr);
  }
  final int lastNdx=intervalStr.length() - 1;
  if (intervalStr.charAt(lastNdx) == ')') {
    endOpen=true;
  }
 else   if (intervalStr.charAt(lastNdx) == ']') {
    endOpen=false;
  }
 else {
    throw new SyntaxError("Invalid end character " + intervalStr.charAt(0) + " in facet interval "+ intervalStr);
  }
  StringBuilder startStr=new StringBuilder(lastNdx);
  int i=unescape(intervalStr,1,lastNdx,startStr);
  if (i == lastNdx) {
    if (intervalStr.charAt(lastNdx - 1) == ',') {
      throw new SyntaxError("Empty interval limit");
    }
    throw new SyntaxError("Missing unescaped comma separating interval ends in " + intervalStr);
  }
  try {
    start=getLimitFromString(schemaField,startStr);
  }
 catch (  SyntaxError|SolrException e) {
    throw new SyntaxError(String.format(Locale.ROOT,"Invalid start interval for key '%s': %s",key,e.getMessage()),e);
  }
  StringBuilder endStr=new StringBuilder(lastNdx);
  i=unescape(intervalStr,i,lastNdx,endStr);
  if (i != lastNdx) {
    throw new SyntaxError("Extra unescaped comma at index " + i + " in interval "+ intervalStr);
  }
  try {
    end=getLimitFromString(schemaField,endStr);
  }
 catch (  SyntaxError|SolrException e) {
    throw new SyntaxError(String.format(Locale.ROOT,"Invalid end interval for key '%s': %s",key,e.getMessage()),e);
  }
  if (schemaField.getType().getNumericType() != null) {
    setNumericLimits(schemaField);
  }
  if (start != null && end != null && start.compareTo(end) > 0) {
    throw new SyntaxError("Start is higher than end in interval for key: " + key);
  }
}
