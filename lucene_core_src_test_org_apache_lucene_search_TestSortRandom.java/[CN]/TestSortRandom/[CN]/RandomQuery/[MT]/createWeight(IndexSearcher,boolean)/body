{
  return new ConstantScoreWeight(this){
    @Override public Scorer scorer(    LeafReaderContext context) throws IOException {
      Random random=new Random(context.docBase ^ seed);
      final int maxDoc=context.reader().maxDoc();
      final NumericDocValues idSource=DocValues.getNumeric(context.reader(),"id");
      assertNotNull(idSource);
      final FixedBitSet bits=new FixedBitSet(maxDoc);
      for (int docID=0; docID < maxDoc; docID++) {
        if (random.nextFloat() <= density) {
          bits.set(docID);
          matchValues.add(docValues.get((int)idSource.get(docID)));
        }
      }
      return new ConstantScoreScorer(this,score(),new BitSetIterator(bits,bits.approximateCardinality()));
    }
  }
;
}
