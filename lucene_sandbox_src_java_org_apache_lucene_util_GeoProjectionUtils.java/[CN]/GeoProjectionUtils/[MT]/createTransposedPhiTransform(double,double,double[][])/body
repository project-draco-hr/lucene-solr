{
  if (phiMatrix == null) {
    phiMatrix=new double[3][3];
  }
  originLon=TO_RADIANS * originLon;
  originLat=TO_RADIANS * originLat;
  final double sLat=SloppyMath.sin(originLat);
  final double cLat=SloppyMath.cos(originLat);
  final double sLon=SloppyMath.sin(originLon);
  final double cLon=SloppyMath.cos(originLon);
  phiMatrix[0][0]=-sLon;
  phiMatrix[1][0]=cLon;
  phiMatrix[2][0]=0.0D;
  phiMatrix[0][1]=-sLat * cLon;
  phiMatrix[1][1]=-sLat * sLon;
  phiMatrix[2][1]=cLat;
  phiMatrix[0][2]=cLat * cLon;
  phiMatrix[1][2]=cLat * sLon;
  phiMatrix[2][2]=sLat;
  return phiMatrix;
}
