{
  List<PackedInts.Mutable> packedInts=new ArrayList<PackedInts.Mutable>();
  if (bitsPerValue <= 8) {
    packedInts.add(new Direct8(valueCount));
  }
  if (bitsPerValue <= 16) {
    packedInts.add(new Direct16(valueCount));
  }
  if (bitsPerValue <= 24 && valueCount <= Packed8ThreeBlocks.MAX_SIZE) {
    packedInts.add(new Packed8ThreeBlocks(valueCount));
  }
  if (bitsPerValue <= 32) {
    packedInts.add(new Direct32(valueCount));
  }
  if (bitsPerValue <= 48 && valueCount <= Packed16ThreeBlocks.MAX_SIZE) {
    packedInts.add(new Packed16ThreeBlocks(valueCount));
  }
  if (bitsPerValue <= 63) {
    packedInts.add(new Packed64(valueCount,bitsPerValue));
  }
  packedInts.add(new Direct64(valueCount));
  for (int bpv=bitsPerValue; bpv <= Packed64SingleBlock.MAX_SUPPORTED_BITS_PER_VALUE; ++bpv) {
    if (Packed64SingleBlock.isSupported(bpv)) {
      packedInts.add(Packed64SingleBlock.create(valueCount,bpv));
    }
  }
  return packedInts;
}
