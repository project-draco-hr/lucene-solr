{
  final int valueCount=1111;
  final int index=random().nextInt(valueCount);
  final int len=TestUtil.nextInt(random(),1,valueCount * 2);
  final int off=random().nextInt(77);
  for (int bpv=1; bpv <= 64; ++bpv) {
    long mask=PackedInts.maxValue(bpv);
    List<PackedInts.Mutable> packedInts=createPackedInts(valueCount,bpv);
    for (    PackedInts.Mutable ints : packedInts) {
      for (int i=0; i < ints.size(); ++i) {
        ints.set(i,(31L * i - 1099) & mask);
      }
      long[] arr=new long[off + len];
      String msg=ints.getClass().getSimpleName() + " valueCount=" + valueCount+ ", index="+ index+ ", len="+ len+ ", off="+ off;
      final int gets=ints.get(index,arr,off,len);
      assertTrue(msg,gets > 0);
      assertTrue(msg,gets <= len);
      assertTrue(msg,gets <= ints.size() - index);
      for (int i=0; i < arr.length; ++i) {
        String m=msg + ", i=" + i;
        if (i >= off && i < off + gets) {
          assertEquals(m,ints.get(i - off + index),arr[i]);
        }
 else {
          assertEquals(m,0,arr[i]);
        }
      }
    }
  }
}
