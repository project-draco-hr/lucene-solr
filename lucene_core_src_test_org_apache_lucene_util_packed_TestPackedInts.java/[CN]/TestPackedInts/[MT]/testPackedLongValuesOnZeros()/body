{
  final int pageSize=1 << TestUtil.nextInt(random(),6,20);
  final float acceptableOverheadRatio=random().nextFloat();
  assertEquals(PackedLongValues.packedBuilder(pageSize,acceptableOverheadRatio).add(0).build().ramBytesUsed(),PackedLongValues.packedBuilder(pageSize,acceptableOverheadRatio).add(0).add(0).build().ramBytesUsed());
  final long l=random().nextLong();
  assertEquals(PackedLongValues.deltaPackedBuilder(pageSize,acceptableOverheadRatio).add(l).build().ramBytesUsed(),PackedLongValues.deltaPackedBuilder(pageSize,acceptableOverheadRatio).add(l).add(l).build().ramBytesUsed());
  final long avg=random().nextInt(100);
  assertEquals(PackedLongValues.monotonicBuilder(pageSize,acceptableOverheadRatio).add(l).add(l + avg).build().ramBytesUsed(),PackedLongValues.monotonicBuilder(pageSize,acceptableOverheadRatio).add(l).add(l + avg).add(l + 2 * avg).build().ramBytesUsed());
}
