{
  super.setup();
  PerfRunData data=getRunData();
  if (data.getConfig().get("doc.stored",false) == false) {
    throw new Exception("doc.stored must be set to true");
  }
  maxDocCharsToAnalyze=data.getConfig().get("highlighter.maxDocCharsToAnalyze",Highlighter.DEFAULT_MAX_CHARS_TO_ANALYZE);
  analyzer=data.getAnalyzer();
  String type=this.type;
  if (type == null) {
    type=data.getConfig().get("highlighter",null);
  }
switch (type) {
case "NONE":
    hlImpl=new NoHLImpl();
  break;
case "SH_A":
hlImpl=new StandardHLImpl(false);
break;
case "SH_V":
hlImpl=new StandardHLImpl(true);
break;
case "FVH_V":
hlImpl=new FastVectorHLImpl();
break;
case "UH":
hlImpl=new UnifiedHLImpl(null);
break;
case "UH_A":
hlImpl=new UnifiedHLImpl(UnifiedHighlighter.OffsetSource.ANALYSIS);
break;
case "UH_V":
hlImpl=new UnifiedHLImpl(UnifiedHighlighter.OffsetSource.TERM_VECTORS);
break;
case "UH_P":
hlImpl=new UnifiedHLImpl(UnifiedHighlighter.OffsetSource.POSTINGS);
break;
case "UH_PV":
hlImpl=new UnifiedHLImpl(UnifiedHighlighter.OffsetSource.POSTINGS_WITH_TERM_VECTORS);
break;
case "PH_P":
hlImpl=new PostingsHLImpl();
break;
default :
throw new Exception("unrecognized highlighter type: " + type + " (try 'UH')");
}
}
