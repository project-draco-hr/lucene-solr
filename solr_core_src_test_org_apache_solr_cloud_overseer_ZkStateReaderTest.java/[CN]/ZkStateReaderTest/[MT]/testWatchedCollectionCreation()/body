{
  String zkDir=createTempDir("testWatchedCollectionCreation").toFile().getAbsolutePath();
  ZkTestServer server=new ZkTestServer(zkDir);
  SolrZkClient zkClient=null;
  ZkStateReader reader=null;
  try {
    server.run();
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    zkClient=new SolrZkClient(server.getZkAddress(),OverseerTest.DEFAULT_CONNECTION_TIMEOUT);
    ZkController.createClusterZkNodes(zkClient);
    reader=new ZkStateReader(zkClient);
    reader.createClusterStateWatchersAndUpdate();
    reader.registerCore("c1");
    assertNull(reader.getClusterState().getCollectionRef("c1"));
    zkClient.makePath(ZkStateReader.COLLECTIONS_ZKNODE + "/c1",true);
    reader.forceUpdateCollection("c1");
    assertNull(reader.getClusterState().getCollectionRef("c1"));
    ZkStateWriter writer=new ZkStateWriter(reader,new Overseer.Stats());
    DocCollection state=new DocCollection("c1",new HashMap<String,Slice>(),new HashMap<String,Object>(),DocRouter.DEFAULT,0,ZkStateReader.CLUSTER_STATE + "/c1/state.json");
    ZkWriteCommand wc=new ZkWriteCommand("c1",state);
    writer.enqueueUpdate(reader.getClusterState(),wc,null);
    writer.writePendingUpdates();
    assertTrue(zkClient.exists(ZkStateReader.COLLECTIONS_ZKNODE + "/c1/state.json",true));
    for (int i=0; i < 100; ++i) {
      Thread.sleep(50);
      ClusterState.CollectionRef ref=reader.getClusterState().getCollectionRef("c1");
      if (ref != null) {
        break;
      }
    }
    ClusterState.CollectionRef ref=reader.getClusterState().getCollectionRef("c1");
    assertNotNull(ref);
    assertFalse(ref.isLazilyLoaded());
    assertEquals(2,ref.get().getStateFormat());
  }
  finally {
    IOUtils.close(reader,zkClient);
    server.shutdown();
  }
}
