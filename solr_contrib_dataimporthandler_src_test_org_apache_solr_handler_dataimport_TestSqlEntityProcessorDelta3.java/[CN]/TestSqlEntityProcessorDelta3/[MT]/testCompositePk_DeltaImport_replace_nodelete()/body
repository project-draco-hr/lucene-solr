{
  add1document();
  MockDataSource.clearCache();
  List deltaRow=new ArrayList();
  deltaRow.add(createMap("parent_id","1"));
  MockDataSource.setIterator(P_DELTA_QUERY,deltaRow.iterator());
  List parentRow=new ArrayList();
  parentRow.add(createMap("parent_id","1","desc","d2"));
  MockDataSource.setIterator("select * from parent where last_modified > NOW AND parent_id=1",parentRow.iterator());
  List childRow=new ArrayList();
  childRow.add(createMap("id","2"));
  MockDataSource.setIterator("select * from child where last_modified > NOW AND parent_id=1",childRow.iterator());
  MockDataSource.setIterator(C_DELETED_PK_QUERY,Collections.EMPTY_LIST.iterator());
  runDeltaImport(dataConfig_delta);
  assertQ(req("*:* OR XtestCompositePk_DeltaImport_replace_nodelete"),"//*[@numFound='1']");
  assertQ(req("id:2"),"//*[@numFound='1']");
  assertQ(req("desc:s1 OR XtestCompositePk_DeltaImport_replace_nodelete"),"//*[@numFound='0']");
  assertQ(req("desc:d2"),"//*[@numFound='1']");
}
