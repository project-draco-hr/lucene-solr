{
  int totalNodes=50 + random().nextInt(10);
  int myNode=random().nextInt(totalNodes);
  List<String> nodeNames=new ArrayList<>();
  for (int i=0; i < totalNodes; i++) {
    String s="192.168.1." + i + ":8983_solr";
    if (i == myNode)     myNodeName=s;
    boolean on=random().nextInt(100) < 70;
    nodes.put(s,on);
    nodeNames.add(s);
    if (on)     liveNodes.add(s);
  }
  for (int i=0; i < numColls; i++) {
    for (int j=0; j < numShards; j++) {
      for (int k=0; k < numReplicas; k++) {
        ReplicaInfo ri=new ReplicaInfo(i,j,k);
        replicaPositions.put(ri,nodeNames.get(random().nextInt(totalNodes)));
      }
    }
  }
  for (  Map.Entry<ReplicaInfo,String> e : replicaPositions.entrySet()) {
    if (e.getValue().equals(myNodeName)) {
      myCores.add(e.getKey().getCloudDescriptor());
      localCores.add(new MockCoreContainer.MockCoreDescriptor(){
        @Override public CloudDescriptor getCloudDescriptor(){
          return e.getKey().getCloudDescriptor();
        }
      }
);
    }
  }
}
