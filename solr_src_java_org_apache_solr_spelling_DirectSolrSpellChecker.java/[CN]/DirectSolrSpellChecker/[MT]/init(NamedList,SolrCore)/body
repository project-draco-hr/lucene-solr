{
  LOG.info("init: " + config);
  String name=super.init(config,core);
  Comparator<SuggestWord> comp=SuggestWordQueue.DEFAULT_COMPARATOR;
  String compClass=(String)config.get(COMPARATOR_CLASS);
  if (compClass != null) {
    if (compClass.equalsIgnoreCase(SCORE_COMP))     comp=SuggestWordQueue.DEFAULT_COMPARATOR;
 else     if (compClass.equalsIgnoreCase(FREQ_COMP))     comp=new SuggestWordFrequencyComparator();
 else     comp=(Comparator<SuggestWord>)core.getResourceLoader().newInstance(compClass);
  }
  StringDistance sd=DirectSpellChecker.INTERNAL_LEVENSHTEIN;
  String distClass=(String)config.get(STRING_DISTANCE);
  if (distClass != null && !distClass.equalsIgnoreCase(INTERNAL_DISTANCE))   sd=(StringDistance)core.getResourceLoader().newInstance(distClass);
  field=(String)config.get(FIELD);
  float minAccuracy=DEFAULT_ACCURACY;
  String accuracy=(String)config.get(ACCURACY);
  if (accuracy != null)   minAccuracy=Float.parseFloat(accuracy);
  int maxEdits=DEFAULT_MAXEDITS;
  String edits=(String)config.get(MAXEDITS);
  if (edits != null)   maxEdits=Integer.parseInt(edits);
  int minPrefix=DEFAULT_MINPREFIX;
  String prefix=(String)config.get(MINPREFIX);
  if (prefix != null)   minPrefix=Integer.parseInt(prefix);
  int maxInspections=DEFAULT_MAXINSPECTIONS;
  String inspections=(String)config.get(MAXINSPECTIONS);
  if (inspections != null)   maxInspections=Integer.parseInt(inspections);
  float minThreshold=DEFAULT_THRESHOLD;
  String threshold=(String)config.get(THRESHOLD);
  if (threshold != null)   minThreshold=Float.parseFloat(threshold);
  int minQueryLength=DEFAULT_MINQUERYLENGTH;
  String queryLength=(String)config.get(MINQUERYLENGTH);
  if (queryLength != null)   minQueryLength=Integer.parseInt(queryLength);
  float maxQueryFrequency=DEFAULT_MAXQUERYFREQUENCY;
  String queryFreq=(String)config.get(MAXQUERYFREQUENCY);
  if (queryFreq != null)   maxQueryFrequency=Float.parseFloat(queryFreq);
  checker.setComparator(comp);
  checker.setDistance(sd);
  checker.setMaxEdits(maxEdits);
  checker.setMinPrefix(minPrefix);
  checker.setAccuracy(minAccuracy);
  checker.setThresholdFrequency(minThreshold);
  checker.setMaxInspections(maxInspections);
  checker.setMinQueryLength(minQueryLength);
  checker.setMaxQueryFrequency(maxQueryFrequency);
  checker.setLowerCaseTerms(false);
  return name;
}
