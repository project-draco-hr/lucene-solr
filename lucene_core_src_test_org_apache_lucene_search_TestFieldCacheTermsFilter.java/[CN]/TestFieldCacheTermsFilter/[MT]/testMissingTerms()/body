{
  assumeTrue("requires support for missing values",defaultCodecSupportsMissingDocValues());
  String fieldName="field1";
  Directory rd=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),rd);
  for (int i=0; i < 100; i++) {
    Document doc=new Document();
    int term=i * 10;
    doc.add(newStringField(fieldName,"" + term,Field.Store.YES));
    doc.add(new SortedDocValuesField(fieldName,new BytesRef("" + term)));
    w.addDocument(doc);
  }
  IndexReader reader=w.getReader();
  w.shutdown();
  IndexSearcher searcher=newSearcher(reader);
  int numDocs=reader.numDocs();
  ScoreDoc[] results;
  MatchAllDocsQuery q=new MatchAllDocsQuery();
  List<String> terms=new ArrayList<>();
  terms.add("5");
  results=searcher.search(q,new FieldCacheTermsFilter(fieldName,terms.toArray(new String[0])),numDocs).scoreDocs;
  assertEquals("Must match nothing",0,results.length);
  terms=new ArrayList<>();
  terms.add("10");
  results=searcher.search(q,new FieldCacheTermsFilter(fieldName,terms.toArray(new String[0])),numDocs).scoreDocs;
  assertEquals("Must match 1",1,results.length);
  terms=new ArrayList<>();
  terms.add("10");
  terms.add("20");
  results=searcher.search(q,new FieldCacheTermsFilter(fieldName,terms.toArray(new String[0])),numDocs).scoreDocs;
  assertEquals("Must match 2",2,results.length);
  reader.close();
  rd.close();
}
