{
  assertU(adoc("id","SOLR1000","name","Apache Solr","solr_si","10","solr_sl","10","solr_sf","10","solr_sd","10","solr_s","10","solr_sI","10","solr_sS","10","solr_t","10","solr_tt","10","solr_b","true","solr_i","10","solr_l","10","solr_f","10","solr_d","10","solr_ti","10","solr_tl","10","solr_tf","10","solr_td","10","solr_pi","10","solr_pl","10","solr_pf","10","solr_pd","10","solr_dt","2000-01-01T01:01:01Z","solr_tdt","2000-01-01T01:01:01Z","solr_pdt","2000-01-01T01:01:01Z"));
  assertU(commit());
  assertQ(req("qt","/admin/luke","id","SOLR1000"));
  final int numFlags=EnumSet.allOf(FieldFlag.class).size();
  assertQ("Not all flags (" + numFlags + ") mentioned in info->key",req("qt","/admin/luke"),numFlags + "=count(//lst[@name='info']/lst[@name='key']/str)");
  for (  String f : Arrays.asList("solr_t","solr_s","solr_ti","solr_td","solr_pl","solr_dt","solr_b","solr_sS","solr_sI")) {
    final String xp=getFieldXPathPrefix(f);
    assertQ("Not as many schema flags as expected (" + numFlags + ") for "+ f,req("qt","/admin/luke","fl",f),numFlags + "=string-length(" + xp+ "[@name='schema'])");
  }
  for (  String f : Arrays.asList("solr_t","solr_s","solr_ti","solr_td","solr_pl","solr_dt","solr_b")) {
    final String xp=getFieldXPathPrefix(f);
    assertQ("Not as many index flags as expected (" + numFlags + ") for "+ f,req("qt","/admin/luke","fl",f),numFlags + "=string-length(" + xp+ "[@name='index'])");
    final String hxp=getFieldXPathHistogram(f);
    assertQ("Historgram field should be present for field " + f,req("qt","/admin/luke","fl",f),hxp + "[@name='histogram']");
  }
}
