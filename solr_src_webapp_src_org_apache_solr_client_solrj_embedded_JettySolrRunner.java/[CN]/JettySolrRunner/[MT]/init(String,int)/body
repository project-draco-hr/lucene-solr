{
  this.context=context;
  server=new Server(port);
  server.setStopAtShutdown(true);
  if (System.getProperty("jetty.testMode") != null) {
    SelectChannelConnector connector=new SelectChannelConnector();
    connector.setPort(port);
    connector.setReuseAddress(true);
    server.setConnectors(new Connector[]{connector});
    server.setSessionIdManager(new HashSessionIdManager(new Random()));
  }
  final Context root=new Context(server,context,Context.SESSIONS);
  server.addLifeCycleListener(new LifeCycle.Listener(){
    public void lifeCycleStopping(    LifeCycle arg0){
      System.clearProperty("hostPort");
    }
    public void lifeCycleStopped(    LifeCycle arg0){
    }
    public void lifeCycleStarting(    LifeCycle arg0){
synchronized (JettySolrRunner.this) {
        waitOnSolr=true;
        JettySolrRunner.this.notify();
      }
    }
    public void lifeCycleStarted(    LifeCycle arg0){
      System.setProperty("hostPort",Integer.toString(getLocalPort()));
      if (solrConfigFilename != null)       System.setProperty("solrconfig",solrConfigFilename);
      dispatchFilter=root.addFilter(SolrDispatchFilter.class,"*",Handler.REQUEST);
      if (solrConfigFilename != null)       System.clearProperty("solrconfig");
    }
    public void lifeCycleFailure(    LifeCycle arg0,    Throwable arg1){
      System.clearProperty("hostPort");
    }
  }
);
  root.addServlet(Servlet404.class,"/*");
}
