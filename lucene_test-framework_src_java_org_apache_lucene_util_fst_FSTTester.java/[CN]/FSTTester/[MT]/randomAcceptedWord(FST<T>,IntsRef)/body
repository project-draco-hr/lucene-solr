{
  FST.Arc<T> arc=fst.getFirstArc(new FST.Arc<T>());
  final List<FST.Arc<T>> arcs=new ArrayList<>();
  in.length=0;
  in.offset=0;
  final T NO_OUTPUT=fst.outputs.getNoOutput();
  T output=NO_OUTPUT;
  final FST.BytesReader fstReader=fst.getBytesReader();
  while (true) {
    fst.readFirstTargetArc(arc,arc,fstReader);
    arcs.add(new FST.Arc<T>().copyFrom(arc));
    while (!arc.isLast()) {
      fst.readNextArc(arc,fstReader);
      arcs.add(new FST.Arc<T>().copyFrom(arc));
    }
    arc=arcs.get(random.nextInt(arcs.size()));
    arcs.clear();
    output=fst.outputs.add(output,arc.output);
    if (arc.label == FST.END_LABEL) {
      break;
    }
    if (in.ints.length == in.length) {
      in.grow(1 + in.length);
    }
    in.ints[in.length++]=arc.label;
  }
  return output;
}
