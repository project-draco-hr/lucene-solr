{
  if (name == null)   throw new IllegalArgumentException("name cannot be null");
  if (value == null)   throw new IllegalArgumentException("value cannot be null");
  if (index == Index.NO && store == Store.NO)   throw new IllegalArgumentException("it doesn't make sense to have a field that " + "is neither indexed nor stored");
  if (index == Index.NO && termVector != TermVector.NO)   throw new IllegalArgumentException("cannot store term vector information " + "for a field that is not indexed");
  this.name=name.intern();
  this.stringValue=value;
  if (store == Store.YES)   this.isStored=true;
 else   if (store == Store.NO)   this.isStored=false;
 else   throw new IllegalArgumentException("unknown store parameter " + store);
  if (index == Index.NO) {
    this.isIndexed=false;
    this.isTokenized=false;
  }
 else   if (index == Index.TOKENIZED) {
    this.isIndexed=true;
    this.isTokenized=true;
  }
 else   if (index == Index.UN_TOKENIZED) {
    this.isIndexed=true;
    this.isTokenized=false;
  }
 else {
    throw new IllegalArgumentException("unknown index parameter " + index);
  }
  if (termVector == TermVector.NO) {
    this.storeTermVector=false;
  }
 else   if (termVector == TermVector.YES) {
    this.storeTermVector=true;
  }
 else {
    throw new IllegalArgumentException("unknown termVector parameter " + termVector);
  }
}
