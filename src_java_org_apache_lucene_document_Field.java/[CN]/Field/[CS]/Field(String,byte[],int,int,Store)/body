{
  if (name == null)   throw new IllegalArgumentException("name cannot be null");
  if (value == null)   throw new IllegalArgumentException("value cannot be null");
  this.name=name.intern();
  fieldsData=value;
  if (store == Store.YES) {
    isStored=true;
    isCompressed=false;
  }
 else   if (store == Store.COMPRESS) {
    isStored=true;
    isCompressed=true;
  }
 else   if (store == Store.NO)   throw new IllegalArgumentException("binary values can't be unstored");
 else   throw new IllegalArgumentException("unknown store parameter " + store);
  isIndexed=false;
  isTokenized=false;
  omitTermFreqAndPositions=false;
  omitNorms=true;
  isBinary=true;
  binaryLength=length;
  binaryOffset=offset;
  setStoreTermVector(TermVector.NO);
}
