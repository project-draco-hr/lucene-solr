{
  Query query=new TermQuery(new Term("field","zero"));
  ScoreDoc[] hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  DocsAndPositionsEnum dpEnum=null;
  for (int i=0; i < hits.length; i++) {
    Fields vectors=searcher.reader.getTermVectors(hits[i].doc);
    assertNotNull(vectors);
    assertEquals(1,vectors.getUniqueFieldCount());
    TermsEnum termsEnum=vectors.terms("field").iterator(null);
    assertNotNull(termsEnum.next());
    dpEnum=termsEnum.docsAndPositions(null,dpEnum);
    OffsetAttribute offsetAtt=dpEnum == null ? null : dpEnum.attributes().getAttribute(OffsetAttribute.class);
    boolean shouldBePosVector=hits[i].doc % 2 == 0;
    assertTrue(!shouldBePosVector || (shouldBePosVector && dpEnum != null));
    boolean shouldBeOffVector=hits[i].doc % 3 == 0;
    assertTrue(!shouldBeOffVector || (shouldBeOffVector && offsetAtt != null));
    if (shouldBePosVector || shouldBeOffVector) {
      while (true) {
        dpEnum=termsEnum.docsAndPositions(null,dpEnum);
        assertNotNull(dpEnum);
        offsetAtt=dpEnum.attributes().getAttribute(OffsetAttribute.class);
        if (shouldBePosVector) {
          assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);
        }
        if (shouldBeOffVector) {
          assertNotNull(offsetAtt);
        }
 else {
          assertNull(offsetAtt);
        }
        if (termsEnum.next() == null) {
          break;
        }
      }
    }
 else {
      fail();
    }
  }
}
