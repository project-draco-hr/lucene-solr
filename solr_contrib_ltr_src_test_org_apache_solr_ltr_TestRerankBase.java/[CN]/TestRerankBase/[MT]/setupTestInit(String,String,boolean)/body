{
  tmpSolrHome=createTempDir().toFile();
  tmpConfDir=new File(tmpSolrHome,CONF_DIR);
  tmpConfDir.deleteOnExit();
  FileUtils.copyDirectory(new File(TEST_HOME()),tmpSolrHome.getAbsoluteFile());
  final File fstore=new File(tmpConfDir,FEATURE_FILE_NAME);
  final File mstore=new File(tmpConfDir,MODEL_FILE_NAME);
  if (isPersistent) {
    fstorefile=fstore;
    mstorefile=mstore;
  }
  if (fstore.exists()) {
    log.info("remove feature store config file in {}",fstore.getAbsolutePath());
    Files.delete(fstore.toPath());
  }
  if (mstore.exists()) {
    log.info("remove model store config file in {}",mstore.getAbsolutePath());
    Files.delete(mstore.toPath());
  }
  if (!solrconfig.equals("solrconfig.xml")) {
    FileUtils.copyFile(new File(tmpSolrHome.getAbsolutePath() + "/collection1/conf/" + solrconfig),new File(tmpSolrHome.getAbsolutePath() + "/collection1/conf/solrconfig.xml"));
  }
  if (!schema.equals("schema.xml")) {
    FileUtils.copyFile(new File(tmpSolrHome.getAbsolutePath() + "/collection1/conf/" + schema),new File(tmpSolrHome.getAbsolutePath() + "/collection1/conf/schema.xml"));
  }
  final SortedMap<ServletHolder,String> extraServlets=new TreeMap<>();
  final ServletHolder solrRestApi=new ServletHolder("SolrSchemaRestApi",ServerServlet.class);
  solrRestApi.setInitParameter("org.restlet.application",SolrSchemaRestApi.class.getCanonicalName());
  solrRestApi.setInitParameter("storageIO",ManagedResourceStorage.InMemoryStorageIO.class.getCanonicalName());
  extraServlets.put(solrRestApi,PARENT_ENDPOINT);
  System.setProperty("managed.schema.mutable","true");
  return extraServlets;
}
