{
  try {
    Set<String> fieldNames=new HashSet<String>(getSchema().getFields().keySet());
    final List<SimpleOrderedMap<Object>> fieldCollectionProperties=new ArrayList<SimpleOrderedMap<Object>>(fieldNames.size());
    if (null == getRequestedFields()) {
      for (      String fieldName : fieldNames) {
        fieldCollectionProperties.add(getFieldProperties(getSchema().getFieldOrNull(fieldName)));
      }
    }
 else {
      if (0 == getRequestedFields().size()) {
        String message="Empty " + CommonParams.FL + " parameter value";
        throw new SolrException(ErrorCode.BAD_REQUEST,message);
      }
      for (      String field : fieldNames) {
        if (getRequestedFields().containsKey(field)) {
          getRequestedFields().put(field,getFieldProperties(getSchema().getFieldOrNull(field)));
        }
      }
      for (      SimpleOrderedMap<Object> fieldProperties : getRequestedFields().values()) {
        if (null != fieldProperties) {
          fieldCollectionProperties.add(fieldProperties);
        }
      }
    }
    getSolrResponse().add(SchemaRestApi.FIELDS,fieldCollectionProperties);
  }
 catch (  Exception e) {
    getSolrResponse().setException(e);
  }
  handlePostExecution(log);
  return new SolrOutputRepresentation();
}
