{
  Explanation sumExpl=new Explanation();
  sumExpl.setDescription("sum of:");
  int coord=0;
  float sum=0.0f;
  for (SubScorer s=scorers; s != null; s=s.next) {
    Explanation e=s.scorer.explain(doc);
    if (e.getValue() > 0) {
      if (!s.prohibited) {
        sumExpl.addDetail(e);
        sum+=e.getValue();
        coord++;
      }
 else {
        return new Explanation(0.0f,"match prohibited");
      }
    }
 else     if (s.required) {
      return new Explanation(0.0f,"match required");
    }
  }
  sumExpl.setValue(sum);
  if (coord == 1)   sumExpl=sumExpl.getDetails()[0];
  float coordFactor=getSimilarity().coord(coord,maxCoord - 1);
  if (coordFactor == 1.0f)   return sumExpl;
 else {
    Explanation result=new Explanation();
    result.setDescription("product of:");
    result.addDetail(sumExpl);
    result.addDetail(new Explanation(coordFactor,"coord(" + coord + "/"+ (maxCoord - 1)+ ")"));
    result.setValue(sum * coordFactor);
    return result;
  }
}
