{
  List subReadersList=new ArrayList();
  gatherSubReaders(subReadersList,reader);
  sortedSubReaders=(IndexReader[])subReadersList.toArray(indexReaderZeroArray);
  final int length=sortedSubReaders.length;
  sortedStarts=new int[length];
  int maxDoc=0;
  for (int i=0; i < sortedSubReaders.length; i++) {
    sortedStarts[i]=maxDoc;
    maxDoc+=sortedSubReaders[i].maxDoc();
  }
  SorterTemplate sorter=new SorterTemplate(){
    protected int compare(    int i,    int j){
      int num1=sortedSubReaders[i].numDocs();
      int num2=sortedSubReaders[j].numDocs();
      if (num1 > num2)       return -1;
      if (num1 < num2)       return 1;
      return 0;
    }
    protected void swap(    int i,    int j){
      IndexReader temp=sortedSubReaders[i];
      sortedSubReaders[i]=sortedSubReaders[j];
      sortedSubReaders[j]=temp;
      int tempInt=sortedStarts[i];
      sortedStarts[i]=sortedStarts[j];
      sortedStarts[j]=tempInt;
    }
  }
;
  sorter.quickSort(0,length - 1);
}
