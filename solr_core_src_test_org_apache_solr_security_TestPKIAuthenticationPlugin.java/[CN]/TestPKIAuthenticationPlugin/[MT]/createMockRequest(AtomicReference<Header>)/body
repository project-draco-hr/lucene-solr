{
  HttpServletRequest mockReq=EasyMock.createMock(HttpServletRequest.class);
  EasyMock.reset(mockReq);
  mockReq.getHeader(EasyMock.anyObject(String.class));
  EasyMock.expectLastCall().andAnswer(new IAnswer<String>(){
    @Override public String answer() throws Throwable {
      if (PKIAuthenticationPlugin.HEADER.equals(getCurrentArguments()[0])) {
        if (header.get() == null)         return null;
        return header.get().getValue();
      }
 else       return null;
    }
  }
).anyTimes();
  mockReq.getUserPrincipal();
  EasyMock.expectLastCall().andAnswer(new IAnswer<Principal>(){
    @Override public Principal answer() throws Throwable {
      return null;
    }
  }
).anyTimes();
  mockReq.getRequestURI();
  EasyMock.expectLastCall().andAnswer(new IAnswer<String>(){
    @Override public String answer() throws Throwable {
      return "/collection1/select";
    }
  }
).anyTimes();
  EasyMock.replay(mockReq);
  return mockReq;
}
