{
  final List<CompiledAutomaton> runAutomata=dfaAtt.automata();
  if (runAutomata.size() <= maxDistance && maxDistance <= LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {
    LevenshteinAutomata builder=new LevenshteinAutomata(UnicodeUtil.newString(termText,realPrefixLength,termText.length - realPrefixLength),transpositions);
    for (int i=runAutomata.size(); i <= maxDistance; i++) {
      LightAutomaton a=builder.toLightAutomaton(i);
      if (realPrefixLength > 0) {
        LightAutomaton prefix=BasicAutomata.makeStringLight(UnicodeUtil.newString(termText,0,realPrefixLength));
        a=BasicOperations.concatenateLight(prefix,a);
      }
      runAutomata.add(new CompiledAutomaton(a,true,false));
    }
  }
  return runAutomata;
}
