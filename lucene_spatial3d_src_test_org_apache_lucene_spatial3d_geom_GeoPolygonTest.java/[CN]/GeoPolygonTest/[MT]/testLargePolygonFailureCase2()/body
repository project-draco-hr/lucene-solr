{
  final GeoPoint testPoint=new GeoPoint(PlanetModel.WGS84,0.03170690566178683,1.0862414976732029);
  final boolean testPointInSet=false;
  final List<GeoPoint> pointList=new ArrayList<>();
  pointList.add(new GeoPoint(PlanetModel.WGS84,0.05101544777239065,1.031558236908661));
  pointList.add(new GeoPoint(PlanetModel.WGS84,-0.011222928649880962,1.5851249038356199));
  pointList.add(new GeoPoint(PlanetModel.WGS84,-0.02571365137215876,0.5627875521419741));
  pointList.add(new GeoPoint(PlanetModel.WGS84,0.03833766792865358,1.0082901344798614));
  pointList.add(new GeoPoint(PlanetModel.WGS84,0.1719054969347345,0.9024290407832926));
  pointList.add(new GeoPoint(PlanetModel.WGS84,0.08180947807010808,1.0107147265848113));
  pointList.add(new GeoPoint(PlanetModel.WGS84,1.0774842300167298,-0.11534121538553185));
  final GeoPolygon pSanity=GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84,pointList);
  assertTrue(pSanity.isWithin(testPoint) == testPointInSet);
  final List<List<GeoPoint>> shapeList=new ArrayList<>();
  shapeList.add(pointList);
  final GeoPolygon p=new GeoComplexPolygon(PlanetModel.WGS84,shapeList,testPoint,testPointInSet);
  final XYZBounds referenceBounds=new XYZBounds();
  pSanity.getBounds(referenceBounds);
  final XYZBounds actualBounds=new XYZBounds();
  p.getBounds(actualBounds);
  assertEquals(referenceBounds.getMinimumX(),actualBounds.getMinimumX(),0.0000001);
  assertEquals(referenceBounds.getMaximumX(),actualBounds.getMaximumX(),0.0000001);
  assertEquals(referenceBounds.getMinimumY(),actualBounds.getMinimumY(),0.0000001);
  assertEquals(referenceBounds.getMaximumY(),actualBounds.getMaximumY(),0.0000001);
  assertEquals(referenceBounds.getMinimumZ(),actualBounds.getMinimumZ(),0.0000001);
  assertEquals(referenceBounds.getMaximumZ(),actualBounds.getMaximumZ(),0.0000001);
  final XYZSolid solid=XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84,actualBounds.getMinimumX(),actualBounds.getMaximumX(),actualBounds.getMinimumY(),actualBounds.getMaximumY(),actualBounds.getMinimumZ(),actualBounds.getMaximumZ());
  final GeoPoint checkPoint=new GeoPoint(PlanetModel.WGS84,-0.7073124559987376,2.2509085326629887);
  assertTrue(pSanity.isWithin(checkPoint) == p.isWithin(checkPoint));
  assertTrue(p.isWithin(checkPoint));
  assertTrue(solid.isWithin(checkPoint));
}
