{
  Directory dir1=newDirectory();
  final IndexWriter writer=new IndexWriter(dir1,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setMergePolicy(newLogMergePolicy(2)));
  writer.setInfoStream(infoStream);
  createIndexNoClose(false,"test",writer);
  writer.commit();
  IndexReader r=writer.getReader();
  final int NUM_THREAD=5;
  final float SECONDS=0.5f;
  final long endTime=(long)(System.currentTimeMillis() + 1000. * SECONDS);
  final List<Throwable> excs=Collections.synchronizedList(new ArrayList<Throwable>());
  final Thread[] threads=new Thread[NUM_THREAD];
  for (int i=0; i < NUM_THREAD; i++) {
    threads[i]=new Thread(){
      final Random r=new Random(random.nextLong());
      @Override public void run(){
        int count=0;
        do {
          try {
            for (int docUpto=0; docUpto < 10; docUpto++) {
              writer.addDocument(createDocument(10 * count + docUpto,"test",4));
            }
            count++;
            final int limit=count * 10;
            for (int delUpto=0; delUpto < 5; delUpto++) {
              int x=r.nextInt(limit);
              writer.deleteDocuments(new Term("field3","b" + x));
            }
          }
 catch (          Throwable t) {
            excs.add(t);
            throw new RuntimeException(t);
          }
        }
 while (System.currentTimeMillis() < endTime);
      }
    }
;
    threads[i].setDaemon(true);
    threads[i].start();
  }
  int sum=0;
  while (System.currentTimeMillis() < endTime) {
    IndexReader r2=r.reopen();
    if (r2 != r) {
      r.close();
      r=r2;
    }
    Query q=new TermQuery(new Term("indexname","test"));
    sum+=new IndexSearcher(r).search(q,10).totalHits;
  }
  for (int i=0; i < NUM_THREAD; i++) {
    threads[i].join();
  }
  IndexReader r2=r.reopen();
  if (r2 != r) {
    r.close();
    r=r2;
  }
  Query q=new TermQuery(new Term("indexname","test"));
  sum+=new IndexSearcher(r).search(q,10).totalHits;
  assertTrue("no documents found at all",sum > 0);
  assertEquals(0,excs.size());
  writer.close();
  _TestUtil.checkIndex(dir1);
  r.close();
  dir1.close();
}
