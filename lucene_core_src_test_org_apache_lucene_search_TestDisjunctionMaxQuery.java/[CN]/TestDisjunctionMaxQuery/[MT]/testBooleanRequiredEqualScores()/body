{
  BooleanQuery.Builder q=new BooleanQuery.Builder();
{
    DisjunctionMaxQuery q1=new DisjunctionMaxQuery(Arrays.asList(tq("hed","albino"),tq("dek","albino")),0.0f);
    q.add(q1,BooleanClause.Occur.MUST);
    QueryUtils.check(random(),q1,s);
  }
{
    DisjunctionMaxQuery q2=new DisjunctionMaxQuery(Arrays.asList(tq("hed","elephant"),tq("dek","elephant")),0.0f);
    q.add(q2,BooleanClause.Occur.MUST);
    QueryUtils.check(random(),q2,s);
  }
  QueryUtils.check(random(),q.build(),s);
  ScoreDoc[] h=s.search(q.build(),1000).scoreDocs;
  try {
    assertEquals("3 docs should match " + q.toString(),3,h.length);
    float score=h[0].score;
    for (int i=1; i < h.length; i++) {
      assertEquals("score #" + i + " is not the same",score,h[i].score,SCORE_COMP_THRESH);
    }
  }
 catch (  Error e) {
    printHits("testBooleanRequiredEqualScores1",h,s);
    throw e;
  }
}
