{
  Explanation boostExpl=Explanation.match(stats.queryBoost * stats.topLevelBoost,"boost");
  List<Explanation> subs=new ArrayList<>();
  if (boostExpl.getValue() != 1.0f)   subs.add(boostExpl);
  subs.add(stats.idf);
  Explanation tfNormExpl=explainTFNorm(doc,freq,stats,norms);
  subs.add(tfNormExpl);
  return Explanation.match(boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),"score(doc=" + doc + ",freq="+ freq+ "), product of:",subs);
}
