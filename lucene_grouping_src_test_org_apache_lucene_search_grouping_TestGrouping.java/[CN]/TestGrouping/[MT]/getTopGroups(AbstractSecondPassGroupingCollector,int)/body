{
  if (c.getClass().isAssignableFrom(TermSecondPassGroupingCollector.class)) {
    return ((TermSecondPassGroupingCollector)c).getTopGroups(withinGroupOffset);
  }
 else   if (c.getClass().isAssignableFrom(FunctionSecondPassGroupingCollector.class)) {
    TopGroups<MutableValue> mvalTopGroups=((FunctionSecondPassGroupingCollector)c).getTopGroups(withinGroupOffset);
    List<GroupDocs<BytesRef>> groups=new ArrayList<>(mvalTopGroups.groups.length);
    for (    GroupDocs<MutableValue> mvalGd : mvalTopGroups.groups) {
      BytesRef groupValue=mvalGd.groupValue.exists() ? ((MutableValueStr)mvalGd.groupValue).value : null;
      groups.add(new GroupDocs<>(Float.NaN,mvalGd.maxScore,mvalGd.totalHits,mvalGd.scoreDocs,groupValue,mvalGd.groupSortValues));
    }
    return new TopGroups<BytesRef>(mvalTopGroups.groupSort,mvalTopGroups.withinGroupSort,mvalTopGroups.totalHitCount,mvalTopGroups.totalGroupedHitCount,groups.toArray(new GroupDocs[groups.size()]),Float.NaN);
  }
  fail();
  return null;
}
