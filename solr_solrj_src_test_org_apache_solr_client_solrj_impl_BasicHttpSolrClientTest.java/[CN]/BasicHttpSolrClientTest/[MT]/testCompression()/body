{
  try (HttpSolrClient client=new HttpSolrClient(jetty.getBaseUrl().toString() + "/debug/foo")){
    SolrQuery q=new SolrQuery("*:*");
    DebugServlet.clear();
    try {
      client.query(q);
    }
 catch (    ParseException ignored) {
    }
    assertNull(DebugServlet.headers.get("Accept-Encoding"));
    client.setAllowCompression(true);
    try {
      client.query(q);
    }
 catch (    ParseException ignored) {
    }
    assertNotNull(DebugServlet.headers.get("Accept-Encoding"));
    client.setAllowCompression(false);
    try {
      client.query(q);
    }
 catch (    ParseException ignored) {
    }
    assertNull(DebugServlet.headers.get("Accept-Encoding"));
  }
   HttpGet get=new HttpGet(jetty.getBaseUrl().toString() + "/collection1" + "/select?q=foo&wt=xml");
  get.setHeader("Accept-Encoding","gzip");
  CloseableHttpClient httpclient=HttpClientUtil.createClient(null);
  HttpEntity entity=null;
  try {
    HttpResponse response=httpclient.execute(get);
    entity=response.getEntity();
    Header ceheader=entity.getContentEncoding();
    assertEquals("gzip",ceheader.getValue());
  }
  finally {
    if (entity != null) {
      entity.getContent().close();
    }
    httpclient.close();
  }
  try (HttpSolrClient client=new HttpSolrClient(jetty.getBaseUrl().toString() + "/collection1")){
    client.setAllowCompression(true);
    SolrQuery q=new SolrQuery("foo");
    QueryResponse response=client.query(q);
    assertEquals(0,response.getStatus());
  }
 }
