{
  try (HttpSolrClient client=new HttpSolrClient(jetty.getBaseUrl().toString() + "/debug/foo")){
    DebugServlet.clear();
    client.setQueryParams(setOf("serverOnly"));
    UpdateRequest req=new UpdateRequest();
    setReqParamsOf(req,"serverOnly","notServer");
    try {
      client.request(req);
    }
 catch (    ParseException ignored) {
    }
    verifyServletState(client,req);
    DebugServlet.clear();
    client.setQueryParams(setOf());
    req=new UpdateRequest();
    req.setQueryParams(setOf("requestOnly"));
    setReqParamsOf(req,"requestOnly","notRequest");
    try {
      client.request(req);
    }
 catch (    ParseException ignored) {
    }
    verifyServletState(client,req);
    DebugServlet.clear();
    req=new UpdateRequest();
    client.setQueryParams(setOf("serverOnly","both"));
    req.setQueryParams(setOf("requestOnly","both"));
    setReqParamsOf(req,"serverOnly","requestOnly","both","neither");
    try {
      client.request(req);
    }
 catch (    ParseException ignored) {
    }
    verifyServletState(client,req);
    DebugServlet.clear();
    req=new UpdateRequest();
    req.add(new SolrInputDocument());
    client.setQueryParams(setOf("serverOnly","both"));
    req.setQueryParams(setOf("requestOnly","both"));
    setReqParamsOf(req,"serverOnly","requestOnly","both","neither");
    try {
      client.request(req);
    }
 catch (    ParseException ignored) {
    }
    req.setQueryParams(setOf("requestOnly","both","neither"));
    verifyServletState(client,req);
  }
 }
