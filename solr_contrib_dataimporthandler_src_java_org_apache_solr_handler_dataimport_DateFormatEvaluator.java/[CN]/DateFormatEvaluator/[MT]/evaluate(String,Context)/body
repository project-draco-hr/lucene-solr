{
  List<Object> l=parseParams(expression,context.getVariableResolver());
  if (l.size() < 2 || l.size() > 3) {
    throw new DataImportHandlerException(SEVERE,"'formatDate()' must have two or three parameters ");
  }
  Object o=l.get(0);
  Object format=l.get(1);
  if (format instanceof VariableWrapper) {
    VariableWrapper wrapper=(VariableWrapper)format;
    o=wrapper.resolve();
    format=o.toString();
  }
  Locale locale=Locale.ROOT;
  if (l.size() == 3) {
    Object localeObj=l.get(2);
    String localeStr=null;
    if (localeObj instanceof VariableWrapper) {
      VariableWrapper wrapper=(VariableWrapper)localeObj;
      o=wrapper.resolve();
      localeStr=o.toString();
    }
 else {
      localeStr=localeObj.toString();
    }
    availableLocales.get(localeStr);
    if (locale == null) {
      throw new DataImportHandlerException(SEVERE,"Unsupported locale: " + localeStr);
    }
  }
  String dateFmt=format.toString();
  DateFormatCacheKey dfck=new DateFormatCacheKey(locale,dateFmt);
  SimpleDateFormat sdf=cache.get(dfck);
  if (sdf == null) {
    sdf=new SimpleDateFormat(dateFmt,locale);
    cache.put(dfck,sdf);
  }
  Date date=null;
  if (o instanceof VariableWrapper) {
    VariableWrapper variableWrapper=(VariableWrapper)o;
    Object variableval=variableWrapper.resolve();
    if (variableval instanceof Date) {
      date=(Date)variableval;
    }
 else {
      String s=variableval.toString();
      try {
        dfck=new DateFormatCacheKey(locale,DEFAULT_DATE_FORMAT);
        sdf=cache.get(dfck);
        if (sdf == null) {
          sdf=new SimpleDateFormat(dfck.dateFormat,dfck.locale);
          cache.put(dfck,sdf);
        }
        date=new SimpleDateFormat(DEFAULT_DATE_FORMAT,locale).parse(s);
      }
 catch (      ParseException exp) {
        wrapAndThrow(SEVERE,exp,"Invalid expression for date");
      }
    }
  }
 else {
    String datemathfmt=o.toString();
    datemathfmt=datemathfmt.replaceAll("NOW","");
    try {
      date=getDateMathParser().parseMath(datemathfmt);
    }
 catch (    ParseException e) {
      wrapAndThrow(SEVERE,e,"Invalid expression for date");
    }
  }
  return sdf.format(date);
}
