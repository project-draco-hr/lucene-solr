{
  IndexSearcher s=new IndexSearcher(dir,true);
  Object innerArray=null;
  boolean warned=false;
  for (int i=0; i < 10; i++) {
    ValueSource vs;
    if (inOrder) {
      vs=new OrdFieldSource(field);
    }
 else {
      vs=new ReverseOrdFieldSource(field);
    }
    ValueSourceQuery q=new ValueSourceQuery(vs);
    ScoreDoc[] h=s.search(q,null,1000).scoreDocs;
    try {
      assertEquals("All docs should be matched!",N_DOCS,h.length);
      IndexReader[] readers=s.getIndexReader().getSequentialSubReaders();
      for (      IndexReader reader : readers) {
        if (i == 0) {
          innerArray=q.valSrc.getValues(reader).getInnerArray();
        }
 else {
          log(i + ".  compare: " + innerArray+ " to "+ q.valSrc.getValues(reader).getInnerArray());
          assertSame("field values should be cached and reused!",innerArray,q.valSrc.getValues(reader).getInnerArray());
        }
      }
    }
 catch (    UnsupportedOperationException e) {
      if (!warned) {
        System.err.println("WARNING: " + testName() + " cannot fully test values of "+ q);
        warned=true;
      }
    }
  }
  ValueSource vs;
  ValueSourceQuery q;
  ScoreDoc[] h;
  String field2=INT_FIELD;
  assertFalse(field.equals(field2));
  if (inOrder) {
    vs=new OrdFieldSource(field2);
  }
 else {
    vs=new ReverseOrdFieldSource(field2);
  }
  q=new ValueSourceQuery(vs);
  h=s.search(q,null,1000).scoreDocs;
  assertEquals("All docs should be matched!",N_DOCS,h.length);
  IndexReader[] readers=s.getIndexReader().getSequentialSubReaders();
  for (  IndexReader reader : readers) {
    try {
      log("compare (should differ): " + innerArray + " to "+ q.valSrc.getValues(reader).getInnerArray());
      assertNotSame("different values should be loaded for a different field!",innerArray,q.valSrc.getValues(reader).getInnerArray());
    }
 catch (    UnsupportedOperationException e) {
      if (!warned) {
        System.err.println("WARNING: " + testName() + " cannot fully test values of "+ q);
        warned=true;
      }
    }
  }
  s.close();
  s=new IndexSearcher(dir,true);
  if (inOrder) {
    vs=new OrdFieldSource(field);
  }
 else {
    vs=new ReverseOrdFieldSource(field);
  }
  q=new ValueSourceQuery(vs);
  h=s.search(q,null,1000).scoreDocs;
  assertEquals("All docs should be matched!",N_DOCS,h.length);
  readers=s.getIndexReader().getSequentialSubReaders();
  for (  IndexReader reader : readers) {
    try {
      log("compare (should differ): " + innerArray + " to "+ q.valSrc.getValues(reader).getInnerArray());
      assertNotSame("cached field values should not be reused if reader as changed!",innerArray,q.valSrc.getValues(reader).getInnerArray());
    }
 catch (    UnsupportedOperationException e) {
      if (!warned) {
        System.err.println("WARNING: " + testName() + " cannot fully test values of "+ q);
        warned=true;
      }
    }
  }
  s.close();
}
