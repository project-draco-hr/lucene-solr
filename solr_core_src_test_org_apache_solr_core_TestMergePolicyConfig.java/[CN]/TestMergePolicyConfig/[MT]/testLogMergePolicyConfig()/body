{
  final Class<? extends LogMergePolicy> mpClass=random().nextBoolean() ? LogByteSizeMergePolicy.class : LogDocMergePolicy.class;
  System.setProperty("solr.test.log.merge.policy",mpClass.getName());
  initCore("solrconfig-logmergepolicy.xml","schema-minimal.xml");
  IndexWriterConfig iwc=solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());
  assertEquals(-1,solrConfig.indexConfig.maxBufferedDocs);
  assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH,iwc.getMaxBufferedDocs());
  assertEquals(-1,solrConfig.indexConfig.maxIndexingThreads);
  assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES,iwc.getMaxThreadStates());
  assertEquals(-1,solrConfig.indexConfig.ramBufferSizeMB,0.0D);
  assertEquals(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB,iwc.getRAMBufferSizeMB(),0.0D);
  LogMergePolicy logMP=assertAndCast(mpClass,iwc.getMergePolicy());
  assertEquals(11,logMP.getMergeFactor());
  assertEquals(456,logMP.getMaxMergeDocs());
}
