{
  PostingsWriterBase docsWriter=null;
  PostingsWriterBase pulsingWriterInner=null;
  PostingsWriterBase pulsingWriter=null;
  boolean success=false;
  try {
    docsWriter=new Lucene41PostingsWriter(state);
    pulsingWriterInner=new PulsingPostingsWriter(2,docsWriter);
    pulsingWriter=new PulsingPostingsWriter(1,pulsingWriterInner);
    FieldsConsumer ret=new BlockTreeTermsWriter(state,pulsingWriter,BlockTreeTermsWriter.DEFAULT_MIN_BLOCK_SIZE,BlockTreeTermsWriter.DEFAULT_MAX_BLOCK_SIZE);
    success=true;
    return ret;
  }
  finally {
    if (!success) {
      IOUtils.closeWhileHandlingException(docsWriter,pulsingWriterInner,pulsingWriter);
    }
  }
}
