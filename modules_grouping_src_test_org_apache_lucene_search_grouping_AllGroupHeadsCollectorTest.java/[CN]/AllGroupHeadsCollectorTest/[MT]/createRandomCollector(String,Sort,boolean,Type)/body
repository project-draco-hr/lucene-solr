{
  AbstractAllGroupHeadsCollector<? extends AbstractAllGroupHeadsCollector.GroupHead> collector;
  if (random().nextBoolean()) {
    ValueSource vs=new BytesRefFieldSource(groupField);
    collector=new FunctionAllGroupHeadsCollector(vs,new HashMap<Object,Object>(),sortWithinGroup);
  }
 else   if (canUseIDV && random().nextBoolean()) {
    boolean diskResident=random().nextBoolean();
    collector=DVAllGroupHeadsCollector.create(groupField,sortWithinGroup,valueType,diskResident);
  }
 else {
    collector=TermAllGroupHeadsCollector.create(groupField,sortWithinGroup);
  }
  if (VERBOSE) {
    System.out.println("Selected implementation: " + collector.getClass().getSimpleName());
  }
  return collector;
}
