{
  SolrParams params=req.getParams();
  String updateChainName=null;
  if (params.get(UpdateParams.UPDATE_CHAIN_DEPRECATED) != null) {
    log.warn("Use of deprecated update request parameter " + UpdateParams.UPDATE_CHAIN_DEPRECATED + " detected. Please use the new parameter "+ UpdateParams.UPDATE_CHAIN+ " instead, as support"+ " for "+ UpdateParams.UPDATE_CHAIN_DEPRECATED+ " will be removed in a later version.");
    updateChainName=params.get(UpdateParams.UPDATE_CHAIN_DEPRECATED);
  }
 else {
    updateChainName=params.get(UpdateParams.UPDATE_CHAIN);
  }
  UpdateRequestProcessorChain processorChain=req.getCore().getUpdateProcessingChain(updateChainName);
  UpdateRequestProcessor processor=processorChain.createProcessor(req,rsp);
  try {
    ContentStreamLoader documentLoader=newLoader(req,processor);
    Iterable<ContentStream> streams=req.getContentStreams();
    if (streams == null) {
      if (!RequestHandlerUtils.handleCommit(req,processor,params,false) && !RequestHandlerUtils.handleRollback(req,processor,params,false)) {
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"missing content stream");
      }
    }
 else {
      for (      ContentStream stream : streams) {
        documentLoader.load(req,rsp,stream);
      }
      RequestHandlerUtils.handleCommit(req,processor,params,false);
      RequestHandlerUtils.handleRollback(req,processor,params,false);
    }
  }
  finally {
    processor.finish();
  }
}
