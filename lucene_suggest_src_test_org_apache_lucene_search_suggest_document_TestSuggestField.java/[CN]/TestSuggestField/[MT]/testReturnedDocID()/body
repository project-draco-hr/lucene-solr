{
  Analyzer analyzer=new MockAnalyzer(random());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwcWithSuggestField(analyzer,"suggest_field"));
  int num=Math.min(1000,atLeast(10));
  for (int i=0; i < num; i++) {
    Document document=new Document();
    document.add(new SuggestField("suggest_field","abc_" + i,num));
    document.add(new StoredField("int_field",i));
    iw.addDocument(document);
    if (random().nextBoolean()) {
      iw.commit();
    }
  }
  DirectoryReader reader=iw.getReader();
  SuggestIndexSearcher indexSearcher=new SuggestIndexSearcher(reader);
  PrefixCompletionQuery query=new PrefixCompletionQuery(analyzer,new Term("suggest_field","abc_"));
  TopSuggestDocs suggest=indexSearcher.suggest(query,num);
  assertEquals(num,suggest.totalHits);
  for (  SuggestScoreDoc suggestScoreDoc : suggest.scoreLookupDocs()) {
    String key=suggestScoreDoc.key.toString();
    assertTrue(key.startsWith("abc_"));
    String substring=key.substring(4);
    int fieldValue=Integer.parseInt(substring);
    StoredDocument doc=reader.document(suggestScoreDoc.doc);
    assertEquals(doc.getField("int_field").numericValue().intValue(),fieldValue);
  }
  reader.close();
  iw.close();
}
