{
  Analyzer analyzer=new MockAnalyzer(random());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwcWithSuggestField(analyzer,"sug_field_1","sug_field_2"));
  Document document=new Document();
  document.add(new SuggestField("sug_field_1","apple",4));
  document.add(new SuggestField("sug_field_2","april",3));
  iw.addDocument(document);
  document=new Document();
  document.add(new SuggestField("sug_field_1","aples",3));
  document.add(new SuggestField("sug_field_2","apartment",2));
  iw.addDocument(document);
  if (rarely()) {
    iw.commit();
  }
  DirectoryReader reader=iw.getReader();
  SuggestIndexSearcher suggestIndexSearcher=new SuggestIndexSearcher(reader);
  PrefixCompletionQuery query=new PrefixCompletionQuery(analyzer,new Term("sug_field_1","ap"));
  TopSuggestDocs suggestDocs1=suggestIndexSearcher.suggest(query,4);
  assertSuggestions(suggestDocs1,new Entry("apple",4),new Entry("aples",3));
  query=new PrefixCompletionQuery(analyzer,new Term("sug_field_2","ap"));
  TopSuggestDocs suggestDocs2=suggestIndexSearcher.suggest(query,4);
  assertSuggestions(suggestDocs2,new Entry("april",3),new Entry("apartment",2));
  for (int i=0; i < suggestDocs1.scoreDocs.length; i++) {
    ScoreDoc suggestScoreDoc=suggestDocs1.scoreDocs[i];
    assertThat(suggestScoreDoc.doc,equalTo(suggestDocs2.scoreDocs[i].doc));
  }
  reader.close();
  iw.close();
}
