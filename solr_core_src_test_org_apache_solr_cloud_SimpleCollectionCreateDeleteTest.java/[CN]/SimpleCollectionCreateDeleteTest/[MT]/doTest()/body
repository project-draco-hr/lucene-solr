{
  String overseerNode=OverseerCollectionProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
  String notOverseerNode=null;
  for (  CloudJettyRunner cloudJetty : cloudJettys) {
    if (!overseerNode.equals(cloudJetty.nodeName)) {
      notOverseerNode=cloudJetty.nodeName;
      break;
    }
  }
  CollectionAdminRequest.Create create=new CollectionAdminRequest.Create();
  String collectionName="SimpleCollectionCreateDeleteTest";
  create.setCollectionName(collectionName);
  create.setNumShards(1);
  create.setReplicationFactor(1);
  create.setCreateNodeSet(overseerNode);
  ModifiableSolrParams params=new ModifiableSolrParams(create.getParams());
  params.set("stateFormat","2");
  QueryRequest req=new QueryRequest(params);
  req.setPath("/admin/collections");
  NamedList<Object> request=cloudClient.request(req);
  if (request.get("success") != null) {
    assertTrue(cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collectionName,false));
    CollectionAdminRequest.Delete delete=new CollectionAdminRequest.Delete();
    delete.setCollectionName(collectionName);
    cloudClient.request(delete);
    assertFalse(cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collectionName,false));
    create=new CollectionAdminRequest.Create();
    create.setCollectionName(collectionName);
    create.setNumShards(1);
    create.setReplicationFactor(1);
    create.setCreateNodeSet(notOverseerNode);
    params=new ModifiableSolrParams(create.getParams());
    params.set("stateFormat","2");
    req=new QueryRequest(params);
    req.setPath("/admin/collections");
    request=cloudClient.request(req);
    assertTrue("Collection creation should not have failed",request.get("success") != null);
  }
}
