{
  String overseerNode=OverseerCollectionConfigSetProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
  String notOverseerNode=null;
  for (  CloudJettyRunner cloudJetty : cloudJettys) {
    if (!overseerNode.equals(cloudJetty.nodeName)) {
      notOverseerNode=cloudJetty.nodeName;
      break;
    }
  }
  String collectionName="SimpleCollectionCreateDeleteTest";
  CollectionAdminRequest.Create create=new CollectionAdminRequest.Create().setCollectionName(collectionName).setNumShards(1).setReplicationFactor(1).setCreateNodeSet(overseerNode).setStateFormat(2);
  NamedList<Object> request=create.process(cloudClient).getResponse();
  if (request.get("success") != null) {
    assertTrue(cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collectionName,false));
    CollectionAdminRequest.Delete delete=new CollectionAdminRequest.Delete();
    delete.setCollectionName(collectionName);
    cloudClient.request(delete);
    assertFalse(cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collectionName,false));
    create=new CollectionAdminRequest.Create().setCollectionName(collectionName).setNumShards(1).setReplicationFactor(1).setCreateNodeSet(notOverseerNode).setStateFormat(2);
    request=create.process(cloudClient).getResponse();
    assertTrue("Collection creation should not have failed",request.get("success") != null);
  }
}
