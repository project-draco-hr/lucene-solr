{
  IndexSearcher searcher=mgr.acquire();
  try {
    long version=((DirectoryReader)searcher.getIndexReader()).getVersion();
    int hitCount=searcher.count(new TermQuery(new Term("marker","marker")));
    if (hitCount < expectedAtLeastCount) {
      message("marker search: expectedAtLeastCount=" + expectedAtLeastCount + " but hitCount="+ hitCount);
      TopDocs hits=searcher.search(new TermQuery(new Term("marker","marker")),expectedAtLeastCount);
      List<Integer> seen=new ArrayList<>();
      for (      ScoreDoc hit : hits.scoreDocs) {
        Document doc=searcher.doc(hit.doc);
        seen.add(Integer.parseInt(doc.get("docid").substring(1)));
      }
      Collections.sort(seen);
      message("saw markers:");
      for (      int marker : seen) {
        message("saw m" + marker);
      }
      throw new IllegalStateException("at flush: marker count " + hitCount + " but expected at least "+ expectedAtLeastCount+ " version="+ version);
    }
    if (out != null) {
      out.writeVLong(version);
      out.writeVInt(hitCount);
    }
  }
  finally {
    mgr.release(searcher);
  }
}
