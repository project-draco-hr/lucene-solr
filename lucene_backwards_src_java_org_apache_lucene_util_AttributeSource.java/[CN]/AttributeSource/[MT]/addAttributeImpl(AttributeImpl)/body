{
  final Class<? extends AttributeImpl> clazz=att.getClass();
  if (attributeImpls.containsKey(clazz))   return;
  LinkedList<Class<? extends Attribute>> foundInterfaces;
synchronized (knownImplClasses) {
    foundInterfaces=knownImplClasses.get(clazz);
    if (foundInterfaces == null) {
      knownImplClasses.put(clazz,foundInterfaces=new LinkedList<Class<? extends Attribute>>());
      Class<?> actClazz=clazz;
      do {
        for (        Class<?> curInterface : actClazz.getInterfaces()) {
          if (curInterface != Attribute.class && Attribute.class.isAssignableFrom(curInterface)) {
            foundInterfaces.add(curInterface.asSubclass(Attribute.class));
          }
        }
        actClazz=actClazz.getSuperclass();
      }
 while (actClazz != null);
    }
  }
  for (  Class<? extends Attribute> curInterface : foundInterfaces) {
    if (!attributes.containsKey(curInterface)) {
      this.currentState=null;
      attributes.put(curInterface,att);
      attributeImpls.put(clazz,att);
    }
  }
}
