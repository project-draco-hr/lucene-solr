{
  if (node.hasAttributes()) {
    org.w3c.dom.NamedNodeMap nodeAttributes=node.getAttributes();
    for (int i=0; i < nodeAttributes.getLength(); i++) {
      Node attributeNode=nodeAttributes.item(i);
      String attributeName=text + (text.trim().equals("") ? "" : ".") + node.getNodeName()+ "."+ attributeNode.getNodeName();
      String attributeValue=attributeNode.getNodeValue();
      log(attributeName + ":" + attributeValue,Project.MSG_VERBOSE);
      project.setUserProperty(attributeName,attributeValue);
    }
  }
  if (node.getNodeType() == Node.TEXT_NODE) {
    String nodeText=node.getNodeValue();
    if (nodeText.trim().length() != 0) {
      log(text + ":" + nodeText,Project.MSG_VERBOSE);
      if (index == 0) {
        project.setUserProperty(text,nodeText);
      }
      project.setUserProperty(text + "[" + String.valueOf(index)+ "]",nodeText);
    }
  }
  if (node.hasChildNodes()) {
    text+=((text.trim().equals("") ? "" : ".") + node.getNodeName());
    org.w3c.dom.NodeList nodeChildren=node.getChildNodes();
    int numChildren=nodeChildren.getLength();
    StringBuffer childList=new StringBuffer();
    for (int i=0; i < numChildren; i++) {
      if (i != 0) {
        childList.append(",");
      }
      childList.append(node.getNodeName() + "[" + String.valueOf(index)+ "]");
      addNodeRecursively(nodeChildren.item(i),text,i);
    }
    project.setUserProperty(text + ".list",childList.toString());
  }
}
