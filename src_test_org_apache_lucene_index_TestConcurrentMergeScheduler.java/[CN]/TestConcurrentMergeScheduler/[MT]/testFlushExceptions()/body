{
  MockRAMDirectory directory=new MockRAMDirectory();
  FailOnlyOnFlush failure=new FailOnlyOnFlush();
  directory.failOn(failure);
  IndexWriter writer=new IndexWriter(directory,ANALYZER,true,IndexWriter.MaxFieldLength.LIMITED);
  ConcurrentMergeScheduler cms=new ConcurrentMergeScheduler();
  writer.setMergeScheduler(cms);
  writer.setMaxBufferedDocs(2);
  Document doc=new Document();
  Field idField=new Field("id","",Field.Store.YES,Field.Index.UN_TOKENIZED);
  doc.add(idField);
  for (int i=0; i < 10; i++) {
    for (int j=0; j < 20; j++) {
      idField.setValue(Integer.toString(i * 20 + j));
      writer.addDocument(doc);
    }
    writer.addDocument(doc);
    failure.setDoFail();
    try {
      writer.flush();
      fail("failed to hit IOException");
    }
 catch (    IOException ioe) {
      failure.clearDoFail();
    }
  }
  writer.close();
  IndexReader reader=IndexReader.open(directory);
  assertEquals(200,reader.numDocs());
  reader.close();
  directory.close();
}
