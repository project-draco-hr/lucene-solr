{
  log.info("Indexing documents");
  List<SolrInputDocument> docs=new ArrayList<>();
  for (int i=0; i < 10; i++) {
    docs.add(getDoc(id,Integer.toString(i)));
  }
  index(SOURCE_COLLECTION,docs);
  index(TARGET_COLLECTION,docs);
  assertEquals(10,getNumDocs(SOURCE_COLLECTION));
  assertEquals(10,getNumDocs(TARGET_COLLECTION));
  log.info("Restarting leader @ source_collection:shard1");
  this.restartServer(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1));
  assertEquals(10,getNumDocs(SOURCE_COLLECTION));
  assertEquals(10,getNumDocs(TARGET_COLLECTION));
  log.info("Clearing source_collection");
  this.clearSourceCollection();
  assertEquals(0,getNumDocs(SOURCE_COLLECTION));
  assertEquals(10,getNumDocs(TARGET_COLLECTION));
  log.info("Restarting leader @ target_collection:shard1");
  this.restartServer(shardToLeaderJetty.get(TARGET_COLLECTION).get(SHARD1));
  assertEquals(0,getNumDocs(SOURCE_COLLECTION));
  assertEquals(10,getNumDocs(TARGET_COLLECTION));
  log.info("Clearing target_collection");
  this.clearTargetCollection();
  assertEquals(0,getNumDocs(SOURCE_COLLECTION));
  assertEquals(0,getNumDocs(TARGET_COLLECTION));
  assertCollectionExpectations(SOURCE_COLLECTION);
  assertCollectionExpectations(TARGET_COLLECTION);
}
