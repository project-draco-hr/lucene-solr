{
  log.info("Starting CDCR");
  this.invokeCdcrAction(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1),CdcrParams.CdcrAction.START);
  this.waitForCdcrStateReplication(SOURCE_COLLECTION);
  this.waitForBootstrapToComplete(SOURCE_COLLECTION,SHARD1);
  this.waitForBootstrapToComplete(SOURCE_COLLECTION,SHARD2);
  log.info("Indexing 10 documents");
  int start=0;
  List<SolrInputDocument> docs=new ArrayList<>();
  for (; start < 10; start++) {
    docs.add(getDoc(id,Integer.toString(start)));
  }
  index(SOURCE_COLLECTION,docs);
  log.info("Querying source collection");
  assertNumDocs(10,SOURCE_COLLECTION);
  log.info("Waiting for replication");
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD1);
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD2);
  log.info("Querying target collection");
  commit(TARGET_COLLECTION);
  assertNumDocs(10,TARGET_COLLECTION);
  log.info("Restarting target leaders");
  this.restartServer(shardToLeaderJetty.get(TARGET_COLLECTION).get(SHARD1));
  this.restartServer(shardToLeaderJetty.get(TARGET_COLLECTION).get(SHARD2));
  log.info("Restarting source leaders");
  this.restartServer(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1));
  this.restartServer(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD2));
  log.info("Checking queue size of new source leaders");
  assertTrue(this.getQueueSize(SOURCE_COLLECTION,SHARD1) < 10);
  assertTrue(this.getQueueSize(SOURCE_COLLECTION,SHARD2) < 10);
  log.info("Indexing 100 documents");
  docs.clear();
  for (; start < 110; start++) {
    docs.add(getDoc(id,Integer.toString(start)));
  }
  index(SOURCE_COLLECTION,docs);
  log.info("Querying source collection");
  assertNumDocs(110,SOURCE_COLLECTION);
  log.info("Waiting for replication");
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD1);
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD2);
  log.info("Querying target collection");
  commit(TARGET_COLLECTION);
  assertNumDocs(110,TARGET_COLLECTION);
}
