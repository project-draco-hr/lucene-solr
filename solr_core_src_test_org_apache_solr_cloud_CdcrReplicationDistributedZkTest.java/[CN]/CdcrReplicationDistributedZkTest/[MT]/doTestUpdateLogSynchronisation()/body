{
  this.clearSourceCollection();
  this.clearTargetCollection();
  this.invokeCdcrAction(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1),CdcrParams.CdcrAction.DISABLEBUFFER);
  this.invokeCdcrAction(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1),CdcrParams.CdcrAction.START);
  for (int i=0; i < 50; i++) {
    index(SOURCE_COLLECTION,getDoc(id,Integer.toString(i)));
  }
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD1);
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD2);
  commit(TARGET_COLLECTION);
  this.invokeCdcrAction(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1),CdcrParams.CdcrAction.STOP);
  assertEquals(50,getNumDocs(SOURCE_COLLECTION));
  assertEquals(50,getNumDocs(TARGET_COLLECTION));
  index(SOURCE_COLLECTION,getDoc(id,Integer.toString(0)));
  assertUpdateLogs(SOURCE_COLLECTION,50);
  for (int i=50; i < 100; i++) {
    index(SOURCE_COLLECTION,getDoc(id,Integer.toString(i)));
  }
  index(SOURCE_COLLECTION,getDoc(id,Integer.toString(0)));
  assertUpdateLogs(SOURCE_COLLECTION,50);
}
