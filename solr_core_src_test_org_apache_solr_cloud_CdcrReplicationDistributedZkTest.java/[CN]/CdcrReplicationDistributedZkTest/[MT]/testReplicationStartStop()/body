{
  int start=0;
  List<SolrInputDocument> docs=new ArrayList<>();
  for (; start < 10; start++) {
    docs.add(getDoc(id,Integer.toString(start)));
  }
  index(SOURCE_COLLECTION,docs);
  assertNumDocs(10,SOURCE_COLLECTION);
  assertNumDocs(0,TARGET_COLLECTION);
  this.invokeCdcrAction(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1),CdcrParams.CdcrAction.START);
  this.waitForCdcrStateReplication(SOURCE_COLLECTION);
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD1);
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD2);
  commit(TARGET_COLLECTION);
  assertNumDocs(10,SOURCE_COLLECTION);
  assertNumDocs(10,TARGET_COLLECTION);
  this.invokeCdcrAction(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1),CdcrParams.CdcrAction.STOP);
  this.waitForCdcrStateReplication(SOURCE_COLLECTION);
  docs.clear();
  for (; start < 110; start++) {
    docs.add(getDoc(id,Integer.toString(start)));
  }
  index(SOURCE_COLLECTION,docs);
  assertNumDocs(110,SOURCE_COLLECTION);
  assertNumDocs(10,TARGET_COLLECTION);
  this.invokeCdcrAction(shardToLeaderJetty.get(SOURCE_COLLECTION).get(SHARD1),CdcrParams.CdcrAction.START);
  this.waitForCdcrStateReplication(SOURCE_COLLECTION);
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD1);
  this.waitForReplicationToComplete(SOURCE_COLLECTION,SHARD2);
  commit(TARGET_COLLECTION);
  assertNumDocs(110,SOURCE_COLLECTION);
  assertNumDocs(110,TARGET_COLLECTION);
}
