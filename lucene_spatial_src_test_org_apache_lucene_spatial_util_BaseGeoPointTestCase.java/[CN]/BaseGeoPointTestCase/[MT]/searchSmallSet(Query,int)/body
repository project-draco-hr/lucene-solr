{
  double[][] pts=new double[][]{{32.763420,-96.774},{32.7559529921407,-96.7759895324707},{32.77866942010977,-96.77701950073242},{32.7756745755423,-96.7706036567688},{27.703618681345585,-139.73458170890808},{32.94823588839368,-96.4538113027811},{33.06047141970814,-96.65084838867188},{32.778650,-96.7772},{-88.56029371730983,-177.23537676036358},{33.541429799076354,-26.779373834241003},{26.774024500421728,-77.35379276106497},{-90.0,-14.796283808944777},{32.94823588839368,-178.8538113027811},{32.94823588839368,178.8538113027811},{40.720611,-73.998776},{-44.5,-179.5}};
  Directory directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),directory,newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(TestUtil.nextInt(random(),100,1000)).setMergePolicy(newLogMergePolicy()));
  for (  double p[] : pts) {
    Document doc=new Document();
    addPointToDoc("point",doc,p[0],p[1]);
    writer.addDocument(doc);
  }
  for (int i=0; i < pts.length; i+=2) {
    Document doc=new Document();
    addPointToDoc("point",doc,pts[i][0],pts[i][1]);
    addPointToDoc("point",doc,pts[i + 1][0],pts[i + 1][1]);
    writer.addDocument(doc);
  }
  for (int i=0; i < random().nextInt(10); ++i) {
    Document doc=new Document();
    doc.add(new StringField("string",Integer.toString(i),Field.Store.NO));
    writer.addDocument(doc);
  }
  IndexReader reader=writer.getReader();
  writer.close();
  IndexSearcher searcher=newSearcher(reader);
  TopDocs topDocs=searcher.search(query,size);
  reader.close();
  directory.close();
  return topDocs;
}
