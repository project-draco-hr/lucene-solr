{
  assumeTrue("GeoPoint*Query is too slow otherwise",TEST_NIGHTLY || forceSmall() == false);
  int numPoints=atLeast(10000);
  boolean small=forceSmall() || random().nextBoolean();
  double theLon=randomLon(small);
  double[] lats=new double[numPoints];
  double[] lons=new double[numPoints];
  boolean haveRealDoc=false;
  for (int docID=0; docID < numPoints; docID++) {
    int x=random().nextInt(20);
    if (x == 17) {
      lats[docID]=Double.NaN;
      if (VERBOSE) {
        System.out.println("  doc=" + docID + " is missing");
      }
      continue;
    }
    if (docID > 0 && x == 14 && haveRealDoc) {
      int oldDocID;
      while (true) {
        oldDocID=random().nextInt(docID);
        if (Double.isNaN(lats[oldDocID]) == false) {
          break;
        }
      }
      lats[docID]=lats[oldDocID];
      if (VERBOSE) {
        System.out.println("  doc=" + docID + " lat="+ lats[docID]+ " lon="+ theLon+ " (same lat/lon as doc="+ oldDocID+ ")");
      }
    }
 else {
      lats[docID]=randomLat(small);
      haveRealDoc=true;
      if (VERBOSE) {
        System.out.println("  doc=" + docID + " lat="+ lats[docID]+ " lon="+ theLon);
      }
    }
    lons[docID]=theLon;
  }
  verify(small,lats,lons,false);
}
