{
  Rectangle rect;
  while (true) {
    rect=randomRect(random().nextBoolean());
    if (rect.crossesDateline() == false) {
      break;
    }
  }
  rect=new Rectangle(quantizeLat(rect.minLat),quantizeLat(rect.maxLat),quantizeLon(rect.minLon),quantizeLon(rect.maxLon));
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig();
  iwc.setMergeScheduler(new SerialMergeScheduler());
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,iwc);
  for (int x=0; x < 3; x++) {
    double lat;
    if (x == 0) {
      lat=rect.minLat;
    }
 else     if (x == 1) {
      lat=quantizeLat((rect.minLat + rect.maxLat) / 2.0);
    }
 else {
      lat=rect.maxLat;
    }
    for (int y=0; y < 3; y++) {
      double lon;
      if (y == 0) {
        lon=rect.minLon;
      }
 else       if (y == 1) {
        if (x == 1) {
          continue;
        }
        lon=quantizeLon((rect.minLon + rect.maxLon) / 2.0);
      }
 else {
        lon=rect.maxLon;
      }
      Document doc=new Document();
      addPointToDoc(FIELD_NAME,doc,lat,lon);
      w.addDocument(doc);
    }
  }
  IndexReader r=w.getReader();
  IndexSearcher s=newSearcher(r,false);
  assertEquals(8,s.count(newRectQuery(FIELD_NAME,rect.minLat,rect.maxLat,rect.minLon,rect.maxLon)));
  if (rect.minLat != -90) {
    assertEquals(8,s.count(newRectQuery(FIELD_NAME,Math.nextDown(rect.minLat),rect.maxLat,rect.minLon,rect.maxLon)));
  }
  if (rect.maxLat != 90) {
    assertEquals(8,s.count(newRectQuery(FIELD_NAME,rect.minLat,Math.nextUp(rect.maxLat),rect.minLon,rect.maxLon)));
  }
  if (rect.minLon != -180) {
    assertEquals(8,s.count(newRectQuery(FIELD_NAME,rect.minLat,rect.maxLat,Math.nextDown(rect.minLon),rect.maxLon)));
  }
  if (rect.maxLon != 180) {
    assertEquals(8,s.count(newRectQuery(FIELD_NAME,rect.minLat,rect.maxLat,rect.minLon,Math.nextUp(rect.maxLon))));
  }
  if (rect.minLat != 90 && rect.maxLat != -90 && rect.minLon != 80 && rect.maxLon != -180 && rect.minLon != rect.maxLon) {
    assertEquals(0,s.count(newRectQuery(FIELD_NAME,Math.nextUp(rect.minLat),Math.nextDown(rect.maxLat),Math.nextUp(rect.minLon),Math.nextDown(rect.maxLon))));
  }
  r.close();
  w.close();
  dir.close();
}
