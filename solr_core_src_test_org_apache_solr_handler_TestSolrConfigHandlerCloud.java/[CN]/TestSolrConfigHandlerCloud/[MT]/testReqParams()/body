{
  DocCollection coll=cloudClient.getZkStateReader().getClusterState().getCollection("collection1");
  List<String> urls=new ArrayList<>();
  for (  Slice slice : coll.getSlices()) {
    for (    Replica replica : slice.getReplicas())     urls.add("" + replica.get(ZkStateReader.BASE_URL_PROP) + "/"+ replica.get(ZkStateReader.CORE_NAME_PROP));
  }
  RestTestHarness writeHarness=restTestHarnesses.get(random().nextInt(restTestHarnesses.size()));
  String payload=" {\n" + "  'create' : {'x': {" + "                    'a':'A val',\n"+ "                    'b': 'B val'}\n"+ "             }\n"+ "  }";
  TestSolrConfigHandler.runConfigCommand(writeHarness,"/config/params?wt=json",payload);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/params?wt=json",cloudClient,Arrays.asList("response","params","x","a"),"A val",10);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/params?wt=json",cloudClient,Arrays.asList("response","params","x","b"),"B val",10);
  payload="{\n" + "'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\n" + "}";
  TestSolrConfigHandler.runConfigCommand(writeHarness,"/config?wt=json",payload);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/overlay?wt=json",cloudClient,Arrays.asList("overlay","requestHandler","/dump","name"),"/dump",10);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/dump?wt=json&useParams=x",cloudClient,Arrays.asList("params","a"),"A val",5);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/dump?wt=json&useParams=x&a=fomrequest",cloudClient,Arrays.asList("params","a"),"fomrequest",5);
  payload="{\n" + "'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\n" + "}";
  TestSolrConfigHandler.runConfigCommand(writeHarness,"/config?wt=json",payload);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/overlay?wt=json",cloudClient,Arrays.asList("overlay","requestHandler","/dump1","name"),"/dump1",10);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/dump1?wt=json",cloudClient,Arrays.asList("params","a"),"A val",5);
  writeHarness=restTestHarnesses.get(random().nextInt(restTestHarnesses.size()));
  payload=" {\n" + "  'create' : {'y':{\n" + "                'c':'CY val',\n"+ "                'b': 'BY val'}\n"+ "             }\n"+ "  }";
  TestSolrConfigHandler.runConfigCommand(writeHarness,"/config/params?wt=json",payload);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/params?wt=json",cloudClient,Arrays.asList("response","params","y","c"),"CY val",10);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/dump?wt=json&useParams=y",cloudClient,Arrays.asList("params","c"),"CY val",5);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/dump1?wt=json&useParams=y",cloudClient,Arrays.asList("params","b"),"BY val",5);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/dump1?wt=json&useParams=y",cloudClient,Arrays.asList("params","a"),null,5);
  payload=" {\n" + "  'modify' : {'y': {\n" + "                'c':'CY val modified',\n"+ "                'e':'EY val',\n"+ "                'b': 'BY val'"+ "}\n"+ "             }\n"+ "  }";
  TestSolrConfigHandler.runConfigCommand(writeHarness,"/config/params?wt=json",payload);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/params?wt=json",cloudClient,Arrays.asList("response","params","y","c"),"CY val modified",10);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/params?wt=json",cloudClient,Arrays.asList("response","params","y","e"),"EY val",10);
  payload=" {\n" + "  'update' : {'y': {\n" + "                'p':'P val',\n"+ "                'q': 'Q val'"+ "}\n"+ "             }\n"+ "  }";
  TestSolrConfigHandler.runConfigCommand(writeHarness,"/config/params?wt=json",payload);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/params?wt=json",cloudClient,Arrays.asList("response","params","y","p"),"P val",10);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/params?wt=json",cloudClient,Arrays.asList("response","params","y","c"),null,10);
  payload=" {'delete' : 'y'}";
  TestSolrConfigHandler.runConfigCommand(writeHarness,"/config/params?wt=json",payload);
  TestSolrConfigHandler.testForResponseElement(null,urls.get(random().nextInt(urls.size())),"/config/params?wt=json",cloudClient,Arrays.asList("response","params","y","p"),null,10);
}
