{
  List<PluginInitInfo> info=new ArrayList<>();
  T defaultPlugin=null;
  if (nodes != null) {
    for (int i=0; i < nodes.getLength(); i++) {
      Node node=nodes.item(i);
      String name=null;
      try {
        name=DOMUtil.getAttr(node,NAME,requireName ? type : null);
        String className=DOMUtil.getAttr(node,"class",type);
        String defaultStr=DOMUtil.getAttr(node,"default",null);
        T plugin=create(loader,name,className,node);
        log.debug("created " + ((name != null) ? name : "") + ": "+ plugin.getClass().getName());
        if (preRegister) {
          info.add(new PluginInitInfo(plugin,node));
        }
 else {
          init(plugin,node);
        }
        T old=register(name,plugin);
        if (old != null && !(name == null && !requireName)) {
          throw new SolrException(ErrorCode.SERVER_ERROR,"Multiple " + type + " registered to the same name: "+ name+ " ignoring: "+ old);
        }
        if (defaultStr != null && Boolean.parseBoolean(defaultStr)) {
          if (defaultPlugin != null) {
            throw new SolrException(ErrorCode.SERVER_ERROR,"Multiple default " + type + " plugins: "+ defaultPlugin+ " AND "+ name);
          }
          defaultPlugin=plugin;
        }
      }
 catch (      Exception ex) {
        SolrException e=new SolrException(ErrorCode.SERVER_ERROR,"Plugin init failure for " + type + (null != name ? (" \"" + name + "\"") : "")+ ": "+ ex.getMessage(),ex);
        throw e;
      }
    }
  }
  for (  PluginInitInfo pinfo : info) {
    try {
      init(pinfo.plugin,pinfo.node);
    }
 catch (    Exception ex) {
      SolrException e=new SolrException(ErrorCode.SERVER_ERROR,"Plugin Initializing failure for " + type,ex);
      throw e;
    }
  }
  return defaultPlugin;
}
