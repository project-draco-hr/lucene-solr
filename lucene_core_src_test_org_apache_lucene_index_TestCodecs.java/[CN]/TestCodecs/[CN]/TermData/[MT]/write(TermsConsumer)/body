{
  final PostingsConsumer postingsConsumer=termsConsumer.startTerm(text);
  long totTF=0;
  for (int i=0; i < docs.length; i++) {
    final int termDocFreq;
    if (field.omitTF) {
      termDocFreq=-1;
    }
 else {
      termDocFreq=positions[i].length;
    }
    postingsConsumer.startDoc(docs[i],termDocFreq);
    if (!field.omitTF) {
      totTF+=positions[i].length;
      for (int j=0; j < positions[i].length; j++) {
        final PositionData pos=positions[i][j];
        postingsConsumer.addPosition(pos.pos,pos.payload,-1,-1);
      }
    }
    postingsConsumer.finishDoc();
  }
  termsConsumer.finishTerm(text,new TermStats(docs.length,field.omitTF ? -1 : totTF));
  return totTF;
}
