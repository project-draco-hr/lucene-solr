{
  this.fullStream=fullStream;
  this.hashStream=hashStream;
  this.hashedTuples=new HashMap<>();
  this.leftHashOn=new ArrayList<>();
  this.rightHashOn=new ArrayList<>();
  for (  String hasher : hashOn) {
    String[] parts=hasher.split("=");
    if (1 == parts.length) {
      String field=parts[0].trim();
      leftHashOn.add(field);
      rightHashOn.add(field);
    }
 else     if (2 == parts.length) {
      leftHashOn.add(parts[0].trim());
      rightHashOn.add(parts[1].trim());
    }
 else {
      throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - invalid 'on' parameter - expecting 1 or more instances if 'field' or 'field=hashedField' but found '%s'",hasher));
    }
  }
}
