{
  document.add(new Field("a",i + " Do you really want to go and live in that house all winter?",Field.Store.YES,Field.Index.TOKENIZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
  if (i > 0) {
    document.add(new Field("b0",i + " All work and no play makes Jack a dull boy",Field.Store.YES,Field.Index.TOKENIZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
    document.add(new Field("b1",i + " All work and no play makes Jack a dull boy",Field.Store.YES,Field.Index.NO_NORMS,Field.TermVector.NO));
    document.add(new Field("b2",i + " All work and no play makes Jack a dull boy",Field.Store.NO,Field.Index.UN_TOKENIZED,Field.TermVector.NO));
    document.add(new Field("b3",i + " All work and no play makes Jack a dull boy",Field.Store.YES,Field.Index.NO,Field.TermVector.NO));
    if (i > 1) {
      document.add(new Field("c",i + " Redrum redrum",Field.Store.YES,Field.Index.TOKENIZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
      if (i > 2) {
        document.add(new Field("d",i + " Hello Danny, come and play with us... forever and ever. and ever.",Field.Store.YES,Field.Index.TOKENIZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
        if (i > 3) {
          Field f=new Field("e",i + " Heres Johnny!",Field.Store.YES,Field.Index.TOKENIZED,Field.TermVector.WITH_POSITIONS_OFFSETS);
          f.setOmitNorms(true);
          document.add(f);
          if (i > 4) {
            final List<Token> tokens=new ArrayList<Token>(2);
            Token t=new Token("the",0,2,"text");
            t.setPayload(new Payload(new byte[]{1,2,3}));
            tokens.add(t);
            t=new Token("end",3,5,"text");
            t.setPayload(new Payload(new byte[]{2}));
            tokens.add(t);
            tokens.add(new Token("fin",7,9));
            document.add(new Field("f",new TokenStream(){
              Iterator<Token> it=tokens.iterator();
              public Token next() throws IOException {
                if (!it.hasNext()) {
                  return null;
                }
                return it.next();
              }
              public void reset() throws IOException {
                it=tokens.iterator();
              }
            }
));
          }
        }
      }
    }
  }
}
