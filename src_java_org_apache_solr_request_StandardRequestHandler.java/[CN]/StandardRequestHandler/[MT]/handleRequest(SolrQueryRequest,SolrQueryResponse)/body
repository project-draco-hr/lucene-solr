{
  numRequests++;
  try {
    String sreq=req.getQueryString();
    String debug=req.getParam("debugQuery");
    String fl=req.getParam("fl");
    int flags=0;
    if (fl != null) {
      String[] flst=splitList.split(fl,0);
      if (flst.length > 0 && !(flst.length == 1 && flst[0].length() == 0)) {
        Set<String> set=new HashSet<String>();
        for (        String fname : flst) {
          if ("score".equals(fname))           flags|=SolrIndexSearcher.GET_SCORES;
          set.add(fname);
        }
        rsp.setReturnFields(set);
      }
    }
    if (sreq == null)     throw new SolrException(400,"Missing queryString");
    List<String> commands=StrUtils.splitSmart(sreq,';');
    String qs=commands.size() >= 1 ? commands.get(0) : "";
    Query query=QueryParsing.parseQuery(qs,req.getSchema());
    Sort sort=null;
    if (commands.size() >= 2) {
      QueryParsing.SortSpec sortSpec=QueryParsing.parseSort(commands.get(1),req.getSchema());
      if (sortSpec != null) {
        sort=sortSpec.getSort();
      }
    }
    DocList results=req.getSearcher().getDocList(query,null,sort,req.getStart(),req.getLimit(),flags);
    rsp.add(null,results);
    if (debug != null) {
      NamedList dbg=new NamedList();
      try {
        dbg.add("querystring",qs);
        dbg.add("parsedquery",QueryParsing.toString(query,req.getSchema()));
        dbg.add("explain",getExplainList(query,results,req.getSearcher(),req.getSchema()));
        String otherQueryS=req.getParam("explainOther");
        if (otherQueryS != null && otherQueryS.length() > 0) {
          DocList otherResults=doQuery(otherQueryS,req.getSearcher(),req.getSchema(),0,10);
          dbg.add("otherQuery",otherQueryS);
          dbg.add("explainOther",getExplainList(query,otherResults,req.getSearcher(),req.getSchema()));
        }
      }
 catch (      Exception e) {
        SolrException.logOnce(SolrCore.log,"Exception during debug:",e);
        dbg.add("exception_during_debug",SolrException.toStr(e));
      }
      rsp.add("debug",dbg);
    }
  }
 catch (  SolrException e) {
    rsp.setException(e);
    numErrors++;
    return;
  }
catch (  Exception e) {
    SolrException.log(SolrCore.log,e);
    rsp.setException(e);
    numErrors++;
    return;
  }
}
