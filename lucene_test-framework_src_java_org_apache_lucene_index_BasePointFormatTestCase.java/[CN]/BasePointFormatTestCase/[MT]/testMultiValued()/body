{
  int numBytesPerDim=TestUtil.nextInt(random(),2,PointValues.MAX_NUM_BYTES);
  int numDims=TestUtil.nextInt(random(),1,PointValues.MAX_DIMENSIONS);
  int numDocs=atLeast(1000);
  List<byte[][]> docValues=new ArrayList<>();
  List<Integer> docIDs=new ArrayList<>();
  for (int docID=0; docID < numDocs; docID++) {
    int numValuesInDoc=TestUtil.nextInt(random(),1,5);
    for (int ord=0; ord < numValuesInDoc; ord++) {
      docIDs.add(docID);
      byte[][] values=new byte[numDims][];
      for (int dim=0; dim < numDims; dim++) {
        values[dim]=new byte[numBytesPerDim];
        random().nextBytes(values[dim]);
      }
      docValues.add(values);
    }
  }
  byte[][][] docValuesArray=docValues.toArray(new byte[docValues.size()][][]);
  int[] docIDsArray=new int[docIDs.size()];
  for (int i=0; i < docIDsArray.length; i++) {
    docIDsArray[i]=docIDs.get(i);
  }
  verify(docValuesArray,docIDsArray,numDims,numBytesPerDim);
}
