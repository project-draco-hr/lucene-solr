{
  Directory indexStoreA=new MockRAMDirectory();
  Directory indexStoreB=new MockRAMDirectory();
  Document lDoc=new Document();
  lDoc.add(new Field("fulltext","Once upon a time.....",Field.Store.YES,Field.Index.ANALYZED));
  lDoc.add(new Field("id","doc1",Field.Store.YES,Field.Index.NOT_ANALYZED));
  lDoc.add(new Field("handle","1",Field.Store.YES,Field.Index.NOT_ANALYZED));
  Document lDoc2=new Document();
  lDoc2.add(new Field("fulltext","in a galaxy far far away.....",Field.Store.YES,Field.Index.ANALYZED));
  lDoc2.add(new Field("id","doc2",Field.Store.YES,Field.Index.NOT_ANALYZED));
  lDoc2.add(new Field("handle","1",Field.Store.YES,Field.Index.NOT_ANALYZED));
  Document lDoc3=new Document();
  lDoc3.add(new Field("fulltext","a bizarre bug manifested itself....",Field.Store.YES,Field.Index.ANALYZED));
  lDoc3.add(new Field("id","doc3",Field.Store.YES,Field.Index.NOT_ANALYZED));
  lDoc3.add(new Field("handle","1",Field.Store.YES,Field.Index.NOT_ANALYZED));
  IndexWriter writerA=new IndexWriter(indexStoreA,new IndexWriterConfig(TEST_VERSION_CURRENT,new StandardAnalyzer(TEST_VERSION_CURRENT)));
  IndexWriter writerB=new IndexWriter(indexStoreB,new IndexWriterConfig(TEST_VERSION_CURRENT,new StandardAnalyzer(TEST_VERSION_CURRENT)));
  writerA.addDocument(lDoc);
  writerA.addDocument(lDoc2);
  writerA.addDocument(lDoc3);
  writerA.optimize();
  writerA.close();
  writerB.close();
  QueryParser parser=new QueryParser(TEST_VERSION_CURRENT,"fulltext",new StandardAnalyzer(TEST_VERSION_CURRENT));
  Query query=parser.parse("handle:1");
  Searcher[] searchers=new Searcher[2];
  searchers[0]=new IndexSearcher(indexStoreB,true);
  searchers[1]=new IndexSearcher(indexStoreA,true);
  Searcher mSearcher=getMultiSearcherInstance(searchers);
  ScoreDoc[] hits=mSearcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  for (int i=0; i < hits.length; i++) {
    mSearcher.doc(hits[i].doc);
  }
  mSearcher.close();
  writerB=new IndexWriter(indexStoreB,new IndexWriterConfig(TEST_VERSION_CURRENT,new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));
  writerB.addDocument(lDoc);
  writerB.optimize();
  writerB.close();
  Searcher[] searchers2=new Searcher[2];
  searchers2[0]=new IndexSearcher(indexStoreB,true);
  searchers2[1]=new IndexSearcher(indexStoreA,true);
  MultiSearcher mSearcher2=getMultiSearcherInstance(searchers2);
  ScoreDoc[] hits2=mSearcher2.search(query,null,1000).scoreDocs;
  assertEquals(4,hits2.length);
  for (int i=0; i < hits2.length; i++) {
    mSearcher2.doc(hits2[i].doc);
  }
  Query subSearcherQuery=parser.parse("id:doc1");
  hits2=mSearcher2.search(subSearcherQuery,null,1000).scoreDocs;
  assertEquals(2,hits2.length);
  assertEquals(0,mSearcher2.subSearcher(hits2[0].doc));
  assertEquals(1,mSearcher2.subSearcher(hits2[1].doc));
  subSearcherQuery=parser.parse("id:doc2");
  hits2=mSearcher2.search(subSearcherQuery,null,1000).scoreDocs;
  assertEquals(1,hits2.length);
  assertEquals(1,mSearcher2.subSearcher(hits2[0].doc));
  mSearcher2.close();
  Term term=new Term("id","doc1");
  IndexReader readerB=IndexReader.open(indexStoreB,false);
  readerB.deleteDocuments(term);
  readerB.close();
  writerB=new IndexWriter(indexStoreB,new IndexWriterConfig(TEST_VERSION_CURRENT,new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));
  writerB.optimize();
  writerB.close();
  Searcher[] searchers3=new Searcher[2];
  searchers3[0]=new IndexSearcher(indexStoreB,true);
  searchers3[1]=new IndexSearcher(indexStoreA,true);
  Searcher mSearcher3=getMultiSearcherInstance(searchers3);
  ScoreDoc[] hits3=mSearcher3.search(query,null,1000).scoreDocs;
  assertEquals(3,hits3.length);
  for (int i=0; i < hits3.length; i++) {
    mSearcher3.doc(hits3[i].doc);
  }
  mSearcher3.close();
  indexStoreA.close();
  indexStoreB.close();
}
