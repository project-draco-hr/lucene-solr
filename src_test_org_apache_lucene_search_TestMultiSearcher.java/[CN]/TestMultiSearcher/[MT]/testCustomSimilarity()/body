{
  RAMDirectory dir=new RAMDirectory();
  initIndex(dir,10,true,"x");
  IndexSearcher srchr=new IndexSearcher(dir,true);
  MultiSearcher msrchr=getMultiSearcherInstance(new Searcher[]{srchr});
  Similarity customSimilarity=new DefaultSimilarity(){
    public float idf(    int docFreq,    int numDocs){
      return 100.0f;
    }
    public float coord(    int overlap,    int maxOverlap){
      return 1.0f;
    }
    public float lengthNorm(    String fieldName,    int numTokens){
      return 1.0f;
    }
    public float queryNorm(    float sumOfSquaredWeights){
      return 1.0f;
    }
    public float sloppyFreq(    int distance){
      return 1.0f;
    }
    public float tf(    float freq){
      return 1.0f;
    }
  }
;
  srchr.setSimilarity(customSimilarity);
  msrchr.setSimilarity(customSimilarity);
  Query query=new TermQuery(new Term("contents","doc0"));
  TopDocs topDocs=srchr.search(query,null,1);
  float score1=topDocs.getMaxScore();
  topDocs=msrchr.search(query,null,1);
  float scoreN=topDocs.getMaxScore();
  assertEquals("MultiSearcher score must be equal to single esrcher score!",score1,scoreN,1e-6);
}
