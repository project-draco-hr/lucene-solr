{
  assumeFalse("windows is not supported",Constants.WINDOWS);
  Path dir=createTempDir();
  dir=FilterPath.unwrap(dir).toRealPath();
  FileStore root=new MockFileStore(dir.toString() + " (/dev/zzz1)","btrfs","/dev/zzz1");
  Path devdir=dir.resolve("dev");
  Files.createDirectories(devdir);
  Files.createFile(devdir.resolve("zzz1"));
  Path sysdir=dir.resolve("sys").resolve("block").resolve("zzz").resolve("queue");
  Files.createDirectories(sysdir);
  try (OutputStream o=Files.newOutputStream(sysdir.resolve("rotational"))){
    o.write("0\n".getBytes(StandardCharsets.US_ASCII));
  }
   Map<String,FileStore> mappings=Collections.singletonMap(dir.toString(),root);
  FileSystem mockLinux=new MockLinuxFileSystemProvider(dir.getFileSystem(),mappings,dir).getFileSystem(null);
  Path mockPath=mockLinux.getPath(dir.toString());
  assertFalse(IOUtils.spinsLinux(mockPath));
}
