{
  StreamExpression expression=new StreamExpression(factory.getFunctionName(this.getClass()));
  if (hashStream instanceof Expressible && fullStream instanceof Expressible) {
    expression.addParameter(((Expressible)fullStream).toExpression(factory));
    expression.addParameter(new StreamExpressionNamedParameter("hashed",((Expressible)hashStream).toExpression(factory)));
  }
 else {
    throw new IOException("This OuterHashJoinStream contains a non-expressible TupleStream - it cannot be converted to an expression");
  }
  StringBuilder sb=new StringBuilder();
  for (  String part : hashOn) {
    if (sb.length() > 0) {
      sb.append(",");
    }
    sb.append(part);
  }
  expression.addParameter(new StreamExpressionNamedParameter("on",sb.toString()));
  return expression;
}
