def _writeRankSVMPairs(listOfFeatures, output):
    'Given a list of (relevance, {Features Map}) where the list represents\n    a set of documents to be compared, this calculates all pairs and\n    writes the Feature Vectors in a format compatible with libSVM.\n    Ex: listOfFeatures = [\n      #(relevance, {feature1:value, featureN:value})\n      (4, {1:0.9, 2:0.9, 3:0.1})\n      (3, {1:0.7, 2:0.9, 3:0.2})\n      (1, {1:0.1, 2:0.9, 6:0.1})\n    ]    \n    '
    for d1 in range(0, len(listOfFeatures)):
        for d2 in range((d1 + 1), len(listOfFeatures)):
            (doc1, doc2) = (listOfFeatures[d1], listOfFeatures[d2])
            (fv1, fv2) = (doc1[1], doc2[1])
            (d1Relevance, d2Relevance) = (float(doc1[0]), float(doc2[0]))
            if ((d1Relevance - d2Relevance) > PAIRWISE_THRESHOLD):
                outputLibSvmLine('+1', subtractFvMap(fv1, fv2), output)
                outputLibSvmLine('-1', subtractFvMap(fv2, fv1), output)
            elif ((d1Relevance - d2Relevance) < (- PAIRWISE_THRESHOLD)):
                outputLibSvmLine('+1', subtractFvMap(fv2, fv1), output)
                outputLibSvmLine('-1', subtractFvMap(fv1, fv2), output)
            else:
                continue
