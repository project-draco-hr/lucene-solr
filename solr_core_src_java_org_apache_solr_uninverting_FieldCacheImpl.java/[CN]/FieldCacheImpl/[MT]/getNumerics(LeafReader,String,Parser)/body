{
  if (parser == null) {
    throw new NullPointerException();
  }
  final NumericDocValues valuesIn=reader.getNumericDocValues(field);
  if (valuesIn != null) {
    return valuesIn;
  }
 else {
    final FieldInfo info=reader.getFieldInfos().fieldInfo(field);
    if (info == null) {
      return DocValues.emptyNumeric();
    }
 else     if (info.getDocValuesType() != DocValuesType.NONE) {
      throw new IllegalStateException("Type mismatch: " + field + " was indexed as "+ info.getDocValuesType());
    }
    if (parser instanceof PointParser) {
      if (info.getPointDimensionCount() == 0) {
        return DocValues.emptyNumeric();
      }
      if (info.getPointDimensionCount() != 1) {
        throw new IllegalStateException("Type mismatch: " + field + " was indexed with dimensions="+ info.getPointDimensionCount());
      }
      PointValues values=reader.getPointValues(field);
      if (values == null || values.size() == 0) {
        return DocValues.emptyNumeric();
      }
      if (values.size() != values.getDocCount()) {
        throw new IllegalStateException("Type mismatch: " + field + " was indexed with multiple values, numValues="+ values.size()+ ",numDocs="+ values.getDocCount());
      }
    }
 else {
      if (info.getIndexOptions() == IndexOptions.NONE) {
        return DocValues.emptyNumeric();
      }
    }
    Bits docsWithField=getDocsWithField(reader,field,parser);
    return ((LongsFromArray)caches.get(Long.TYPE).get(reader,new CacheKey(field,parser))).iterator(docsWithField);
  }
}
