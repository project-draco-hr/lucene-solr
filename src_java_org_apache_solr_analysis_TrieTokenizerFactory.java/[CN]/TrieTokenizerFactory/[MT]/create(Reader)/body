{
  try {
    StringBuilder builder=new StringBuilder();
    char[] buf=new char[8];
    int len;
    while ((len=input.read(buf)) != -1)     builder.append(buf,0,len);
switch (type) {
case INTEGER:
      return new NumericTokenStream(precisionStep).setIntValue(Integer.parseInt(builder.toString()));
case FLOAT:
    return new NumericTokenStream(precisionStep).setFloatValue(Float.parseFloat(builder.toString()));
case LONG:
  return new NumericTokenStream(precisionStep).setLongValue(Long.parseLong(builder.toString()));
case DOUBLE:
return new NumericTokenStream(precisionStep).setDoubleValue(Double.parseDouble(builder.toString()));
case DATE:
return new NumericTokenStream(precisionStep).setLongValue(dateField.parseMath(null,builder.toString()).getTime());
default :
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unknown type for trie field");
}
}
 catch (IOException e) {
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unable to create TrieIndexTokenizer",e);
}
}
