{
  File indexDir=new File(dataDir,this.getClass().getName() + "testSplitByRouteKey");
  if (indexDir.exists()) {
    FileUtils.deleteDirectory(indexDir);
  }
  indexDir.mkdirs();
  CompositeIdRouter r1=new CompositeIdRouter();
  String splitKey="sea-line!";
  String key2="soul-raising!";
  assertEquals(r1.keyHashRange(splitKey),r1.keyHashRange(key2));
  for (int i=0; i < 10; i++) {
    assertU(adoc("id",splitKey + i));
    assertU(adoc("id",key2 + i));
  }
  assertU(commit());
  assertJQ(req("q","*:*"),"/response/numFound==20");
  DocRouter.Range splitKeyRange=r1.keyHashRange(splitKey);
  LocalSolrQueryRequest request=null;
  Directory directory=null;
  try {
    request=lrf.makeRequest("q","dummy");
    SplitIndexCommand command=new SplitIndexCommand(request,Lists.newArrayList(indexDir.getAbsolutePath()),null,Lists.newArrayList(splitKeyRange),new CompositeIdRouter(),null,splitKey);
    new SolrIndexSplitter(command).split();
    directory=h.getCore().getDirectoryFactory().get(indexDir.getAbsolutePath(),DirectoryFactory.DirContext.DEFAULT,h.getCore().getSolrConfig().indexConfig.lockType);
    DirectoryReader reader=DirectoryReader.open(directory);
    assertEquals("split index has wrong number of documents",10,reader.numDocs());
    reader.close();
    h.getCore().getDirectoryFactory().release(directory);
    directory=null;
  }
  finally {
    if (request != null) {
      request.close();
    }
    if (directory != null) {
      h.getCore().getDirectoryFactory().release(directory);
    }
  }
}
