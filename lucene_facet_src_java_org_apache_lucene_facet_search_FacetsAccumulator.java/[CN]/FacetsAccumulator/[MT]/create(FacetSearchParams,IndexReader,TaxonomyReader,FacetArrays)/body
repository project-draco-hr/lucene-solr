{
  if (fsp.indexingParams.getPartitionSize() != Integer.MAX_VALUE) {
    return new OldFacetsAccumulator(fsp,indexReader,taxoReader,arrays);
  }
  List<FacetRequest> rangeRequests=new ArrayList<FacetRequest>();
  List<FacetRequest> nonRangeRequests=new ArrayList<FacetRequest>();
  for (  FacetRequest fr : fsp.facetRequests) {
    if (fr instanceof RangeFacetRequest) {
      rangeRequests.add(fr);
    }
 else {
      nonRangeRequests.add(fr);
    }
  }
  if (rangeRequests.isEmpty()) {
    return new TaxonomyFacetsAccumulator(fsp,indexReader,taxoReader,arrays);
  }
 else   if (nonRangeRequests.isEmpty()) {
    return new RangeAccumulator(rangeRequests);
  }
 else {
    FacetSearchParams searchParams=new FacetSearchParams(fsp.indexingParams,nonRangeRequests);
    FacetsAccumulator accumulator=new TaxonomyFacetsAccumulator(searchParams,indexReader,taxoReader,arrays);
    RangeAccumulator rangeAccumulator=new RangeAccumulator(rangeRequests);
    return MultiFacetsAccumulator.wrap(accumulator,rangeAccumulator);
  }
}
