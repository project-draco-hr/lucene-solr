{
  DoubleRange[] ranges=(DoubleRange[])this.ranges;
  LongRange[] longRanges=new LongRange[ranges.length];
  for (int i=0; i < ranges.length; i++) {
    DoubleRange range=ranges[i];
    longRanges[i]=new LongRange(range.label,NumericUtils.doubleToSortableLong(range.minIncl),true,NumericUtils.doubleToSortableLong(range.maxIncl),true);
  }
  LongRangeCounter counter=new LongRangeCounter(longRanges);
  int missingCount=0;
  for (  MatchingDocs hits : matchingDocs) {
    FunctionValues fv=valueSource.getValues(Collections.emptyMap(),hits.context);
    final int length=hits.bits.length();
    int doc=0;
    totCount+=hits.totalHits;
    while (doc < length && (doc=hits.bits.nextSetBit(doc)) != -1) {
      if (fv.exists(doc)) {
        counter.add(NumericUtils.doubleToSortableLong(fv.doubleVal(doc)));
      }
 else {
        missingCount++;
      }
      doc++;
    }
  }
  missingCount+=counter.fillCounts(counts);
  totCount-=missingCount;
}
