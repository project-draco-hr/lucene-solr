{
  if (sort.fields.length == 0) {
    throw new IllegalArgumentException("Sort must contain at least one field");
  }
  if (numHits <= 0) {
    throw new IllegalArgumentException("numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count");
  }
  FieldValueHitQueue<Entry> queue=FieldValueHitQueue.create(sort.fields,numHits);
  if (after == null) {
    if (trackMaxScore) {
      return new ScoringMaxScoreCollector(queue,numHits,fillFields);
    }
 else     if (trackDocScores) {
      return new ScoringNoMaxScoreCollector(queue,numHits,fillFields);
    }
 else {
      return new NonScoringCollector(queue,numHits,fillFields);
    }
  }
 else {
    if (after.fields == null) {
      throw new IllegalArgumentException("after.fields wasn't set; you must pass fillFields=true for the previous search");
    }
    if (after.fields.length != sort.getSort().length) {
      throw new IllegalArgumentException("after.fields has " + after.fields.length + " values but sort has "+ sort.getSort().length);
    }
    return new PagingFieldCollector(queue,after,numHits,fillFields,trackDocScores,trackMaxScore);
  }
}
