{
  clearIndex();
  assertU(commit());
  long version=addAndGetVersion(sdoc("id","1"),null);
  long version2;
  try {
    version2=addAndGetVersion(sdoc("id","1","_version_",Long.toString(version - 1)),null);
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=addAndGetVersion(sdoc("id","1"),params("_version_",Long.toString(version - 1)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=addAndGetVersion(sdoc("id","1"),params("_version_",Long.toString(-version)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=addAndGetVersion(sdoc("id","1"),params("_version_",Long.toString(version + random().nextInt(1000) + 1)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=deleteAndGetVersion("1",params("_version_",Long.toString(version - 1)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=deleteAndGetVersion("1",params("_version_",Long.toString(-version)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=deleteAndGetVersion("1",params("_version_",Long.toString(version + random().nextInt(1000) + 1)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=deleteAndGetVersion("I_do_not_exist",params("_version_",Long.toString(version)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  version2=deleteAndGetVersion("I_do_not_exist",params("_version_",Long.toString(-1)));
  assertTrue(version2 < 0);
  version2=addAndGetVersion(sdoc("id","1","_version_",Long.toString(version)),null);
  assertTrue(version2 > version);
  try {
    version2=addAndGetVersion(sdoc("id","1"),params("_version_",Long.toString(version)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=deleteAndGetVersion("1",params("_version_",Long.toString(version)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  version=version2;
  version2=deleteAndGetVersion("1",params("_version_",Long.toString(version)));
  try {
    version2=addAndGetVersion(sdoc("id","1"),params("_version_",Long.toString(version)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  try {
    version2=deleteAndGetVersion("1",params("_version_",Long.toString(version)));
    fail();
  }
 catch (  SolrException se) {
    assertEquals(409,se.code());
  }
  version2=addAndGetVersion(sdoc("id","1"),params("_version_",Long.toString(-(version - 1))));
  assertTrue(version2 > version);
  version=version2;
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
}
