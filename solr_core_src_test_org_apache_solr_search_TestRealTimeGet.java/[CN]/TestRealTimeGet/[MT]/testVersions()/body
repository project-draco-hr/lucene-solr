{
  clearIndex();
  assertU(commit());
  long version=addAndGetVersion(sdoc("id","1"),null);
  assertJQ(req("q","id:1"),"/response/numFound==0");
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  assertU(commit());
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  version+=10;
  updateJ(jsonAdd(sdoc("id","1","_version_",Long.toString(version))),params(SEEN_LEADER,SEEN_LEADER_VAL));
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  updateJ(jsonAdd(sdoc("id","1","_version_",Long.toString(version - 1))),params(SEEN_LEADER,SEEN_LEADER_VAL));
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  updateJ(jsonDelId("1"),params(SEEN_LEADER,SEEN_LEADER_VAL,"_version_",Long.toString(version - 1)));
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  assertU(commit());
  updateJ(jsonAdd(sdoc("id","1","_version_",Long.toString(version - 1))),params(SEEN_LEADER,SEEN_LEADER_VAL));
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  updateJ(jsonDelId("1"),params(SEEN_LEADER,SEEN_LEADER_VAL,"_version_",Long.toString(version - 1)));
  assertJQ(req("qt","/get","id","1"),"=={'doc':{'id':'1','_version_':" + version + "}}");
  version+=5;
  updateJ(jsonDelId("1"),params(SEEN_LEADER,SEEN_LEADER_VAL,"_version_",Long.toString(version)));
  updateJ(jsonAdd(sdoc("id","1","_version_",Long.toString(version - 1))),params(SEEN_LEADER,SEEN_LEADER_VAL));
  assertJQ(req("qt","/get","id","1"),"=={'doc':null}");
  assertU(commit());
  updateJ(jsonAdd(sdoc("id","1","_version_",Long.toString(version - 1))),params(SEEN_LEADER,SEEN_LEADER_VAL));
  assertJQ(req("qt","/get","id","1"),"=={'doc':null}");
  version=addAndGetVersion(sdoc("id","2"),null);
  long version2=deleteByQueryAndGetVersion("id:2",null);
  assertTrue(Math.abs(version2) > version);
}
