{
  final String[][] teststr=new String[][]{{"this is simple","this%20is%20simple"},{"this is simple","this+is+simple"},{"\u00FC","%C3%BC"},{"\u0026","%26"},{"",""},{"\u20AC","%E2%82%ac"}};
  for (  String[] tst : teststr) {
    SolrParams params=SolrRequestParsers.parseQueryString("val=" + tst[1]);
    assertEquals(tst[0],params.get("val"));
    params=SolrRequestParsers.parseQueryString("val=" + tst[1] + "&");
    assertEquals(tst[0],params.get("val"));
    params=SolrRequestParsers.parseQueryString("&&val=" + tst[1] + "&");
    assertEquals(tst[0],params.get("val"));
    params=SolrRequestParsers.parseQueryString("&&val=" + tst[1] + "&&&val="+ tst[1]+ "&");
    assertArrayEquals(new String[]{tst[0],tst[0]},params.getParams("val"));
  }
  SolrParams params=SolrRequestParsers.parseQueryString("val");
  assertEquals("",params.get("val"));
  params=SolrRequestParsers.parseQueryString("val&foo=bar=bar&muh&");
  assertEquals("",params.get("val"));
  assertEquals("bar=bar",params.get("foo"));
  assertEquals("",params.get("muh"));
  final String[] invalid={"q=h%FCllo","q=h\u00FCllo","q=hallo%","q=hallo%1","q=hallo%XX123","=hallo"};
  for (  String s : invalid) {
    try {
      SolrRequestParsers.parseQueryString(s);
      fail("Should throw SolrException");
    }
 catch (    SolrException se) {
    }
  }
}
