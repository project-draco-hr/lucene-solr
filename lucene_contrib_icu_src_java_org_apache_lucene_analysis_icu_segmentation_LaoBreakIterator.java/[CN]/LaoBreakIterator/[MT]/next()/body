{
  int current=current();
  int next=rules.next();
  if (next == BreakIterator.DONE)   return next;
 else   next+=workingOffset;
  char c=working.current();
  int following=rules.next();
  if (following != BreakIterator.DONE) {
    following+=workingOffset;
    if (rules.getRuleStatus() == 0 && laoSet.contains(c) && verifyPushBack(current,next)) {
      workingOffset=next - 1;
      working.setText(text.getText(),text.getStart() + workingOffset,text.getLength() - workingOffset);
      return next - 1;
    }
    rules.previous();
  }
  return next;
}
