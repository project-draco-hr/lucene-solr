{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir);
  int num=atLeast(100);
  List<Term> terms=new ArrayList<Term>();
  for (int i=0; i < num; i++) {
    String field="field" + i;
    String string=TestUtil.randomRealisticUnicodeString(random());
    terms.add(new Term(field,string));
    Document doc=new Document();
    doc.add(newStringField(field,string,Field.Store.NO));
    w.addDocument(doc);
  }
  IndexReader reader=w.getReader();
  w.close();
  IndexSearcher searcher=newSearcher(reader);
  int numQueries=atLeast(10);
  for (int i=0; i < numQueries; i++) {
    Term term=terms.get(random().nextInt(num));
    TopDocs queryResult=searcher.search(new TermQuery(term),reader.maxDoc());
    MatchAllDocsQuery matchAll=new MatchAllDocsQuery();
    final TermFilter filter=termFilter(term);
    TopDocs filterResult=searcher.search(matchAll,filter,reader.maxDoc());
    assertEquals(filterResult.totalHits,queryResult.totalHits);
    ScoreDoc[] scoreDocs=filterResult.scoreDocs;
    for (int j=0; j < scoreDocs.length; j++) {
      assertEquals(scoreDocs[j].doc,queryResult.scoreDocs[j].doc);
    }
  }
  reader.close();
  dir.close();
}
