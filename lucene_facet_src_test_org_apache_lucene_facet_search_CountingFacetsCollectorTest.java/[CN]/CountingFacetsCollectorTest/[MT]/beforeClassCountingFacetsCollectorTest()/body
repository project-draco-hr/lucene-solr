{
  indexDir=newDirectory();
  taxoDir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  conf.setMergePolicy(NoMergePolicy.COMPOUND_FILES);
  IndexWriter indexWriter=new IndexWriter(indexDir,conf);
  TaxonomyWriter taxoWriter=new DirectoryTaxonomyWriter(taxoDir);
  CategoryListParams allParents=new CategoryListParams();
  CategoryListParams noParents=new CategoryListParams("no_parents"){
    @Override public OrdinalPolicy getOrdinalPolicy(){
      return OrdinalPolicy.NO_PARENTS;
    }
  }
;
  Map<CategoryPath,CategoryListParams> params=new HashMap<CategoryPath,CategoryListParams>();
  params.put(CP_A,allParents);
  params.put(CP_B,allParents);
  params.put(CP_C,noParents);
  params.put(CP_D,noParents);
  fip=new PerDimensionIndexingParams(params);
  allExpectedCounts=newCounts();
  termExpectedCounts=newCounts();
  indexDocsNoFacets(indexWriter);
  indexDocsWithFacetsNoTerms(indexWriter,taxoWriter,allExpectedCounts);
  indexDocsWithFacetsAndTerms(indexWriter,taxoWriter,allExpectedCounts);
  indexDocsWithFacetsAndSomeTerms(indexWriter,taxoWriter,allExpectedCounts);
  IOUtils.close(indexWriter,taxoWriter);
}
