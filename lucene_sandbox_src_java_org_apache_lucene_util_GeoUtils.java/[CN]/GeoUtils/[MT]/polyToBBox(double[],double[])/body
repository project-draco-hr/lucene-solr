{
  if (polyLons.length != polyLats.length) {
    throw new IllegalArgumentException("polyLons and polyLats must be equal length");
  }
  double minLon=Double.POSITIVE_INFINITY;
  double maxLon=Double.NEGATIVE_INFINITY;
  double minLat=Double.POSITIVE_INFINITY;
  double maxLat=Double.NEGATIVE_INFINITY;
  for (int i=0; i < polyLats.length; i++) {
    if (GeoUtils.isValidLon(polyLons[i]) == false) {
      throw new IllegalArgumentException("invalid polyLons[" + i + "]="+ polyLons[i]);
    }
    if (GeoUtils.isValidLat(polyLats[i]) == false) {
      throw new IllegalArgumentException("invalid polyLats[" + i + "]="+ polyLats[i]);
    }
    minLon=Math.min(polyLons[i],minLon);
    maxLon=Math.max(polyLons[i],maxLon);
    minLat=Math.min(polyLats[i],minLat);
    maxLat=Math.max(polyLats[i],maxLat);
  }
  return new GeoRect(minLon - TOLERANCE,maxLon + TOLERANCE,minLat - TOLERANCE,maxLat + TOLERANCE);
}
