{
  assert(valSize == 32 || valSize == 64);
  if (precisionStep < 1)   throw new IllegalArgumentException("precisionStep must be >=1");
  this.field=field.intern();
  this.precisionStep=precisionStep;
  this.valSize=valSize;
  this.min=min;
  this.max=max;
  this.minInclusive=minInclusive;
  this.maxInclusive=maxInclusive;
  final MultiTermQuery.RewriteMethod rewriteMethod;
  if (valSize == 64) {
    if (precisionStep > 6) {
      rewriteMethod=CONSTANT_SCORE_FILTER_REWRITE;
    }
 else {
      rewriteMethod=CONSTANT_SCORE_AUTO_REWRITE_DEFAULT;
    }
  }
 else   if (valSize == 32) {
    if (precisionStep > 8) {
      rewriteMethod=CONSTANT_SCORE_FILTER_REWRITE;
    }
 else {
      rewriteMethod=CONSTANT_SCORE_AUTO_REWRITE_DEFAULT;
    }
  }
 else {
    throw new IllegalStateException("unrecognized valSize " + valSize);
  }
  setRewriteMethod(rewriteMethod);
}
