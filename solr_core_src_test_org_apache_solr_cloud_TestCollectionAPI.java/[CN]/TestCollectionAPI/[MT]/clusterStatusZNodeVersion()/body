{
  String cname="clusterStatusZNodeVersion";
  try (CloudSolrClient client=createCloudClient(null)){
    CollectionAdminRequest.Create create=new CollectionAdminRequest.Create().setCollectionName(cname).setMaxShardsPerNode(1).setNumShards(1).setReplicationFactor(1).setConfigName("conf1");
    create.process(client);
    waitForRecoveriesToFinish(cname,true);
    ModifiableSolrParams params=new ModifiableSolrParams();
    params.set("action",CollectionParams.CollectionAction.CLUSTERSTATUS.toString());
    params.set("collection",cname);
    SolrRequest request=new QueryRequest(params);
    request.setPath("/admin/collections");
    NamedList<Object> rsp=client.request(request);
    NamedList<Object> cluster=(NamedList<Object>)rsp.get("cluster");
    assertNotNull("Cluster state should not be null",cluster);
    NamedList<Object> collections=(NamedList<Object>)cluster.get("collections");
    assertNotNull("Collections should not be null in cluster state",collections);
    assertEquals(1,collections.size());
    Map<String,Object> collection=(Map<String,Object>)collections.get(cname);
    assertNotNull(collection);
    assertEquals("conf1",collection.get("configName"));
    Integer znodeVersion=(Integer)collection.get("znodeVersion");
    assertNotNull(znodeVersion);
    CollectionAdminRequest.AddReplica addReplica=new CollectionAdminRequest.AddReplica().setCollectionName(cname).setShardName("shard1");
    addReplica.process(client);
    waitForRecoveriesToFinish(cname,true);
    rsp=client.request(request);
    cluster=(NamedList<Object>)rsp.get("cluster");
    collections=(NamedList<Object>)cluster.get("collections");
    collection=(Map<String,Object>)collections.get(cname);
    Integer newVersion=(Integer)collection.get("znodeVersion");
    assertNotNull(newVersion);
    assertTrue(newVersion > znodeVersion);
  }
 }
