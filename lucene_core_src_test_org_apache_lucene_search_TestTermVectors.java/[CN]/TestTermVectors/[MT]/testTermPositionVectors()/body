{
  Query query=new TermQuery(new Term("field","zero"));
  ScoreDoc[] hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  DocsAndPositionsEnum dpEnum=null;
  for (int i=0; i < hits.length; i++) {
    Fields vectors=searcher.reader.getTermVectors(hits[i].doc);
    assertNotNull(vectors);
    assertEquals(1,vectors.size());
    TermsEnum termsEnum=vectors.terms("field").iterator(null);
    assertNotNull(termsEnum.next());
    boolean shouldBePosVector=hits[i].doc % 2 == 0;
    boolean shouldBeOffVector=hits[i].doc % 3 == 0;
    if (shouldBePosVector || shouldBeOffVector) {
      while (true) {
        dpEnum=termsEnum.docsAndPositions(null,dpEnum,shouldBeOffVector);
        assertNotNull(dpEnum);
        assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
        dpEnum.nextPosition();
        if (shouldBeOffVector) {
          assertTrue(dpEnum.startOffset() != -1);
          assertTrue(dpEnum.endOffset() != -1);
        }
        if (termsEnum.next() == null) {
          break;
        }
      }
    }
 else {
      fail();
    }
  }
}
