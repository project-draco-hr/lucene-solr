{
  RandomIndexWriter writer=new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random,MockTokenizer.SIMPLE,true)).setOpenMode(OpenMode.CREATE));
  if (VERBOSE) {
    System.out.println("TEST: now add non-vectors");
  }
  for (int i=0; i < 100; i++) {
    Document doc=new Document();
    doc.add(newField("field",English.intToEnglish(i),TextField.TYPE_STORED));
    writer.addDocument(doc);
  }
  if (VERBOSE) {
    System.out.println("TEST: now add vectors");
  }
  FieldType ft=new FieldType(TextField.TYPE_STORED);
  ft.setStoreTermVectors(true);
  ft.setStoreTermVectorOffsets(true);
  ft.setStoreTermVectorPositions(true);
  for (int i=0; i < 10; i++) {
    Document doc=new Document();
    doc.add(newField("field",English.intToEnglish(100 + i),ft));
    writer.addDocument(doc);
  }
  if (VERBOSE) {
    System.out.println("TEST: now getReader");
  }
  IndexReader reader=writer.getReader();
  writer.close();
  IndexSearcher searcher=newSearcher(reader);
  Query query=new TermQuery(new Term("field","hundred"));
  ScoreDoc[] hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(10,hits.length);
  for (int i=0; i < hits.length; i++) {
    Fields vectors=searcher.reader.getTermVectors(hits[i].doc);
    assertNotNull(vectors);
    assertEquals(1,vectors.getUniqueFieldCount());
  }
  reader.close();
}
