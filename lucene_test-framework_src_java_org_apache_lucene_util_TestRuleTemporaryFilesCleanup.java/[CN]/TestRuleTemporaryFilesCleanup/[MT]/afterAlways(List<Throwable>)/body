{
  final Path[] everything;
  final String tempDirBasePath;
synchronized (cleanupQueue) {
    tempDirBasePath=(tempDirBase != null ? tempDirBase.toAbsolutePath().toString() : null);
    tempDirBase=null;
    Collections.reverse(cleanupQueue);
    everything=new Path[cleanupQueue.size()];
    cleanupQueue.toArray(everything);
    cleanupQueue.clear();
  }
  if (failureMarker.wasSuccessful()) {
    try {
      IOUtils.rm(everything);
    }
 catch (    IOException e) {
      Class<?> suiteClass=RandomizedContext.current().getTargetClass();
      if (suiteClass.isAnnotationPresent(SuppressTempFileChecks.class)) {
        System.err.println("WARNING: Leftover undeleted temporary files (bugUrl: " + suiteClass.getAnnotation(SuppressTempFileChecks.class).bugUrl() + "): "+ e.getMessage());
        return;
      }
      throw e;
    }
    if (fileSystem != FileSystems.getDefault()) {
      fileSystem.close();
    }
  }
 else {
    if (tempDirBasePath != null) {
      System.err.println("NOTE: leaving temporary files on disk at: " + tempDirBasePath);
    }
  }
}
