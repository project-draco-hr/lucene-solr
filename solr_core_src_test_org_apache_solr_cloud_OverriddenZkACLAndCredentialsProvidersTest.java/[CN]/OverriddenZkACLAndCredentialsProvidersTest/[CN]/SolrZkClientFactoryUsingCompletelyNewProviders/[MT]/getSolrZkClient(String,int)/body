{
  return new SolrZkClient(zkServerAddress,zkClientTimeout){
    @Override protected ZkCredentialsProvider createZkCredentialsToAddAutomatically(){
      return new DefaultZkCredentialsProvider(){
        @Override protected Collection<ZkCredentials> createCredentials(){
          List<ZkCredentials> result=new ArrayList<ZkCredentials>();
          if (!StringUtils.isEmpty(digestUsername) && !StringUtils.isEmpty(digestPassword)) {
            try {
              result.add(new ZkCredentials("digest",(digestUsername + ":" + digestPassword).getBytes("UTF-8")));
            }
 catch (            UnsupportedEncodingException e) {
              throw new RuntimeException(e);
            }
          }
          return result;
        }
      }
;
    }
    @Override public ZkACLProvider createZkACLProvider(){
      return new DefaultZkACLProvider(){
        @Override protected List<ACL> createGlobalACLsToAdd(){
          try {
            List<ACL> result=new ArrayList<ACL>();
            if (!StringUtils.isEmpty(digestUsername) && !StringUtils.isEmpty(digestPassword)) {
              result.add(new ACL(ZooDefs.Perms.ALL,new Id("digest",DigestAuthenticationProvider.generateDigest(digestUsername + ":" + digestPassword))));
            }
            if (!StringUtils.isEmpty(digestReadonlyUsername) && !StringUtils.isEmpty(digestReadonlyPassword)) {
              result.add(new ACL(ZooDefs.Perms.READ,new Id("digest",DigestAuthenticationProvider.generateDigest(digestReadonlyUsername + ":" + digestReadonlyPassword))));
            }
            if (result.isEmpty()) {
              result=ZooDefs.Ids.OPEN_ACL_UNSAFE;
            }
            return result;
          }
 catch (          NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
          }
        }
      }
;
    }
  }
;
}
