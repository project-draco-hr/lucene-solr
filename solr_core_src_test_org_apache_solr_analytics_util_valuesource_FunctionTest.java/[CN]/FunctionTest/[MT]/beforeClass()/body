{
  initCore("solrconfig-basic.xml","schema-analytics.xml");
  h.update("<delete><query>*:*</query></delete>");
  for (int j=0; j < NUM_LOOPS; ++j) {
    int i=j % INT + 1;
    long l=j % LONG + 1;
    float f=j % FLOAT + 1;
    double d=j % DOUBLE + 1;
    double d0=j % DOUBLE;
    String dt=(1800 + j % DATE) + "-06-30T23:59:59Z";
    String s="str" + (j % STRING);
    double add_if=(double)i + f;
    double add_ldf=(double)l + d + f;
    double mult_if=(double)i * f;
    double mult_ldf=(double)l * d * f;
    double div_if=(double)i / f;
    double div_ld=(double)l / d;
    double pow_if=Math.pow(i,f);
    double pow_ld=Math.pow(l,d);
    double neg_i=(double)i * -1;
    double neg_l=(double)l * -1;
    String dm_2y=(1802 + j % DATE) + "-06-30T23:59:59Z";
    String dm_2m=(1800 + j % DATE) + "-08-30T23:59:59Z";
    String concat_first="this is the first" + s;
    String concat_second="this is the second" + s;
    String rev=new StringBuilder(s).reverse().toString();
    assertU(adoc(AbstractAnalyticsFacetTest.filter("id","1000" + j,"int_id","" + i,"long_ld","" + l,"float_fd","" + f,"double_dd","" + d,"date_dtd",dt,"string_sd",s,"add_if_dd","" + add_if,"add_ldf_dd","" + add_ldf,"mult_if_dd","" + mult_if,"mult_ldf_dd","" + mult_ldf,"div_if_dd","" + div_if,"div_ld_dd","" + div_ld,"pow_if_dd","" + pow_if,"pow_ld_dd","" + pow_ld,"neg_i_dd","" + neg_i,"neg_l_dd","" + neg_l,"const_8_dd","8","const_10_dd","10","dm_2y_dtd",dm_2y,"dm_2m_dtd",dm_2m,"const_00_dtd","1800-06-30T23:59:59Z","const_04_dtd","1804-06-30T23:59:59Z","const_first_sd","this is the first","const_second_sd","this is the second","concat_first_sd",concat_first,"concat_second_sd",concat_second,"rev_sd",rev,"miss_dd","" + d0)));
    if (usually()) {
      assertU(commit());
    }
  }
  assertU(commit());
  setResponse(h.query(request(fileToStringArr(fileName))));
}
