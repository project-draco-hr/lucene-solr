{
  this.indexOptions=fieldInfo.getIndexOptions();
  fieldHasPayloads=fieldInfo.hasPayloads();
  absolute=false;
  longsSize=wrappedPostingsWriter.setField(fieldInfo);
  longs=new long[longsSize];
  fields.add(new FieldMetaData(fieldInfo.number,longsSize));
  fieldHasFreqs=indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;
  fieldHasPositions=indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;
  fieldHasOffsets=indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
  if (fieldHasFreqs == false) {
    enumFlags=0;
  }
 else   if (fieldHasPositions == false) {
    enumFlags=DocsEnum.FLAG_FREQS;
  }
 else   if (fieldHasOffsets == false) {
    if (fieldHasPayloads) {
      enumFlags=DocsAndPositionsEnum.FLAG_PAYLOADS;
    }
 else {
      enumFlags=0;
    }
  }
 else {
    if (fieldHasPayloads) {
      enumFlags=DocsAndPositionsEnum.FLAG_PAYLOADS | DocsAndPositionsEnum.FLAG_OFFSETS;
    }
 else {
      enumFlags=DocsAndPositionsEnum.FLAG_OFFSETS;
    }
  }
  return 0;
}
