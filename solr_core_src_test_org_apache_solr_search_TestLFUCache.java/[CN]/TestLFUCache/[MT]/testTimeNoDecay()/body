{
  ConcurrentLFUCache<Integer,String> cacheNoDecay=new ConcurrentLFUCache<Integer,String>(10,9,(int)Math.floor((9 + 10) / 2),(int)Math.ceil(0.75 * 10),false,false,null,false);
  try {
    for (int i=1; i < 21; i++) {
      cacheNoDecay.put(i,Integer.toString(i));
    }
    Map<Integer,String> itemsNoDecay;
    itemsNoDecay=cacheNoDecay.getMostUsedItems(10);
    for (int i=11; i < 21; ++i) {
      assertNotNull(itemsNoDecay.get(i));
    }
    for (int i=0; i < 5; ++i) {
      for (int jdx=0; jdx < 10; ++jdx) {
        cacheNoDecay.get(i + 13);
      }
    }
    cacheNoDecay.put(22,"22");
    cacheNoDecay.put(23,"23");
    cacheNoDecay.put(24,"24");
    cacheNoDecay.put(25,"25");
    itemsNoDecay=cacheNoDecay.getMostUsedItems(10);
    for (int idx=15; idx < 25; ++idx) {
      assertNotNull(itemsNoDecay.get(15));
    }
  }
  finally {
    cacheNoDecay.destroy();
  }
}
