{
  ConcurrentLFUCache<Integer,String> cacheDecay=new ConcurrentLFUCache<>(10,9);
  try {
    for (int i=1; i < 21; i++) {
      cacheDecay.put(i,Integer.toString(i));
    }
    Map<Integer,String> itemsDecay;
    itemsDecay=cacheDecay.getMostUsedItems(10);
    for (int i=11; i < 21; ++i) {
      assertNotNull(itemsDecay.get(i));
    }
    for (int i=0; i < 5; ++i) {
      for (int jdx=0; jdx < 63; ++jdx) {
        cacheDecay.get(i + 13);
      }
    }
    cacheDecay.put(22,"22");
    cacheDecay.put(23,"23");
    cacheDecay.put(24,"24");
    cacheDecay.put(25,"25");
    itemsDecay=cacheDecay.getMostUsedItems(10);
    assertNull(itemsDecay.get(11));
    assertNull(itemsDecay.get(18));
    assertNotNull(itemsDecay.get(13));
    assertNotNull(itemsDecay.get(14));
    assertNotNull(itemsDecay.get(15));
    assertNotNull(itemsDecay.get(16));
    assertNotNull(itemsDecay.get(17));
    for (int idx=26; idx < 32; ++idx) {
      cacheDecay.put(idx,Integer.toString(idx));
    }
    itemsDecay=cacheDecay.getMostUsedItems(10);
    assertNull(itemsDecay.get(20));
    assertNull(itemsDecay.get(24));
    assertNotNull(itemsDecay.get(13));
    assertNotNull(itemsDecay.get(14));
    assertNotNull(itemsDecay.get(15));
    assertNotNull(itemsDecay.get(16));
    assertNotNull(itemsDecay.get(17));
    for (int idx=32; idx < 40; ++idx) {
      cacheDecay.put(idx,Integer.toString(idx));
    }
    itemsDecay=cacheDecay.getMostUsedItems(10);
    System.out.println(itemsDecay);
    assertNull(itemsDecay.get(13));
    assertNull(itemsDecay.get(14));
    assertNull(itemsDecay.get(15));
    assertNull(itemsDecay.get(16));
    assertNull(itemsDecay.get(17));
    for (int idx=30; idx < 40; ++idx) {
      assertNotNull(itemsDecay.get(idx));
    }
  }
  finally {
    cacheDecay.destroy();
  }
}
