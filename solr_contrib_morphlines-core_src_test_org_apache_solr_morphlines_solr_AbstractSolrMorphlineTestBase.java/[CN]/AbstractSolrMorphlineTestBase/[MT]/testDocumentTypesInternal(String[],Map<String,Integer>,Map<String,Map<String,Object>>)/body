{
  assumeTrue("This test has issues with this locale: https://issues.apache.org/jira/browse/SOLR-5778","GregorianCalendar".equals(Calendar.getInstance(TimeZone.getDefault(),Locale.getDefault()).getClass().getSimpleName()));
  deleteAllDocuments();
  int numDocs=0;
  for (int i=0; i < 1; i++) {
    for (    String file : files) {
      File f=new File(file);
      byte[] body=Files.toByteArray(f);
      Record event=new Record();
      event.getFields().put(Fields.ATTACHMENT_BODY,new ByteArrayInputStream(body));
      event.getFields().put(Fields.ATTACHMENT_NAME,f.getName());
      event.getFields().put(Fields.BASE_ID,f.getName());
      collector.reset();
      load(event);
      Integer count=expectedRecords.get(file);
      if (count != null) {
        numDocs+=count;
      }
 else {
        numDocs++;
      }
      assertEquals("unexpected results in " + file,numDocs,queryResultSetSize("*:*"));
      Map<String,Object> expectedContents=expectedRecordContents.get(file);
      if (expectedContents != null) {
        Record actual=collector.getFirstRecord();
        for (        Map.Entry<String,Object> entry : expectedContents.entrySet()) {
          if (entry.getValue() == NON_EMPTY_FIELD) {
            assertNotNull(entry.getKey());
            assertTrue(actual.getFirstValue(entry.getKey()).toString().length() > 0);
          }
 else           if (entry.getValue() == null) {
            assertEquals("key:" + entry.getKey(),0,actual.get(entry.getKey()).size());
          }
 else {
            assertEquals("key:" + entry.getKey(),Arrays.asList(entry.getValue()),actual.get(entry.getKey()));
          }
        }
      }
    }
  }
  assertEquals(numDocs,queryResultSetSize("*:*"));
}
