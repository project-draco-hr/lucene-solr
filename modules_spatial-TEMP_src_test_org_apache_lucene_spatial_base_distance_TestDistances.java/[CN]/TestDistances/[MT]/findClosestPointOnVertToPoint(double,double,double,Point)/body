{
  double midLat=(highLat - lowLat) / 2 + lowLat;
  double midLatDist=ctx.getDistCalc().distance(ctr,lon,midLat);
  for (int L=0; L < 100 && (highLat - lowLat > 0.001 || L < 20); L++) {
    boolean bottom=(midLat - lowLat > highLat - midLat);
    double newMid=bottom ? (midLat - lowLat) / 2 + lowLat : (highLat - midLat) / 2 + midLat;
    double newMidDist=ctx.getDistCalc().distance(ctr,lon,newMid);
    if (newMidDist < midLatDist) {
      if (bottom) {
        highLat=midLat;
      }
 else {
        lowLat=midLat;
      }
      midLat=newMid;
      midLatDist=newMidDist;
    }
 else {
      if (bottom) {
        lowLat=newMid;
      }
 else {
        highLat=newMid;
      }
    }
  }
  return ctx.makePoint(lon,midLat);
}
