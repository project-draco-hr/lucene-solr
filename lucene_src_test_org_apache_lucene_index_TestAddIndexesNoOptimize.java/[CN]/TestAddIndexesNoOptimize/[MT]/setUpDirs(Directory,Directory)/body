{
  IndexWriter writer=null;
  writer=newWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(1000));
  addDocs(writer,1000);
  assertEquals(1000,writer.maxDoc());
  assertEquals(1,writer.getSegmentCount());
  writer.close();
  writer=newWriter(aux,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(100));
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setUseCompoundFile(false);
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false);
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(10);
  for (int i=0; i < 3; i++) {
    addDocs(writer,10);
    writer.close();
    writer=newWriter(aux,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(100));
    ((LogMergePolicy)writer.getConfig().getMergePolicy()).setUseCompoundFile(false);
    ((LogMergePolicy)writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false);
    ((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(10);
  }
  assertEquals(30,writer.maxDoc());
  assertEquals(3,writer.getSegmentCount());
  writer.close();
}
