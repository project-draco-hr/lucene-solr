{
  Directory dir=new RAMDirectory();
  Directory aux=new RAMDirectory();
  Directory aux2=new RAMDirectory();
  setUpDirs(dir,aux);
  IndexWriter writer=newWriter(aux2,new IndexWriterConfig(TEST_VERSION_CURRENT,new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(100));
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(10);
  writer.addIndexesNoOptimize(new Directory[]{aux});
  assertEquals(30,writer.maxDoc());
  assertEquals(3,writer.getSegmentCount());
  writer.close();
  IndexReader reader=IndexReader.open(aux,false);
  for (int i=0; i < 27; i++) {
    reader.deleteDocument(i);
  }
  assertEquals(3,reader.numDocs());
  reader.close();
  reader=IndexReader.open(aux2,false);
  for (int i=0; i < 8; i++) {
    reader.deleteDocument(i);
  }
  assertEquals(22,reader.numDocs());
  reader.close();
  writer=newWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(6));
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setMergeFactor(4);
  writer.addIndexesNoOptimize(new Directory[]{aux,aux2});
  assertEquals(1025,writer.maxDoc());
  assertEquals(1000,writer.getDocCount(0));
  writer.close();
  verifyNumDocs(dir,1025);
}
