{
  if (rate > 0) {
    return doSerialTasksWithRate();
  }
  int count=0;
  final int numTasks=tasks.size();
  final PerfTask[] tasksArray=new PerfTask[numTasks];
  for (int k=0; k < numTasks; k++)   tasksArray[k]=(PerfTask)tasks.get(k);
  for (int k=0; (repetitions == REPEAT_EXHAUST && !exhausted) || k < repetitions; k++) {
    for (int l=0; l < numTasks; l++)     try {
      count+=tasksArray[l].runAndMaybeStats(letChildReport);
      updateExhausted(tasksArray[l]);
    }
 catch (    NoMoreDataException e) {
      exhausted=true;
    }
  }
  return count;
}
