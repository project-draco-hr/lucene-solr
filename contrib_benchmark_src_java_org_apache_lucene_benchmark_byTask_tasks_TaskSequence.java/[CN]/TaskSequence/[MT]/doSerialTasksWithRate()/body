{
  long delayStep=(perMin ? 60000 : 1000) / rate;
  long nextStartTime=System.currentTimeMillis();
  int count=0;
  boolean exhausted=false;
  for (int k=0; (repetitions == REPEAT_EXHAUST && !exhausted) || k < repetitions; k++) {
    for (Iterator it=tasks.iterator(); it.hasNext(); ) {
      PerfTask task=(PerfTask)it.next();
      long waitMore=nextStartTime - System.currentTimeMillis();
      if (waitMore > 0) {
        Thread.sleep(waitMore);
      }
      nextStartTime+=delayStep;
      try {
        count+=task.runAndMaybeStats(letChildReport);
      }
 catch (      NoMoreDataException e) {
        exhausted=true;
      }
    }
  }
  return count;
}
