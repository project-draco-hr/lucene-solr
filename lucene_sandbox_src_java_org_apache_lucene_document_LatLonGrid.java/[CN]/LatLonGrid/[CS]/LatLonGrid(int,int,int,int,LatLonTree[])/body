{
  this.minLat=minLat;
  this.maxLat=maxLat;
  this.minLon=minLon;
  this.maxLon=maxLon;
  this.tree=tree;
  if (minLon > maxLon) {
    throw new IllegalArgumentException("Grid cannot cross the dateline");
  }
  if (minLat > maxLat) {
    throw new IllegalArgumentException("bogus grid");
  }
  long latitudeRange=maxLat - (long)minLat;
  long longitudeRange=maxLon - (long)minLon;
  final long minRange=(GRID_SIZE - 1) * (GRID_SIZE - 1);
  if (latitudeRange < minRange || longitudeRange < minRange) {
    latPerCell=lonPerCell=Long.MAX_VALUE;
  }
 else {
    latPerCell=latitudeRange / (GRID_SIZE - 1);
    lonPerCell=longitudeRange / (GRID_SIZE - 1);
    fill(0,GRID_SIZE,0,GRID_SIZE);
  }
}
