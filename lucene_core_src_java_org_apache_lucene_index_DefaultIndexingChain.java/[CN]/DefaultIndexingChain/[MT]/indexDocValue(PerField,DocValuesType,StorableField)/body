{
  boolean hasDocValues=fp.fieldInfo.hasDocValues();
  fp.fieldInfo.setDocValuesType(dvType);
  if (hasDocValues == false) {
    fieldInfos.globalFieldNumbers.setDocValuesType(fp.fieldInfo.number,fp.fieldInfo.name,dvType);
  }
  int docID=docState.docID;
switch (dvType) {
case NUMERIC:
    if (fp.docValuesWriter == null) {
      fp.docValuesWriter=new NumericDocValuesWriter(fp.fieldInfo,bytesUsed,true);
    }
  ((NumericDocValuesWriter)fp.docValuesWriter).addValue(docID,field.numericValue().longValue());
break;
case BINARY:
if (fp.docValuesWriter == null) {
fp.docValuesWriter=new BinaryDocValuesWriter(fp.fieldInfo,bytesUsed);
}
((BinaryDocValuesWriter)fp.docValuesWriter).addValue(docID,field.binaryValue());
break;
case SORTED:
if (fp.docValuesWriter == null) {
fp.docValuesWriter=new SortedDocValuesWriter(fp.fieldInfo,bytesUsed);
}
((SortedDocValuesWriter)fp.docValuesWriter).addValue(docID,field.binaryValue());
break;
case SORTED_SET:
if (fp.docValuesWriter == null) {
fp.docValuesWriter=new SortedSetDocValuesWriter(fp.fieldInfo,bytesUsed);
}
((SortedSetDocValuesWriter)fp.docValuesWriter).addValue(docID,field.binaryValue());
break;
default :
throw new AssertionError("unrecognized DocValues.Type: " + dvType);
}
}
