{
  String fieldName=field.name();
  IndexableFieldType fieldType=field.fieldType();
  PerField fp=null;
  if (fieldType.indexOptions() == null) {
    throw new NullPointerException("IndexOptions must not be null (field: \"" + field.name() + "\")");
  }
  if (fieldType.indexOptions() != IndexOptions.NONE) {
    if (fieldType.omitNorms() && field.boost() != 1.0f) {
      throw new UnsupportedOperationException("You cannot set an index-time boost: norms are omitted for field '" + field.name() + "'");
    }
    fp=getOrAddField(fieldName,fieldType,true);
    boolean first=fp.fieldGen != fieldGen;
    fp.invert(field,first);
    if (first) {
      fields[fieldCount++]=fp;
      fp.fieldGen=fieldGen;
    }
  }
 else {
    verifyUnIndexedFieldType(fieldName,fieldType);
  }
  if (fieldType.stored()) {
    if (fp == null) {
      fp=getOrAddField(fieldName,fieldType,false);
    }
    if (fieldType.stored()) {
      try {
        storedFieldsWriter.writeField(fp.fieldInfo,field);
      }
 catch (      Throwable th) {
        throw AbortingException.wrap(th);
      }
    }
  }
  DocValuesType dvType=fieldType.docValuesType();
  if (dvType == null) {
    throw new NullPointerException("docValuesType must not be null (field: \"" + fieldName + "\")");
  }
  if (dvType != DocValuesType.NONE) {
    if (fp == null) {
      fp=getOrAddField(fieldName,fieldType,false);
    }
    indexDocValue(fp,dvType,field);
  }
  if (fieldType.pointDimensionCount() != 0) {
    if (fp == null) {
      fp=getOrAddField(fieldName,fieldType,false);
    }
    indexPoint(fp,field);
  }
  return fieldCount;
}
