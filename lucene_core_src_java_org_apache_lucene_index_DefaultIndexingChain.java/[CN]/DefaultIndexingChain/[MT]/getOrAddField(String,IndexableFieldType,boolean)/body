{
  final int hashPos=name.hashCode() & hashMask;
  PerField fp=fieldHash[hashPos];
  while (fp != null && !fp.fieldInfo.name.equals(name)) {
    fp=fp.next;
  }
  if (fp == null) {
    FieldInfo fi=fieldInfos.getOrAdd(name);
    fi.setIndexOptions(fieldType.indexOptions());
    fp=new PerField(fi,invert);
    fp.next=fieldHash[hashPos];
    fieldHash[hashPos]=fp;
    totalFieldCount++;
    if (totalFieldCount >= fieldHash.length / 2) {
      rehash();
    }
    if (totalFieldCount > fields.length) {
      PerField[] newFields=new PerField[ArrayUtil.oversize(totalFieldCount,RamUsageEstimator.NUM_BYTES_OBJECT_REF)];
      System.arraycopy(fields,0,newFields,0,fields.length);
      fields=newFields;
    }
  }
 else   if (invert && fp.invertState == null) {
    fp.fieldInfo.setIndexOptions(fieldType.indexOptions());
    fp.setInvertState();
  }
  return fp;
}
