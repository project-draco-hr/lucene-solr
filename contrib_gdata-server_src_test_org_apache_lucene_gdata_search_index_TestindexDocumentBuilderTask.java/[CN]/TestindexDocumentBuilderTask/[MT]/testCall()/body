{
  ExecutorService service=Executors.newSingleThreadExecutor();
  Future<IndexDocument> future=service.submit(this.fineBuilder);
  IndexDocument doc=future.get();
  assertNotNull(doc.getDeletealbe());
  assertNotNull(doc.getWriteable());
  assertEquals(IndexDocument.FIELD_ENTRY_ID,doc.getDeletealbe().field());
  assertEquals(ID,doc.getDeletealbe().text());
  assertEquals(ID,doc.getWriteable().getField(IndexDocument.FIELD_ENTRY_ID).stringValue());
  assertNotNull(doc.getWriteable().getField(CONTENT_FIELD).stringValue());
  assertTrue(doc.commitAfter());
  assertTrue(doc.optimizeAfter());
  future=service.submit(this.failInStrategyBuilder);
  doc=future.get();
  assertNotNull(doc.getDeletealbe());
  assertNotNull(doc.getWriteable());
  assertEquals(IndexDocument.FIELD_ENTRY_ID,doc.getDeletealbe().field());
  assertEquals(ID,doc.getDeletealbe().text());
  assertEquals(ID,doc.getWriteable().getField(IndexDocument.FIELD_ENTRY_ID).stringValue());
  assertNotNull(doc.getWriteable().getField(CONTENT_FIELD).stringValue());
  future=service.submit(this.zeroFields);
  try {
    future.get();
    fail("zero fields in document");
  }
 catch (  ExecutionException e) {
    assertTrue(e.getCause().getClass() == GdataIndexerException.class);
  }
  service.shutdownNow();
}
