{
  String[] tests=new String[docIds != null && docIds.length > 0 ? docIds.length + 1 : 1];
  int i=0;
  if (docIds != null && docIds.length > 0) {
    for (    int docId : docIds) {
      tests[i++]="//result/doc/*[@name='id'][.='" + docId + "']";
    }
  }
  tests[i++]="*[count(//doc)=" + count + "]";
  String score=new String[]{null,"none","distance","recipDistance"}[random().nextInt(4)];
  double distDEG=DistanceUtils.dist2Degrees(distKM,DistanceUtils.EARTH_MEAN_RADIUS_KM);
  String circleStr="Circle(" + ptStr.replaceAll(" ","") + " d="+ distDEG+ ")";
  String shapeStr;
  if (exact) {
    shapeStr=circleStr;
  }
 else {
    SpatialContext ctx=SpatialContext.GEO;
    shapeStr=ctx.toString(ctx.readShape(circleStr).getBoundingBox());
  }
  assertQ(req("fl","id","q","*:*","rows","1000","fq","{!field f=" + fieldName + (score == null ? "" : " score=" + score)+ "}Intersects("+ shapeStr+ ")"),tests);
}
