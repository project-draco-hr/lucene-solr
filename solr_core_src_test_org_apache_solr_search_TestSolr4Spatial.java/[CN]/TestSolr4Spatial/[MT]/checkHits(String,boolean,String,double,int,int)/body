{
  if (exact && fieldName.equalsIgnoreCase("bbox")) {
    return;
  }
  String[] tests=new String[docIds != null && docIds.length > 0 ? docIds.length + 1 : 1];
  int i=0;
  if (docIds != null && docIds.length > 0) {
    for (    int docId : docIds) {
      tests[i++]="//result/doc/*[@name='id'][.='" + docId + "']";
    }
  }
  tests[i++]="*[count(//doc)=" + count + "]";
{
    String score=new String[]{null,"none","distance","recipDistance"}[random().nextInt(4)];
    double distDEG=DistanceUtils.dist2Degrees(distKM,DistanceUtils.EARTH_MEAN_RADIUS_KM);
    Point point=SpatialUtils.parsePoint(ptStr,SpatialContext.GEO);
    String circleStr="BUFFER(POINT(" + point.getX() + " "+ point.getY()+ "),"+ distDEG+ ")";
    String shapeStr;
    if (exact) {
      shapeStr=circleStr;
    }
 else {
      SpatialContext ctx=SpatialContext.GEO;
      Rectangle bbox=ctx.readShapeFromWkt(circleStr).getBoundingBox();
      shapeStr="ENVELOPE(" + bbox.getMinX() + ", "+ bbox.getMaxX()+ ", "+ bbox.getMaxY()+ ", "+ bbox.getMinY()+ ")";
    }
    assertQ(req("fl","id","q","*:*","rows","1000","fq","{!field f=" + fieldName + (score == null ? "" : " score=" + score)+ "}Intersects("+ shapeStr+ ")"),tests);
  }
{
    assertQ(req("fl","id","q","*:*","rows","1000","fq","{!" + (exact ? "geofilt" : "bbox") + " sfield="+ fieldName+ " pt='"+ ptStr+ "' d="+ distKM+ "}"),tests);
  }
}
