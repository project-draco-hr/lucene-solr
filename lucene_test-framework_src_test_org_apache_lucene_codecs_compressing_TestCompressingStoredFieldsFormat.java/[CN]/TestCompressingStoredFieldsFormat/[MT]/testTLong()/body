{
  byte buffer[]=new byte[10];
  ByteArrayDataOutput out=new ByteArrayDataOutput(buffer);
  ByteArrayDataInput in=new ByteArrayDataInput(buffer);
  for (int i=Short.MIN_VALUE; i < Short.MAX_VALUE; i++) {
    for (    long mul : new long[]{SECOND,HOUR,DAY}) {
      long l1=(long)i * mul;
      CompressingStoredFieldsWriter.writeTLong(out,l1);
      in.reset(buffer,0,out.getPosition());
      long l2=CompressingStoredFieldsReader.readTLong(in);
      assertTrue(in.eof());
      assertEquals(l1,l2);
      if (i >= -16 && i <= 15) {
        assertEquals(1,out.getPosition());
      }
      out.reset(buffer);
    }
  }
  Random r=random();
  for (int i=0; i < 100000; i++) {
    final int numBits=r.nextInt(65);
    long l1=r.nextLong() & ((1L << numBits) - 1);
switch (r.nextInt(4)) {
case 0:
      l1*=SECOND;
    break;
case 1:
  l1*=HOUR;
break;
case 2:
l1*=DAY;
break;
default :
break;
}
CompressingStoredFieldsWriter.writeTLong(out,l1);
in.reset(buffer,0,out.getPosition());
long l2=CompressingStoredFieldsReader.readTLong(in);
assertTrue(in.eof());
assertEquals(l1,l2);
out.reset(buffer);
}
}
