{
  CharacterRunAutomaton stopSet=new CharacterRunAutomaton(new RegExp("the|foo").toLightAutomaton());
  CommonQueryParserConfiguration qp=getParserConfig(new MockAnalyzer(random(),MockTokenizer.SIMPLE,true,stopSet));
  Query result=getQuery("field:the OR field:foo",qp);
  assertNotNull("result is null and it shouldn't be",result);
  assertTrue("result is not a BooleanQuery",result instanceof BooleanQuery);
  assertTrue(((BooleanQuery)result).clauses().size() + " does not equal: " + 0,((BooleanQuery)result).clauses().size() == 0);
  result=getQuery("field:woo OR field:the",qp);
  assertNotNull("result is null and it shouldn't be",result);
  assertTrue("result is not a TermQuery",result instanceof TermQuery);
  result=getQuery("(fieldX:xxxxx OR fieldy:xxxxxxxx)^2 AND (fieldx:the OR fieldy:foo)",qp);
  assertNotNull("result is null and it shouldn't be",result);
  assertTrue("result is not a BooleanQuery",result instanceof BooleanQuery);
  if (VERBOSE)   System.out.println("Result: " + result);
  assertTrue(((BooleanQuery)result).clauses().size() + " does not equal: " + 2,((BooleanQuery)result).clauses().size() == 2);
}
