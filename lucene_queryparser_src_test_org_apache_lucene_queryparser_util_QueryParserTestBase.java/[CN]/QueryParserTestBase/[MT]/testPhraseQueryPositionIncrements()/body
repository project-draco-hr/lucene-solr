{
  CharacterRunAutomaton stopStopList=new CharacterRunAutomaton(new RegExp("[sS][tT][oO][pP]").toAutomaton());
  CommonQueryParserConfiguration qp=getParserConfig(new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false,stopStopList,false));
  PhraseQuery phraseQuery=new PhraseQuery();
  phraseQuery.add(new Term("field","1"));
  phraseQuery.add(new Term("field","2"));
  assertEquals(phraseQuery,getQuery("\"1 2\"",qp));
  assertEquals(phraseQuery,getQuery("\"1 stop 2\"",qp));
  qp.setEnablePositionIncrements(true);
  assertEquals(phraseQuery,getQuery("\"1 stop 2\"",qp));
  qp.setEnablePositionIncrements(false);
  assertEquals(phraseQuery,getQuery("\"1 stop 2\"",qp));
  qp=getParserConfig(new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false,stopStopList,true));
  qp.setEnablePositionIncrements(true);
  phraseQuery=new PhraseQuery();
  phraseQuery.add(new Term("field","1"));
  phraseQuery.add(new Term("field","2"),2);
  assertEquals(phraseQuery,getQuery("\"1 stop 2\"",qp));
}
