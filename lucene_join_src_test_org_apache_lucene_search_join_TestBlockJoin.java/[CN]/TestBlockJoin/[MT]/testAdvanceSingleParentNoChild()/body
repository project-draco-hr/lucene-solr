{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));
  Document parentDoc=new Document();
  parentDoc.add(newStringField("parent","1",Field.Store.NO));
  parentDoc.add(newStringField("isparent","yes",Field.Store.NO));
  w.addDocuments(Arrays.asList(parentDoc));
  parentDoc=new Document();
  parentDoc.add(newStringField("parent","2",Field.Store.NO));
  parentDoc.add(newStringField("isparent","yes",Field.Store.NO));
  Document childDoc=new Document();
  childDoc.add(newStringField("child","2",Field.Store.NO));
  w.addDocuments(Arrays.asList(childDoc,parentDoc));
  w.forceMerge(1);
  IndexReader r=w.getReader();
  w.close();
  IndexSearcher s=newSearcher(r);
  Query tq=new TermQuery(new Term("child","2"));
  BitDocIdSetFilter parentFilter=new BitDocIdSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term("isparent","yes"))));
  ToParentBlockJoinQuery q=new ToParentBlockJoinQuery(tq,parentFilter,ScoreMode.Avg);
  Weight weight=s.createNormalizedWeight(q);
  DocIdSetIterator disi=weight.scorer(s.getIndexReader().leaves().get(0),null,true);
  assertEquals(2,disi.advance(0));
  r.close();
  dir.close();
}
