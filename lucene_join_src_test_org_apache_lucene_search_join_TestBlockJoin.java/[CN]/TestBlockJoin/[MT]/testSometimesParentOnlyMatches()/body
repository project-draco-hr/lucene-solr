{
  Directory d=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),d);
  Document parent=new Document();
  parent.add(new StoredField("parentID","0"));
  parent.add(new SortedDocValuesField("parentID",new BytesRef("0")));
  parent.add(newTextField("parentText","text",Field.Store.NO));
  parent.add(newStringField("isParent","yes",Field.Store.NO));
  List<Document> docs=new ArrayList<>();
  Document child=new Document();
  docs.add(child);
  child.add(new StoredField("childID","0"));
  child.add(newTextField("childText","text",Field.Store.NO));
  docs.add(parent);
  w.addDocuments(docs);
  docs.clear();
  parent=new Document();
  parent.add(newTextField("parentText","text",Field.Store.NO));
  parent.add(newStringField("isParent","yes",Field.Store.NO));
  parent.add(new StoredField("parentID","1"));
  parent.add(new SortedDocValuesField("parentID",new BytesRef("1")));
  docs.add(parent);
  w.addDocuments(docs);
  IndexReader r=w.getReader();
  w.close();
  IndexSearcher searcher=new ToParentBlockJoinIndexSearcher(r);
  Query childQuery=new TermQuery(new Term("childText","text"));
  BitSetProducer parentsFilter=new QueryBitSetProducer(new TermQuery(new Term("isParent","yes")));
  ToParentBlockJoinQuery childJoinQuery=new ToParentBlockJoinQuery(childQuery,parentsFilter,ScoreMode.Avg);
  BooleanQuery.Builder parentQuery=new BooleanQuery.Builder();
  parentQuery.add(childJoinQuery,Occur.SHOULD);
  parentQuery.add(new TermQuery(new Term("parentText","text")),Occur.SHOULD);
  ToParentBlockJoinCollector c=new ToParentBlockJoinCollector(new Sort(new SortField("parentID",SortField.Type.STRING)),10,true,true);
  searcher.search(parentQuery.build(),c);
  TopGroups<Integer> groups=c.getTopGroups(childJoinQuery,null,0,10,0,false);
  assertEquals(2,groups.totalGroupCount.intValue());
  assertEquals(1,groups.totalGroupedHitCount);
  GroupDocs<Integer> group=groups.groups[0];
  StoredDocument doc=r.document(group.groupValue.intValue());
  assertEquals("0",doc.get("parentID"));
  group=groups.groups[1];
  doc=r.document(group.groupValue.intValue());
  assertEquals("1",doc.get("parentID"));
  r.close();
  d.close();
}
