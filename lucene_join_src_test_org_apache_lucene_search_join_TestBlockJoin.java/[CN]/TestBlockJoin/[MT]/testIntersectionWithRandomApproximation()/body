{
  final Directory dir=newDirectory();
  final RandomIndexWriter w=new RandomIndexWriter(random(),dir);
  final int numBlocks=atLeast(100);
  for (int i=0; i < numBlocks; ++i) {
    List<Document> docs=new ArrayList<>();
    final int numChildren=random().nextInt(3);
    for (int j=0; j < numChildren; ++j) {
      Document child=new Document();
      child.add(new StringField("foo_child",random().nextBoolean() ? "bar" : "baz",Store.NO));
      docs.add(child);
    }
    Document parent=new Document();
    parent.add(new StringField("parent","true",Store.NO));
    parent.add(new StringField("foo_parent",random().nextBoolean() ? "bar" : "baz",Store.NO));
    docs.add(parent);
    w.addDocuments(docs);
  }
  final IndexReader reader=w.getReader();
  final IndexSearcher searcher=newSearcher(reader);
  searcher.setQueryCache(null);
  final BitSetProducer parentsFilter=new QueryBitSetProducer(new TermQuery(new Term("parent","true")));
  final Query toChild=new ToChildBlockJoinQuery(new TermQuery(new Term("foo_parent","bar")),parentsFilter);
  final Query childQuery=new TermQuery(new Term("foo_child","baz"));
  BooleanQuery bq1=new BooleanQuery.Builder().add(toChild,Occur.MUST).add(childQuery,Occur.MUST).build();
  BooleanQuery bq2=new BooleanQuery.Builder().add(toChild,Occur.MUST).add(new RandomApproximationQuery(childQuery,random()),Occur.MUST).build();
  assertEquals(searcher.count(bq1),searcher.count(bq2));
  searcher.getIndexReader().close();
  w.close();
  dir.close();
}
