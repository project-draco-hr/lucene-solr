{
  Directory dir=new MockRAMDirectory();
  IndexWriter writer=new IndexWriter(dir,new SimpleAnalyzer(TEST_VERSION_CURRENT),true,IndexWriter.MaxFieldLength.LIMITED);
  Document doc=new Document();
  doc.add(new Field("c","some content here",Field.Store.YES,Field.Index.ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
  doc.add(new Field("a","some content here",Field.Store.YES,Field.Index.ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
  doc.add(new Field("b","some content here",Field.Store.YES,Field.Index.ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
  doc.add(new Field("x","some content here",Field.Store.YES,Field.Index.ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
  writer.addDocument(doc);
  writer.close();
  IndexReader reader=IndexReader.open(dir,true);
  TermFreqVector[] v=reader.getTermFreqVectors(0);
  assertEquals(4,v.length);
  String[] expectedFields=new String[]{"a","b","c","x"};
  int[] expectedPositions=new int[]{1,2,0};
  for (int i=0; i < v.length; i++) {
    TermPositionVector posVec=(TermPositionVector)v[i];
    assertEquals(expectedFields[i],posVec.getField());
    String[] terms=posVec.getTerms();
    assertEquals(3,terms.length);
    assertEquals("content",terms[0]);
    assertEquals("here",terms[1]);
    assertEquals("some",terms[2]);
    for (int j=0; j < 3; j++) {
      int[] positions=posVec.getTermPositions(j);
      assertEquals(1,positions.length);
      assertEquals(expectedPositions[j],positions[0]);
    }
  }
}
