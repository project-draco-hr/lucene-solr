{
  try {
    final Stat stat=new Stat();
    final byte[] data=zkClient.getData(CLUSTER_STATE,watcher,stat,true);
    final ClusterState loadedData=ClusterState.load(stat.getVersion(),data,emptySet(),CLUSTER_STATE);
synchronized (getUpdateLock()) {
      if (this.legacyClusterStateVersion >= stat.getVersion()) {
        return;
      }
      Map<String,DocCollection> updatedCollections=new HashMap<>();
      for (      String coll : this.collectionWatches.keySet()) {
        ClusterState.CollectionRef ref=this.legacyCollectionStates.get(coll);
        DocCollection oldState=ref == null ? null : ref.get();
        ClusterState.CollectionRef newRef=loadedData.getCollectionStates().get(coll);
        DocCollection newState=newRef == null ? null : newRef.get();
        if (newState == null) {
          newState=watchedCollectionStates.get(coll);
        }
        if (!Objects.equals(oldState,newState)) {
          updatedCollections.put(coll,newState);
        }
      }
      this.legacyCollectionStates=loadedData.getCollectionStates();
      this.legacyClusterStateVersion=stat.getVersion();
      constructState(updatedCollections);
    }
  }
 catch (  KeeperException.NoNodeException e) {
synchronized (getUpdateLock()) {
      this.legacyCollectionStates=emptyMap();
      this.legacyClusterStateVersion=0;
      constructState(Collections.emptyMap());
    }
  }
}
