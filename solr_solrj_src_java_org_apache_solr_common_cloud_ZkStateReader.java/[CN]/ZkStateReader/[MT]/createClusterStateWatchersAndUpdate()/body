{
synchronized (getUpdateLock()) {
    cmdExecutor.ensureExists(CLUSTER_STATE,zkClient);
    cmdExecutor.ensureExists(ALIASES,zkClient);
    log.info("Updating cluster state from ZooKeeper... ");
    zkClient.exists(CLUSTER_STATE,new Watcher(){
      @Override public void process(      WatchedEvent event){
        if (EventType.None.equals(event.getType())) {
          return;
        }
        log.info("A cluster state change: {}, has occurred - updating... (live nodes size: {})",(event),ZkStateReader.this.clusterState == null ? 0 : ZkStateReader.this.clusterState.getLiveNodes().size());
        try {
synchronized (ZkStateReader.this.getUpdateLock()) {
            final Watcher thisWatch=this;
            Stat stat=new Stat();
            byte[] data=zkClient.getData(CLUSTER_STATE,thisWatch,stat,true);
            List<String> liveNodes=zkClient.getChildren(LIVE_NODES_ZKNODE,this,true);
            Set<String> liveNodesSet=new HashSet<String>();
            liveNodesSet.addAll(liveNodes);
            Set<String> ln=ZkStateReader.this.clusterState.getLiveNodes();
            ClusterState clusterState=ClusterState.load(stat.getVersion(),data,ln);
            ZkStateReader.this.clusterState=clusterState;
          }
        }
 catch (        KeeperException e) {
          if (e.code() == KeeperException.Code.SESSIONEXPIRED || e.code() == KeeperException.Code.CONNECTIONLOSS) {
            log.warn("ZooKeeper watch triggered, but Solr cannot talk to ZK");
            return;
          }
          log.error("",e);
          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
        }
catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
          log.warn("",e);
          return;
        }
      }
    }
,true);
  }
synchronized (ZkStateReader.this.getUpdateLock()) {
    List<String> liveNodes=zkClient.getChildren(LIVE_NODES_ZKNODE,new Watcher(){
      @Override public void process(      WatchedEvent event){
        if (EventType.None.equals(event.getType())) {
          return;
        }
        try {
synchronized (ZkStateReader.this.getUpdateLock()) {
            List<String> liveNodes=zkClient.getChildren(LIVE_NODES_ZKNODE,this,true);
            log.info("Updating live nodes... ({})",liveNodes.size());
            Set<String> liveNodesSet=new HashSet<String>();
            liveNodesSet.addAll(liveNodes);
            ClusterState clusterState=new ClusterState(ZkStateReader.this.clusterState.getZkClusterStateVersion(),liveNodesSet,ZkStateReader.this.clusterState.getCollectionStates());
            ZkStateReader.this.clusterState=clusterState;
          }
        }
 catch (        KeeperException e) {
          if (e.code() == KeeperException.Code.SESSIONEXPIRED || e.code() == KeeperException.Code.CONNECTIONLOSS) {
            log.warn("ZooKeeper watch triggered, but Solr cannot talk to ZK");
            return;
          }
          log.error("",e);
          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
        }
catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
          log.warn("",e);
          return;
        }
      }
    }
,true);
    Set<String> liveNodeSet=new HashSet<String>();
    liveNodeSet.addAll(liveNodes);
    ClusterState clusterState=ClusterState.load(zkClient,liveNodeSet);
    this.clusterState=clusterState;
    zkClient.exists(ALIASES,new Watcher(){
      @Override public void process(      WatchedEvent event){
        if (EventType.None.equals(event.getType())) {
          return;
        }
        try {
synchronized (ZkStateReader.this.getUpdateLock()) {
            log.info("Updating aliases... ");
            final Watcher thisWatch=this;
            Stat stat=new Stat();
            byte[] data=zkClient.getData(ALIASES,thisWatch,stat,true);
            Aliases aliases=ClusterState.load(data);
            ZkStateReader.this.aliases=aliases;
          }
        }
 catch (        KeeperException e) {
          if (e.code() == KeeperException.Code.SESSIONEXPIRED || e.code() == KeeperException.Code.CONNECTIONLOSS) {
            log.warn("ZooKeeper watch triggered, but Solr cannot talk to ZK");
            return;
          }
          log.error("",e);
          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
        }
catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
          log.warn("",e);
          return;
        }
      }
    }
,true);
  }
  updateAliases();
}
