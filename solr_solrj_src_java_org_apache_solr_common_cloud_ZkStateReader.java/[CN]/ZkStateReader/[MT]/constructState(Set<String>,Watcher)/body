{
  Stat stat=new Stat();
  byte[] data=zkClient.getData(CLUSTER_STATE,watcher,stat,true);
  ClusterState loadedData=ClusterState.load(stat.getVersion(),data,ln,CLUSTER_STATE);
  Map<String,ClusterState.CollectionRef> result=new LinkedHashMap<>(loadedData.getCollectionStates());
  for (  String s : getStateFormat2CollectionNames()) {
synchronized (this) {
      if (watchedCollections.contains(s)) {
        DocCollection live=getCollectionLive(this,s);
        if (live != null) {
          watchedCollectionStates.put(s,live);
          result.put(s,new ClusterState.CollectionRef(live));
        }
      }
 else {
        final String collName=s;
        result.put(s,new ClusterState.CollectionRef(null){
          @Override public DocCollection get(){
            return getCollectionLive(ZkStateReader.this,collName);
          }
          @Override public boolean isLazilyLoaded(){
            return true;
          }
        }
);
      }
    }
  }
  return new ClusterState(ln,result,stat.getVersion());
}
