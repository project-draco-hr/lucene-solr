{
  if (!KNOWN_CLUSTER_PROPS.contains(propertyName)) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Not a known cluster property " + propertyName);
  }
  for (; ; ) {
    Stat s=new Stat();
    try {
      if (getZkClient().exists(CLUSTER_PROPS,true)) {
        int v=0;
        Map properties=(Map)fromJSON(getZkClient().getData(CLUSTER_PROPS,null,s,true));
        if (propertyValue == null) {
          if (properties.get(propertyName) != null) {
            properties.remove(propertyName);
            getZkClient().setData(CLUSTER_PROPS,toJSON(properties),s.getVersion(),true);
          }
        }
 else {
          if (!propertyValue.equals(properties.get(propertyName))) {
            properties.put(propertyName,propertyValue);
            getZkClient().setData(CLUSTER_PROPS,toJSON(properties),s.getVersion(),true);
          }
        }
      }
 else {
        Map properties=new LinkedHashMap();
        properties.put(propertyName,propertyValue);
        getZkClient().create(CLUSTER_PROPS,toJSON(properties),CreateMode.PERSISTENT,true);
      }
    }
 catch (    KeeperException.BadVersionException bve) {
      log.warn("Race condition while trying to set a new cluster prop on current version " + s.getVersion());
      continue;
    }
catch (    KeeperException.NodeExistsException nee) {
      log.warn("Race condition while trying to set a new cluster prop on current version " + s.getVersion());
      continue;
    }
catch (    Exception ex) {
      log.error("Error updating path " + CLUSTER_PROPS,ex);
      throw new SolrException(ErrorCode.SERVER_ERROR,"Error updating cluster property " + propertyName,ex);
    }
    break;
  }
}
