{
  zkClient.exists(SOLR_SECURITY_CONF_PATH,new Watcher(){
    @Override public void process(    WatchedEvent event){
      if (EventType.None.equals(event.getType())) {
        return;
      }
      try {
synchronized (ZkStateReader.this.getUpdateLock()) {
          log.info("Updating {} ... ",path);
          final Watcher thisWatch=this;
          Stat stat=new Stat();
          byte[] data=getZkClient().getData(path,thisWatch,stat,true);
          try {
            callback.call(new Pair<>(data,stat));
          }
 catch (          Exception e) {
            if (e instanceof KeeperException)             throw (KeeperException)e;
            if (e instanceof InterruptedException)             throw (InterruptedException)e;
            log.error("Error running collections node listener",e);
          }
        }
      }
 catch (      KeeperException e) {
        if (e.code() == KeeperException.Code.SESSIONEXPIRED || e.code() == KeeperException.Code.CONNECTIONLOSS) {
          log.warn("ZooKeeper watch triggered, but Solr cannot talk to ZK");
          return;
        }
        log.error("",e);
        throw new ZooKeeperException(ErrorCode.SERVER_ERROR,"",e);
      }
catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
        log.warn("",e);
        return;
      }
    }
  }
,true);
}
