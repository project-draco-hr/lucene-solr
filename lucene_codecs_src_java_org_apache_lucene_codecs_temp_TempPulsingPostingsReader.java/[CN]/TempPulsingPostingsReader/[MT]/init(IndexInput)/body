{
  version=CodecUtil.checkHeader(termsIn,TempPulsingPostingsWriter.CODEC,TempPulsingPostingsWriter.VERSION_START,TempPulsingPostingsWriter.VERSION_CURRENT);
  maxPositions=termsIn.readVInt();
  wrappedPostingsReader.init(termsIn);
  if (wrappedPostingsReader instanceof TempPulsingPostingsReader || version < TempPulsingPostingsWriter.VERSION_META_ARRAY) {
    fields=null;
  }
 else {
    fields=new TreeMap<Integer,Integer>();
    String summaryFileName=IndexFileNames.segmentFileName(segmentState.segmentInfo.name,segmentState.segmentSuffix,TempPulsingPostingsWriter.SUMMARY_EXTENSION);
    IndexInput in=null;
    try {
      in=segmentState.directory.openInput(summaryFileName,segmentState.context);
      CodecUtil.checkHeader(in,TempPulsingPostingsWriter.CODEC,version,TempPulsingPostingsWriter.VERSION_CURRENT);
      int numField=in.readVInt();
      for (int i=0; i < numField; i++) {
        int fieldNum=in.readVInt();
        int longsSize=in.readVInt();
        fields.put(fieldNum,longsSize);
      }
    }
  finally {
      IOUtils.closeWhileHandlingException(in);
    }
  }
}
