{
  new UpdateRequest().add(id,"0","a_s","hello0","a_i","0","a_f","0").add(id,"2","a_s","hello2","a_i","2","a_f","0").add(id,"3","a_s","hello3","a_i","3","a_f","3").add(id,"4","a_s","hello4","a_i","4","a_f","4").add(id,"1","a_s","hello1","a_i","1","a_f","1").commit(cluster.getSolrClient(),COLLECTION);
  StreamFactory factory=new StreamFactory();
  StreamExpression expression;
  CloudSolrStream stream;
  List<Tuple> tuples;
  expression=StreamExpressionParser.parse("search(" + COLLECTION + ", zkHost="+ cluster.getZkServer().getZkAddress()+ ", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\")");
  stream=new CloudSolrStream(expression,factory);
  tuples=getTuples(stream);
  assert(tuples.size() == 5);
  assertOrder(tuples,0,2,1,3,4);
  assertLong(tuples.get(0),"a_i",0);
  expression=StreamExpressionParser.parse("search(" + COLLECTION + ", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\", aliases=\"a_i=alias.a_i, a_s=name\", zkHost="+ cluster.getZkServer().getZkAddress()+ ")");
  stream=new CloudSolrStream(expression,factory);
  tuples=getTuples(stream);
  assert(tuples.size() == 5);
  assertOrder(tuples,0,2,1,3,4);
  assertLong(tuples.get(0),"alias.a_i",0);
  assertString(tuples.get(0),"name","hello0");
  expression=StreamExpressionParser.parse("search(" + COLLECTION + ", q=\"id:(0 3 4)\", fl=\"id,a_s,a_i,a_f\", zkHost="+ cluster.getZkServer().getZkAddress()+ ", sort=\"a_f asc, a_i asc\")");
  stream=new CloudSolrStream(expression,factory);
  tuples=getTuples(stream);
  assert(tuples.size() == 3);
  assertOrder(tuples,0,3,4);
  assertLong(tuples.get(1),"a_i",3);
  expression=StreamExpressionParser.parse("search(collection1, fq=\"a_s:hello0\", fq=\"a_s:hello1\", q=\"id:(*)\", " + "zkHost=" + cluster.getZkServer().getZkAddress() + ", fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\")");
  stream=new CloudSolrStream(expression,factory);
  tuples=getTuples(stream);
  assertEquals("fq clauses should have prevented any docs from coming back",tuples.size(),0);
  expression=StreamExpressionParser.parse("search(collection1, fq=\"a_s:(hello0 OR hello1)\", q=\"id:(*)\", " + "zkHost=" + cluster.getZkServer().getZkAddress() + ", fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\")");
  stream=new CloudSolrStream(expression,factory);
  tuples=getTuples(stream);
  assertEquals("Combining an f1 clause should show us 2 docs",tuples.size(),2);
}
