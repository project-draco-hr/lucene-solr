{
  new UpdateRequest().add(id,"0","a_s","hello","a_i","0","a_f","1","subject","ha ha bla blah0").add(id,"2","a_s","hello","a_i","2","a_f","2","subject","ha ha bla blah2").add(id,"3","a_s","hello","a_i","3","a_f","3","subject","ha ha bla blah3").add(id,"4","a_s","hello","a_i","4","a_f","4","subject","ha ha bla blah4").add(id,"1","a_s","hello","a_i","1","a_f","5","subject","ha ha bla blah5").add(id,"5","a_s","hello","a_i","10","a_f","6","subject","ha ha bla blah6").add(id,"6","a_s","hello","a_i","11","a_f","7","subject","ha ha bla blah7").add(id,"7","a_s","hello","a_i","12","a_f","8","subject","ha ha bla blah8").add(id,"8","a_s","hello","a_i","13","a_f","9","subject","ha ha bla blah9").add(id,"9","a_s","hello","a_i","14","a_f","10","subject","ha ha bla blah10").commit(cluster.getSolrClient(),COLLECTION);
  StreamFactory factory=new StreamFactory().withCollectionZkHost("collection1",cluster.getZkServer().getZkAddress()).withFunctionName("topic",TopicStream.class).withFunctionName("search",CloudSolrStream.class).withFunctionName("parallel",ParallelStream.class).withFunctionName("daemon",DaemonStream.class);
  StreamExpression expression;
  TupleStream stream;
  List<Tuple> tuples;
  SolrClientCache cache=new SolrClientCache();
  try {
    expression=StreamExpressionParser.parse("parallel(collection1, " + "workers=\"2\", " + "sort=\"_version_ asc\","+ "topic(collection1, "+ "collection1, "+ "q=\"a_s:hello\", "+ "fl=\"id\", "+ "id=\"1000000\", "+ "partitionKeys=\"id\"))");
    stream=factory.constructStream(expression);
    StreamContext context=new StreamContext();
    context.setSolrClientCache(cache);
    stream.setStreamContext(context);
    tuples=getTuples(stream);
    assertEquals(tuples.size(),0);
    cluster.getSolrClient().commit("collection1");
    expression=StreamExpressionParser.parse("search(collection1, q=\"id:1000000*\", fl=\"id, checkpoint_ss, _version_\", sort=\"id asc\")");
    stream=factory.constructStream(expression);
    context=new StreamContext();
    context.setSolrClientCache(cache);
    stream.setStreamContext(context);
    tuples=getTuples(stream);
    assertEquals(tuples.size(),2);
    List<String> checkpoints=tuples.get(0).getStrings("checkpoint_ss");
    assertEquals(checkpoints.size(),2);
    String id1=tuples.get(0).getString("id");
    String id2=tuples.get(1).getString("id");
    assertTrue(id1.equals("1000000_0"));
    assertTrue(id2.equals("1000000_1"));
    new UpdateRequest().add(id,"10","a_s","hello","a_i","13","a_f","9").add(id,"11","a_s","hello","a_i","14","a_f","10").commit(cluster.getSolrClient(),COLLECTION);
    expression=StreamExpressionParser.parse("parallel(collection1, " + "workers=\"2\", " + "sort=\"_version_ asc\","+ "topic(collection1, "+ "collection1, "+ "q=\"a_s:hello\", "+ "fl=\"id\", "+ "id=\"1000000\", "+ "partitionKeys=\"id\"))");
    stream=factory.constructStream(expression);
    context=new StreamContext();
    context.setSolrClientCache(cache);
    stream.setStreamContext(context);
    assertTopicRun(stream,"10","11");
    expression=StreamExpressionParser.parse("parallel(collection1, " + "workers=\"2\", " + "sort=\"_version_ asc\","+ "topic(collection1, "+ "collection1, "+ "q=\"a_s:hello\", "+ "fl=\"id\", "+ "id=\"2000000\", "+ "initialCheckpoint=\"0\", "+ "partitionKeys=\"id\"))");
    stream=factory.constructStream(expression);
    context=new StreamContext();
    context.setSolrClientCache(cache);
    stream.setStreamContext(context);
    assertTopicRun(stream,"0","1","2","3","4","5","6","7","8","9","10","11");
    new UpdateRequest().add(id,"12","a_s","hello","a_i","13","a_f","9").add(id,"13","a_s","hello","a_i","14","a_f","10").commit(cluster.getSolrClient(),COLLECTION);
    stream=factory.constructStream(expression);
    context=new StreamContext();
    context.setSolrClientCache(cache);
    stream.setStreamContext(context);
    assertTopicRun(stream,"12","13");
    expression=StreamExpressionParser.parse("parallel(collection1, " + "workers=\"2\", " + "sort=\"_version_ asc\","+ "topic(collection1, "+ "collection1, "+ "q=\"subject:bla\", "+ "fl=\"subject\", "+ "id=\"3000000\", "+ "initialCheckpoint=\"0\", "+ "partitionKeys=\"id\"))");
    stream=factory.constructStream(expression);
    context=new StreamContext();
    context.setSolrClientCache(cache);
    stream.setStreamContext(context);
    assertTopicSubject(stream,"ha ha bla blah0","ha ha bla blah1","ha ha bla blah2","ha ha bla blah3","ha ha bla blah4","ha ha bla blah5","ha ha bla blah6","ha ha bla blah7","ha ha bla blah8","ha ha bla blah9","ha ha bla blah10");
  }
  finally {
    cache.close();
  }
}
