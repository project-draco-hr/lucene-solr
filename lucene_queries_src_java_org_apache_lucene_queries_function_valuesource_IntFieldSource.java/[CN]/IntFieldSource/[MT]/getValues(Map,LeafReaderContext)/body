{
  final NumericDocValues arr=DocValues.getNumeric(readerContext.reader(),field);
  final Bits valid=DocValues.getDocsWithField(readerContext.reader(),field);
  return new IntDocValues(this){
    final MutableValueInt val=new MutableValueInt();
    @Override public int intVal(    int doc){
      return (int)arr.get(doc);
    }
    @Override public String strVal(    int doc){
      return Integer.toString(intVal(doc));
    }
    @Override public boolean exists(    int doc){
      return arr.get(doc) != 0 || valid.get(doc);
    }
    @Override public ValueFiller getValueFiller(){
      return new ValueFiller(){
        private final MutableValueInt mval=new MutableValueInt();
        @Override public MutableValue getValue(){
          return mval;
        }
        @Override public void fillValue(        int doc){
          mval.value=intVal(doc);
          mval.exists=mval.value != 0 || valid.get(doc);
        }
      }
;
    }
  }
;
}
