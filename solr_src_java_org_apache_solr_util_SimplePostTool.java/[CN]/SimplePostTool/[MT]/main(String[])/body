{
  info("version " + VERSION_OF_THIS_TOOL);
  if (0 < args.length && "-help".equals(args[0])) {
    System.out.println("This is a simple command line tool for POSTing raw data to a Solr\n" + "port.  Data can be read from files specified as commandline args,\n" + "as raw commandline arg strings, or via STDIN.\n"+ "Examples:\n"+ "  java -Ddata=files -jar post.jar *.xml\n"+ "  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\n"+ "  java -Ddata=stdin -jar post.jar < hd.xml\n"+ "Other options controlled by System Properties include the Solr\n"+ "URL to POST to, the Content-Type of the data, whether a commit\n"+ "should be executed, and whether the response should be written\n"+ "to STDOUT. These are the defaults for all System Properties...\n"+ "  -Ddata=" + DEFAULT_DATA_MODE + "\n"+ "  -Dtype="+ DEFAULT_DATA_TYPE+ "\n"+ "  -Durl="+ DEFAULT_POST_URL+ "\n"+ "  -Dcommit="+ DEFAULT_COMMIT+ "\n"+ "  -Dout="+ DEFAULT_OUT+ "\n");
    return;
  }
  OutputStream out=null;
  URL u=null;
  try {
    u=new URL(System.getProperty("url",DEFAULT_POST_URL));
  }
 catch (  MalformedURLException e) {
    fatal("System Property 'url' is not a valid URL: " + u);
  }
  final SimplePostTool t=new SimplePostTool(u);
  final String mode=System.getProperty("data",DEFAULT_DATA_MODE);
  if (!DATA_MODES.contains(mode)) {
    fatal("System Property 'data' is not valid for this tool: " + mode);
  }
  final String doOut=System.getProperty("out",DEFAULT_OUT);
  if ("yes".equals(System.getProperty("out",DEFAULT_OUT))) {
    out=System.out;
  }
  try {
    if (DATA_MODE_FILES.equals(mode)) {
      if (0 < args.length) {
        info("POSTing files to " + u + "..");
        final int posted=t.postFiles(args,0,out);
      }
    }
 else     if (DATA_MODE_ARGS.equals(mode)) {
      if (0 < args.length) {
        info("POSTing args to " + u + "..");
        for (        String a : args) {
          t.postData(t.stringToStream(a),null,out);
        }
      }
    }
 else     if (DATA_MODE_STDIN.equals(mode)) {
      info("POSTing stdin to " + u + "..");
      t.postData(System.in,null,out);
    }
    if ("yes".equals(System.getProperty("commit",DEFAULT_COMMIT))) {
      info("COMMITting Solr index changes..");
      t.commit(out);
    }
  }
 catch (  RuntimeException e) {
    fatal("RuntimeException " + e);
  }
}
