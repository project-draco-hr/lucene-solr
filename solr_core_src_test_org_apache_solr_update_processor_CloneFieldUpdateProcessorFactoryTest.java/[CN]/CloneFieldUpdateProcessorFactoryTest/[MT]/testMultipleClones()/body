{
  SolrInputDocument doc=processAdd("multiple-clones",doc(f("id","1"),f("category","test"),f("authors","author1","author2"),f("editors","ed1","ed2"),f("bfriday_price",4.00),f("sale_price",5.00),f("list_price",6.00),f("features","hill","valley","dune")));
  assertEquals("category should have a value","test",doc.getFieldValue("category"));
  Collection<Object> auths=doc.getFieldValues("authors");
  assertTrue(auths.size() == 2);
  assertTrue(auths.contains("author1"));
  assertTrue(auths.contains("author2"));
  Collection<Object> eds=doc.getFieldValues("editors");
  assertTrue(eds.size() == 2);
  assertTrue(eds.contains("ed1"));
  assertTrue(eds.contains("ed2"));
  assertEquals("bfriday_price should have a value",4.0,doc.getFieldValue("bfriday_price"));
  assertEquals("sale_price should have a value",5.0,doc.getFieldValue("sale_price"));
  assertEquals("list_price should have a value",6.0,doc.getFieldValue("list_price"));
  Collection<Object> features=doc.getFieldValues("features");
  assertTrue(features.size() == 3);
  assertTrue(features.contains("hill"));
  assertTrue(features.contains("valley"));
  assertTrue(features.contains("dune"));
  assertEquals("category_s should have a value","test",doc.getFieldValue("category_s"));
  Collection<Object> contribs=doc.getFieldValues("contributors");
  assertTrue(contribs.size() == 4);
  assertTrue(contribs.contains("author1"));
  assertTrue(contribs.contains("author2"));
  assertTrue(contribs.contains("ed1"));
  assertTrue(contribs.contains("ed2"));
  Collection<Object> prices=doc.getFieldValues("all_prices");
  assertTrue(prices.size() == 2);
  assertTrue(prices.contains(5.0));
  assertTrue(prices.contains(4.0));
  assertFalse(prices.contains(6.0));
  Collection<Object> keyf=doc.getFieldValues("key_feature");
  assertTrue(keyf.size() == 3);
  assertTrue(keyf.contains("hill"));
  assertTrue(keyf.contains("valley"));
  assertTrue(keyf.contains("dune"));
  Collection<Object> bestf=doc.getFieldValues("best_feature");
  assertTrue(bestf.size() == 3);
  assertTrue(bestf.contains("hill"));
  assertTrue(bestf.contains("valley"));
  assertTrue(bestf.contains("dune"));
}
