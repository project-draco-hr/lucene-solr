{
  FieldType ft=new FieldType();
  assertEquals(ft,ft);
  assertFalse(ft.equals(null));
  FieldType ft2=new FieldType();
  assertEquals(ft,ft2);
  assertEquals(ft.hashCode(),ft2.hashCode());
  FieldType ft3=new FieldType();
  ft3.setIndexOptions(IndexOptions.DOCS_AND_FREQS);
  assertFalse(ft3.equals(ft));
  FieldType ft4=new FieldType();
  ft4.setDocValuesType(DocValuesType.BINARY);
  assertFalse(ft4.equals(ft));
  FieldType ft5=new FieldType();
  ft5.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);
  assertFalse(ft5.equals(ft));
  FieldType ft6=new FieldType();
  ft6.setStored(true);
  assertFalse(ft6.equals(ft));
  FieldType ft7=new FieldType();
  ft7.setOmitNorms(true);
  assertFalse(ft7.equals(ft));
  FieldType ft8=new FieldType();
  ft8.setNumericType(LegacyNumericType.DOUBLE);
  assertFalse(ft8.equals(ft));
  FieldType ft9=new FieldType();
  ft9.setNumericPrecisionStep(3);
  assertFalse(ft9.equals(ft));
  FieldType ft10=new FieldType();
  ft10.setStoreTermVectors(true);
  assertFalse(ft10.equals(ft));
}
