{
  int d[][];
  int cost;
  final char[] ta=other.toCharArray();
  final int m=ta.length;
  if (n == 0) {
    return m;
  }
  if (m == 0) {
    return n;
  }
  if (m >= cache.length) {
    d=form(n,m);
  }
 else   if (cache[m] != null) {
    d=cache[m];
  }
 else {
    d=cache[m]=form(n,m);
  }
  for (int i=1; i <= n; i++) {
    final char s_i=sa[i - 1];
    for (int j=1; j <= m; j++) {
      final char t_j=ta[j - 1];
      if (s_i == t_j) {
        cost=0;
      }
 else {
        cost=1;
      }
      d[i][j]=min3(d[i - 1][j] + 1,d[i][j - 1] + 1,d[i - 1][j - 1] + cost);
    }
  }
  return d[n][m];
}
