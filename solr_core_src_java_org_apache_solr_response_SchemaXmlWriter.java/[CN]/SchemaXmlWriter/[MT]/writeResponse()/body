{
  writer.write(XML_DECLARATION);
  if (emitManagedSchemaDoNotEditWarning) {
    if (doIndent) {
      writer.write('\n');
    }
    writer.write(MANAGED_SCHEMA_DO_NOT_EDIT_WARNING);
  }
  @SuppressWarnings("unchecked") Map<String,Object> schemaProperties=(Map<String,Object>)rsp.getValues().get(IndexSchema.SCHEMA);
  openStartTag(IndexSchema.SCHEMA);
  writeAttr(IndexSchema.NAME,schemaProperties.get(IndexSchema.NAME).toString());
  writeAttr(IndexSchema.VERSION,schemaProperties.get(IndexSchema.VERSION).toString());
  closeStartTag(false);
  incLevel();
  for (  Map.Entry<String,Object> entry : schemaProperties.entrySet()) {
    String schemaPropName=entry.getKey();
    Object val=entry.getValue();
    if (schemaPropName.equals(IndexSchema.NAME) || schemaPropName.equals(IndexSchema.VERSION)) {
      continue;
    }
    if (schemaPropName.equals(IndexSchema.UNIQUE_KEY)) {
      openStartTag(IndexSchema.UNIQUE_KEY);
      closeStartTag(false);
      writer.write(val.toString());
      endTag(IndexSchema.UNIQUE_KEY,false);
    }
 else     if (schemaPropName.equals(IndexSchema.DEFAULT_SEARCH_FIELD)) {
      openStartTag(IndexSchema.DEFAULT_SEARCH_FIELD);
      closeStartTag(false);
      writer.write(val.toString());
      endTag(IndexSchema.DEFAULT_SEARCH_FIELD,false);
    }
 else     if (schemaPropName.equals(IndexSchema.SOLR_QUERY_PARSER)) {
      openStartTag(IndexSchema.SOLR_QUERY_PARSER);
      writeAttr(IndexSchema.DEFAULT_OPERATOR,((Map<String,Object>)val).get(IndexSchema.DEFAULT_OPERATOR).toString());
      closeStartTag(true);
    }
 else     if (schemaPropName.equals(IndexSchema.SIMILARITY)) {
      writeSimilarity((SimpleOrderedMap<Object>)val);
    }
 else     if (schemaPropName.equals(IndexSchema.FIELD_TYPES)) {
      writeFieldTypes((List<SimpleOrderedMap<Object>>)val);
    }
 else     if (schemaPropName.equals(IndexSchema.FIELDS)) {
      @SuppressWarnings("unchecked") List<SimpleOrderedMap<Object>> fieldPropertiesList=(List<SimpleOrderedMap<Object>>)val;
      for (      SimpleOrderedMap<Object> fieldProperties : fieldPropertiesList) {
        openStartTag(IndexSchema.FIELD);
        for (int fieldPropNum=0; fieldPropNum < fieldProperties.size(); ++fieldPropNum) {
          writeAttr(fieldProperties.getName(fieldPropNum),fieldProperties.getVal(fieldPropNum).toString());
        }
        closeStartTag(true);
      }
    }
 else     if (schemaPropName.equals(IndexSchema.DYNAMIC_FIELDS)) {
      @SuppressWarnings("unchecked") List<SimpleOrderedMap<Object>> dynamicFieldPropertiesList=(List<SimpleOrderedMap<Object>>)val;
      for (      SimpleOrderedMap<Object> dynamicFieldProperties : dynamicFieldPropertiesList) {
        openStartTag(IndexSchema.DYNAMIC_FIELD);
        for (int dynamicFieldPropNum=0; dynamicFieldPropNum < dynamicFieldProperties.size(); ++dynamicFieldPropNum) {
          writeAttr(dynamicFieldProperties.getName(dynamicFieldPropNum),dynamicFieldProperties.getVal(dynamicFieldPropNum).toString());
        }
        closeStartTag(true);
      }
    }
 else     if (schemaPropName.equals(IndexSchema.COPY_FIELDS)) {
      @SuppressWarnings("unchecked") List<SimpleOrderedMap<Object>> copyFieldPropertiesList=(List<SimpleOrderedMap<Object>>)val;
      for (      SimpleOrderedMap<Object> copyFieldProperties : copyFieldPropertiesList) {
        openStartTag(IndexSchema.COPY_FIELD);
        for (int copyFieldPropNum=0; copyFieldPropNum < copyFieldProperties.size(); ++copyFieldPropNum) {
          writeAttr(copyFieldProperties.getName(copyFieldPropNum),copyFieldProperties.getVal(copyFieldPropNum).toString());
        }
        closeStartTag(true);
      }
    }
 else {
      log.warn("Unknown schema component '" + schemaPropName + "'");
    }
  }
  decLevel();
  endTag(IndexSchema.SCHEMA);
}
