{
  int HEADER=12;
  int PTR=4;
  int ARR=HEADER + 4;
  int STR=HEADER + 3 * 4 + PTR + ARR;
  int INTARRLIST=HEADER + 4 + PTR+ ARR;
  int HASHMAP=HEADER + 4 * PTR + 4 * 4 + ARR;
  int size=0;
  size+=HEADER + 2 * PTR + 4;
  if (sortedFields != null)   size+=ARR + PTR * sortedFields.length;
  size+=HASHMAP + fields.size() * (PTR + HEADER + 3 * PTR + 4);
  Iterator iter=fields.entrySet().iterator();
  while (iter.hasNext()) {
    Map.Entry entry=(Map.Entry)iter.next();
    Info info=(Info)entry.getValue();
    size+=HEADER + 4 + PTR+ PTR+ PTR;
    if (info.sortedTerms != null)     size+=ARR + PTR * info.sortedTerms.length;
    int len=info.terms.size();
    size+=HASHMAP + len * (PTR + HEADER + 3 * PTR + 4);
    Iterator iter2=info.terms.entrySet().iterator();
    while (--len >= 0) {
      Map.Entry e=(Map.Entry)iter2.next();
      size+=STR - ARR;
      ArrayIntList positions=(ArrayIntList)e.getValue();
      size+=INTARRLIST + 4 * positions.size();
    }
  }
  return size;
}
