{
  Directory dir=FSDirectory.open(createTempDir("2BBKDPoints2D"));
  final int numDocs=(Integer.MAX_VALUE / 26) + 100;
  BKDWriter w=new BKDWriter(numDocs,dir,"_0",2,Long.BYTES,BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE,BKDWriter.DEFAULT_MAX_MB_SORT_IN_HEAP,26L * numDocs,false);
  int counter=0;
  byte[] packedBytes=new byte[2 * Long.BYTES];
  for (int docID=0; docID < numDocs; docID++) {
    for (int j=0; j < 26; j++) {
      NumericUtils.intToSortableBytes(random().nextInt(),packedBytes,0);
      NumericUtils.intToSortableBytes(counter,packedBytes,Integer.BYTES);
      NumericUtils.intToSortableBytes(random().nextInt(),packedBytes,Long.BYTES);
      NumericUtils.intToSortableBytes(random().nextInt(),packedBytes,Long.BYTES + Integer.BYTES);
      w.add(packedBytes,docID);
      counter++;
    }
    if (VERBOSE && docID % 100000 == 0) {
      System.out.println(docID + " of " + numDocs+ "...");
    }
  }
  IndexOutput out=dir.createOutput("2d.bkd",IOContext.DEFAULT);
  long indexFP=w.finish(out);
  out.close();
  IndexInput in=dir.openInput("2d.bkd",IOContext.DEFAULT);
  in.seek(indexFP);
  BKDReader r=new BKDReader(in);
  r.verify(numDocs);
  in.close();
  dir.close();
}
