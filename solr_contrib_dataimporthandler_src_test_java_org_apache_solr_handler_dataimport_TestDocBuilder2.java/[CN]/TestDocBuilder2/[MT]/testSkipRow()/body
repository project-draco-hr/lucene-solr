{
  List rows=new ArrayList();
  rows.add(createMap("id","1","desc","one"));
  rows.add(createMap("id","2","desc","two","$skipRow","true"));
  MockDataSource.setIterator("select * from x",rows.iterator());
  super.runFullImport(dataConfigWithDynamicTransformer);
  assertQ(req("id:1"),"//*[@numFound='1']");
  assertQ(req("id:2"),"//*[@numFound='0']");
  MockDataSource.clearCache();
  rows=new ArrayList();
  rows.add(createMap("id","3","desc","one"));
  rows.add(createMap("id","4","desc","two"));
  MockDataSource.setIterator("select * from x",rows.iterator());
  rows=new ArrayList();
  rows.add(createMap("name_s","abcd"));
  MockDataSource.setIterator("3",rows.iterator());
  rows=new ArrayList();
  rows.add(createMap("name_s","xyz","$skipRow","true"));
  MockDataSource.setIterator("4",rows.iterator());
  super.runFullImport(dataConfigWithTwoEntities);
  assertQ(req("id:3"),"//*[@numFound='1']");
  assertQ(req("id:4"),"//*[@numFound='1']");
  assertQ(req("name_s:abcd"),"//*[@numFound='1']");
  assertQ(req("name_s:xyz"),"//*[@numFound='0']");
}
