{
  Set<String> addFails=null;
  Set<String> deleteFails=null;
  SolrDocumentList a=getDocList("2","3");
  SolrDocumentList b=getDocList("1");
  boolean legal=CloudInspectUtil.checkIfDiffIsLegal(a,b,"control","cloud",addFails,deleteFails);
  assertFalse(legal);
  addFails=new HashSet<String>();
  deleteFails=new HashSet<String>();
  a=getDocList("2","3","4");
  b=getDocList("2","3");
  addFails.add("4");
  legal=CloudInspectUtil.checkIfDiffIsLegal(a,b,"control","cloud",addFails,deleteFails);
  assertTrue(legal);
  addFails=new HashSet<String>();
  deleteFails=new HashSet<String>();
  a=getDocList("2","3","4");
  b=getDocList("2","3","5");
  addFails.add("4");
  deleteFails.add("5");
  legal=CloudInspectUtil.checkIfDiffIsLegal(a,b,"control","cloud",addFails,deleteFails);
  assertTrue(legal);
  addFails=new HashSet<String>();
  deleteFails=new HashSet<String>();
  a=getDocList("2","3","4");
  b=getDocList("2","3","5");
  addFails.add("4");
  deleteFails.add("6");
  legal=CloudInspectUtil.checkIfDiffIsLegal(a,b,"control","cloud",addFails,deleteFails);
  assertFalse(legal);
  addFails=new HashSet<String>();
  deleteFails=new HashSet<String>();
  a=getDocList("2","3","4");
  b=getDocList("2","3","4");
  try {
    legal=CloudInspectUtil.checkIfDiffIsLegal(a,b,"control","cloud",addFails,deleteFails);
    fail("Expected exception because lists have no diff");
  }
 catch (  IllegalArgumentException e) {
  }
}
