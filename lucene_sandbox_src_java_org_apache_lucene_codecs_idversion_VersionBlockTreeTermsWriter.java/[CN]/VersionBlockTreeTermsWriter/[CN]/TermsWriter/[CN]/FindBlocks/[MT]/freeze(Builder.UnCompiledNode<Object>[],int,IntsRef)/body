{
  for (int idx=lastInput.length; idx >= prefixLenPlus1; idx--) {
    final Builder.UnCompiledNode<Object> node=frontier[idx];
    long totCount=0;
    if (node.isFinal) {
      totCount++;
    }
    for (int arcIdx=0; arcIdx < node.numArcs; arcIdx++) {
      @SuppressWarnings("unchecked") final Builder.UnCompiledNode<Object> target=(Builder.UnCompiledNode<Object>)node.arcs[arcIdx].target;
      totCount+=target.inputCount;
      target.clear();
      node.arcs[arcIdx].target=null;
    }
    node.numArcs=0;
    if (totCount >= minItemsInBlock || idx == 0) {
      writeBlocks(lastInput,idx,(int)totCount);
      node.inputCount=1;
    }
 else {
      node.inputCount=totCount;
    }
    frontier[idx]=new Builder.UnCompiledNode<>(blockBuilder,idx);
  }
}
