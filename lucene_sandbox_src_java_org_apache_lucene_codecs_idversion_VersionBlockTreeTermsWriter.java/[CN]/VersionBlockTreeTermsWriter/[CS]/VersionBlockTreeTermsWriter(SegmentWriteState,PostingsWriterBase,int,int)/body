{
  BlockTreeTermsWriter.validateSettings(minItemsInBlock,maxItemsInBlock);
  maxDoc=state.segmentInfo.getDocCount();
  final String termsFileName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,TERMS_EXTENSION);
  out=state.directory.createOutput(termsFileName,state.context);
  boolean success=false;
  IndexOutput indexOut=null;
  try {
    fieldInfos=state.fieldInfos;
    this.minItemsInBlock=minItemsInBlock;
    this.maxItemsInBlock=maxItemsInBlock;
    CodecUtil.writeIndexHeader(out,TERMS_CODEC_NAME,VERSION_CURRENT,state.segmentInfo.getId(),state.segmentSuffix);
    final String termsIndexFileName=IndexFileNames.segmentFileName(state.segmentInfo.name,state.segmentSuffix,TERMS_INDEX_EXTENSION);
    indexOut=state.directory.createOutput(termsIndexFileName,state.context);
    CodecUtil.writeIndexHeader(indexOut,TERMS_INDEX_CODEC_NAME,VERSION_CURRENT,state.segmentInfo.getId(),state.segmentSuffix);
    this.postingsWriter=postingsWriter;
    postingsWriter.init(out,state);
    success=true;
  }
  finally {
    if (!success) {
      IOUtils.closeWhileHandlingException(out,indexOut);
    }
  }
  this.indexOut=indexOut;
}
