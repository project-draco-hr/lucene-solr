{
  Fieldable binaryFldStored=new Field("binaryStored",binaryValStored.getBytes());
  Fieldable stringFldStored=new Field("stringStored",binaryValStored,Field.Store.YES,Field.Index.NO,Field.TermVector.NO);
  try {
    new Field("fail",binaryValStored.getBytes(),Field.Store.NO);
    fail();
  }
 catch (  IllegalArgumentException iae) {
  }
  Document doc=new Document();
  doc.add(binaryFldStored);
  doc.add(stringFldStored);
  assertEquals(2,doc.fields.size());
  MockRAMDirectory dir=new MockRAMDirectory();
  IndexWriter writer=new IndexWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()));
  writer.addDocument(doc);
  writer.close();
  IndexReader reader=IndexReader.open(dir,false);
  Document docFromReader=reader.document(0);
  assertTrue(docFromReader != null);
  String binaryFldStoredTest=new String(docFromReader.getBinaryValue("binaryStored"));
  assertTrue(binaryFldStoredTest.equals(binaryValStored));
  String stringFldStoredTest=docFromReader.get("stringStored");
  assertTrue(stringFldStoredTest.equals(binaryValStored));
  reader.deleteDocument(0);
  assertEquals(0,reader.numDocs());
  reader.close();
  dir.close();
}
