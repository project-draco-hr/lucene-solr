{
  NamedList hosts=new NamedList();
  for (  CdcrReplicatorState state : replicatorManager.getReplicatorStates()) {
    NamedList queueStats=new NamedList();
    CdcrUpdateLog.CdcrLogReader logReader=state.getLogReader();
    if (logReader == null) {
      String collectionName=req.getCore().getCoreDescriptor().getCloudDescriptor().getCollectionName();
      String shard=req.getCore().getCoreDescriptor().getCloudDescriptor().getShardId();
      log.warn("The log reader for target collection {} is not initialised @ {}:{}",state.getTargetCollection(),collectionName,shard);
      queueStats.add(CdcrParams.QUEUE_SIZE,-1l);
    }
 else {
      queueStats.add(CdcrParams.QUEUE_SIZE,logReader.getNumberOfRemainingRecords());
    }
    queueStats.add(CdcrParams.LAST_TIMESTAMP,state.getTimestampOfLastProcessedOperation());
    if (hosts.get(state.getZkHost()) == null) {
      hosts.add(state.getZkHost(),new NamedList());
    }
    ((NamedList)hosts.get(state.getZkHost())).add(state.getTargetCollection(),queueStats);
  }
  rsp.add(CdcrParams.QUEUES,hosts);
  UpdateLog updateLog=core.getUpdateHandler().getUpdateLog();
  rsp.add(CdcrParams.TLOG_TOTAL_SIZE,updateLog.getTotalLogsSize());
  rsp.add(CdcrParams.TLOG_TOTAL_COUNT,updateLog.getTotalLogsNumber());
  rsp.add(CdcrParams.UPDATE_LOG_SYNCHRONIZER,updateLogSynchronizer.isStarted() ? CdcrParams.ProcessState.STARTED.toLower() : CdcrParams.ProcessState.STOPPED.toLower());
}
