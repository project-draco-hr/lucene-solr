{
  SolrParams params=req.getParams();
  CdcrParams.CdcrAction action=null;
  String a=params.get(CommonParams.ACTION);
  if (a != null) {
    action=CdcrParams.CdcrAction.get(a);
  }
  if (action == null) {
    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Unknown action: " + a);
  }
switch (action) {
case START:
{
      this.handleStartAction(req,rsp);
      break;
    }
case STOP:
{
    this.handleStopAction(req,rsp);
    break;
  }
case STATUS:
{
  this.handleStatusAction(req,rsp);
  break;
}
case COLLECTIONCHECKPOINT:
{
this.handleCollectionCheckpointAction(req,rsp);
break;
}
case SHARDCHECKPOINT:
{
this.handleShardCheckpointAction(req,rsp);
break;
}
case ENABLEBUFFER:
{
this.handleEnableBufferAction(req,rsp);
break;
}
case DISABLEBUFFER:
{
this.handleDisableBufferAction(req,rsp);
break;
}
case LASTPROCESSEDVERSION:
{
this.handleLastProcessedVersionAction(req,rsp);
break;
}
case QUEUES:
{
this.handleQueuesAction(req,rsp);
break;
}
case OPS:
{
this.handleOpsAction(req,rsp);
break;
}
case ERRORS:
{
this.handleErrorsAction(req,rsp);
break;
}
case BOOTSTRAP:
{
this.handleBootstrapAction(req,rsp);
break;
}
case BOOTSTRAP_STATUS:
{
this.handleBootstrapStatus(req,rsp);
break;
}
case CANCEL_BOOTSTRAP:
{
this.handleCancelBootstrap(req,rsp);
break;
}
default :
{
throw new RuntimeException("Unknown action: " + action);
}
}
rsp.setHttpCaching(false);
}
