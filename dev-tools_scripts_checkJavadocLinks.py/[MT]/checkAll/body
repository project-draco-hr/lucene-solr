def checkAll(dirName):
    '\n  Checks *.html (recursively) under this directory.\n  '
    global failures
    print 
    print 'Crawl/parse...'
    allFiles = {}
    if os.path.isfile(dirName):
        (root, fileName) = os.path.split(dirName)
        iter = ((root, [], [fileName]),)
    else:
        iter = os.walk(dirName)
    for (root, dirs, files) in iter:
        for f in files:
            (main, ext) = os.path.splitext(f)
            ext = ext.lower()
            if ((ext in ('.htm', '.html')) and (not f.startswith('.#')) and (main not in ('deprecated-list',))):
                fullPath = os.path.join(root, f)
                allFiles[fullPath] = parse(fullPath, open(('%s/%s' % (root, f))).read())
    print 
    print 'Verify...'
    for (fullPath, (links, anchors)) in allFiles.items():
        printed = False
        for link in links:
            origLink = link
            idx = link.find('#')
            if (idx != (-1)):
                anchor = link[(idx + 1):]
                link = link[:idx]
            else:
                anchor = None
            idx = link.find('?')
            if (idx != (-1)):
                link = link[:idx]
            if (link.startswith('http://') or link.startswith('https://')):
                pass
            elif (link not in allFiles):
                if (not os.path.exists(link)):
                    if (not printed):
                        printed = True
                        print 
                        print fullPath
                    print ('  BROKEN LINK: %s' % link)
            elif ((anchor is not None) and (anchor not in allFiles[link][1])):
                if (not printed):
                    printed = True
                    print 
                    print fullPath
                print ('  BROKEN ANCHOR: %s' % origLink)
        failures = (failures or printed)
    if failures:
        sys.exit(1)
    else:
        sys.exit(0)
