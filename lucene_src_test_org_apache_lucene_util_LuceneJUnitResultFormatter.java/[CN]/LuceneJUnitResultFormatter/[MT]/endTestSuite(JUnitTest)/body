{
  append("Tests run: ");
  append(suite.runCount());
  append(", Failures: ");
  append(suite.failureCount());
  append(", Errors: ");
  append(suite.errorCount());
  append(", Time elapsed: ");
  append(numberFormat.format(suite.getRunTime() / ONE_SECOND));
  append(" sec");
  append(StringUtils.LINE_SEP);
  append(StringUtils.LINE_SEP);
  if (systemOutput != null && systemOutput.length() > 0) {
    append("------------- Standard Output ---------------").append(StringUtils.LINE_SEP).append(systemOutput).append("------------- ---------------- ---------------").append(StringUtils.LINE_SEP);
  }
  if (systemError != null && systemError.length() > 0) {
    append("------------- Standard Error -----------------").append(StringUtils.LINE_SEP).append(systemError).append("------------- ---------------- ---------------").append(StringUtils.LINE_SEP);
  }
  if (out != null) {
    try {
      lock.obtain(5000);
      try {
        sb.writeTo(out);
        out.flush();
      }
  finally {
        try {
          lock.release();
        }
 catch (        LockReleaseFailedException e) {
        }
      }
    }
 catch (    IOException e) {
      throw new RuntimeException("unable to write results",e);
    }
 finally {
      if (out != System.out && out != System.err) {
        FileUtils.close(out);
      }
    }
  }
}
