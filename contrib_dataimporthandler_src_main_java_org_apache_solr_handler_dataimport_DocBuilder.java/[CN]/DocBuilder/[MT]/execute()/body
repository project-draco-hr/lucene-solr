{
  dataImporter.store(DataImporter.STATUS_MSGS,statusMessages);
  document=dataImporter.getConfig().document;
  final AtomicLong startTime=new AtomicLong(System.currentTimeMillis());
  statusMessages.put(TIME_ELAPSED,new Object(){
    public String toString(){
      return getTimeElapsedSince(startTime.get());
    }
  }
);
  statusMessages.put(DataImporter.MSG.TOTAL_QUERIES_EXECUTED,importStatistics.queryCount);
  statusMessages.put(DataImporter.MSG.TOTAL_ROWS_EXECUTED,importStatistics.rowsCount);
  statusMessages.put(DataImporter.MSG.TOTAL_DOC_PROCESSED,importStatistics.docCount);
  statusMessages.put(DataImporter.MSG.TOTAL_DOCS_SKIPPED,importStatistics.skipDocCount);
  List<String> entities=requestParameters.entities;
  if (document.onImportStart != null) {
    invokeEventListener(document.onImportStart);
  }
  AtomicBoolean fullCleanDone=new AtomicBoolean(false);
  for (  DataConfig.Entity e : document.entities) {
    if (entities != null && !entities.contains(e.name))     continue;
    root=e;
    String delQuery=e.allAttributes.get("preImportDeleteQuery");
    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP && dataImporter.getLastIndexTime() != null) {
      cleanByQuery(delQuery,fullCleanDone);
      doDelta();
      delQuery=e.allAttributes.get("postImportDeleteQuery");
      if (delQuery != null) {
        fullCleanDone.set(false);
        cleanByQuery(delQuery,fullCleanDone);
      }
    }
 else {
      cleanByQuery(delQuery,fullCleanDone);
      doFullDump();
      delQuery=e.allAttributes.get("postImportDeleteQuery");
      if (delQuery != null) {
        fullCleanDone.set(false);
        cleanByQuery(delQuery,fullCleanDone);
      }
    }
    statusMessages.remove(DataImporter.MSG.TOTAL_DOC_PROCESSED);
  }
  if (stop.get()) {
    statusMessages.put("Aborted",DataImporter.DATE_TIME_FORMAT.get().format(new Date()));
    rollback();
  }
 else {
    if (!requestParameters.clean) {
      if (importStatistics.docCount.get() > 0 || importStatistics.deletedDocCount.get() > 0) {
        commit();
      }
    }
 else {
      commit();
    }
    if (document.onImportEnd != null) {
      invokeEventListener(document.onImportEnd);
    }
  }
  statusMessages.remove(TIME_ELAPSED);
  statusMessages.put("Time taken ",getTimeElapsedSince(startTime.get()));
  LOG.info("Time taken = " + getTimeElapsedSince(startTime.get()));
}
