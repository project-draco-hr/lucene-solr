{
  Object s=arow.get("$skipRow");
  if (s != null && Boolean.parseBoolean(s.toString())) {
    return;
  }
  for (  Map.Entry<String,Object> entry : arow.entrySet()) {
    String key=entry.getKey();
    Object value=entry.getValue();
    if (value == null)     continue;
    if (key.startsWith("$")) {
      if ("$deleteDocById".equals(key)) {
        if (value instanceof Collection) {
          Collection collection=(Collection)value;
          for (          Object o : collection) {
            writer.deleteDoc(o.toString());
          }
        }
 else {
          writer.deleteDoc(value);
        }
      }
      if ("$deleteDocByQuery".equals(key)) {
        writer.deleteByQuery(entry.getValue().toString());
      }
      if ("$skipDoc".equals(key) && Boolean.parseBoolean(value.toString())) {
        throw new DataImportHandlerException(DataImportHandlerException.SKIP,"Document skipped :" + arow);
      }
      continue;
    }
    List<DataConfig.Field> field=entity.colNameVsField.get(key);
    if (field == null && dataImporter.getSchema() != null) {
      SchemaField sf=dataImporter.getSchema().getFieldOrNull(key);
      if (sf == null) {
        sf=dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase());
      }
      if (sf != null) {
        addFieldToDoc(entry.getValue(),sf.getName(),1.0f,sf.multiValued(),doc);
      }
    }
 else {
      if (field != null) {
        for (        DataConfig.Field f : field) {
          if (f.toWrite)           addFieldToDoc(entry.getValue(),f.getName(),f.boost,f.multiValued,doc);
        }
      }
    }
  }
}
