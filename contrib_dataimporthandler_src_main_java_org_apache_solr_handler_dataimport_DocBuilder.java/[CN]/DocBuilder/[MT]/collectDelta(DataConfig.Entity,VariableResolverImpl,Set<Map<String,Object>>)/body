{
  if (stop.get())   return new HashSet();
  EntityProcessor entityProcessor=getEntityProcessor(entity);
  ContextImpl context1=new ContextImpl(entity,resolver,null,Context.FIND_DELTA,session,null,this);
  resolver.context=context1;
  entityProcessor.init(context1);
  Set<Map<String,Object>> myModifiedPks=new HashSet<Map<String,Object>>();
  if (entity.entities != null) {
    for (    DataConfig.Entity entity1 : entity.entities) {
      myModifiedPks.addAll(collectDelta(entity1,resolver,deletedRows));
      if (stop.get())       return new HashSet();
    }
  }
  Set<Map<String,Object>> deltaSet=new HashSet<Map<String,Object>>();
  LOG.info("Running ModifiedRowKey() for Entity: " + entity.name);
  while (true) {
    Map<String,Object> row=entityProcessor.nextModifiedRowKey();
    if (row == null)     break;
    deltaSet.add(row);
    importStatistics.rowsCount.incrementAndGet();
    if (stop.get())     return new HashSet();
  }
  Set<Map<String,Object>> deletedSet=new HashSet<Map<String,Object>>();
  Set<Map<String,Object>> deltaRemoveSet=new HashSet<Map<String,Object>>();
  while (true) {
    Map<String,Object> row=entityProcessor.nextDeletedRowKey();
    if (row == null)     break;
    for (    Map<String,Object> modifiedRow : deltaSet) {
      if (modifiedRow.get(entity.pk).equals(row.get(entity.pk))) {
        deltaRemoveSet.add(modifiedRow);
      }
    }
    deletedSet.add(row);
    importStatistics.rowsCount.incrementAndGet();
    if (stop.get())     return new HashSet();
  }
  deltaSet.removeAll(deltaRemoveSet);
  LOG.info("Completed ModifiedRowKey for Entity: " + entity.name + " rows obtained : "+ deltaSet.size());
  LOG.info("Completed DeletedRowKey for Entity: " + entity.name + " rows obtained : "+ deletedSet.size());
  myModifiedPks.addAll(deltaSet);
  Set<Map<String,Object>> parentKeyList=new HashSet<Map<String,Object>>();
  if (entity.parentEntity != null) {
    for (    Map<String,Object> row : myModifiedPks) {
      getModifiedParentRows(resolver.addNamespace(entity.name,row),entity.name,entityProcessor,parentKeyList);
      if (stop.get())       return new HashSet();
    }
    for (    Map<String,Object> row : deletedSet) {
      getModifiedParentRows(resolver.addNamespace(entity.name,row),entity.name,entityProcessor,parentKeyList);
      if (stop.get())       return new HashSet();
    }
  }
  LOG.info("Completed parentDeltaQuery for Entity: " + entity.name);
  if (entity.isDocRoot)   deletedRows.addAll(deletedSet);
  return entity.isDocRoot ? myModifiedPks : new HashSet<Map<String,Object>>(parentKeyList);
}
