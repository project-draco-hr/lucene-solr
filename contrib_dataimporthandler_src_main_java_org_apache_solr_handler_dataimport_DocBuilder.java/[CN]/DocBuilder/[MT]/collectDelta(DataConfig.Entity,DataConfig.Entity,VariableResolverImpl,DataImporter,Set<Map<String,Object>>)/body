{
  if (stop.get())   return new HashSet();
  Set<Map<String,Object>> myModifiedPks=new HashSet<Map<String,Object>>();
  if (entity.entities != null) {
    for (    DataConfig.Entity entity1 : entity.entities) {
      myModifiedPks.addAll(collectDelta(entity1,entity,resolver,context,deletedRows));
    }
  }
  Set<Map<String,Object>> deltaSet=new HashSet<Map<String,Object>>();
  resolver.addNamespace(null,(Map)entity.allAttributes);
  EntityProcessor entityProcessor=getEntityProcessor(entity,context.getCore());
  entityProcessor.init(new ContextImpl(entity,resolver,null,Context.FIND_DELTA,session,null,this));
  LOG.info("Running ModifiedRowKey() for Entity: " + entity.name);
  while (true) {
    Map<String,Object> row=entityProcessor.nextModifiedRowKey();
    if (row == null)     break;
    deltaSet.add(row);
    importStatistics.rowsCount.incrementAndGet();
  }
  Set<Map<String,Object>> deletedSet=new HashSet<Map<String,Object>>();
  Set<Map<String,Object>> deltaRemoveSet=new HashSet<Map<String,Object>>();
  while (true) {
    Map<String,Object> row=entityProcessor.nextDeletedRowKey();
    if (row == null)     break;
    for (    Map<String,Object> modifiedRow : deltaSet) {
      if (modifiedRow.get(entity.pk).equals(row.get(entity.pk))) {
        deltaRemoveSet.add(modifiedRow);
      }
    }
    deletedSet.add(row);
    importStatistics.rowsCount.incrementAndGet();
  }
  deltaSet.removeAll(deltaRemoveSet);
  LOG.info("Completed ModifiedRowKey for Entity: " + entity.name + " rows obtained : "+ deltaSet.size());
  LOG.info("Completed DeletedRowKey for Entity: " + entity.name + " rows obtained : "+ deletedSet.size());
  myModifiedPks.addAll(deltaSet);
  Set<Map<String,Object>> parentKeyList=new HashSet<Map<String,Object>>();
  if (parentEntity != null && parentEntity.isDocRoot) {
    EntityProcessor parentEntityProcessor=getEntityProcessor(parentEntity,context.getCore());
    parentEntityProcessor.init(new ContextImpl(parentEntity,resolver,null,Context.FIND_DELTA,session,null,this));
    for (    Map<String,Object> row : myModifiedPks)     getModifiedParentRows(resolver.addNamespace(entity.name,row),entity.name,parentEntityProcessor,parentKeyList);
    for (    Map<String,Object> row : deletedSet) {
      getModifiedParentRows(resolver.addNamespace(entity.name,row),entity.name,parentEntityProcessor,parentKeyList);
    }
  }
  LOG.info("Completed parentDeltaQuery for Entity: " + entity.name);
  if (entity.isDocRoot)   deletedRows.addAll(deletedSet);
  return entity.isDocRoot ? myModifiedPks : new HashSet<Map<String,Object>>(parentKeyList);
}
