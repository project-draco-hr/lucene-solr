{
  if (evaluateIsZero(x,y,z)) {
    if (meetsAllBounds(x,y,z,bounds))     return 0.0;
    return Double.MAX_VALUE;
  }
  final Plane perpPlane=new Plane(this.y * z - this.z * y,this.z * x - this.x * z,this.x * y - this.y * x,0.0);
  final GeoPoint[] intersectionPoints=findIntersections(planetModel,perpPlane);
  double minDistance=Double.MAX_VALUE;
  for (  final GeoPoint intersectionPoint : intersectionPoints) {
    if (meetsAllBounds(intersectionPoint,bounds)) {
      final double theDistance=intersectionPoint.linearDistance(x,y,z);
      if (theDistance < minDistance) {
        minDistance=theDistance;
      }
    }
  }
  return minDistance;
}
