{
  Directory dir=newDirectory();
  IllegalCustomEncodingSimilarity similarity=new IllegalCustomEncodingSimilarity();
  IndexWriterConfig config=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  config.setSimilarity(similarity);
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir,config);
  Document doc=new Document();
  Field foo=newTextField("foo","",Field.Store.NO);
  Field bar=newTextField("bar","",Field.Store.NO);
  doc.add(foo);
  doc.add(bar);
  int numAdded=0;
  for (int i=0; i < 100; i++) {
    try {
      bar.setStringValue("singleton");
      similarity.useByte=random().nextBoolean();
      writer.addDocument(doc);
      numAdded++;
    }
 catch (    IllegalArgumentException e) {
    }
  }
  IndexReader reader=writer.getReader();
  writer.close();
  assertEquals(numAdded,reader.numDocs());
  IndexReaderContext topReaderContext=reader.getContext();
  for (  final AtomicReaderContext ctx : topReaderContext.leaves()) {
    AtomicReader atomicReader=ctx.reader();
    Source source=random().nextBoolean() ? atomicReader.normValues("foo").getSource() : atomicReader.normValues("foo").getDirectSource();
    Bits liveDocs=atomicReader.getLiveDocs();
    Type t=source.getType();
    for (int i=0; i < atomicReader.maxDoc(); i++) {
      assertEquals(0,source.getFloat(i),0.000f);
    }
    source=random().nextBoolean() ? atomicReader.normValues("bar").getSource() : atomicReader.normValues("bar").getDirectSource();
    for (int i=0; i < atomicReader.maxDoc(); i++) {
      if (liveDocs == null || liveDocs.get(i)) {
        assertEquals("type: " + t,1,source.getFloat(i),0.000f);
      }
 else {
        assertEquals("type: " + t,0,source.getFloat(i),0.000f);
      }
    }
  }
  reader.close();
  dir.close();
}
