{
  try {
    ZkStateReader zkStateReader=cloudSolrClient.getZkStateReader();
    ClusterState clusterState=zkStateReader.getClusterState();
    Set<String> liveNodes=clusterState.getLiveNodes();
    Collection<Slice> slices=clusterState.getActiveSlices(this.collection);
    if (slices == null)     slices=getSlicesIgnoreCase(this.collection,clusterState);
    if (slices == null) {
      throw new Exception("Collection not found:" + this.collection);
    }
    ModifiableSolrParams mParams=new ModifiableSolrParams(params);
    mParams.set("distrib","false");
    for (    Slice slice : slices) {
      Collection<Replica> replicas=slice.getReplicas();
      List<Replica> shuffler=new ArrayList();
      for (      Replica replica : replicas) {
        if (replica.getState() == Replica.State.ACTIVE && liveNodes.contains(replica.getNodeName()))         shuffler.add(replica);
      }
      Collections.shuffle(shuffler,new Random());
      Replica rep=shuffler.get(0);
      ZkCoreNodeProps zkProps=new ZkCoreNodeProps(rep);
      String url=zkProps.getCoreUrl();
      SolrStream solrStream=new SolrStream(url,mParams);
      if (streamContext != null) {
        solrStream.setStreamContext(streamContext);
      }
      solrStream.setFieldMappings(this.fieldMappings);
      solrStreams.add(solrStream);
    }
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
}
