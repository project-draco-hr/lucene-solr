{
  try {
    ZkStateReader zkStateReader=cloudSolrClient.getZkStateReader();
    ClusterState clusterState=zkStateReader.getClusterState();
    Collection<Slice> slices=clusterState.getActiveSlices(this.collection);
    if (slices == null) {
      for (      String col : clusterState.getCollections()) {
        if (col.equalsIgnoreCase(this.collection)) {
          slices=clusterState.getActiveSlices(col);
          break;
        }
      }
      if (slices == null) {
        throw new Exception("Collection not found:" + this.collection);
      }
    }
    params.put("distrib","false");
    for (    Slice slice : slices) {
      Collection<Replica> replicas=slice.getReplicas();
      List<Replica> shuffler=new ArrayList();
      for (      Replica replica : replicas) {
        shuffler.add(replica);
      }
      Collections.shuffle(shuffler,new Random());
      Replica rep=shuffler.get(0);
      ZkCoreNodeProps zkProps=new ZkCoreNodeProps(rep);
      String url=zkProps.getCoreUrl();
      SolrStream solrStream=new SolrStream(url,params);
      if (streamContext != null) {
        solrStream.setStreamContext(streamContext);
      }
      solrStream.setFieldMappings(this.fieldMappings);
      solrStreams.add(solrStream);
    }
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
}
