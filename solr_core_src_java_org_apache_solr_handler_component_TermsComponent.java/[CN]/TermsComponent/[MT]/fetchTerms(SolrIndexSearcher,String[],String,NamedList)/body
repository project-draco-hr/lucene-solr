{
  NamedList termsMap=new SimpleOrderedMap();
  List<LeafReaderContext> leaves=indexSearcher.getTopReaderContext().leaves();
  String field=fields[0];
  FieldType fieldType=indexSearcher.getSchema().getField(field).getType();
  String[] splitTerms=termList.split(",");
  for (int i=0; i < splitTerms.length; i++) {
    splitTerms[i]=splitTerms[i].trim();
  }
  Term[] terms=new Term[splitTerms.length];
  TermContext[] termContexts=new TermContext[terms.length];
  for (int i=0; i < splitTerms.length; i++) {
    terms[i]=new Term(field,fieldType.readableToIndexed(splitTerms[i]));
  }
  Arrays.sort(terms);
  collectTermContext(indexSearcher.getTopReaderContext().reader(),leaves,termContexts,terms);
  for (int i=0; i < terms.length; i++) {
    if (termContexts[i] != null) {
      String outTerm=fieldType.indexedToReadable(terms[i].bytes().utf8ToString());
      int docFreq=termContexts[i].docFreq();
      termsMap.add(outTerm,docFreq);
    }
  }
  result.add(field,termsMap);
}
