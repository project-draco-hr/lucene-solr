{
  if (!mergeDocStores) {
    final SegmentReader sr=(SegmentReader)readers.elementAt(readers.size() - 1);
    fieldInfos=(FieldInfos)sr.fieldInfos.clone();
  }
 else {
    fieldInfos=new FieldInfos();
  }
  int docCount=0;
  for (int i=0; i < readers.size(); i++) {
    IndexReader reader=(IndexReader)readers.elementAt(i);
    addIndexed(reader,fieldInfos,reader.getFieldNames(IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET),true,true,true,false);
    addIndexed(reader,fieldInfos,reader.getFieldNames(IndexReader.FieldOption.TERMVECTOR_WITH_POSITION),true,true,false,false);
    addIndexed(reader,fieldInfos,reader.getFieldNames(IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET),true,false,true,false);
    addIndexed(reader,fieldInfos,reader.getFieldNames(IndexReader.FieldOption.TERMVECTOR),true,false,false,false);
    addIndexed(reader,fieldInfos,reader.getFieldNames(IndexReader.FieldOption.STORES_PAYLOADS),false,false,false,true);
    addIndexed(reader,fieldInfos,reader.getFieldNames(IndexReader.FieldOption.INDEXED),false,false,false,false);
    fieldInfos.add(reader.getFieldNames(IndexReader.FieldOption.UNINDEXED),false);
  }
  fieldInfos.write(directory,segment + ".fnm");
  if (mergeDocStores) {
    FieldsWriter fieldsWriter=new FieldsWriter(directory,segment,fieldInfos);
    FieldSelector fieldSelectorMerge=new FieldSelector(){
      public FieldSelectorResult accept(      String fieldName){
        return FieldSelectorResult.LOAD_FOR_MERGE;
      }
    }
;
    try {
      for (int i=0; i < readers.size(); i++) {
        IndexReader reader=(IndexReader)readers.elementAt(i);
        int maxDoc=reader.maxDoc();
        for (int j=0; j < maxDoc; j++)         if (!reader.isDeleted(j)) {
          fieldsWriter.addDocument(reader.document(j,fieldSelectorMerge));
          docCount++;
        }
      }
    }
  finally {
      fieldsWriter.close();
    }
  }
 else   for (int i=0; i < readers.size(); i++)   docCount+=((IndexReader)readers.elementAt(i)).numDocs();
  return docCount;
}
