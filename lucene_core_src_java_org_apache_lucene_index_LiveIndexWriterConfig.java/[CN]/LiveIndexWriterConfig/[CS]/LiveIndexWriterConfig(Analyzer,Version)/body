{
  this.analyzer=analyzer;
  this.matchVersion=matchVersion;
  ramBufferSizeMB=IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB;
  maxBufferedDocs=IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS;
  maxBufferedDeleteTerms=IndexWriterConfig.DEFAULT_MAX_BUFFERED_DELETE_TERMS;
  mergedSegmentWarmer=null;
  delPolicy=new KeepOnlyLastCommitDeletionPolicy();
  commit=null;
  useCompoundFile=IndexWriterConfig.DEFAULT_USE_COMPOUND_FILE_SYSTEM;
  openMode=OpenMode.CREATE_OR_APPEND;
  similarity=IndexSearcher.getDefaultSimilarity();
  mergeScheduler=new ConcurrentMergeScheduler();
  writeLockTimeout=IndexWriterConfig.WRITE_LOCK_TIMEOUT;
  indexingChain=DocumentsWriterPerThread.defaultIndexingChain;
  codec=Codec.getDefault();
  if (codec == null) {
    throw new NullPointerException();
  }
  infoStream=InfoStream.getDefault();
  mergePolicy=new TieredMergePolicy();
  flushPolicy=new FlushByRamOrCountsPolicy();
  readerPooling=IndexWriterConfig.DEFAULT_READER_POOLING;
  indexerThreadPool=new DocumentsWriterPerThreadPool(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES);
  perThreadHardLimitMB=IndexWriterConfig.DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;
}
