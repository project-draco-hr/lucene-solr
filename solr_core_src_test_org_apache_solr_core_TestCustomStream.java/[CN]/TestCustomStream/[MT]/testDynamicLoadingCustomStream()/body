{
  System.setProperty("enable.runtime.lib","true");
  setupHarnesses();
  String blobName="colltest";
  HttpSolrClient randomClient=(HttpSolrClient)clients.get(random().nextInt(clients.size()));
  String baseURL=randomClient.getBaseURL();
  baseURL=baseURL.substring(0,baseURL.lastIndexOf('/'));
  TestBlobHandler.createSystemCollection(getHttpSolrClient(baseURL,randomClient.getHttpClient()));
  waitForRecoveriesToFinish(".system",true);
  String payload="{\n" + "'create-expressible' : { 'name' : 'hello', 'class': 'org.apache.solr.core.HelloStream' }\n" + "}";
  RestTestHarness client=restTestHarnesses.get(random().nextInt(restTestHarnesses.size()));
  TestSolrConfigHandler.runConfigCommand(client,"/config?wt=json",payload);
  TestSolrConfigHandler.testForResponseElement(client,null,"/config/overlay?wt=json",null,Arrays.asList("overlay","expressible","hello","class"),"org.apache.solr.core.HelloStream",10);
  TestSolrConfigHandler.testForResponseElement(client,null,"/stream?expr=hello()",null,Arrays.asList("result-set","docs[0]","msg"),"Hello World!",10);
}
