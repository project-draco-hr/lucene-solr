{
switch (random.nextInt(6)) {
case 5:
case 4:
    return new FilteredQuery.RandomAccessFilterStrategy(){
      @Override protected boolean useRandomAccess(      Bits bits,      int firstFilterDoc){
        return random.nextBoolean();
      }
    }
;
case 3:
  return FilteredQuery.RANDOM_ACCESS_FILTER_STRATEGY;
case 2:
return FilteredQuery.LEAP_FROG_FILTER_FIRST_STRATEGY;
case 1:
return FilteredQuery.LEAP_FROG_QUERY_FIRST_STRATEGY;
case 0:
return FilteredQuery.QUERY_FIRST_FILTER_STRATEGY;
default :
return FilteredQuery.RANDOM_ACCESS_FILTER_STRATEGY;
}
}
