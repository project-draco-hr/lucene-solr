{
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.set(COMMAND,CMD_GET_FILE);
  params.set(GENERATION,Long.toString(indexGen));
  params.set(CommonParams.QT,"/replication");
  params.set(solrParamOutput,fileName);
  if (useInternal) {
    params.set(COMPRESSION,"true");
  }
  if (this.includeChecksum) {
    params.set(CHECKSUM,true);
  }
  params.set(CommonParams.WT,FILE_STREAM);
  if (bytesDownloaded > 0) {
    params.set(OFFSET,Long.toString(bytesDownloaded));
  }
  NamedList response;
  InputStream is=null;
  try (HttpSolrClient client=new HttpSolrClient(masterUrl,myHttpClient,null)){
    client.setSoTimeout(60000);
    client.setConnectionTimeout(15000);
    QueryRequest req=new QueryRequest(params);
    response=client.request(req);
    is=(InputStream)response.get("stream");
    if (useInternal) {
      is=new InflaterInputStream(is);
    }
    return new FastInputStream(is);
  }
 catch (  Exception e) {
    IOUtils.closeQuietly(is);
    throw new IOException("Could not download file '" + fileName + "'",e);
  }
}
