{
  boolean cleanupDone=false;
  boolean successfulInstall=false;
  markReplicationStart();
  Directory tmpIndexDir=null;
  String tmpIndex;
  Directory indexDir=null;
  String indexDirPath;
  boolean deleteTmpIdxDir=true;
  File tmpTlogDir=null;
  if (!solrCore.getSolrCoreState().getLastReplicateIndexSuccess()) {
    forceReplication=true;
  }
  try {
    NamedList response;
    try {
      response=getLatestVersion();
    }
 catch (    Exception e) {
      LOG.error("Master at: " + masterUrl + " is not available. Index fetch failed. Exception: "+ e.getMessage());
      return false;
    }
    long latestVersion=(Long)response.get(CMD_INDEX_VERSION);
    long latestGeneration=(Long)response.get(GENERATION);
    IndexCommit commit=solrCore.getDeletionPolicy().getLatestCommit();
    if (commit == null) {
      RefCounted<SolrIndexSearcher> searcherRefCounted=null;
      try {
        searcherRefCounted=solrCore.getNewestSearcher(false);
        if (searcherRefCounted == null) {
          LOG.warn("No open searcher found - fetch aborted");
          return false;
        }
        commit=searcherRefCounted.get().getIndexReader().getIndexCommit();
      }
  finally {
        if (searcherRefCounted != null)         searcherRefCounted.decref();
      }
    }
    if (latestVersion == 0L) {
      if (forceReplication && commit.getGeneration() != 0) {
        RefCounted<IndexWriter> iw=solrCore.getUpdateHandler().getSolrCoreState().getIndexWriter(solrCore);
        try {
          iw.get().deleteAll();
        }
  finally {
          iw.decref();
        }
        SolrQueryRequest req=new LocalSolrQueryRequest(solrCore,new ModifiableSolrParams());
        solrCore.getUpdateHandler().commit(new CommitUpdateCommand(req,false));
      }
      successfulInstall=true;
      return true;
    }
    if (!forceReplication && IndexDeletionPolicyWrapper.getCommitTimestamp(commit) == latestVersion) {
      LOG.info("Slave in sync with master.");
      successfulInstall=true;
      return true;
    }
    LOG.info("Master's generation: " + latestGeneration);
    LOG.info("Slave's generation: " + commit.getGeneration());
    LOG.info("Starting replication process");
    fetchFileList(latestGeneration);
    if (filesToDownload.isEmpty()) {
      return false;
    }
    LOG.info("Number of files in latest index in master: " + filesToDownload.size());
    if (tlogFilesToDownload != null) {
      LOG.info("Number of tlog files in master: " + tlogFilesToDownload.size());
    }
    fsyncService=ExecutorUtil.newMDCAwareSingleThreadExecutor(new DefaultSolrThreadFactory("fsyncService"));
    filesDownloaded=Collections.synchronizedList(new ArrayList<Map<String,Object>>());
    boolean isFullCopyNeeded=IndexDeletionPolicyWrapper.getCommitTimestamp(commit) >= latestVersion || commit.getGeneration() >= latestGeneration || forceReplication;
    String timestamp=new SimpleDateFormat(SnapShooter.DATE_FMT,Locale.ROOT).format(new Date());
    String tmpIdxDirName="index." + timestamp;
    tmpIndex=solrCore.getDataDir() + tmpIdxDirName;
    tmpIndexDir=solrCore.getDirectoryFactory().get(tmpIndex,DirContext.DEFAULT,solrCore.getSolrConfig().indexConfig.lockType);
    if (tlogFilesToDownload != null) {
      tmpTlogDir=new File(solrCore.getUpdateHandler().getUpdateLog().getLogDir(),"tlog." + timestamp);
    }
    indexDirPath=solrCore.getIndexDir();
    indexDir=solrCore.getDirectoryFactory().get(indexDirPath,DirContext.DEFAULT,solrCore.getSolrConfig().indexConfig.lockType);
    try {
      if (!isFullCopyNeeded && isIndexStale(indexDir)) {
        isFullCopyNeeded=true;
      }
      if (!isFullCopyNeeded) {
        if (solrCore.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {
          solrCore.closeSearcher();
        }
        solrCore.getUpdateHandler().newIndexWriter(true);
        RefCounted<IndexWriter> writer=solrCore.getUpdateHandler().getSolrCoreState().getIndexWriter(null);
        try {
          IndexWriter indexWriter=writer.get();
          int c=0;
          indexWriter.deleteUnusedFiles();
          while (hasUnusedFiles(indexDir,commit)) {
            indexWriter.deleteUnusedFiles();
            LOG.info("Sleeping for 1000ms to wait for unused lucene index files to be delete-able");
            Thread.sleep(1000);
            c++;
            if (c >= 30) {
              LOG.warn("IndexFetcher unable to cleanup unused lucene index files so we must do a full copy instead");
              isFullCopyNeeded=true;
              break;
            }
          }
          if (c > 0) {
            LOG.info("IndexFetcher slept for " + (c * 1000) + "ms for unused lucene index files to be delete-able");
          }
        }
  finally {
          writer.decref();
        }
        solrCore.getUpdateHandler().getSolrCoreState().closeIndexWriter(solrCore,true);
      }
      boolean reloadCore=false;
      try {
        LOG.info("Starting download (fullCopy={}) to {}",isFullCopyNeeded,tmpIndexDir);
        successfulInstall=false;
        long bytesDownloaded=downloadIndexFiles(isFullCopyNeeded,indexDir,tmpIndexDir,latestGeneration);
        if (tlogFilesToDownload != null) {
          bytesDownloaded+=downloadTlogFiles(tmpTlogDir,latestGeneration);
          reloadCore=true;
        }
        final long timeTakenSeconds=getReplicationTimeElapsed();
        final Long bytesDownloadedPerSecond=(timeTakenSeconds != 0 ? new Long(bytesDownloaded / timeTakenSeconds) : null);
        LOG.info("Total time taken for download (fullCopy={},bytesDownloaded={}) : {} secs ({} bytes/sec) to {}",isFullCopyNeeded,bytesDownloaded,timeTakenSeconds,bytesDownloadedPerSecond,tmpIndexDir);
        Collection<Map<String,Object>> modifiedConfFiles=getModifiedConfFiles(confFilesToDownload);
        if (!modifiedConfFiles.isEmpty()) {
          reloadCore=true;
          downloadConfFiles(confFilesToDownload,latestGeneration);
          if (isFullCopyNeeded) {
            successfulInstall=IndexFetcher.modifyIndexProps(solrCore,tmpIdxDirName);
            deleteTmpIdxDir=false;
          }
 else {
            successfulInstall=moveIndexFiles(tmpIndexDir,indexDir);
          }
          if (tlogFilesToDownload != null) {
            successfulInstall&=moveTlogFiles(tmpTlogDir);
          }
          if (successfulInstall) {
            if (isFullCopyNeeded) {
              if (indexDir != null) {
                solrCore.getDirectoryFactory().doneWithDirectory(indexDir);
                SolrSnapshotMetaDataManager snapshotsMgr=solrCore.getSnapshotMetaDataManager();
                Collection<SnapshotMetaData> snapshots=snapshotsMgr.listSnapshotsInIndexDir(indexDirPath);
                if (snapshots.isEmpty()) {
                  LOG.info("removing old index directory " + indexDir);
                  solrCore.getDirectoryFactory().remove(indexDir);
                }
 else {
                  SolrSnapshotManager.deleteNonSnapshotIndexFiles(indexDir,snapshots);
                }
              }
            }
            LOG.info("Configuration files are modified, core will be reloaded");
            logReplicationTimeAndConfFiles(modifiedConfFiles,successfulInstall);
          }
        }
 else {
          terminateAndWaitFsyncService();
          if (isFullCopyNeeded) {
            successfulInstall=IndexFetcher.modifyIndexProps(solrCore,tmpIdxDirName);
            deleteTmpIdxDir=false;
          }
 else {
            successfulInstall=moveIndexFiles(tmpIndexDir,indexDir);
          }
          if (tlogFilesToDownload != null) {
            successfulInstall&=moveTlogFiles(tmpTlogDir);
          }
          if (successfulInstall) {
            logReplicationTimeAndConfFiles(modifiedConfFiles,successfulInstall);
          }
        }
      }
  finally {
        if (!isFullCopyNeeded) {
          solrCore.getUpdateHandler().getSolrCoreState().openIndexWriter(solrCore);
        }
      }
      if (successfulInstall && (reloadCore || forceCoreReload)) {
        LOG.info("Reloading SolrCore {}",solrCore.getName());
        reloadCore();
      }
      if (successfulInstall) {
        if (isFullCopyNeeded) {
          if (indexDir != null) {
            LOG.info("removing old index directory " + indexDir);
            solrCore.getDirectoryFactory().doneWithDirectory(indexDir);
            solrCore.getDirectoryFactory().remove(indexDir);
          }
        }
        if (isFullCopyNeeded) {
          solrCore.getUpdateHandler().newIndexWriter(isFullCopyNeeded);
        }
        openNewSearcherAndUpdateCommitPoint();
      }
      if (!isFullCopyNeeded && !forceReplication && !successfulInstall) {
        cleanup(solrCore,tmpIndexDir,indexDir,deleteTmpIdxDir,tmpTlogDir,successfulInstall);
        cleanupDone=true;
        LOG.warn("Replication attempt was not successful - trying a full index replication reloadCore={}",reloadCore);
        successfulInstall=fetchLatestIndex(true,reloadCore);
      }
      markReplicationStop();
      return successfulInstall;
    }
 catch (    ReplicationHandlerException e) {
      LOG.error("User aborted Replication");
      return false;
    }
catch (    SolrException e) {
      throw e;
    }
catch (    InterruptedException e) {
      throw new InterruptedException("Index fetch interrupted");
    }
catch (    Exception e) {
      throw new SolrException(ErrorCode.SERVER_ERROR,"Index fetch failed : ",e);
    }
  }
  finally {
    if (!cleanupDone) {
      cleanup(solrCore,tmpIndexDir,indexDir,deleteTmpIdxDir,tmpTlogDir,successfulInstall);
    }
  }
}
