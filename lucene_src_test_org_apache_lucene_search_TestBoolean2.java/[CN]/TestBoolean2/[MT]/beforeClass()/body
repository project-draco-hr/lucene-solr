{
  directory=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));
  for (int i=0; i < docFields.length; i++) {
    Document doc=new Document();
    doc.add(newField(field,docFields[i],TextField.TYPE_UNSTORED));
    writer.addDocument(doc);
  }
  writer.close();
  searcher=new IndexSearcher(directory,true);
  dir2=new MockDirectoryWrapper(random,new RAMDirectory(directory,IOContext.DEFAULT));
  mulFactor=1;
  int docCount=0;
  do {
    final Directory copy=new MockDirectoryWrapper(random,new RAMDirectory(dir2,IOContext.DEFAULT));
    RandomIndexWriter w=new RandomIndexWriter(random,dir2);
    w.addIndexes(copy);
    docCount=w.maxDoc();
    w.close();
    mulFactor*=2;
  }
 while (docCount < 3000);
  RandomIndexWriter w=new RandomIndexWriter(random,dir2,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMaxBufferedDocs(_TestUtil.nextInt(random,50,1000)));
  Document doc=new Document();
  doc.add(newField("field2","xxx",TextField.TYPE_UNSTORED));
  for (int i=0; i < NUM_EXTRA_DOCS / 2; i++) {
    w.addDocument(doc);
  }
  doc=new Document();
  doc.add(newField("field2","big bad bug",TextField.TYPE_UNSTORED));
  for (int i=0; i < NUM_EXTRA_DOCS / 2; i++) {
    w.addDocument(doc);
  }
  reader=w.getReader();
  bigSearcher=newSearcher(reader);
  w.close();
}
