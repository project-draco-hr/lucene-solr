{
  Directory indexDir=newDirectory();
  TaxonomyWriter tw=new DirectoryTaxonomyWriter(indexDir);
  fillTaxonomy(tw);
  tw.close();
  TaxonomyReader tr=new DirectoryTaxonomyReader(indexDir);
  assertEquals(expectedCategories.length,tr.getSize());
  for (int i=0; i < tr.getSize(); i++) {
    assertEquals(i,tr.getOrdinal(tr.getPath(i)));
  }
  for (int i=1; i < tr.getSize(); i++) {
    CategoryPath expectedCategory=new CategoryPath(expectedCategories[i]);
    CategoryPath category=tr.getPath(i);
    if (!expectedCategory.equals(category)) {
      fail("For ordinal " + i + " expected category "+ showcat(expectedCategory)+ ", but got "+ showcat(category));
    }
  }
  assertNull(tr.getPath(-1));
  assertNull(tr.getPath(tr.getSize()));
  assertNull(tr.getPath(TaxonomyReader.INVALID_ORDINAL));
  for (int i=1; i < expectedCategories.length; i++) {
    int expectedOrdinal=i;
    int ordinal=tr.getOrdinal(new CategoryPath(expectedCategories[i]));
    if (expectedOrdinal != ordinal) {
      fail("For category " + showcat(expectedCategories[i]) + " expected ordinal "+ expectedOrdinal+ ", but got "+ ordinal);
    }
  }
  assertEquals(TaxonomyReader.INVALID_ORDINAL,tr.getOrdinal(new CategoryPath("non-existant")));
  assertEquals(TaxonomyReader.INVALID_ORDINAL,tr.getOrdinal(new CategoryPath("Author","Jules Verne")));
  tr.close();
  indexDir.close();
}
