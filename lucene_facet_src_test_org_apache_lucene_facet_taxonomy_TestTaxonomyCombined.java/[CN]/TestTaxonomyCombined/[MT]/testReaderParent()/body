{
  Directory indexDir=newDirectory();
  TaxonomyWriter tw=new DirectoryTaxonomyWriter(indexDir);
  fillTaxonomy(tw);
  tw.close();
  TaxonomyReader tr=new DirectoryTaxonomyReader(indexDir);
  assertEquals(TaxonomyReader.INVALID_ORDINAL,tr.getParent(0));
  for (int ordinal=1; ordinal < tr.getSize(); ordinal++) {
    CategoryPath me=tr.getPath(ordinal);
    int parentOrdinal=tr.getParent(ordinal);
    CategoryPath parent=tr.getPath(parentOrdinal);
    if (parent == null) {
      fail("Parent of " + ordinal + " is "+ parentOrdinal+ ", but this is not a valid category.");
    }
    if (!new CategoryPath(me,me.length() - 1).equals(parent)) {
      fail("Got parent " + parentOrdinal + " for ordinal "+ ordinal+ " but categories are "+ showcat(parent)+ " and "+ showcat(me)+ " respectively.");
    }
  }
  try {
    tr.getParent(-1);
    fail("getParent for -1 should throw exception");
  }
 catch (  ArrayIndexOutOfBoundsException e) {
  }
  try {
    tr.getParent(TaxonomyReader.INVALID_ORDINAL);
    fail("getParent for INVALID_ORDINAL should throw exception");
  }
 catch (  ArrayIndexOutOfBoundsException e) {
  }
  try {
    int parent=tr.getParent(tr.getSize());
    fail("getParent for getSize() should throw exception, but returned " + parent);
  }
 catch (  ArrayIndexOutOfBoundsException e) {
  }
  tr.close();
  indexDir.close();
}
