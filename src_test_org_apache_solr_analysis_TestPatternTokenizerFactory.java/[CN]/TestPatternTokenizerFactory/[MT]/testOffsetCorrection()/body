{
  final String INPUT="G&uuml;nther G&uuml;nther is here";
  MappingCharFilterFactory cfFactory=new MappingCharFilterFactory();
  List<String> mappingRules=new ArrayList<String>();
  mappingRules.add("\"&uuml;\" => \"??\"");
  NormalizeCharMap normMap=new NormalizeCharMap();
  cfFactory.parseRules(mappingRules,normMap);
  CharStream charStream=new MappingCharFilter(normMap,CharReader.get(new StringReader(INPUT)));
  Map<String,String> args=new HashMap<String,String>();
  args.put(PatternTokenizerFactory.PATTERN,"[,;/\\s]+");
  PatternTokenizerFactory tokFactory=new PatternTokenizerFactory();
  tokFactory.init(args);
  TokenStream stream=tokFactory.create(charStream);
  List<Token> result=getTokens(stream);
  List<Token> expect=tokens("G??nther,1,0,12 G??nther,1,13,25 is,1,26,28 here,1,29,33");
  assertTokEqualOff(expect,result);
}
