{
  if (nodeID >= leafNodeOffset) {
    long fp=leafBlockFPs[nodeID - leafNodeOffset];
    if (fp == 0) {
      return 0;
    }
    state.in.seek(fp);
    int count=state.in.readVInt();
    for (int i=0; i < count; i++) {
      int docID=state.in.readInt();
      state.bits.set(docID);
    }
    return count;
  }
 else {
    int splitValue=splitValues[nodeID];
    if (splitValue == Integer.MAX_VALUE) {
      return 0;
    }
    int count=addAll(state,2 * nodeID);
    count+=addAll(state,2 * nodeID + 1);
    return count;
  }
}
