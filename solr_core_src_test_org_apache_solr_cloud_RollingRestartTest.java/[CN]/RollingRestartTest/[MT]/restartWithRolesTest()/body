{
  String leader=OverseerCollectionConfigSetProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
  assertNotNull(leader);
  log.info("Current overseer leader = {}",leader);
  cloudClient.getZkStateReader().getZkClient().printLayoutToStdOut();
  int numDesignateOverseers=TEST_NIGHTLY ? 16 : 2;
  numDesignateOverseers=Math.max(getShardCount(),numDesignateOverseers);
  List<String> designates=new ArrayList<>();
  List<CloudJettyRunner> designateJettys=new ArrayList<>();
  for (int i=0; i < numDesignateOverseers; i++) {
    int n=random().nextInt(getShardCount());
    String nodeName=cloudJettys.get(n).nodeName;
    log.info("Chose {} as overseer designate",nodeName);
    new CollectionAdminRequest.AddRole().setRole("overseer").setNode(nodeName).process(cloudClient);
    designates.add(nodeName);
    designateJettys.add(cloudJettys.get(n));
  }
  waitUntilOverseerDesignateIsLeader(cloudClient.getZkStateReader().getZkClient(),designates,MAX_WAIT_TIME);
  cloudClient.getZkStateReader().getZkClient().printLayoutToStdOut();
  boolean sawLiveDesignate=false;
  int numRestarts=1 + random().nextInt(TEST_NIGHTLY ? 12 : 2);
  for (int i=0; i < numRestarts; i++) {
    log.info("Rolling restart #{}",i + 1);
    for (    CloudJettyRunner cloudJetty : designateJettys) {
      log.info("Restarting {}",cloudJetty);
      chaosMonkey.stopJetty(cloudJetty);
      cloudClient.getZkStateReader().updateLiveNodes();
      boolean liveDesignates=CollectionUtils.intersection(cloudClient.getZkStateReader().getClusterState().getLiveNodes(),designates).size() > 0;
      if (liveDesignates) {
        sawLiveDesignate=true;
        boolean success=waitUntilOverseerDesignateIsLeader(cloudClient.getZkStateReader().getZkClient(),designates,MAX_WAIT_TIME);
        if (!success) {
          leader=OverseerCollectionConfigSetProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
          if (leader == null)           log.error("NOOVERSEER election queue is :" + OverseerCollectionConfigSetProcessor.getSortedElectionNodes(cloudClient.getZkStateReader().getZkClient(),"/overseer_elect/election"));
          fail("No overseer designate as leader found after restart #" + (i + 1) + ": "+ leader);
        }
      }
      assertTrue("Unable to restart (#" + i + "): "+ cloudJetty,ChaosMonkey.start(cloudJetty.jetty));
      boolean success=waitUntilOverseerDesignateIsLeader(cloudClient.getZkStateReader().getZkClient(),designates,MAX_WAIT_TIME);
      if (!success) {
        leader=OverseerCollectionConfigSetProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
        if (leader == null)         log.error("NOOVERSEER election queue is :" + OverseerCollectionConfigSetProcessor.getSortedElectionNodes(cloudClient.getZkStateReader().getZkClient(),"/overseer_elect/election"));
        fail("No overseer leader found after restart #" + (i + 1) + ": "+ leader);
      }
      cloudClient.getZkStateReader().updateLiveNodes();
      sawLiveDesignate=CollectionUtils.intersection(cloudClient.getZkStateReader().getClusterState().getLiveNodes(),designates).size() > 0;
    }
  }
  assertTrue("Test may not be working if we never saw a live designate",sawLiveDesignate);
  leader=OverseerCollectionConfigSetProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
  assertNotNull(leader);
  log.info("Current overseer leader (after restart) = {}",leader);
  cloudClient.getZkStateReader().getZkClient().printLayoutToStdOut();
}
