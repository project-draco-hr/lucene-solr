{
  String leader=OverseerCollectionProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
  assertNotNull(leader);
  log.info("Current overseer leader = {}",leader);
  cloudClient.getZkStateReader().getZkClient().printLayoutToStdOut();
  int numOverseers=3;
  List<String> designates=new ArrayList<>();
  List<CloudJettyRunner> overseerDesignates=new ArrayList<>();
  for (int i=0; i < numOverseers; i++) {
    int n=random().nextInt(shardCount);
    String nodeName=cloudJettys.get(n).nodeName;
    log.info("Chose {} as overseer designate",nodeName);
    invokeCollectionApi(CollectionParams.ACTION,CollectionParams.CollectionAction.ADDROLE.toLower(),"role","overseer","node",nodeName);
    designates.add(nodeName);
    overseerDesignates.add(cloudJettys.get(n));
  }
  waitUntilOverseerDesignateIsLeader(cloudClient.getZkStateReader().getZkClient(),designates,MAX_WAIT_TIME);
  cloudClient.getZkStateReader().getZkClient().printLayoutToStdOut();
  int numRestarts=4;
  for (int i=0; i < numRestarts; i++) {
    log.info("Rolling restart #{}",i + 1);
    for (    CloudJettyRunner cloudJetty : overseerDesignates) {
      log.info("Restarting {}",cloudJetty);
      chaosMonkey.stopJetty(cloudJetty);
      boolean success=waitUntilOverseerDesignateIsLeader(cloudClient.getZkStateReader().getZkClient(),designates,MAX_WAIT_TIME);
      if (!success) {
        leader=OverseerCollectionProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
        if (leader == null)         log.error("NOOVERSEER election queue is :" + OverseerCollectionProcessor.getSortedElectionNodes(cloudClient.getZkStateReader().getZkClient()));
        fail("No overseer designate as leader found after restart #" + (i + 1) + ": "+ leader);
      }
      assertTrue("Unable to restart (#" + i + "): "+ cloudJetty,ChaosMonkey.start(cloudJetty.jetty));
      success=waitUntilOverseerDesignateIsLeader(cloudClient.getZkStateReader().getZkClient(),designates,MAX_WAIT_TIME);
      if (!success) {
        leader=OverseerCollectionProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
        if (leader == null)         log.error("NOOVERSEER election queue is :" + OverseerCollectionProcessor.getSortedElectionNodes(cloudClient.getZkStateReader().getZkClient()));
        fail("No overseer leader found after restart #" + (i + 1) + ": "+ leader);
      }
    }
  }
  leader=OverseerCollectionProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
  assertNotNull(leader);
  log.info("Current overseer leader (after restart) = {}",leader);
  cloudClient.getZkStateReader().getZkClient().printLayoutToStdOut();
}
