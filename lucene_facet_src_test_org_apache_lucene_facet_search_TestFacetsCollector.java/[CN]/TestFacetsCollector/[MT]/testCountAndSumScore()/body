{
  Directory indexDir=newDirectory();
  Directory taxoDir=newDirectory();
  TaxonomyWriter taxonomyWriter=new DirectoryTaxonomyWriter(taxoDir);
  IndexWriter iw=new IndexWriter(indexDir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())));
  FacetIndexingParams fip=new PerDimensionIndexingParams(Collections.singletonMap(new FacetLabel("b"),new CategoryListParams("$b")));
  FacetFields facetFields=new FacetFields(taxonomyWriter,fip);
  for (int i=atLeast(30); i > 0; --i) {
    Document doc=new Document();
    doc.add(new StringField("f","v",Store.NO));
    List<FacetLabel> cats=new ArrayList<FacetLabel>();
    cats.add(new FacetLabel("a"));
    cats.add(new FacetLabel("b"));
    facetFields.addFields(doc,cats);
    iw.addDocument(doc);
  }
  taxonomyWriter.close();
  iw.close();
  DirectoryReader r=DirectoryReader.open(indexDir);
  DirectoryTaxonomyReader taxo=new DirectoryTaxonomyReader(taxoDir);
  FacetSearchParams sParams=new FacetSearchParams(fip,new CountFacetRequest(new FacetLabel("a"),10),new SumScoreFacetRequest(new FacetLabel("b"),10));
  FacetsCollector fc=FacetsCollector.create(sParams,r,taxo);
  TopScoreDocCollector topDocs=TopScoreDocCollector.create(10,false);
  newSearcher(r).search(new MatchAllDocsQuery(),MultiCollector.wrap(fc,topDocs));
  List<FacetResult> facetResults=fc.getFacetResults();
  FacetResult fresA=facetResults.get(0);
  assertEquals("unexpected count for " + fresA,r.maxDoc(),(int)fresA.getFacetResultNode().value);
  FacetResult fresB=facetResults.get(1);
  double expected=topDocs.topDocs().getMaxScore() * r.numDocs();
  assertEquals("unexpected value for " + fresB,expected,fresB.getFacetResultNode().value,1E-10);
  IOUtils.close(taxo,taxoDir,r,indexDir);
}
