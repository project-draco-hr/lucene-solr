{
  MultiPassIndexSplitter splitter=new MultiPassIndexSplitter();
  Directory[] dirs=new Directory[]{newDirectory(),newDirectory(),newDirectory()};
  splitter.split(input,dirs,false);
  IndexReader ir;
  ir=DirectoryReader.open(dirs[0]);
  assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);
  StoredDocument doc=ir.document(0);
  assertEquals("0",doc.get("id"));
  TermsEnum te=MultiFields.getTerms(ir,"id").iterator(null);
  assertEquals(TermsEnum.SeekStatus.NOT_FOUND,te.seekCeil(new BytesRef("1")));
  assertNotSame("1",te.term().utf8ToString());
  ir.close();
  ir=DirectoryReader.open(dirs[1]);
  assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);
  doc=ir.document(0);
  assertEquals("1",doc.get("id"));
  te=MultiFields.getTerms(ir,"id").iterator(null);
  assertEquals(TermsEnum.SeekStatus.NOT_FOUND,te.seekCeil(new BytesRef("0")));
  assertNotSame("0",te.term().utf8ToString());
  ir.close();
  ir=DirectoryReader.open(dirs[2]);
  assertTrue(ir.numDocs() - NUM_DOCS / 3 <= 1);
  doc=ir.document(0);
  assertEquals("2",doc.get("id"));
  te=MultiFields.getTerms(ir,"id").iterator(null);
  assertEquals(TermsEnum.SeekStatus.NOT_FOUND,te.seekCeil(new BytesRef("1")));
  assertNotSame("1",te.term());
  assertEquals(TermsEnum.SeekStatus.NOT_FOUND,te.seekCeil(new BytesRef("0")));
  assertNotSame("0",te.term().utf8ToString());
  ir.close();
  for (  Directory d : dirs)   d.close();
}
