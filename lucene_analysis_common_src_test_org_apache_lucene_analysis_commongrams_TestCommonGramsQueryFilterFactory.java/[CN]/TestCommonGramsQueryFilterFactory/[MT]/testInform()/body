{
  ResourceLoader loader=new ClasspathResourceLoader(TestStopFilter.class);
  assertTrue("loader is null and it shouldn't be",loader != null);
  CommonGramsQueryFilterFactory factory=(CommonGramsQueryFilterFactory)tokenFilterFactory("CommonGramsQuery",Version.LATEST,loader,"words","stop-1.txt","ignoreCase","true");
  CharArraySet words=factory.getCommonWords();
  assertTrue("words is null and it shouldn't be",words != null);
  assertTrue("words Size: " + words.size() + " is not: "+ 2,words.size() == 2);
  assertTrue(factory.isIgnoreCase() + " does not equal: " + true,factory.isIgnoreCase() == true);
  factory=(CommonGramsQueryFilterFactory)tokenFilterFactory("CommonGramsQuery",Version.LATEST,loader,"words","stop-1.txt, stop-2.txt","ignoreCase","true");
  words=factory.getCommonWords();
  assertTrue("words is null and it shouldn't be",words != null);
  assertTrue("words Size: " + words.size() + " is not: "+ 4,words.size() == 4);
  assertTrue(factory.isIgnoreCase() + " does not equal: " + true,factory.isIgnoreCase() == true);
  factory=(CommonGramsQueryFilterFactory)tokenFilterFactory("CommonGramsQuery",Version.LATEST,loader,"words","stop-snowball.txt","format","snowball","ignoreCase","true");
  words=factory.getCommonWords();
  assertEquals(8,words.size());
  assertTrue(words.contains("he"));
  assertTrue(words.contains("him"));
  assertTrue(words.contains("his"));
  assertTrue(words.contains("himself"));
  assertTrue(words.contains("she"));
  assertTrue(words.contains("her"));
  assertTrue(words.contains("hers"));
  assertTrue(words.contains("herself"));
}
