{
  boolean testFinished=false;
  try {
    handle.clear();
    handle.put("timestamp",SKIPVAL);
    testNodeWithoutCollectionForwarding();
    indexr(id,1,i1,100,tlong,100,t1,"now is the time for all good men","foo_f",1.414f,"foo_b","true","foo_d",1.414d);
    commit();
    waitForRecoveriesToFinish(false);
    assertDocCounts(false);
    indexAbunchOfDocs();
    waitForRecoveriesToFinish(false);
    commit();
    assertDocCounts(VERBOSE);
    checkQueries();
    assertDocCounts(VERBOSE);
    query("q","*:*","sort","n_tl1 desc");
    brindDownShardIndexSomeDocsAndRecover();
    query("q","*:*","sort","n_tl1 desc");
    addNewReplica();
    long docId=testUpdateAndDelete();
    try {
      indexr(t1,"a doc with no id");
      fail("this should fail");
    }
 catch (    SolrException e) {
    }
    ZkStateReader zkStateReader=cloudClient.getZkStateReader();
    ZkNodeProps leaderProps=zkStateReader.getLeaderRetry(DEFAULT_COLLECTION,SHARD2);
    String nodeName=leaderProps.getStr(ZkStateReader.NODE_NAME_PROP);
    chaosMonkey.stopShardExcept(SHARD2,nodeName);
    SolrClient client=getClient(nodeName);
    index_specific(client,"id",docId + 1,t1,"what happens here?");
    CloudJettyRunner cloudJetty=shardToJetty.get(SHARD1).get(0);
    chaosMonkey.expireSession(cloudJetty.jetty);
    indexr("id",docId + 1,t1,"slip this doc in");
    waitForRecoveriesToFinish(false);
    checkShardConsistency(SHARD1);
    checkShardConsistency(SHARD2);
    testFinished=true;
  }
  finally {
    if (!testFinished) {
      printLayoutOnTearDown=true;
    }
  }
}
