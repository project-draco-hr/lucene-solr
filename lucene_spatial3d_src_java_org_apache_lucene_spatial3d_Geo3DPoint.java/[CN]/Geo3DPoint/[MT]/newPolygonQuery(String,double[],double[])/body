{
  if (polyLatitudes.length != polyLongitudes.length) {
    throw new IllegalArgumentException("same number of latitudes and longitudes required");
  }
  if (polyLatitudes.length < 4) {
    throw new IllegalArgumentException("need three or more points");
  }
  if (polyLatitudes[0] != polyLatitudes[polyLatitudes.length - 1] || polyLongitudes[0] != polyLongitudes[polyLongitudes.length - 1]) {
    throw new IllegalArgumentException("last point must equal first point");
  }
  final List<GeoPoint> polyPoints=new ArrayList<>(polyLatitudes.length - 1);
  for (int i=0; i < polyLatitudes.length - 1; i++) {
    final double latitude=polyLatitudes[i];
    final double longitude=polyLongitudes[i];
    checkLatitude(latitude);
    checkLongitude(longitude);
    polyPoints.add(new GeoPoint(PlanetModel.WGS84,fromDegrees(latitude),fromDegrees(longitude)));
  }
  final GeoShape shape=GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84,polyPoints,null);
  return newShapeQuery(field,shape);
}
