{
  if (log.isInfoEnabled()) {
    log.info("makePath: " + path);
  }
  boolean retry=true;
  if (path.startsWith("/")) {
    path=path.substring(1,path.length());
  }
  String[] paths=path.split("/");
  StringBuilder sbPath=new StringBuilder();
  for (int i=0; i < paths.length; i++) {
    byte[] bytes=null;
    String pathPiece=paths[i];
    sbPath.append("/" + pathPiece);
    final String currentPath=sbPath.toString();
    Object exists=exists(currentPath,watcher,retryOnConnLoss);
    if (exists == null || ((i == paths.length - 1) && failOnExists)) {
      CreateMode mode=CreateMode.PERSISTENT;
      if (i == paths.length - 1) {
        mode=createMode;
        bytes=data;
        if (!retryOnConnLoss)         retry=false;
      }
      try {
        if (retry) {
          final CreateMode finalMode=mode;
          final byte[] finalBytes=bytes;
          zkCmdExecutor.retryOperation(new ZkOperation(){
            @Override public Object execute() throws KeeperException, InterruptedException {
              keeper.create(currentPath,finalBytes,ZooDefs.Ids.OPEN_ACL_UNSAFE,finalMode);
              return null;
            }
          }
);
        }
 else {
          keeper.create(currentPath,bytes,ZooDefs.Ids.OPEN_ACL_UNSAFE,mode);
        }
      }
 catch (      NodeExistsException e) {
        if (!failOnExists) {
          setData(currentPath,data,-1,retryOnConnLoss);
          exists(currentPath,watcher,retryOnConnLoss);
          return;
        }
        if (i == paths.length - 1) {
          throw e;
        }
      }
      if (i == paths.length - 1) {
        exists(currentPath,watcher,retryOnConnLoss);
      }
    }
 else     if (i == paths.length - 1) {
      setData(currentPath,data,-1,retryOnConnLoss);
      exists(currentPath,watcher,retryOnConnLoss);
    }
  }
}
