{
  this.zkClientConnectionStrategy=strat;
  this.zkClientTimeout=zkClientTimeout;
  zkCmdExecutor=new ZkCmdExecutor(zkClientTimeout);
  connManager=new ConnectionManager("ZooKeeperConnection Watcher:" + zkServerAddress,this,zkServerAddress,strat,onReconnect,beforeReconnect);
  try {
    strat.connect(zkServerAddress,zkClientTimeout,connManager,new ZkUpdate(){
      @Override public void update(      SolrZooKeeper zooKeeper){
        SolrZooKeeper oldKeeper=keeper;
        keeper=zooKeeper;
        try {
          closeKeeper(oldKeeper);
        }
  finally {
          if (isClosed) {
            closeKeeper(SolrZkClient.this.keeper);
          }
        }
      }
    }
);
  }
 catch (  Exception e) {
    connManager.close();
    if (keeper != null) {
      try {
        keeper.close();
      }
 catch (      InterruptedException e1) {
        Thread.currentThread().interrupt();
      }
    }
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,e);
  }
  try {
    connManager.waitForConnected(clientConnectTimeout);
  }
 catch (  Exception e) {
    connManager.close();
    try {
      keeper.close();
    }
 catch (    InterruptedException e1) {
      Thread.currentThread().interrupt();
    }
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,e);
  }
  numOpens.incrementAndGet();
}
