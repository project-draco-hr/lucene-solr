{
  waitForThingsToLevelOut(10);
  byte[] bytes=Utils.toJSON(makeMap("authorization",singletonMap("class",MockAuthorizationPlugin.class.getName()),"authentication",singletonMap("class",MockAuthenticationPlugin.class.getName())));
  try (ZkStateReader zkStateReader=new ZkStateReader(zkServer.getZkAddress(),TIMEOUT,TIMEOUT)){
    zkStateReader.getZkClient().setData(ZkStateReader.SOLR_SECURITY_CONF_PATH,bytes,true);
  }
   for (  JettySolrRunner jetty : jettys) {
    String baseUrl=jetty.getBaseUrl().toString();
    verifySecurityStatus(cloudClient.getLbClient().getHttpClient(),baseUrl + "/admin/authorization","authorization/class",MockAuthorizationPlugin.class.getName(),20);
    verifySecurityStatus(cloudClient.getLbClient().getHttpClient(),baseUrl + "/admin/authentication","authentication.enabled","true",20);
  }
  log.info("Starting test");
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add("q","*:*");
  params.add("__user","solr");
  params.add("__pwd","SolrRocks");
  final AtomicInteger count=new AtomicInteger();
  MockAuthorizationPlugin.predicate=new Predicate<AuthorizationContext>(){
    @Override public boolean test(    AuthorizationContext context){
      if ("/select".equals(context.getResource())) {
        Principal principal=context.getUserPrincipal();
        log.info("principalIs : {}",principal);
        if (principal != null && principal.getName().equals("solr")) {
          count.incrementAndGet();
        }
      }
      return true;
    }
  }
;
  MockAuthenticationPlugin.predicate=new Predicate<ServletRequest>(){
    @Override public boolean test(    ServletRequest servletRequest){
      String s=((HttpServletRequest)servletRequest).getQueryString();
      if (s != null && s.contains("__user=solr") && s.contains("__pwd=SolrRocks")) {
        servletRequest.setAttribute(Principal.class.getName(),"solr");
      }
      return true;
    }
  }
;
  QueryRequest query=new QueryRequest(params);
  query.process(cloudClient);
  assertTrue("all nodes must get the user solr , no:of nodes got solr : " + count.get(),count.get() > 2);
}
