{
  ArrayList<ClassificationResult<BytesRef>> ret=new ArrayList<>();
  for (  BytesRef cclass : cclasses) {
    ClassificationResult<BytesRef> cr=new ClassificationResult<>(cclass,0d);
    ret.add(cr);
  }
  for (  String word : tokenizedDoc) {
    Map<BytesRef,Integer> hitsInClasses=getWordFreqForClassess(word);
    for (    BytesRef cclass : cclasses) {
      Integer hitsI=hitsInClasses.get(cclass);
      int hits=0;
      if (hitsI != null) {
        hits=hitsI;
      }
      double num=hits + 1;
      double den=classTermFreq.get(cclass) + docsWithClassSize;
      double wordProbability=num / den;
      int removeIdx=-1;
      int i=0;
      for (      ClassificationResult<BytesRef> cr : ret) {
        if (cr.getAssignedClass().equals(cclass)) {
          removeIdx=i;
          break;
        }
        i++;
      }
      if (removeIdx >= 0) {
        ClassificationResult<BytesRef> toRemove=ret.get(removeIdx);
        ret.add(new ClassificationResult<>(toRemove.getAssignedClass(),toRemove.getScore() + Math.log(wordProbability)));
        ret.remove(removeIdx);
      }
    }
  }
  return ret;
}
