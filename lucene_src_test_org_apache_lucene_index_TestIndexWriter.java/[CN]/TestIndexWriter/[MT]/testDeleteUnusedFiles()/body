{
  for (int iter=0; iter < 2; iter++) {
    Directory dir=newDirectory();
    IndexWriter w=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()));
    ((LogMergePolicy)w.getMergePolicy()).setUseCompoundFile(true);
    Document doc=new Document();
    doc.add(new Field("field","go",Field.Store.NO,Field.Index.ANALYZED));
    w.addDocument(doc);
    IndexReader r;
    if (iter == 0) {
      r=w.getReader();
    }
 else {
      w.commit();
      r=IndexReader.open(dir);
    }
    List<String> files=Arrays.asList(dir.listAll());
    assertTrue(files.contains("_0.cfs"));
    w.addDocument(doc);
    w.optimize();
    if (iter == 1) {
      w.commit();
    }
    IndexReader r2=r.reopen();
    assertTrue(r != r2);
    files=Arrays.asList(dir.listAll());
    assertTrue(files.contains("_0.cfs"));
    assertTrue(files.contains("_2.cfs"));
    w.deleteUnusedFiles();
    files=Arrays.asList(dir.listAll());
    assertTrue(files.contains("_0.cfs"));
    assertTrue(files.contains("_2.cfs"));
    r.close();
    if (iter == 0) {
      files=Arrays.asList(dir.listAll());
      assertFalse(files.contains("_0.cfs"));
    }
 else {
      w.deleteUnusedFiles();
      files=Arrays.asList(dir.listAll());
      assertFalse(files.contains("_0.cfs"));
    }
    assertTrue(files.contains("_2.cfs"));
    w.close();
    r2.close();
    dir.close();
  }
}
