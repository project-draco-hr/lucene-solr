{
  final int len=offset + count;
  boolean hasIllegal=false;
  if (offset > 0 && buffer[offset] >= 0xdc00 && buffer[offset] < 0xe000)   offset--;
  for (int i=offset; i < len; i++) {
    int t=nextInt(6);
    if (0 == t && i < len - 1) {
      expected[i]=buffer[i++]=(char)nextInt(0xd800,0xdc00);
      expected[i]=buffer[i]=(char)nextInt(0xdc00,0xe000);
    }
 else     if (t <= 1)     expected[i]=buffer[i]=(char)nextInt(0x80);
 else     if (2 == t)     expected[i]=buffer[i]=(char)nextInt(0x80,0x800);
 else     if (3 == t)     expected[i]=buffer[i]=(char)nextInt(0x800,0xd800);
 else     if (4 == t)     expected[i]=buffer[i]=(char)nextInt(0xe000,0xffff);
 else     if (5 == t && i < len - 1) {
      if (nextInt(10) == 7) {
        if (random.nextBoolean())         buffer[i]=(char)nextInt(0xd800,0xdc00);
 else         buffer[i]=(char)nextInt(0xdc00,0xe000);
        expected[i++]=0xfffd;
        expected[i]=buffer[i]=(char)nextInt(0x800,0xd800);
        hasIllegal=true;
      }
 else       expected[i]=buffer[i]=(char)nextInt(0x800,0xd800);
    }
 else {
      expected[i]=buffer[i]=' ';
    }
  }
  return hasIllegal;
}
