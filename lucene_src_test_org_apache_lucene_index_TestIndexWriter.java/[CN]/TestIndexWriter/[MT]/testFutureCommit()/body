{
  Directory dir=new MockRAMDirectory();
  IndexWriter w=new IndexWriter(dir,newIndexWriterConfig(random,TEST_VERSION_CURRENT,new MockAnalyzer()).setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));
  Document doc=new Document();
  w.addDocument(doc);
  Map<String,String> commitData=new HashMap<String,String>();
  commitData.put("tag","first");
  w.commit(commitData);
  w.addDocument(doc);
  commitData.put("tag","second");
  w.commit(commitData);
  w.close();
  IndexCommit commit=null;
  for (  IndexCommit c : IndexReader.listCommits(dir)) {
    if (c.getUserData().get("tag").equals("first")) {
      commit=c;
      break;
    }
  }
  assertNotNull(commit);
  w=new IndexWriter(dir,newIndexWriterConfig(random,TEST_VERSION_CURRENT,new MockAnalyzer()).setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE).setIndexCommit(commit));
  assertEquals(1,w.numDocs());
  w.addDocument(doc);
  commitData.put("tag","third");
  w.commit(commitData);
  w.close();
  commit=null;
  for (  IndexCommit c : IndexReader.listCommits(dir)) {
    if (c.getUserData().get("tag").equals("second")) {
      commit=c;
      break;
    }
  }
  assertNotNull(commit);
  IndexReader r=IndexReader.open(commit,true);
  assertEquals(2,r.numDocs());
  r.close();
  r=IndexReader.open(commit,NoDeletionPolicy.INSTANCE,false);
  assertEquals(2,r.numDocs());
  r.deleteDocument(0);
  r.deleteDocument(1);
  commitData.put("tag","fourth");
  r.commit(commitData);
  r.close();
  commit=null;
  for (  IndexCommit c : IndexReader.listCommits(dir)) {
    if (c.getUserData().get("tag").equals("third")) {
      commit=c;
      break;
    }
  }
  assertNotNull(commit);
  dir.close();
}
