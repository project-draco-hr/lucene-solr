{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));
  String[] files=dir.listAll();
  writer.setInfoStream(VERBOSE ? System.out : null);
  final int extraFileCount;
  if (files.length == 1) {
    assertEquals("write.lock",files[0]);
    extraFileCount=1;
  }
 else {
    assertEquals(0,files.length);
    extraFileCount=0;
  }
  Document doc=new Document();
  doc.add(newField("c","val",Store.YES,Index.ANALYZED,TermVector.WITH_POSITIONS_OFFSETS));
  writer.addDocument(doc);
  assertEquals("only the stored and term vector files should exist in the directory",5 + extraFileCount,dir.listAll().length);
  doc=new Document();
  doc.add(newField("c","val",Store.YES,Index.ANALYZED,TermVector.WITH_POSITIONS_OFFSETS));
  writer.addDocument(doc);
  assertTrue("flush should have occurred and files should have been created",dir.listAll().length > 5 + extraFileCount);
  writer.rollback();
  assertEquals("no files should exist in the directory after rollback",0,dir.listAll().length);
  writer.close();
  assertEquals("expected a no-op close after IW.rollback()",0,dir.listAll().length);
  dir.close();
}
