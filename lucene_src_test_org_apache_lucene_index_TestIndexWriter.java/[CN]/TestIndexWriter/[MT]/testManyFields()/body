{
  MockDirectoryWrapper dir=newDirectory(random);
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(random,TEST_VERSION_CURRENT,new MockAnalyzer()).setMaxBufferedDocs(10));
  for (int j=0; j < 100; j++) {
    Document doc=new Document();
    doc.add(new Field("a" + j,"aaa" + j,Field.Store.YES,Field.Index.ANALYZED));
    doc.add(new Field("b" + j,"aaa" + j,Field.Store.YES,Field.Index.ANALYZED));
    doc.add(new Field("c" + j,"aaa" + j,Field.Store.YES,Field.Index.ANALYZED));
    doc.add(new Field("d" + j,"aaa",Field.Store.YES,Field.Index.ANALYZED));
    doc.add(new Field("e" + j,"aaa",Field.Store.YES,Field.Index.ANALYZED));
    doc.add(new Field("f" + j,"aaa",Field.Store.YES,Field.Index.ANALYZED));
    writer.addDocument(doc);
  }
  writer.close();
  IndexReader reader=IndexReader.open(dir,true);
  assertEquals(100,reader.maxDoc());
  assertEquals(100,reader.numDocs());
  for (int j=0; j < 100; j++) {
    assertEquals(1,reader.docFreq(new Term("a" + j,"aaa" + j)));
    assertEquals(1,reader.docFreq(new Term("b" + j,"aaa" + j)));
    assertEquals(1,reader.docFreq(new Term("c" + j,"aaa" + j)));
    assertEquals(1,reader.docFreq(new Term("d" + j,"aaa")));
    assertEquals(1,reader.docFreq(new Term("e" + j,"aaa")));
    assertEquals(1,reader.docFreq(new Term("f" + j,"aaa")));
  }
  reader.close();
  dir.close();
}
