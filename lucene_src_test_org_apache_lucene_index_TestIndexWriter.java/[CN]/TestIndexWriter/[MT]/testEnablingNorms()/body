{
  MockDirectoryWrapper dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMaxBufferedDocs(10));
  FieldType customType=new FieldType(TextField.TYPE_STORED);
  customType.setOmitNorms(true);
  for (int j=0; j < 10; j++) {
    Document doc=new Document();
    Field f=null;
    if (j != 8) {
      f=newField("field","aaa",customType);
    }
 else {
      f=newField("field","aaa",storedTextType);
    }
    doc.add(f);
    writer.addDocument(doc);
  }
  writer.close();
  Term searchTerm=new Term("field","aaa");
  IndexSearcher searcher=new IndexSearcher(dir,false);
  ScoreDoc[] hits=searcher.search(new TermQuery(searchTerm),null,1000).scoreDocs;
  assertEquals(10,hits.length);
  searcher.close();
  writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));
  for (int j=0; j < 27; j++) {
    Document doc=new Document();
    Field f=null;
    if (j != 26) {
      f=newField("field","aaa",customType);
    }
 else {
      f=newField("field","aaa",storedTextType);
    }
    doc.add(f);
    writer.addDocument(doc);
  }
  writer.close();
  searcher=new IndexSearcher(dir,false);
  hits=searcher.search(new TermQuery(searchTerm),null,1000).scoreDocs;
  assertEquals(27,hits.length);
  searcher.close();
  IndexReader reader=IndexReader.open(dir,true);
  reader.close();
  dir.close();
}
