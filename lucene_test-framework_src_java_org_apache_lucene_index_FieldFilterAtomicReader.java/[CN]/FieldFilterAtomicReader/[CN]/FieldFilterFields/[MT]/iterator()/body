{
  final Iterator<String> in=super.iterator();
  return new Iterator<String>(){
    private String cached=null;
    @Override public String next(){
      if (cached != null) {
        String next=cached;
        cached=null;
        return next;
      }
 else {
        String next=doNext();
        if (next == null) {
          throw new NoSuchElementException();
        }
 else {
          return next;
        }
      }
    }
    @Override public boolean hasNext(){
      return cached != null || (cached=doNext()) != null;
    }
    private String doNext(){
      while (in.hasNext()) {
        String field=in.next();
        if (hasField(field)) {
          return field;
        }
      }
      return null;
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
