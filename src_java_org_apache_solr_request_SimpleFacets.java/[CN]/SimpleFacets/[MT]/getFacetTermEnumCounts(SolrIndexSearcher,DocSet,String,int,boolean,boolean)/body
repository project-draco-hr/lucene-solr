{
  IndexSchema schema=searcher.getSchema();
  IndexReader r=searcher.getReader();
  FieldType ft=schema.getFieldType(field);
  Set<CountPair<String,Integer>> counts=new HashSet<CountPair<String,Integer>>();
  if (0 <= limit) {
    counts=new BoundedTreeSet<CountPair<String,Integer>>(limit);
  }
  TermEnum te=r.terms(new Term(field,""));
  do {
    Term t=te.term();
    if (null == t || !t.field().equals(field))     break;
    if (0 < te.docFreq()) {
      int count=searcher.numDocs(new TermQuery(t),docs);
      if (zeros || 0 < count)       counts.add(new CountPair<String,Integer>(t.text(),count));
    }
  }
 while (te.next());
  NamedList res=new NamedList();
  for (  CountPair<String,Integer> p : counts) {
    res.add(ft.indexedToReadable(p.key),p.val);
  }
  if (missing) {
    res.add(null,getFieldMissingCount(searcher,docs,field));
  }
  return res;
}
