{
  int openParens=0;
  boolean isDoubleQuote=false;
  boolean isSingleQuote=false;
  boolean isEscaped=false;
  for (int idx=0; idx < clause.length(); ++idx) {
    char c=clause.charAt(idx);
switch (c) {
case '\\':
      isEscaped=!isEscaped;
    break;
case '"':
  if (!isEscaped && !isSingleQuote) {
    isDoubleQuote=!isDoubleQuote;
  }
isEscaped=false;
break;
case '\'':
if (!isEscaped && !isDoubleQuote) {
isSingleQuote=!isSingleQuote;
}
isEscaped=false;
break;
case '(':
if (!isEscaped && !isSingleQuote && !isDoubleQuote) {
openParens+=1;
}
isEscaped=false;
break;
case ')':
if (!isEscaped && !isSingleQuote && !isDoubleQuote) {
openParens-=1;
if (openParens < 0) {
return false;
}
}
isEscaped=false;
break;
default :
isEscaped=false;
}
}
return (0 == openParens);
}
