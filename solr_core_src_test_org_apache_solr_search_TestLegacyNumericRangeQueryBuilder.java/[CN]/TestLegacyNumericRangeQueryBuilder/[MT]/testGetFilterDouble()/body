{
  LegacyNumericRangeQueryBuilder filterBuilder=new LegacyNumericRangeQueryBuilder();
  String xml="<LegacyNumericRangeQuery fieldName='AGE' type='doubLe' lowerTerm='-23.21' upperTerm='60000.00023'/>";
  Document doc=getDocumentFromString(xml);
  Query filter=filterBuilder.getQuery(doc.getDocumentElement());
  assertTrue(filter instanceof LegacyNumericRangeQuery<?>);
  LegacyNumericRangeQuery<Double> numRangeFilter=(LegacyNumericRangeQuery)filter;
  assertEquals(Double.valueOf(-23.21d),numRangeFilter.getMin());
  assertEquals(Double.valueOf(60000.00023d),numRangeFilter.getMax());
  assertEquals("AGE",numRangeFilter.getField());
  assertTrue(numRangeFilter.includesMin());
  assertTrue(numRangeFilter.includesMax());
  String xml2="<LegacyNumericRangeQuery fieldName='AGE' type='doubLe' lowerTerm='-23.21' upperTerm='60000.00023' includeUpper='false'/>";
  Document doc2=getDocumentFromString(xml2);
  Query filter2=filterBuilder.getQuery(doc2.getDocumentElement());
  assertTrue(filter2 instanceof LegacyNumericRangeQuery<?>);
  LegacyNumericRangeQuery<Double> numRangeFilter2=(LegacyNumericRangeQuery)filter2;
  assertEquals(Double.valueOf(-23.21d),numRangeFilter2.getMin());
  assertEquals(Double.valueOf(60000.00023d),numRangeFilter2.getMax());
  assertEquals("AGE",numRangeFilter2.getField());
  assertTrue(numRangeFilter2.includesMin());
  assertFalse(numRangeFilter2.includesMax());
}
