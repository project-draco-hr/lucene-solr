{
  String solrUrl=cli.getOptionValue("solrUrl",DEFAULT_SOLR_URL);
  if (!solrUrl.endsWith("/"))   solrUrl+="/";
  File configsetsDir=new File(cli.getOptionValue("configsetsDir"));
  if (!configsetsDir.isDirectory())   throw new FileNotFoundException(configsetsDir.getAbsolutePath() + " not found!");
  String configSet=cli.getOptionValue("confdir",DEFAULT_CONFIG_SET);
  File configSetDir=new File(configsetsDir,configSet);
  if (!configSetDir.isDirectory()) {
    File possibleConfigDir=new File(configSet);
    if (possibleConfigDir.isDirectory()) {
      configSetDir=possibleConfigDir;
    }
 else {
      throw new FileNotFoundException("Specified config directory " + configSet + " not found in "+ configsetsDir.getAbsolutePath());
    }
  }
  String coreName=cli.getOptionValue(NAME);
  String systemInfoUrl=solrUrl + "admin/info/system";
  CloseableHttpClient httpClient=getHttpClient();
  String solrHome=null;
  try {
    Map<String,Object> systemInfo=getJson(httpClient,systemInfoUrl,2,true);
    if ("solrcloud".equals(systemInfo.get("mode"))) {
      throw new IllegalStateException("Solr at " + solrUrl + " is running in SolrCloud mode, please use create_collection command instead.");
    }
    solrHome=(String)systemInfo.get("solr_home");
    if (solrHome == null)     solrHome=configsetsDir.getParentFile().getAbsolutePath();
  }
  finally {
    closeHttpClient(httpClient);
  }
  String coreStatusUrl=solrUrl + "admin/cores?action=STATUS&core=" + coreName;
  if (safeCheckCoreExists(coreStatusUrl,coreName)) {
    throw new IllegalArgumentException("\nCore '" + coreName + "' already exists!\nChecked core existence using Core API command:\n"+ coreStatusUrl);
  }
  File coreInstanceDir=new File(solrHome,coreName);
  File confDir=new File(configSetDir,"conf");
  if (!coreInstanceDir.isDirectory()) {
    coreInstanceDir.mkdirs();
    if (!coreInstanceDir.isDirectory())     throw new IOException("Failed to create new core instance directory: " + coreInstanceDir.getAbsolutePath());
    if (confDir.isDirectory()) {
      FileUtils.copyDirectoryToDirectory(confDir,coreInstanceDir);
    }
 else {
      if ((new File(configSetDir,"solrconfig.xml")).isFile()) {
        FileUtils.copyDirectory(configSetDir,new File(coreInstanceDir,"conf"));
      }
 else {
        throw new IllegalArgumentException("\n" + configSetDir.getAbsolutePath() + " doesn't contain a conf subdirectory or solrconfig.xml\n");
      }
    }
    echo("\nSetup new core instance directory:\n" + coreInstanceDir.getAbsolutePath());
  }
  String createCoreUrl=String.format(Locale.ROOT,"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s",solrUrl,coreName,coreName);
  echo("\nCreating new core '" + coreName + "' using command:\n"+ createCoreUrl+ "\n");
  Map<String,Object> json=null;
  try {
    json=getJson(createCoreUrl);
  }
 catch (  SolrServerException sse) {
    if (safeCheckCoreExists(coreStatusUrl,coreName)) {
      throw new IllegalArgumentException("Core '" + coreName + "' already exists!\nChecked core existence using Core API command:\n"+ coreStatusUrl);
    }
 else {
      throw sse;
    }
  }
  CharArr arr=new CharArr();
  new JSONWriter(arr,2).write(json);
  echo(arr.toString());
  echo("\n");
}
