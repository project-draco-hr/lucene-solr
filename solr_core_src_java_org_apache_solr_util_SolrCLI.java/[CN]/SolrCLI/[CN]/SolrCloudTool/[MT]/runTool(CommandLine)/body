{
  LogManager.getLogger("org.apache.zookeeper").setLevel(Level.ERROR);
  LogManager.getLogger("org.apache.solr.common.cloud").setLevel(Level.WARN);
  String zkHost=cli.getOptionValue("zkHost",ZK_HOST);
  log.debug("Connecting to Solr cluster: " + zkHost);
  int exitStatus=0;
  CloudSolrServer cloudSolrServer=null;
  try {
    cloudSolrServer=new CloudSolrServer(zkHost);
    String collection=cli.getOptionValue("collection");
    if (collection != null)     cloudSolrServer.setDefaultCollection(collection);
    cloudSolrServer.connect();
    exitStatus=runCloudTool(cloudSolrServer,cli);
  }
 catch (  Exception exc) {
    String excMsg=exc.getMessage();
    if (excMsg != null) {
      System.err.println("\nERROR:" + excMsg + "\n");
      exitStatus=1;
    }
 else {
      throw exc;
    }
  }
 finally {
    if (cloudSolrServer != null) {
      try {
        cloudSolrServer.shutdown();
      }
 catch (      Exception ignore) {
      }
    }
  }
  return exitStatus;
}
