{
  if (args == null || args.length == 0 || args[0] == null || args[0].trim().length() == 0) {
    System.err.println("Invalid command-line args! Must pass the name of a tool to run.\n" + "Supported tools:\n");
    displayToolOptions();
    exit(1);
  }
  if (args.length == 1 && Arrays.asList("-v","-version","version").contains(args[0])) {
    System.out.println(Version.LATEST);
    exit(0);
  }
  String configurerClassName=System.getProperty("solr.authentication.httpclient.configurer");
  if (configurerClassName != null) {
    try {
      Class c=Class.forName(configurerClassName);
      HttpClientConfigurer configurer=(HttpClientConfigurer)c.newInstance();
      HttpClientUtil.setConfigurer(configurer);
      log.info("Set HttpClientConfigurer from: " + configurerClassName);
    }
 catch (    Exception ex) {
      throw new RuntimeException("Error during loading of configurer '" + configurerClassName + "'.",ex);
    }
  }
  String toolType=args[0].trim().toLowerCase(Locale.ROOT);
  Tool tool=newTool(toolType);
  List<String> toolArgList=new ArrayList<String>();
  List<String> dashDList=new ArrayList<String>();
  for (int a=1; a < args.length; a++) {
    String arg=args[a];
    if (arg.startsWith("-D")) {
      dashDList.add(arg);
    }
 else {
      toolArgList.add(arg);
    }
  }
  String[] toolArgs=toolArgList.toArray(new String[0]);
  CommandLine cli=processCommandLineArgs(joinCommonAndToolOptions(tool.getOptions()),toolArgs);
  List argList=cli.getArgList();
  argList.addAll(dashDList);
  String solrInstallDir=System.getProperty("solr.install.dir");
  if (solrInstallDir != null) {
    checkSslStoreSysProp(solrInstallDir,"keyStore");
    checkSslStoreSysProp(solrInstallDir,"trustStore");
  }
  exit(tool.runTool(cli));
}
