{
  try {
    HttpGet httpGet=new HttpGet(new URIBuilder(getUrl).setParameter(CommonParams.WT,CommonParams.JSON).build());
    Map<String,Object> json=httpClient.execute(httpGet,new SolrResponseHandler(),HttpClientUtil.createNewHttpClientRequestContext());
    Long statusCode=asLong("/responseHeader/status",json);
    if (statusCode == -1) {
      throw new SolrServerException("Unable to determine outcome of GET request to: " + getUrl + "! Response: "+ json);
    }
 else     if (statusCode != 0) {
      String errMsg=asString("/error/msg",json);
      if (errMsg == null)       errMsg=String.valueOf(json);
      throw new SolrServerException(errMsg);
    }
 else {
      Object failureObj=json.get("failure");
      if (failureObj != null) {
        if (failureObj instanceof Map) {
          Object err=((Map)failureObj).get("");
          if (err != null)           throw new SolrServerException(err.toString());
        }
        throw new SolrServerException(failureObj.toString());
      }
    }
    return json;
  }
 catch (  ClientProtocolException cpe) {
    if (cpe.getMessage().contains("HTTP ERROR 401") || cpe.getMessage().contentEquals("HTTP ERROR 403")) {
      int code=cpe.getMessage().contains("HTTP ERROR 401") ? 401 : 403;
      throw new SolrException(SolrException.ErrorCode.getErrorCode(code),"Solr requires authentication for " + getUrl + ". Please supply valid credentials. HTTP code="+ code);
    }
 else {
      throw cpe;
    }
  }
}
