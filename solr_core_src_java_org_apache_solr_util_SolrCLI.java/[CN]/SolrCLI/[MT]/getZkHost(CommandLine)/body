{
  String zkHost=cli.getOptionValue("zkHost");
  if (zkHost != null)   return zkHost;
  String solrUrl=cli.getOptionValue("solrUrl");
  if (solrUrl == null)   throw new IllegalStateException("Must provide either the -zkHost or -solrUrl parameters to use the create_collection command!");
  if (!solrUrl.endsWith("/"))   solrUrl+="/";
  String systemInfoUrl=solrUrl + "admin/info/system";
  CloseableHttpClient httpClient=getHttpClient();
  try {
    Map<String,Object> systemInfo=getJson(httpClient,systemInfoUrl,2,true);
    StatusTool statusTool=new StatusTool();
    Map<String,Object> status=statusTool.reportStatus(solrUrl,systemInfo,httpClient);
    Map<String,Object> cloud=(Map<String,Object>)status.get("cloud");
    if (cloud != null) {
      String zookeeper=(String)cloud.get("ZooKeeper");
      if (zookeeper.endsWith("(embedded)")) {
        zookeeper=zookeeper.substring(0,zookeeper.length() - "(embedded)".length());
      }
      zkHost=zookeeper;
    }
  }
  finally {
    HttpClientUtil.close(httpClient);
  }
  return zkHost;
}
