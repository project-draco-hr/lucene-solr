{
  int startsAt=0;
  jjnewStateCnt=49;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 49:
case 33:
          if ((0xfbff7cf8ffffd9ffL & l) == 0L)           break;
        if (kind > 23)         kind=23;
      jjCheckNAddTwoStates(33,34);
    break;
case 0:
  if ((0xfbff54f8ffffd9ffL & l) != 0L) {
    if (kind > 23)     kind=23;
    jjCheckNAddTwoStates(33,34);
  }
 else   if ((0x100002600L & l) != 0L) {
    if (kind > 7)     kind=7;
  }
 else   if ((0x280200000000L & l) != 0L)   jjstateSet[jjnewStateCnt++]=15;
 else   if (curChar == 47)   jjCheckNAddStates(0,2);
 else   if (curChar == 34)   jjCheckNAddStates(3,5);
if ((0x7bff50f8ffffd9ffL & l) != 0L) {
  if (kind > 20)   kind=20;
  jjCheckNAddStates(6,10);
}
 else if (curChar == 42) {
  if (kind > 22)   kind=22;
}
 else if (curChar == 33) {
  if (kind > 10)   kind=10;
}
if (curChar == 38) jjstateSet[jjnewStateCnt++]=4;
break;
case 4:
if (curChar == 38 && kind > 8) kind=8;
break;
case 5:
if (curChar == 38) jjstateSet[jjnewStateCnt++]=4;
break;
case 13:
if (curChar == 33 && kind > 10) kind=10;
break;
case 14:
if ((0x280200000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=15;
break;
case 15:
if ((0x100002600L & l) != 0L && kind > 13) kind=13;
break;
case 16:
if (curChar == 34) jjCheckNAddStates(3,5);
break;
case 17:
if ((0xfffffffbffffffffL & l) != 0L) jjCheckNAddStates(3,5);
break;
case 19:
jjCheckNAddStates(3,5);
break;
case 20:
if (curChar == 34 && kind > 19) kind=19;
break;
case 22:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 21) kind=21;
jjCheckNAddStates(11,14);
break;
case 23:
if (curChar == 46) jjCheckNAdd(24);
break;
case 24:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 21) kind=21;
jjCheckNAddStates(15,17);
break;
case 25:
if ((0x7bff78f8ffffd9ffL & l) == 0L) break;
if (kind > 21) kind=21;
jjCheckNAddTwoStates(25,26);
break;
case 27:
if (kind > 21) kind=21;
jjCheckNAddTwoStates(25,26);
break;
case 28:
if ((0x7bff78f8ffffd9ffL & l) == 0L) break;
if (kind > 21) kind=21;
jjCheckNAddTwoStates(28,29);
break;
case 30:
if (kind > 21) kind=21;
jjCheckNAddTwoStates(28,29);
break;
case 31:
if (curChar == 42 && kind > 22) kind=22;
break;
case 32:
if ((0xfbff54f8ffffd9ffL & l) == 0L) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
break;
case 35:
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
break;
case 36:
case 38:
if (curChar == 47) jjCheckNAddStates(0,2);
break;
case 37:
if ((0xffff7fffffffffffL & l) != 0L) jjCheckNAddStates(0,2);
break;
case 40:
if (curChar == 47 && kind > 24) kind=24;
break;
case 41:
if ((0x7bff50f8ffffd9ffL & l) == 0L) break;
if (kind > 20) kind=20;
jjCheckNAddStates(6,10);
break;
case 42:
if ((0x7bff78f8ffffd9ffL & l) == 0L) break;
if (kind > 20) kind=20;
jjCheckNAddTwoStates(42,43);
break;
case 44:
if (kind > 20) kind=20;
jjCheckNAddTwoStates(42,43);
break;
case 45:
if ((0x7bff78f8ffffd9ffL & l) != 0L) jjCheckNAddStates(18,20);
break;
case 47:
jjCheckNAddStates(18,20);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 49:
if ((0x97ffffff87ffffffL & l) != 0L) {
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
}
 else if (curChar == 92) jjCheckNAddTwoStates(35,35);
break;
case 0:
if ((0x97ffffff87ffffffL & l) != 0L) {
if (kind > 20) kind=20;
jjCheckNAddStates(6,10);
}
 else if (curChar == 92) jjCheckNAddStates(21,23);
 else if (curChar == 126) {
if (kind > 21) kind=21;
jjCheckNAddStates(24,26);
}
if ((0x97ffffff87ffffffL & l) != 0L) {
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
}
if (curChar == 78) jjstateSet[jjnewStateCnt++]=11;
 else if (curChar == 124) jjstateSet[jjnewStateCnt++]=8;
 else if (curChar == 79) jjstateSet[jjnewStateCnt++]=6;
 else if (curChar == 65) jjstateSet[jjnewStateCnt++]=2;
break;
case 1:
if (curChar == 68 && kind > 8) kind=8;
break;
case 2:
if (curChar == 78) jjstateSet[jjnewStateCnt++]=1;
break;
case 3:
if (curChar == 65) jjstateSet[jjnewStateCnt++]=2;
break;
case 6:
if (curChar == 82 && kind > 9) kind=9;
break;
case 7:
if (curChar == 79) jjstateSet[jjnewStateCnt++]=6;
break;
case 8:
if (curChar == 124 && kind > 9) kind=9;
break;
case 9:
if (curChar == 124) jjstateSet[jjnewStateCnt++]=8;
break;
case 10:
if (curChar == 84 && kind > 10) kind=10;
break;
case 11:
if (curChar == 79) jjstateSet[jjnewStateCnt++]=10;
break;
case 12:
if (curChar == 78) jjstateSet[jjnewStateCnt++]=11;
break;
case 17:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAddStates(3,5);
break;
case 18:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=19;
break;
case 19:
jjCheckNAddStates(3,5);
break;
case 21:
if (curChar != 126) break;
if (kind > 21) kind=21;
jjCheckNAddStates(24,26);
break;
case 25:
if ((0x97ffffff87ffffffL & l) == 0L) break;
if (kind > 21) kind=21;
jjCheckNAddTwoStates(25,26);
break;
case 26:
if (curChar == 92) jjAddStates(27,28);
break;
case 27:
if (kind > 21) kind=21;
jjCheckNAddTwoStates(25,26);
break;
case 28:
if ((0x97ffffff87ffffffL & l) == 0L) break;
if (kind > 21) kind=21;
jjCheckNAddTwoStates(28,29);
break;
case 29:
if (curChar == 92) jjAddStates(29,30);
break;
case 30:
if (kind > 21) kind=21;
jjCheckNAddTwoStates(28,29);
break;
case 32:
if ((0x97ffffff87ffffffL & l) == 0L) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
break;
case 33:
if ((0x97ffffff87ffffffL & l) == 0L) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
break;
case 34:
if (curChar == 92) jjCheckNAddTwoStates(35,35);
break;
case 35:
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
break;
case 37:
jjAddStates(0,2);
break;
case 39:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=38;
break;
case 41:
if ((0x97ffffff87ffffffL & l) == 0L) break;
if (kind > 20) kind=20;
jjCheckNAddStates(6,10);
break;
case 42:
if ((0x97ffffff87ffffffL & l) == 0L) break;
if (kind > 20) kind=20;
jjCheckNAddTwoStates(42,43);
break;
case 43:
if (curChar == 92) jjCheckNAddTwoStates(44,44);
break;
case 44:
if (kind > 20) kind=20;
jjCheckNAddTwoStates(42,43);
break;
case 45:
if ((0x97ffffff87ffffffL & l) != 0L) jjCheckNAddStates(18,20);
break;
case 46:
if (curChar == 92) jjCheckNAddTwoStates(47,47);
break;
case 47:
jjCheckNAddStates(18,20);
break;
case 48:
if (curChar == 92) jjCheckNAddStates(21,23);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int hiByte=(int)(curChar >> 8);
int i1=hiByte >> 6;
long l1=1L << (hiByte & 077);
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 49:
case 33:
if (!jjCanMove_2(hiByte,i1,i2,l1,l2)) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
break;
case 0:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) {
if (kind > 7) kind=7;
}
if (jjCanMove_2(hiByte,i1,i2,l1,l2)) {
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
}
if (jjCanMove_2(hiByte,i1,i2,l1,l2)) {
if (kind > 20) kind=20;
jjCheckNAddStates(6,10);
}
break;
case 15:
if (jjCanMove_0(hiByte,i1,i2,l1,l2) && kind > 13) kind=13;
break;
case 17:
case 19:
if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(3,5);
break;
case 25:
if (!jjCanMove_2(hiByte,i1,i2,l1,l2)) break;
if (kind > 21) kind=21;
jjCheckNAddTwoStates(25,26);
break;
case 27:
if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
if (kind > 21) kind=21;
jjCheckNAddTwoStates(25,26);
break;
case 28:
if (!jjCanMove_2(hiByte,i1,i2,l1,l2)) break;
if (kind > 21) kind=21;
jjCheckNAddTwoStates(28,29);
break;
case 30:
if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
if (kind > 21) kind=21;
jjCheckNAddTwoStates(28,29);
break;
case 32:
if (!jjCanMove_2(hiByte,i1,i2,l1,l2)) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
break;
case 35:
if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
if (kind > 23) kind=23;
jjCheckNAddTwoStates(33,34);
break;
case 37:
if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjAddStates(0,2);
break;
case 41:
if (!jjCanMove_2(hiByte,i1,i2,l1,l2)) break;
if (kind > 20) kind=20;
jjCheckNAddStates(6,10);
break;
case 42:
if (!jjCanMove_2(hiByte,i1,i2,l1,l2)) break;
if (kind > 20) kind=20;
jjCheckNAddTwoStates(42,43);
break;
case 44:
if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
if (kind > 20) kind=20;
jjCheckNAddTwoStates(42,43);
break;
case 45:
if (jjCanMove_2(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(18,20);
break;
case 47:
if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(18,20);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=49 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
