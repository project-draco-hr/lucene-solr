{
  Collection<Long> intDate=getLongList("uniquen","fieldFacets","date_dtd","long","int");
  ArrayList<Long> intDateTest=(ArrayList<Long>)calculateStat(intDateTestStart,"unique");
  assertEquals(getRawResponse(),intDate,intDateTest);
  Collection<Long> intString=getLongList("uniquen","fieldFacets","string_sd","long","int");
  ArrayList<Long> intStringTest=(ArrayList<Long>)calculateStat(intStringTestStart,"unique");
  assertEquals(getRawResponse(),intString,intStringTest);
  Collection<Long> longDate=getLongList("uniquen","fieldFacets","date_dtd","long","long");
  ArrayList<Long> longDateTest=(ArrayList<Long>)calculateStat(longDateTestStart,"unique");
  assertEquals(getRawResponse(),longDate,longDateTest);
  Collection<Long> longString=getLongList("uniquen","fieldFacets","string_sd","long","long");
  ArrayList<Long> longStringTest=(ArrayList<Long>)calculateStat(longStringTestStart,"unique");
  assertEquals(getRawResponse(),longString,longStringTest);
  Collection<Long> floatDate=getLongList("uniquen","fieldFacets","date_dtd","long","float");
  ArrayList<Long> floatDateTest=(ArrayList<Long>)calculateStat(floatDateTestStart,"unique");
  assertEquals(getRawResponse(),floatDate,floatDateTest);
  Collection<Long> floatString=getLongList("uniquen","fieldFacets","string_sd","long","float");
  ArrayList<Long> floatStringTest=(ArrayList<Long>)calculateStat(floatStringTestStart,"unique");
  assertEquals(getRawResponse(),floatString,floatStringTest);
  Collection<Long> doubleDate=getLongList("uniquen","fieldFacets","date_dtd","long","double");
  ArrayList<Long> doubleDateTest=(ArrayList<Long>)calculateStat(doubleDateTestStart,"unique");
  assertEquals(getRawResponse(),doubleDate,doubleDateTest);
  Collection<Long> doubleString=getLongList("uniquen","fieldFacets","string_sd","long","double");
  ArrayList<Long> doubleStringTest=(ArrayList<Long>)calculateStat(doubleStringTestStart,"unique");
  assertEquals(getRawResponse(),doubleString,doubleStringTest);
  Collection<Long> dateInt=getLongList("unique","fieldFacets","int_id","long","date");
  ArrayList<Long> dateIntTest=(ArrayList<Long>)calculateStat(dateIntTestStart,"unique");
  assertEquals(getRawResponse(),dateInt,dateIntTest);
  Collection<Long> dateString=getLongList("unique","fieldFacets","long_ld","long","date");
  ArrayList<Long> dateLongTest=(ArrayList<Long>)calculateStat(dateLongTestStart,"unique");
  assertEquals(getRawResponse(),dateString,dateLongTest);
  Collection<Long> stringInt=getLongList("unique","fieldFacets","int_id","long","str");
  ArrayList<Long> stringIntTest=(ArrayList<Long>)calculateStat(stringIntTestStart,"unique");
  assertEquals(getRawResponse(),stringInt,stringIntTest);
  Collection<Long> stringLong=getLongList("unique","fieldFacets","long_ld","long","str");
  ArrayList<Long> stringLongTest=(ArrayList<Long>)calculateStat(stringLongTestStart,"unique");
  assertEquals(getRawResponse(),stringLong,stringLongTest);
}
