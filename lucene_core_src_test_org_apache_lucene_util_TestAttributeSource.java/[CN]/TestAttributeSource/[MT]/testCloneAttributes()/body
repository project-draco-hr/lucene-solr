{
  final AttributeSource src=new AttributeSource();
  final FlagsAttribute flagsAtt=src.addAttribute(FlagsAttribute.class);
  final TypeAttribute typeAtt=src.addAttribute(TypeAttribute.class);
  flagsAtt.setFlags(1234);
  typeAtt.setType("TestType");
  final AttributeSource clone=src.cloneAttributes();
  final Iterator<Class<? extends Attribute>> it=clone.getAttributeClassesIterator();
  assertEquals("FlagsAttribute must be the first attribute",FlagsAttribute.class,it.next());
  assertEquals("TypeAttribute must be the second attribute",TypeAttribute.class,it.next());
  assertFalse("No more attributes",it.hasNext());
  final FlagsAttribute flagsAtt2=clone.getAttribute(FlagsAttribute.class);
  assertNotNull(flagsAtt2);
  final TypeAttribute typeAtt2=clone.getAttribute(TypeAttribute.class);
  assertNotNull(typeAtt2);
  assertNotSame("FlagsAttribute of original and clone must be different instances",flagsAtt2,flagsAtt);
  assertNotSame("TypeAttribute of original and clone must be different instances",typeAtt2,typeAtt);
  assertEquals("FlagsAttribute of original and clone must be equal",flagsAtt2,flagsAtt);
  assertEquals("TypeAttribute of original and clone must be equal",typeAtt2,typeAtt);
  flagsAtt2.setFlags(4711);
  typeAtt2.setType("OtherType");
  clone.copyTo(src);
  assertEquals("FlagsAttribute of original must now contain updated term",4711,flagsAtt.getFlags());
  assertEquals("TypeAttribute of original must now contain updated type","OtherType",typeAtt.type());
  assertNotSame("FlagsAttribute of original and clone must be different instances",flagsAtt2,flagsAtt);
  assertNotSame("TypeAttribute of original and clone must be different instances",typeAtt2,typeAtt);
  assertEquals("FlagsAttribute of original and clone must be equal",flagsAtt2,flagsAtt);
  assertEquals("TypeAttribute of original and clone must be equal",typeAtt2,typeAtt);
}
