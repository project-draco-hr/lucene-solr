{
  List<Class<? extends Attribute>> attrClasses=new ArrayList<>();
  attrClasses.add(CharTermAttribute.class);
  attrClasses.add(OffsetAttribute.class);
  attrClasses.add(FlagsAttribute.class);
  attrClasses.add(PayloadAttribute.class);
  attrClasses.add(PositionIncrementAttribute.class);
  attrClasses.add(TypeAttribute.class);
  AttributeSource defaultFactoryAttributeSource=new AttributeSource();
  assertFalse(defaultFactoryAttributeSource.hasAttributes());
  for (  Class<? extends Attribute> attrClass : attrClasses) {
    defaultFactoryAttributeSource.addAttribute(attrClass);
    assertTrue("Missing added attribute " + attrClass.getSimpleName(),defaultFactoryAttributeSource.hasAttribute(attrClass));
  }
  defaultFactoryAttributeSource.removeAllAttributes();
  for (  Class<? extends Attribute> attrClass : attrClasses) {
    assertFalse("Didn't remove attribute " + attrClass.getSimpleName(),defaultFactoryAttributeSource.hasAttribute(attrClass));
  }
  assertFalse(defaultFactoryAttributeSource.hasAttributes());
  AttributeSource packedImplsAttributeSource=new AttributeSource(TokenStream.DEFAULT_TOKEN_ATTRIBUTE_FACTORY);
  assertFalse(packedImplsAttributeSource.hasAttributes());
  for (  Class<? extends Attribute> attrClass : attrClasses) {
    packedImplsAttributeSource.addAttribute(attrClass);
    assertTrue("Missing added attribute " + attrClass.getSimpleName(),packedImplsAttributeSource.hasAttribute(attrClass));
  }
  packedImplsAttributeSource.removeAllAttributes();
  for (  Class<? extends Attribute> attrClass : attrClasses) {
    assertFalse("Didn't remove attribute " + attrClass.getSimpleName(),packedImplsAttributeSource.hasAttribute(attrClass));
  }
  assertFalse(packedImplsAttributeSource.hasAttributes());
}
