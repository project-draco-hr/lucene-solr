{
  Tuple tuple;
  StreamOperation operation;
  operation=new ConcatOperation(StreamExpressionParser.parse("concat(fields=\"fieldA,fieldB\", as=\"fieldABConcat\", delim=\"-\")"),factory);
  values.clear();
  values.put("fieldA","bar");
  values.put("fieldB","baz");
  values.put("fieldC","bab");
  values.put("fieldD","bat");
  tuple=new Tuple(values);
  operation.operate(tuple);
  Assert.assertNotNull(tuple.get("fieldA"));
  Assert.assertEquals("bar",tuple.get("fieldA"));
  Assert.assertNotNull(tuple.get("fieldB"));
  Assert.assertEquals("baz",tuple.get("fieldB"));
  Assert.assertNotNull(tuple.get("fieldC"));
  Assert.assertEquals("bab",tuple.get("fieldC"));
  Assert.assertNotNull(tuple.get("fieldD"));
  Assert.assertEquals("bat",tuple.get("fieldD"));
  Assert.assertNotNull(tuple.get("fieldABConcat"));
  Assert.assertEquals("bar-baz",tuple.get("fieldABConcat"));
  operation=new ConcatOperation(StreamExpressionParser.parse("concat(fields=\"fieldB,fieldA\", as=\"fieldABConcat\", delim=\"-\")"),factory);
  tuple=new Tuple(values);
  operation.operate(tuple);
  Assert.assertNotNull(tuple.get("fieldA"));
  Assert.assertEquals("bar",tuple.get("fieldA"));
  Assert.assertNotNull(tuple.get("fieldB"));
  Assert.assertEquals("baz",tuple.get("fieldB"));
  Assert.assertNotNull(tuple.get("fieldABConcat"));
  Assert.assertEquals("baz-bar",tuple.get("fieldABConcat"));
}
