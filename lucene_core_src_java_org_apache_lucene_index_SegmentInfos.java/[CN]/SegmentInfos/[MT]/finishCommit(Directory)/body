{
  if (pendingSegnOutput == null) {
    throw new IllegalStateException("prepareCommit was not called");
  }
  boolean success=false;
  try {
    CodecUtil.writeFooter(pendingSegnOutput);
    success=true;
  }
  finally {
    if (!success) {
      rollbackCommit(dir);
    }
 else {
      success=false;
      try {
        pendingSegnOutput.close();
        success=true;
      }
  finally {
        if (!success) {
          rollbackCommit(dir);
        }
 else {
          pendingSegnOutput=null;
        }
      }
    }
  }
  final String fileName=IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,"",generation);
  success=false;
  try {
    dir.sync(Collections.singleton(fileName));
    success=true;
  }
  finally {
    if (!success) {
      IOUtils.deleteFilesIgnoringExceptions(dir,fileName);
    }
  }
  lastGeneration=generation;
  writeSegmentsGen(dir,generation);
}
