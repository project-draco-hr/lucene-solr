{
  if (commit != null) {
    if (directory != commit.getDirectory())     throw new IOException("the specified commit does not match the specified Directory");
    return doBody(commit.getSegmentsFileName());
  }
  long lastGen=-1;
  long gen=-1;
  IOException exc=null;
  for (; ; ) {
    lastGen=gen;
    String files[]=directory.listAll();
    String files2[]=directory.listAll();
    Arrays.sort(files);
    Arrays.sort(files2);
    if (!Arrays.equals(files,files2)) {
      continue;
    }
    gen=getLastCommitGeneration(files);
    if (infoStream != null) {
      message("directory listing gen=" + gen);
    }
    if (gen == -1) {
      throw new IndexNotFoundException("no segments* file found in " + directory + ": files: "+ Arrays.toString(files));
    }
 else     if (gen > lastGen) {
      String segmentFileName=IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,"",gen);
      try {
        T t=doBody(segmentFileName);
        if (infoStream != null) {
          message("success on " + segmentFileName);
        }
        return t;
      }
 catch (      IOException err) {
        if (exc == null) {
          exc=err;
        }
        if (infoStream != null) {
          message("primary Exception on '" + segmentFileName + "': "+ err+ "'; will retry: gen = "+ gen);
        }
      }
    }
 else {
      throw exc;
    }
  }
}
