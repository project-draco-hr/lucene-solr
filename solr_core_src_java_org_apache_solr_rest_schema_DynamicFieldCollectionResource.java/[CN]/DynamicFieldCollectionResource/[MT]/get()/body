{
  try {
    List<SimpleOrderedMap<Object>> props=new ArrayList<SimpleOrderedMap<Object>>();
    if (null == getRequestedFields()) {
      for (      IndexSchema.DynamicField dynamicField : getSchema().getDynamicFields()) {
        if (!dynamicField.getRegex().startsWith(IndexSchema.INTERNAL_POLY_FIELD_PREFIX)) {
          props.add(getFieldProperties(dynamicField.getPrototype()));
        }
      }
    }
 else {
      if (0 == getRequestedFields().size()) {
        String message="Empty " + CommonParams.FL + " parameter value";
        throw new SolrException(ErrorCode.BAD_REQUEST,message);
      }
      Map<String,SchemaField> dynamicFieldsByName=new HashMap<String,SchemaField>();
      for (      IndexSchema.DynamicField dynamicField : getSchema().getDynamicFields()) {
        dynamicFieldsByName.put(dynamicField.getRegex(),dynamicField.getPrototype());
      }
      for (      String dynamicFieldName : getRequestedFields()) {
        final SchemaField dynamicSchemaField=dynamicFieldsByName.get(dynamicFieldName);
        if (null == dynamicSchemaField) {
          log.info("Requested dynamic field '" + dynamicFieldName + "' not found.");
        }
 else {
          props.add(getFieldProperties(dynamicSchemaField));
        }
      }
    }
    getSolrResponse().add(IndexSchema.DYNAMIC_FIELDS,props);
  }
 catch (  Exception e) {
    getSolrResponse().setException(e);
  }
  handlePostExecution(log);
  return new SolrOutputRepresentation();
}
