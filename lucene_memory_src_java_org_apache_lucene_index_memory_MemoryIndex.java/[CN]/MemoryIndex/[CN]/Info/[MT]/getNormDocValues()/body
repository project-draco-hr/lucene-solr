{
  FieldInvertState invertState=new FieldInvertState(fieldInfo.name,fieldInfo.number,numTokens,numOverlapTokens,0,boost);
  final long value=normSimilarity.computeNorm(invertState);
  if (DEBUG)   System.err.println("MemoryIndexReader.norms: " + fieldInfo.name + ":"+ value+ ":"+ numTokens);
  return new NumericDocValues(){
    private int docID=-1;
    @Override public int nextDoc(){
      docID++;
      if (docID == 1) {
        docID=NO_MORE_DOCS;
      }
      return docID;
    }
    @Override public int docID(){
      return docID;
    }
    @Override public int advance(    int target){
      if (docID <= 0 && target == 0) {
        docID=0;
      }
 else {
        docID=NO_MORE_DOCS;
      }
      return docID;
    }
    @Override public boolean advanceExact(    int target) throws IOException {
      docID=target;
      return docID == 0;
    }
    @Override public long cost(){
      return 1;
    }
    @Override public long longValue(){
      return value;
    }
  }
;
}
