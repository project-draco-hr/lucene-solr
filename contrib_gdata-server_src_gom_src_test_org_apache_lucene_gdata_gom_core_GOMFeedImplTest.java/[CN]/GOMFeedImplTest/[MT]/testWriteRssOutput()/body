{
  this.impl.addAuthor(new GOMAuthorImpl());
  this.impl.addCategory(new GOMCategoryImpl());
  this.impl.addContributor(new GOMContributorImpl());
  GOMLinkImpl impl2=new GOMLinkImpl();
  impl2.setHref("test");
  impl2.setRel("alternate");
  this.impl.addLink(impl2);
  this.impl.addNamespace(GOMNamespace.OPENSEARCH_NAMESPACE);
  this.impl.setGenerator(new GOMGeneratorImpl());
  this.impl.setIcon(new GOMIconImpl());
  this.impl.setId(new GOMIdImpl());
  this.impl.setLogo(new GOMLogoImpl());
  this.impl.setRights(new GOMRightsImpl());
  this.impl.setSubtitle(new GOMSubtitleImpl());
  this.impl.setTitle(new GOMTitleImpl());
  this.impl.setUpdated(new GOMUpdatedImpl());
  this.impl.addNamespace(GOMNamespace.ATOM_NAMESPACE);
  this.impl.addNamespace(GOMNamespace.OPENSEARCH_NAMESPACE);
  this.impl.extensions.add(new TestExtension());
  StringWriter stW=new StringWriter();
  GOMOutputWriter writer=new GOMStaxWriter(stW);
  this.impl.writeRssOutput(writer);
  String string=stW.toString();
  assertTrue(string.contains("xmlns:openSearch"));
  assertTrue(string.contains("xmlns:atom"));
  assertTrue(string.contains("<" + GOMCategory.LOCALNAME));
  assertTrue(string.contains("<managingEditor"));
  assertTrue(string.contains("<" + GOMLink.LOCALNAME));
  assertTrue(string.contains("<" + GOMGenerator.LOCALNAME));
  assertTrue(string.contains("<image><url"));
  assertTrue(string.contains("<atom:" + GOMId.LOCALNAME));
  assertTrue(string.contains("<copyright"));
  assertTrue(string.contains("<" + GOMTitle.LOCALNAME));
  assertTrue(string.contains("<lastBuildDate"));
  assertTrue(string.contains("<openSearch:itemsPerPage>"));
  assertTrue(string.contains("<openSearch:startIndex>"));
  assertTrue(string.contains("<atom:test"));
}
