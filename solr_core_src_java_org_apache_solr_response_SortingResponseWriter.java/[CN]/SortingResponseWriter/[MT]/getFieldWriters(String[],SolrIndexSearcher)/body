{
  IndexSchema schema=searcher.getSchema();
  FieldWriter[] writers=new FieldWriter[fields.length];
  for (int i=0; i < fields.length; i++) {
    String field=fields[i];
    SchemaField schemaField=schema.getField(field);
    if (!schemaField.hasDocValues()) {
      throw new IOException(field + " must have DocValues to use this feature.");
    }
    boolean multiValued=schemaField.multiValued();
    FieldType fieldType=schemaField.getType();
    if (fieldType instanceof TrieIntField) {
      if (multiValued) {
        writers[i]=new MultiFieldWriter(field,fieldType,true);
      }
 else {
        writers[i]=new IntFieldWriter(field);
      }
    }
 else     if (fieldType instanceof TrieLongField) {
      if (multiValued) {
        writers[i]=new MultiFieldWriter(field,fieldType,true);
      }
 else {
        writers[i]=new LongFieldWriter(field);
      }
    }
 else     if (fieldType instanceof TrieFloatField) {
      if (multiValued) {
        writers[i]=new MultiFieldWriter(field,fieldType,true);
      }
 else {
        writers[i]=new FloatFieldWriter(field);
      }
    }
 else     if (fieldType instanceof TrieDoubleField) {
      if (multiValued) {
        writers[i]=new MultiFieldWriter(field,fieldType,true);
      }
 else {
        writers[i]=new DoubleFieldWriter(field);
      }
    }
 else     if (fieldType instanceof StrField) {
      if (multiValued) {
        writers[i]=new MultiFieldWriter(field,fieldType,false);
      }
 else {
        writers[i]=new StringFieldWriter(field,fieldType);
      }
    }
  }
  return writers;
}
