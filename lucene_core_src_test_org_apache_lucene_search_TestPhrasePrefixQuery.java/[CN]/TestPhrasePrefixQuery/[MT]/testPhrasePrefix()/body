{
  Directory indexStore=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),indexStore);
  Document doc1=new Document();
  Document doc2=new Document();
  Document doc3=new Document();
  Document doc4=new Document();
  Document doc5=new Document();
  doc1.add(newTextField("body","blueberry pie",Field.Store.YES));
  doc2.add(newTextField("body","blueberry strudel",Field.Store.YES));
  doc3.add(newTextField("body","blueberry pizza",Field.Store.YES));
  doc4.add(newTextField("body","blueberry chewing gum",Field.Store.YES));
  doc5.add(newTextField("body","piccadilly circus",Field.Store.YES));
  writer.addDocument(doc1);
  writer.addDocument(doc2);
  writer.addDocument(doc3);
  writer.addDocument(doc4);
  writer.addDocument(doc5);
  IndexReader reader=writer.getReader();
  writer.close();
  IndexSearcher searcher=newSearcher(reader);
  MultiPhraseQuery.Builder query1builder=new MultiPhraseQuery.Builder();
  MultiPhraseQuery.Builder query2builder=new MultiPhraseQuery.Builder();
  query1builder.add(new Term("body","blueberry"));
  query2builder.add(new Term("body","strawberry"));
  LinkedList<Term> termsWithPrefix=new LinkedList<>();
  String prefix="pi";
  TermsEnum te=MultiFields.getFields(reader).terms("body").iterator();
  te.seekCeil(new BytesRef(prefix));
  do {
    String s=te.term().utf8ToString();
    if (s.startsWith(prefix)) {
      termsWithPrefix.add(new Term("body",s));
    }
 else {
      break;
    }
  }
 while (te.next() != null);
  query1builder.add(termsWithPrefix.toArray(new Term[0]));
  query2builder.add(termsWithPrefix.toArray(new Term[0]));
  ScoreDoc[] result;
  result=searcher.search(query1builder.build(),1000).scoreDocs;
  assertEquals(2,result.length);
  result=searcher.search(query2builder.build(),1000).scoreDocs;
  assertEquals(0,result.length);
  reader.close();
  indexStore.close();
}
