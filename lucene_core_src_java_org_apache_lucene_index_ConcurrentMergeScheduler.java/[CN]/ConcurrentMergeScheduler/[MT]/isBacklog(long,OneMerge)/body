{
  double mergeMB=bytesToMB(merge.estimatedMergeBytes);
  for (  MergeThread mergeThread : mergeThreads) {
    long mergeStartNS=mergeThread.merge.mergeStartNS;
    if (mergeThread.isAlive() && mergeThread.merge != merge && mergeStartNS != -1 && mergeThread.merge.estimatedMergeBytes >= MIN_BIG_MERGE_MB * 1024 * 1024 && nsToSec(now - mergeStartNS) > 3.0) {
      double otherMergeMB=bytesToMB(mergeThread.merge.estimatedMergeBytes);
      double ratio=otherMergeMB / mergeMB;
      if (ratio > 0.3 && ratio < 3.0) {
        return true;
      }
    }
  }
  return false;
}
