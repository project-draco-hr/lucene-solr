{
  try {
    if (verbose()) {
      message("  merge thread: start");
    }
    doMerge(writer,merge);
    if (verbose()) {
      message("  merge thread: done");
    }
    removeMergeThread(this);
    try {
      merge(writer,MergeTrigger.MERGE_FINISHED,true);
    }
 catch (    AlreadyClosedException ace) {
    }
catch (    IOException ioe) {
      throw new RuntimeException(ioe);
    }
  }
 catch (  Throwable exc) {
    if (exc instanceof MergePolicy.MergeAbortedException) {
    }
 else     if (suppressExceptions == false) {
      handleMergeException(writer.getDirectory(),exc);
    }
  }
 finally {
synchronized (ConcurrentMergeScheduler.this) {
      updateMergeThreads();
      ConcurrentMergeScheduler.this.notifyAll();
    }
  }
}
