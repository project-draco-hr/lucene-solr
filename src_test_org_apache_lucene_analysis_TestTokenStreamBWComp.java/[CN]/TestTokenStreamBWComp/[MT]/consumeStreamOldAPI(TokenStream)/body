{
  stream.reset();
  Token reusableToken=new Token();
  while ((reusableToken=stream.next(reusableToken)) != null) {
    String term=reusableToken.term();
    Payload p=reusableToken.getPayload();
    if (p != null && p.getData().length == 1 && p.getData()[0] == PartOfSpeechAnnotatingFilter.PROPER_NOUN_ANNOTATION) {
      assertTrue("only TokenStream is a proper noun","tokenstream".equals(term));
    }
 else {
      assertFalse("all other tokens (if this test fails, the special POSToken subclass is not correctly passed through the chain)","tokenstream".equals(term));
    }
  }
}
