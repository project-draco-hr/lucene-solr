{
  super(label);
  if (Double.isNaN(minIn)) {
    throw new IllegalArgumentException("min cannot be NaN");
  }
  if (!minInclusive) {
    minIn=Math.nextUp(minIn);
  }
  if (Double.isNaN(maxIn)) {
    throw new IllegalArgumentException("max cannot be NaN");
  }
  if (!maxInclusive) {
    maxIn=Math.nextAfter(maxIn,Double.NEGATIVE_INFINITY);
  }
  if (minIn > maxIn) {
    failNoMatch();
  }
  this.min=minIn;
  this.max=maxIn;
}
