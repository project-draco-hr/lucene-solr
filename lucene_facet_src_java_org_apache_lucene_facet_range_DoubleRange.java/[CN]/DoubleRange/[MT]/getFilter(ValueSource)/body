{
  return new Filter(){
    @Override public DocIdSet getDocIdSet(    AtomicReaderContext context,    final Bits acceptDocs) throws IOException {
      final FunctionValues values=valueSource.getValues(Collections.emptyMap(),context);
      final int maxDoc=context.reader().maxDoc();
      return new DocIdSet(){
        @Override public DocIdSetIterator iterator(){
          return new DocIdSetIterator(){
            int doc=-1;
            @Override public int nextDoc() throws IOException {
              while (true) {
                doc++;
                if (doc == maxDoc) {
                  return doc=NO_MORE_DOCS;
                }
                if (acceptDocs != null && acceptDocs.get(doc) == false) {
                  continue;
                }
                double v=values.doubleVal(doc);
                if (accept(v)) {
                  return doc;
                }
              }
            }
            @Override public int advance(            int target) throws IOException {
              doc=target - 1;
              return nextDoc();
            }
            @Override public int docID(){
              return doc;
            }
            @Override public long cost(){
              return maxDoc;
            }
          }
;
        }
      }
;
    }
  }
;
}
