{
  super(weight);
  if (featureScorers.size() <= 1) {
    throw new IllegalArgumentException("There must be at least 2 subScorers");
  }
  subScorers=new DisiPriorityQueue(featureScorers.size());
  for (  final Scorer scorer : featureScorers) {
    final DisiWrapper w=new DisiWrapper(scorer);
    subScorers.add(w);
  }
  itr=new ScoringQuerySparseIterator(subScorers);
}
