{
  final Collection<Feature> modelFeatures=ltrScoringModel.getFeatures();
  final Collection<Feature> allFeatures=ltrScoringModel.getAllFeatures();
  int modelFeatSize=modelFeatures.size();
  Collection<Feature> features=null;
  if (this.extractAllFeatures) {
    features=allFeatures;
  }
 else {
    features=modelFeatures;
  }
  final Feature.FeatureWeight[] extractedFeatureWeights=new Feature.FeatureWeight[features.size()];
  final Feature.FeatureWeight[] modelFeaturesWeights=new Feature.FeatureWeight[modelFeatSize];
  List<Feature.FeatureWeight> featureWeights=new ArrayList<>(features.size());
  if (querySemaphore == null) {
    createWeights(searcher,needsScores,boost,featureWeights,features);
  }
 else {
    createWeightsParallel(searcher,needsScores,boost,featureWeights,features);
  }
  int i=0, j=0;
  if (this.extractAllFeatures) {
    for (    final Feature.FeatureWeight fw : featureWeights) {
      extractedFeatureWeights[i++]=fw;
    }
    for (    final Feature f : modelFeatures) {
      modelFeaturesWeights[j++]=extractedFeatureWeights[f.getIndex()];
    }
  }
 else {
    for (    final Feature.FeatureWeight fw : featureWeights) {
      extractedFeatureWeights[i++]=fw;
      modelFeaturesWeights[j++]=fw;
    }
  }
  return new ModelWeight(modelFeaturesWeights,extractedFeatureWeights,allFeatures.size());
}
