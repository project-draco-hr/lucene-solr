{
  SolrQueryResponse rsp=new SolrQueryResponse();
  rsp.add(RawResponseWriter.CONTENT,"test");
  rsp.add("foo","bar");
  SolrQueryRequest r=req();
  assertEquals("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",writerXlsx.getContentType(r,rsp));
  XSSFSheet resultSheet=getWSResultForQuery(req("q","id:1","wt","xlsx","fl","id,foo_s,foo_i,foo_l,foo_b,foo_f,foo_d,foo_dt1"));
  assertEquals("id,foo_s,foo_i,foo_l,foo_b,foo_f,foo_d,foo_dt1\n1,hi,-1,12345678987654321,F,1.414,-1.0E300,2000-01-02T03:04:05Z\n",getStringFromSheet(resultSheet));
  resultSheet=getWSResultForQuery(req("q","id:1^0","wt","xlsx","fl","id,score,foo_s"));
  assertEquals("id,score,foo_s\n1,0.0,hi\n",getStringFromSheet(resultSheet));
  resultSheet=getWSResultForQuery(req("q","id:1^0","wt","xlsx","colname.id","I.D.","colwidth.id","10","fl","id,score,foo_s"));
  assertEquals("I.D.,score,foo_s\n1,0.0,hi\n",getStringFromSheet(resultSheet));
  assertEquals(10 * 256,resultSheet.getColumnWidth(0));
  resultSheet=getWSResultForQuery(req("q","id:2","wt","xlsx","fl","id,v_ss"));
  assertEquals("id,v_ss\n2,hi; there\n",getStringFromSheet(resultSheet));
  resultSheet=getWSResultForQuery(req("q","*:*","wt","xslx","fl","*,score"));
  String result=getStringFromSheet(resultSheet);
  for (  String field : "id,foo_s,foo_i,foo_l,foo_b,foo_f,foo_d,foo_dt1,v_ss,v2_ss,score".split(",")) {
    assertTrue(result.indexOf(field) >= 0);
  }
  resultSheet=getWSResultForQuery(req("q","id:2","wt","xlsx","fl","id,foo_s,v_ss"));
  assertEquals("id,foo_s,v_ss\n2,,hi; there\n",getStringFromSheet(resultSheet));
  SolrDocument d=new SolrDocument();
  SolrDocument d1=d;
  d.addField("id","1");
  d.addField("foo_i",-1);
  d.addField("foo_s","hi");
  d.addField("foo_l","12345678987654321L");
  d.addField("foo_b",false);
  d.addField("foo_f",1.414f);
  d.addField("foo_d",-1.0E300);
  d.addField("foo_dt1",new Date(Instant.parse("2000-01-02T03:04:05Z").toEpochMilli()));
  d.addField("score","2.718");
  d=new SolrDocument();
  SolrDocument d2=d;
  d.addField("id","2");
  d.addField("v_ss","hi");
  d.addField("v_ss","there");
  d.addField("v2_ss","nice");
  d.addField("v2_ss","output");
  d.addField("score","89.83");
  d.addField("shouldbeunstored","foo");
  SolrDocumentList sdl=new SolrDocumentList();
  sdl.add(d1);
  sdl.add(d2);
  SolrQueryRequest req=req("q","*:*");
  rsp=new SolrQueryResponse();
  rsp.addResponse(sdl);
  rsp.setReturnFields(new SolrReturnFields("id,foo_s",req));
  resultSheet=getWSResultForQuery(req,rsp);
  assertEquals("id,foo_s\n1,hi\n2,\n",getStringFromSheet(resultSheet));
  rsp.setReturnFields(new SolrReturnFields("id,score,foo_s",req));
  resultSheet=getWSResultForQuery(req,rsp);
  assertEquals("id,score,foo_s\n1,2.718,hi\n2,89.83,\n",getStringFromSheet(resultSheet));
  rsp.setReturnFields(new SolrReturnFields("*",req));
  resultSheet=getWSResultForQuery(req,rsp);
  assertEquals("id,foo_i,foo_s,foo_l,foo_b,foo_f,foo_d,foo_dt1,v_ss,v2_ss\n" + "1,-1,hi,12345678987654321L,false,1.414,-1.0E300,2000-01-02T03:04:05Z,,\n" + "2,,,,,,,,hi; there,nice; output\n",getStringFromSheet(resultSheet));
  rsp.setReturnFields(new SolrReturnFields("*,score",req));
  resultSheet=getWSResultForQuery(req,rsp);
  String s=getStringFromSheet(resultSheet);
  assertTrue(s.indexOf("score") >= 0 && s.indexOf("2.718") > 0 && s.indexOf("89.83") > 0);
  rsp.setReturnFields(new SolrReturnFields("id,foo*",req));
  resultSheet=getWSResultForQuery(req,rsp);
  assertEquals("id,foo_i,foo_s,foo_l,foo_b,foo_f,foo_d,foo_dt1\n" + "1,-1,hi,12345678987654321L,false,1.414,-1.0E300,2000-01-02T03:04:05Z\n" + "2,,,,,,,\n",getStringFromSheet(resultSheet));
  rsp.setReturnFields(new SolrReturnFields("id,*_d*",req));
  resultSheet=getWSResultForQuery(req,rsp);
  assertEquals("id,foo_d,foo_dt1\n" + "1,-1.0E300,2000-01-02T03:04:05Z\n" + "2,,\n",getStringFromSheet(resultSheet));
  rsp.setReturnFields(new SolrReturnFields("sum(1,1),id,exists(foo_s1),div(9,1),foo_f",req));
  resultSheet=getWSResultForQuery(req,rsp);
  assertEquals("sum(1,1),id,exists(foo_s1),div(9,1),foo_f\n" + ",1,,,1.414\n" + ",2,,,\n",getStringFromSheet(resultSheet));
  rsp.setReturnFields(new SolrReturnFields("mydocid:[docid],[explain]",req));
  resultSheet=getWSResultForQuery(req,rsp);
  assertEquals("mydocid,[explain]\n" + ",\n" + ",\n",getStringFromSheet(resultSheet));
  req.close();
}
