{
  final HttpEntity entity=response.getEntity();
  final InputStream in=entity.getContent();
  if (!consume) {
    return in;
  }
  return new InputStream(){
    private boolean consumed=false;
    @Override public int read() throws IOException {
      final int res=in.read();
      consume(res);
      return res;
    }
    @Override public void close() throws IOException {
      super.close();
      consume(-1);
    }
    @Override public int read(    byte[] b) throws IOException {
      final int res=super.read(b);
      consume(res);
      return res;
    }
    @Override public int read(    byte[] b,    int off,    int len) throws IOException {
      final int res=super.read(b,off,len);
      consume(res);
      return res;
    }
    private void consume(    int minusOne){
      if (!consumed && minusOne == -1) {
        try {
          EntityUtils.consume(entity);
        }
 catch (        Exception e) {
        }
        consumed=true;
      }
    }
  }
;
}
