{
  Query filteredquery=new FilteredQuery(query,filter);
  Hits hits=searcher.search(filteredquery);
  assertEquals(1,hits.length());
  assertEquals(1,hits.id(0));
  QueryUtils.check(filteredquery,searcher);
  hits=searcher.search(filteredquery,new Sort("sorter"));
  assertEquals(1,hits.length());
  assertEquals(1,hits.id(0));
  filteredquery=new FilteredQuery(new TermQuery(new Term("field","one")),filter);
  hits=searcher.search(filteredquery);
  assertEquals(2,hits.length());
  QueryUtils.check(filteredquery,searcher);
  filteredquery=new FilteredQuery(new TermQuery(new Term("field","x")),filter);
  hits=searcher.search(filteredquery);
  assertEquals(1,hits.length());
  assertEquals(3,hits.id(0));
  QueryUtils.check(filteredquery,searcher);
  filteredquery=new FilteredQuery(new TermQuery(new Term("field","y")),filter);
  hits=searcher.search(filteredquery);
  assertEquals(0,hits.length());
  QueryUtils.check(filteredquery,searcher);
  Filter f=newStaticFilterA();
  float boost=2.5f;
  BooleanQuery bq1=new BooleanQuery();
  TermQuery tq=new TermQuery(new Term("field","one"));
  tq.setBoost(boost);
  bq1.add(tq,Occur.MUST);
  bq1.add(new TermQuery(new Term("field","five")),Occur.MUST);
  BooleanQuery bq2=new BooleanQuery();
  tq=new TermQuery(new Term("field","one"));
  filteredquery=new FilteredQuery(tq,f);
  filteredquery.setBoost(boost);
  bq2.add(filteredquery,Occur.MUST);
  bq2.add(new TermQuery(new Term("field","five")),Occur.MUST);
  assertScoreEquals(bq1,bq2);
  assertEquals(boost,filteredquery.getBoost(),0);
  assertEquals(1.0f,tq.getBoost(),0);
}
