{
  DataImporter di=new DataImporter();
  di.loadAndInit(dc_singleEntity);
  DataConfig cfg=di.getConfig();
  DataConfig.Entity ent=cfg.document.entities.get(0);
  List l=new ArrayList();
  l.add(createMap("id",1,"desc","one"));
  MockDataSource.setIterator("select * from x",l.iterator());
  ent.dataSrc=new MockDataSource();
  ent.isDocRoot=true;
  DataImporter.RequestParams rp=new DataImporter.RequestParams(createMap("command","import"));
  SolrWriterImpl swi=new SolrWriterImpl();
  di.runCmd(rp,swi);
  assertEquals(Boolean.FALSE,swi.deleteAllCalled);
  assertEquals(Boolean.TRUE,swi.commitCalled);
  assertEquals(1,swi.docs.size());
  assertEquals(1,di.getDocBuilder().importStatistics.queryCount.get());
  assertEquals(1,di.getDocBuilder().importStatistics.docCount.get());
  assertEquals(1,di.getDocBuilder().importStatistics.rowsCount.get());
  for (int i=0; i < l.size(); i++) {
    Map<String,Object> map=(Map<String,Object>)l.get(i);
    SolrInputDocument doc=swi.docs.get(i);
    for (    Map.Entry<String,Object> entry : map.entrySet()) {
      assertEquals(entry.getValue(),doc.getFieldValue(entry.getKey()));
    }
  }
}
