{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(2).setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergePolicy(newLogMergePolicy(50)));
  FieldType customType=new FieldType();
  customType.setStored(true);
  FieldType customType1=new FieldType(TextField.TYPE_NOT_STORED);
  customType1.setTokenized(false);
  customType1.setStoreTermVectors(true);
  customType1.setStoreTermVectorPositions(true);
  customType1.setStoreTermVectorOffsets(true);
  Document document=new Document();
  Field storedField=newField("stored","stored",customType);
  document.add(storedField);
  Field termVectorField=newField("termVector","termVector",customType1);
  document.add(termVectorField);
  Field idField=newStringField("id","",Field.Store.NO);
  document.add(idField);
  for (int i=0; i < 98; i++) {
    idField.setStringValue("" + i);
    writer.addDocument(document);
  }
  writer.shutdown();
  IndexReader ir=DirectoryReader.open(dir);
  assertEquals(98,ir.maxDoc());
  assertEquals(98,ir.numDocs());
  ir.close();
  IndexWriterConfig dontMergeConfig=new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE);
  writer=new IndexWriter(dir,dontMergeConfig);
  for (int i=0; i < 98; i+=2) {
    writer.deleteDocuments(new Term("id","" + i));
  }
  writer.shutdown();
  ir=DirectoryReader.open(dir);
  assertEquals(49,ir.numDocs());
  ir.close();
  writer=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(3)));
  writer.forceMergeDeletes(false);
  writer.shutdown();
  ir=DirectoryReader.open(dir);
  assertEquals(49,ir.maxDoc());
  assertEquals(49,ir.numDocs());
  ir.close();
  dir.close();
}
