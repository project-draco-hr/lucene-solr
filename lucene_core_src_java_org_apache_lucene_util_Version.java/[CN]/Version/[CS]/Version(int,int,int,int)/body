{
  this.major=major;
  this.minor=minor;
  this.bugfix=bugfix;
  this.prerelease=prerelease;
  if (major > 6 || major < 4) {
    throw new IllegalArgumentException("Lucene 6.x only supports 6.x, 5.x, and 4.x versions");
  }
  if (minor > 255 | minor < 0) {
    throw new IllegalArgumentException("Illegal minor version: " + minor);
  }
  if (bugfix > 255 | bugfix < 0) {
    throw new IllegalArgumentException("Illegal bugfix version: " + bugfix);
  }
  if (prerelease > 2 | prerelease < 0) {
    throw new IllegalArgumentException("Illegal prerelease version: " + prerelease);
  }
  if (prerelease != 0 && (minor != 0 || bugfix != 0)) {
    throw new IllegalArgumentException("Prerelease version only supported with major release");
  }
  encodedValue=major << 18 | minor << 10 | bugfix << 2 | prerelease;
}
