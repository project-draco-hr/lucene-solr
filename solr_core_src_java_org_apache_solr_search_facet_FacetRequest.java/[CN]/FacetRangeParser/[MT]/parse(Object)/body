{
  if (!(arg instanceof Map)) {
    throw err("Missing range facet arguments");
  }
  Map<String,Object> m=(Map<String,Object>)arg;
  facet.field=getString(m,"field",null);
  facet.start=m.get("start");
  facet.end=m.get("end");
  facet.gap=m.get("gap");
  facet.hardend=getBoolean(m,"hardend",facet.hardend);
  Object o=m.get("include");
  String[] includeList=null;
  if (o != null) {
    List lst=null;
    if (o instanceof List) {
      lst=(List)o;
    }
 else     if (o instanceof String) {
      lst=StrUtils.splitSmart((String)o,',');
    }
    includeList=(String[])lst.toArray(new String[lst.size()]);
  }
  facet.include=FacetParams.FacetRangeInclude.parseParam(includeList);
  facet.others=EnumSet.noneOf(FacetParams.FacetRangeOther.class);
  o=m.get("other");
  if (o != null) {
    List<String> lst=null;
    if (o instanceof List) {
      lst=(List)o;
    }
 else     if (o instanceof String) {
      lst=StrUtils.splitSmart((String)o,',');
    }
    for (    String otherStr : lst) {
      facet.others.add(FacetParams.FacetRangeOther.get(otherStr));
    }
  }
  Object facetObj=m.get("facet");
  parseSubs(facetObj);
  return facet;
}
