{
  final List<Integer> recentItems;
  if (items.size() <= maxSize) {
    recentItems=new ArrayList<>();
    for (int i=items.size(); i < maxSize; ++i) {
      recentItems.add(sentinel);
    }
    recentItems.addAll(items);
  }
 else {
    recentItems=items.subList(items.size() - maxSize,items.size());
  }
  final Map<Integer,Integer> expectedFrequencies=new HashMap<Integer,Integer>();
  for (  Integer item : recentItems) {
    final Integer freq=expectedFrequencies.get(item);
    if (freq == null) {
      expectedFrequencies.put(item,1);
    }
 else {
      expectedFrequencies.put(item,freq + 1);
    }
  }
  assertEquals(expectedFrequencies,buffer.asFrequencyMap());
}
