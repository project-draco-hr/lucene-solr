{
  String cname="collection1";
  Map<String,DocCollection> collectionStates=new HashMap<>();
  Map<String,Slice> slices=new HashMap<>();
  Map<String,Replica> replicas=new HashMap<>();
  ZkNodeProps m=new ZkNodeProps(Overseer.QUEUE_OPERATION,"state",ZkStateReader.STATE_PROP,"ACTIVE",ZkStateReader.BASE_URL_PROP,"0.0.0.0",ZkStateReader.CORE_NAME_PROP,"core1",ZkStateReader.ROLES_PROP,null,ZkStateReader.NODE_NAME_PROP,"0_0_0_0",ZkStateReader.SHARD_ID_PROP,"shard1",ZkStateReader.COLLECTION_PROP,cname,ZkStateReader.NUM_SHARDS_PROP,"1",ZkStateReader.CORE_NODE_NAME_PROP,"core_node1");
  Replica replica=new Replica("core_node1",m.getProperties());
  replicas.put("core_node1",replica);
  Slice slice=new Slice("slice1",replicas,new HashMap<String,Object>(0));
  slices.put("slice1",slice);
  DocRouter router=new ImplicitDocRouter();
  DocCollection docCollection=new DocCollection(cname,slices,new HashMap<String,Object>(0),router);
  collectionStates.put(cname,docCollection);
  Set<String> liveNodes=new HashSet<>();
  ClusterState state=new ClusterState(-1,liveNodes,collectionStates,ClusterStateTest.getMockZkStateReader(collectionStates.keySet()));
  String nodeName=Assign.assignNode("collection1",state);
  assertEquals("core_node2",nodeName);
}
