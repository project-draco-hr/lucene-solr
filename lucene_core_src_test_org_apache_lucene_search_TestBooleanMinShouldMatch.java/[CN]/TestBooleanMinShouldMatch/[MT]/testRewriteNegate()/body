{
  final Similarity oldSimilarity=s.getSimilarity(true);
  try {
    s.setSimilarity(new ClassicSimilarity(){
      @Override public float coord(      int overlap,      int maxOverlap){
        return overlap / ((float)maxOverlap + 1);
      }
    }
);
    BooleanQuery.Builder q1=new BooleanQuery.Builder();
    q1.add(new TermQuery(new Term("data","1")),BooleanClause.Occur.SHOULD);
    BooleanQuery.Builder q2=new BooleanQuery.Builder();
    q2.add(new TermQuery(new Term("data","1")),BooleanClause.Occur.SHOULD);
    q2.add(new TermQuery(new Term("data","Z")),BooleanClause.Occur.MUST_NOT);
    TopDocs top1=s.search(q1.build(),100);
    TopDocs top2=s.search(q2.build(),100);
    assertSubsetOfSameScores(q2.build(),top1,top2);
  }
  finally {
    s.setSimilarity(oldSimilarity);
  }
}
