{
  super.setUp();
  dir=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  Field yearField=newTextField("year","",Field.Store.NO);
  SortedDocValuesField artistField=new SortedDocValuesField("artist",new BytesRef(""));
  Field weeksAtNumberOneField=new FloatDocValuesField("weeksAtNumberOne",0.0F);
  Field weeksStoredField=new LegacyFloatField("weeks",0.0F,Store.YES);
  Field idField=newStringField("id","",Field.Store.YES);
  Field songField=newTextField("song","",Field.Store.NO);
  Field storedArtistField=newTextField("artistName","",Field.Store.NO);
  doc.add(idField);
  doc.add(weeksAtNumberOneField);
  doc.add(storedArtistField);
  doc.add(songField);
  doc.add(weeksStoredField);
  doc.add(yearField);
  doc.add(artistField);
  parsedRecords.clear();
  for (int i=0; i < hitsOfThe60s.length; i++) {
    String cols[]=hitsOfThe60s[i].split("\t");
    Record record=new Record(String.valueOf(i),cols[0],cols[1],cols[2],Float.valueOf(cols[3]));
    parsedRecords.put(record.id,record);
    idField.setStringValue(record.id);
    yearField.setStringValue(record.year);
    storedArtistField.setStringValue(record.artist);
    artistField.setBytesValue(new BytesRef(record.artist));
    songField.setStringValue(record.song);
    weeksStoredField.setFloatValue(record.weeks);
    weeksAtNumberOneField.setFloatValue(record.weeks);
    writer.addDocument(doc);
    if (i % 10 == 0) {
      writer.commit();
    }
  }
  reader=writer.getReader();
  writer.close();
  searcher=newSearcher(reader);
  LeafReader ar=SlowCompositeReaderWrapper.wrap(reader);
  artistDocValues=ar.getSortedDocValues("artist");
  final Similarity base=searcher.getSimilarity(true);
  searcher.setSimilarity(new DocValueSimilarity(base,"weeksAtNumberOne"));
}
