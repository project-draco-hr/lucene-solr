{
  DirectSpellChecker spellchecker=new DirectSpellChecker();
  Directory dir=newDirectory();
  Analyzer analyzer=new MockAnalyzer(random(),MockTokenizer.KEYWORD,true);
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir,analyzer);
  String[] termsToAdd={"metanoia","metanoian","metanoiai","metanoias","metanoi????"};
  for (int i=0; i < termsToAdd.length; i++) {
    Document doc=new Document();
    doc.add(newTextField("repentance",termsToAdd[i],Field.Store.NO));
    writer.addDocument(doc);
  }
  IndexReader ir=writer.getReader();
  String misspelled="metanoix";
  SuggestWord[] similar=spellchecker.suggestSimilar(new Term("repentance",misspelled),4,ir,SuggestMode.SUGGEST_WHEN_NOT_IN_INDEX);
  assertTrue(similar.length == 4);
  StringDistance sd=spellchecker.getDistance();
  assertTrue(sd instanceof LuceneLevenshteinDistance);
  for (  SuggestWord word : similar) {
    assertTrue(word.score == sd.getDistance(word.string,misspelled));
    assertTrue(word.score == sd.getDistance(misspelled,word.string));
  }
  IOUtils.close(ir,writer,dir,analyzer);
}
