{
  Directory dir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  conf.setMergePolicy(NoMergePolicy.INSTANCE);
  conf.setCodec(new Lucene49Codec(){
    @Override public DocValuesFormat getDocValuesFormatForField(    String field){
      return new Lucene49DocValuesFormat();
    }
  }
);
  IndexWriter writer=new IndexWriter(dir,conf);
  Document doc=new Document();
  doc.add(new StringField("id","d0",Store.NO));
  doc.add(new BinaryDocValuesField("f1",toBytes(5L)));
  doc.add(new BinaryDocValuesField("f2",toBytes(13L)));
  writer.addDocument(doc);
  writer.shutdown();
  conf=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  conf.setMergePolicy(NoMergePolicy.INSTANCE);
  conf.setCodec(new Lucene49Codec(){
    @Override public DocValuesFormat getDocValuesFormatForField(    String field){
      return new AssertingDocValuesFormat();
    }
  }
);
  writer=new IndexWriter(dir,conf);
  doc=new Document();
  doc.add(new StringField("id","d1",Store.NO));
  doc.add(new BinaryDocValuesField("f1",toBytes(17L)));
  doc.add(new BinaryDocValuesField("f2",toBytes(2L)));
  writer.addDocument(doc);
  writer.updateBinaryDocValue(new Term("id","d0"),"f1",toBytes(12L));
  writer.shutdown();
  DirectoryReader reader=DirectoryReader.open(dir);
  AtomicReader r=SlowCompositeReaderWrapper.wrap(reader);
  BinaryDocValues f1=r.getBinaryDocValues("f1");
  BinaryDocValues f2=r.getBinaryDocValues("f2");
  BytesRef scratch=new BytesRef();
  assertEquals(12L,getValue(f1,0,scratch));
  assertEquals(13L,getValue(f2,0,scratch));
  assertEquals(17L,getValue(f1,1,scratch));
  assertEquals(2L,getValue(f2,1,scratch));
  reader.close();
  dir.close();
}
