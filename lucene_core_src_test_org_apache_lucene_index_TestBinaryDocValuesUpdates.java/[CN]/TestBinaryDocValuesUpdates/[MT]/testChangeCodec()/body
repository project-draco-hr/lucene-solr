{
  Directory dir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(new MockAnalyzer(random()));
  conf.setMergePolicy(NoMergePolicy.INSTANCE);
  conf.setCodec(new AssertingCodec(){
    @Override public DocValuesFormat getDocValuesFormatForField(    String field){
      return TestUtil.getDefaultDocValuesFormat();
    }
  }
);
  IndexWriter writer=new IndexWriter(dir,conf);
  Document doc=new Document();
  doc.add(new StringField("id","d0",Store.NO));
  doc.add(new BinaryDocValuesField("f1",toBytes(5L)));
  doc.add(new BinaryDocValuesField("f2",toBytes(13L)));
  writer.addDocument(doc);
  writer.close();
  conf=newIndexWriterConfig(new MockAnalyzer(random()));
  conf.setMergePolicy(NoMergePolicy.INSTANCE);
  conf.setCodec(new AssertingCodec(){
    @Override public DocValuesFormat getDocValuesFormatForField(    String field){
      return new AssertingDocValuesFormat();
    }
  }
);
  writer=new IndexWriter(dir,conf);
  doc=new Document();
  doc.add(new StringField("id","d1",Store.NO));
  doc.add(new BinaryDocValuesField("f1",toBytes(17L)));
  doc.add(new BinaryDocValuesField("f2",toBytes(2L)));
  writer.addDocument(doc);
  writer.updateBinaryDocValue(new Term("id","d0"),"f1",toBytes(12L));
  writer.close();
  DirectoryReader reader=DirectoryReader.open(dir);
  BinaryDocValues f1=MultiDocValues.getBinaryValues(reader,"f1");
  BinaryDocValues f2=MultiDocValues.getBinaryValues(reader,"f2");
  assertEquals(0,f1.nextDoc());
  assertEquals(0,f2.nextDoc());
  assertEquals(12L,getValue(f1));
  assertEquals(13L,getValue(f2));
  assertEquals(1,f1.nextDoc());
  assertEquals(1,f2.nextDoc());
  assertEquals(17L,getValue(f1));
  assertEquals(2L,getValue(f2));
  reader.close();
  dir.close();
}
