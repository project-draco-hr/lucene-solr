{
  Directory dir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  conf.setMaxBufferedDocs(10);
  IndexWriter writer=new IndexWriter(dir,conf);
  for (int i=0; i < 4; i++) {
    Document doc=new Document();
    doc.add(new StringField("dvUpdateKey","dv",Store.NO));
    doc.add(new NumericDocValuesField("ndv",i));
    doc.add(new BinaryDocValuesField("bdv",new BytesRef(Integer.toString(i))));
    doc.add(new SortedDocValuesField("sdv",new BytesRef(Integer.toString(i))));
    doc.add(new SortedSetDocValuesField("ssdv",new BytesRef(Integer.toString(i))));
    doc.add(new SortedSetDocValuesField("ssdv",new BytesRef(Integer.toString(i * 2))));
    writer.addDocument(doc);
  }
  writer.commit();
  writer.updateBinaryDocValue(new Term("dvUpdateKey","dv"),"bdv",toBytes(17L));
  writer.close();
  final DirectoryReader reader=DirectoryReader.open(dir);
  AtomicReader r=reader.leaves().get(0).reader();
  NumericDocValues ndv=r.getNumericDocValues("ndv");
  BinaryDocValues bdv=r.getBinaryDocValues("bdv");
  SortedDocValues sdv=r.getSortedDocValues("sdv");
  SortedSetDocValues ssdv=r.getSortedSetDocValues("ssdv");
  BytesRef scratch=new BytesRef();
  for (int i=0; i < r.maxDoc(); i++) {
    assertEquals(i,ndv.get(i));
    assertEquals(17,getValue(bdv,i,scratch));
    sdv.get(i,scratch);
    assertEquals(new BytesRef(Integer.toString(i)),scratch);
    ssdv.setDocument(i);
    long ord=ssdv.nextOrd();
    ssdv.lookupOrd(ord,scratch);
    assertEquals(i,Integer.parseInt(scratch.utf8ToString()));
    if (i != 0) {
      ord=ssdv.nextOrd();
      ssdv.lookupOrd(ord,scratch);
      assertEquals(i * 2,Integer.parseInt(scratch.utf8ToString()));
    }
    assertEquals(SortedSetDocValues.NO_MORE_ORDS,ssdv.nextOrd());
  }
  reader.close();
  dir.close();
}
