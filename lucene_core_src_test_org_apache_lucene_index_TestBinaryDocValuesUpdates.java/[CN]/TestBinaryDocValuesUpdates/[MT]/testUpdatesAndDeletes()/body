{
  Directory dir=newDirectory();
  IndexWriterConfig conf=newIndexWriterConfig(new MockAnalyzer(random()));
  conf.setMaxBufferedDocs(10);
  conf.setMergePolicy(NoMergePolicy.INSTANCE);
  IndexWriter writer=new IndexWriter(dir,conf);
  for (int i=0; i < 6; i++) {
    writer.addDocument(doc(i));
    if (i % 2 == 1) {
      writer.commit();
    }
  }
  writer.deleteDocuments(new Term("id","doc-1"),new Term("id","doc-2"));
  writer.updateBinaryDocValue(new Term("id","doc-3"),"val",toBytes(17L));
  writer.updateBinaryDocValue(new Term("id","doc-5"),"val",toBytes(17L));
  final DirectoryReader reader;
  if (random().nextBoolean()) {
    writer.close();
    reader=DirectoryReader.open(dir);
  }
 else {
    reader=DirectoryReader.open(writer);
    writer.close();
  }
  Bits liveDocs=MultiFields.getLiveDocs(reader);
  boolean[] expectedLiveDocs=new boolean[]{true,false,false,true,true,true};
  for (int i=0; i < expectedLiveDocs.length; i++) {
    assertEquals(expectedLiveDocs[i],liveDocs.get(i));
  }
  long[] expectedValues=new long[]{1,2,3,17,5,17};
  BinaryDocValues bdv=MultiDocValues.getBinaryValues(reader,"val");
  for (int i=0; i < expectedValues.length; i++) {
    assertEquals(expectedValues[i],getValue(bdv,i));
  }
  reader.close();
  dir.close();
}
