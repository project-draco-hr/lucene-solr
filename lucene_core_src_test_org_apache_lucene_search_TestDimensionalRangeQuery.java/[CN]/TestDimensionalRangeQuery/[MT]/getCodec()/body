{
  if (Codec.getDefault().getName().equals("Lucene60")) {
    int maxPointsInLeafNode=TestUtil.nextInt(random(),16,2048);
    double maxMBSortInHeap=2.0 + (3 * random().nextDouble());
    if (VERBOSE) {
      System.out.println("TEST: using Lucene60DimensionalFormat with maxPointsInLeafNode=" + maxPointsInLeafNode + " and maxMBSortInHeap="+ maxMBSortInHeap);
    }
    return new FilterCodec("Lucene60",Codec.getDefault()){
      @Override public DimensionalFormat dimensionalFormat(){
        return new DimensionalFormat(){
          @Override public DimensionalWriter fieldsWriter(          SegmentWriteState writeState) throws IOException {
            return new Lucene60DimensionalWriter(writeState,maxPointsInLeafNode,maxMBSortInHeap);
          }
          @Override public DimensionalReader fieldsReader(          SegmentReadState readState) throws IOException {
            return new Lucene60DimensionalReader(readState);
          }
        }
;
      }
    }
;
  }
 else {
    return Codec.getDefault();
  }
}
