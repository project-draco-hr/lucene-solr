{
  int numValues=TestUtil.nextInt(random(),count,count * 2);
  int numBytesPerDim=TestUtil.nextInt(random(),2,30);
  int numDims=TestUtil.nextInt(random(),1,5);
  int sameValuePct=random().nextInt(100);
  byte[][][] docValues=new byte[numValues][][];
  boolean singleValued=random().nextBoolean();
  int[] ids=new int[numValues];
  int id=0;
  for (int ord=0; ord < numValues; ord++) {
    if (ord > 0 && random().nextInt(100) < sameValuePct) {
      docValues[ord]=docValues[random().nextInt(ord)];
    }
 else {
      byte[][] values=new byte[numDims][];
      for (int dim=0; dim < numDims; dim++) {
        values[dim]=new byte[numBytesPerDim];
        random().nextBytes(values[dim]);
      }
      docValues[ord]=values;
    }
    ids[ord]=id;
    if (singleValued || random().nextInt(2) == 1) {
      id++;
    }
  }
  verifyBinary(docValues,ids,numBytesPerDim);
}
