{
  Directory mainDir=newDirectory();
  if (mainDir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)mainDir).setAssertNoDeleteOpenFile(true);
  }
  IndexWriter writer=new IndexWriter(mainDir,newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy(false,2)));
  IndexReader reader=writer.getReader();
  reader.close();
  RunThread[] indexThreads=new RunThread[4];
  for (int x=0; x < indexThreads.length; x++) {
    indexThreads[x]=new RunThread(x % 2,writer);
    indexThreads[x].setName("Thread " + x);
    indexThreads[x].start();
  }
  long startTime=System.currentTimeMillis();
  long duration=1000;
  while ((System.currentTimeMillis() - startTime) < duration) {
    Thread.sleep(100);
  }
  int delCount=0;
  int addCount=0;
  for (int x=0; x < indexThreads.length; x++) {
    indexThreads[x].run=false;
    assertNull("Exception thrown: " + indexThreads[x].ex,indexThreads[x].ex);
    addCount+=indexThreads[x].addCount;
    delCount+=indexThreads[x].delCount;
  }
  for (int x=0; x < indexThreads.length; x++) {
    indexThreads[x].join();
  }
  for (int x=0; x < indexThreads.length; x++) {
    assertNull("Exception thrown: " + indexThreads[x].ex,indexThreads[x].ex);
  }
  writer.shutdown();
  mainDir.close();
}
