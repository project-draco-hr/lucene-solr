{
  MergePolicy.OneMerge merge=this.startMerge;
  try {
    if (verbose())     message("  merge thread: start");
    while (true) {
      setRunningMerge(merge);
      doMerge(merge);
      merge=tWriter.getNextMerge();
      if (merge != null) {
        tWriter.mergeInit(merge);
        updateMergeThreads();
        if (verbose())         message("  merge thread: do another merge " + merge.segString(dir));
      }
 else {
        done=true;
        updateMergeThreads();
        break;
      }
    }
    if (verbose())     message("  merge thread: done");
  }
 catch (  Throwable exc) {
    if (!(exc instanceof MergePolicy.MergeAbortedException)) {
      if (!suppressExceptions) {
        anyExceptions=true;
        handleMergeException(exc);
      }
    }
  }
 finally {
synchronized (ConcurrentMergeScheduler.this) {
      ConcurrentMergeScheduler.this.notifyAll();
      boolean removed=mergeThreads.remove(this);
      assert removed;
      updateMergeThreads();
    }
  }
}
