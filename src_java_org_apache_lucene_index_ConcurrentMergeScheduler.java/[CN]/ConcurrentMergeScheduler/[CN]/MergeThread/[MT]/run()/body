{
  try {
    if (VERBOSE)     message("  merge thread: start");
    MergePolicy.OneMerge merge=this.merge;
    while (true) {
      writer.merge(merge);
      merge=writer.getNextMerge();
      if (merge != null) {
        writer.mergeInit(merge);
        if (VERBOSE)         message("  merge thread: do another merge " + merge.segString(dir));
      }
 else       break;
    }
    if (VERBOSE)     message("  merge thread: done");
  }
 catch (  Throwable exc) {
    merge.setException(exc);
    writer.addMergeException(merge);
    if (!merge.isAborted()) {
      exceptions.add(exc);
      if (!suppressExceptions)       throw new MergePolicy.MergeException(exc);
    }
  }
 finally {
synchronized (ConcurrentMergeScheduler.this) {
      mergeThreads.remove(this);
      ConcurrentMergeScheduler.this.notifyAll();
    }
  }
}
