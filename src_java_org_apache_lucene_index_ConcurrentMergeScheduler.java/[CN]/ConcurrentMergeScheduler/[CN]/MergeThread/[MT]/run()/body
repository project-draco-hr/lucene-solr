{
  MergePolicy.OneMerge merge=this.startMerge;
  try {
    if (VERBOSE)     message("  merge thread: start");
    while (true) {
      setRunningMerge(merge);
      writer.merge(merge);
      merge=writer.getNextMerge();
      if (merge != null) {
        writer.mergeInit(merge);
        if (VERBOSE)         message("  merge thread: do another merge " + merge.segString(dir));
      }
 else       break;
    }
    if (VERBOSE)     message("  merge thread: done");
  }
 catch (  Throwable exc) {
    if (merge != null) {
      merge.setException(exc);
      writer.addMergeException(merge);
    }
    if (merge == null || !merge.isAborted()) {
synchronized (ConcurrentMergeScheduler.this) {
        exceptions.add(exc);
      }
      if (!suppressExceptions) {
        anyExceptions=true;
        throw new MergePolicy.MergeException(exc);
      }
    }
  }
 finally {
synchronized (ConcurrentMergeScheduler.this) {
      mergeThreads.remove(this);
      ConcurrentMergeScheduler.this.notifyAll();
    }
  }
}
