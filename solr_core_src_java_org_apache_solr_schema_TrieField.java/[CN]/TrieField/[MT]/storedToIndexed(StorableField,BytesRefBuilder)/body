{
  final Number val=f.numericValue();
  if (val != null) {
switch (type) {
case INTEGER:
      LegacyNumericUtils.intToPrefixCodedBytes(val.intValue(),0,bytes);
    break;
case FLOAT:
  LegacyNumericUtils.intToPrefixCodedBytes(LegacyNumericUtils.floatToSortableInt(val.floatValue()),0,bytes);
break;
case LONG:
case DATE:
LegacyNumericUtils.longToPrefixCodedBytes(val.longValue(),0,bytes);
break;
case DOUBLE:
LegacyNumericUtils.longToPrefixCodedBytes(LegacyNumericUtils.doubleToSortableLong(val.doubleValue()),0,bytes);
break;
default :
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unknown type for trie field: " + f.name());
}
}
 else {
final BytesRef bytesRef=f.binaryValue();
if (bytesRef == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Invalid field contents: " + f.name());
switch (type) {
case INTEGER:
LegacyNumericUtils.intToPrefixCodedBytes(toInt(bytesRef.bytes,bytesRef.offset),0,bytes);
break;
case FLOAT:
{
int v=toInt(bytesRef.bytes,bytesRef.offset);
if (v < 0) v^=0x7fffffff;
LegacyNumericUtils.intToPrefixCodedBytes(v,0,bytes);
break;
}
case LONG:
case DATE:
LegacyNumericUtils.longToPrefixCodedBytes(toLong(bytesRef.bytes,bytesRef.offset),0,bytes);
break;
case DOUBLE:
{
long v=toLong(bytesRef.bytes,bytesRef.offset);
if (v < 0) v^=0x7fffffffffffffffL;
LegacyNumericUtils.longToPrefixCodedBytes(v,0,bytes);
break;
}
default :
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unknown type for trie field: " + f.name());
}
}
}
