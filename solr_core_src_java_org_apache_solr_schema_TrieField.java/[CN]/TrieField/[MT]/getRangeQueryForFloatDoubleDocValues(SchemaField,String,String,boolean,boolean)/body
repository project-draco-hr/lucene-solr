{
  Query query;
  String fieldName=sf.getName();
  Number minVal=min == null ? null : type == TrieTypes.FLOAT ? Float.parseFloat(min) : Double.parseDouble(min);
  Number maxVal=max == null ? null : type == TrieTypes.FLOAT ? Float.parseFloat(max) : Double.parseDouble(max);
  Long minBits=min == null ? null : type == TrieTypes.FLOAT ? (long)Float.floatToIntBits(minVal.floatValue()) : Double.doubleToLongBits(minVal.doubleValue());
  Long maxBits=max == null ? null : type == TrieTypes.FLOAT ? (long)Float.floatToIntBits(maxVal.floatValue()) : Double.doubleToLongBits(maxVal.doubleValue());
  long negativeInfinityBits=type == TrieTypes.FLOAT ? FLOAT_NEGATIVE_INFINITY_BITS : DOUBLE_NEGATIVE_INFINITY_BITS;
  long positiveInfinityBits=type == TrieTypes.FLOAT ? FLOAT_POSITIVE_INFINITY_BITS : DOUBLE_POSITIVE_INFINITY_BITS;
  long minusZeroBits=type == TrieTypes.FLOAT ? FLOAT_MINUS_ZERO_BITS : DOUBLE_MINUS_ZERO_BITS;
  long zeroBits=type == TrieTypes.FLOAT ? FLOAT_ZERO_BITS : DOUBLE_ZERO_BITS;
  if ((minVal == null || minVal.doubleValue() < 0d || minBits == minusZeroBits) && (maxVal == null || (maxVal.doubleValue() > 0d || maxBits == zeroBits))) {
    ValueSource vs=getValueSource(sf,null);
    query=new FunctionRangeQuery(new ValueSourceRangeFilter(vs,min,max,minInclusive,maxInclusive));
  }
 else {
    if ((minVal == null || minVal.doubleValue() < 0d || minBits == minusZeroBits) && (maxVal != null && (maxVal.doubleValue() < 0d || maxBits == minusZeroBits))) {
      query=DocValuesRangeQuery.newLongRange(fieldName,maxBits,(min == null ? negativeInfinityBits : minBits),maxInclusive,minInclusive);
    }
 else {
      query=DocValuesRangeQuery.newLongRange(fieldName,minBits,(max == null ? positiveInfinityBits : maxBits),minInclusive,maxInclusive);
    }
  }
  return query;
}
