{
  for (  PhrasePositions[] rg : rptGroups) {
    if (hasMultiTermRpts) {
      int incr;
      for (int i=0; i < rg.length; i+=incr) {
        incr=1;
        PhrasePositions pp=rg[i];
        int k;
        while ((k=collide(pp)) >= 0) {
          PhrasePositions pp2=lesser(pp,rg[k]);
          if (!advancePP(pp2)) {
            return false;
          }
          if (pp2.rptInd < i) {
            incr=0;
            break;
          }
        }
      }
    }
 else {
      for (int j=1; j < rg.length; j++) {
        for (int k=0; k < j; k++) {
          if (!rg[j].nextPosition()) {
            return false;
          }
        }
      }
    }
  }
  return true;
}
