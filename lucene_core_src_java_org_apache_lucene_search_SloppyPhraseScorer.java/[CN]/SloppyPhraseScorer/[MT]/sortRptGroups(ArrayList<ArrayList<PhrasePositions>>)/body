{
  rptGroups=new PhrasePositions[rgs.size()][];
  Comparator<PhrasePositions> cmprtr=new Comparator<PhrasePositions>(){
    public int compare(    PhrasePositions pp1,    PhrasePositions pp2){
      return pp1.offset - pp2.offset;
    }
  }
;
  for (int i=0; i < rptGroups.length; i++) {
    PhrasePositions[] rg=rgs.get(i).toArray(new PhrasePositions[0]);
    Arrays.sort(rg,cmprtr);
    rptGroups[i]=rg;
    for (int j=0; j < rg.length; j++) {
      rg[j].rptInd=j;
    }
  }
}
