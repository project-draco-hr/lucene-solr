{
  super(weight);
  this.docScorer=docScorer;
  this.needsScores=needsScores;
  this.slop=slop;
  this.numPostings=postings == null ? 0 : postings.length;
  pq=new PhraseQueue(postings.length);
  DocIdSetIterator[] iterators=new DocIdSetIterator[postings.length];
  phrasePositions=new PhrasePositions[postings.length];
  for (int i=0; i < postings.length; ++i) {
    iterators[i]=postings[i].postings;
    phrasePositions[i]=new PhrasePositions(postings[i].postings,postings[i].position,i,postings[i].terms);
  }
  conjunction=ConjunctionDISI.intersectIterators(Arrays.asList(iterators));
  this.matchCost=matchCost;
}
