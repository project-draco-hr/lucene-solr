{
  Map<String,Object> outer=top;
  for (int i=0; i < path.size() - 1; i++) {
    Map<String,Object> sub=(Map<String,Object>)outer.get(path.get(i));
    if (sub == null) {
      sub=new LinkedHashMap<String,Object>();
      outer.put(path.get(i),sub);
    }
    outer=sub;
  }
  String key=path.size() > 0 ? path.get(path.size() - 1) : null;
  if (key != null) {
    Object existingVal=outer.put(key,val);
    if (existingVal != null) {
      handler.handleConflict(outer,path,key,val,existingVal);
    }
  }
 else {
    Map<String,Object> newMap=(Map<String,Object>)val;
    handler.mergeMap(outer,newMap,path);
  }
}
