{
  if (joinTuples.size() > 0) {
    return joinTuples.removeFirst();
  }
  OUTER:   while (true) {
    if (listA.size() == 0) {
      Tuple a=streamA.read();
      if (a.EOF) {
        return a;
      }
      listA.add(a);
      INNERA:       while (true) {
        Tuple a1=streamA.read();
        if (a1.EOF) {
          streamA.pushBack(a1);
          break INNERA;
        }
        if (comp.compare(a,a1) == 0) {
          listA.add(a1);
        }
 else {
          streamA.pushBack(a1);
          break INNERA;
        }
      }
    }
    if (listB.size() == 0) {
      Tuple b=streamB.read();
      if (b.EOF) {
        return b;
      }
      listB.add(b);
      INNERA:       while (true) {
        Tuple b1=streamB.read();
        if (b1.EOF) {
          streamB.pushBack(b1);
          break INNERA;
        }
        if (comp.compare(b,b1) == 0) {
          listB.add(b1);
        }
 else {
          streamB.pushBack(b1);
          break INNERA;
        }
      }
    }
    int c=comp.compare(listA.get(0),listB.get(0));
    if (c == 0) {
      for (      Tuple aa : listA) {
        for (        Tuple bb : listB) {
          Tuple clone=aa.clone();
          clone.fields.putAll(bb.fields);
          joinTuples.add(clone);
        }
      }
      listA.clear();
      listB.clear();
      return joinTuples.removeFirst();
    }
 else     if (c < 0) {
      listA.clear();
    }
 else {
      listB.clear();
    }
  }
}
