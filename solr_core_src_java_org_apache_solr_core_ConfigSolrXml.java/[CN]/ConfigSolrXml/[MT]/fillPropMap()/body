{
  if (is50OrLater) {
    propMap.put(CfgProp.SOLR_ADMINHANDLER,doSub("solr/str[@name='adminHandler']"));
    propMap.put(CfgProp.SOLR_CORELOADTHREADS,doSub("solr/int[@name='coreLoadThreads']"));
    propMap.put(CfgProp.SOLR_COREROOTDIRECTORY,doSub("solr/str[@name='coreRootDirectory']"));
    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,doSub("solr/solrcloud/int[@name='distribUpdateConnTimeout']"));
    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,doSub("solr/solrcloud/int[@name='distribUpdateSoTimeout']"));
    propMap.put(CfgProp.SOLR_HOST,doSub("solr/solrcloud/str[@name='host']"));
    propMap.put(CfgProp.SOLR_HOSTCONTEXT,doSub("solr/solrcloud/str[@name='hostContext']"));
    propMap.put(CfgProp.SOLR_HOSTPORT,doSub("solr/solrcloud/int[@name='hostPort']"));
    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,doSub("solr/solrcloud/int[@name='leaderVoteWait']"));
    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,doSub("solr/str[@name='managementPath']"));
    propMap.put(CfgProp.SOLR_SHAREDLIB,doSub("solr/str[@name='sharedLib']"));
    propMap.put(CfgProp.SOLR_SHARESCHEMA,doSub("solr/str[@name='shareSchema']"));
    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,doSub("solr/int[@name='transientCacheSize']"));
    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,doSub("solr/solrcloud/int[@name='zkClientTimeout']"));
    propMap.put(CfgProp.SOLR_ZKHOST,doSub("solr/solrcloud/str[@name='zkHost']"));
    propMap.put(CfgProp.SOLR_LOGGING_CLASS,doSub("solr/logging/str[@name='class']"));
    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,doSub("solr/logging/str[@name='enabled']"));
    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,doSub("solr/logging/watcher/int[@name='size']"));
    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,doSub("solr/logging/watcher/int[@name='threshold']"));
    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,doSub("solr/shardHandlerFactory/@class"));
    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,doSub("solr/shardHandlerFactory/@name"));
    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,doSub("solr/shardHandlerFactory/int[@name='connTimeout']"));
    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,doSub("solr/shardHandlerFactory/int[@name='socketTimeout']"));
  }
 else {
    propMap.put(CfgProp.SOLR_CORELOADTHREADS,getVal("solr/@coreLoadThreads",false));
    propMap.put(CfgProp.SOLR_SHAREDLIB,getVal("solr/@sharedLib",false));
    propMap.put(CfgProp.SOLR_ZKHOST,getVal("solr/@zkHost",false));
    propMap.put(CfgProp.SOLR_LOGGING_CLASS,getVal("solr/logging/@class",false));
    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,getVal("solr/logging/@enabled",false));
    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,getVal("solr/logging/watcher/@size",false));
    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,getVal("solr/logging/watcher/@threshold",false));
    propMap.put(CfgProp.SOLR_ADMINHANDLER,getVal("solr/cores/@adminHandler",false));
    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,getVal("solr/cores/@distribUpdateConnTimeout",false));
    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,getVal("solr/cores/@distribUpdateSoTimeout",false));
    propMap.put(CfgProp.SOLR_HOST,getVal("solr/cores/@host",false));
    propMap.put(CfgProp.SOLR_HOSTCONTEXT,getVal("solr/cores/@hostContext",false));
    propMap.put(CfgProp.SOLR_HOSTPORT,getVal("solr/cores/@hostPort",false));
    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,getVal("solr/cores/@leaderVoteWait",false));
    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,getVal("solr/cores/@managementPath",false));
    propMap.put(CfgProp.SOLR_SHARESCHEMA,getVal("solr/cores/@shareSchema",false));
    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,getVal("solr/cores/@transientCacheSize",false));
    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,getVal("solr/cores/@zkClientTimeout",false));
    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,getVal("solr/shardHandlerFactory/@class",false));
    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,getVal("solr/shardHandlerFactory/@name",false));
    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,getVal("solr/shardHandlerFactory/int[@connTimeout]",false));
    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,getVal("solr/shardHandlerFactory/int[@socketTimeout]",false));
    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,getVal("solr/cores/@defaultCoreName",false));
    propMap.put(CfgProp.SOLR_PERSISTENT,getVal("solr/@persistent",false));
    propMap.put(CfgProp.SOLR_ADMINPATH,getVal("solr/cores/@adminPath",false));
  }
}
