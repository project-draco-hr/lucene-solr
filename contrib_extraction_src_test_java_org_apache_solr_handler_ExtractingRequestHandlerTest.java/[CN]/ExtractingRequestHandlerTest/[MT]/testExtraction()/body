{
  ExtractingRequestHandler handler=(ExtractingRequestHandler)h.getCore().getRequestHandler("/update/extract");
  assertTrue("handler is null and it shouldn't be",handler != null);
  loadLocal("solr-word.pdf","map.created","extractedDate","map.producer","extractedProducer","map.creator","extractedCreator","map.Keywords","extractedKeywords","map.Author","extractedAuthor","map.content","extractedContent","literal.id","one","map.Last-Modified","extractedDate");
  assertQ(req("title:solr-word"),"//*[@numFound='0']");
  assertU(commit());
  assertQ(req("title:solr-word"),"//*[@numFound='1']");
  loadLocal("simple.html","map.created","extractedDate","map.producer","extractedProducer","map.creator","extractedCreator","map.Keywords","extractedKeywords","map.Author","extractedAuthor","map.language","extractedLanguage","literal.id","two","map.content","extractedContent","map.Last-Modified","extractedDate");
  assertQ(req("title:Welcome"),"//*[@numFound='0']");
  assertU(commit());
  assertQ(req("title:Welcome"),"//*[@numFound='1']");
  loadLocal("simple.html","literal.id","simple2","uprefix","t_","lowernames","true","captureAttr","true","map.a","t_href","map.content_language","abcxyz","commit","true");
  assertQ(req("+id:simple2 +t_content_type:[* TO *]"),"//*[@numFound='1']");
  assertQ(req("+id:simple2 +t_href:[* TO *]"),"//*[@numFound='1']");
  assertQ(req("+id:simple2 +t_abcxyz:[* TO *]"),"//*[@numFound='1']");
  loadLocal("simple.html","literal.id","simple3","uprefix","t_","lowernames","true","captureAttr","true","map.a","t_href","map.content_language","abcxyz","commit","true","boost.t_href","100.0");
  assertQ(req("t_href:http"),"//*[@numFound='2']");
  assertQ(req("t_href:http"),"//doc[1]/str[.='simple3']");
  loadLocal("simple.html","literal.id","simple4","uprefix","t_","capture","p","commit","true");
  assertQ(req("+id:simple4 +t_content:Solr"),"//*[@numFound='1']");
  assertQ(req("+id:simple4 +t_p:\"here is some text\""),"//*[@numFound='1']");
  loadLocal("version_control.xml","map.created","extractedDate","map.producer","extractedProducer","map.creator","extractedCreator","map.Keywords","extractedKeywords","map.Author","extractedAuthor","literal.id","three","map.content","extractedContent","map.language","extractedLanguage","map.Last-Modified","extractedDate");
  assertQ(req("stream_name:version_control.xml"),"//*[@numFound='0']");
  assertU(commit());
  assertQ(req("stream_name:version_control.xml"),"//*[@numFound='1']");
}
