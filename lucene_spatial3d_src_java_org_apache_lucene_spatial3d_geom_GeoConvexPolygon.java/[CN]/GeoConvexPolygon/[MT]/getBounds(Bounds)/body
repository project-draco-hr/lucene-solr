{
  if (localIsWithin(planetModel.NORTH_POLE)) {
    bounds.noTopLatitudeBound().noLongitudeBound().addPoint(planetModel.NORTH_POLE);
  }
  if (localIsWithin(planetModel.SOUTH_POLE)) {
    bounds.noBottomLatitudeBound().noLongitudeBound().addPoint(planetModel.SOUTH_POLE);
  }
  if (localIsWithin(planetModel.MIN_X_POLE)) {
    bounds.addPoint(planetModel.MIN_X_POLE);
  }
  if (localIsWithin(planetModel.MAX_X_POLE)) {
    bounds.addPoint(planetModel.MAX_X_POLE);
  }
  if (localIsWithin(planetModel.MIN_Y_POLE)) {
    bounds.addPoint(planetModel.MIN_Y_POLE);
  }
  if (localIsWithin(planetModel.MAX_Y_POLE)) {
    bounds.addPoint(planetModel.MAX_Y_POLE);
  }
  for (  final GeoPoint point : points) {
    bounds.addPoint(point);
  }
  for (  final SidedPlane edge : edges) {
    bounds.addPlane(planetModel,edge,eitherBounds.get(edge));
    final SidedPlane nextEdge=nextBrotherMap.get(edge);
    bounds.addIntersection(planetModel,edge,nextEdge,prevBrotherMap.get(edge),nextBrotherMap.get(nextEdge));
  }
}
