{
  MultiPhraseQuery.Builder expectedQBuilder=new MultiPhraseQuery.Builder();
  expectedQBuilder.add(new Term(FIELD,"old"));
  expectedQBuilder.add(new Term[]{new Term(FIELD,"dogs"),new Term(FIELD,"dog")});
  QueryParser qp=new QueryParser(FIELD,new MockSynonymAnalyzer());
  assertEquals(expectedQBuilder.build(),qp.parse("\"old dogs\""));
  qp.setDefaultOperator(Operator.AND);
  assertEquals(expectedQBuilder.build(),qp.parse("\"old dogs\""));
  BoostQuery expected=new BoostQuery(expectedQBuilder.build(),2f);
  assertEquals(expected,qp.parse("\"old dogs\"^2"));
  expectedQBuilder.setSlop(3);
  expected=new BoostQuery(expectedQBuilder.build(),2f);
  assertEquals(expected,qp.parse("\"old dogs\"~3^2"));
}
