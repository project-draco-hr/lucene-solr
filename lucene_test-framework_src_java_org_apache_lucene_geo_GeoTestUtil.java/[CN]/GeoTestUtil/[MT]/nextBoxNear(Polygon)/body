{
  final double point1[];
  final double point2[];
  Polygon holes[]=polygon.getHoles();
  if (holes.length > 0 && random().nextInt(3) == 0) {
    return nextBoxNear(holes[random().nextInt(holes.length)]);
  }
  int surpriseMe=random().nextInt(97);
  if (surpriseMe == 0) {
    point1=nextPointNear(polygon);
    point2=nextPointNear(polygon);
  }
 else {
    point1=nextPointNear(polygon);
    point2=new double[2];
    double polyLats[]=polygon.getPolyLats();
    double polyLons[]=polygon.getPolyLons();
    int vertex=random().nextInt(polyLats.length - 1);
    double deltaX=polyLons[vertex + 1] - polyLons[vertex];
    double deltaY=polyLats[vertex + 1] - polyLats[vertex];
    double edgeLength=Math.sqrt(deltaX * deltaX + deltaY * deltaY);
    point2[0]=nextLatitudeNear(point1[0],edgeLength);
    point2[1]=nextLongitudeNear(point1[1],edgeLength);
  }
  double minLat=Math.min(point1[0],point2[0]);
  double maxLat=Math.max(point1[0],point2[0]);
  double minLon=Math.min(point1[1],point2[1]);
  double maxLon=Math.max(point1[1],point2[1]);
  return new Rectangle(minLat,maxLat,minLon,maxLon);
}
