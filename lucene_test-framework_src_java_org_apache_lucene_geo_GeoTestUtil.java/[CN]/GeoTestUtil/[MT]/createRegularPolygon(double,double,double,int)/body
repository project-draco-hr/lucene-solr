{
  double[][] result=new double[2][];
  result[0]=new double[gons + 1];
  result[1]=new double[gons + 1];
  for (int i=0; i < gons; i++) {
    double angle=360.0 - i * (360.0 / gons);
    double x=Math.cos(Math.toRadians(angle));
    double y=Math.sin(Math.toRadians(angle));
    double factor=2.0;
    double step=1.0;
    int last=0;
    while (true) {
      double lat=centerLat + y * factor;
      GeoUtils.checkLatitude(lat);
      double lon=centerLon + x * factor;
      GeoUtils.checkLongitude(lon);
      double distanceMeters=SloppyMath.haversinMeters(centerLat,centerLon,lat,lon);
      if (Math.abs(distanceMeters - radiusMeters) < 0.1) {
        result[0][i]=lat;
        result[1][i]=lon;
        break;
      }
      if (distanceMeters > radiusMeters) {
        factor-=step;
        if (last == 1) {
          step/=2.0;
        }
        last=-1;
      }
 else       if (distanceMeters < radiusMeters) {
        factor+=step;
        if (last == -1) {
          step/=2.0;
        }
        last=1;
      }
    }
  }
  result[0][gons]=result[0][0];
  result[1][gons]=result[1][0];
  return new Polygon(result[0],result[1]);
}
