{
  final char[] orig=TestUtil.randomUnicodeString(random(),100).toCharArray();
  final int[] buf=new int[orig.length];
  final char[] restored=new char[buf.length];
  final int o1=TestUtil.nextInt(random(),0,Math.min(5,orig.length));
  final int o2=TestUtil.nextInt(random(),0,o1);
  final int o3=TestUtil.nextInt(random(),0,o1);
  final int codePointCount=CharacterUtils.toCodePoints(orig,o1,orig.length - o1,buf,o2);
  final int charCount=CharacterUtils.toChars(buf,o2,codePointCount,restored,o3);
  assertEquals(orig.length - o1,charCount);
  assertArrayEquals(Arrays.copyOfRange(orig,o1,o1 + charCount),Arrays.copyOfRange(restored,o3,o3 + charCount));
}
