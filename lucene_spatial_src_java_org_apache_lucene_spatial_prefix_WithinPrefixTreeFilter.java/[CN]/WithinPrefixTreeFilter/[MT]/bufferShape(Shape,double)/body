{
  if (distErr <= 0)   throw new IllegalArgumentException("distErr must be > 0");
  SpatialContext ctx=grid.getSpatialContext();
  if (shape instanceof Point) {
    return ctx.makeCircle((Point)shape,distErr);
  }
 else   if (shape instanceof Circle) {
    Circle circle=(Circle)shape;
    double newDist=circle.getRadius() + distErr;
    if (ctx.isGeo() && newDist > 180)     newDist=180;
    return ctx.makeCircle(circle.getCenter(),newDist);
  }
 else {
    Rectangle bbox=shape.getBoundingBox();
    double newMinX=bbox.getMinX() - distErr;
    double newMaxX=bbox.getMaxX() + distErr;
    double newMinY=bbox.getMinY() - distErr;
    double newMaxY=bbox.getMaxY() + distErr;
    if (ctx.isGeo()) {
      if (newMinY < -90)       newMinY=-90;
      if (newMaxY > 90)       newMaxY=90;
      if (newMinY == -90 || newMaxY == 90 || bbox.getWidth() + 2 * distErr > 360) {
        newMinX=-180;
        newMaxX=180;
      }
 else {
        newMinX=DistanceUtils.normLonDEG(newMinX);
        newMaxX=DistanceUtils.normLonDEG(newMaxX);
      }
    }
 else {
      newMinX=Math.max(newMinX,ctx.getWorldBounds().getMinX());
      newMaxX=Math.min(newMaxX,ctx.getWorldBounds().getMaxX());
      newMinY=Math.max(newMinY,ctx.getWorldBounds().getMinY());
      newMaxY=Math.min(newMaxY,ctx.getWorldBounds().getMaxY());
    }
    return ctx.makeRectangle(newMinX,newMaxX,newMinY,newMaxY);
  }
}
