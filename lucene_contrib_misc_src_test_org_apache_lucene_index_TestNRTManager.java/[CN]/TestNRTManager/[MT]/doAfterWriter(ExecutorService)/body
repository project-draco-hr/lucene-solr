{
  final double minReopenSec=0.01 + 0.05 * random.nextDouble();
  final double maxReopenSec=minReopenSec * (1.0 + 10 * random.nextDouble());
  if (VERBOSE) {
    System.out.println("TEST: make NRTManager maxReopenSec=" + maxReopenSec + " minReopenSec="+ minReopenSec);
  }
  nrt=new NRTManager(writer,es,new SearcherWarmer(){
    @Override public void warm(    IndexSearcher s) throws IOException {
      TestNRTManager.this.warmCalled=true;
      s.search(new TermQuery(new Term("body","united")),10);
    }
  }
);
  nrtThread=new NRTManagerReopenThread(nrt,maxReopenSec,minReopenSec);
  nrtThread.setName("NRT Reopen Thread");
  nrtThread.setPriority(Math.min(Thread.currentThread().getPriority() + 2,Thread.MAX_PRIORITY));
  nrtThread.setDaemon(true);
  nrtThread.start();
}
