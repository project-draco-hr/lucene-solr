{
  CompoundFileWriter cfsWriter=new CompoundFileWriter(directory,fileName,checkAbort);
  List<String> files=new ArrayList<String>(IndexFileNames.COMPOUND_EXTENSIONS.length + 1);
  for (  String ext : IndexFileNames.COMPOUND_EXTENSIONS) {
    if (ext.equals(IndexFileNames.PROX_EXTENSION) && !hasProx())     continue;
    if (mergeDocStores || (!ext.equals(IndexFileNames.FIELDS_EXTENSION) && !ext.equals(IndexFileNames.FIELDS_INDEX_EXTENSION)))     files.add(IndexFileNames.segmentFileName(segment,ext));
  }
  int numFIs=fieldInfos.size();
  for (int i=0; i < numFIs; i++) {
    FieldInfo fi=fieldInfos.fieldInfo(i);
    if (fi.isIndexed && !fi.omitNorms) {
      files.add(IndexFileNames.segmentFileName(segment,IndexFileNames.NORMS_EXTENSION));
      break;
    }
  }
  if (fieldInfos.hasVectors() && mergeDocStores) {
    for (    String ext : IndexFileNames.VECTOR_EXTENSIONS) {
      files.add(IndexFileNames.segmentFileName(segment,ext));
    }
  }
  for (  String file : files) {
    cfsWriter.addFile(file);
  }
  cfsWriter.close();
  return files;
}
