{
  int docCount=0;
  final int maxDoc=reader.maxDoc();
  final Bits delDocs=reader.getDeletedDocs();
  if (matchingFieldsReader != null) {
    for (int j=0; j < maxDoc; ) {
      if (delDocs.get(j)) {
        ++j;
        continue;
      }
      int start=j, numDocs=0;
      do {
        j++;
        numDocs++;
        if (j >= maxDoc)         break;
        if (delDocs.get(j)) {
          j++;
          break;
        }
      }
 while (numDocs < MAX_RAW_MERGE_DOCS);
      IndexInput stream=matchingFieldsReader.rawDocs(rawDocLengths,start,numDocs);
      fieldsWriter.addRawDocuments(stream,rawDocLengths,numDocs);
      docCount+=numDocs;
      checkAbort.work(300 * numDocs);
    }
  }
 else {
    for (int j=0; j < maxDoc; j++) {
      if (delDocs.get(j)) {
        continue;
      }
      Document doc=reader.document(j);
      fieldsWriter.addDocument(doc,fieldInfos);
      docCount++;
      checkAbort.work(300);
    }
  }
  return docCount;
}
