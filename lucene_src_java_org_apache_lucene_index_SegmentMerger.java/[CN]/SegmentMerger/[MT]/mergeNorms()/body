{
  final BytesRef normBuffer=new BytesRef();
  IndexOutput output=null;
  try {
    for (int i=0, numFieldInfos=fieldInfos.size(); i < numFieldInfos; i++) {
      final FieldInfo fi=fieldInfos.fieldInfo(i);
      if (fi.isIndexed && !fi.omitNorms) {
        if (output == null) {
          output=directory.createOutput(IndexFileNames.segmentFileName(segment,"",IndexFileNames.NORMS_EXTENSION));
          output.writeBytes(NORMS_HEADER,NORMS_HEADER.length);
        }
        for (        IndexReader reader : readers) {
          final int maxDoc=reader.maxDoc();
          normBuffer.grow(maxDoc);
          final byte[] norms=normBuffer.bytes;
          reader.norms(fi.name,norms,0);
          if (!reader.hasDeletions()) {
            output.writeBytes(norms,maxDoc);
          }
 else {
            final Bits delDocs=reader.getDeletedDocs();
            for (int k=0; k < maxDoc; k++) {
              if (!delDocs.get(k)) {
                output.writeByte(norms[k]);
              }
            }
          }
          checkAbort.work(maxDoc);
        }
      }
    }
  }
  finally {
    if (output != null) {
      output.close();
    }
  }
}
