{
  DocRouter router=DocRouter.getDocRouter(CompositeIdRouter.NAME);
  assertTrue(router instanceof CompositeIdRouter);
  router=DocRouter.DEFAULT;
  assertTrue(router instanceof CompositeIdRouter);
  DocCollection coll=createCollection(4,router);
  doNormalIdHashing(coll);
  doId(coll,"b!foo","shard1");
  doId(coll,"c!bar","shard2");
  doId(coll,"d!baz","shard3");
  doId(coll,"e!qux","shard4");
  doId(coll,"b/2!foo","shard1");
  doId(coll,"c/2!bar","shard2");
  doId(coll,"d/2!baz","shard3");
  doId(coll,"e/2!qux","shard4");
  doId(coll,"b/32!foo","shard1");
  doId(coll,"c/32!bar","shard2");
  doId(coll,"d/32!baz","shard3");
  doId(coll,"e/32!qux","shard4");
  doIndex(coll,"foo/0!b","shard1");
  doIndex(coll,"foo/0!c","shard2");
  doIndex(coll,"foo/0!d","shard3");
  doIndex(coll,"foo/0!e","shard4");
  doQuery(coll,"foo/0!","shard1,shard2,shard3,shard4");
  doQuery(coll,"b/1!","shard1,shard2");
  doQuery(coll,"d/1!","shard3,shard4");
}
