{
  SortedSetRawValues instance=sortedSetInstances.get(field.number);
  final SortedSetEntry entry=sortedSets.get(field.number);
  if (instance == null) {
    instance=loadSortedSet(entry);
    sortedSetInstances.put(field.number,instance);
  }
  final NumericDocValues docToOrdAddress=instance.docToOrdAddress;
  final NumericDocValues ords=instance.ords;
  final BinaryDocValues values=getBinary(field);
  return new RandomAccessOrds(){
    int ordStart;
    int ordUpto;
    int ordLimit;
    @Override public long nextOrd(){
      if (ordUpto == ordLimit) {
        return NO_MORE_ORDS;
      }
 else {
        return ords.get(ordUpto++);
      }
    }
    @Override public void setDocument(    int docID){
      ordStart=ordUpto=(int)docToOrdAddress.get(docID);
      ordLimit=(int)docToOrdAddress.get(docID + 1);
    }
    @Override public BytesRef lookupOrd(    long ord){
      return values.get((int)ord);
    }
    @Override public long getValueCount(){
      return entry.values.count;
    }
    @Override public long ordAt(    int index){
      return ords.get(ordStart + index);
    }
    @Override public int cardinality(){
      return ordLimit - ordStart;
    }
  }
;
}
