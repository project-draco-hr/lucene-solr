{
  super(weight);
  this.runAutomaton=new TermRunAutomaton(weight.automaton,subs.length);
  this.docScorer=docScorer;
  this.idToTerm=idToTerm;
  this.subs=subs;
  this.docIDQueue=new DocIDQueue(subs.length);
  this.posQueue=new PositionQueue(subs.length);
  this.anyTermID=anyTermID;
  this.subsOnDoc=new EnumAndScorer[subs.length];
  this.positions=new PosState[4];
  for (int i=0; i < this.positions.length; i++) {
    this.positions[i]=new PosState();
  }
  long cost=0;
  for (  EnumAndScorer sub : subs) {
    if (sub != null) {
      cost+=sub.posEnum.cost();
      if (sub.posEnum.nextDoc() != NO_MORE_DOCS) {
        sub.posLeft=sub.posEnum.freq() - 1;
        sub.pos=sub.posEnum.nextPosition();
      }
      docIDQueue.add(sub);
    }
  }
  this.cost=cost;
}
