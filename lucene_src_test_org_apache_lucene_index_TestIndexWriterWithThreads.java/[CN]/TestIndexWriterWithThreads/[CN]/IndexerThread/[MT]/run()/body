{
  final Document doc=new Document();
  doc.add(newField("field","aaa bbb ccc ddd eee fff ggg hhh iii jjj",Field.Store.YES,Field.Index.ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS));
  int idUpto=0;
  int fullCount=0;
  final long stopTime=System.currentTimeMillis() + 200;
  do {
    try {
      writer.updateDocument(new Term("id","" + (idUpto++)),doc);
      addCount++;
    }
 catch (    IOException ioe) {
      if (VERBOSE) {
        System.out.println("TEST: expected exc:");
        ioe.printStackTrace(System.out);
      }
      if (ioe.getMessage().startsWith("fake disk full at") || ioe.getMessage().equals("now failing on purpose")) {
        diskFull=true;
        try {
          Thread.sleep(1);
        }
 catch (        InterruptedException ie) {
          throw new ThreadInterruptedException(ie);
        }
        if (fullCount++ >= 5)         break;
      }
 else {
        if (noErrors) {
          System.out.println(Thread.currentThread().getName() + ": ERROR: unexpected IOException:");
          ioe.printStackTrace(System.out);
          error=ioe;
        }
        break;
      }
    }
catch (    Throwable t) {
      if (noErrors) {
        System.out.println(Thread.currentThread().getName() + ": ERROR: unexpected Throwable:");
        t.printStackTrace(System.out);
        error=t;
      }
      break;
    }
  }
 while (System.currentTimeMillis() < stopTime);
}
