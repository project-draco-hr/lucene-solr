{
  IndexReader reader=IndexReader.open(signedIndex.index,true);
  IndexSearcher search=new IndexSearcher(reader);
  Collator c=Collator.getInstance(Locale.ENGLISH);
  int medId=((maxId - minId) / 2);
  String minIP=pad(minId);
  String maxIP=pad(maxId);
  String medIP=pad(medId);
  int numDocs=reader.numDocs();
  assertEquals("num of docs",numDocs,1 + maxId - minId);
  Hits result;
  Query q=new TermQuery(new Term("body","body"));
  result=search.search(q,new TermRangeFilter("id",minIP,maxIP,T,T,c));
  assertEquals("find all",numDocs,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,maxIP,T,F,c));
  assertEquals("all but last",numDocs - 1,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,maxIP,F,T,c));
  assertEquals("all but first",numDocs - 1,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,maxIP,F,F,c));
  assertEquals("all but ends",numDocs - 2,result.length());
  result=search.search(q,new TermRangeFilter("id",medIP,maxIP,T,T,c));
  assertEquals("med and up",1 + maxId - medId,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,medIP,T,T,c));
  assertEquals("up to med",1 + medId - minId,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,null,T,F,c));
  assertEquals("min and up",numDocs,result.length());
  result=search.search(q,new TermRangeFilter("id",null,maxIP,F,T,c));
  assertEquals("max and down",numDocs,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,null,F,F,c));
  assertEquals("not min, but up",numDocs - 1,result.length());
  result=search.search(q,new TermRangeFilter("id",null,maxIP,F,F,c));
  assertEquals("not max, but down",numDocs - 1,result.length());
  result=search.search(q,new TermRangeFilter("id",medIP,maxIP,T,F,c));
  assertEquals("med and up, not max",maxId - medId,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,medIP,F,T,c));
  assertEquals("not min, up to med",medId - minId,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,minIP,F,F,c));
  assertEquals("min,min,F,F",0,result.length());
  result=search.search(q,new TermRangeFilter("id",medIP,medIP,F,F,c));
  assertEquals("med,med,F,F",0,result.length());
  result=search.search(q,new TermRangeFilter("id",maxIP,maxIP,F,F,c));
  assertEquals("max,max,F,F",0,result.length());
  result=search.search(q,new TermRangeFilter("id",minIP,minIP,T,T,c));
  assertEquals("min,min,T,T",1,result.length());
  result=search.search(q,new TermRangeFilter("id",null,minIP,F,T,c));
  assertEquals("nul,min,F,T",1,result.length());
  result=search.search(q,new TermRangeFilter("id",maxIP,maxIP,T,T,c));
  assertEquals("max,max,T,T",1,result.length());
  result=search.search(q,new TermRangeFilter("id",maxIP,null,T,F,c));
  assertEquals("max,nul,T,T",1,result.length());
  result=search.search(q,new TermRangeFilter("id",medIP,medIP,T,T,c));
  assertEquals("med,med,T,T",1,result.length());
}
