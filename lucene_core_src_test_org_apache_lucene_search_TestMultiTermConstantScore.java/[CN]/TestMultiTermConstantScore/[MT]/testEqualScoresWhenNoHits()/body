{
  IndexSearcher search=newSearcher(reader);
  ScoreDoc[] result;
  TermQuery dummyTerm=new TermQuery(new Term("data","1"));
  BooleanQuery bq=new BooleanQuery();
  bq.add(dummyTerm,BooleanClause.Occur.SHOULD);
  bq.add(csrq("data","#","#",T,T),BooleanClause.Occur.SHOULD);
  result=search.search(bq,null,1000).scoreDocs;
  int numHits=result.length;
  assertEquals("wrong number of results",1,numHits);
  float score=result[0].score;
  for (int i=1; i < numHits; i++) {
    assertEquals("score for " + i + " was not the same",score,result[i].score,SCORE_COMP_THRESH);
  }
  bq=new BooleanQuery();
  bq.add(dummyTerm,BooleanClause.Occur.SHOULD);
  bq.add(csrq("data","#","#",T,T,MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE),BooleanClause.Occur.SHOULD);
  result=search.search(bq,null,1000).scoreDocs;
  numHits=result.length;
  assertEquals("wrong number of results",1,numHits);
  for (int i=0; i < numHits; i++) {
    assertEquals("score for " + i + " was not the same",score,result[i].score,SCORE_COMP_THRESH);
  }
  bq=new BooleanQuery();
  bq.add(dummyTerm,BooleanClause.Occur.SHOULD);
  bq.add(csrq("data","#","#",T,T,MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT),BooleanClause.Occur.SHOULD);
  result=search.search(bq,null,1000).scoreDocs;
  numHits=result.length;
  assertEquals("wrong number of results",1,numHits);
  for (int i=0; i < numHits; i++) {
    assertEquals("score for " + i + " was not the same",score,result[i].score,SCORE_COMP_THRESH);
  }
}
