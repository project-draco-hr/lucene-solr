{
  for (int i=0; i < iterations; ++i) {
    final long block0=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(block0 >>> 57);
    values[valuesOffset++]=(int)((block0 >>> 50) & 127L);
    values[valuesOffset++]=(int)((block0 >>> 43) & 127L);
    values[valuesOffset++]=(int)((block0 >>> 36) & 127L);
    values[valuesOffset++]=(int)((block0 >>> 29) & 127L);
    values[valuesOffset++]=(int)((block0 >>> 22) & 127L);
    values[valuesOffset++]=(int)((block0 >>> 15) & 127L);
    values[valuesOffset++]=(int)((block0 >>> 8) & 127L);
    values[valuesOffset++]=(int)((block0 >>> 1) & 127L);
    final long block1=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block0 & 1L) << 6) | (block1 >>> 58));
    values[valuesOffset++]=(int)((block1 >>> 51) & 127L);
    values[valuesOffset++]=(int)((block1 >>> 44) & 127L);
    values[valuesOffset++]=(int)((block1 >>> 37) & 127L);
    values[valuesOffset++]=(int)((block1 >>> 30) & 127L);
    values[valuesOffset++]=(int)((block1 >>> 23) & 127L);
    values[valuesOffset++]=(int)((block1 >>> 16) & 127L);
    values[valuesOffset++]=(int)((block1 >>> 9) & 127L);
    values[valuesOffset++]=(int)((block1 >>> 2) & 127L);
    final long block2=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block1 & 3L) << 5) | (block2 >>> 59));
    values[valuesOffset++]=(int)((block2 >>> 52) & 127L);
    values[valuesOffset++]=(int)((block2 >>> 45) & 127L);
    values[valuesOffset++]=(int)((block2 >>> 38) & 127L);
    values[valuesOffset++]=(int)((block2 >>> 31) & 127L);
    values[valuesOffset++]=(int)((block2 >>> 24) & 127L);
    values[valuesOffset++]=(int)((block2 >>> 17) & 127L);
    values[valuesOffset++]=(int)((block2 >>> 10) & 127L);
    values[valuesOffset++]=(int)((block2 >>> 3) & 127L);
    final long block3=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block2 & 7L) << 4) | (block3 >>> 60));
    values[valuesOffset++]=(int)((block3 >>> 53) & 127L);
    values[valuesOffset++]=(int)((block3 >>> 46) & 127L);
    values[valuesOffset++]=(int)((block3 >>> 39) & 127L);
    values[valuesOffset++]=(int)((block3 >>> 32) & 127L);
    values[valuesOffset++]=(int)((block3 >>> 25) & 127L);
    values[valuesOffset++]=(int)((block3 >>> 18) & 127L);
    values[valuesOffset++]=(int)((block3 >>> 11) & 127L);
    values[valuesOffset++]=(int)((block3 >>> 4) & 127L);
    final long block4=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block3 & 15L) << 3) | (block4 >>> 61));
    values[valuesOffset++]=(int)((block4 >>> 54) & 127L);
    values[valuesOffset++]=(int)((block4 >>> 47) & 127L);
    values[valuesOffset++]=(int)((block4 >>> 40) & 127L);
    values[valuesOffset++]=(int)((block4 >>> 33) & 127L);
    values[valuesOffset++]=(int)((block4 >>> 26) & 127L);
    values[valuesOffset++]=(int)((block4 >>> 19) & 127L);
    values[valuesOffset++]=(int)((block4 >>> 12) & 127L);
    values[valuesOffset++]=(int)((block4 >>> 5) & 127L);
    final long block5=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block4 & 31L) << 2) | (block5 >>> 62));
    values[valuesOffset++]=(int)((block5 >>> 55) & 127L);
    values[valuesOffset++]=(int)((block5 >>> 48) & 127L);
    values[valuesOffset++]=(int)((block5 >>> 41) & 127L);
    values[valuesOffset++]=(int)((block5 >>> 34) & 127L);
    values[valuesOffset++]=(int)((block5 >>> 27) & 127L);
    values[valuesOffset++]=(int)((block5 >>> 20) & 127L);
    values[valuesOffset++]=(int)((block5 >>> 13) & 127L);
    values[valuesOffset++]=(int)((block5 >>> 6) & 127L);
    final long block6=blocks[blocksOffset++];
    values[valuesOffset++]=(int)(((block5 & 63L) << 1) | (block6 >>> 63));
    values[valuesOffset++]=(int)((block6 >>> 56) & 127L);
    values[valuesOffset++]=(int)((block6 >>> 49) & 127L);
    values[valuesOffset++]=(int)((block6 >>> 42) & 127L);
    values[valuesOffset++]=(int)((block6 >>> 35) & 127L);
    values[valuesOffset++]=(int)((block6 >>> 28) & 127L);
    values[valuesOffset++]=(int)((block6 >>> 21) & 127L);
    values[valuesOffset++]=(int)((block6 >>> 14) & 127L);
    values[valuesOffset++]=(int)((block6 >>> 7) & 127L);
    values[valuesOffset++]=(int)(block6 & 127L);
  }
}
