{
  return new QParser(qstr,localParams,params,req){
    @Override public Query parse() throws SyntaxError {
      if (localParams != null && localParams.get(ScoreJoinQParserPlugin.SCORE) != null) {
        return new ScoreJoinQParserPlugin().createParser(qstr,localParams,params,req).parse();
      }
 else {
        return parseJoin();
      }
    }
    Query parseJoin() throws SyntaxError {
      final String fromField=getParam("from");
      final String fromIndex=getParam("fromIndex");
      final String toField=getParam("to");
      final String v=localParams.get("v");
      final String coreName;
      Query fromQuery;
      long fromCoreOpenTime=0;
      if (fromIndex != null && !fromIndex.equals(req.getCore().getCoreDescriptor().getName())) {
        CoreContainer container=req.getCore().getCoreDescriptor().getCoreContainer();
        coreName=ScoreJoinQParserPlugin.getCoreName(fromIndex,container);
        final SolrCore fromCore=container.getCore(coreName);
        if (fromCore == null) {
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Cross-core join: no such core " + coreName);
        }
        RefCounted<SolrIndexSearcher> fromHolder=null;
        LocalSolrQueryRequest otherReq=new LocalSolrQueryRequest(fromCore,params);
        try {
          QParser parser=QParser.getParser(v,"lucene",otherReq);
          fromQuery=parser.getQuery();
          fromHolder=fromCore.getRegisteredSearcher();
          if (fromHolder != null)           fromCoreOpenTime=fromHolder.get().getOpenNanoTime();
        }
  finally {
          otherReq.close();
          fromCore.close();
          if (fromHolder != null)           fromHolder.decref();
        }
      }
 else {
        coreName=null;
        QParser fromQueryParser=subQuery(v,null);
        fromQuery=fromQueryParser.getQuery();
      }
      JoinQuery jq=new JoinQuery(fromField,toField,coreName == null ? fromIndex : coreName,fromQuery);
      jq.fromCoreOpenTime=fromCoreOpenTime;
      return jq;
    }
  }
;
}
