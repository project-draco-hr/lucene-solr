{
  Object patternParam=args.remove(PATTERN_PARAM);
  if (patternParam == null) {
    throw new SolrException(ErrorCode.SERVER_ERROR,"Missing required init parameter: " + PATTERN_PARAM);
  }
  try {
    pattern=Pattern.compile(patternParam.toString());
  }
 catch (  PatternSyntaxException e) {
    throw new SolrException(ErrorCode.SERVER_ERROR,"Invalid regex: " + patternParam,e);
  }
  Object replacementParam=args.remove(REPLACEMENT_PARAM);
  if (replacementParam == null) {
    throw new SolrException(ErrorCode.SERVER_ERROR,"Missing required init parameter: " + REPLACEMENT_PARAM);
  }
  Boolean literalReplacement=args.removeBooleanArg(LITERAL_REPLACEMENT_PARAM);
  if (literalReplacement != null) {
    literalReplacementEnabled=literalReplacement;
  }
  if (literalReplacementEnabled) {
    replacement=Matcher.quoteReplacement(replacementParam.toString());
  }
 else {
    replacement=replacementParam.toString();
  }
  super.init(args);
}
