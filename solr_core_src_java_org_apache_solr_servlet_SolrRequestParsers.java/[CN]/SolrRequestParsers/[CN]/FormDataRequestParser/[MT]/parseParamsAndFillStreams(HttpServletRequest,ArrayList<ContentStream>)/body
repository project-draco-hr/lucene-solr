{
  if (!isFormData(req)) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Not application/x-www-form-urlencoded content: " + req.getContentType());
  }
  final Map<String,String[]> map=new HashMap<String,String[]>();
  final String qs=req.getQueryString();
  if (qs != null) {
    parseQueryString(qs,map);
  }
  final long totalLength=req.getContentLength();
  final long maxLength=((long)uploadLimitKB) * 1024L;
  if (totalLength > maxLength) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"application/x-www-form-urlencoded content length (" + totalLength + " bytes) exceeds upload limit of "+ uploadLimitKB+ " KB");
  }
  final String cs=ContentStreamBase.getCharsetFromContentType(req.getContentType());
  final Charset charset=(cs == null) ? IOUtils.CHARSET_UTF_8 : Charset.forName(cs);
  InputStream in=null;
  try {
    in=req.getInputStream();
    final long bytesRead=parseFormDataContent(FastInputStream.wrap(in),maxLength,charset,map);
    if (bytesRead == 0L && totalLength > 0L) {
      throw getParameterIncompatibilityException();
    }
  }
 catch (  IOException ioe) {
    throw new SolrException(ErrorCode.BAD_REQUEST,ioe);
  }
catch (  IllegalStateException ise) {
    throw (SolrException)getParameterIncompatibilityException().initCause(ise);
  }
 finally {
    IOUtils.closeWhileHandlingException(in);
  }
  return new MultiMapSolrParams(map);
}
