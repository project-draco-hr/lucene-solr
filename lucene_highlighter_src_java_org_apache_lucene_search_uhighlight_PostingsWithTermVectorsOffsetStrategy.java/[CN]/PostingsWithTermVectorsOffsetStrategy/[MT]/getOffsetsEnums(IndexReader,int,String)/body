{
  LeafReader leafReader;
  if (reader instanceof LeafReader) {
    leafReader=(LeafReader)reader;
  }
 else {
    List<LeafReaderContext> leaves=reader.leaves();
    LeafReaderContext LeafReaderContext=leaves.get(ReaderUtil.subIndex(docId,leaves));
    leafReader=LeafReaderContext.reader();
    docId-=LeafReaderContext.docBase;
  }
  Terms docTerms=leafReader.getTermVector(docId,field);
  if (docTerms == null) {
    return Collections.emptyList();
  }
  leafReader=new TermVectorFilteredLeafReader(leafReader,docTerms);
  TokenStream tokenStream=automata.length > 0 ? MultiTermHighlighting.uninvertAndFilterTerms(leafReader.terms(field),docId,this.automata,content.length()) : null;
  return createOffsetsEnums(leafReader,docId,tokenStream);
}
