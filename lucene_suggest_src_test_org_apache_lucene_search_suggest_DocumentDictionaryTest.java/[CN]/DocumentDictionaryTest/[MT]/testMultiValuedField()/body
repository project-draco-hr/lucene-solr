{
  Directory dir=newDirectory();
  Analyzer analyzer=new MockAnalyzer(random());
  IndexWriterConfig iwc=newIndexWriterConfig(random(),analyzer);
  iwc.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir,iwc);
  List<Suggestion> suggestions=indexMultiValuedDocuments(atLeast(1000),writer);
  writer.commit();
  writer.close();
  IndexReader ir=DirectoryReader.open(dir);
  Dictionary dictionary=new DocumentDictionary(ir,FIELD_NAME,WEIGHT_FIELD_NAME,PAYLOAD_FIELD_NAME,CONTEXT_FIELD_NAME);
  InputIterator inputIterator=dictionary.getEntryIterator();
  BytesRef f;
  Iterator<Suggestion> suggestionsIter=suggestions.iterator();
  while ((f=inputIterator.next()) != null) {
    Suggestion nextSuggestion=suggestionsIter.next();
    assertTrue(f.equals(nextSuggestion.term));
    long weight=nextSuggestion.weight;
    assertEquals(inputIterator.weight(),(weight != -1) ? weight : 0);
    assertEquals(inputIterator.payload(),nextSuggestion.payload);
    assertTrue(inputIterator.contexts().equals(nextSuggestion.contexts));
  }
  assertFalse(suggestionsIter.hasNext());
  IOUtils.close(ir,analyzer,dir);
}
