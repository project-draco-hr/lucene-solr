{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  iwc.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir,iwc);
  Map<String,Document> docs=generateIndexDocuments(10);
  Random rand=random();
  List<String> termsToDel=new ArrayList<>();
  for (  Document doc : docs.values()) {
    if (rand.nextBoolean()) {
      termsToDel.add(doc.get(FIELD_NAME));
    }
    writer.addDocument(doc);
  }
  writer.commit();
  Term[] delTerms=new Term[termsToDel.size()];
  for (int i=0; i < termsToDel.size(); i++) {
    delTerms[i]=new Term(FIELD_NAME,termsToDel.get(i));
  }
  for (  Term delTerm : delTerms) {
    writer.deleteDocuments(delTerm);
  }
  writer.commit();
  writer.close();
  for (  String termToDel : termsToDel) {
    assertTrue(null != docs.remove(termToDel));
  }
  IndexReader ir=DirectoryReader.open(dir);
  assertEquals(ir.numDocs(),docs.size());
  Dictionary dictionary=new DocumentDictionary(ir,FIELD_NAME,WEIGHT_FIELD_NAME);
  TermFreqPayloadIterator tfp=(TermFreqPayloadIterator)dictionary.getWordsIterator();
  BytesRef f;
  while ((f=tfp.next()) != null) {
    Document doc=docs.remove(f.utf8ToString());
    assertTrue(f.equals(new BytesRef(doc.get(FIELD_NAME))));
    assertEquals(tfp.weight(),doc.getField(WEIGHT_FIELD_NAME).numericValue().longValue());
    assertEquals(tfp.payload(),null);
  }
  assertTrue(docs.isEmpty());
  ir.close();
  dir.close();
}
