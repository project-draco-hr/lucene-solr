{
  waitForThingsToLevelOut(30000);
  log.info("testLoadDocsIntoGettingStartedCollection initialized OK ... running test logic");
  String testCollectionName="gettingstarted";
  File data_driven_schema_configs=new File(ExternalPaths.SCHEMALESS_CONFIGSET);
  assertTrue(data_driven_schema_configs.getAbsolutePath() + " not found!",data_driven_schema_configs.isDirectory());
  Set<String> liveNodes=cloudClient.getZkStateReader().getClusterState().getLiveNodes();
  if (liveNodes.isEmpty())   fail("No live nodes found! Cannot create a collection until there is at least 1 live node in the cluster.");
  String firstLiveNode=liveNodes.iterator().next();
  String solrUrl=cloudClient.getZkStateReader().getBaseUrlForNodeName(firstLiveNode);
  String[] args=new String[]{"create_collection","-name",testCollectionName,"-shards","2","-replicationFactor","2","-confname",testCollectionName,"-confdir","data_driven_schema_configs","-configsetsDir",data_driven_schema_configs.getParentFile().getParentFile().getAbsolutePath(),"-solrUrl",solrUrl};
  SolrCLI.CreateCollectionTool tool=new SolrCLI.CreateCollectionTool();
  CommandLine cli=SolrCLI.processCommandLineArgs(SolrCLI.joinCommonAndToolOptions(tool.getOptions()),args);
  log.info("Creating the '" + testCollectionName + "' collection using SolrCLI with: "+ solrUrl);
  tool.runTool(cli);
  assertTrue("Collection '" + testCollectionName + "' doesn't exist after trying to create it!",cloudClient.getZkStateReader().getClusterState().hasCollection(testCollectionName));
  ensureAllReplicasAreActive(testCollectionName,"shard1",2,2,20);
  ensureAllReplicasAreActive(testCollectionName,"shard2",2,2,10);
  cloudClient.setDefaultCollection(testCollectionName);
  log.info("Created collection, now posting example docs!");
  File exampleDocsDir=new File(ExternalPaths.SOURCE_HOME,"example/exampledocs");
  assertTrue(exampleDocsDir.getAbsolutePath() + " not found!",exampleDocsDir.isDirectory());
  List<File> xmlFiles=Arrays.asList(exampleDocsDir.listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".xml");
    }
  }
));
  Collections.sort(xmlFiles,new Comparator<File>(){
    public int compare(    File o1,    File o2){
      return o1.getName().compareTo(o2.getName());
    }
  }
);
  Collections.shuffle(xmlFiles,new Random(random().nextLong()));
  int expectedXmlFileCount=14;
  int expectedXmlDocCount=32;
  assertEquals("Unexpected # of example XML files in " + exampleDocsDir.getAbsolutePath(),expectedXmlFileCount,xmlFiles.size());
  for (  File xml : xmlFiles) {
    ContentStreamUpdateRequest req=new ContentStreamUpdateRequest("/update");
    req.addFile(xml,"application/xml");
    log.info("POSTing " + xml.getAbsolutePath());
    cloudClient.request(req);
  }
  cloudClient.commit();
  Thread.sleep(1000);
  QueryResponse qr=cloudClient.query(new SolrQuery("*:*"));
  int numFound=(int)qr.getResults().getNumFound();
  assertEquals("*:* found unexpected number of documents",expectedXmlDocCount,numFound);
  log.info("testLoadDocsIntoGettingStartedCollection succeeded ... shutting down now!");
}
