{
  StreamExpression expression=new StreamExpression(factory.getFunctionName(this.getClass()));
  if (streamA instanceof Expressible) {
    expression.addParameter(((Expressible)streamA).toExpression(factory));
  }
 else {
    throw new IOException("This IntersectStream contains a non-expressible TupleStream - it cannot be converted to an expression");
  }
  if (originalStreamB instanceof Expressible) {
    expression.addParameter(((Expressible)originalStreamB).toExpression(factory));
  }
 else {
    throw new IOException("This IntersectStream contains a non-expressible TupleStream - it cannot be converted to an expression");
  }
  expression.addParameter(new StreamExpressionNamedParameter("on",eq.toExpression(factory)));
  return expression;
}
