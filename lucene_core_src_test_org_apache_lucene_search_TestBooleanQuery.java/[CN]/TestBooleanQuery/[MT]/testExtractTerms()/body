{
  Term a=new Term("f","a");
  Term b=new Term("f","b");
  Term c=new Term("f","c");
  Term d=new Term("f","d");
  BooleanQuery bq=new BooleanQuery();
  bq.add(new TermQuery(a),Occur.SHOULD);
  bq.add(new TermQuery(b),Occur.MUST);
  bq.add(new TermQuery(c),Occur.FILTER);
  bq.add(new TermQuery(d),Occur.MUST_NOT);
  IndexSearcher searcher=new IndexSearcher(new MultiReader());
  Set<Term> scoringTerms=new HashSet<>();
  searcher.createNormalizedWeight(bq,true).extractTerms(scoringTerms);
  assertEquals(new HashSet<>(Arrays.asList(a,b)),scoringTerms);
  Set<Term> matchingTerms=new HashSet<>();
  searcher.createNormalizedWeight(bq,false).extractTerms(matchingTerms);
  assertEquals(new HashSet<>(Arrays.asList(a,b,c)),matchingTerms);
}
