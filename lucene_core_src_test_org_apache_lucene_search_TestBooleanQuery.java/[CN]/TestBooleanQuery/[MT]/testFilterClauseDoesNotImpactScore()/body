{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  Field f=newTextField("field","a b c d",Field.Store.NO);
  doc.add(f);
  w.addDocument(doc);
  f.setStringValue("b d");
  w.addDocument(doc);
  f.setStringValue("a d");
  w.addDocument(doc);
  w.commit();
  DirectoryReader reader=w.getReader();
  final IndexSearcher searcher=new IndexSearcher(reader);
  BooleanQuery q=new BooleanQuery();
  q.setBoost(random().nextFloat());
  q.add(new TermQuery(new Term("field","a")),Occur.FILTER);
  assertSameScoresWithoutFilters(searcher,q);
  q.add(new TermQuery(new Term("field","b")),Occur.FILTER);
  assertSameScoresWithoutFilters(searcher,q);
  q.add(new TermQuery(new Term("field","c")),Occur.SHOULD);
  assertSameScoresWithoutFilters(searcher,q);
  q=new BooleanQuery();
  q.setBoost(random().nextFloat());
  q.add(new TermQuery(new Term("field","a")),Occur.FILTER);
  q.add(new TermQuery(new Term("field","e")),Occur.SHOULD);
  assertSameScoresWithoutFilters(searcher,q);
  q=new BooleanQuery();
  q.setBoost(random().nextFloat());
  q.add(new TermQuery(new Term("field","a")),Occur.FILTER);
  q.add(new TermQuery(new Term("field","d")),Occur.MUST);
  assertSameScoresWithoutFilters(searcher,q);
  q=new BooleanQuery();
  q.setBoost(random().nextFloat());
  q.add(new TermQuery(new Term("field","b")),Occur.FILTER);
  q.add(new TermQuery(new Term("field","a")),Occur.SHOULD);
  q.add(new TermQuery(new Term("field","d")),Occur.SHOULD);
  q.setMinimumNumberShouldMatch(1);
  assertSameScoresWithoutFilters(searcher,q);
  reader.close();
  w.close();
  dir.close();
}
