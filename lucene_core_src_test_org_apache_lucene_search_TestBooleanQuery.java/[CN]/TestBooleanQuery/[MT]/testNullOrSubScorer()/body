{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  doc.add(newTextField("field","a b c d",Field.Store.NO));
  w.addDocument(doc);
  IndexReader r=w.getReader();
  IndexSearcher s=newSearcher(r);
  s.setSimilarity(new ClassicSimilarity());
  BooleanQuery.Builder q=new BooleanQuery.Builder();
  q.add(new TermQuery(new Term("field","a")),BooleanClause.Occur.SHOULD);
  float score=s.search(q.build(),10).getMaxScore();
  Query subQuery=new BoostQuery(new TermQuery(new Term("field","not_in_index")),0f);
  q.add(subQuery,BooleanClause.Occur.SHOULD);
  float score2=s.search(q.build(),10).getMaxScore();
  assertEquals(score * .5F,score2,1e-6);
  BooleanQuery.Builder qq=new BooleanQuery.Builder();
  for (  BooleanClause clause : q.build()) {
    qq.add(clause);
  }
  PhraseQuery phrase=new PhraseQuery("field","not_in_index","another_not_in_index");
  qq.add(new BoostQuery(phrase,0f),BooleanClause.Occur.SHOULD);
  score2=s.search(qq.build(),10).getMaxScore();
  assertEquals(score * (1 / 3F),score2,1e-6);
  subQuery=new BoostQuery(new TermQuery(new Term("field","b")),0f);
  q.add(subQuery,BooleanClause.Occur.MUST);
  score2=s.search(q.build(),10).getMaxScore();
  assertEquals(score * (2 / 3F),score2,1e-6);
  PhraseQuery pq=new PhraseQuery("field",new String[0]);
  q.add(pq,BooleanClause.Occur.SHOULD);
  assertEquals(1,s.search(q.build(),10).totalHits);
  q=new BooleanQuery.Builder();
  pq=new PhraseQuery("field",new String[0]);
  q.add(new TermQuery(new Term("field","a")),BooleanClause.Occur.SHOULD);
  q.add(pq,BooleanClause.Occur.MUST);
  assertEquals(0,s.search(q.build(),10).totalHits);
  DisjunctionMaxQuery dmq=new DisjunctionMaxQuery(1.0f);
  dmq.add(new TermQuery(new Term("field","a")));
  dmq.add(pq);
  assertEquals(1,s.search(dmq,10).totalHits);
  r.close();
  w.close();
  dir.close();
}
