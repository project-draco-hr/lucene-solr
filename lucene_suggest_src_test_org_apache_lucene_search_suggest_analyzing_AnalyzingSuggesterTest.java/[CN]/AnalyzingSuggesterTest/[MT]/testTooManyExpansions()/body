{
  final Analyzer a=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      Tokenizer tokenizer=new MockTokenizer(MockTokenizer.SIMPLE,true);
      return new TokenStreamComponents(tokenizer){
        @Override public TokenStream getTokenStream(){
          Token a=new Token("a",0,1);
          a.setPositionIncrement(1);
          Token b=new Token("b",0,1);
          b.setPositionIncrement(0);
          return new CannedTokenStream(new Token[]{a,b});
        }
        @Override protected void setReader(        final Reader reader) throws IOException {
        }
      }
;
    }
  }
;
  Directory tempDir=getDirectory();
  AnalyzingSuggester suggester=new AnalyzingSuggester(tempDir,"suggest",a,a,0,256,1,true);
  suggester.build(new InputArrayIterator(new Input[]{new Input("a",1)}));
  assertEquals("[a/1]",suggester.lookup("a",false,1).toString());
  IOUtils.close(a,tempDir);
}
