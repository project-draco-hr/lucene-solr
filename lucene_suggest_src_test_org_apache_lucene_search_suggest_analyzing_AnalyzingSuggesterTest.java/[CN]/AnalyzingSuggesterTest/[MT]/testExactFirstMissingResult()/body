{
  Analyzer a=new MockAnalyzer(random());
  AnalyzingSuggester suggester=new AnalyzingSuggester(a,a,AnalyzingSuggester.EXACT_FIRST,256,-1,true);
  suggester.build(new InputArrayIterator(new Input[]{new Input("a",5),new Input("a b",3),new Input("a c",4)}));
  assertEquals(3,suggester.getCount());
  List<LookupResult> results=suggester.lookup("a",false,3);
  assertEquals(3,results.size());
  assertEquals("a",results.get(0).key);
  assertEquals(5,results.get(0).value);
  assertEquals("a c",results.get(1).key);
  assertEquals(4,results.get(1).value);
  assertEquals("a b",results.get(2).key);
  assertEquals(3,results.get(2).value);
  Path tmpDir=createTempDir("AnalyzingSuggesterTest");
  Path path=tmpDir.resolve("suggester");
  OutputStream os=Files.newOutputStream(path);
  suggester.store(os);
  os.close();
  InputStream is=Files.newInputStream(path);
  suggester.load(is);
  is.close();
  assertEquals(3,suggester.getCount());
  results=suggester.lookup("a",false,3);
  assertEquals(3,results.size());
  assertEquals("a",results.get(0).key);
  assertEquals(5,results.get(0).value);
  assertEquals("a c",results.get(1).key);
  assertEquals(4,results.get(1).value);
  assertEquals("a b",results.get(2).key);
  assertEquals(3,results.get(2).value);
}
