{
  this.indexer.destroy();
  String id="myID";
  Field f=new Field(FIELD_ID,id,Field.Store.YES,Field.Index.UN_TOKENIZED);
  Document doc=new Document();
  doc.add(f);
  Term delTerm=new Term(FIELD_ID,id);
  IndexDocument iDoc=new IndexDocumentStub(doc,delTerm,IndexAction.INSERT);
  Future<IndexDocument> future=new FutureStub<IndexDocument>(iDoc);
  try {
    this.indexer.addIndexableDocumentTask(future);
    fail("indexer already closed exc. expected");
  }
 catch (  IllegalStateException e) {
  }
  this.indexer=GDataIndexer.createGdataIndexer(config,dir,true);
  CountDownLatch documentLatch=new CountDownLatch(1);
  iDoc=new IndexDocumentStub(doc,delTerm,IndexAction.INSERT,documentLatch);
  CountDownLatch latch=new CountDownLatch(1);
  future=new FutureStub<IndexDocument>(iDoc,latch,true);
  this.indexer.addIndexableDocumentTask(future);
  this.indexer.destroy();
  latch.countDown();
  documentLatch.await(5000,TimeUnit.MILLISECONDS);
  while (this.indexer.writer != null) {
  }
  IndexSearcher s=new IndexSearcher(this.dir);
  Hits h=s.search(new TermQuery(delTerm));
  assertEquals(1,h.length());
  s.close();
}
