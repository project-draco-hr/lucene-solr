{
  for (int cc=1; cc <= numCommits; ++cc) {
    for (int nn=1; nn <= numDocsPerCommit; ++nn) {
      ++numDocs;
      final Integer docKey=new Integer(numDocs);
      SolrInputDocument doc=new SolrInputDocument();
      doc.setField(keyField,"" + docKey);
      final int MM=TestMiniSolrCloudCluster.random().nextInt(60);
      if (minTimestampMM == null || MM <= minTimestampMM.intValue()) {
        if (minTimestampMM != null && MM < minTimestampMM.intValue()) {
          minTimestampDocKeys.clear();
        }
        minTimestampMM=new Integer(MM);
        minTimestampDocKeys.add(docKey);
      }
      if (maxTimestampMM == null || maxTimestampMM.intValue() <= MM) {
        if (maxTimestampMM != null && maxTimestampMM.intValue() < MM) {
          maxTimestampDocKeys.clear();
        }
        maxTimestampMM=new Integer(MM);
        maxTimestampDocKeys.add(docKey);
      }
      doc.setField(timestampField,ZonedDateTime.of(2016,1,1,0,MM,0,0,ZoneOffset.UTC).toInstant().toString());
      doc.setField(oddField,"" + (numDocs % 2));
      doc.setField(quadField,"" + (numDocs % 4) + 1);
      cloudSolrClient.add(doc);
    }
    cloudSolrClient.commit();
  }
  if (optimize) {
    cloudSolrClient.optimize();
  }
}
