{
  try {
    searcher=new IndexSearcher(IndexReader.open(collection));
  }
 catch (  IOException e) {
    if (throwOnException) {
      throw new JspException("IndexSearcher(IndexReader.open(collection)): " + e);
    }
    abort=true;
  }
  if (!abort) {
    analyzer=new StopAnalyzer();
    try {
      query=QueryParser.parse(criteria,"contents",analyzer);
    }
 catch (    ParseException e) {
      if (throwOnException) {
        throw new JspException("QueryParser.parse(criteria,contents,analyzer): " + e);
      }
      abort=true;
    }
    if (!abort) {
      try {
        hits=searcher.search(query);
      }
 catch (      IOException e) {
        if (throwOnException) {
          throw new JspException("searcher.search(query): " + e);
        }
        abort=true;
      }
      if (!abort) {
        hitCount=new Integer(hits.length()).toString();
        HITCOUNT=hits.length();
        PAGECOUNT=PAGECOUNT=(int)(((double)startRow) / maxRows);
        pageCount=new Integer(PAGECOUNT).toString();
        thispage=maxRows;
        if ((startRow + maxRows) > hits.length()) {
          thispage=hits.length() - startRow;
        }
        hitArray=new ArrayList();
        for (int i=startRow; i < (thispage + startRow); i++) {
          hitMap=new HashMap();
          Document doc=null;
          try {
            doc=hits.doc(i);
          }
 catch (          IOException e) {
            if (throwOnException) {
              throw new JspException("hits.doc(i) : " + e);
            }
            abort=true;
          }
          if (!abort) {
            try {
              hitMap.put("score",new Float(hits.score(i)).toString());
            }
 catch (            IOException e) {
              if (throwOnException) {
                throw new JspException("hitMap.put(score,new Float(hits.score(i)).toString()); : " + e);
              }
              abort=true;
            }
            if (!abort) {
              fields=doc.fields();
              while (fields.hasMoreElements()) {
                Field field=(Field)fields.nextElement();
                String fieldName=field.name();
                hitMap.put(fieldName,doc.get(fieldName));
              }
              hitArray.add(hitMap);
            }
          }
        }
      }
    }
  }
}
