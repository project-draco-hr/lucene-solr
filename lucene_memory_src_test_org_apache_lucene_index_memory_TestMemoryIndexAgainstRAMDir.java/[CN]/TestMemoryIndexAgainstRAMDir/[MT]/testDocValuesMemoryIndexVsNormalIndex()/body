{
  Document doc=new Document();
  long randomLong=random().nextLong();
  doc.add(new NumericDocValuesField("numeric",randomLong));
  int numValues=atLeast(5);
  for (int i=0; i < numValues; i++) {
    randomLong=random().nextLong();
    doc.add(new SortedNumericDocValuesField("sorted_numeric",randomLong));
    if (random().nextBoolean()) {
      doc.add(new SortedNumericDocValuesField("sorted_numeric",randomLong));
    }
  }
  BytesRef randomTerm=new BytesRef(randomTerm());
  doc.add(new BinaryDocValuesField("binary",randomTerm));
  if (random().nextBoolean()) {
    doc.add(new StringField("binary",randomTerm,Field.Store.NO));
  }
  randomTerm=new BytesRef(randomTerm());
  doc.add(new SortedDocValuesField("sorted",randomTerm));
  if (random().nextBoolean()) {
    doc.add(new StringField("sorted",randomTerm,Field.Store.NO));
  }
  numValues=atLeast(5);
  for (int i=0; i < numValues; i++) {
    randomTerm=new BytesRef(randomTerm());
    doc.add(new SortedSetDocValuesField("sorted_set",randomTerm));
    if (random().nextBoolean()) {
      doc.add(new SortedSetDocValuesField("sorted_set",randomTerm));
    }
    if (random().nextBoolean()) {
      doc.add(new StringField("sorted_set",randomTerm,Field.Store.NO));
    }
  }
  MockAnalyzer mockAnalyzer=new MockAnalyzer(random());
  MemoryIndex memoryIndex=MemoryIndex.fromDocument(doc,mockAnalyzer);
  IndexReader indexReader=memoryIndex.createSearcher().getIndexReader();
  LeafReader leafReader=indexReader.leaves().get(0).reader();
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(random(),mockAnalyzer));
  writer.addDocument(doc);
  writer.close();
  IndexReader controlIndexReader=DirectoryReader.open(dir);
  LeafReader controlLeafReader=controlIndexReader.leaves().get(0).reader();
  NumericDocValues numericDocValues=leafReader.getNumericDocValues("numeric");
  NumericDocValues controlNumericDocValues=controlLeafReader.getNumericDocValues("numeric");
  assertEquals(0,numericDocValues.nextDoc());
  assertEquals(0,controlNumericDocValues.nextDoc());
  assertEquals(controlNumericDocValues.longValue(),numericDocValues.longValue());
  SortedNumericDocValues sortedNumericDocValues=leafReader.getSortedNumericDocValues("sorted_numeric");
  assertEquals(0,sortedNumericDocValues.nextDoc());
  SortedNumericDocValues controlSortedNumericDocValues=controlLeafReader.getSortedNumericDocValues("sorted_numeric");
  assertEquals(0,controlSortedNumericDocValues.nextDoc());
  assertEquals(controlSortedNumericDocValues.docValueCount(),sortedNumericDocValues.docValueCount());
  for (int i=0; i < controlSortedNumericDocValues.docValueCount(); i++) {
    assertEquals(controlSortedNumericDocValues.nextValue(),sortedNumericDocValues.nextValue());
  }
  BinaryDocValues binaryDocValues=leafReader.getBinaryDocValues("binary");
  BinaryDocValues controlBinaryDocValues=controlLeafReader.getBinaryDocValues("binary");
  assertEquals(0,binaryDocValues.nextDoc());
  assertEquals(0,controlBinaryDocValues.nextDoc());
  assertEquals(controlBinaryDocValues.binaryValue(),binaryDocValues.binaryValue());
  SortedDocValues sortedDocValues=leafReader.getSortedDocValues("sorted");
  SortedDocValues controlSortedDocValues=controlLeafReader.getSortedDocValues("sorted");
  assertEquals(controlSortedDocValues.getValueCount(),sortedDocValues.getValueCount());
  assertEquals(0,sortedDocValues.nextDoc());
  assertEquals(0,controlSortedDocValues.nextDoc());
  assertEquals(controlSortedDocValues.binaryValue(),sortedDocValues.binaryValue());
  assertEquals(controlSortedDocValues.ordValue(),sortedDocValues.ordValue());
  assertEquals(controlSortedDocValues.lookupOrd(0),sortedDocValues.lookupOrd(0));
  SortedSetDocValues sortedSetDocValues=leafReader.getSortedSetDocValues("sorted_set");
  assertEquals(0,sortedSetDocValues.nextDoc());
  SortedSetDocValues controlSortedSetDocValues=controlLeafReader.getSortedSetDocValues("sorted_set");
  assertEquals(0,controlSortedSetDocValues.nextDoc());
  assertEquals(controlSortedSetDocValues.getValueCount(),sortedSetDocValues.getValueCount());
  for (long controlOrd=controlSortedSetDocValues.nextOrd(); controlOrd != SortedSetDocValues.NO_MORE_ORDS; controlOrd=controlSortedSetDocValues.nextOrd()) {
    assertEquals(controlOrd,sortedSetDocValues.nextOrd());
    assertEquals(controlSortedSetDocValues.lookupOrd(controlOrd),sortedSetDocValues.lookupOrd(controlOrd));
  }
  assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSetDocValues.nextOrd());
  indexReader.close();
  controlIndexReader.close();
  dir.close();
}
