{
  MemoryIndex mindex=randomMemoryIndex();
  MockAnalyzer mockAnalyzer=new MockAnalyzer(random());
  mindex.addField("field","the quick brown fox",mockAnalyzer);
  mindex.addField("field","jumps over the",mockAnalyzer);
  LeafReader reader=(LeafReader)mindex.createSearcher().getIndexReader();
  TestUtil.checkReader(reader);
  assertEquals(7,reader.terms("field").getSumTotalTermFreq());
  PhraseQuery query=new PhraseQuery("field","fox","jumps");
  assertTrue(mindex.search(query) > 0.1);
  mindex.reset();
  mockAnalyzer.setPositionIncrementGap(1 + random().nextInt(10));
  mindex.addField("field","the quick brown fox",mockAnalyzer);
  mindex.addField("field","jumps over the",mockAnalyzer);
  assertEquals(0,mindex.search(query),0.00001f);
  query=new PhraseQuery(10,"field","fox","jumps");
  assertTrue("posGap" + mockAnalyzer.getPositionIncrementGap("field"),mindex.search(query) > 0.0001);
  TestUtil.checkReader(mindex.createSearcher().getIndexReader());
}
