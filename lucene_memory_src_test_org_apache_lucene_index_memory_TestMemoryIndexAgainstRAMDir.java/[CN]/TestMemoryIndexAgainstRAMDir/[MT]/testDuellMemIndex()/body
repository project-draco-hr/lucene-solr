{
  LineFileDocs lineFileDocs=new LineFileDocs(random());
  int numDocs=atLeast(10);
  MemoryIndex memory=randomMemoryIndex();
  for (int i=0; i < numDocs; i++) {
    Directory dir=newDirectory();
    MockAnalyzer mockAnalyzer=new MockAnalyzer(random());
    mockAnalyzer.setMaxTokenLength(TestUtil.nextInt(random(),1,IndexWriter.MAX_TERM_LENGTH));
    IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(random(),mockAnalyzer));
    Document nextDoc=lineFileDocs.nextDoc();
    Document doc=new Document();
    for (    Field field : nextDoc.getFields()) {
      if (field.fieldType().indexOptions() != IndexOptions.NONE) {
        doc.add(field);
        if (random().nextInt(3) == 0) {
          doc.add(field);
        }
      }
    }
    writer.addDocument(doc);
    writer.close();
    for (    IndexableField field : doc.indexableFields()) {
      memory.addField(field.name(),((Field)field).stringValue(),mockAnalyzer);
    }
    DirectoryReader competitor=DirectoryReader.open(dir);
    LeafReader memIndexReader=(LeafReader)memory.createSearcher().getIndexReader();
    TestUtil.checkReader(memIndexReader);
    duellReaders(competitor,memIndexReader);
    IOUtils.close(competitor,memIndexReader);
    memory.reset();
    dir.close();
  }
  lineFileDocs.close();
}
