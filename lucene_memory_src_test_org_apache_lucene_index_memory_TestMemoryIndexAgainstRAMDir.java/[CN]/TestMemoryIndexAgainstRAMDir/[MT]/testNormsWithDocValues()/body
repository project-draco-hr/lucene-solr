{
  MemoryIndex mi=new MemoryIndex(true,true);
  MockAnalyzer mockAnalyzer=new MockAnalyzer(random());
  mi.addField(new BinaryDocValuesField("text",new BytesRef("quick brown fox")),mockAnalyzer,5f);
  mi.addField(new TextField("text","quick brown fox",Field.Store.NO),mockAnalyzer,5f);
  LeafReader leafReader=mi.createSearcher().getIndexReader().leaves().get(0).reader();
  Document doc=new Document();
  doc.add(new BinaryDocValuesField("text",new BytesRef("quick brown fox")));
  Field field=new TextField("text","quick brown fox",Field.Store.NO);
  field.setBoost(5f);
  doc.add(field);
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(random(),mockAnalyzer));
  writer.addDocument(doc);
  writer.close();
  IndexReader controlIndexReader=DirectoryReader.open(dir);
  LeafReader controlLeafReader=controlIndexReader.leaves().get(0).reader();
  NumericDocValues norms=controlLeafReader.getNormValues("text");
  assertEquals(0,norms.nextDoc());
  NumericDocValues norms2=leafReader.getNormValues("text");
  assertEquals(0,norms2.nextDoc());
  assertEquals(norms.longValue(),norms2.longValue());
  controlIndexReader.close();
  dir.close();
}
