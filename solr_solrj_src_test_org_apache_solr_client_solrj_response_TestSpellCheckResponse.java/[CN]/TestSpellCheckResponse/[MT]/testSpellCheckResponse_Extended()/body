{
  getSolrServer();
  server.deleteByQuery("*:*");
  server.commit(true,true);
  SolrInputDocument doc=new SolrInputDocument();
  doc.setField("id","111");
  doc.setField(field,"Samsung");
  server.add(doc);
  server.commit(true,true);
  SolrQuery query=new SolrQuery("*:*");
  query.set(CommonParams.QT,"/spell");
  query.set("spellcheck",true);
  query.set(SpellingParams.SPELLCHECK_Q,"samsang");
  query.set(SpellingParams.SPELLCHECK_EXTENDED_RESULTS,true);
  QueryRequest request=new QueryRequest(query);
  SpellCheckResponse response=request.process(server).getSpellCheckResponse();
  assertEquals("samsung",response.getFirstSuggestion("samsang"));
  SpellCheckResponse.Suggestion sug=response.getSuggestion("samsang");
  List<SpellCheckResponse.Suggestion> sugs=response.getSuggestions();
  assertEquals(sug.getAlternatives().size(),sug.getAlternativeFrequencies().size());
  assertEquals(sugs.get(0).getAlternatives().size(),sugs.get(0).getAlternativeFrequencies().size());
  assertEquals("samsung",sug.getAlternatives().get(0));
  assertEquals("samsung",sugs.get(0).getAlternatives().get(0));
  assertTrue(sug.getEndOffset() > 0);
  assertTrue(sug.getToken().length() > 0);
  assertTrue(sug.getNumFound() > 0);
  response.getSuggestions().get(0).getAlternatives().get(0);
}
