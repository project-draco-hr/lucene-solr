{
  IntsRef path=new IntsRef();
  Util.toUTF32(string,path);
  if (path.length <= 1) {
    return BasicAutomata.makeString(path.ints,path.offset,path.length);
  }
 else {
    Automaton prefix=BasicAutomata.makeString(path.ints,path.offset,1);
    int ints[]=new int[path.length - 1 - 1];
    System.arraycopy(path.ints,path.offset + 1,ints,0,ints.length);
    LevenshteinAutomata lev=new LevenshteinAutomata(ints,256,true);
    Automaton levAutomaton=lev.toAutomaton(1);
    Automaton suffix=BasicAutomata.makeString(path.ints,path.length - 1,1);
    Automaton combined=BasicOperations.concatenate(Arrays.asList(prefix,levAutomaton,suffix,BasicAutomata.makeAnyString()));
    combined.setDeterministic(true);
    return combined;
  }
}
