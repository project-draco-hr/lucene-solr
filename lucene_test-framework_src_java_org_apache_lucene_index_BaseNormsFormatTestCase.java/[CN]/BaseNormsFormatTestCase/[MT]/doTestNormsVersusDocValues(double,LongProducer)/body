{
  int numDocs=atLeast(500);
  final FixedBitSet docsWithField=new FixedBitSet(numDocs);
  final int numDocsWithField=Math.max(1,(int)(density * numDocs));
  if (numDocsWithField == numDocs) {
    docsWithField.set(0,numDocs);
  }
 else {
    int i=0;
    while (i < numDocsWithField) {
      int doc=random().nextInt(numDocs);
      if (docsWithField.get(doc) == false) {
        docsWithField.set(doc);
        ++i;
      }
    }
  }
  long norms[]=new long[numDocsWithField];
  for (int i=0; i < numDocsWithField; i++) {
    norms[i]=longs.next();
  }
  Directory dir=newDirectory();
  Analyzer analyzer=new MockAnalyzer(random(),MockTokenizer.KEYWORD,false);
  IndexWriterConfig conf=newIndexWriterConfig(analyzer);
  conf.setMergePolicy(NoMergePolicy.INSTANCE);
  conf.setSimilarity(new CannedNormSimilarity(norms));
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir,conf);
  Document doc=new Document();
  Field idField=new StringField("id","",Field.Store.NO);
  Field indexedField=new TextField("indexed","",Field.Store.NO);
  Field dvField=new NumericDocValuesField("dv",0);
  doc.add(idField);
  doc.add(indexedField);
  doc.add(dvField);
  for (int i=0, j=0; i < numDocs; i++) {
    idField.setStringValue(Integer.toString(i));
    if (docsWithField.get(i) == false) {
      Document doc2=new Document();
      doc2.add(idField);
      writer.addDocument(doc2);
    }
 else {
      long value=norms[j++];
      dvField.setLongValue(value);
      indexedField.setStringValue(Long.toString(value));
      writer.addDocument(doc);
    }
    if (random().nextInt(31) == 0) {
      writer.commit();
    }
  }
  int numDeletions=random().nextInt(numDocs / 20);
  for (int i=0; i < numDeletions; i++) {
    int id=random().nextInt(numDocs);
    writer.deleteDocuments(new Term("id",Integer.toString(id)));
  }
  writer.commit();
  DirectoryReader ir=DirectoryReader.open(dir);
  for (  LeafReaderContext context : ir.leaves()) {
    LeafReader r=context.reader();
    NumericDocValues expected=r.getNumericDocValues("dv");
    NumericDocValues actual=r.getNormValues("indexed");
    assertEquals(expected == null,actual == null);
    if (expected != null) {
      for (int d=expected.nextDoc(); d != DocIdSetIterator.NO_MORE_DOCS; d=expected.nextDoc()) {
        assertEquals(d,actual.nextDoc());
        assertEquals("doc " + d,expected.longValue(),actual.longValue());
      }
      assertEquals(NO_MORE_DOCS,actual.nextDoc());
    }
  }
  ir.close();
  writer.forceMerge(1);
  ir=DirectoryReader.open(dir);
  for (  LeafReaderContext context : ir.leaves()) {
    LeafReader r=context.reader();
    NumericDocValues expected=r.getNumericDocValues("dv");
    NumericDocValues actual=r.getNormValues("indexed");
    assertEquals(expected == null,actual == null);
    if (expected != null) {
      for (int d=expected.nextDoc(); d != DocIdSetIterator.NO_MORE_DOCS; d=expected.nextDoc()) {
        assertEquals(d,actual.nextDoc());
        assertEquals("doc " + d,expected.longValue(),actual.longValue());
      }
      assertEquals(NO_MORE_DOCS,actual.nextDoc());
    }
  }
  writer.close();
  ir.close();
  dir.close();
}
