{
  Entry entry=entryKey;
  String field=entry.field;
  FieldCache.DoubleParser parser=(FieldCache.DoubleParser)entry.custom;
  if (parser == null) {
    try {
      return wrapper.getDoubles(reader,field,DEFAULT_DOUBLE_PARSER);
    }
 catch (    NumberFormatException ne) {
      return wrapper.getDoubles(reader,field,NUMERIC_UTILS_DOUBLE_PARSER);
    }
  }
  double[] retArray=null;
  Terms terms=MultiFields.getTerms(reader,field);
  if (terms != null) {
    final TermsEnum termsEnum=terms.iterator();
    final Bits delDocs=MultiFields.getDeletedDocs(reader);
    DocsEnum docs=null;
    try {
      while (true) {
        final BytesRef term=termsEnum.next();
        if (term == null) {
          break;
        }
        final double termval=parser.parseDouble(term);
        if (retArray == null) {
          retArray=new double[reader.maxDoc()];
        }
        docs=termsEnum.docs(delDocs,docs);
        while (true) {
          final int docID=docs.nextDoc();
          if (docID == DocsEnum.NO_MORE_DOCS) {
            break;
          }
          retArray[docID]=termval;
        }
      }
    }
 catch (    StopFillCacheException stop) {
    }
  }
  if (retArray == null)   retArray=new double[reader.maxDoc()];
  return retArray;
}
