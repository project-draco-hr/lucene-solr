{
  List<CacheEntry> result=new ArrayList<CacheEntry>(17);
  for (  final Map.Entry<Class<?>,Cache> cacheEntry : caches.entrySet()) {
    final Cache<?> cache=cacheEntry.getValue();
    final Class<?> cacheType=cacheEntry.getKey();
synchronized (cache.readerCache) {
      for (      Object readerKey : cache.readerCache.keySet()) {
        Map<?,Object> innerCache=cache.readerCache.get(readerKey);
        for (        final Map.Entry<?,Object> mapEntry : innerCache.entrySet()) {
          Entry entry=(Entry)mapEntry.getKey();
          result.add(new CacheEntryImpl(readerKey,entry.field,cacheType,entry.creator,mapEntry.getValue()));
        }
      }
    }
  }
  return result.toArray(new CacheEntry[result.size()]);
}
