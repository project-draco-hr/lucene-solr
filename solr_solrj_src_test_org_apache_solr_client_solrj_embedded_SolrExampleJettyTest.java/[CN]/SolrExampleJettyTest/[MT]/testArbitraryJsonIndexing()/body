{
  HttpSolrClient client=(HttpSolrClient)getSolrClient();
  client.deleteByQuery("*:*");
  client.commit();
  assertNumFound("*:*",0);
  String json="{\"id\":\"abc1\", \"name\": \"name1\"} {\"name\" : \"name2\"}";
  HttpClient httpClient=client.getHttpClient();
  HttpPost post=new HttpPost(client.getBaseURL() + "/update/json/docs");
  post.setHeader("Content-Type","application/json");
  post.setEntity(new InputStreamEntity(new ByteArrayInputStream(json.getBytes("UTF-8")),-1));
  HttpResponse response=httpClient.execute(post,HttpClientUtil.createNewHttpClientRequestContext(null));
  assertEquals(200,response.getStatusLine().getStatusCode());
  client.commit();
  QueryResponse rsp=getSolrClient().query(new SolrQuery("*:*"));
  assertEquals(2,rsp.getResults().getNumFound());
  SolrDocument doc=rsp.getResults().get(0);
  String src=(String)doc.getFieldValue("_src_");
  Map m=(Map)ObjectBuilder.fromJSON(src);
  assertEquals("abc1",m.get("id"));
  assertEquals("name1",m.get("name"));
  doc=rsp.getResults().get(1);
  src=(String)doc.getFieldValue("_src_");
  m=(Map)ObjectBuilder.fromJSON(src);
  assertEquals("name2",m.get("name"));
}
