{
  final boolean trySsl=random().nextBoolean();
  final boolean trySslClientAuth=random().nextBoolean();
  final Map<Object,Object> sysprops=System.getProperties();
  for (  String prop : SSL_PROPS.keySet()) {
    if (sysprops.containsKey(prop)) {
      log.info("System property explicitly set, so skipping randomized ssl properties: " + prop);
      manageSslProps=false;
      break;
    }
  }
  assertTrue("test keystore does not exist, can't be used for randomized " + "ssl testing: " + TEST_KEYSTORE.getAbsolutePath(),TEST_KEYSTORE.exists());
  if (manageSslProps) {
    log.info("Randomized ssl ({}) and clientAuth ({})",trySsl,trySslClientAuth);
    for (    String prop : SSL_PROPS.keySet()) {
      System.setProperty(prop,SSL_PROPS.get(prop));
    }
    System.setProperty("tests.jettySsl",String.valueOf(trySsl));
    System.setProperty("tests.jettySsl.clientAuth",String.valueOf(trySslClientAuth));
  }
  createJetty(ExternalPaths.EXAMPLE_HOME,null,null);
}
