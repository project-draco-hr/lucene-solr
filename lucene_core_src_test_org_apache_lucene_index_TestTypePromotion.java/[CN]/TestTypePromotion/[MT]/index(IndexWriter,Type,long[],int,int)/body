{
  final DocValuesField valField;
switch (valueType) {
case FIXED_INTS_8:
    valField=new DocValuesField("promote",(byte)0,valueType);
  break;
case FIXED_INTS_16:
valField=new DocValuesField("promote",(short)0,valueType);
break;
case FIXED_INTS_32:
valField=new DocValuesField("promote",0,valueType);
break;
case VAR_INTS:
valField=new DocValuesField("promote",0L,valueType);
break;
case FIXED_INTS_64:
valField=new DocValuesField("promote",(long)0,valueType);
break;
case FLOAT_64:
valField=new DocValuesField("promote",(double)0,valueType);
break;
case FLOAT_32:
valField=new DocValuesField("promote",(float)0,valueType);
break;
case BYTES_FIXED_DEREF:
case BYTES_FIXED_SORTED:
case BYTES_FIXED_STRAIGHT:
case BYTES_VAR_DEREF:
case BYTES_VAR_SORTED:
case BYTES_VAR_STRAIGHT:
valField=new DocValuesField("promote",new BytesRef(),valueType);
break;
default :
fail("unexpected value " + valueType);
valField=null;
}
BytesRef ref=new BytesRef(new byte[]{1,2,3,4});
for (int i=offset; i < offset + num; i++) {
Document doc=new Document();
doc.add(new Field("id",i + "",TextField.TYPE_STORED));
switch (valueType) {
case VAR_INTS:
values[i]=random().nextInt();
valField.setLongValue(values[i]);
break;
case FIXED_INTS_16:
values[i]=random().nextInt(Short.MAX_VALUE);
valField.setIntValue((short)values[i]);
break;
case FIXED_INTS_32:
values[i]=random().nextInt();
valField.setIntValue((int)values[i]);
break;
case FIXED_INTS_64:
values[i]=random().nextLong();
valField.setLongValue(values[i]);
break;
case FLOAT_64:
double nextDouble=random().nextDouble();
values[i]=Double.doubleToRawLongBits(nextDouble);
valField.setDoubleValue(nextDouble);
break;
case FLOAT_32:
final float nextFloat=random().nextFloat();
values[i]=Double.doubleToRawLongBits(nextFloat);
valField.setFloatValue(nextFloat);
break;
case FIXED_INTS_8:
values[i]=(byte)i;
valField.setIntValue((byte)values[i]);
break;
case BYTES_FIXED_DEREF:
case BYTES_FIXED_SORTED:
case BYTES_FIXED_STRAIGHT:
values[i]=random().nextLong();
byte bytes[]=new byte[8];
ByteArrayDataOutput out=new ByteArrayDataOutput(bytes,0,8);
out.writeLong(values[i]);
valField.setBytesValue(new BytesRef(bytes));
break;
case BYTES_VAR_DEREF:
case BYTES_VAR_SORTED:
case BYTES_VAR_STRAIGHT:
byte lbytes[]=new byte[8];
ByteArrayDataOutput lout=new ByteArrayDataOutput(lbytes,0,8);
final int len;
if (random().nextBoolean()) {
values[i]=random().nextInt();
lout.writeInt((int)values[i]);
len=4;
}
 else {
values[i]=random().nextLong();
lout.writeLong(values[i]);
len=8;
}
valField.setBytesValue(new BytesRef(lbytes,0,len));
break;
default :
fail("unexpected value " + valueType);
}
doc.add(valField);
writer.addDocument(doc);
if (random().nextInt(10) == 0) {
writer.commit();
}
}
}
