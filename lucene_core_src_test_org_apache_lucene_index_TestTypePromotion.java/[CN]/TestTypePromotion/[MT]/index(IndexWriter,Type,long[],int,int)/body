{
  final DocValuesField valField;
switch (valueType) {
case FIXED_INTS_8:
    valField=new DocValuesField("promote",(byte)0,valueType);
  break;
case FIXED_INTS_16:
valField=new DocValuesField("promote",(short)0,valueType);
break;
case FIXED_INTS_32:
valField=new DocValuesField("promote",0,valueType);
break;
case VAR_INTS:
valField=new DocValuesField("promote",0L,valueType);
break;
case FIXED_INTS_64:
valField=new DocValuesField("promote",(long)0,valueType);
break;
case FLOAT_64:
valField=new DocValuesField("promote",(double)0,valueType);
break;
case FLOAT_32:
valField=new DocValuesField("promote",(float)0,valueType);
break;
case BYTES_FIXED_DEREF:
case BYTES_FIXED_SORTED:
case BYTES_FIXED_STRAIGHT:
case BYTES_VAR_DEREF:
case BYTES_VAR_SORTED:
case BYTES_VAR_STRAIGHT:
valField=new DocValuesField("promote",new BytesRef(),valueType);
break;
default :
fail("unexpected value " + valueType);
valField=null;
}
BytesRef ref=new BytesRef(new byte[]{1,2,3,4});
for (int i=offset; i < offset + num; i++) {
Document doc=new Document();
doc.add(new Field("id",i + "",TextField.TYPE_STORED));
switch (valueType) {
case VAR_INTS:
values[i]=random.nextInt();
valField.setValue(values[i]);
break;
case FIXED_INTS_16:
values[i]=random.nextInt(Short.MAX_VALUE);
valField.setValue((short)values[i]);
break;
case FIXED_INTS_32:
values[i]=random.nextInt();
valField.setValue((int)values[i]);
break;
case FIXED_INTS_64:
values[i]=random.nextLong();
valField.setValue(values[i]);
break;
case FLOAT_64:
double nextDouble=random.nextDouble();
values[i]=Double.doubleToRawLongBits(nextDouble);
valField.setValue(nextDouble);
break;
case FLOAT_32:
final float nextFloat=random.nextFloat();
values[i]=Double.doubleToRawLongBits(nextFloat);
valField.setValue(nextFloat);
break;
case FIXED_INTS_8:
values[i]=(byte)i;
valField.setValue((byte)values[i]);
break;
case BYTES_FIXED_DEREF:
case BYTES_FIXED_SORTED:
case BYTES_FIXED_STRAIGHT:
values[i]=random.nextLong();
BytesRefUtils.copyLong(ref,values[i]);
valField.setValue(ref);
break;
case BYTES_VAR_DEREF:
case BYTES_VAR_SORTED:
case BYTES_VAR_STRAIGHT:
if (random.nextBoolean()) {
BytesRefUtils.copyInt(ref,random.nextInt());
values[i]=BytesRefUtils.asInt(ref);
}
 else {
BytesRefUtils.copyLong(ref,random.nextLong());
values[i]=BytesRefUtils.asLong(ref);
}
valField.setValue(ref);
break;
default :
fail("unexpected value " + valueType);
}
doc.add(valField);
writer.addDocument(doc);
if (random.nextInt(10) == 0) {
writer.commit();
}
}
}
