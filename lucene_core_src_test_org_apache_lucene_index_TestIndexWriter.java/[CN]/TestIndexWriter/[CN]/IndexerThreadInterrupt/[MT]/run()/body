{
  Directory dir=new MockDirectoryWrapper(random(),new RAMDirectory());
  IndexWriter w=null;
  while (!finish) {
    try {
      while (!finish) {
        if (w != null) {
          w.close();
          w=null;
        }
        IndexWriterConfig conf=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(2);
        w=new IndexWriter(dir,conf);
        Document doc=new Document();
        doc.add(newField("field","some text contents",storedTextType));
        for (int i=0; i < 100; i++) {
          w.addDocument(doc);
          if (i % 10 == 0) {
            w.commit();
          }
        }
        w.close();
        w=null;
        DirectoryReader.open(dir).close();
        allowInterrupt=true;
      }
    }
 catch (    ThreadInterruptedException re) {
      if (VERBOSE) {
        System.out.println("TEST: got interrupt");
        re.printStackTrace(System.out);
      }
      Throwable e=re.getCause();
      assertTrue(e instanceof InterruptedException);
      if (finish) {
        break;
      }
    }
catch (    Throwable t) {
      System.out.println("FAILED; unexpected exception");
      t.printStackTrace(System.out);
      failed=true;
      break;
    }
  }
  if (!failed) {
    Thread.interrupted();
    if (w != null) {
      try {
        w.rollback();
      }
 catch (      IOException ioe) {
        throw new RuntimeException(ioe);
      }
    }
    try {
      _TestUtil.checkIndex(dir);
    }
 catch (    Exception e) {
      failed=true;
      System.out.println("CheckIndex FAILED: unexpected exception");
      e.printStackTrace(System.out);
    }
    try {
      IndexReader r=DirectoryReader.open(dir);
      r.close();
    }
 catch (    Exception e) {
      failed=true;
      System.out.println("DirectoryReader.open FAILED: unexpected exception");
      e.printStackTrace(System.out);
    }
  }
  try {
    dir.close();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
