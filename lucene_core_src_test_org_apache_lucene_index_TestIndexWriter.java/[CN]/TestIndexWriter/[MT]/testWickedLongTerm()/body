{
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,new StringSplitAnalyzer());
  char[] chars=new char[DocumentsWriterPerThread.MAX_TERM_LENGTH_UTF8];
  Arrays.fill(chars,'x');
  Document doc=new Document();
  final String bigTerm=new String(chars);
  String contents="abc xyz x" + bigTerm + " another term";
  doc.add(new TextField("content",contents,Field.Store.NO));
  try {
    w.addDocument(doc);
    fail("should have hit exception");
  }
 catch (  IllegalArgumentException iae) {
  }
  doc=new Document();
  doc.add(new TextField("content","abc bbb ccc",Field.Store.NO));
  w.addDocument(doc);
  w.forceMerge(1);
  IndexReader reader=w.getReader();
  w.close();
  assertEquals(1,reader.docFreq(new Term("content","abc")));
  assertEquals(1,reader.docFreq(new Term("content","bbb")));
  assertEquals(0,reader.docFreq(new Term("content","term")));
  assertEquals("document with wicked long term is in the index!",1,reader.numDocs());
  reader.close();
  dir.close();
  dir=newDirectory();
  doc=new Document();
  FieldType customType=new FieldType(TextField.TYPE_NOT_STORED);
  customType.setTokenized(false);
  Field contentField=new Field("content","",customType);
  doc.add(contentField);
  w=new RandomIndexWriter(random(),dir);
  contentField.setStringValue("other");
  w.addDocument(doc);
  contentField.setStringValue("term");
  w.addDocument(doc);
  contentField.setStringValue(bigTerm);
  w.addDocument(doc);
  contentField.setStringValue("zzz");
  w.addDocument(doc);
  reader=w.getReader();
  w.close();
  assertEquals(1,reader.docFreq(new Term("content",bigTerm)));
  reader.close();
  dir.close();
}
