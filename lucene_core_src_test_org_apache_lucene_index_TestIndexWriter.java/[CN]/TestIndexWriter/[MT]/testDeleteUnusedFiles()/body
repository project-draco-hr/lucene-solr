{
  for (int iter=0; iter < 2; iter++) {
    Directory dir=newDirectory();
    LogMergePolicy mergePolicy=newLogMergePolicy(true);
    mergePolicy.setNoCFSRatio(1);
    IndexWriter w=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMergePolicy(mergePolicy));
    Document doc=new Document();
    doc.add(newField("field","go",TextField.TYPE_UNSTORED));
    w.addDocument(doc);
    DirectoryReader r;
    if (iter == 0) {
      r=w.getReader();
    }
 else {
      w.commit();
      r=IndexReader.open(dir);
    }
    List<String> files=Arrays.asList(dir.listAll());
    assertTrue(files.contains("_0.cfs"));
    w.addDocument(doc);
    w.forceMerge(1);
    if (iter == 1) {
      w.commit();
    }
    IndexReader r2=DirectoryReader.openIfChanged(r);
    assertNotNull(r2);
    assertTrue(r != r2);
    files=Arrays.asList(dir.listAll());
    assertTrue(files.contains("_0.cfs"));
    w.deleteUnusedFiles();
    files=Arrays.asList(dir.listAll());
    assertTrue(files.contains("_0.cfs"));
    r.close();
    if (iter == 0) {
      files=Arrays.asList(dir.listAll());
      assertFalse(files.contains("_0.cfs"));
    }
 else {
      w.deleteUnusedFiles();
      files=Arrays.asList(dir.listAll());
      assertFalse(files.contains("_0.cfs"));
    }
    w.close();
    r2.close();
    dir.close();
  }
}
