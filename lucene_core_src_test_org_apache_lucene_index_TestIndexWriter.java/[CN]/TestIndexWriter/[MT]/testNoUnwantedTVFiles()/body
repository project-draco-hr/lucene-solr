{
  Directory dir=newDirectory();
  if (dir instanceof MockDirectoryWrapper) {
    ((MockDirectoryWrapper)dir).setEnableVirusScanner(false);
  }
  IndexWriter indexWriter=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())).setRAMBufferSizeMB(0.01).setMergePolicy(newLogMergePolicy()));
  indexWriter.getConfig().getMergePolicy().setNoCFSRatio(0.0);
  String BIG="alskjhlaksjghlaksjfhalksvjepgjioefgjnsdfjgefgjhelkgjhqewlrkhgwlekgrhwelkgjhwelkgrhwlkejg";
  BIG=BIG + BIG + BIG+ BIG;
  FieldType customType=new FieldType(TextField.TYPE_STORED);
  customType.setOmitNorms(true);
  FieldType customType2=new FieldType(TextField.TYPE_STORED);
  customType2.setTokenized(false);
  FieldType customType3=new FieldType(TextField.TYPE_STORED);
  customType3.setTokenized(false);
  customType3.setOmitNorms(true);
  for (int i=0; i < 2; i++) {
    Document doc=new Document();
    doc.add(new Field("id",Integer.toString(i) + BIG,customType3));
    doc.add(new Field("str",Integer.toString(i) + BIG,customType2));
    doc.add(new Field("str2",Integer.toString(i) + BIG,storedTextType));
    doc.add(new Field("str3",Integer.toString(i) + BIG,customType));
    indexWriter.addDocument(doc);
  }
  indexWriter.close();
  TestUtil.checkIndex(dir);
  assertNoUnreferencedFiles(dir,"no tv files");
  DirectoryReader r0=DirectoryReader.open(dir);
  for (  AtomicReaderContext ctx : r0.leaves()) {
    SegmentReader sr=(SegmentReader)ctx.reader();
    assertFalse(sr.getFieldInfos().hasVectors());
  }
  r0.close();
  dir.close();
}
