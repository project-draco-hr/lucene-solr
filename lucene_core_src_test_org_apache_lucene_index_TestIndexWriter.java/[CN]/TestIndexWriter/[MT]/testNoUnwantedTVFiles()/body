{
  Directory dir=newDirectory();
  IndexWriter indexWriter=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setRAMBufferSizeMB(0.01).setMergePolicy(newLogMergePolicy()));
  ((LogMergePolicy)indexWriter.getConfig().getMergePolicy()).setUseCompoundFile(false);
  String BIG="alskjhlaksjghlaksjfhalksvjepgjioefgjnsdfjgefgjhelkgjhqewlrkhgwlekgrhwelkgjhwelkgrhwlkejg";
  BIG=BIG + BIG + BIG+ BIG;
  FieldType customType=new FieldType(TextField.TYPE_STORED);
  customType.setOmitNorms(true);
  FieldType customType2=new FieldType(TextField.TYPE_STORED);
  customType2.setTokenized(false);
  FieldType customType3=new FieldType(TextField.TYPE_STORED);
  customType3.setTokenized(false);
  customType3.setOmitNorms(true);
  for (int i=0; i < 2; i++) {
    Document doc=new Document();
    doc.add(new Field("id",Integer.toString(i) + BIG,customType3));
    doc.add(new Field("str",Integer.toString(i) + BIG,customType2));
    doc.add(new Field("str2",Integer.toString(i) + BIG,storedTextType));
    doc.add(new Field("str3",Integer.toString(i) + BIG,customType));
    indexWriter.addDocument(doc);
  }
  indexWriter.close();
  _TestUtil.checkIndex(dir);
  assertNoUnreferencedFiles(dir,"no tv files");
  DirectoryReader r0=IndexReader.open(dir);
  for (  IndexReader r : r0.getSequentialSubReaders()) {
    SegmentInfo s=((SegmentReader)r).getSegmentInfo();
    assertFalse(((SegmentReader)r).getFieldInfos().hasVectors());
    Set<String> files=new HashSet<String>();
    s.getCodec().termVectorsFormat().files(s,files);
    List<String> filesExisting=SegmentInfo.findMatchingFiles(s.name,dir,files);
    assertTrue(filesExisting.isEmpty());
  }
  r0.close();
  dir.close();
}
