{
  int maxDoc=s.getIndexReader().maxDoc();
  final FixedBitSet hits=new FixedBitSet(maxDoc);
  s.search(query,new SimpleCollector(){
    private int docBase;
    @Override public boolean needsScores(){
      return false;
    }
    @Override protected void doSetNextReader(    LeafReaderContext context) throws IOException {
      docBase=context.docBase;
    }
    @Override public void collect(    int doc){
      hits.set(docBase + doc);
    }
  }
);
  for (int docID=0; docID < maxDoc; docID++) {
    int id=(int)docIDToID.get(docID);
    Boolean expected;
    if (deleted.contains(id)) {
      expected=false;
    }
 else {
      expected=shouldMatch(lats[id],lons[id]);
    }
    if (expected != null) {
      if (hits.get(docID) != expected) {
        System.out.println(Thread.currentThread().getName() + ": id=" + id+ " docID="+ docID+ " lat="+ lats[id]+ " lon="+ lons[id]+ " deleted?="+ deleted.contains(id)+ " expected="+ expected+ " but got "+ hits.get(docID)+ " query="+ query);
        fail("wrong hit");
      }
    }
  }
}
