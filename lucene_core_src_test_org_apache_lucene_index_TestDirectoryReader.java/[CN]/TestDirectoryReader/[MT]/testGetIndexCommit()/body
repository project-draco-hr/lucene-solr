{
  Directory d=newDirectory();
  IndexWriter writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)));
  for (int i=0; i < 27; i++)   addDocumentWithFields(writer);
  writer.close();
  SegmentInfos sis=new SegmentInfos();
  sis.read(d);
  DirectoryReader r=DirectoryReader.open(d);
  IndexCommit c=r.getIndexCommit();
  assertEquals(sis.getSegmentsFileName(),c.getSegmentsFileName());
  assertTrue(c.equals(r.getIndexCommit()));
  writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy(10)));
  for (int i=0; i < 7; i++)   addDocumentWithFields(writer);
  writer.close();
  DirectoryReader r2=DirectoryReader.openIfChanged(r);
  assertNotNull(r2);
  assertFalse(c.equals(r2.getIndexCommit()));
  assertFalse(r2.getIndexCommit().getSegmentCount() == 1);
  r2.close();
  writer=new IndexWriter(d,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));
  writer.forceMerge(1);
  writer.close();
  r2=DirectoryReader.openIfChanged(r);
  assertNotNull(r2);
  assertNull(DirectoryReader.openIfChanged(r2));
  assertEquals(1,r2.getIndexCommit().getSegmentCount());
  r.close();
  r2.close();
  d.close();
}
