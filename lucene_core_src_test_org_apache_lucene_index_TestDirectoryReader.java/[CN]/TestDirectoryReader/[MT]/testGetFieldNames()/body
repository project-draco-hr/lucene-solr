{
  Directory d=newDirectory();
  IndexWriter writer=new IndexWriter(d,newIndexWriterConfig(new MockAnalyzer(random())));
  Document doc=new Document();
  FieldType customType3=new FieldType();
  customType3.setStored(true);
  doc.add(new StringField("keyword","test1",Field.Store.YES));
  doc.add(new TextField("text","test1",Field.Store.YES));
  doc.add(new Field("unindexed","test1",customType3));
  doc.add(new TextField("unstored","test1",Field.Store.NO));
  writer.addDocument(doc);
  writer.shutdown();
  DirectoryReader reader=DirectoryReader.open(d);
  FieldInfos fieldInfos=MultiFields.getMergedFieldInfos(reader);
  assertNotNull(fieldInfos.fieldInfo("keyword"));
  assertNotNull(fieldInfos.fieldInfo("text"));
  assertNotNull(fieldInfos.fieldInfo("unindexed"));
  assertNotNull(fieldInfos.fieldInfo("unstored"));
  reader.close();
  writer=new IndexWriter(d,newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND).setMergePolicy(newLogMergePolicy()));
  int mergeFactor=((LogMergePolicy)writer.getConfig().getMergePolicy()).getMergeFactor();
  for (int i=0; i < 5 * mergeFactor; i++) {
    doc=new Document();
    doc.add(new StringField("keyword","test1",Field.Store.YES));
    doc.add(new TextField("text","test1",Field.Store.YES));
    doc.add(new Field("unindexed","test1",customType3));
    doc.add(new TextField("unstored","test1",Field.Store.NO));
    writer.addDocument(doc);
  }
  for (int i=0; i < 5 * mergeFactor; i++) {
    doc=new Document();
    doc.add(new StringField("keyword2","test1",Field.Store.YES));
    doc.add(new TextField("text2","test1",Field.Store.YES));
    doc.add(new Field("unindexed2","test1",customType3));
    doc.add(new TextField("unstored2","test1",Field.Store.NO));
    writer.addDocument(doc);
  }
  FieldType customType5=new FieldType(TextField.TYPE_STORED);
  customType5.setStoreTermVectors(true);
  FieldType customType6=new FieldType(TextField.TYPE_STORED);
  customType6.setStoreTermVectors(true);
  customType6.setStoreTermVectorOffsets(true);
  FieldType customType7=new FieldType(TextField.TYPE_STORED);
  customType7.setStoreTermVectors(true);
  customType7.setStoreTermVectorPositions(true);
  FieldType customType8=new FieldType(TextField.TYPE_STORED);
  customType8.setStoreTermVectors(true);
  customType8.setStoreTermVectorOffsets(true);
  customType8.setStoreTermVectorPositions(true);
  for (int i=0; i < 5 * mergeFactor; i++) {
    doc=new Document();
    doc.add(new TextField("tvnot","tvnot",Field.Store.YES));
    doc.add(new Field("termvector","termvector",customType5));
    doc.add(new Field("tvoffset","tvoffset",customType6));
    doc.add(new Field("tvposition","tvposition",customType7));
    doc.add(new Field("tvpositionoffset","tvpositionoffset",customType8));
    writer.addDocument(doc);
  }
  writer.shutdown();
  reader=DirectoryReader.open(d);
  fieldInfos=MultiFields.getMergedFieldInfos(reader);
  Collection<String> allFieldNames=new HashSet<>();
  Collection<String> indexedFieldNames=new HashSet<>();
  Collection<String> notIndexedFieldNames=new HashSet<>();
  Collection<String> tvFieldNames=new HashSet<>();
  for (  FieldInfo fieldInfo : fieldInfos) {
    final String name=fieldInfo.name;
    allFieldNames.add(name);
    if (fieldInfo.isIndexed()) {
      indexedFieldNames.add(name);
    }
 else {
      notIndexedFieldNames.add(name);
    }
    if (fieldInfo.hasVectors()) {
      tvFieldNames.add(name);
    }
  }
  assertTrue(allFieldNames.contains("keyword"));
  assertTrue(allFieldNames.contains("text"));
  assertTrue(allFieldNames.contains("unindexed"));
  assertTrue(allFieldNames.contains("unstored"));
  assertTrue(allFieldNames.contains("keyword2"));
  assertTrue(allFieldNames.contains("text2"));
  assertTrue(allFieldNames.contains("unindexed2"));
  assertTrue(allFieldNames.contains("unstored2"));
  assertTrue(allFieldNames.contains("tvnot"));
  assertTrue(allFieldNames.contains("termvector"));
  assertTrue(allFieldNames.contains("tvposition"));
  assertTrue(allFieldNames.contains("tvoffset"));
  assertTrue(allFieldNames.contains("tvpositionoffset"));
  assertEquals(11,indexedFieldNames.size());
  assertTrue(indexedFieldNames.contains("keyword"));
  assertTrue(indexedFieldNames.contains("text"));
  assertTrue(indexedFieldNames.contains("unstored"));
  assertTrue(indexedFieldNames.contains("keyword2"));
  assertTrue(indexedFieldNames.contains("text2"));
  assertTrue(indexedFieldNames.contains("unstored2"));
  assertTrue(indexedFieldNames.contains("tvnot"));
  assertTrue(indexedFieldNames.contains("termvector"));
  assertTrue(indexedFieldNames.contains("tvposition"));
  assertTrue(indexedFieldNames.contains("tvoffset"));
  assertTrue(indexedFieldNames.contains("tvpositionoffset"));
  assertEquals(2,notIndexedFieldNames.size());
  assertTrue(notIndexedFieldNames.contains("unindexed"));
  assertTrue(notIndexedFieldNames.contains("unindexed2"));
  assertEquals(tvFieldNames.toString(),4,tvFieldNames.size());
  assertTrue(tvFieldNames.contains("termvector"));
  reader.close();
  d.close();
}
