{
  return new Iterable<Number>(){
    @Override public Iterator<Number> iterator(){
      final SortedNumericDocValues values;
      try {
        values=valuesProducer.getSortedNumeric(fieldInfo);
      }
 catch (      IOException ioe) {
        throw new RuntimeException(ioe);
      }
      return new Iterator<Number>(){
        private int nextDocID;
        @Override public boolean hasNext(){
          return nextDocID < maxDoc;
        }
        @Override public Number next(){
          try {
            if (nextDocID > values.docID()) {
              values.nextDoc();
            }
            int result;
            if (nextDocID == values.docID()) {
              result=values.docValueCount();
            }
 else {
              result=0;
            }
            nextDocID++;
            return result;
          }
 catch (          IOException ioe) {
            throw new RuntimeException(ioe);
          }
        }
      }
;
    }
  }
;
}
