{
  log.info("Checking if I (" + core.getName() + ") should try and be the leader.");
  if (isClosed) {
    log.info("Bailing on leader process because we have been closed");
    return false;
  }
  if (!weAreReplacement) {
    return true;
  }
  if (core.getCoreDescriptor().getCloudDescriptor().getLastPublished().equals(ZkStateReader.ACTIVE)) {
    String lirState=zkController.getLeaderInitiatedRecoveryState(collection,shardId,core.getName());
    if (ZkStateReader.DOWN.equals(lirState) || ZkStateReader.RECOVERING.equals(lirState)) {
      log.warn("Although my last published state is Active, the previous leader marked me " + core.getName() + " as "+ lirState+ " and I haven't recovered yet, so I shouldn't be the leader.");
      return false;
    }
    log.info("My last published State was Active, it's okay to be the leader.");
    return true;
  }
  log.info("My last published State was " + core.getCoreDescriptor().getCloudDescriptor().getLastPublished() + ", I won't be the leader.");
  return false;
}
