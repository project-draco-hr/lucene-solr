{
  int timeout=Integer.parseInt(leaderVoteWait);
  long timeoutAt=System.currentTimeMillis() + timeout;
  final String shardsElectZkPath=electionPath + LeaderElector.ELECTION_NODE;
  Slice slices=zkController.getClusterState().getSlice(collection,shardId);
  int cnt=0;
  while (true && !isClosed && !cc.isShutDown()) {
    if (slices != null) {
      int found=0;
      try {
        found=zkClient.getChildren(shardsElectZkPath,null,true).size();
      }
 catch (      KeeperException e) {
        SolrException.log(log,"Errir checking for the number of election participants",e);
      }
      if (found >= slices.getReplicasMap().size()) {
        log.info("Enough replicas found to continue.");
        return;
      }
 else {
        if (cnt % 40 == 0) {
          log.info("Waiting until we see more replicas up: total=" + slices.getReplicasMap().size() + " found="+ found+ " timeoutin="+ (timeoutAt - System.currentTimeMillis()));
        }
      }
      if (System.currentTimeMillis() > timeoutAt) {
        log.info("Was waiting for replicas to come up, but they are taking too long - assuming they won't come back till later");
        return;
      }
    }
    Thread.sleep(500);
    slices=zkController.getClusterState().getSlice(collection,shardId);
    cnt++;
  }
}
