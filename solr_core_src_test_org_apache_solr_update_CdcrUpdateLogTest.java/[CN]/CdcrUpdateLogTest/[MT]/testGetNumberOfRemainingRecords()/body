{
  try {
    DirectUpdateHandler2.commitOnClose=false;
    final Semaphore logReplayFinish=new Semaphore(0);
    UpdateLog.testing_logReplayFinishHook=new Runnable(){
      @Override public void run(){
        logReplayFinish.release();
      }
    }
;
    this.clearCore();
    int start=0;
    LinkedList<Long> versions=new LinkedList<>();
    addDocs(10,start,versions);
    start+=10;
    assertU(commit());
    addDocs(10,start,versions);
    start+=10;
    h.close();
    logReplayFinish.drainPermits();
    createCore();
    CdcrUpdateLog ulog=(CdcrUpdateLog)h.getCore().getUpdateHandler().getUpdateLog();
    CdcrUpdateLog.CdcrLogReader reader=ulog.newLogReader();
    assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS));
    assertEquals(22,reader.getNumberOfRemainingRecords());
    for (int i=0; i < 22; i++) {
      Object o=reader.next();
      assertNotNull(o);
      assertEquals(22 - (i + 1),reader.getNumberOfRemainingRecords());
    }
    assertNull(reader.next());
    assertEquals(0,reader.getNumberOfRemainingRecords());
    addDocs(10,start,versions);
    assertEquals(10,reader.getNumberOfRemainingRecords());
  }
  finally {
    DirectUpdateHandler2.commitOnClose=true;
    UpdateLog.testing_logReplayFinishHook=null;
  }
}
