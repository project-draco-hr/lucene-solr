{
  Map<CategoryPath,Integer> truth=facetCountsTruth();
  CategoryPath cp=(CategoryPath)truth.keySet().toArray()[0];
  FacetIndexingParams iParams=FacetIndexingParams.ALL_PARENTS;
  final CategoryListCache clCache;
  if (withCache) {
    CategoryListParams clp=new CategoryListParams();
    clCache=new CategoryListCache();
    clCache.loadAndRegister(clp,indexReader,taxoReader,iParams);
    if (plantWrongData) {
      messCachedData(clCache,clp);
    }
  }
 else {
    clCache=null;
  }
  List<FacetRequest> req=new ArrayList<FacetRequest>();
  req.add(new CountFacetRequest(cp,10));
  final FacetSearchParams sParams=new FacetSearchParams(req,iParams){
    @Override public CategoryListCache getCategoryListCache(){
      return clCache;
    }
  }
;
  FacetsCollector fc=new FacetsCollector(sParams,indexReader,taxoReader);
  searcher.search(new MatchAllDocsQuery(),fc);
  List<FacetResult> res=fc.getFacetResults();
  try {
    assertCountsAndCardinality(truth,res);
    assertFalse("Correct results not expected when wrong data was cached",plantWrongData);
  }
 catch (  Throwable e) {
    assertTrue("Wrong results not expected unless wrong data was cached",withCache);
    assertTrue("Wrong results not expected unless wrong data was cached",plantWrongData);
  }
}
