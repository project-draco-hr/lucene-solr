{
  if (path.length() == 0) {
    return "/";
  }
  StringBuffer w=new StringBuffer((int)(path.length() * 1.5));
  int status=NP_CHAR;
  int pos=0;
  int length=path.length();
  char savedChar='?';
  int hexChar='?';
  int pathPos=-1;
  int questionPos=-1;
  boolean isInQuery=false;
  while (pos < length) {
    char c=path.charAt(pos++);
    try {
switch (status) {
case NP_SLASH:
        if (c == '/') {
        }
 else         if (c == '.') {
          status=NP_POINT;
        }
 else         if (c == '%') {
          status=NP_PERCENT;
        }
 else {
          pos--;
          status=NP_CHAR;
        }
      break;
case NP_POINT:
    if (c == '/') {
    }
 else     if (c == '.') {
    }
 else {
      w.append('.');
      pos--;
      status=NP_SLASH;
    }
  break;
case NP_PERCENT:
if (c >= '0' && c <= '9') {
  hexChar=(c - '0') << 4;
}
 else if (c >= 'a' && c <= 'f') {
  hexChar=(c - 'a' + 10) << 4;
}
 else if (c >= 'A' && c <= 'F') {
  hexChar=(c - 'A' + 10) << 4;
}
 else {
  w.append(charMap['%']);
  w.append(charMap[c]);
  break;
}
savedChar=c;
status=NP_HEX;
break;
case NP_HEX:
if (c >= '0' && c <= '9') {
hexChar|=(c - '0');
}
 else if (c >= 'a' && c <= 'f') {
hexChar|=(c - 'a' + 10);
}
 else if (c >= 'A' && c <= 'F') {
hexChar|=(c - 'A' + 10);
}
 else {
w.append(charMap['%']);
w.append(charMap[savedChar]);
w.append(charMap[c]);
break;
}
w.append(charMap[hexChar]);
status=NP_CHAR;
break;
case NP_CHAR:
switch (c) {
case '%':
status=NP_PERCENT;
break;
case '/':
if (!isInQuery) {
w.append(c);
pathPos=w.length();
status=NP_SLASH;
}
 else {
w.append(charMap[c]);
}
break;
case '?':
if (!isInQuery) {
if (pathPos == -1) {
w.append('/');
pathPos=w.length();
}
questionPos=w.length();
isInQuery=true;
}
 else {
w.append(charMap[c]);
break;
}
case '&':
case ';':
case '@':
case '=':
w.append(c);
break;
case '+':
w.append("%20");
break;
default :
w.append(charMap[c]);
break;
}
}
}
 catch (ArrayIndexOutOfBoundsException e) {
if (c <= 0x07FF) {
w.append(charMap[0xc0 | (c >> 6)]);
w.append(charMap[0x80 | (c & 0x3F)]);
}
 else {
w.append(charMap[0xe0 | (c >> 12)]);
w.append(charMap[0x80 | ((c >> 6) & 0x3F)]);
w.append(charMap[0x80 | (c & 0x3F)]);
}
}
}
if (questionPos == -1) {
questionPos=w.length();
}
 else {
if (questionPos == w.length() - 1) {
w.deleteCharAt(questionPos);
}
}
if (pathPos == -1) {
pathPos=0;
}
if (questionPos > pathPos) {
String file=w.substring(pathPos,questionPos);
{
if (file.startsWith("index.") || file.startsWith("default.")) {
w.delete(pathPos,questionPos);
}
}
}
return w.toString();
}
