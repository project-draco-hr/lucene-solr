{
  Directory dir=new MockRAMDirectory();
  IndexWriter writer=new IndexWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new TestPayloadAnalyzer()));
  Document doc=new Document();
  doc.add(new Field("content",new StringReader("a a b c d e a f g h i j a b k k")));
  writer.addDocument(doc);
  IndexReader r=writer.getReader();
  TermPositions tp=r.termPositions(new Term("content","a"));
  int count=0;
  assertTrue(tp.next());
  assertEquals(4,tp.freq());
  int expected=0;
  assertEquals(expected,tp.nextPosition());
  assertEquals(1,tp.nextPosition());
  assertEquals(3,tp.nextPosition());
  assertEquals(6,tp.nextPosition());
  assertFalse(tp.next());
  IndexSearcher is=new IndexSearcher(r);
  SpanTermQuery stq1=new SpanTermQuery(new Term("content","a"));
  SpanTermQuery stq2=new SpanTermQuery(new Term("content","k"));
  SpanQuery[] sqs={stq1,stq2};
  SpanNearQuery snq=new SpanNearQuery(sqs,30,false);
  count=0;
  boolean sawZero=false;
  Spans pspans=snq.getSpans(is.getIndexReader());
  while (pspans.next()) {
    Collection<byte[]> payloads=pspans.getPayload();
    sawZero|=pspans.start() == 0;
    count+=payloads.size();
  }
  assertEquals(5,count);
  assertTrue(sawZero);
  Spans spans=snq.getSpans(is.getIndexReader());
  count=0;
  sawZero=false;
  while (spans.next()) {
    count++;
    sawZero|=spans.start() == 0;
  }
  assertEquals(4,count);
  assertTrue(sawZero);
  sawZero=false;
  PayloadSpanUtil psu=new PayloadSpanUtil(is.getIndexReader());
  Collection<byte[]> pls=psu.getPayloadsForQuery(snq);
  count=pls.size();
  for (  byte[] bytes : pls) {
    String s=new String(bytes);
    sawZero|=s.equals("pos: 0");
  }
  assertEquals(5,count);
  assertTrue(sawZero);
  writer.close();
  is.getIndexReader().close();
  dir.close();
}
