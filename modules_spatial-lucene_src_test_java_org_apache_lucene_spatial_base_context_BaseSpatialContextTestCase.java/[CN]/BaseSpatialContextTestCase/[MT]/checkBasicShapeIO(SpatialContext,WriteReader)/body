{
  Shape s=ctx.readShape("10 20");
  assertEquals(s,ctx.readShape("20,10"));
  assertEquals(s,ctx.readShape("20, 10"));
  Point p=(Point)s;
  assertEquals(10.0,p.getX(),0D);
  assertEquals(20.0,p.getY(),0D);
  p=(Point)help.writeThenRead(s);
  assertEquals(10.0,p.getX(),0D);
  assertEquals(20.0,p.getY(),0D);
  Assert.assertFalse(s.hasArea());
  s=ctx.readShape("-10 -20 10 20");
  Rectangle b=(Rectangle)s;
  assertEquals(-10.0,b.getMinX(),0D);
  assertEquals(-20.0,b.getMinY(),0D);
  assertEquals(10.0,b.getMaxX(),0D);
  assertEquals(20.0,b.getMaxY(),0D);
  b=(Rectangle)help.writeThenRead(s);
  assertEquals(-10.0,b.getMinX(),0D);
  assertEquals(-20.0,b.getMinY(),0D);
  assertEquals(10.0,b.getMaxX(),0D);
  assertEquals(20.0,b.getMaxY(),0D);
  Assert.assertTrue(s.hasArea());
  s=ctx.readShape("Circle( 1.23 4.56 distance=7.89)");
  CircleImpl circle=(CircleImpl)s;
  assertEquals(1.23,circle.getCenter().getX(),0D);
  assertEquals(4.56,circle.getCenter().getY(),0D);
  assertEquals(7.89,circle.getDistance(),0D);
  Assert.assertTrue(s.hasArea());
  Shape s2=ctx.readShape("Circle( 4.56,1.23 d=7.89 )");
  assertEquals(s,s2);
}
