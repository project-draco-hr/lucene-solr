{
  final AtomicInteger tries=new AtomicInteger(0);
  List<Thread> threads=new ArrayList<>();
  for (int i=0; i < numThreads; i++) {
    final int threadNum=i;
    threads.add(new Thread(){
      int reqLeft=numRequests;
      @Override public void run(){
        try {
          while (--reqLeft >= 0) {
            tries.incrementAndGet();
            doSingle(client,threadNum);
          }
        }
 catch (        Throwable e) {
        }
      }
    }
);
  }
  for (  Thread thread : threads) {
    thread.start();
  }
  for (  Thread thread : threads) {
    thread.join();
  }
  showExceptions();
  int count=getCount(client);
  if (count > tries.get()) {
    fail("Number of requests was " + tries.get() + " but final count was "+ count);
  }
  assertEquals(tries.get(),getCount(client));
  assertTrue("got unexpected exceptions. ",unexpected.isEmpty());
}
