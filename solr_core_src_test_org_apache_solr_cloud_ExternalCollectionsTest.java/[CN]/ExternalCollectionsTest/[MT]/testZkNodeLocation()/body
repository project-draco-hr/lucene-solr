{
  externalColl=true;
  String collectionName="myExternColl";
  createCollection(collectionName,client,2,2);
  waitForRecoveriesToFinish(collectionName,false);
  assertTrue("does not exist collection state externally",cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.getCollectionPath(collectionName),true));
  Stat stat=new Stat();
  byte[] data=cloudClient.getZkStateReader().getZkClient().getData(ZkStateReader.getCollectionPath(collectionName),null,stat,true);
  DocCollection c=ZkStateReader.getCollectionLive(cloudClient.getZkStateReader(),collectionName);
  ClusterState clusterState=cloudClient.getZkStateReader().getClusterState();
  assertEquals("The zkversion of the nodes must be same zkver:" + stat.getVersion(),stat.getVersion(),clusterState.getCollection(collectionName).getZNodeVersion());
  assertTrue("DocCllection#getStateFormat() must be > 1",cloudClient.getZkStateReader().getClusterState().getCollection(collectionName).getStateFormat() > 1);
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.set("action",CollectionParams.CollectionAction.DELETE.toString());
  params.set("name",collectionName);
  QueryRequest request=new QueryRequest(params);
  request.setPath("/admin/collections");
  if (client == null) {
    client=createCloudClient(null);
  }
  client.request(request);
  checkForMissingCollection(collectionName);
  assertFalse("collection state should not exist externally",cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.getCollectionPath(collectionName),true));
}
