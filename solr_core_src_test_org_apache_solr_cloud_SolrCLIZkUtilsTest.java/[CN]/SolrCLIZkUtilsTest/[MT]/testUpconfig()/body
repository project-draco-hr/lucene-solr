{
  Path configSet=TEST_PATH().resolve("configsets");
  Path srcPathCheck=configSet.resolve("cloud-subdirs").resolve("conf");
  copyConfigUp(configSet,"cloud-subdirs","upconfig1");
  verifyZkLocalPathsMatch(srcPathCheck,"/configs/upconfig1");
  configSet=TEST_PATH().resolve("configsets");
  String[] args=new String[]{"-confname","upconfig2","-confdir","cloud-subdirs","-zkHost",zkAddr,"-configsetsDir",configSet.toAbsolutePath().toString()};
  SolrCLI.ConfigSetUploadTool tool=new SolrCLI.ConfigSetUploadTool();
  int res=tool.runTool(SolrCLI.processCommandLineArgs(SolrCLI.joinCommonAndToolOptions(tool.getOptions()),args));
  assertEquals("tool should have returned 0 for success ",0,res);
  verifyZkLocalPathsMatch(srcPathCheck,"/configs/upconfig2");
  args=new String[]{"-confname","upconfig3","-confdir","nothinghere","-zkHost",zkAddr,"-configsetsDir",configSet.toAbsolutePath().toString()};
  res=tool.runTool(SolrCLI.processCommandLineArgs(SolrCLI.joinCommonAndToolOptions(tool.getOptions()),args));
  assertTrue("tool should have returned non-zero for failure ",0 != res);
  String content=new String(zkClient.getData("/configs/upconfig2/schema.xml",null,null,true),StandardCharsets.UTF_8);
  assertTrue("There should be content in the node! ",content.contains("Apache Software Foundation"));
}
