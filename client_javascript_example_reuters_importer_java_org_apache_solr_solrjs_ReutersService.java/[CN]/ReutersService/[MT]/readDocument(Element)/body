{
  SolrInputDocument inputDocument=new SolrInputDocument();
  inputDocument.addField("id",element.getAttribute("NEWID"));
  inputDocument.addField("title",xPath.evaluate("TEXT/TITLE",element));
  inputDocument.addField("dateline",xPath.evaluate("TEXT/DATELINE",element).trim());
  inputDocument.addField("text",xPath.evaluate("TEXT/BODY",element).trim());
  inputDocument.addField("places",readList("PLACES/D",element));
  inputDocument.addField("topics",readList("TOPICS/D",element));
  inputDocument.addField("organisations",readList("ORGS/D",element));
  inputDocument.addField("exchanges",readList("EXCHANGES/D",element));
  inputDocument.addField("companies",readList("COMPANIES/D",element));
  try {
    inputDocument.addField("date",this.reutersDateFormat.parse(xPath.evaluate("DATE",element)));
  }
 catch (  ParseException e) {
    inputDocument.addField("date",this.reutersDateFormat.parse("0" + xPath.evaluate("DATE",element)));
  }
  for (  Object place : inputDocument.getFieldValues("places")) {
    String code=this.countryCodesMap.get(place);
    if (code == null) {
      try {
        code=getCodeForPlace((String)place);
        this.countryCodesMap.put((String)place,code);
      }
 catch (      SAXException e) {
        e.printStackTrace();
      }
catch (      ParserConfigurationException e) {
        e.printStackTrace();
      }
    }
    inputDocument.addField("countryCodes",code);
  }
  this.solrServer.add(inputDocument);
  System.out.println(inputDocument.getField("title"));
}
