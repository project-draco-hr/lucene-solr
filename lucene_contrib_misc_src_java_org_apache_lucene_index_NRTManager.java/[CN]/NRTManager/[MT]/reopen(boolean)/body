{
  final long newSearcherGen=indexingGen.getAndIncrement();
  if (applyDeletes && currentSearcher.getIndexReader().isCurrent()) {
    searchingGen.set(newSearcherGen);
    noDeletesSearchingGen.set(newSearcherGen);
synchronized (this) {
      notifyAll();
    }
    return false;
  }
 else   if (!applyDeletes && noDeletesCurrentSearcher.getIndexReader().isCurrent()) {
    noDeletesSearchingGen.set(newSearcherGen);
synchronized (this) {
      notifyAll();
    }
    return false;
  }
  final IndexSearcher startSearcher=noDeletesSearchingGen.get() > searchingGen.get() ? noDeletesCurrentSearcher : currentSearcher;
  final IndexReader nextReader=startSearcher.getIndexReader().reopen(writer,applyDeletes);
  if (nextReader != startSearcher.getIndexReader()) {
    final IndexSearcher nextSearcher=new IndexSearcher(nextReader,es);
    if (warmer != null) {
      boolean success=false;
      try {
        warmer.warm(nextSearcher);
        success=true;
      }
  finally {
        if (!success) {
          nextReader.decRef();
        }
      }
    }
    swapSearcher(nextSearcher,newSearcherGen,applyDeletes);
    return true;
  }
 else {
    return false;
  }
}
