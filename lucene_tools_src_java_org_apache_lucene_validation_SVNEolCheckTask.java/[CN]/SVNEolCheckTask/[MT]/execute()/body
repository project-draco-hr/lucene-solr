{
  if (svnExecutable == null) {
    throw new BuildException("svnExecutable parameter must be set!");
  }
  boolean success=true;
  files.setProject(getProject());
  Iterator<Resource> iter=(Iterator<Resource>)files.iterator();
  while (iter.hasNext()) {
    Resource r=iter.next();
    if (!(r instanceof FileResource)) {
      throw new BuildException("Only filesystem resource are supported: " + r.getName() + ", was: "+ r.getClass().getName());
    }
    File f=((FileResource)r).getFile();
    List<String> cmd=new ArrayList<String>();
    cmd.add(svnExecutable);
    cmd.add("pget");
    cmd.add("svn:eol-style");
    cmd.add(f.getAbsolutePath());
    String eolStyle=exec(cmd);
    if (eolStyle.isEmpty()) {
      cmd.clear();
      cmd.add(svnExecutable);
      cmd.add("pget");
      cmd.add("svn:mime-type");
      cmd.add(f.getAbsolutePath());
      String binProp=exec(cmd);
      if (!binProp.startsWith("application/") && !binProp.startsWith("image/")) {
        success=false;
        log(r.getName() + " missing svn:eol-style (or binary svn:mime-type).");
      }
    }
  }
  if (!success) {
    throw new BuildException("Some svn properties are missing");
  }
}
