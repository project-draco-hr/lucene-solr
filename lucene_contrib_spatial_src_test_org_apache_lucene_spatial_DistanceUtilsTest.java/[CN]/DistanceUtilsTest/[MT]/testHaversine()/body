{
  double distance;
  distance=DistanceUtils.haversine(0,0,Math.PI / 4.0,Math.PI / 4.0,DistanceUtils.EARTH_MEAN_RADIUS_KM);
  assertEquals(6672.0,distance,0.5);
  distance=DistanceUtils.haversine(0,0,Math.toRadians(20),Math.toRadians(20),DistanceUtils.EARTH_MEAN_RADIUS_KM);
  assertEquals(3112,distance,0.5);
  distance=DistanceUtils.haversine(0,0,Math.toRadians(1),Math.toRadians(1),DistanceUtils.EARTH_MEAN_RADIUS_KM);
  assertEquals(157.2,distance,0.5);
  distance=DistanceUtils.haversine(Math.toRadians(1),Math.toRadians(-1),Math.toRadians(1),Math.toRadians(1),DistanceUtils.EARTH_MEAN_RADIUS_KM);
  assertEquals(222.4,distance,0.5);
  distance=DistanceUtils.haversine(Math.toRadians(89),Math.toRadians(-1),Math.toRadians(89),Math.toRadians(179),DistanceUtils.EARTH_MEAN_RADIUS_KM);
  assertEquals(222.4,distance,0.5);
  distance=DistanceUtils.haversine(Math.toRadians(89),Math.toRadians(-1),Math.toRadians(49),Math.toRadians(179),DistanceUtils.EARTH_MEAN_RADIUS_KM);
  assertEquals(4670,distance,0.5);
  distance=DistanceUtils.haversine(Math.toRadians(0),Math.toRadians(-179),Math.toRadians(0),Math.toRadians(179),DistanceUtils.EARTH_MEAN_RADIUS_KM);
  assertEquals(222.4,distance,0.5);
}
