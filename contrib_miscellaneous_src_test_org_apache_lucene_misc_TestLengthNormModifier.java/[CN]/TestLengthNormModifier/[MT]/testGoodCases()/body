{
  IndexSearcher searcher;
  final float[] scores=new float[NUM_DOCS];
  float lastScore=0.0f;
  searcher=new IndexSearcher(store);
  searcher.search(new TermQuery(new Term("field","word")),new HitCollector(){
    public final void collect(    int doc,    float score){
      scores[doc]=score;
    }
  }
);
  searcher.close();
  lastScore=Float.MAX_VALUE;
  for (int i=0; i < NUM_DOCS; i++) {
    String msg="i=" + i + ", "+ scores[i]+ " <= "+ lastScore;
    assertTrue(msg,scores[i] <= lastScore);
    lastScore=scores[i];
  }
  Similarity s=new DefaultSimilarity(){
    public float lengthNorm(    String fieldName,    int numTokens){
      return (float)numTokens;
    }
  }
;
  LengthNormModifier lnm=new LengthNormModifier(store,s);
  lnm.reSetNorms("field");
  searcher=new IndexSearcher(store);
  searcher.search(new TermQuery(new Term("field","word")),new HitCollector(){
    public final void collect(    int doc,    float score){
      scores[doc]=score;
    }
  }
);
  searcher.close();
  lastScore=0.0f;
  for (int i=0; i < NUM_DOCS; i++) {
    String msg="i=" + i + ", "+ scores[i]+ " >= "+ lastScore;
    assertTrue(msg,scores[i] >= lastScore);
    lastScore=scores[i];
  }
}
