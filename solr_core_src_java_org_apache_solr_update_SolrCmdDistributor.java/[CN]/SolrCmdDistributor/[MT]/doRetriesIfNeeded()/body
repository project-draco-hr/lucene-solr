{
  List<Error> errors=new ArrayList<Error>(this.errors);
  errors.addAll(servers.getErrors());
  List<Error> resubmitList=new ArrayList<Error>();
  for (  Error err : errors) {
    try {
      String oldNodeUrl=err.req.node.getUrl();
      boolean isRetry=err.req.node.checkRetry();
      boolean doRetry=false;
      int rspCode=err.statusCode;
      if (testing_errorHook != null)       Diagnostics.call(testing_errorHook,err.e);
      if (isRetry) {
        if (rspCode == 404 || rspCode == 403 || rspCode == 503) {
          doRetry=true;
        }
        if (err.e instanceof ConnectException) {
          doRetry=true;
        }
 else         if (err.e instanceof SolrServerException) {
          if (((SolrServerException)err.e).getRootCause() instanceof ConnectException) {
            doRetry=true;
          }
        }
 else         if (err.e instanceof RemoteSolrException) {
          Exception cause=(RemoteSolrException)err.e.getCause();
          if (cause != null && cause instanceof ConnectException) {
            doRetry=true;
          }
        }
        if (err.req.retries < maxRetriesOnForward && doRetry) {
          err.req.retries++;
          SolrException.log(SolrCmdDistributor.log,"forwarding update to " + oldNodeUrl + " failed - retrying ... retries: "+ err.req.retries);
          try {
            Thread.sleep(retryPause);
          }
 catch (          InterruptedException e) {
            Thread.currentThread().interrupt();
            log.warn(null,e);
          }
          resubmitList.add(err);
        }
 else {
          allErrors.add(err);
        }
      }
 else {
        allErrors.add(err);
      }
    }
 catch (    Exception e) {
      log.error("Unexpected Error while doing request retries",e);
    }
  }
  servers.clearErrors();
  this.errors.clear();
  for (  Error err : resubmitList) {
    submit(err.req);
  }
  if (resubmitList.size() > 0) {
    servers.blockUntilFinished();
    doRetriesIfNeeded();
  }
}
