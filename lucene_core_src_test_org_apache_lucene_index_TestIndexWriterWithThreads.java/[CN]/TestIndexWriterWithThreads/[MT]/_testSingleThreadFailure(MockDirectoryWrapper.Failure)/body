{
  MockDirectoryWrapper dir=newMockDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(new MockAnalyzer(random())).setMaxBufferedDocs(2).setMergeScheduler(new ConcurrentMergeScheduler()).setCommitOnClose(false);
  if (iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler) {
    iwc.setMergeScheduler(new SuppressingConcurrentMergeScheduler(){
      @Override protected boolean isOK(      Throwable th){
        return th instanceof AlreadyClosedException || (th instanceof IllegalStateException && th.getMessage().contains("this writer hit an unrecoverable error"));
      }
    }
);
  }
  IndexWriter writer=new IndexWriter(dir,iwc);
  final Document doc=new Document();
  FieldType customType=new FieldType(TextField.TYPE_STORED);
  customType.setStoreTermVectors(true);
  customType.setStoreTermVectorPositions(true);
  customType.setStoreTermVectorOffsets(true);
  doc.add(newField("field","aaa bbb ccc ddd eee fff ggg hhh iii jjj",customType));
  for (int i=0; i < 6; i++)   writer.addDocument(doc);
  dir.failOn(failure);
  failure.setDoFail();
  try {
    writer.addDocument(doc);
    writer.addDocument(doc);
    writer.commit();
    fail("did not hit exception");
  }
 catch (  IOException ioe) {
  }
  failure.clearDoFail();
  try {
    writer.addDocument(doc);
    writer.commit();
    writer.close();
  }
 catch (  AlreadyClosedException ace) {
    assertTrue(writer.deleter.isClosed());
  }
  dir.close();
}
