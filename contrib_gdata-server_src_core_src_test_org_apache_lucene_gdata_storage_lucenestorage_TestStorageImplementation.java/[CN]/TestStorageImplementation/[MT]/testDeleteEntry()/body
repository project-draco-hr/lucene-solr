{
  try {
    this.storage.storeEntry(null);
    fail("entry is null");
  }
 catch (  StorageException e) {
  }
  ServerBaseEntry entry=new ServerBaseEntry();
  entry.setServiceConfig(new ProvidedServiceStub());
  entry.setId("someID");
  entry.setFeedId("someID");
  try {
    this.storage.storeEntry(entry);
  }
 catch (  StorageException e) {
    fail("unexpected exception");
  }
  entry.setFeedId(null);
  try {
    this.storage.deleteEntry(entry);
    fail("feed is null");
  }
 catch (  StorageException e) {
  }
  entry.setFeedId("someID");
  try {
    this.storage.deleteEntry(entry);
  }
 catch (  StorageException e1) {
    e1.printStackTrace();
    fail("unexpected exception");
  }
  entry.setFeedId("someID");
  try {
    this.storage.deleteEntry(entry);
  }
 catch (  StorageException e1) {
    e1.printStackTrace();
    fail("unexpected exception");
  }
  Object monitor=new Object();
  AtomicBoolean reached=new AtomicBoolean(false);
  MultiThreadEntryStub concuEntry=new MultiThreadEntryStub();
  concuEntry.setId(System.currentTimeMillis() + "");
  ProvidedService conf=new ProvidedServiceStub();
  concuEntry.setServiceConfig(conf);
  concuEntry.setUpdated(DateTime.now());
  concuEntry.setFeedId("feed");
  this.storage.storeEntry(concuEntry);
  storage.close();
  concuEntry.acceptGetVersionVisitor(getMonitorVisitor(monitor,reached));
  Thread t1=getDelThread(storage,concuEntry,false);
  Thread t2=getDelThread(storage,concuEntry,true);
  t1.start();
  while (true) {
synchronized (monitor) {
      if (reached.get())       break;
      monitor.wait(10);
    }
  }
  t2.start();
  t2.join(800);
  while (true) {
synchronized (monitor) {
      if (!reached.get())       break;
      monitor.notifyAll();
    }
  }
  t1.join(300);
  if (fail)   fail("thread failed -- see stacktrace");
}
