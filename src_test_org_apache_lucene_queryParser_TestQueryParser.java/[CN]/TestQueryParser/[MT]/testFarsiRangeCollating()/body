{
  RAMDirectory ramDir=new RAMDirectory();
  IndexWriter iw=new IndexWriter(ramDir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED);
  Document doc=new Document();
  doc.add(new Field("content","\u0633\u0627\u0628",Field.Store.YES,Field.Index.NOT_ANALYZED));
  iw.addDocument(doc);
  iw.close();
  IndexSearcher is=new IndexSearcher(ramDir,true);
  QueryParser qp=new QueryParser(Version.LUCENE_CURRENT,"content",new WhitespaceAnalyzer());
  Collator c=Collator.getInstance(new Locale("ar"));
  qp.setRangeCollator(c);
  qp.setMultiTermRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);
  ScoreDoc[] result=is.search(qp.parse("[ \u062F TO \u0698 ]"),null,1000).scoreDocs;
  assertEquals("The index Term should not be included.",0,result.length);
  result=is.search(qp.parse("[ \u0633 TO \u0638 ]"),null,1000).scoreDocs;
  assertEquals("The index Term should be included.",1,result.length);
  qp.setMultiTermRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);
  result=is.search(qp.parse("[ \u062F TO \u0698 ]"),null,1000).scoreDocs;
  assertEquals("The index Term should not be included.",0,result.length);
  result=is.search(qp.parse("[ \u0633 TO \u0638 ]"),null,1000).scoreDocs;
  assertEquals("The index Term should be included.",1,result.length);
  is.close();
}
