{
  Analyzer a=new WhitespaceAnalyzer();
  assertQueryEquals("\\[brackets",a,"\\[brackets");
  assertQueryEquals("\\[brackets",null,"brackets");
  assertQueryEquals("\\\\",a,"\\\\");
  assertQueryEquals("\\+blah",a,"\\+blah");
  assertQueryEquals("\\(blah",a,"\\(blah");
  assertQueryEquals("\\-blah",a,"\\-blah");
  assertQueryEquals("\\!blah",a,"\\!blah");
  assertQueryEquals("\\{blah",a,"\\{blah");
  assertQueryEquals("\\}blah",a,"\\}blah");
  assertQueryEquals("\\:blah",a,"\\:blah");
  assertQueryEquals("\\^blah",a,"\\^blah");
  assertQueryEquals("\\[blah",a,"\\[blah");
  assertQueryEquals("\\]blah",a,"\\]blah");
  assertQueryEquals("\\\"blah",a,"\\\"blah");
  assertQueryEquals("\\(blah",a,"\\(blah");
  assertQueryEquals("\\)blah",a,"\\)blah");
  assertQueryEquals("\\~blah",a,"\\~blah");
  assertQueryEquals("\\*blah",a,"\\*blah");
  assertQueryEquals("\\?blah",a,"\\?blah");
  assertQueryEquals("foo \\&& bar",a,"foo \\&& bar");
  assertQueryEquals("foo \\|| bar",a,"foo \\|| bar");
  assertQueryEquals("foo \\AND bar",a,"foo \\AND bar");
}
