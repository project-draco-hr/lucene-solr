{
  String confsetname="confsetone";
  String[] args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","upconfig","-confdir",TEST_HOME() + File.separator + "collection1"+ File.separator+ "conf","-confname",confsetname};
  ZkCLI.main(args);
  assertTrue(zkClient.exists(ZkController.CONFIGS_ZKNODE + "/" + confsetname,true));
  ZkCLI.main(new String[0]);
  args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","linkconfig","-collection","collection1","-confname",confsetname};
  ZkCLI.main(args);
  ZkNodeProps collectionProps=ZkNodeProps.load(zkClient.getData(ZkStateReader.COLLECTIONS_ZKNODE + "/collection1",null,null,true));
  assertTrue(collectionProps.containsKey("configName"));
  assertEquals(confsetname,collectionProps.get("configName"));
  File confDir=new File(TEMP_DIR,"solrtest-confdropspot-" + this.getClass().getName() + "-"+ System.currentTimeMillis());
  assertFalse(confDir.exists());
  args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","downconfig","-confdir",confDir.getAbsolutePath(),"-confname",confsetname};
  ZkCLI.main(args);
  File[] files=confDir.listFiles();
  List<String> zkFiles=zkClient.getChildren(ZkController.CONFIGS_ZKNODE + "/" + confsetname,null,true);
  assertEquals(files.length,zkFiles.size());
  args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","clear","/"};
  ZkCLI.main(args);
  assertEquals(0,zkClient.getChildren("/",null,true).size());
}
