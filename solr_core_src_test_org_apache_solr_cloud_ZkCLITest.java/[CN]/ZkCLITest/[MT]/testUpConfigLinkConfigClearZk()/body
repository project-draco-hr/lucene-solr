{
  String confsetname="confsetone";
  String[] args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","upconfig","-confdir",ExternalPaths.EXAMPLE_HOME + File.separator + "collection1"+ File.separator+ "conf","-confname",confsetname};
  ZkCLI.main(args);
  assertTrue(zkClient.exists(ZkController.CONFIGS_ZKNODE + "/" + confsetname,true));
  args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","linkconfig","-collection","collection1","-confname",confsetname};
  ZkCLI.main(args);
  ZkNodeProps collectionProps=ZkNodeProps.load(zkClient.getData(ZkStateReader.COLLECTIONS_ZKNODE + "/collection1",null,null,true));
  assertTrue(collectionProps.containsKey("configName"));
  assertEquals(confsetname,collectionProps.getStr("configName"));
  File confDir=new File(TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()),"solrtest-confdropspot");
  assertFalse(confDir.exists());
  args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","downconfig","-confdir",confDir.getAbsolutePath(),"-confname",confsetname};
  ZkCLI.main(args);
  File[] files=confDir.listFiles();
  List<String> zkFiles=zkClient.getChildren(ZkController.CONFIGS_ZKNODE + "/" + confsetname,null,true);
  assertEquals(files.length,zkFiles.size());
  File sourceConfDir=new File(ExternalPaths.EXAMPLE_HOME + File.separator + "collection1"+ File.separator+ "conf");
  Collection<File> sourceFiles=FileUtils.listFiles(sourceConfDir,TrueFileFilter.INSTANCE,new RegexFileFilter("[^\\.].*"));
  for (  File sourceFile : sourceFiles) {
    int indexOfRelativePath=sourceFile.getAbsolutePath().lastIndexOf("collection1" + File.separator + "conf");
    String relativePathofFile=sourceFile.getAbsolutePath().substring(indexOfRelativePath + 17,sourceFile.getAbsolutePath().length());
    File downloadedFile=new File(confDir,relativePathofFile);
    assertTrue(downloadedFile.getAbsolutePath() + " does not exist source:" + sourceFile.getAbsolutePath(),downloadedFile.exists());
    assertTrue("Content didn't change",FileUtils.contentEquals(sourceFile,downloadedFile));
  }
  args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","clear","/"};
  ZkCLI.main(args);
  assertEquals(0,zkClient.getChildren("/",null,true).size());
}
