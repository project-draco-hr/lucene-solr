{
  File tmpDir=createTempDir().toFile();
  String confsetname="confsetone";
  final String[] upconfigArgs;
  if (random().nextBoolean()) {
    upconfigArgs=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd",ZkCLI.UPCONFIG,"-confdir",ExternalPaths.TECHPRODUCTS_CONFIGSET,"-confname",confsetname};
  }
 else {
    final String excluderegexOption=(random().nextBoolean() ? "--" + ZkCLI.EXCLUDE_REGEX : "-" + ZkCLI.EXCLUDE_REGEX_SHORT);
    upconfigArgs=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd",ZkCLI.UPCONFIG,excluderegexOption,ZkCLI.EXCLUDE_REGEX_DEFAULT,"-confdir",ExternalPaths.TECHPRODUCTS_CONFIGSET,"-confname",confsetname};
  }
  ZkCLI.main(upconfigArgs);
  assertTrue(zkClient.exists(ZkConfigManager.CONFIGS_ZKNODE + "/" + confsetname,true));
  String[] args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","linkconfig","-collection","collection1","-confname",confsetname};
  ZkCLI.main(args);
  ZkNodeProps collectionProps=ZkNodeProps.load(zkClient.getData(ZkStateReader.COLLECTIONS_ZKNODE + "/collection1",null,null,true));
  assertTrue(collectionProps.containsKey("configName"));
  assertEquals(confsetname,collectionProps.getStr("configName"));
  File confDir=new File(tmpDir,"solrtest-confdropspot-" + this.getClass().getName() + "-"+ System.nanoTime());
  assertFalse(confDir.exists());
  args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","downconfig","-confdir",confDir.getAbsolutePath(),"-confname",confsetname};
  ZkCLI.main(args);
  File[] files=confDir.listFiles();
  List<String> zkFiles=zkClient.getChildren(ZkConfigManager.CONFIGS_ZKNODE + "/" + confsetname,null,true);
  assertEquals(files.length,zkFiles.size());
  File sourceConfDir=new File(ExternalPaths.TECHPRODUCTS_CONFIGSET);
  Collection<File> sourceFiles=FileUtils.listFiles(sourceConfDir,TrueFileFilter.INSTANCE,new RegexFileFilter("[^\\.].*"));
  for (  File sourceFile : sourceFiles) {
    int indexOfRelativePath=sourceFile.getAbsolutePath().lastIndexOf("sample_techproducts_configs" + File.separator + "conf");
    String relativePathofFile=sourceFile.getAbsolutePath().substring(indexOfRelativePath + 33,sourceFile.getAbsolutePath().length());
    File downloadedFile=new File(confDir,relativePathofFile);
    if (ZkConfigManager.UPLOAD_FILENAME_EXCLUDE_PATTERN.matcher(relativePathofFile).matches()) {
      assertFalse(sourceFile.getAbsolutePath() + " exists in ZK, downloaded:" + downloadedFile.getAbsolutePath(),downloadedFile.exists());
    }
 else {
      assertTrue(downloadedFile.getAbsolutePath() + " does not exist source:" + sourceFile.getAbsolutePath(),downloadedFile.exists());
      assertTrue(relativePathofFile + " content changed",FileUtils.contentEquals(sourceFile,downloadedFile));
    }
  }
  args=new String[]{"-zkhost",zkServer.getZkAddress(),"-cmd","clear","/"};
  ZkCLI.main(args);
  assertEquals(0,zkClient.getChildren("/",null,true).size());
}
