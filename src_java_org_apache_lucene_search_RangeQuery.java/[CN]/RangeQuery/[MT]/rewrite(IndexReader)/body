{
  BooleanQuery query=new BooleanQuery();
  if (lowerTerm == null)   lowerTerm=new Term(getField(),"");
  TermEnum enum=reader.terms(lowerTerm);
  try {
    String lowerText=null;
    String field;
    boolean checkLower=false;
    if (!inclusive) {
      if (lowerTerm != null) {
        lowerText=lowerTerm.text();
        checkLower=true;
      }
      if (upperTerm != null) {
        TermEnum uppEnum=reader.terms(upperTerm);
        upperTerm=uppEnum.term();
      }
    }
    String testField=getField();
    do {
      Term term=enum.term();
      if (term != null && term.field() == testField) {
        if (!checkLower || term.text().compareTo(lowerText) > 0) {
          checkLower=false;
          if (upperTerm != null) {
            int compare=upperTerm.compareTo(term);
            if ((compare < 0) || (!inclusive && compare == 0))             break;
          }
          TermQuery tq=new TermQuery(term);
          tq.setBoost(getBoost());
          query.add(tq,false,false);
        }
      }
 else {
        break;
      }
    }
 while (enum.next());
  }
  finally {
    enum.close();
  }
  return query;
}
