{
  if (query == null) {
    BooleanQuery q=new BooleanQuery();
    if (lowerTerm == null)     lowerTerm=new Term(getField(),"");
    TermEnum enum=reader.terms(lowerTerm);
    try {
      String lowerText=null;
      String field;
      boolean checkLower=false;
      if (!inclusive) {
        if (lowerTerm != null) {
          lowerText=lowerTerm.text();
          checkLower=true;
        }
        if (upperTerm != null) {
          TermEnum uppEnum=reader.terms(upperTerm);
          upperTerm=uppEnum.term();
        }
      }
      String testField=getField();
      do {
        Term term=enum.term();
        if (term != null && term.field() == testField) {
          if (!checkLower || term.text().compareTo(lowerText) > 0) {
            checkLower=false;
            if (!inclusive && (upperTerm != null) && (upperTerm.compareTo(term) <= 0))             break;
            TermQuery tq=new TermQuery(term);
            tq.setBoost(boost);
            q.add(tq,false,false);
            if (inclusive && (upperTerm != null) && (upperTerm.compareTo(term) <= 0))             break;
          }
        }
 else {
          break;
        }
      }
 while (enum.next());
    }
  finally {
      enum.close();
    }
    query=q;
  }
  return query;
}
