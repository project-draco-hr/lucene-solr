{
  List<Object> result=new ArrayList<Object>();
  expression=expression.trim();
  String[] ss=expression.split(",");
  for (int i=0; i < ss.length; i++) {
    ss[i]=ss[i].trim();
    if (ss[i].startsWith("'")) {
      StringBuilder sb=new StringBuilder();
      while (true) {
        sb.append(ss[i]);
        if (ss[i].endsWith("'"))         break;
        i++;
        if (i >= ss.length)         throw new DataImportHandlerException(SEVERE,"invalid string at " + ss[i - 1] + " in function params: "+ expression);
        sb.append(",");
      }
      String s=sb.substring(1,sb.length() - 1);
      s=s.replaceAll("\\\\'","'");
      result.add(s);
    }
 else {
      if (Character.isDigit(ss[i].charAt(0))) {
        try {
          Double doub=Double.parseDouble(ss[i]);
          result.add(doub);
        }
 catch (        NumberFormatException e) {
          if (vr.resolve(ss[i]) == null) {
            wrapAndThrow(SEVERE,e,"Invalid number :" + ss[i] + "in parameters  "+ expression);
          }
        }
      }
 else {
        result.add(new VariableWrapper(ss[i],vr));
      }
    }
  }
  return result;
}
