{
  if (topN <= 0) {
    throw new IllegalArgumentException("topN must be > 0 (got: " + topN + ")");
  }
  verifyDim(dim);
  FacetLabel cp=FacetLabel.create(dim,path);
  int dimOrd=taxoReader.getOrdinal(cp);
  if (dimOrd == -1) {
    return null;
  }
  TopOrdAndIntQueue q=new TopOrdAndIntQueue(Math.min(taxoReader.getSize(),topN));
  int bottomValue=0;
  int ord=children[dimOrd];
  long sumValue=0;
  int childCount=0;
  TopOrdAndIntQueue.OrdAndValue reuse=null;
  while (ord != TaxonomyReader.INVALID_ORDINAL) {
    if (values[ord] > 0) {
      sumValue+=values[ord];
      childCount++;
      if (values[ord] > bottomValue) {
        if (reuse == null) {
          reuse=new TopOrdAndIntQueue.OrdAndValue();
        }
        reuse.ord=ord;
        reuse.value=values[ord];
        reuse=q.insertWithOverflow(reuse);
        if (q.size() == topN) {
          bottomValue=q.top().value;
        }
      }
    }
    ord=siblings[ord];
  }
  if (sumValue == 0) {
    return null;
  }
  LabelAndValue[] labelValues=new LabelAndValue[q.size()];
  for (int i=labelValues.length - 1; i >= 0; i--) {
    TopOrdAndIntQueue.OrdAndValue ordAndValue=q.pop();
    FacetLabel child=taxoReader.getPath(ordAndValue.ord);
    labelValues[i]=new LabelAndValue(child.components[cp.length],ordAndValue.value);
  }
  return new SimpleFacetResult(sumValue,labelValues,childCount);
}
