{
  TermAttribute termAtt=tf.addAttribute(TermAttribute.class);
  PositionIncrementAttribute posIncrAtt=tf.addAttribute(PositionIncrementAttribute.class);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "click",termAtt.term().equals("click") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "link",termAtt.term().equals("link") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "here",termAtt.term().equals("here") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "again",termAtt.term().equals("again") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "click",termAtt.term().equals("click") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "http://lucene.apache.org",termAtt.term().equals("http://lucene.apache.org") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "here",termAtt.term().equals("here") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 0,posIncrAtt.getPositionIncrement() == 0);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "again",termAtt.term().equals("again") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "a",termAtt.term().equals("a") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "b",termAtt.term().equals("b") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "c",termAtt.term().equals("c") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertTrue(tf.incrementToken());
  assertTrue(termAtt.term() + " is not equal to " + "d",termAtt.term().equals("d") == true);
  assertTrue(posIncrAtt.getPositionIncrement() + " does not equal: " + 1,posIncrAtt.getPositionIncrement() == 1);
  assertFalse(tf.incrementToken());
}
