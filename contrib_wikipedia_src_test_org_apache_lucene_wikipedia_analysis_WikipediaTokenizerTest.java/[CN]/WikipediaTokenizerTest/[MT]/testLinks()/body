{
  String test="[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here]";
  WikipediaTokenizer tf=new WikipediaTokenizer(new StringReader(test));
  Token token=new Token();
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "http://lucene.apache.org/java/docs/index.html#news",new String(token.termBuffer(),0,token.termLength()).equals("http://lucene.apache.org/java/docs/index.html#news") == true);
  assertTrue(token.type() + " is not equal to " + WikipediaTokenizer.EXTERNAL_LINK_URL,token.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);
  tf.next(token);
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "http://lucene.apache.org/java/docs/index.html?b=c",new String(token.termBuffer(),0,token.termLength()).equals("http://lucene.apache.org/java/docs/index.html?b=c") == true);
  assertTrue(token.type() + " is not equal to " + WikipediaTokenizer.EXTERNAL_LINK_URL,token.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);
}
