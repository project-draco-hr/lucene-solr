{
  String test="click [[link here again]] click [http://lucene.apache.org here again]";
  WikipediaTokenizer tf=new WikipediaTokenizer(new StringReader(test));
  Token token=new Token();
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "click",new String(token.termBuffer(),0,token.termLength()).equals("click") == true);
  assertTrue(token.getPositionIncrement() + " does not equal: " + 1,token.getPositionIncrement() == 1);
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "link",new String(token.termBuffer(),0,token.termLength()).equals("link") == true);
  assertTrue(token.getPositionIncrement() + " does not equal: " + 1,token.getPositionIncrement() == 1);
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "here",new String(token.termBuffer(),0,token.termLength()).equals("here") == true);
  assertTrue(token.getPositionIncrement() + " does not equal: " + 0,token.getPositionIncrement() == 0);
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "again",new String(token.termBuffer(),0,token.termLength()).equals("again") == true);
  assertTrue(token.getPositionIncrement() + " does not equal: " + 1,token.getPositionIncrement() == 1);
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "click",new String(token.termBuffer(),0,token.termLength()).equals("click") == true);
  assertTrue(token.getPositionIncrement() + " does not equal: " + 1,token.getPositionIncrement() == 1);
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "http://lucene.apache.org",new String(token.termBuffer(),0,token.termLength()).equals("http://lucene.apache.org") == true);
  assertTrue(token.getPositionIncrement() + " does not equal: " + 1,token.getPositionIncrement() == 1);
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "here",new String(token.termBuffer(),0,token.termLength()).equals("here") == true);
  assertTrue(token.getPositionIncrement() + " does not equal: " + 0,token.getPositionIncrement() == 0);
  token=tf.next(token);
  assertTrue("token is null and it shouldn't be",token != null);
  assertTrue(new String(token.termBuffer(),0,token.termLength()) + " is not equal to " + "again",new String(token.termBuffer(),0,token.termLength()).equals("again") == true);
  assertTrue(token.getPositionIncrement() + " does not equal: " + 1,token.getPositionIncrement() == 1);
}
