{
  FieldType type=h.getCore().getSchema().getFieldType("tint");
  assertTrue(type instanceof TrieField);
  String value=String.valueOf(random().nextInt());
  TokenStream ts=type.getAnalyzer().tokenStream("dummy",new StringReader(value));
  OffsetAttribute ofsAtt=ts.addAttribute(OffsetAttribute.class);
  ts.reset();
  int count=0;
  while (ts.incrementToken()) {
    count++;
    assertEquals(0,ofsAtt.startOffset());
    assertEquals(value.length(),ofsAtt.endOffset());
  }
  final int precStep=((TrieType)type).getPrecisionStep();
  assertEquals((32 + precStep - 1) / precStep,count);
  ts.end();
  assertEquals(value.length(),ofsAtt.startOffset());
  assertEquals(value.length(),ofsAtt.endOffset());
  ts.close();
  ts=type.getAnalyzer().tokenStream("dummy",new StringReader(""));
  ts.reset();
  assertFalse(ts.incrementToken());
  ts.end();
  assertEquals(0,ofsAtt.startOffset());
  assertEquals(0,ofsAtt.endOffset());
  ts.close();
}
