{
  Map<String,Object> fieldAttributes=new LinkedHashMap<>();
  String fieldName="accuracyField";
  fieldAttributes.put("name",fieldName);
  fieldAttributes.put("type","string");
  fieldAttributes.put("stored",false);
  fieldAttributes.put("indexed",true);
  fieldAttributes.put("required",true);
  SchemaRequest.AddField addFieldUpdateSchemaRequest=new SchemaRequest.AddField(fieldAttributes);
  SchemaResponse.UpdateResponse addFieldResponse=addFieldUpdateSchemaRequest.process(getSolrClient());
  assertValidSchemaResponse(addFieldResponse);
  fieldAttributes.put("stored",true);
  fieldAttributes.put("indexed",false);
  SchemaRequest.ReplaceField replaceFieldRequest=new SchemaRequest.ReplaceField(fieldAttributes);
  SchemaResponse.UpdateResponse replaceFieldResponse=replaceFieldRequest.process(getSolrClient());
  assertValidSchemaResponse(replaceFieldResponse);
  SchemaRequest.Field fieldSchemaRequest=new SchemaRequest.Field(fieldName);
  SchemaResponse.FieldResponse newFieldResponse=fieldSchemaRequest.process(getSolrClient());
  assertValidSchemaResponse(newFieldResponse);
  Map<String,Object> newFieldAttributes=newFieldResponse.getField();
  assertThat(fieldName,is(equalTo(newFieldAttributes.get("name"))));
  assertThat("string",is(equalTo(newFieldAttributes.get("type"))));
  assertThat(true,is(equalTo(newFieldAttributes.get("stored"))));
  assertThat(false,is(equalTo(newFieldAttributes.get("indexed"))));
  assertThat(true,is(equalTo(newFieldAttributes.get("required"))));
}
