{
  Map<String,Object> fieldTypeAttributes=new LinkedHashMap<>();
  String fieldTypeName="replaceInt";
  fieldTypeAttributes.put("name",fieldTypeName);
  fieldTypeAttributes.put("class","solr.TrieIntField");
  fieldTypeAttributes.put("precisionStep",0);
  fieldTypeAttributes.put("omitNorms",true);
  fieldTypeAttributes.put("positionIncrementGap",0);
  FieldTypeDefinition fieldTypeDefinition=new FieldTypeDefinition();
  fieldTypeDefinition.setAttributes(fieldTypeAttributes);
  SchemaRequest.AddFieldType addFieldTypeRequest=new SchemaRequest.AddFieldType(fieldTypeDefinition);
  SchemaResponse.UpdateResponse addFieldTypeResponse=addFieldTypeRequest.process(getSolrClient());
  assertValidSchemaResponse(addFieldTypeResponse);
  fieldTypeAttributes.put("precisionStep",1);
  fieldTypeAttributes.put("omitNorms",false);
  FieldTypeDefinition replaceFieldTypeDefinition=new FieldTypeDefinition();
  replaceFieldTypeDefinition.setAttributes(fieldTypeAttributes);
  SchemaRequest.ReplaceFieldType replaceFieldTypeRequest=new SchemaRequest.ReplaceFieldType(replaceFieldTypeDefinition);
  SchemaResponse.UpdateResponse replaceFieldTypeResponse=replaceFieldTypeRequest.process(getSolrClient());
  assertValidSchemaResponse(replaceFieldTypeResponse);
  SchemaRequest.FieldType fieldTypeRequest=new SchemaRequest.FieldType(fieldTypeName);
  SchemaResponse.FieldTypeResponse newFieldTypeResponse=fieldTypeRequest.process(getSolrClient());
  assertValidSchemaResponse(newFieldTypeResponse);
  FieldTypeRepresentation replacedFieldTypeRepresentation=newFieldTypeResponse.getFieldType();
  Map<String,Object> replacedFieldTypeAttributes=replacedFieldTypeRepresentation.getAttributes();
  assertThat(fieldTypeName,is(equalTo(replacedFieldTypeAttributes.get("name"))));
  assertThat("solr.TrieIntField",is(equalTo(replacedFieldTypeAttributes.get("class"))));
  assertThat(false,is(equalTo(replacedFieldTypeAttributes.get("omitNorms"))));
  assertThat("1",is(equalTo(replacedFieldTypeAttributes.get("precisionStep"))));
  assertThat("0",is(equalTo(replacedFieldTypeAttributes.get("positionIncrementGap"))));
}
