{
  SlopQueryNode phraseSlopNode=(SlopQueryNode)queryNode;
  Query query=(Query)phraseSlopNode.getChild().getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);
  if (query instanceof PhraseQuery) {
    PhraseQuery.Builder builder=new PhraseQuery.Builder();
    builder.setSlop(phraseSlopNode.getValue());
    PhraseQuery pq=(PhraseQuery)query;
    org.apache.lucene.index.Term[] terms=pq.getTerms();
    int[] positions=pq.getPositions();
    for (int i=0; i < terms.length; ++i) {
      builder.add(terms[i],positions[i]);
    }
    query=builder.build();
    query.setBoost(pq.getBoost());
  }
 else {
    ((MultiPhraseQuery)query).setSlop(phraseSlopNode.getValue());
  }
  return query;
}
