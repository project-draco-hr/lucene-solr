{
  final int[] count=new int[1];
  searcher.search(q,new SimpleCollector(){
    private Scorer scorer;
    @Override public void setScorer(    Scorer scorer){
      this.scorer=scorer;
      if (innerScorerClass != null) {
        final FilterScorer innerScorer=(FilterScorer)scorer;
        assertEquals("inner Scorer is implemented by wrong class",innerScorerClass,innerScorer.in.getClass());
      }
    }
    @Override public void collect(    int doc) throws IOException {
      assertEquals("Score differs from expected",expectedScore,this.scorer.score(),0);
      count[0]++;
    }
    @Override public boolean needsScores(){
      return true;
    }
  }
);
  assertEquals("invalid number of results",1,count[0]);
}
