{
  Statement s=null;
  PreparedStatement ps=null;
  Timestamp theTime=new Timestamp(System.currentTimeMillis() - 10000);
  try {
    s=conn.createStatement();
    s.executeUpdate("create table countries(code varchar(3) not null primary key, country_name varchar(50), deleted char(1) default 'N', last_modified timestamp not null)");
    s.executeUpdate("create table people(id int not null primary key, name varchar(50), country_code char(2), deleted char(1) default 'N', last_modified timestamp not null)");
    s.executeUpdate("create table people_sports(id int not null primary key, person_id int, sport_name varchar(50), deleted char(1) default 'N', last_modified timestamp not null)");
    log.info("INSERTING DB DATA USING TIMESTAMP: " + new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ",Locale.ROOT).format(theTime));
    ps=conn.prepareStatement("insert into countries (code, country_name, last_modified) values (?,?,?)");
    for (    String[] country : countries) {
      ps.setString(1,country[0]);
      ps.setString(2,country[1]);
      ps.setTimestamp(3,theTime);
      Assert.assertEquals(1,ps.executeUpdate());
    }
    ps.close();
    ps=conn.prepareStatement("insert into people (id, name, country_code, last_modified) values (?,?,?,?)");
    for (    Object[] person : people) {
      ps.setInt(1,(Integer)person[0]);
      ps.setString(2,(String)person[1]);
      ps.setString(3,(String)person[2]);
      ps.setTimestamp(4,theTime);
      Assert.assertEquals(1,ps.executeUpdate());
    }
    ps.close();
    ps=conn.prepareStatement("insert into people_sports (id, person_id, sport_name, last_modified) values (?,?,?,?)");
    for (    Object[] sport : people_sports) {
      ps.setInt(1,(Integer)sport[0]);
      ps.setInt(2,(Integer)sport[1]);
      ps.setString(3,(String)sport[2]);
      ps.setTimestamp(4,theTime);
      Assert.assertEquals(1,ps.executeUpdate());
    }
    ps.close();
    conn.commit();
    conn.close();
  }
 catch (  Exception e) {
    throw e;
  }
 finally {
    try {
      ps.close();
    }
 catch (    Exception ex) {
    }
    try {
      s.close();
    }
 catch (    Exception ex) {
    }
    try {
      conn.close();
    }
 catch (    Exception ex) {
    }
  }
}
