{
  for (int i=0; i < 2; i++) {
    Directory dir=newDirectory();
    IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.COMPOUND_FILES));
    Document d1=new Document();
    d1.add(new Field("f1","first field",StringField.TYPE_STORED));
    d1.add(new Field("f2","second field",StringField.TYPE_STORED));
    writer.addDocument(d1);
    if (i == 1) {
      writer.close();
      writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.COMPOUND_FILES));
    }
 else {
      writer.commit();
    }
    Document d2=new Document();
    FieldType customType2=new FieldType(TextField.TYPE_STORED);
    customType2.setStoreTermVectors(true);
    d2.add(new TextField("f2","second field"));
    d2.add(new Field("f1","first field",customType2));
    d2.add(new TextField("f3","third field"));
    d2.add(new TextField("f4","fourth field"));
    writer.addDocument(d2);
    writer.close();
    SegmentInfos sis=new SegmentInfos();
    sis.read(dir);
    assertEquals(2,sis.size());
    FieldInfos fis1=sis.info(0).getFieldInfos();
    FieldInfos fis2=sis.info(1).getFieldInfos();
    assertEquals("f1",fis1.fieldInfo(0).name);
    assertEquals("f2",fis1.fieldInfo(1).name);
    assertEquals("f1",fis2.fieldInfo(0).name);
    assertEquals("f2",fis2.fieldInfo(1).name);
    assertEquals("f3",fis2.fieldInfo(2).name);
    assertEquals("f4",fis2.fieldInfo(3).name);
    writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)));
    writer.forceMerge(1);
    writer.close();
    sis=new SegmentInfos();
    sis.read(dir);
    assertEquals(1,sis.size());
    FieldInfos fis3=sis.info(0).getFieldInfos();
    assertEquals("f1",fis3.fieldInfo(0).name);
    assertEquals("f2",fis3.fieldInfo(1).name);
    assertEquals("f3",fis3.fieldInfo(2).name);
    assertEquals("f4",fis3.fieldInfo(3).name);
    dir.close();
  }
}
