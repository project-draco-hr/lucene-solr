{
  List<RangeFacet> facetRanges=new ArrayList<>(rf.size());
  for (  Map.Entry<String,NamedList<Object>> facet : rf) {
    NamedList<Object> values=facet.getValue();
    Object rawGap=values.get("gap");
    RangeFacet rangeFacet;
    if (rawGap instanceof Number) {
      Number gap=(Number)rawGap;
      Number start=(Number)values.get("start");
      Number end=(Number)values.get("end");
      Number before=(Number)values.get("before");
      Number after=(Number)values.get("after");
      Number between=(Number)values.get("between");
      rangeFacet=new RangeFacet.Numeric(facet.getKey(),start,end,gap,before,after,between);
    }
 else {
      String gap=(String)rawGap;
      Date start=(Date)values.get("start");
      Date end=(Date)values.get("end");
      Number before=(Number)values.get("before");
      Number after=(Number)values.get("after");
      Number between=(Number)values.get("between");
      rangeFacet=new RangeFacet.Date(facet.getKey(),start,end,gap,before,after,between);
    }
    NamedList<Integer> counts=(NamedList<Integer>)values.get("counts");
    for (    Map.Entry<String,Integer> entry : counts) {
      rangeFacet.addCount(entry.getKey(),entry.getValue());
    }
    facetRanges.add(rangeFacet);
  }
  return facetRanges;
}
