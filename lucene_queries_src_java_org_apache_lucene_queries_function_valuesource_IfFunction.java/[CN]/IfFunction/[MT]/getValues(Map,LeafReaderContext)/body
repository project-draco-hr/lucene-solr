{
  final FunctionValues ifVals=ifSource.getValues(context,readerContext);
  final FunctionValues trueVals=trueSource.getValues(context,readerContext);
  final FunctionValues falseVals=falseSource.getValues(context,readerContext);
  return new FunctionValues(){
    @Override public byte byteVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.byteVal(doc) : falseVals.byteVal(doc);
    }
    @Override public short shortVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.shortVal(doc) : falseVals.shortVal(doc);
    }
    @Override public float floatVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.floatVal(doc) : falseVals.floatVal(doc);
    }
    @Override public int intVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.intVal(doc) : falseVals.intVal(doc);
    }
    @Override public long longVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.longVal(doc) : falseVals.longVal(doc);
    }
    @Override public double doubleVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.doubleVal(doc) : falseVals.doubleVal(doc);
    }
    @Override public String strVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.strVal(doc) : falseVals.strVal(doc);
    }
    @Override public boolean boolVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.boolVal(doc) : falseVals.boolVal(doc);
    }
    @Override public boolean bytesVal(    int doc,    BytesRefBuilder target){
      return ifVals.boolVal(doc) ? trueVals.bytesVal(doc,target) : falseVals.bytesVal(doc,target);
    }
    @Override public Object objectVal(    int doc){
      return ifVals.boolVal(doc) ? trueVals.objectVal(doc) : falseVals.objectVal(doc);
    }
    @Override public boolean exists(    int doc){
      return ifVals.boolVal(doc) ? trueVals.exists(doc) : falseVals.exists(doc);
    }
    @Override public ValueFiller getValueFiller(){
      return super.getValueFiller();
    }
    @Override public String toString(    int doc){
      return "if(" + ifVals.toString(doc) + ','+ trueVals.toString(doc)+ ','+ falseVals.toString(doc)+ ')';
    }
  }
;
}
