{
  SolrServer server=getSolrServer();
  server.deleteByQuery("*:*");
  SolrInputDocument doc=new SolrInputDocument();
  String docID="1112211111";
  doc.addField("id",docID);
  doc.addField("name","my name!");
  Assert.assertEquals(null,doc.getFieldValue("foo"));
  Assert.assertTrue(doc.getFieldValue("name") != null);
  UpdateResponse upres=server.add(doc);
  System.out.println("ADD:" + upres.getResponse());
  Assert.assertEquals(0,upres.getStatus());
  upres=server.commit(true,true);
  System.out.println("COMMIT:" + upres.getResponse());
  Assert.assertEquals(0,upres.getStatus());
  upres=server.optimize(true,true);
  System.out.println("OPTIMIZE:" + upres.getResponse());
  Assert.assertEquals(0,upres.getStatus());
  SolrQuery query=new SolrQuery();
  query.setQuery("id:" + docID);
  QueryResponse response=server.query(query);
  Assert.assertEquals(docID,response.getResults().get(0).getFieldValue("id"));
  List<SolrInputDocument> docs=new ArrayList<SolrInputDocument>();
  SolrInputDocument doc2=new SolrInputDocument();
  doc2.addField("id","2");
  doc2.addField("inStock",true);
  doc2.addField("price",2);
  doc2.addField("timestamp",new java.util.Date());
  docs.add(doc2);
  SolrInputDocument doc3=new SolrInputDocument();
  doc3.addField("id","3");
  doc3.addField("inStock",false);
  doc3.addField("price",3);
  doc3.addField("timestamp",new java.util.Date());
  docs.add(doc3);
  SolrInputDocument doc4=new SolrInputDocument();
  doc4.addField("id","4");
  doc4.addField("inStock",true);
  doc4.addField("price",4);
  doc4.addField("timestamp",new java.util.Date());
  docs.add(doc4);
  SolrInputDocument doc5=new SolrInputDocument();
  doc5.addField("id","5");
  doc5.addField("inStock",false);
  doc5.addField("price",5);
  doc5.addField("timestamp",new java.util.Date());
  docs.add(doc5);
  upres=server.add(docs);
  System.out.println("ADD:" + upres.getResponse());
  Assert.assertEquals(0,upres.getStatus());
  upres=server.commit(true,true);
  System.out.println("COMMIT:" + upres.getResponse());
  Assert.assertEquals(0,upres.getStatus());
  upres=server.optimize(true,true);
  System.out.println("OPTIMIZE:" + upres.getResponse());
  Assert.assertEquals(0,upres.getStatus());
  query=new SolrQuery("*:*");
  query.addFacetQuery("price:[* TO 2]");
  query.addFacetQuery("price:[2 TO 4]");
  query.addFacetQuery("price:[5 TO *]");
  query.addFacetField("inStock");
  query.addFacetField("price");
  query.addFacetField("timestamp");
  query.removeFilterQuery("inStock:true");
  response=server.query(query);
  Assert.assertEquals(0,response.getStatus());
  Assert.assertEquals(5,response.getResults().getNumFound());
  Assert.assertEquals(3,response.getFacetQuery().size());
  Assert.assertEquals(2,response.getFacetField("inStock").getValueCount());
  Assert.assertEquals(4,response.getFacetField("price").getValueCount());
  SolrQuery query2=query.getCopy();
  query2.addFilterQuery("inStock:true");
  response=server.query(query2);
  Assert.assertEquals(1,query2.getFilterQueries().length);
  Assert.assertEquals(0,response.getStatus());
  Assert.assertEquals(2,response.getResults().getNumFound());
  Assert.assertFalse(query.getFilterQueries() == query2.getFilterQueries());
}
