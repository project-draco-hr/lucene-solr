{
  super(loader,name,is,"/config/");
  initLibs();
  defaultIndexConfig=new SolrIndexConfig(this,null,null);
  mainIndexConfig=new SolrIndexConfig(this,"mainIndex",defaultIndexConfig);
  reopenReaders=getBool("mainIndex/reopenReaders",true);
  booleanQueryMaxClauseCount=getInt("query/maxBooleanClauses",BooleanQuery.getMaxClauseCount());
  filtOptEnabled=getBool("query/boolTofilterOptimizer/@enabled",false);
  filtOptCacheSize=getInt("query/boolTofilterOptimizer/@cacheSize",32);
  filtOptThreshold=getFloat("query/boolTofilterOptimizer/@threshold",.05f);
  useFilterForSortedQuery=getBool("query/useFilterForSortedQuery",false);
  queryResultWindowSize=getInt("query/queryResultWindowSize",1);
  queryResultMaxDocsCached=getInt("query/queryResultMaxDocsCached",Integer.MAX_VALUE);
  enableLazyFieldLoading=getBool("query/enableLazyFieldLoading",false);
  filterCacheConfig=CacheConfig.getConfig(this,"query/filterCache");
  queryResultCacheConfig=CacheConfig.getConfig(this,"query/queryResultCache");
  documentCacheConfig=CacheConfig.getConfig(this,"query/documentCache");
  CacheConfig conf=CacheConfig.getConfig(this,"query/fieldValueCache");
  if (conf == null) {
    Map<String,String> args=new HashMap<String,String>();
    args.put("name","fieldValueCache");
    args.put("size","10000");
    args.put("initialSize","10");
    args.put("showItems","-1");
    conf=new CacheConfig(FastLRUCache.class,args,null);
  }
  fieldValueCacheConfig=conf;
  unlockOnStartup=getBool("mainIndex/unlockOnStartup",false);
  useColdSearcher=getBool("query/useColdSearcher",false);
  dataDir=get("dataDir",null);
  userCacheConfigs=CacheConfig.getMultipleConfigs(this,"query/cache");
  org.apache.solr.search.SolrIndexSearcher.initRegenerators(this);
  hashSetInverseLoadFactor=1.0f / getFloat("//HashDocSet/@loadFactor",0.75f);
  hashDocSetMaxSize=getInt("//HashDocSet/@maxSize",3000);
  pingQueryParams=readPingQueryParams(this);
  httpCachingConfig=new HttpCachingConfig(this);
  Node jmx=(Node)getNode("jmx",false);
  if (jmx != null) {
    jmxConfig=new JmxConfiguration(true,get("jmx/@agentId",null),get("jmx/@serviceUrl",null));
  }
 else {
    jmxConfig=new JmxConfiguration(false,null,null);
  }
  maxWarmingSearchers=getInt("query/maxWarmingSearchers",Integer.MAX_VALUE);
  loadPluginInfo(SolrRequestHandler.class,"requestHandler",true,true);
  loadPluginInfo(QParserPlugin.class,"queryParser",true,true);
  loadPluginInfo(QueryResponseWriter.class,"queryResponseWriter",true,true);
  loadPluginInfo(ValueSourceParser.class,"valueSourceParser",true,true);
  loadPluginInfo(SearchComponent.class,"searchComponent",true,true);
  loadPluginInfo(QueryConverter.class,"queryConverter",true,true);
  loadPluginInfo(SolrEventListener.class,"//listener",false,true);
  loadPluginInfo(DirectoryFactory.class,"directoryFactory",false,true);
  loadPluginInfo(IndexDeletionPolicy.class,"mainIndex/deletionPolicy",false,true);
  loadPluginInfo(IndexReaderFactory.class,"indexReaderFactory",false,true);
  loadPluginInfo(UpdateRequestProcessorChain.class,"updateRequestProcessorChain",false,false);
  loadPluginInfo(SolrHighlighter.class,"highlighting",false,false);
  updateHandlerInfo=loadUpdatehandlerInfo();
  Config.log.info("Loaded SolrConfig: " + name);
  config=this;
}
