{
  final IntByteHashMap sparseProbabilisticStorageA=hllA.sparseProbabilisticStorage;
  final IntByteHashMap sparseProbabilisticStorageB=hllB.sparseProbabilisticStorage;
  assertEquals(sparseProbabilisticStorageA.size(),sparseProbabilisticStorageB.size());
  for (  IntByteCursor c : sparseProbabilisticStorageA) {
    assertEquals(sparseProbabilisticStorageA.get(c.key),sparseProbabilisticStorageB.get(c.key));
  }
}
