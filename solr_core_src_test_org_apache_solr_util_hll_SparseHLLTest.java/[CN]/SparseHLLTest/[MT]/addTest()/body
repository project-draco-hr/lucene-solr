{
{
    final int registerIndex=0;
    final int registerValue=1;
    final long rawValue=ProbabilisticTestUtil.constructHLLValue(log2m,registerIndex,registerValue);
    final HLL hll=new HLL(log2m,5,128,256,HLLType.SPARSE);
    hll.addRaw(rawValue);
    assertOneRegisterSet(hll,registerIndex,(byte)registerValue);
  }
{
    final int registerIndex=0;
    final int registerValue=31;
    final long rawValue=ProbabilisticTestUtil.constructHLLValue(log2m,registerIndex,registerValue);
    final HLL hll=new HLL(log2m,5,128,256,HLLType.SPARSE);
    hll.addRaw(rawValue);
    assertOneRegisterSet(hll,registerIndex,(byte)registerValue);
  }
{
    final int registerIndex=0;
    final int registerValue=36;
    final long rawValue=ProbabilisticTestUtil.constructHLLValue(log2m,registerIndex,registerValue);
    final HLL hll=new HLL(log2m,5,128,256,HLLType.SPARSE);
    hll.addRaw(rawValue);
    assertOneRegisterSet(hll,(short)registerIndex,(byte)31);
  }
{
    final int registerIndex=0;
    final int registerValue=1;
    final long rawValue=ProbabilisticTestUtil.constructHLLValue(log2m,registerIndex,registerValue);
    final HLL hll=new HLL(log2m,5,128,256,HLLType.SPARSE);
    hll.addRaw(rawValue);
    hll.addRaw(rawValue);
    assertOneRegisterSet(hll,registerIndex,(byte)registerValue);
  }
{
    final int registerIndex=0;
    final int registerValue=1;
    final long rawValue=ProbabilisticTestUtil.constructHLLValue(log2m,registerIndex,registerValue);
    final HLL hll=new HLL(log2m,5,128,256,HLLType.SPARSE);
    hll.addRaw(rawValue);
    final int registerValue2=2;
    final long rawValue2=ProbabilisticTestUtil.constructHLLValue(log2m,registerIndex,registerValue2);
    hll.addRaw(rawValue2);
    assertOneRegisterSet(hll,registerIndex,(byte)registerValue2);
  }
{
    final int registerIndex=0;
    final int registerValue=2;
    final long rawValue=ProbabilisticTestUtil.constructHLLValue(log2m,registerIndex,registerValue);
    final HLL hll=new HLL(log2m,5,128,256,HLLType.SPARSE);
    hll.addRaw(rawValue);
    final int registerValue2=1;
    final long rawValue2=ProbabilisticTestUtil.constructHLLValue(log2m,registerIndex,registerValue2);
    hll.addRaw(rawValue2);
    assertOneRegisterSet(hll,registerIndex,(byte)registerValue);
  }
}
