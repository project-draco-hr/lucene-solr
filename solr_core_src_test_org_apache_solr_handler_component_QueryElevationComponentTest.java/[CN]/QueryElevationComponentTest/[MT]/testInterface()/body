{
  try {
    init("schema12.xml");
    SolrCore core=h.getCore();
    NamedList<String> args=new NamedList<String>();
    args.add(QueryElevationComponent.FIELD_TYPE,"string");
    args.add(QueryElevationComponent.CONFIG_FILE,"elevate.xml");
    QueryElevationComponent comp=new QueryElevationComponent();
    comp.init(args);
    comp.inform(core);
    SolrQueryRequest req=req();
    IndexReader reader=req.getSearcher().getIndexReader();
    Map<String,ElevationObj> map=comp.getElevationMap(reader,core);
    req.close();
    assertEquals(4,map.size());
    assertEquals(1,map.get("XXXX").priority.size());
    assertEquals(2,map.get("YYYY").priority.size());
    assertEquals(3,map.get("ZZZZ").priority.size());
    assertEquals(null,map.get("xxxx"));
    assertEquals(null,map.get("yyyy"));
    assertEquals(null,map.get("zzzz"));
    args=new NamedList<String>();
    args.add(QueryElevationComponent.FIELD_TYPE,"lowerfilt");
    args.add(QueryElevationComponent.CONFIG_FILE,"elevate.xml");
    comp=new QueryElevationComponent();
    comp.init(args);
    comp.inform(core);
    map=comp.getElevationMap(reader,core);
    assertEquals(4,map.size());
    assertEquals(null,map.get("XXXX"));
    assertEquals(null,map.get("YYYY"));
    assertEquals(null,map.get("ZZZZ"));
    assertEquals(1,map.get("xxxx").priority.size());
    assertEquals(2,map.get("yyyy").priority.size());
    assertEquals(3,map.get("zzzz").priority.size());
    assertEquals("xxxx",comp.getAnalyzedQuery("XXXX"));
    assertEquals("xxxxyyyy",comp.getAnalyzedQuery("XXXX YYYY"));
    assertQ("Make sure QEC handles null queries",req("qt","/elevate","q.alt","*:*","defType","dismax"),"//*[@numFound='0']");
  }
  finally {
    delete();
  }
}
