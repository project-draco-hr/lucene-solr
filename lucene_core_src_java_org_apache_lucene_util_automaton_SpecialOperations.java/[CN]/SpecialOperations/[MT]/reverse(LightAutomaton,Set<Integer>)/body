{
  if (a.isEmpty()) {
    return a;
  }
  int numStates=a.getNumStates();
  LightAutomaton.Builder builder=new LightAutomaton.Builder();
  builder.createState();
  for (int s=0; s < numStates; s++) {
    builder.createState();
  }
  builder.setAccept(1,true);
  LightAutomaton.Transition t=new LightAutomaton.Transition();
  for (int s=0; s < numStates; s++) {
    int numTransitions=a.getNumTransitions(s);
    a.initTransition(s,t);
    for (int i=0; i < numTransitions; i++) {
      a.getNextTransition(t);
      builder.addTransition(t.dest + 1,s + 1,t.min,t.max);
    }
  }
  LightAutomaton result=builder.finish();
  for (  int s : a.getAcceptStates()) {
    result.addEpsilon(0,s + 1);
    if (initialStates != null) {
      initialStates.add(s + 1);
    }
  }
  result.finish();
  return result;
}
