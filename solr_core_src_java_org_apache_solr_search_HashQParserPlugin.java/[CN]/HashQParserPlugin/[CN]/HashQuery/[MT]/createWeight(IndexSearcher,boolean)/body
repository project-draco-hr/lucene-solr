{
  String[] keys=keysParam.split(",");
  SolrIndexSearcher solrIndexSearcher=(SolrIndexSearcher)searcher;
  IndexReaderContext context=solrIndexSearcher.getTopReaderContext();
  List<LeafReaderContext> leaves=context.leaves();
  ArrayBlockingQueue queue=new ArrayBlockingQueue(leaves.size());
  for (  LeafReaderContext leaf : leaves) {
    try {
      semaphore.acquire();
      SegmentPartitioner segmentPartitioner=new SegmentPartitioner(leaf,worker,workers,keys,solrIndexSearcher,queue,semaphore);
      threadPool.execute(segmentPartitioner);
    }
 catch (    Exception e) {
      throw new IOException(e);
    }
  }
  FixedBitSet[] fixedBitSets=new FixedBitSet[leaves.size()];
  for (int i=0; i < leaves.size(); i++) {
    try {
      SegmentPartitioner segmentPartitioner=(SegmentPartitioner)queue.take();
      fixedBitSets[segmentPartitioner.context.ord]=segmentPartitioner.docs;
    }
 catch (    Exception e) {
      throw new IOException(e);
    }
  }
  ConstantScoreQuery constantScoreQuery=new ConstantScoreQuery(new BitsFilter(fixedBitSets));
  return constantScoreQuery.createWeight(searcher,false);
}
