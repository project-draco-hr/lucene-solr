{
  final int maxDoc=reader.maxDoc();
  int[][][] dpf=new int[maxDoc][][];
  int numPartitions=(int)Math.ceil(taxo.getSize() / (double)iparams.getPartitionSize());
  IntArray docCategories=new IntArray();
  for (int part=0; part < numPartitions; part++) {
    CategoryListIterator cli=clp.createCategoryListIterator(reader,part);
    if (cli.init()) {
      for (int doc=0; doc < maxDoc; doc++) {
        if (cli.skipTo(doc)) {
          docCategories.clear(false);
          if (dpf[doc] == null) {
            dpf[doc]=new int[numPartitions][];
          }
          long category;
          while ((category=cli.nextCategory()) <= Integer.MAX_VALUE) {
            docCategories.addToArray((int)category);
          }
          final int size=docCategories.size();
          dpf[doc][part]=new int[size];
          for (int i=0; i < size; i++) {
            dpf[doc][part][i]=docCategories.get(i);
          }
        }
      }
    }
  }
  docPartitionCategories=dpf;
}
