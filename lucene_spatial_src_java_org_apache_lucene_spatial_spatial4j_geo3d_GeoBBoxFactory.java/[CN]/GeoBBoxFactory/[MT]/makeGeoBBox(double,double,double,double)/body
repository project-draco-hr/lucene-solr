{
  if (topLat > Math.PI * 0.5)   topLat=Math.PI * 0.5;
  if (bottomLat < -Math.PI * 0.5)   bottomLat=-Math.PI * 0.5;
  if (leftLon < -Math.PI)   leftLon=-Math.PI;
  if (rightLon > Math.PI)   rightLon=Math.PI;
  if (Math.abs(leftLon + Math.PI) < Vector.MINIMUM_RESOLUTION && Math.abs(rightLon - Math.PI) < Vector.MINIMUM_RESOLUTION) {
    if (Math.abs(topLat - Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION && Math.abs(bottomLat + Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION)     return new GeoWorld();
    if (Math.abs(topLat - bottomLat) < Vector.MINIMUM_RESOLUTION) {
      if (Math.abs(topLat - Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION || Math.abs(topLat + Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION)       return new GeoDegeneratePoint(topLat,0.0);
      return new GeoDegenerateLatitudeZone(topLat);
    }
    if (Math.abs(topLat - Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION)     return new GeoNorthLatitudeZone(bottomLat);
 else     if (Math.abs(bottomLat + Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION)     return new GeoSouthLatitudeZone(topLat);
    return new GeoLatitudeZone(topLat,bottomLat);
  }
  double extent=rightLon - leftLon;
  if (extent < 0.0)   extent+=Math.PI * 2.0;
  if (topLat == Math.PI * 0.5 && bottomLat == -Math.PI * 0.5) {
    if (Math.abs(leftLon - rightLon) < Vector.MINIMUM_RESOLUTION)     return new GeoDegenerateLongitudeSlice(leftLon);
    if (extent >= Math.PI)     return new GeoWideLongitudeSlice(leftLon,rightLon);
    return new GeoLongitudeSlice(leftLon,rightLon);
  }
  if (Math.abs(leftLon - rightLon) < Vector.MINIMUM_RESOLUTION) {
    if (Math.abs(topLat - bottomLat) < Vector.MINIMUM_RESOLUTION)     return new GeoDegeneratePoint(topLat,leftLon);
    return new GeoDegenerateVerticalLine(topLat,bottomLat,leftLon);
  }
  if (extent >= Math.PI) {
    if (Math.abs(topLat - bottomLat) < Vector.MINIMUM_RESOLUTION) {
      return new GeoWideDegenerateHorizontalLine(topLat,leftLon,rightLon);
    }
    if (Math.abs(topLat - Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION) {
      return new GeoWideNorthRectangle(bottomLat,leftLon,rightLon);
    }
 else     if (Math.abs(bottomLat + Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION) {
      return new GeoWideSouthRectangle(topLat,leftLon,rightLon);
    }
    return new GeoWideRectangle(topLat,bottomLat,leftLon,rightLon);
  }
  if (Math.abs(topLat - bottomLat) < Vector.MINIMUM_RESOLUTION) {
    if (Math.abs(topLat - Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION || Math.abs(topLat + Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION) {
      return new GeoDegeneratePoint(topLat,0.0);
    }
    return new GeoDegenerateHorizontalLine(topLat,leftLon,rightLon);
  }
  if (Math.abs(topLat - Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION) {
    return new GeoNorthRectangle(bottomLat,leftLon,rightLon);
  }
 else   if (Math.abs(bottomLat + Math.PI * 0.5) < Vector.MINIMUM_RESOLUTION) {
    return new GeoSouthRectangle(topLat,leftLon,rightLon);
  }
  return new GeoRectangle(topLat,bottomLat,leftLon,rightLon);
}
