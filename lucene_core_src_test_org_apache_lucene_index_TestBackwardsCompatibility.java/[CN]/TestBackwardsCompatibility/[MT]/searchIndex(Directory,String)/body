{
  IndexReader reader=DirectoryReader.open(dir);
  IndexSearcher searcher=new IndexSearcher(reader);
  _TestUtil.checkIndex(dir);
  final boolean is40Index=MultiFields.getMergedFieldInfos(reader).fieldInfo("content5") != null;
  assert is40Index;
  final Bits liveDocs=MultiFields.getLiveDocs(reader);
  for (int i=0; i < 35; i++) {
    if (liveDocs.get(i)) {
      StoredDocument d=reader.document(i);
      List<StorableField> fields=d.getFields();
      boolean isProxDoc=d.getField("content3") == null;
      if (isProxDoc) {
        final int numFields=is40Index ? 7 : 5;
        assertEquals(numFields,fields.size());
        StorableField f=d.getField("id");
        assertEquals("" + i,f.stringValue());
        f=d.getField("utf8");
        assertEquals("Lu\uD834\uDD1Ece\uD834\uDD60ne \u0000 \u2620 ab\ud917\udc17cd",f.stringValue());
        f=d.getField("autf8");
        assertEquals("Lu\uD834\uDD1Ece\uD834\uDD60ne \u0000 \u2620 ab\ud917\udc17cd",f.stringValue());
        f=d.getField("content2");
        assertEquals("here is more content with aaa aaa aaa",f.stringValue());
        f=d.getField("fie\u2C77ld");
        assertEquals("field with non-ascii name",f.stringValue());
      }
      Fields tfvFields=reader.getTermVectors(i);
      assertNotNull("i=" + i,tfvFields);
      Terms tfv=tfvFields.terms("utf8");
      assertNotNull("docID=" + i + " index="+ oldName,tfv);
    }
 else {
      assertEquals(7,i);
    }
  }
  if (is40Index) {
    NumericDocValues dvByte=MultiDocValues.getNumericValues(reader,"dvByte");
    BinaryDocValues dvBytesDerefFixed=MultiDocValues.getBinaryValues(reader,"dvBytesDerefFixed");
    BinaryDocValues dvBytesDerefVar=MultiDocValues.getBinaryValues(reader,"dvBytesDerefVar");
    SortedDocValues dvBytesSortedFixed=MultiDocValues.getSortedValues(reader,"dvBytesSortedFixed");
    SortedDocValues dvBytesSortedVar=MultiDocValues.getSortedValues(reader,"dvBytesSortedVar");
    BinaryDocValues dvBytesStraightFixed=MultiDocValues.getBinaryValues(reader,"dvBytesStraightFixed");
    BinaryDocValues dvBytesStraightVar=MultiDocValues.getBinaryValues(reader,"dvBytesStraightVar");
    NumericDocValues dvDouble=MultiDocValues.getNumericValues(reader,"dvDouble");
    NumericDocValues dvFloat=MultiDocValues.getNumericValues(reader,"dvFloat");
    NumericDocValues dvInt=MultiDocValues.getNumericValues(reader,"dvInt");
    NumericDocValues dvLong=MultiDocValues.getNumericValues(reader,"dvLong");
    NumericDocValues dvPacked=MultiDocValues.getNumericValues(reader,"dvPacked");
    NumericDocValues dvShort=MultiDocValues.getNumericValues(reader,"dvShort");
    for (int i=0; i < 35; i++) {
      int id=Integer.parseInt(reader.document(i).get("id"));
      assertEquals(id,dvByte.get(i));
      byte bytes[]=new byte[]{(byte)(id >>> 24),(byte)(id >>> 16),(byte)(id >>> 8),(byte)id};
      BytesRef expectedRef=new BytesRef(bytes);
      BytesRef scratch=new BytesRef();
      dvBytesDerefFixed.get(i,scratch);
      assertEquals(expectedRef,scratch);
      dvBytesDerefVar.get(i,scratch);
      assertEquals(expectedRef,scratch);
      dvBytesSortedFixed.get(i,scratch);
      assertEquals(expectedRef,scratch);
      dvBytesSortedVar.get(i,scratch);
      assertEquals(expectedRef,scratch);
      dvBytesStraightFixed.get(i,scratch);
      assertEquals(expectedRef,scratch);
      dvBytesStraightVar.get(i,scratch);
      assertEquals(expectedRef,scratch);
      assertEquals((double)id,Double.longBitsToDouble(dvDouble.get(i)),0D);
      assertEquals((float)id,Float.intBitsToFloat((int)dvFloat.get(i)),0F);
      assertEquals(id,dvInt.get(i));
      assertEquals(id,dvLong.get(i));
      assertEquals(id,dvPacked.get(i));
      assertEquals(id,dvShort.get(i));
    }
  }
  ScoreDoc[] hits=searcher.search(new TermQuery(new Term(new String("content"),"aaa")),null,1000).scoreDocs;
  StoredDocument d=searcher.getIndexReader().document(hits[0].doc);
  assertEquals("didn't get the right document first","0",d.get("id"));
  doTestHits(hits,34,searcher.getIndexReader());
  if (is40Index) {
    hits=searcher.search(new TermQuery(new Term(new String("content5"),"aaa")),null,1000).scoreDocs;
    doTestHits(hits,34,searcher.getIndexReader());
    hits=searcher.search(new TermQuery(new Term(new String("content6"),"aaa")),null,1000).scoreDocs;
    doTestHits(hits,34,searcher.getIndexReader());
  }
  hits=searcher.search(new TermQuery(new Term("utf8","\u0000")),null,1000).scoreDocs;
  assertEquals(34,hits.length);
  hits=searcher.search(new TermQuery(new Term(new String("utf8"),"lu\uD834\uDD1Ece\uD834\uDD60ne")),null,1000).scoreDocs;
  assertEquals(34,hits.length);
  hits=searcher.search(new TermQuery(new Term("utf8","ab\ud917\udc17cd")),null,1000).scoreDocs;
  assertEquals(34,hits.length);
  reader.close();
}
