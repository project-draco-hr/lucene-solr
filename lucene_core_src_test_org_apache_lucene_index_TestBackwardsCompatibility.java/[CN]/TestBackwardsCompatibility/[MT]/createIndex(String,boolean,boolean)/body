{
  File indexDir=new File("/tmp/4x",dirName);
  _TestUtil.rmDir(indexDir);
  Directory dir=newFSDirectory(indexDir);
  LogByteSizeMergePolicy mp=new LogByteSizeMergePolicy();
  mp.setUseCompoundFile(doCFS);
  mp.setNoCFSRatio(1.0);
  mp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);
  IndexWriterConfig conf=new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(10).setMergePolicy(mp);
  IndexWriter writer=new IndexWriter(dir,conf);
  for (int i=0; i < 35; i++) {
    addDoc(writer,i);
  }
  assertEquals("wrong doc count",35,writer.maxDoc());
  if (fullyMerged) {
    writer.forceMerge(1);
  }
  writer.close();
  if (!fullyMerged) {
    mp=new LogByteSizeMergePolicy();
    mp.setUseCompoundFile(doCFS);
    mp.setNoCFSRatio(1.0);
    conf=new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(10).setMergePolicy(mp);
    writer=new IndexWriter(dir,conf);
    addNoProxDoc(writer);
    writer.close();
    writer=new IndexWriter(dir,conf.setMergePolicy(doCFS ? NoMergePolicy.COMPOUND_FILES : NoMergePolicy.NO_COMPOUND_FILES));
    Term searchTerm=new Term("id","7");
    writer.deleteDocuments(searchTerm);
    writer.close();
  }
  dir.close();
  return indexDir;
}
