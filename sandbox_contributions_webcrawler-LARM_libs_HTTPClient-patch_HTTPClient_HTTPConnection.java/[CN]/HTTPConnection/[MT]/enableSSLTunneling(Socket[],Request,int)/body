{
  Vector hdrs=new Vector();
  for (int idx=0; idx < req.getHeaders().length; idx++) {
    String name=req.getHeaders()[idx].getName();
    if (name.equalsIgnoreCase("User-Agent") || name.equalsIgnoreCase("Proxy-Authorization")) {
      hdrs.addElement(req.getHeaders()[idx]);
    }
  }
  NVPair[] h=new NVPair[hdrs.size()];
  hdrs.copyInto(h);
  Request connect=new Request(this,"CONNECT",Host + ":" + Port,h,null,null,req.allowUI());
  connect.internal_subrequest=true;
  ByteArrayOutputStream hdr_buf=new ByteArrayOutputStream(600);
  HTTPResponse r=new HTTPResponse(gen_mod_insts(),timeout,connect,defaultIncrement);
  Response resp=null;
  while (true) {
    handleRequest(connect,r,resp,true);
    hdr_buf.reset();
    assembleHeaders(connect,hdr_buf);
    Log.write(Log.CONN,"Conn:  Sending SSL-Tunneling Subrequest: ",hdr_buf);
    hdr_buf.writeTo(sock[0].getOutputStream());
    resp=new Response(connect,sock[0].getInputStream());
    if (resp.getStatusCode() == 200) {
      return null;
    }
    try {
      resp.getData();
    }
 catch (    IOException ioe) {
    }
    try {
      sock[0].close();
    }
 catch (    IOException ioe) {
    }
    r.set(connect,resp);
    if (!r.handleResponse()) {
      return resp;
    }
    sock[0]=getSocket(timeout);
  }
}
