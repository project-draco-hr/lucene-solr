{
  SolrInputDocument d=null;
  Date now=new Date();
  d=processAdd("default-values",doc(f("id","1111"),f("name","Existing","Values")));
  assertNotNull(d);
  assertEquals("X",d.getFieldValue("processor_default_s"));
  assertEquals(42,d.getFieldValue("processor_default_i"));
  assertNotNull(d.getFieldValue("uuid"));
  assertNotNull(UUID.fromString(d.getFieldValue("uuid").toString()));
  assertNotNull(d.getFieldValue("timestamp"));
  assertTrue("timestamp not a date: " + d.getFieldValue("timestamp").getClass(),d.getFieldValue("timestamp") instanceof Date);
  assertEquals(Arrays.asList("Existing","Values"),d.getFieldValues("name"));
  d=processAdd("default-values",doc(f("id","1111"),f("timestamp",now),f("uuid","550e8400-e29b-41d4-a716-446655440000"),f("processor_default_s","I HAVE A VALUE"),f("processor_default_i",12345),f("name","Existing","Values")));
  assertNotNull(d);
  assertEquals("I HAVE A VALUE",d.getFieldValue("processor_default_s"));
  assertEquals(12345,d.getFieldValue("processor_default_i"));
  assertEquals("550e8400-e29b-41d4-a716-446655440000",d.getFieldValue("uuid"));
  assertEquals(now,d.getFieldValue("timestamp"));
  assertEquals(Arrays.asList("Existing","Values"),d.getFieldValues("name"));
}
