{
  Directory dir=newDirectory();
  Analyzer analyzer=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      return new TokenStreamComponents(new MockTokenizer(MockTokenizer.KEYWORD,false));
    }
    @Override public int getOffsetGap(    String fieldName){
      return -10;
    }
  }
;
  IndexWriter iw=new IndexWriter(dir,new IndexWriterConfig(analyzer));
  Document doc=new Document();
  iw.addDocument(doc);
  try {
    FieldType ft=new FieldType(TextField.TYPE_NOT_STORED);
    ft.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
    doc.add(new Field("foo","bar",ft));
    doc.add(new Field("foo","bar",ft));
    iw.addDocument(doc);
    fail("didn't get expected exception");
  }
 catch (  IllegalArgumentException expected) {
  }
  iw.close();
  DirectoryReader r=DirectoryReader.open(dir);
  assertEquals(1,r.numDocs());
  r.close();
  dir.close();
}
