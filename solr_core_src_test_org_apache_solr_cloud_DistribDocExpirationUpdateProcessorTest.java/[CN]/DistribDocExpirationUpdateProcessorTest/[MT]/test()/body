{
  UpdateRequest req1=new UpdateRequest();
  for (int i=1; i <= 100; i++) {
    req1.add(sdoc("id",i));
  }
  req1.commit(cluster.getSolrClient(),COLLECTION);
  waitForNoResults(0,params("q","id:999","rows","0","_trace","sanity_check"));
  final Map<String,Long> initIndexVersions=getIndexVersionOfAllReplicas();
  assertTrue("WTF? no versions?",0 < initIndexVersions.size());
  new UpdateRequest().add(sdoc("id","999","tTl_s","+30SECONDS")).commit(cluster.getSolrClient(),COLLECTION);
  waitForNoResults(180,params("q","id:999","rows","0","_trace","did_it_expire_yet"));
  final Map<String,Long> finalIndexVersions=getIndexVersionOfAllReplicas();
  assertEquals("WTF? not same num versions?",initIndexVersions.size(),finalIndexVersions.size());
  final Set<String> nodesThatChange=new HashSet<String>();
  final Set<String> shardsThatChange=new HashSet<String>();
  int coresCompared=0;
  DocCollection collectionState=cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION);
  for (  Replica replica : collectionState.getReplicas()) {
    coresCompared++;
    String name=replica.getName();
    String core=replica.getCoreName();
    Long initVersion=initIndexVersions.get(core);
    Long finalVersion=finalIndexVersions.get(core);
    assertNotNull(name + ": no init version for core: " + core,initVersion);
    assertNotNull(name + ": no final version for core: " + core,finalVersion);
    if (!initVersion.equals(finalVersion)) {
      nodesThatChange.add(core + "(" + name+ ")");
      shardsThatChange.add(name);
    }
  }
  assertEquals("Exactly one shard should have changed, instead: " + shardsThatChange + " nodes=("+ nodesThatChange+ ")",1,shardsThatChange.size());
  assertEquals("somehow we missed some cores?",initIndexVersions.size(),coresCompared);
}
