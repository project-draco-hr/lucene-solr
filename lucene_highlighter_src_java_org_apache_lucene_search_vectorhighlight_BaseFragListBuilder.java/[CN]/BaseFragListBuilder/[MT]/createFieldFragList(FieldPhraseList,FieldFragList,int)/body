{
  if (fragCharSize < minFragCharSize)   throw new IllegalArgumentException("fragCharSize(" + fragCharSize + ") is too small. It must be "+ minFragCharSize+ " or higher.");
  List<WeightedPhraseInfo> wpil=new ArrayList<WeightedPhraseInfo>();
  Iterator<WeightedPhraseInfo> ite=fieldPhraseList.getPhraseList().iterator();
  WeightedPhraseInfo phraseInfo=null;
  int startOffset=0;
  boolean taken=false;
  while (true) {
    if (!taken) {
      if (!ite.hasNext())       break;
      phraseInfo=ite.next();
    }
    taken=false;
    if (phraseInfo == null)     break;
    if (phraseInfo.getStartOffset() < startOffset)     continue;
    wpil.clear();
    wpil.add(phraseInfo);
    int firstOffset=phraseInfo.getStartOffset();
    int st=phraseInfo.getStartOffset() - margin < startOffset ? startOffset : phraseInfo.getStartOffset() - margin;
    int en=st + fragCharSize;
    if (phraseInfo.getEndOffset() > en)     en=phraseInfo.getEndOffset();
    int lastEndOffset=phraseInfo.getEndOffset();
    while (true) {
      if (ite.hasNext()) {
        phraseInfo=ite.next();
        taken=true;
        if (phraseInfo == null)         break;
      }
 else       break;
      if (phraseInfo.getEndOffset() <= en) {
        wpil.add(phraseInfo);
        lastEndOffset=phraseInfo.getEndOffset();
      }
 else       break;
    }
    int matchLen=lastEndOffset - firstOffset;
    int newMargin=(fragCharSize - matchLen) / 2;
    st=firstOffset - newMargin;
    if (st < startOffset) {
      st=startOffset;
    }
    en=st + fragCharSize;
    startOffset=en;
    fieldFragList.add(st,en,wpil);
  }
  return fieldFragList;
}
