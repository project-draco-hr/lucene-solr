{
  super(weight);
  if (subScorers.size() <= 1) {
    throw new IllegalArgumentException("There must be at least 2 subScorers");
  }
  this.subScorers=new DisiPriorityQueue(subScorers.size());
  for (  Scorer scorer : subScorers) {
    final DisiWrapper w=new DisiWrapper(scorer);
    this.subScorers.add(w);
  }
  this.needsScores=needsScores;
  this.approximation=new DisjunctionDISIApproximation(this.subScorers);
  boolean hasApproximation=false;
  float sumMatchCost=0;
  long sumApproxCost=0;
  for (  DisiWrapper w : this.subScorers) {
    long costWeight=(w.cost <= 1) ? 1 : w.cost;
    sumApproxCost+=costWeight;
    if (w.twoPhaseView != null) {
      hasApproximation=true;
      sumMatchCost+=w.matchCost * costWeight;
    }
  }
  if (hasApproximation == false) {
    twoPhase=null;
  }
 else {
    final float matchCost=sumMatchCost / sumApproxCost;
    twoPhase=new TwoPhase(approximation,matchCost);
  }
}
