{
  if (sequenceTest) {
    try {
      for (int i=0; i < testDict.length; i++) {
        String s=testDict[i];
        int lineno=testDictLineno.get(i);
        String req;
        String test=null;
        String params=null;
        char[] resp;
        if (s.length() < 2 || s.startsWith("#"))         continue;
        System.out.println("LINE=" + lineno + " EXECUTING "+ s);
        int endQuery=s.length();
        int startParams=s.indexOf("%%");
        int endParams=s.length();
        int endTests=s.length();
        if (startParams > 0) {
          endQuery=startParams;
          endParams=s.length();
        }
        int startTests=s.indexOf('%',startParams + 2);
        if (startTests > 0) {
          if (endQuery == s.length())           endQuery=startTests;
          endParams=startTests;
        }
        req=s.substring(0,endQuery).trim();
        if (startParams > 0)         params=s.substring(startParams + 2,endParams).trim();
        if (startTests > 0)         test=s.substring(startTests + 1,endTests).trim();
        if (req.startsWith("<")) {
          resp=doUpdate(req);
        }
 else {
          resp=doReq(req,params);
        }
        if (doValidate) {
          validate(req,test,resp);
        }
 else {
          System.out.println("#### no validation performed");
        }
      }
    }
 catch (    RuntimeException e) {
      numErr++;
      throw (e);
    }
    System.out.println(">>>>>>>>>>>>>>>>>>>>>>>> SUCCESS <<<<<<<<<<<<<<<<<<<<<<<<<<");
  }
 else {
    while (runAgain()) {
      if (isWriter)       doUpdate(updateDict[(int)(Math.random() * updateDict.length)]);
 else       doReq(requestDict[(int)(Math.random() * requestDict.length)],null);
    }
  }
}
