{
  Set<String> fileExtensions=new HashSet<String>();
  fileExtensions.add(IndexFileNames.FIELDS_EXTENSION);
  fileExtensions.add(IndexFileNames.FIELDS_INDEX_EXTENSION);
  Directory primaryDir=new MockRAMDirectory();
  RAMDirectory secondaryDir=new MockRAMDirectory();
  FileSwitchDirectory fsd=new FileSwitchDirectory(fileExtensions,primaryDir,secondaryDir,true);
  IndexWriter writer=new IndexWriter(fsd,new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()));
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setUseCompoundFile(false);
  TestIndexWriterReader.createIndexNoClose(true,"ram",writer);
  IndexReader reader=writer.getReader();
  assertEquals(100,reader.maxDoc());
  writer.commit();
  String[] files=primaryDir.listAll();
  assertTrue(files.length > 0);
  for (int x=0; x < files.length; x++) {
    String ext=FileSwitchDirectory.getExtension(files[x]);
    assertTrue(fileExtensions.contains(ext));
  }
  files=secondaryDir.listAll();
  assertTrue(files.length > 0);
  for (int x=0; x < files.length; x++) {
    String ext=FileSwitchDirectory.getExtension(files[x]);
    assertFalse(fileExtensions.contains(ext));
  }
  reader.close();
  writer.close();
  files=fsd.listAll();
  for (int i=0; i < files.length; i++) {
    assertNotNull(files[i]);
  }
  fsd.close();
}
