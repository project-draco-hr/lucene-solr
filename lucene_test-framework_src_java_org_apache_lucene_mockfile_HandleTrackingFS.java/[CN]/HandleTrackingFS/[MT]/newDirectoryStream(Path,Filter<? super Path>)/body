{
  Filter<Path> wrappedFilter=new Filter<Path>(){
    @Override public boolean accept(    Path entry) throws IOException {
      return filter.accept(new FilterPath(entry,fileSystem));
    }
  }
;
  DirectoryStream<Path> stream=delegate.newDirectoryStream(toDelegate(dir),wrappedFilter);
  stream=new FilterDirectoryStream(stream,fileSystem){
    boolean closed;
    @Override public void close() throws IOException {
      if (!closed) {
        closed=true;
        onClose(dir,this);
      }
      super.close();
    }
    @Override public String toString(){
      return "DirectoryStream(" + dir + ")";
    }
    @Override public int hashCode(){
      return System.identityHashCode(this);
    }
    @Override public boolean equals(    Object obj){
      return this == obj;
    }
  }
;
  callOpenHook(dir,stream);
  return stream;
}
