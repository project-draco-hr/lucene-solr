{
  if (lowerNames) {
    StringBuilder sb=new StringBuilder();
    for (int i=0; i < fname.length(); i++) {
      char ch=fname.charAt(i);
      if (!Character.isLetterOrDigit(ch))       ch='_';
 else       ch=Character.toLowerCase(ch);
      sb.append(ch);
    }
    fname=sb.toString();
  }
  String name=findMappedName(fname);
  SchemaField sf=schema.getFieldOrNull(name);
  if (sf == null && unknownFieldPrefix.length() > 0) {
    name=unknownFieldPrefix + name;
    sf=schema.getFieldOrNull(name);
  }
  if (sf == null && unknownFieldPrefix.length() == 0 && name == Metadata.RESOURCE_NAME_KEY) {
    return;
  }
  if (vals != null && vals.length == 1) {
    fval=vals[0];
    vals=null;
  }
  if (sf != null && !sf.multiValued() && vals != null) {
    StringBuilder builder=new StringBuilder();
    boolean first=true;
    for (    String val : vals) {
      if (first) {
        first=false;
      }
 else {
        builder.append(' ');
      }
      builder.append(val);
    }
    fval=builder.toString();
    vals=null;
  }
  float boost=getBoost(name);
  if (fval != null) {
    document.addField(name,transformValue(fval,sf),boost);
  }
  if (vals != null) {
    for (    String val : vals) {
      document.addField(name,transformValue(val,sf),boost);
    }
  }
}
