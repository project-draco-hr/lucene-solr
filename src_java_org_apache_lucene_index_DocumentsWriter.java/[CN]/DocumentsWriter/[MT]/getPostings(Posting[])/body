{
  numBytesUsed+=postings.length * POSTING_NUM_BYTE;
  final int numToCopy;
  if (postingsFreeCount < postings.length)   numToCopy=postingsFreeCount;
 else   numToCopy=postings.length;
  final int start=postingsFreeCount - numToCopy;
  System.arraycopy(postingsFreeList,start,postings,0,numToCopy);
  postingsFreeCount-=numToCopy;
  if (numToCopy < postings.length) {
    final int extra=postings.length - numToCopy;
    final int newPostingsAllocCount=postingsAllocCount + extra;
    if (newPostingsAllocCount > postingsFreeList.length)     postingsFreeList=new Posting[(int)(1.25 * newPostingsAllocCount)];
    balanceRAM();
    for (int i=numToCopy; i < postings.length; i++) {
      postings[i]=new Posting();
      numBytesAlloc+=POSTING_NUM_BYTE;
      postingsAllocCount++;
    }
  }
}
