{
  final ThreadState state=getThreadState(doc,delTerm);
  try {
    boolean success=false;
    try {
      try {
        state.processDocument(analyzer);
      }
  finally {
        finishDocument(state);
      }
      success=true;
    }
  finally {
      if (!success) {
synchronized (this) {
          if (state.doFlushAfter) {
            state.doFlushAfter=false;
            flushPending=false;
            notifyAll();
          }
          addDeleteDocID(state.docID);
        }
      }
    }
  }
 catch (  AbortException ae) {
    abort(ae);
  }
  return state.doFlushAfter || timeToFlushDeletes();
}
