{
  if (lo >= hi)   return;
  int mid=(lo + hi) >>> 1;
  if (array[lo].compareTo(array[mid]) > 0) {
    FieldData tmp=array[lo];
    array[lo]=array[mid];
    array[mid]=tmp;
  }
  if (array[mid].compareTo(array[hi]) > 0) {
    FieldData tmp=array[mid];
    array[mid]=array[hi];
    array[hi]=tmp;
    if (array[lo].compareTo(array[mid]) > 0) {
      FieldData tmp2=array[lo];
      array[lo]=array[mid];
      array[mid]=tmp2;
    }
  }
  int left=lo + 1;
  int right=hi - 1;
  if (left >= right)   return;
  FieldData partition=array[mid];
  for (; ; ) {
    while (array[right].compareTo(partition) > 0)     --right;
    while (left < right && array[left].compareTo(partition) <= 0)     ++left;
    if (left < right) {
      FieldData tmp=array[left];
      array[left]=array[right];
      array[right]=tmp;
      --right;
    }
 else {
      break;
    }
  }
  quickSort(array,lo,left);
  quickSort(array,left + 1,hi);
}
