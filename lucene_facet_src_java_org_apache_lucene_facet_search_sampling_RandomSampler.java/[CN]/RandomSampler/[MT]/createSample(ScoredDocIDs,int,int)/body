{
  final int[] sample=new int[sampleSetSize];
  final int maxStep=(actualSize * 2) / sampleSetSize;
  int remaining=actualSize;
  ScoredDocIDsIterator it=docids.iterator();
  int i=0;
  while (i < sample.length && remaining > (sampleSetSize - maxStep - i)) {
    int skipStep=1 + random.nextInt(maxStep);
    for (int j=0; j < skipStep; j++) {
      it.next();
      --remaining;
    }
    sample[i++]=it.getDocID();
  }
  while (i < sample.length) {
    it.next();
    sample[i++]=it.getDocID();
  }
  ScoredDocIDs sampleRes=ScoredDocIdsUtils.createScoredDocIDsSubset(docids,sample);
  SampleResult res=new SampleResult(sampleRes,sampleSetSize / (double)actualSize);
  return res;
}
