{
  Directory dir=getDirectory();
  Term searchTerm=new Term("content","aaa");
  Term searchTerm2=new Term("content","bbb");
  IndexWriter writer=new IndexWriter(dir,new WhitespaceAnalyzer(TEST_VERSION_CURRENT),true,IndexWriter.MaxFieldLength.LIMITED);
  for (int i=0; i < 100; i++) {
    addDoc(writer,searchTerm.text());
  }
  writer.close();
  IndexReader reader=IndexReader.open(dir,false);
  assertEquals("first docFreq",100,reader.docFreq(searchTerm));
  assertEquals("first docFreq",0,reader.docFreq(searchTerm2));
  assertTermDocsCount("first reader",reader,searchTerm,100);
  assertTermDocsCount("first reader",reader,searchTerm2,0);
  writer=new IndexWriter(dir,new WhitespaceAnalyzer(TEST_VERSION_CURRENT),false,IndexWriter.MaxFieldLength.LIMITED);
  for (int i=0; i < 100; i++) {
    addDoc(writer,searchTerm2.text());
  }
  if (optimize)   writer.optimize();
  writer.close();
  assertEquals("first docFreq",100,reader.docFreq(searchTerm));
  assertEquals("first docFreq",0,reader.docFreq(searchTerm2));
  assertTermDocsCount("first reader",reader,searchTerm,100);
  assertTermDocsCount("first reader",reader,searchTerm2,0);
  int deleted=0;
  try {
    deleted=reader.deleteDocuments(searchTerm);
    fail("Delete allowed on an index reader with stale segment information");
  }
 catch (  StaleReaderException e) {
  }
  reader.close();
  reader=IndexReader.open(dir,false);
  assertEquals("first docFreq",100,reader.docFreq(searchTerm));
  assertEquals("first docFreq",100,reader.docFreq(searchTerm2));
  assertTermDocsCount("first reader",reader,searchTerm,100);
  assertTermDocsCount("first reader",reader,searchTerm2,100);
  deleted=reader.deleteDocuments(searchTerm);
  assertEquals("deleted count",100,deleted);
  assertEquals("deleted docFreq",100,reader.docFreq(searchTerm));
  assertEquals("deleted docFreq",100,reader.docFreq(searchTerm2));
  assertTermDocsCount("deleted termDocs",reader,searchTerm,0);
  assertTermDocsCount("deleted termDocs",reader,searchTerm2,100);
  reader.close();
  reader=IndexReader.open(dir,false);
  assertEquals("deleted docFreq",100,reader.docFreq(searchTerm));
  assertEquals("deleted docFreq",100,reader.docFreq(searchTerm2));
  assertTermDocsCount("deleted termDocs",reader,searchTerm,0);
  assertTermDocsCount("deleted termDocs",reader,searchTerm2,100);
  reader.close();
}
