{
  String s=h.query(req("q","id:1","qt","/export","fl","floatdv,intdv,stringdv,longdv,doubledv","sort","intdv asc"));
  assertEquals(s,"{\"numFound\":1, \"docs\":[{\"floatdv\":2.1,\"intdv\":1,\"stringdv\":\"hello world\",\"longdv\":323223232323,\"doubledv\":2344.345}]}");
  s=h.query(req("q","id:7","qt","/export","fl","floatdv,intdv,stringdv,longdv,doubledv","sort","intdv asc"));
  assertEquals(s,"{\"numFound\":1, \"docs\":[{\"floatdv\":2.1,\"intdv\":7,\"stringdv\":\"\",\"longdv\":323223232323,\"doubledv\":2344.345}]}");
  s=h.query(req("q","id:1","qt","/export","fl","intdv_m,floatdv_m,doubledv_m,longdv_m,stringdv_m","sort","intdv asc"));
  assertEquals(s,"{\"numFound\":1, \"docs\":[{\"intdv_m\":[100,250],\"floatdv_m\":[123.321,345.123],\"doubledv_m\":[3444.222,23232.2],\"longdv_m\":[343332,43434343434],\"stringdv_m\":[\"Everton\",\"liverpool\",\"manchester city\"]}]}");
  s=h.query(req("q","id:7","qt","/export","fl","intdv_m,floatdv_m,doubledv_m,longdv_m,stringdv_m","sort","intdv asc"));
  assertEquals(s,"{\"numFound\":1, \"docs\":[{\"intdv_m\":[],\"floatdv_m\":[123.321,345.123],\"doubledv_m\":[3444.222,23232.2],\"longdv_m\":[343332,43434343434],\"stringdv_m\":[]}]}");
  s=h.query(req("q","id:(1 2)","qt","/export","fl","intdv","sort","intdv desc"));
  assertEquals(s,"{\"numFound\":2, \"docs\":[{\"intdv\":2},{\"intdv\":1}]}");
  s=h.query(req("q","id:(1 2)","qt","/export","fl","intdv","sort","intdv asc"));
  assertEquals(s,"{\"numFound\":2, \"docs\":[{\"intdv\":1},{\"intdv\":2}]}");
  s=h.query(req("q","id:(1 7)","qt","/export","fl","intdv","sort","stringdv desc"));
  assertEquals(s,"{\"numFound\":2, \"docs\":[{\"intdv\":1},{\"intdv\":7}]}");
  s=h.query(req("q","id:(1 7)","qt","/export","fl","intdv","sort","stringdv asc"));
  assertEquals(s,"{\"numFound\":2, \"docs\":[{\"intdv\":7},{\"intdv\":1}]}");
  s=h.query(req("q","id:(1 2)","qt","/export","fl","intdv","sort","floatdv asc,intdv desc"));
  assertEquals(s,"{\"numFound\":2, \"docs\":[{\"intdv\":2},{\"intdv\":1}]}");
  s=h.query(req("q","id:(1 2)","qt","/export","fl","intdv","sort","floatdv desc,intdv asc"));
  assertEquals(s,"{\"numFound\":2, \"docs\":[{\"intdv\":1},{\"intdv\":2}]}");
  s=h.query(req("q","id:(1 2 3)","qt","/export","fl","intdv","sort","floatdv asc,stringdv asc,intdv desc"));
  assertEquals(s,"{\"numFound\":3, \"docs\":[{\"intdv\":3},{\"intdv\":2},{\"intdv\":1}]}");
  s=h.query(req("q","id:(1 2 3)","qt","/export","fl","intdv","sort","floatdv asc,stringdv desc,intdv asc"));
  assertEquals(s,"{\"numFound\":3, \"docs\":[{\"intdv\":1},{\"intdv\":2},{\"intdv\":3}]}");
  s=h.query(req("q","id:(1 2 3)","qt","/export","fl","intdv","sort","floatdv asc,floatdv desc,floatdv asc,intdv desc"));
  assertEquals(s,"{\"numFound\":3, \"docs\":[{\"intdv\":3},{\"intdv\":2},{\"intdv\":1}]}");
  s=h.query(req("q","id:(1 2 3)","qt","/export","fl","intdv","sort","doubledv desc"));
  assertEquals(s,"{\"numFound\":3, \"docs\":[{\"intdv\":3},{\"intdv\":1},{\"intdv\":2}]}");
  s=h.query(req("q","id:100000","qt","/export","fl","intdv","sort","doubledv desc"));
  assertEquals(s,"{\"numFound\":0, \"docs\":[]}");
}
