{
  return new FieldComparator.DoubleComparator(numHits,getField(),(Double)missingValue){
    @Override protected NumericDocValues getNumericDocValues(    LeafReaderContext context,    String field) throws IOException {
      SortedNumericDocValues sortedNumeric=DocValues.getSortedNumeric(context.reader(),field);
      final BlockJoinSelector.Type type=order ? BlockJoinSelector.Type.MAX : BlockJoinSelector.Type.MIN;
      final BitDocIdSet parents=parentFilter.getDocIdSet(context);
      final BitDocIdSet children=childFilter.getDocIdSet(context);
      if (children == null) {
        return DocValues.emptyNumeric();
      }
      final NumericDocValues view=BlockJoinSelector.wrap(sortedNumeric,type,parents.bits(),children.bits());
      return new NumericDocValues(){
        @Override public long get(        int docID){
          return NumericUtils.sortableDoubleBits(view.get(docID));
        }
      }
;
    }
    @Override protected Bits getDocsWithValue(    LeafReaderContext context,    String field) throws IOException {
      final Bits docsWithValue=DocValues.getDocsWithField(context.reader(),field);
      final BitDocIdSet parents=parentFilter.getDocIdSet(context);
      final BitDocIdSet children=childFilter.getDocIdSet(context);
      if (children == null) {
        return new Bits.MatchNoBits(context.reader().maxDoc());
      }
      return BlockJoinSelector.wrap(docsWithValue,parents.bits(),children.bits());
    }
  }
;
}
