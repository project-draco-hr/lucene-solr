{
  return new FieldComparator.FloatComparator(numHits,getField(),(Float)missingValue){
    @Override protected NumericDocValues getNumericDocValues(    LeafReaderContext context,    String field) throws IOException {
      SortedNumericDocValues sortedNumeric=DocValues.getSortedNumeric(context.reader(),field);
      final BlockJoinSelector.Type type=order ? BlockJoinSelector.Type.MAX : BlockJoinSelector.Type.MIN;
      final BitSet parents=parentFilter.getBitSet(context);
      final BitSet children=childFilter.getBitSet(context);
      if (children == null) {
        return DocValues.emptyNumeric();
      }
      final NumericDocValues view=BlockJoinSelector.wrap(sortedNumeric,type,parents,children);
      return new NumericDocValues(){
        @Override public long get(        int docID){
          return NumericUtils.sortableFloatBits((int)view.get(docID));
        }
      }
;
    }
  }
;
}
