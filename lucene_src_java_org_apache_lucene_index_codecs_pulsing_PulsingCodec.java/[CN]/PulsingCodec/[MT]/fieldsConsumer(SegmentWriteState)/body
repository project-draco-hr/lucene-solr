{
  PostingsWriterBase docsWriter=new StandardPostingsWriter(state);
  PostingsWriterBase pulsingWriter=new PulsingPostingsWriterImpl(freqCutoff,docsWriter);
  TermsIndexWriterBase indexWriter;
  boolean success=false;
  try {
    indexWriter=new VariableGapTermsIndexWriter(state,new VariableGapTermsIndexWriter.EveryNTermSelector(state.termIndexInterval));
    success=true;
  }
  finally {
    if (!success) {
      IOUtils.closeSafely(true,pulsingWriter);
    }
  }
  success=false;
  try {
    FieldsConsumer ret=new BlockTermsWriter(indexWriter,state,pulsingWriter);
    success=true;
    return ret;
  }
  finally {
    if (!success) {
      IOUtils.closeSafely(true,pulsingWriter,indexWriter);
    }
  }
}
