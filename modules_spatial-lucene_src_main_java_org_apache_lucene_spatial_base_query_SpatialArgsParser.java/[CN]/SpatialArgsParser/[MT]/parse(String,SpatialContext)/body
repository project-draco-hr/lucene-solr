{
  int idx=v.indexOf('(');
  int edx=v.lastIndexOf(')');
  if (idx < 0 || idx > edx) {
    throw new InvalidSpatialArgument("missing parens: " + v,null);
  }
  SpatialOperation op=SpatialOperation.get(v.substring(0,idx).trim());
  String body=v.substring(idx + 1,edx).trim();
  if (body.length() < 1) {
    throw new InvalidSpatialArgument("missing body : " + v,null);
  }
  Shape shape=ctx.readShape(body);
  SpatialArgs args=new SpatialArgs(op,shape);
  if (v.length() > (edx + 1)) {
    body=v.substring(edx + 1).trim();
    if (body.length() > 0) {
      Map<String,String> aa=parseMap(body);
      args.setMin(readDouble(aa.remove("min")));
      args.setMax(readDouble(aa.remove("max")));
      args.setDistPrecision(readDouble(aa.remove("distPrec")));
      if (!aa.isEmpty()) {
        throw new InvalidSpatialArgument("unused parameters: " + aa,null);
      }
    }
  }
  return args;
}
