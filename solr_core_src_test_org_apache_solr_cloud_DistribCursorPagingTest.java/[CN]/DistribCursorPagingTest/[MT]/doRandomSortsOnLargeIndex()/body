{
  final Collection<String> allFieldNames=getAllSortFieldNames();
  final int numInitialDocs=TestUtil.nextInt(random(),100,200);
  final int totalDocs=atLeast(500);
  List<SolrInputDocument> initialDocs=new ArrayList<>();
  for (int i=1; i <= numInitialDocs; i++) {
    SolrInputDocument doc=CursorPagingTest.buildRandomDocument(i);
    initialDocs.add(doc);
    indexDoc(doc);
  }
  commit();
  for (  String f : allFieldNames) {
    for (    String order : new String[]{" asc"," desc"}) {
      String sort=f + order + ("id".equals(f) ? "" : ", id" + order);
      String rows="" + TestUtil.nextInt(random(),13,50);
      SentinelIntSet ids=assertFullWalkNoDups(numInitialDocs,params("q","*:*","fl","id," + f,"rows",rows,"sort",sort));
      if (numInitialDocs != ids.size()) {
        StringBuilder message=new StringBuilder("Expected " + numInitialDocs + " docs but got "+ ids.size()+ ". ");
        message.append("sort=");
        message.append(sort);
        message.append(". ");
        if (ids.size() < numInitialDocs) {
          message.append("Missing doc(s): ");
          for (          SolrInputDocument doc : initialDocs) {
            int id=((Integer)doc.get("id").getValue()).intValue();
            if (!ids.exists(id)) {
              QueryResponse rsp=cloudClient.query(params("q","id:" + id,"rows","1"));
              if (0 == rsp.getResults().size()) {
                message.append("<NOT RETRIEVABLE>:");
                message.append(doc.values());
              }
 else {
                message.append(rsp.getResults().get(0).getFieldValueMap().toString());
              }
              message.append("; ");
            }
          }
        }
        fail(message.toString());
      }
    }
  }
  for (int i=numInitialDocs + 1; i <= totalDocs; i++) {
    SolrInputDocument doc=CursorPagingTest.buildRandomDocument(i);
    indexDoc(doc);
  }
  commit();
  final int numRandomSorts=atLeast(3);
  for (int i=0; i < numRandomSorts; i++) {
    final String sort=CursorPagingTest.buildRandomSort(allFieldNames);
    final String rows="" + TestUtil.nextInt(random(),63,113);
    final String fl=random().nextBoolean() ? "id" : "id,score";
    final boolean matchAll=random().nextBoolean();
    final String q=matchAll ? "*:*" : CursorPagingTest.buildRandomQuery();
    SentinelIntSet ids=assertFullWalkNoDups(totalDocs,params("q",q,"fl",fl,"rows",rows,"sort",sort));
    if (matchAll) {
      assertEquals(totalDocs,ids.size());
    }
  }
}
