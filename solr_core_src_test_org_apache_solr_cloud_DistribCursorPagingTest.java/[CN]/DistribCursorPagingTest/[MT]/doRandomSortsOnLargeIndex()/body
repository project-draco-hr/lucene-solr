{
  final Collection<String> allFieldNames=getAllFieldNames();
  final int initialDocs=_TestUtil.nextInt(random(),100,200);
  final int totalDocs=atLeast(5000);
  for (int i=1; i <= initialDocs; i++) {
    SolrInputDocument doc=CursorPagingTest.buildRandomDocument(i);
    indexDoc(doc);
  }
  commit();
  log.info("SOLR-5652: Begining Loop over smallish num of docs");
  final boolean SOLR_5652=true;
  for (  String f : allFieldNames) {
    for (    String order : new String[]{" asc"," desc"}) {
      String sort=f + order + ("id".equals(f) ? "" : ", id" + order);
      String rows="" + _TestUtil.nextInt(random(),13,50);
      SentinelIntSet ids=assertFullWalkNoDups(SOLR_5652,initialDocs,params("q","*:*","fl","id," + f,"rows",rows,"sort",sort));
      assertEquals(initialDocs,ids.size());
    }
  }
  log.info("SOLR-5652: Ending Loop over smallish num of docs");
  for (int i=initialDocs + 1; i <= totalDocs; i++) {
    SolrInputDocument doc=CursorPagingTest.buildRandomDocument(i);
    indexDoc(doc);
  }
  commit();
  final int numRandomSorts=atLeast(5);
  for (int i=0; i < numRandomSorts; i++) {
    final String sort=CursorPagingTest.buildRandomSort(allFieldNames);
    final String rows="" + _TestUtil.nextInt(random(),63,113);
    final String fl=random().nextBoolean() ? "id" : "id,score";
    final boolean matchAll=random().nextBoolean();
    final String q=matchAll ? "*:*" : CursorPagingTest.buildRandomQuery();
    SentinelIntSet ids=assertFullWalkNoDups(totalDocs,params("q",q,"fl",fl,"rows",rows,"sort",sort));
    if (matchAll) {
      assertEquals(totalDocs,ids.size());
    }
  }
}
