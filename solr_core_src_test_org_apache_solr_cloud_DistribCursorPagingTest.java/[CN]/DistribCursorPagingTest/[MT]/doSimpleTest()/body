{
  String cursorMark=CURSOR_MARK_START;
  SolrParams params=null;
  QueryResponse rsp=null;
  final String intsort="int" + (random().nextBoolean() ? "" : "_dv");
  final String intmissingsort=intsort;
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","4","fl","id","sort","id desc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(0,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals(cursorMark,assertHashNextCursorMark(rsp));
  indexDoc(sdoc("id","9","str","c","float","-3.2","int","42"));
  indexDoc(sdoc("id","7","str","c","float","-3.2","int","-1976"));
  indexDoc(sdoc("id","2","str","c","float","-3.2","int","666"));
  indexDoc(sdoc("id","0","str","b","float","64.5","int","-42"));
  indexDoc(sdoc("id","5","str","b","float","64.5","int","2001"));
  indexDoc(sdoc("id","8","str","b","float","64.5","int","4055"));
  indexDoc(sdoc("id","6","str","a","float","64.5","int","7"));
  indexDoc(sdoc("id","1","str","a","float","64.5","int","7"));
  indexDoc(sdoc("id","4","str","a","float","11.1","int","6"));
  indexDoc(sdoc("id","3","str","a","float","11.1"));
  commit();
  cursorMark=CURSOR_MARK_START;
  params=params("q","id:9999999","rows","4","fl","id","sort","id desc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(0,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals(cursorMark,assertHashNextCursorMark(rsp));
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","0","fl","id","sort","id desc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals(cursorMark,assertHashNextCursorMark(rsp));
  cursorMark=CURSOR_MARK_START;
  params=params("q","-int:6","rows","4","fl","id","sort","id desc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(9,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,9,8,7,6);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(9,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,5,3,2,1);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(9,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,0);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(9,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals("no more docs, but cursorMark has changed",cursorMark,assertHashNextCursorMark(rsp));
  cursorMark=CURSOR_MARK_START;
  params=params("q","-int:2001 -int:4055","rows","3","fl","id","facet","true","facet.field","str","json.nl","map","sort",intsort + " asc, id asc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,7,0,3);
  assertEquals("a",rsp.getFacetField("str").getValues().get(0).getName());
  assertEquals(4,rsp.getFacetField("str").getValues().get(0).getCount());
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,4,1,6);
  assertEquals("a",rsp.getFacetField("str").getValues().get(0).getName());
  assertEquals(4,rsp.getFacetField("str").getValues().get(0).getCount());
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,9,2);
  assertEquals("a",rsp.getFacetField("str").getValues().get(0).getName());
  assertEquals(4,rsp.getFacetField("str").getValues().get(0).getCount());
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals("a",rsp.getFacetField("str").getValues().get(0).getName());
  assertEquals(4,rsp.getFacetField("str").getValues().get(0).getCount());
  assertEquals("no more docs, but cursorMark has changed",cursorMark,assertHashNextCursorMark(rsp));
  cursorMark=CURSOR_MARK_START;
  params=params("q","-int:2001 -int:4055","rows","3","fl","id","json.nl","map","sort",intmissingsort + "_first  asc, id asc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,3,7,0);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,4,1,6);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,9,2);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals("no more docs, but cursorMark has changed",cursorMark,assertHashNextCursorMark(rsp));
  cursorMark=CURSOR_MARK_START;
  params=params("q","-int:2001 -int:4055","rows","3","fl","id","json.nl","map","sort",intmissingsort + "_last asc, id asc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,7,0,4);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,1,6,9);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,2,3);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals("no more docs, but cursorMark has changed",cursorMark,assertHashNextCursorMark(rsp));
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","6","fl","id","sort","str asc, id desc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,6,4,3,1,8,5);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,0,9,7,2);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals("no more docs, but cursorMark has changed",cursorMark,assertHashNextCursorMark(rsp));
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","2","fl","id","sort","float asc, " + intsort + " desc, id desc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,2,9);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,7,4);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,3,8);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,5,6);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,1,0);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals("no more docs, but cursorMark has changed",cursorMark,assertHashNextCursorMark(rsp));
  cursorMark=CURSOR_MARK_START;
  params=params("q","id:3 id:7","rows","111","fl","id","sort",intsort + " asc, id asc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(2,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,7,3);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(2,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp);
  assertEquals("no more docs, but cursorMark has changed",cursorMark,assertHashNextCursorMark(rsp));
  SentinelIntSet ids;
  ids=assertFullWalkNoDups(10,params("q","*:*","rows","4","sort","id desc"));
  assertEquals(10,ids.size());
  ids=assertFullWalkNoDups(9,params("q","*:*","rows","1","fq","-id:4","sort","id asc"));
  assertEquals(9,ids.size());
  assertFalse("matched on id:4 unexpectedly",ids.exists(4));
  ids=assertFullWalkNoDups(9,params("q","*:*","rows","3","fq","-id:6","sort","float desc, id asc, int asc"));
  assertEquals(9,ids.size());
  assertFalse("matched on id:6 unexpectedly",ids.exists(6));
  ids=assertFullWalkNoDups(9,params("q","float:[0 TO *] int:7 id:6","rows","3","sort","score desc, id desc"));
  assertEquals(7,ids.size());
  assertFalse("matched on id:9 unexpectedly",ids.exists(9));
  assertFalse("matched on id:7 unexpectedly",ids.exists(7));
  assertFalse("matched on id:2 unexpectedly",ids.exists(2));
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","2","fl","id","sort","str asc, id asc");
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(10,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,1,3);
  cursorMark=assertHashNextCursorMark(rsp);
  del("id:3");
  commit();
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(9,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,4,6);
  cursorMark=assertHashNextCursorMark(rsp);
  del("id:0");
  commit();
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,5,8);
  cursorMark=assertHashNextCursorMark(rsp);
  indexDoc(sdoc("id","5","str","c"));
  commit();
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertNumFound(8,rsp);
  assertStartsAt(0,rsp);
  assertDocList(rsp,2,5);
  cursorMark=assertHashNextCursorMark(rsp);
  indexDoc(sdoc("id","7","str","a"));
  commit();
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertDocList(rsp,9);
  cursorMark=assertHashNextCursorMark(rsp);
  rsp=query(p(params,CURSOR_MARK_PARAM,cursorMark));
  assertDocList(rsp);
  assertEquals("no more docs, but cursorMark has changed",cursorMark,assertHashNextCursorMark(rsp));
}
