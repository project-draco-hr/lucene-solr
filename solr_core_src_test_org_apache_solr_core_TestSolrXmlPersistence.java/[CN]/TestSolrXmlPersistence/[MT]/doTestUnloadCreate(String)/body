{
  CoreContainer cc=init(SOLR_XML_LOTS_SYSVARS,"SystemVars1","SystemVars2");
  try {
    final CoreAdminHandler admin=new CoreAdminHandler(cc);
    SolrQueryResponse resp=new SolrQueryResponse();
    admin.handleRequestBody(req(CoreAdminParams.ACTION,CoreAdminParams.CoreAdminAction.UNLOAD.toString(),CoreAdminParams.CORE,which),resp);
    assertNull("Exception on unload",resp.getException());
    persistContainedInOrig(cc,new File(solrHomeDirectory,"unloadcreate1.solr.xml"));
    String instPath=new File(solrHomeDirectory,which).getAbsolutePath();
    admin.handleRequestBody(req(CoreAdminParams.ACTION,CoreAdminParams.CoreAdminAction.CREATE.toString(),CoreAdminParams.INSTANCE_DIR,instPath,CoreAdminParams.NAME,which),resp);
    assertNull("Exception on create",resp.getException());
    File persistXml=new File(solrHomeDirectory,"rename.solr.xml");
    File origXml=new File(solrHomeDirectory,"solr.xml");
    cc.persistFile(persistXml);
    String[] persistList=getAllNodes(persistXml);
    String[] expressions=new String[persistList.length];
    for (int idx=0; idx < persistList.length; ++idx) {
      String name="@name='" + which + "'";
      if (persistList[idx].contains(name)) {
        if (persistList[idx].contains("@schema='schema.xml'")) {
          expressions[idx]=persistList[idx].replace("schema.xml","${schema:schema.xml}");
        }
 else         if (persistList[idx].contains("@config='solrconfig.xml'")) {
          expressions[idx]=persistList[idx].replace("solrconfig.xml","${solrconfig:solrconfig.xml}");
        }
 else         if (persistList[idx].contains("@instanceDir=")) {
          expressions[idx]=persistList[idx].replaceFirst("instanceDir\\='.*?'","instanceDir='" + which + "/'");
        }
 else {
          expressions[idx]=persistList[idx];
        }
      }
 else {
        expressions[idx]=persistList[idx];
      }
    }
    assertXmlFile(origXml,expressions);
  }
  finally {
    cc.shutdown();
    if (solrHomeDirectory.exists()) {
      FileUtils.deleteDirectory(solrHomeDirectory);
    }
  }
}
