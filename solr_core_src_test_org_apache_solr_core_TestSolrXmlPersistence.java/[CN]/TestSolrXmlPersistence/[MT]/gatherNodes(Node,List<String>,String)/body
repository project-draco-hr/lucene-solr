{
  String nodeName=node.getNodeName();
  String thisPath=path + "/" + nodeName;
  NamedNodeMap attrs=node.getAttributes();
  String qualifier="";
  if (attrs.getLength() > 0) {
    if (qualified.contains(nodeName)) {
      qualifier="@name='" + node.getAttributes().getNamedItem("name").getTextContent() + "'";
    }
    for (int idx=0; idx < attrs.getLength(); ++idx) {
      Node attr=attrs.item(idx);
      if (StringUtils.isNotBlank(qualifier) && "name".equals(attr.getNodeName())) {
        continue;
      }
      if (StringUtils.isNotBlank(qualifier)) {
        expressions.add(thisPath + "[" + qualifier+ " and @"+ attr.getNodeName()+ "='"+ attr.getTextContent()+ "']");
      }
 else {
        expressions.add(thisPath + "[" + qualifier+ " @"+ attr.getNodeName()+ "='"+ attr.getTextContent()+ "']");
      }
    }
  }
  if (addText.contains(nodeName)) {
    expressions.add(thisPath + "[" + qualifier+ " and text()='"+ node.getTextContent()+ "']");
  }
  NodeList nodeList=node.getChildNodes();
  for (int i=0; i < nodeList.getLength(); i++) {
    Node currentNode=nodeList.item(i);
    if (currentNode.getNodeType() == Node.ELEMENT_NODE) {
      if (StringUtils.isNotBlank(qualifier)) {
        gatherNodes(currentNode,expressions,thisPath + "[" + qualifier+ "]");
      }
 else {
        gatherNodes(currentNode,expressions,thisPath);
      }
    }
  }
}
