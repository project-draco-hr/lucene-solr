{
  _facetQuery=new HashMap<String,Integer>();
  NamedList<Integer> fq=(NamedList<Integer>)info.get("facet_queries");
  if (fq != null) {
    for (    Map.Entry<String,Integer> entry : fq) {
      _facetQuery.put(entry.getKey(),entry.getValue());
    }
  }
  NamedList<NamedList<Number>> ff=(NamedList<NamedList<Number>>)info.get("facet_fields");
  if (ff != null) {
    _facetFields=new ArrayList<FacetField>(ff.size());
    _limitingFacets=new ArrayList<FacetField>(ff.size());
    long minsize=_results.getNumFound();
    for (    Map.Entry<String,NamedList<Number>> facet : ff) {
      FacetField f=new FacetField(facet.getKey());
      for (      Map.Entry<String,Number> entry : facet.getValue()) {
        f.add(entry.getKey(),entry.getValue().longValue());
      }
      _facetFields.add(f);
      FacetField nl=f.getLimitingFields(minsize);
      if (nl.getValueCount() > 0) {
        _limitingFacets.add(nl);
      }
    }
  }
  NamedList<NamedList<Object>> df=(NamedList<NamedList<Object>>)info.get("facet_dates");
  if (df != null) {
    _facetDates=new ArrayList<FacetField>(df.size());
    for (    Map.Entry<String,NamedList<Object>> facet : df) {
      NamedList<Object> values=facet.getValue();
      String gap=(String)values.get("gap");
      Date end=(Date)values.get("end");
      FacetField f=new FacetField(facet.getKey(),gap,end);
      for (      Map.Entry<String,Object> entry : values) {
        try {
          f.add(entry.getKey(),Long.parseLong(entry.getValue().toString()));
        }
 catch (        NumberFormatException e) {
        }
      }
      _facetDates.add(f);
    }
  }
}
