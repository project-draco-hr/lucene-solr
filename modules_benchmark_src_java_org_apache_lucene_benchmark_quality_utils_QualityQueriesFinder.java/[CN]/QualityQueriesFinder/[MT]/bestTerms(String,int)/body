{
  PriorityQueue<TermDf> pq=new TermsDfQueue(numTerms);
  IndexReader ir=IndexReader.open(dir,true);
  try {
    int threshold=ir.maxDoc() / 10;
    Terms terms=MultiFields.getTerms(ir,field);
    if (terms != null) {
      TermsEnum termsEnum=terms.iterator(null);
      while (termsEnum.next() != null) {
        int df=termsEnum.docFreq();
        if (df < threshold) {
          String ttxt=termsEnum.term().utf8ToString();
          pq.insertWithOverflow(new TermDf(ttxt,df));
        }
      }
    }
  }
  finally {
    ir.close();
  }
  String res[]=new String[pq.size()];
  int i=0;
  while (pq.size() > 0) {
    TermDf tdf=pq.pop();
    res[i++]=tdf.word;
    System.out.println(i + ".   word:  " + tdf.df+ "   "+ tdf.word);
  }
  return res;
}
