{
  return new AllValuesOrNoneFieldMutatingUpdateProcessor(getSelector(),next){
    @Override protected Object mutateValue(    Object srcVal){
      if (srcVal instanceof CharSequence) {
        String srcStringVal=srcVal.toString();
        for (        Map.Entry<String,DateTimeFormatter> format : formats.entrySet()) {
          DateTimeFormatter parser=format.getValue();
          try {
            DateTime dateTime=parser.parseDateTime(srcStringVal);
            return dateTime.withZone(DateTimeZone.UTC).toDate();
          }
 catch (          IllegalArgumentException e) {
            log.debug("value '{}' is not parseable with format '{}'",new Object[]{srcStringVal,format.getKey()});
          }
        }
        log.debug("value '{}' was not parsed by any configured format, thus was not mutated",srcStringVal);
        return SKIP_FIELD_VALUE_LIST_SINGLETON;
      }
      if (srcVal instanceof Date) {
        return srcVal;
      }
      return SKIP_FIELD_VALUE_LIST_SINGLETON;
    }
  }
;
}
