{
  int numTerms=12;
  String field="FIELD_1";
  TermStats[] terms=HighFreqTerms.getHighFreqTerms(reader,numTerms,field);
  TermStats[] termsWithTF=HighFreqTerms.sortByTotalTermFreq(reader,terms);
  for (int i=0; i < termsWithTF.length; i++) {
    String text=termsWithTF[i].termtext.utf8ToString();
    if (text.contains("highTF")) {
      if (text.contains("medDF")) {
        assertEquals("total term freq is expected",125,termsWithTF[i].totalTermFreq);
      }
 else {
        assertEquals("total term freq is expected",200,termsWithTF[i].totalTermFreq);
      }
    }
 else {
      int n=Integer.parseInt(text);
      assertEquals("doc freq is expected",getExpecteddocFreq(n),termsWithTF[i].docFreq);
      assertEquals("total term freq is expected",getExpectedtotalTermFreq(n),termsWithTF[i].totalTermFreq);
    }
  }
}
