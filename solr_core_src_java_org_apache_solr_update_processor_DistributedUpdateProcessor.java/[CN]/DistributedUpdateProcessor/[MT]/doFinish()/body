{
  cmdDistrib.finish();
  List<Error> errors=cmdDistrib.getErrors();
  if (errors.size() > 0) {
    if (errors.get(0).req.node instanceof RetryNode) {
      rsp.setException(errors.get(0).e);
    }
  }
  for (  SolrCmdDistributor.Error error : errors) {
    if (error.req.node instanceof RetryNode) {
      continue;
    }
    String recoveryUrl=error.req.node.getBaseUrl();
    HttpSolrServer server;
    log.info("try and ask " + recoveryUrl + " to recover");
    try {
      server=new HttpSolrServer(recoveryUrl);
      server.setSoTimeout(60000);
      server.setConnectionTimeout(15000);
      RequestRecovery recoverRequestCmd=new RequestRecovery();
      recoverRequestCmd.setAction(CoreAdminAction.REQUESTRECOVERY);
      recoverRequestCmd.setCoreName(error.req.node.getCoreName());
      server.request(recoverRequestCmd);
    }
 catch (    Exception e) {
      log.info("Could not tell a replica to recover",e);
    }
  }
}
