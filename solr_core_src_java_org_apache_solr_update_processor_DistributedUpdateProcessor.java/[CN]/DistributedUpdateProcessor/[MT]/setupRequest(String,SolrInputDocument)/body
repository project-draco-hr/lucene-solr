{
  List<Node> nodes=null;
  if (zkEnabled) {
    if ((updateCommand.getFlags() & (UpdateCommand.REPLAY | UpdateCommand.PEER_SYNC)) != 0) {
      isLeader=false;
      forwardToLeader=false;
      return nodes;
    }
    String coreName=req.getCore().getName();
    ClusterState cstate=zkController.getClusterState();
    numNodes=cstate.getLiveNodes().size();
    DocCollection coll=cstate.getCollection(collection);
    Slice slice=coll.getRouter().getTargetSlice(id,doc,req.getParams(),coll);
    if (slice == null) {
      String shardId=req.getCore().getCoreDescriptor().getCloudDescriptor().getShardId();
      slice=coll.getSlice(shardId);
      if (slice == null) {
        throw new SolrException(ErrorCode.BAD_REQUEST,"No shard " + shardId + " in "+ coll);
      }
    }
    String shardId=slice.getName();
    try {
      Replica leaderReplica=zkController.getZkStateReader().getLeaderRetry(collection,shardId);
      ZkCoreNodeProps leaderProps=new ZkCoreNodeProps(leaderReplica);
      String coreNodeName=zkController.getCoreNodeName(req.getCore().getCoreDescriptor());
      isLeader=coreNodeName.equals(leaderReplica.getName());
      DistribPhase phase=DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));
      doDefensiveChecks(phase);
      if (DistribPhase.FROMLEADER == phase) {
        forwardToLeader=false;
      }
 else       if (isLeader) {
        forwardToLeader=false;
        List<ZkCoreNodeProps> replicaProps=zkController.getZkStateReader().getReplicaProps(collection,shardId,coreNodeName,coreName,null,ZkStateReader.DOWN);
        if (replicaProps != null) {
          nodes=new ArrayList<Node>(replicaProps.size());
          String[] skipList=req.getParams().getParams("test.distrib.skip.servers");
          Set<String> skipListSet=null;
          if (skipList != null) {
            skipListSet=new HashSet<String>(skipList.length);
            skipListSet.addAll(Arrays.asList(skipList));
            log.info("test.distrib.skip.servers was found and contains:" + skipListSet);
          }
          for (          ZkCoreNodeProps props : replicaProps) {
            if (skipList != null) {
              boolean skip=skipListSet.contains(props.getCoreUrl());
              log.info("check url:" + props.getCoreUrl() + " against:"+ skipListSet+ " result:"+ skip);
              if (!skip) {
                nodes.add(new StdNode(props));
              }
            }
 else {
              nodes.add(new StdNode(props));
            }
          }
        }
      }
 else {
        nodes=new ArrayList<Node>(1);
        nodes.add(new RetryNode(leaderProps,zkController.getZkStateReader(),collection,shardId));
        forwardToLeader=true;
      }
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,"",e);
    }
  }
  return nodes;
}
