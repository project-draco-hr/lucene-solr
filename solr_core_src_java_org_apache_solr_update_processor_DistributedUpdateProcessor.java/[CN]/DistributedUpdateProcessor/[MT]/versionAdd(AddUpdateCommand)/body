{
  BytesRef idBytes=cmd.getIndexedId();
  if (vinfo == null || idBytes == null) {
    super.processAdd(cmd);
    return false;
  }
  int bucketHash=Hash.murmurhash3_x86_32(idBytes.bytes,idBytes.offset,idBytes.length,0);
  long versionOnUpdate=cmd.getVersion();
  if (versionOnUpdate == 0) {
    SolrInputField versionField=cmd.getSolrInputDocument().getField(VersionInfo.VERSION_FIELD);
    if (versionField != null) {
      Object o=versionField.getValue();
      versionOnUpdate=o instanceof Number ? ((Number)o).longValue() : Long.parseLong(o.toString());
    }
 else {
      String versionOnUpdateS=req.getParams().get(VERSION_FIELD);
      versionOnUpdate=versionOnUpdateS == null ? 0 : Long.parseLong(versionOnUpdateS);
    }
  }
  boolean isReplay=(cmd.getFlags() & UpdateCommand.REPLAY) != 0;
  boolean leaderLogic=isLeader && !isReplay;
  VersionBucket bucket=vinfo.bucket(bucketHash);
  vinfo.lockForUpdate();
  try {
synchronized (bucket) {
      if (versionsStored) {
        long bucketVersion=bucket.highest;
        if (leaderLogic) {
          long version=vinfo.getNewClock();
          cmd.setVersion(version);
          cmd.getSolrInputDocument().setField(VersionInfo.VERSION_FIELD,version);
          bucket.updateHighest(version);
        }
 else {
          cmd.setVersion(versionOnUpdate);
          if (ulog.getState() != UpdateLog.State.ACTIVE && (cmd.getFlags() & UpdateCommand.REPLAY) == 0) {
            cmd.setFlags(cmd.getFlags() | UpdateCommand.BUFFERING);
            ulog.add(cmd);
            return true;
          }
          if (bucketVersion != 0 && bucketVersion < versionOnUpdate) {
            bucket.updateHighest(versionOnUpdate);
          }
 else {
            Long lastVersion=vinfo.lookupVersion(cmd.getIndexedId());
            if (lastVersion != null && Math.abs(lastVersion) >= versionOnUpdate) {
              return true;
            }
          }
        }
      }
      doLocalAdd(cmd);
    }
  }
  finally {
    vinfo.unlockForUpdate();
  }
  return false;
}
