{
  updateCommand=cmd;
  if (!cmd.isDeleteById()) {
    doDeleteByQuery(cmd);
    return;
  }
  if (zkEnabled) {
    zkCheck();
    nodes=setupRequest(cmd.getId(),null);
  }
 else {
    isLeader=getNonZkLeaderAssumption(req);
  }
  boolean dropCmd=false;
  if (!forwardToLeader) {
    dropCmd=versionDelete(cmd);
  }
  if (dropCmd) {
    return;
  }
  if (zkEnabled && isLeader && !isSubShardLeader) {
    DocCollection coll=zkController.getClusterState().getCollection(collection);
    List<Node> subShardLeaders=getSubShardLeaders(coll,cloudDesc.getShardId(),null,null);
    if (subShardLeaders != null && !subShardLeaders.isEmpty()) {
      ModifiableSolrParams params=new ModifiableSolrParams(filterParams(req.getParams()));
      params.set(DISTRIB_UPDATE_PARAM,DistribPhase.FROMLEADER.toString());
      params.set("distrib.from",ZkCoreNodeProps.getCoreUrl(zkController.getBaseUrl(),req.getCore().getName()));
      params.set("distrib.from.parent",cloudDesc.getShardId());
      cmdDistrib.distribDelete(cmd,subShardLeaders,params,true);
    }
  }
  ModifiableSolrParams params=null;
  if (nodes != null) {
    params=new ModifiableSolrParams(filterParams(req.getParams()));
    params.set(DISTRIB_UPDATE_PARAM,(isLeader || isSubShardLeader ? DistribPhase.FROMLEADER.toString() : DistribPhase.TOLEADER.toString()));
    if (isLeader || isSubShardLeader) {
      params.set("distrib.from",ZkCoreNodeProps.getCoreUrl(zkController.getBaseUrl(),req.getCore().getName()));
    }
    cmdDistrib.distribDelete(cmd,nodes,params);
  }
  if (returnVersions && rsp != null && cmd.getIndexedId() != null && idField != null) {
    if (deleteResponse == null) {
      deleteResponse=new NamedList<String>();
      rsp.add("deletes",deleteResponse);
    }
    if (scratch == null)     scratch=new CharsRef();
    idField.getType().indexedToReadable(cmd.getIndexedId(),scratch);
    deleteResponse.add(scratch.toString(),cmd.getVersion());
  }
}
