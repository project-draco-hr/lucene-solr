{
  BytesRef idBytes=cmd.getIndexedId();
  if (vinfo == null || idBytes == null) {
    super.processDelete(cmd);
    return false;
  }
  int bucketHash=Hash.murmurhash3_x86_32(idBytes.bytes,idBytes.offset,idBytes.length,0);
  long versionOnUpdate=cmd.getVersion();
  if (versionOnUpdate == 0) {
    String versionOnUpdateS=req.getParams().get(VERSION_FIELD);
    versionOnUpdate=versionOnUpdateS == null ? 0 : Long.parseLong(versionOnUpdateS);
  }
  long signedVersionOnUpdate=versionOnUpdate;
  versionOnUpdate=Math.abs(versionOnUpdate);
  boolean isReplayOrPeersync=(cmd.getFlags() & (UpdateCommand.REPLAY | UpdateCommand.PEER_SYNC)) != 0;
  boolean leaderLogic=isLeader && !isReplayOrPeersync;
  boolean forwardedFromCollection=cmd.getReq().getParams().get(DISTRIB_FROM_COLLECTION) != null;
  if (!leaderLogic && versionOnUpdate == 0) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"missing _version_ on update from leader");
  }
  VersionBucket bucket=vinfo.bucket(bucketHash);
  vinfo.lockForUpdate();
  try {
synchronized (bucket) {
      if (versionsStored) {
        long bucketVersion=bucket.highest;
        if (leaderLogic) {
          if (forwardedFromCollection && ulog.getState() == UpdateLog.State.ACTIVE) {
            log.info("Removing version field from doc: " + cmd.getId());
            versionOnUpdate=signedVersionOnUpdate=0;
          }
          if (forwardedFromCollection && ulog.getState() != UpdateLog.State.ACTIVE && (cmd.getFlags() & UpdateCommand.REPLAY) == 0) {
            log.info("Leader logic applied but update log is buffering: " + cmd.getId());
            cmd.setFlags(cmd.getFlags() | UpdateCommand.BUFFERING);
            ulog.delete(cmd);
            return true;
          }
          if (signedVersionOnUpdate != 0) {
            Long lastVersion=vinfo.lookupVersion(cmd.getIndexedId());
            long foundVersion=lastVersion == null ? -1 : lastVersion;
            if ((signedVersionOnUpdate == foundVersion) || (signedVersionOnUpdate < 0 && foundVersion < 0) || (signedVersionOnUpdate == 1 && foundVersion > 0)) {
            }
 else {
              throw new SolrException(ErrorCode.CONFLICT,"version conflict for " + cmd.getId() + " expected="+ signedVersionOnUpdate+ " actual="+ foundVersion);
            }
          }
          long version=vinfo.getNewClock();
          cmd.setVersion(-version);
          bucket.updateHighest(version);
        }
 else {
          cmd.setVersion(-versionOnUpdate);
          if (ulog.getState() != UpdateLog.State.ACTIVE && (cmd.getFlags() & UpdateCommand.REPLAY) == 0) {
            cmd.setFlags(cmd.getFlags() | UpdateCommand.BUFFERING);
            ulog.delete(cmd);
            return true;
          }
          if (bucketVersion != 0 && bucketVersion < versionOnUpdate) {
            bucket.updateHighest(versionOnUpdate);
          }
 else {
            Long lastVersion=vinfo.lookupVersion(cmd.getIndexedId());
            if (lastVersion != null && Math.abs(lastVersion) >= versionOnUpdate) {
              log.debug("Dropping delete update due to version {}",idBytes.utf8ToString());
              return true;
            }
          }
        }
      }
      doLocalDelete(cmd);
      return false;
    }
  }
  finally {
    vinfo.unlockForUpdate();
  }
}
