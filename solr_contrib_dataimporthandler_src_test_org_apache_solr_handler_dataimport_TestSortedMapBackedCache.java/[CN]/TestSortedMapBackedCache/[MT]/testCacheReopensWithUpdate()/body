{
  DIHCache cache=null;
  try {
    Map<String,String> cacheProps=new HashMap<>();
    cacheProps.put(DIHCacheSupport.CACHE_PRIMARY_KEY,"a_id");
    cache=new SortedMapBackedCache();
    cache.open(getContext(cacheProps));
    loadData(cache,data,fieldNames,false);
    cache.close();
    List<ControlData> newControlData=new ArrayList<>();
    Object[] newIdEqualsThree=null;
    int j=0;
    for (int i=0; i < data.size(); i++) {
      if (data.get(i).data[0].equals(new Integer(1))) {
        continue;
      }
      if (data.get(i).data[0].equals(new Integer(3))) {
        newIdEqualsThree=new Object[data.get(i).data.length];
        System.arraycopy(data.get(i).data,0,newIdEqualsThree,0,newIdEqualsThree.length);
        newIdEqualsThree[3]="Carrot";
        newControlData.add(new ControlData(newIdEqualsThree));
      }
 else {
        newControlData.add(data.get(i));
      }
      j++;
    }
    Object[] newDataRow1=new Object[]{new Integer(99),new BigDecimal(Math.PI),"Z","Zebra",new Float(99.99),Feb21_2011,null};
    Object[] newDataRow2=new Object[]{new Integer(2),new BigDecimal(Math.PI),"B","Ballerina",new Float(2.22),Feb21_2011,null};
    newControlData.add(new ControlData(newDataRow1));
    newControlData.add(new ControlData(newDataRow2));
    cache.open(getContext(new HashMap<String,String>()));
    cache.delete(new Integer(1));
    cache.delete(new Integer(3));
    cache.add(controlDataToMap(new ControlData(newIdEqualsThree),fieldNames,false));
    cache.add(controlDataToMap(new ControlData(newDataRow1),fieldNames,false));
    cache.add(controlDataToMap(new ControlData(newDataRow2),fieldNames,false));
    List<ControlData> testData=extractDataInKeyOrder(cache,fieldNames);
    compareData(newControlData,testData);
    cache.close();
    cache.open(getContext(new HashMap<String,String>()));
    testData=extractDataInKeyOrder(cache,fieldNames);
    compareData(newControlData,testData);
  }
 catch (  Exception e) {
    log.warn("Exception thrown: " + e.toString());
    Assert.fail();
  }
 finally {
    try {
      cache.destroy();
    }
 catch (    Exception ex) {
    }
  }
}
