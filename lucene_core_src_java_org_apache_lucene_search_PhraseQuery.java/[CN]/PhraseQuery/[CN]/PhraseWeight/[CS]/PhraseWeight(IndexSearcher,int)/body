{
  super(PhraseQuery.this);
  this.postingsFlags=postingsFlags | PostingsEnum.FLAG_POSITIONS;
  this.needsScores=(postingsFlags & PostingsEnum.FLAG_FREQS) != 0;
  this.similarity=searcher.getSimilarity();
  final IndexReaderContext context=searcher.getTopReaderContext();
  states=new TermContext[terms.size()];
  TermStatistics termStats[]=new TermStatistics[terms.size()];
  for (int i=0; i < terms.size(); i++) {
    final Term term=terms.get(i);
    states[i]=TermContext.build(context,term);
    termStats[i]=searcher.termStatistics(term,states[i]);
  }
  stats=similarity.computeWeight(getBoost(),searcher.collectionStatistics(field),termStats);
}
