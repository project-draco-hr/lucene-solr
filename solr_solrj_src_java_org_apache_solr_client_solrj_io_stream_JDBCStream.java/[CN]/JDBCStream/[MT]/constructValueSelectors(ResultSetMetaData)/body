{
  ResultSetValueSelector[] valueSelectors=new ResultSetValueSelector[metadata.getColumnCount()];
  for (int columnIdx=0; columnIdx < metadata.getColumnCount(); ++columnIdx) {
    final int columnNumber=columnIdx + 1;
    final String columnName=metadata.getColumnName(columnNumber);
    String className=metadata.getColumnClassName(columnNumber);
    String typeName=metadata.getColumnTypeName(columnNumber);
    if (directSupportedTypes.contains(className)) {
      valueSelectors[columnIdx]=new ResultSetValueSelector(){
        public Object selectValue(        ResultSet resultSet) throws SQLException {
          Object obj=resultSet.getObject(columnNumber);
          if (resultSet.wasNull()) {
            return null;
          }
          return obj;
        }
        public String getColumnName(){
          return columnName;
        }
      }
;
    }
 else     if (Short.class.getName() == className) {
      valueSelectors[columnIdx]=new ResultSetValueSelector(){
        public Object selectValue(        ResultSet resultSet) throws SQLException {
          Short obj=resultSet.getShort(columnNumber);
          if (resultSet.wasNull()) {
            return null;
          }
          return obj.longValue();
        }
        public String getColumnName(){
          return columnName;
        }
      }
;
    }
 else     if (Integer.class.getName() == className) {
      valueSelectors[columnIdx]=new ResultSetValueSelector(){
        public Object selectValue(        ResultSet resultSet) throws SQLException {
          Integer obj=resultSet.getInt(columnNumber);
          if (resultSet.wasNull()) {
            return null;
          }
          return obj.longValue();
        }
        public String getColumnName(){
          return columnName;
        }
      }
;
    }
 else     if (Float.class.getName() == className) {
      valueSelectors[columnIdx]=new ResultSetValueSelector(){
        public Object selectValue(        ResultSet resultSet) throws SQLException {
          Float obj=resultSet.getFloat(columnNumber);
          if (resultSet.wasNull()) {
            return null;
          }
          return obj.doubleValue();
        }
        public String getColumnName(){
          return columnName;
        }
      }
;
    }
 else {
      throw new SQLException(String.format(Locale.ROOT,"Unable to determine the valueSelector for column '%s' (col #%d) of java class '%s' and type '%s'",columnName,columnNumber,className,typeName));
    }
  }
  return valueSelectors;
}
