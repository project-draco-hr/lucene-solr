{
  List<StreamExpressionNamedParameter> namedParams=factory.getNamedOperands(expression);
  StreamExpressionNamedParameter connectionUrlExpression=factory.getNamedOperand(expression,"connection");
  StreamExpressionNamedParameter sqlQueryExpression=factory.getNamedOperand(expression,"sql");
  StreamExpressionNamedParameter definedSortExpression=factory.getNamedOperand(expression,"sort");
  StreamExpressionNamedParameter driverClassNameExpression=factory.getNamedOperand(expression,"driver");
  if (expression.getParameters().size() != namedParams.size()) {
    throw new IOException(String.format(Locale.ROOT,"invalid expression %s - unknown operands found",expression));
  }
  Properties connectionProperties=new Properties();
  for (  StreamExpressionNamedParameter namedParam : namedParams) {
    if (!namedParam.getName().equals("driver") && !namedParam.getName().equals("connection") && !namedParam.getName().equals("sql")&& !namedParam.getName().equals("sort")) {
      connectionProperties.put(namedParam.getName(),namedParam.getParameter().toString().trim());
    }
  }
  String connectionUrl=null;
  if (null != connectionUrlExpression && connectionUrlExpression.getParameter() instanceof StreamExpressionValue) {
    connectionUrl=((StreamExpressionValue)connectionUrlExpression.getParameter()).getValue();
  }
  if (null == connectionUrl) {
    throw new IOException(String.format(Locale.ROOT,"invalid expression %s - connection not found"));
  }
  String sqlQuery=null;
  if (null != sqlQueryExpression && sqlQueryExpression.getParameter() instanceof StreamExpressionValue) {
    sqlQuery=((StreamExpressionValue)sqlQueryExpression.getParameter()).getValue();
  }
  if (null == sqlQuery) {
    throw new IOException(String.format(Locale.ROOT,"invalid expression %s - sql not found"));
  }
  StreamComparator definedSort=null;
  if (null != sqlQueryExpression && sqlQueryExpression.getParameter() instanceof StreamExpressionValue) {
    definedSort=factory.constructComparator(((StreamExpressionValue)definedSortExpression.getParameter()).getValue(),FieldComparator.class);
  }
  if (null == definedSort) {
    throw new IOException(String.format(Locale.ROOT,"invalid expression %s - sort not found"));
  }
  String driverClass=null;
  if (null != driverClassNameExpression && driverClassNameExpression.getParameter() instanceof StreamExpressionValue) {
    driverClass=((StreamExpressionValue)driverClassNameExpression.getParameter()).getValue();
  }
  init(connectionUrl,sqlQuery,definedSort,connectionProperties,driverClass);
}
