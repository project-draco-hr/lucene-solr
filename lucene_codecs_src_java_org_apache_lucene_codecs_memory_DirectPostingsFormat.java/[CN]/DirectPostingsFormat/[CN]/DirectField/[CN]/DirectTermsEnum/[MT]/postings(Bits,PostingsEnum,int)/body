{
  if (PostingsEnum.featureRequested(flags,PostingsEnum.POSITIONS)) {
    if (terms[termOrd] instanceof LowFreqTerm) {
      final LowFreqTerm term=((LowFreqTerm)terms[termOrd]);
      final int[] postings=term.postings;
      if (hasPos == false) {
        LowFreqDocsEnumNoPos docsEnum;
        if (reuse instanceof LowFreqDocsEnumNoPos) {
          docsEnum=(LowFreqDocsEnumNoPos)reuse;
          if (!docsEnum.canReuse(liveDocs)) {
            docsEnum=new LowFreqDocsEnumNoPos(liveDocs);
          }
        }
 else {
          docsEnum=new LowFreqDocsEnumNoPos(liveDocs);
        }
        return docsEnum.reset(postings);
      }
      final byte[] payloads=term.payloads;
      return new LowFreqPostingsEnum(liveDocs,hasOffsets,hasPayloads).reset(postings,payloads);
    }
 else {
      final HighFreqTerm term=(HighFreqTerm)terms[termOrd];
      return new HighFreqPostingsEnum(liveDocs,hasOffsets).reset(term.docIDs,term.freqs,term.positions,term.payloads);
    }
  }
  if (terms[termOrd] instanceof LowFreqTerm) {
    final int[] postings=((LowFreqTerm)terms[termOrd]).postings;
    if (hasFreq) {
      if (hasPos) {
        int posLen;
        if (hasOffsets) {
          posLen=3;
        }
 else {
          posLen=1;
        }
        if (hasPayloads) {
          posLen++;
        }
        LowFreqDocsEnum docsEnum;
        if (reuse instanceof LowFreqDocsEnum) {
          docsEnum=(LowFreqDocsEnum)reuse;
          if (!docsEnum.canReuse(liveDocs,posLen)) {
            docsEnum=new LowFreqDocsEnum(liveDocs,posLen);
          }
        }
 else {
          docsEnum=new LowFreqDocsEnum(liveDocs,posLen);
        }
        return docsEnum.reset(postings);
      }
 else {
        LowFreqDocsEnumNoPos docsEnum;
        if (reuse instanceof LowFreqDocsEnumNoPos) {
          docsEnum=(LowFreqDocsEnumNoPos)reuse;
          if (!docsEnum.canReuse(liveDocs)) {
            docsEnum=new LowFreqDocsEnumNoPos(liveDocs);
          }
        }
 else {
          docsEnum=new LowFreqDocsEnumNoPos(liveDocs);
        }
        return docsEnum.reset(postings);
      }
    }
 else {
      LowFreqDocsEnumNoTF docsEnum;
      if (reuse instanceof LowFreqDocsEnumNoTF) {
        docsEnum=(LowFreqDocsEnumNoTF)reuse;
        if (!docsEnum.canReuse(liveDocs)) {
          docsEnum=new LowFreqDocsEnumNoTF(liveDocs);
        }
      }
 else {
        docsEnum=new LowFreqDocsEnumNoTF(liveDocs);
      }
      return docsEnum.reset(postings);
    }
  }
 else {
    final HighFreqTerm term=(HighFreqTerm)terms[termOrd];
    HighFreqDocsEnum docsEnum;
    if (reuse instanceof HighFreqDocsEnum) {
      docsEnum=(HighFreqDocsEnum)reuse;
      if (!docsEnum.canReuse(liveDocs)) {
        docsEnum=new HighFreqDocsEnum(liveDocs);
      }
    }
 else {
      docsEnum=new HighFreqDocsEnum(liveDocs);
    }
    return docsEnum.reset(term.docIDs,term.freqs);
  }
}
