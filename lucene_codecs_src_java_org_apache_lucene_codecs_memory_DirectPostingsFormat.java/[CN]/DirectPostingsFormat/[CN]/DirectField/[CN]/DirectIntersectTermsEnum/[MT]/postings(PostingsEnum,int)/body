{
  if (hasPos && PostingsEnum.featureRequested(flags,PostingsEnum.POSITIONS)) {
    if (terms[termOrd] instanceof LowFreqTerm) {
      final LowFreqTerm term=((LowFreqTerm)terms[termOrd]);
      final int[] postings=term.postings;
      final byte[] payloads=term.payloads;
      return new LowFreqPostingsEnum(hasOffsets,hasPayloads).reset(postings,payloads);
    }
 else {
      final HighFreqTerm term=(HighFreqTerm)terms[termOrd];
      return new HighFreqPostingsEnum(hasOffsets).reset(term.docIDs,term.freqs,term.positions,term.payloads);
    }
  }
  if (terms[termOrd] instanceof LowFreqTerm) {
    final int[] postings=((LowFreqTerm)terms[termOrd]).postings;
    if (hasFreq) {
      if (hasPos) {
        int posLen;
        if (hasOffsets) {
          posLen=3;
        }
 else {
          posLen=1;
        }
        if (hasPayloads) {
          posLen++;
        }
        return new LowFreqDocsEnum(posLen).reset(postings);
      }
 else {
        return new LowFreqDocsEnumNoPos().reset(postings);
      }
    }
 else {
      return new LowFreqDocsEnumNoTF().reset(postings);
    }
  }
 else {
    final HighFreqTerm term=(HighFreqTerm)terms[termOrd];
    return new HighFreqDocsEnum().reset(term.docIDs,term.freqs);
  }
}
