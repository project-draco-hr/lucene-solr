{
  return new Spans(){
    private TermPositions positions=reader.termPositions(term);
    private int doc;
    private int freq;
    private int count;
    private int position;
    public boolean next() throws IOException {
      if (count == freq) {
        if (!positions.next())         return false;
        doc=positions.doc();
        freq=positions.freq();
        count=0;
      }
      position=positions.nextPosition();
      count++;
      return true;
    }
    public boolean skipTo(    int target) throws IOException {
      if (!positions.skipTo(target))       return false;
      doc=positions.doc();
      freq=positions.freq();
      count=0;
      position=positions.nextPosition();
      count++;
      return true;
    }
    public int doc(){
      return doc;
    }
    public int start(){
      return position;
    }
    public int end(){
      return position + 1;
    }
    public String toString(){
      return "spans(" + SpanTermQuery.this.toString() + ")";
    }
  }
;
}
