{
  long[][] minMax=new long[][]{{Long.MIN_VALUE,Long.MAX_VALUE},{Long.MIN_VALUE + 1,1},{-1,Long.MAX_VALUE},{Long.MIN_VALUE,-1},{1,Long.MAX_VALUE},{-1,Long.MAX_VALUE - 1},{Long.MIN_VALUE + 2,1}};
  ValueType[] expectedTypes=new ValueType[]{ValueType.FIXED_INTS_64,ValueType.FIXED_INTS_64,ValueType.FIXED_INTS_64,ValueType.FIXED_INTS_64,ValueType.VAR_INTS,ValueType.VAR_INTS,ValueType.VAR_INTS};
  for (int i=0; i < minMax.length; i++) {
    Directory dir=newDirectory();
    final Counter trackBytes=Counter.newCounter();
    Writer w=Ints.getWriter(dir,"test",trackBytes,ValueType.VAR_INTS,newIOContext(random));
    w.add(0,minMax[i][0]);
    w.add(1,minMax[i][1]);
    w.finish(2);
    assertEquals(0,trackBytes.get());
    IndexDocValues r=Ints.getValues(dir,"test",2,ValueType.VAR_INTS,newIOContext(random));
    Source source=getSource(r);
    assertEquals(i + " with min: " + minMax[i][0]+ " max: "+ minMax[i][1],expectedTypes[i],source.type());
    assertEquals(minMax[i][0],source.getInt(0));
    assertEquals(minMax[i][1],source.getInt(1));
    r.close();
    dir.close();
  }
}
