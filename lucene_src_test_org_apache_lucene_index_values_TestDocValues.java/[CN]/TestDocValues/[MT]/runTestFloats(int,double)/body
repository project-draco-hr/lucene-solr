{
  Directory dir=newDirectory();
  final AtomicLong trackBytes=new AtomicLong(0);
  Writer w=Floats.getWriter(dir,"test",precision,trackBytes,newIOContext(random));
  final int NUM_VALUES=777 + random.nextInt(777);
  ;
  final double[] values=new double[NUM_VALUES];
  for (int i=0; i < NUM_VALUES; i++) {
    final double v=precision == 4 ? random.nextFloat() : random.nextDouble();
    values[i]=v;
    w.add(i,v);
  }
  final int additionalValues=1 + random.nextInt(10);
  w.finish(NUM_VALUES + additionalValues);
  assertEquals(0,trackBytes.get());
  IndexDocValues r=Floats.getValues(dir,"test",NUM_VALUES + additionalValues,newIOContext(random));
  for (int iter=0; iter < 2; iter++) {
    Source s=getSource(r);
    for (int i=0; i < NUM_VALUES; i++) {
      assertEquals(values[i],s.getFloat(i),0.0f);
    }
  }
  for (int iter=0; iter < 2; iter++) {
    ValuesEnum fEnum=getEnum(r);
    FloatsRef floats=fEnum.getFloat();
    for (int i=0; i < NUM_VALUES + additionalValues; i++) {
      assertEquals(i,fEnum.nextDoc());
      if (i < NUM_VALUES) {
        assertEquals(values[i],floats.get(),delta);
      }
 else {
        assertEquals(0.0d,floats.get(),delta);
      }
    }
    assertEquals(ValuesEnum.NO_MORE_DOCS,fEnum.nextDoc());
    fEnum.close();
  }
  for (int iter=0; iter < 2; iter++) {
    ValuesEnum fEnum=getEnum(r);
    FloatsRef floats=fEnum.getFloat();
    for (int i=0; i < NUM_VALUES + additionalValues; i+=1 + random.nextInt(25)) {
      assertEquals(i,fEnum.advance(i));
      if (i < NUM_VALUES) {
        assertEquals(values[i],floats.get(),delta);
      }
 else {
        assertEquals(0.0d,floats.get(),delta);
      }
    }
    assertEquals(ValuesEnum.NO_MORE_DOCS,fEnum.advance(NUM_VALUES + additionalValues));
    fEnum.close();
  }
  r.close();
  dir.close();
}
