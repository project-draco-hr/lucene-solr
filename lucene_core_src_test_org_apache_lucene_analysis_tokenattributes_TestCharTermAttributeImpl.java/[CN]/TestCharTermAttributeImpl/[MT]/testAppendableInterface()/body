{
  CharTermAttributeImpl t=new CharTermAttributeImpl();
  Formatter formatter=new Formatter(t,Locale.US);
  formatter.format("%d",1234);
  assertEquals("1234",t.toString());
  formatter.format("%d",5678);
  assertEquals("12345678",t.toString());
  t.append('9');
  assertEquals("123456789",t.toString());
  t.append((CharSequence)"0");
  assertEquals("1234567890",t.toString());
  t.append((CharSequence)"0123456789",1,3);
  assertEquals("123456789012",t.toString());
  t.append((CharSequence)CharBuffer.wrap("0123456789".toCharArray()),3,5);
  assertEquals("12345678901234",t.toString());
  t.append((CharSequence)t);
  assertEquals("1234567890123412345678901234",t.toString());
  t.append((CharSequence)new StringBuilder("0123456789"),5,7);
  assertEquals("123456789012341234567890123456",t.toString());
  t.append((CharSequence)new StringBuffer(t));
  assertEquals("123456789012341234567890123456123456789012341234567890123456",t.toString());
  CharBuffer buf=CharBuffer.wrap("0123456789".toCharArray(),3,5);
  assertEquals("34567",buf.toString());
  t.setEmpty().append((CharSequence)buf,1,2);
  assertEquals("4",t.toString());
  CharTermAttribute t2=new CharTermAttributeImpl();
  t2.append("test");
  t.append((CharSequence)t2);
  assertEquals("4test",t.toString());
  t.append((CharSequence)t2,1,2);
  assertEquals("4teste",t.toString());
  try {
    t.append((CharSequence)t2,1,5);
    fail("Should throw IndexOutOfBoundsException");
  }
 catch (  IndexOutOfBoundsException iobe) {
  }
  try {
    t.append((CharSequence)t2,1,0);
    fail("Should throw IndexOutOfBoundsException");
  }
 catch (  IndexOutOfBoundsException iobe) {
  }
  t.append((CharSequence)null);
  assertEquals("4testenull",t.toString());
}
