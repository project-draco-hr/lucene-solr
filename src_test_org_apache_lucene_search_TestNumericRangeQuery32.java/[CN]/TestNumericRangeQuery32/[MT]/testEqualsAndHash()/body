{
  QueryUtils.checkHashEquals(NumericRangeQuery.newIntRange("test1",4,new Integer(10),new Integer(20),true,true));
  QueryUtils.checkHashEquals(NumericRangeQuery.newIntRange("test2",4,new Integer(10),new Integer(20),false,true));
  QueryUtils.checkHashEquals(NumericRangeQuery.newIntRange("test3",4,new Integer(10),new Integer(20),true,false));
  QueryUtils.checkHashEquals(NumericRangeQuery.newIntRange("test4",4,new Integer(10),new Integer(20),false,false));
  QueryUtils.checkHashEquals(NumericRangeQuery.newIntRange("test5",4,new Integer(10),null,true,true));
  QueryUtils.checkHashEquals(NumericRangeQuery.newIntRange("test6",4,null,new Integer(20),true,true));
  QueryUtils.checkHashEquals(NumericRangeQuery.newIntRange("test7",4,null,null,true,true));
  QueryUtils.checkEqual(NumericRangeQuery.newIntRange("test8",4,new Integer(10),new Integer(20),true,true),NumericRangeQuery.newIntRange("test8",4,new Integer(10),new Integer(20),true,true));
  QueryUtils.checkUnequal(NumericRangeQuery.newIntRange("test9",4,new Integer(10),new Integer(20),true,true),NumericRangeQuery.newIntRange("test9",8,new Integer(10),new Integer(20),true,true));
  QueryUtils.checkUnequal(NumericRangeQuery.newIntRange("test10a",4,new Integer(10),new Integer(20),true,true),NumericRangeQuery.newIntRange("test10b",4,new Integer(10),new Integer(20),true,true));
  QueryUtils.checkUnequal(NumericRangeQuery.newIntRange("test11",4,new Integer(10),new Integer(20),true,true),NumericRangeQuery.newIntRange("test11",4,new Integer(20),new Integer(10),true,true));
  QueryUtils.checkUnequal(NumericRangeQuery.newIntRange("test12",4,new Integer(10),new Integer(20),true,true),NumericRangeQuery.newIntRange("test12",4,new Integer(10),new Integer(20),false,true));
  QueryUtils.checkUnequal(NumericRangeQuery.newIntRange("test13",4,new Integer(10),new Integer(20),true,true),NumericRangeQuery.newFloatRange("test13",4,new Float(10f),new Float(20f),true,true));
  Query q1=NumericRangeQuery.newIntRange("test14",4,new Integer(10),new Integer(20),true,true);
  Query q2=NumericRangeQuery.newLongRange("test14",4,new Long(10L),new Long(20L),true,true);
  assertFalse(q1.equals(q2));
  assertFalse(q2.equals(q1));
}
