{
  final List<LeafReaderContext> leaves=reader.leaves();
  final Iterator<LeafReaderContext> ctxIt=leaves.iterator();
  int segBase=0;
  int segMax;
  int adjustedMax=0;
  LeafReaderContext ctx=null;
  LeafCollector leafCollector=null;
  for (DocIterator docsIt=docs.iterator(); docsIt.hasNext(); ) {
    final int doc=docsIt.nextDoc();
    if (doc >= adjustedMax) {
      do {
        ctx=ctxIt.next();
        segBase=ctx.docBase;
        segMax=ctx.reader().maxDoc();
        adjustedMax=segBase + segMax;
      }
 while (doc >= adjustedMax);
      leafCollector=collector.getLeafCollector(ctx);
    }
    if (doc < segBase) {
      throw new IllegalStateException("algorithm expects sorted DocSet but wasn't: " + docs.getClass());
    }
    leafCollector.collect(doc - segBase);
  }
}
