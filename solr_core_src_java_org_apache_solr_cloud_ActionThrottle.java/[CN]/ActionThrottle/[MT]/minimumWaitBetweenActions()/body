{
  if (lastActionStartedAt == 0) {
    return;
  }
  long diff=System.nanoTime() - lastActionStartedAt;
  int diffMs=(int)TimeUnit.MILLISECONDS.convert(diff,TimeUnit.NANOSECONDS);
  long minNsBetweenActions=TimeUnit.NANOSECONDS.convert(minMsBetweenActions,TimeUnit.MILLISECONDS);
  log.info("The last {} attempt started {}ms ago.",name,diffMs);
  int sleep=0;
  if (diffMs > 0 && diff < minNsBetweenActions) {
    sleep=(int)TimeUnit.MILLISECONDS.convert(minNsBetweenActions - diff,TimeUnit.NANOSECONDS);
  }
 else   if (diffMs == 0) {
    sleep=(int)minMsBetweenActions;
  }
  if (sleep > 0) {
    log.info("Throttling {} attempts - waiting for {}ms",name,sleep);
    try {
      Thread.sleep(sleep);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
  }
}
