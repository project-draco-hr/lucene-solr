{
  final double aX2X1d=aX2 - aX1;
  final double aY2Y1d=aY2 - aY1;
  final double bX2X1d=bX2 - bX1;
  final double bY2Y1d=bY2 - bY1;
  final double t1B=aX2X1d * (bY2 - aY1) - aY2Y1d * (bX2 - aX1);
  final double test1=(aX2X1d * (bY1 - aY1) - aY2Y1d * (bX1 - aX1)) * t1B;
  final double t2B=bX2X1d * (aY2 - bY1) - bY2Y1d * (aX2 - bX1);
  final double test2=(bX2X1d * (aY1 - bY1) - bY2Y1d * (aX1 - bX1)) * t2B;
  if (test1 < 0 && test2 < 0) {
    return true;
  }
  if (test1 == 0 || test2 == 0) {
    if (aX1 == aX2 || bX1 == bX2) {
      final double minAy=Math.min(aY1,aY2);
      final double maxAy=Math.max(aY1,aY2);
      final double minBy=Math.min(bY1,bY2);
      final double maxBy=Math.max(bY1,bY2);
      return !(minBy > maxAy || maxBy < minAy) || !(minAy > maxBy || maxAy < minBy);
    }
    final double minAx=Math.min(aX1,aX2);
    final double maxAx=Math.max(aX1,aY2);
    final double minBx=Math.min(bX1,bX2);
    final double maxBx=Math.max(bX1,bX2);
    return !(minBx >= maxAx || maxBx <= minAx) || !(minAx >= maxBx || maxAx <= minBx);
  }
  return false;
}
