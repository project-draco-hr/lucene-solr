{
  if (approx == true) {
    return rectAnyCornersOutsideCircleSloppy(rMinX,rMinY,rMaxX,rMaxY,centerLon,centerLat,radiusMeters);
  }
  double w=Math.abs(rMaxX - rMinX);
  if (w <= 90.0) {
    return GeoDistanceUtils.haversin(centerLat,centerLon,rMinY,rMinX) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMaxY,rMinX) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMaxY,rMaxX) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMinY,rMaxX) > radiusMeters;
  }
  w/=4;
  final double p1=rMinX + w;
  final double p2=p1 + w;
  final double p3=p2 + w;
  return GeoDistanceUtils.haversin(centerLat,centerLon,rMinY,rMinX) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMaxY,rMinX) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMaxY,p1) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMinY,p1) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMinY,p2) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMaxY,p2) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMaxY,p3) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMinY,p3) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMaxY,rMaxX) > radiusMeters || GeoDistanceUtils.haversin(centerLat,centerLon,rMinY,rMaxX) > radiusMeters;
}
