{
  this.rb=rb;
  this.searcher=rb.req.getSearcher();
  this.originalParam=statsParam;
  SolrParams params=rb.req.getParams();
  try {
    SolrParams localParams=QueryParsing.getLocalParams(statsParam,params);
    if (null == localParams) {
      localParams=new ModifiableSolrParams();
    }
    this.localParams=localParams;
  }
 catch (  SyntaxError e) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Unable to parse " + StatsParams.STATS_FIELD + ": "+ originalParam+ " due to: "+ e.getMessage(),e);
  }
  this.fieldName=localParams.get(CommonParams.VALUE,statsParam);
  this.key=localParams.get(CommonParams.OUTPUT_KEY,fieldName);
  calcDistinct=params.getFieldBool(fieldName,StatsParams.STATS_CALC_DISTINCT,false);
  String[] facets=params.getFieldParams(key,StatsParams.STATS_FACET);
  this.facets=(null == facets) ? new String[0] : facets;
  String excludeStr=localParams.get(CommonParams.EXCLUDE);
  this.excludeTagList=(null == excludeStr) ? Collections.<String>emptyList() : StrUtils.splitSmart(excludeStr,',');
  this.sf=searcher.getSchema().getField(fieldName);
}
