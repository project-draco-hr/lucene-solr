{
  localParams=QueryParsing.getLocalParams(param,req.getParams());
  base=docs;
  statsField=param;
  key=param;
  if (localParams == null)   return;
  statsField=localParams.get(CommonParams.VALUE);
  key=statsField;
  key=localParams.get(CommonParams.OUTPUT_KEY,key);
  String excludeStr=localParams.get(CommonParams.EXCLUDE);
  if (excludeStr == null)   return;
  Map<?,?> tagMap=(Map<?,?>)req.getContext().get("tags");
  if (tagMap != null && rb != null) {
    List<String> excludeTagList=StrUtils.splitSmart(excludeStr,',');
    IdentityHashMap<Query,Boolean> excludeSet=new IdentityHashMap<Query,Boolean>();
    for (    String excludeTag : excludeTagList) {
      Object olst=tagMap.get(excludeTag);
      if (!(olst instanceof Collection))       continue;
      for (      Object o : (Collection<?>)olst) {
        if (!(o instanceof QParser))         continue;
        QParser qp=(QParser)o;
        excludeSet.put(qp.getQuery(),Boolean.TRUE);
      }
    }
    if (excludeSet.size() == 0)     return;
    List<Query> qlist=new ArrayList<Query>();
    if (!excludeSet.containsKey(rb.getQuery())) {
      qlist.add(rb.getQuery());
    }
    if (rb.getFilters() != null) {
      for (      Query q : rb.getFilters()) {
        if (!excludeSet.containsKey(q)) {
          qlist.add(q);
        }
      }
    }
    this.base=searcher.getDocSet(qlist);
  }
}
