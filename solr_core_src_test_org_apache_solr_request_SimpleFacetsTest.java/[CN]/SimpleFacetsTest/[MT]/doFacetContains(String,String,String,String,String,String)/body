{
  String indent="on";
  String pre="//lst[@name='" + f + "']";
  assertQ("test facet.contains",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.field",f,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.contains",contains),"*[count(//lst[@name='facet_fields']/lst/int)=3]",pre + "/int[1][@name='BBB" + termSuffix+ "'][.='3']",pre + "/int[2][@name='BB" + termSuffix+ "'][.='2']",pre + "/int[3][@name='B" + termSuffix+ "'][.='1']");
  assertQ("test facet.contains for grouped facets",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.field",f,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.contains",groupContains,"group","true","group.field",g,"group.facet","true"),"*[count(//lst[@name='facet_fields']/lst/int)=6]",pre + "/int[1][@name='CCC" + termSuffix+ "'][.='3']",pre + "/int[2][@name='BBB" + termSuffix+ "'][.='2']",pre + "/int[3][@name='AAA" + termSuffix+ "'][.='1']",pre + "/int[4][@name='B" + termSuffix+ "'][.='1']",pre + "/int[5][@name='BB" + termSuffix+ "'][.='1']",pre + "/int[6][@name='CC" + termSuffix+ "'][.='1']");
}
