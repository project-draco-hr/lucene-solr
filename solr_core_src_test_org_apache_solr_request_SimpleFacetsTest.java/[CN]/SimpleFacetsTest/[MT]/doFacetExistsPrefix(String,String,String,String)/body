{
  String indent="on";
  String pre="//lst[@name='" + f + "']";
  String lf=local == null ? f : local + f;
  assertQ("test field facet.method",req(params,"q","id:[* TO *]","indent",indent,"facet","true","f." + lf + ".facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.prefix","B"),"*[count(//lst[@name='facet_fields']/lst/int)=3]",pre + "/int[1][@name='B" + termSuffix+ "'][.='1']",pre + "/int[2][@name='BB" + termSuffix+ "'][.='1']",pre + "/int[3][@name='BBB" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix middle, exact match first term",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.prefix","B"),"*[count(//lst[@name='facet_fields']/lst/int)=3]",pre + "/int[1][@name='B" + termSuffix+ "'][.='1']",pre + "/int[2][@name='BB" + termSuffix+ "'][.='1']",pre + "/int[3][@name='BBB" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix middle, exact match first term, unsorted",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","index","facet.prefix","B"),"*[count(//lst[@name='facet_fields']/lst/int)=3]",pre + "/int[1][@name='B" + termSuffix+ "'][.='1']",pre + "/int[2][@name='BB" + termSuffix+ "'][.='1']",pre + "/int[3][@name='BBB" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix middle, paging",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","1","facet.limit","100","facet.sort","count","facet.prefix","B"),"*[count(//lst[@name='facet_fields']/lst/int)=2]",pre + "/int[1][@name='BB" + termSuffix+ "'][.='1']",pre + "/int[2][@name='BBB" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix middle, paging",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","1","facet.limit","1","facet.sort","count","facet.prefix","B"),"*[count(//lst[@name='facet_fields']/lst/int)=1]",pre + "/int[1][@name='BB" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix end, not exact match",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.prefix","C"),"*[count(//lst[@name='facet_fields']/lst/int)=2]",pre + "/int[1][@name='CC" + termSuffix+ "'][.='1']",pre + "/int[2][@name='CCC" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix end, exact match",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.prefix","CC"),"*[count(//lst[@name='facet_fields']/lst/int)=2]",pre + "/int[1][@name='CC" + termSuffix+ "'][.='1']",pre + "/int[2][@name='CCC" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix past end",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.prefix","X"),"*[count(//lst[@name='facet_fields']/lst/int)=0]");
  assertQ("test facet.prefix past end",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","1","facet.limit","-1","facet.sort","count","facet.prefix","X"),"*[count(//lst[@name='facet_fields']/lst/int)=0]");
  assertQ("test facet.prefix at start, exact match",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.prefix","AAA"),"*[count(//lst[@name='facet_fields']/lst/int)=1]",pre + "/int[1][@name='AAA" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix at Start, not exact match",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.prefix","AA"),"*[count(//lst[@name='facet_fields']/lst/int)=1]",pre + "/int[1][@name='AAA" + termSuffix+ "'][.='1']");
  assertQ("test facet.prefix before start",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","0","facet.limit","100","facet.sort","count","facet.prefix","999"),"*[count(//lst[@name='facet_fields']/lst/int)=0]");
  assertQ("test facet.prefix before start",req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","0","facet.offset","2","facet.limit","100","facet.sort","count","facet.prefix","999"),"*[count(//lst[@name='facet_fields']/lst/int)=0]");
  assertQ(req(params,"q","id:[* TO *]","indent",indent,"facet","true","facet.exists","true","facet.field",lf,"facet.mincount","1","facet.offset","5","facet.limit","10","facet.sort","count","facet.prefix","CC"),"*[count(//lst[@name='facet_fields']/lst/int)=0]");
}
