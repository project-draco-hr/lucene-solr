{
  final String p="facet.range";
  final String b="facet_ranges";
  final String f=fieldName;
  final String c="/lst[@name='counts']";
  final String pre="//lst[@name='" + b + "']/lst[@name='"+ f+ "']"+ c;
  final String meta=pre + "/../";
  final String jul4="[.='1'  ]";
  assertQ("check counts for month of facet by day",req("q","*:*","rows","0","facet","true",p,f,p + ".start","1976-07-01T00:00:00.000Z",p + ".end","1976-07-01T00:00:00.000Z+1MONTH",p + ".gap","+1DAY",p + ".other","all",p + ".method",rangeFacetMethod.toString()),"*[count(" + pre + "/int)=31]",pre + "/int[@name='1976-07-01T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-02T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-03T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-04T00:00:00Z']" + jul4,pre + "/int[@name='1976-07-05T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-06T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-07T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-08T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-09T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-10T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-11T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-12T00:00:00Z'][.='1'  ]",pre + "/int[@name='1976-07-13T00:00:00Z'][.='1'  ]",pre + "/int[@name='1976-07-14T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-15T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-16T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-17T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-18T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-19T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-21T00:00:00Z'][.='1'  ]",pre + "/int[@name='1976-07-22T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-23T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-24T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-25T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-26T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-27T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-28T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-29T00:00:00Z'][.='0']",pre + "/int[@name='1976-07-30T00:00:00Z'][.='1'  ]",pre + "/int[@name='1976-07-31T00:00:00Z'][.='0']",meta + "/int[@name='before' ][.='2']",meta + "/int[@name='after'  ][.='1']",meta + "/int[@name='between'][.='11']");
  assertQ("check counts for month of facet by day with global mincount = 1",req("q","*:*","rows","0","facet","true",p,f,p + ".start","1976-07-01T00:00:00.000Z",p + ".end","1976-07-01T00:00:00.000Z+1MONTH",p + ".gap","+1DAY",p + ".other","all","facet.mincount","1"),"*[count(" + pre + "/int)=8]",pre + "/int[@name='1976-07-03T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-04T00:00:00Z']" + jul4,pre + "/int[@name='1976-07-05T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-12T00:00:00Z'][.='1'  ]",pre + "/int[@name='1976-07-13T00:00:00Z'][.='1'  ]",pre + "/int[@name='1976-07-15T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-21T00:00:00Z'][.='1'  ]",pre + "/int[@name='1976-07-30T00:00:00Z'][.='1'  ]",meta + "/int[@name='before' ][.='2']",meta + "/int[@name='after'  ][.='1']",meta + "/int[@name='between'][.='11']");
  assertQ("check counts for month of facet by day with field mincount = 1",req("q","*:*","rows","0","facet","true",p,f,p + ".start","1976-07-01T00:00:00.000Z",p + ".end","1976-07-01T00:00:00.000Z+1MONTH",p + ".gap","+1DAY",p + ".other","all","f." + f + ".facet.mincount","2"),"*[count(" + pre + "/int)=3]",pre + "/int[@name='1976-07-03T00:00:00Z'][.='2'  ]",pre,pre + "/int[@name='1976-07-05T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-15T00:00:00Z'][.='2'  ]",meta + "/int[@name='before' ][.='2']",meta + "/int[@name='after'  ][.='1']",meta + "/int[@name='between'][.='11']");
  assertQ("check before is not inclusive of upper bound by default",req("q","*:*","rows","0","facet","true",p,f,p + ".start","1976-07-05T00:00:00.000Z",p + ".end","1976-07-07T00:00:00.000Z",p + ".gap","+1DAY",p + ".other","all"),"*[count(" + pre + "/int)=2]",pre + "/int[@name='1976-07-05T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-06T00:00:00Z'][.='0']",meta + "/int[@name='before' ][.='5']");
  assertQ("check after is not inclusive of lower bound by default (for dates)",req("q","*:*","rows","0","facet","true",p,f,p + ".start","1976-07-03T00:00:00.000Z",p + ".end","1976-07-05T00:00:00.000Z",p + ".gap","+1DAY",p + ".other","all"),"*[count(" + pre + "/int)=2]",pre + "/int[@name='1976-07-03T00:00:00Z'][.='2'  ]",pre + "/int[@name='1976-07-04T00:00:00Z']" + jul4,meta + "/int[@name='after' ][.='9']");
  assertQ("check hardend=false",req("q","*:*","rows","0","facet","true",p,f,p + ".start","1976-07-01T00:00:00.000Z",p + ".end","1976-07-13T00:00:00.000Z",p + ".gap","+5DAYS",p + ".other","all",p + ".hardend","false"),"*[count(" + pre + "/int)=3]",pre + "/int[@name='1976-07-01T00:00:00Z'][.='5'  ]",pre + "/int[@name='1976-07-06T00:00:00Z'][.='0'  ]",pre + "/int[@name='1976-07-11T00:00:00Z'][.='4'  ]",meta + "/int[@name='before' ][.='2']",meta + "/int[@name='after'  ][.='3']",meta + "/int[@name='between'][.='9']");
  assertQ("check hardend=true",req("q","*:*","rows","0","facet","true",p,f,p + ".start","1976-07-01T00:00:00.000Z",p + ".end","1976-07-13T00:00:00.000Z",p + ".gap","+5DAYS",p + ".other","all",p + ".hardend","true"),"*[count(" + pre + "/int)=3]",pre + "/int[@name='1976-07-01T00:00:00Z'][.='5'  ]",pre + "/int[@name='1976-07-06T00:00:00Z'][.='0'  ]",pre + "/int[@name='1976-07-11T00:00:00Z'][.='1'  ]",meta + "/int[@name='before' ][.='2']",meta + "/int[@name='after'  ][.='6']",meta + "/int[@name='between'][.='6']");
  assertQ("check BC era",req("q","*:*","rows","0","facet","true",p,f,p + ".start","-0200-01-01T00:00:00Z",p + ".end","+0200-01-01T00:00:00Z",p + ".gap","+100YEARS",p + ".other","all"),pre + "/int[@name='-0200-01-01T00:00:00Z'][.='0']",pre + "/int[@name='-0100-01-01T00:00:00Z'][.='0']",pre + "/int[@name='0000-01-01T00:00:00Z'][.='0']",pre + "/int[@name='0100-01-01T00:00:00Z'][.='0']",meta + "/int[@name='before' ][.='0']",meta + "/int[@name='after'  ][.='14']",meta + "/int[@name='between'][.='0']");
}
