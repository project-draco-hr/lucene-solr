{
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.BEFORE.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='before'][.='1']","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='after'])=0]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='between'])=0]");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.AFTER.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='after'][.='3']","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='between'])=0]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='before'])=0]");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.BETWEEN.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='after'])=0]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='before'])=0]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='between'][.='2']");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.NONE.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='after'])=0]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='before'])=0]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='between'])=0]");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.BEFORE.toString(),"facet.range.other",FacetRangeOther.AFTER.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='between'])=0]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='after'][.='3']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='before'][.='1']");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.BEFORE.toString(),"facet.range.other",FacetRangeOther.AFTER.toString(),"facet.range.other",FacetRangeOther.NONE.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='between'])=0]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='after'])=0]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='before'])=0]");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.ALL.toString(),"facet.range.include",FacetRangeInclude.LOWER.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='between'][.='2']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='after'][.='3']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='before'][.='1']");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.ALL.toString(),"facet.range.include",FacetRangeInclude.UPPER.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='between'][.='2']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='after'][.='2']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='before'][.='2']");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.ALL.toString(),"facet.range.include",FacetRangeInclude.EDGE.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='between'][.='3']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='after'][.='2']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='before'][.='1']");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.ALL.toString(),"facet.range.include",FacetRangeInclude.OUTER.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=2]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='between'][.='1']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='after'][.='3']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='before'][.='2']");
  assertQ("Test facet.range.other",req("q","id:[12345 TO 12345]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","1","facet.range.other",FacetRangeOther.ALL.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='between'][.='0']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='after'][.='0']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='before'][.='0']");
  assertQ("Test facet.range.other",req("q","id:[42 TO 47]","facet","true","fl","id," + field,"facet.range",field,"facet.range.method",method.toString(),"facet.range.start","43","facet.range.end","45","facet.range.gap","10","facet.range.other",FacetRangeOther.ALL.toString()),"*[count(//lst[@name='facet_ranges']/lst)=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts'])=1]","*[count(//lst[@name='facet_ranges']/lst[@name='" + field + "']/lst[@name='counts']/int)=1]","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='between'][.='5']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='after'][.='0']","//lst[@name='facet_ranges']/lst[@name='" + field + "']/int[@name='before'][.='1']");
}
