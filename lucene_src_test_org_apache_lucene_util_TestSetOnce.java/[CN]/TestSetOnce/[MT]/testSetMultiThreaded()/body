{
  long seed=RAND.nextLong();
  RAND.setSeed(seed);
  if (VERBOSE) {
    System.out.println("testSetMultiThreaded: seed=" + seed);
  }
  final SetOnce<Integer> set=new SetOnce<Integer>();
  SetOnceThread[] threads=new SetOnceThread[10];
  for (int i=0; i < threads.length; i++) {
    threads[i]=new SetOnceThread();
    threads[i].setName("t-" + (i + 1));
    threads[i].set=set;
  }
  for (  Thread t : threads) {
    t.start();
  }
  for (  Thread t : threads) {
    t.join();
  }
  for (  SetOnceThread t : threads) {
    if (t.success) {
      int expectedVal=Integer.parseInt(t.getName().substring(2));
      assertEquals("thread " + t.getName(),expectedVal,t.set.get().intValue());
    }
  }
}
