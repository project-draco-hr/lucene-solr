{
  Analyzer a=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE,false));
    }
    @Override protected Reader initReader(    String fieldName,    Reader reader){
      return new ICUNormalizer2CharFilter(reader,Normalizer2.getInstance(null,"nfkc_cf",Normalizer2.Mode.COMPOSE));
    }
  }
;
  checkRandomData(random(),a,1000 * RANDOM_MULTIPLIER);
  checkRandomData(random(),a,25 * RANDOM_MULTIPLIER,8192);
  a=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName){
      return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE,false));
    }
    @Override protected Reader initReader(    String fieldName,    Reader reader){
      return new ICUNormalizer2CharFilter(reader,Normalizer2.getInstance(null,"nfkc",Normalizer2.Mode.DECOMPOSE));
    }
  }
;
  checkRandomData(random(),a,1000 * RANDOM_MULTIPLIER);
  checkRandomData(random(),a,25 * RANDOM_MULTIPLIER,8192);
}
