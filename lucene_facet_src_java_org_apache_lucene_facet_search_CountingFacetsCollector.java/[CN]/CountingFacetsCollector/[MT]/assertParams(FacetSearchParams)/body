{
  for (  FacetRequest fr : fsp.facetRequests) {
    if (!(fr instanceof CountFacetRequest)) {
      return "all FacetRequests must be CountFacetRequest";
    }
    if (fr.getDepth() != 1) {
      return "all requests must be of depth 1";
    }
    if (fr.getNumLabel() < fr.getNumResults()) {
      return "this Collector always labels all requested results";
    }
    if (fr.getSortOrder() != SortOrder.DESCENDING) {
      return "this Collector always sorts results in descending order";
    }
    if (fr.getSortBy() != SortBy.VALUE) {
      return "this Collector always sorts by results' values";
    }
  }
  CategoryListParams clp=null;
  for (  FacetRequest fr : fsp.facetRequests) {
    CategoryListParams cpclp=fsp.indexingParams.getCategoryListParams(fr.categoryPath);
    if (clp == null) {
      clp=cpclp;
    }
 else     if (clp != cpclp) {
      return "all FacetRequests must belong to the same CategoryListParams";
    }
  }
  if (clp == null) {
    return "at least one FacetRequest must be defined";
  }
  if (clp.createEncoder().createMatchingDecoder().getClass() != DGapVInt8IntDecoder.class) {
    return "this Collector supports only DGap + VInt encoding";
  }
  if (fsp.indexingParams.getPartitionSize() != Integer.MAX_VALUE) {
    return "this Collector does not support partitions";
  }
  return null;
}
