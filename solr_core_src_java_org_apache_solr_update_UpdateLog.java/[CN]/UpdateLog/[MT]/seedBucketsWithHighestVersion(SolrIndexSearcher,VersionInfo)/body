{
  Long highestVersion=null;
  long startMs=System.currentTimeMillis();
  RecentUpdates recentUpdates=null;
  try {
    recentUpdates=getRecentUpdates();
    long maxVersionFromRecent=recentUpdates.getMaxRecentVersion();
    long maxVersionFromIndex=versions.getMaxVersionFromIndex(newSearcher);
    long maxVersion=Math.max(maxVersionFromIndex,maxVersionFromRecent);
    if (maxVersion == 0L) {
      maxVersion=versions.getNewClock();
      log.warn("Could not find max version in index or recent updates, using new clock {}",maxVersion);
    }
    versions.seedBucketsWithHighestVersion(maxVersion);
    highestVersion=maxVersion;
  }
 catch (  IOException ioExc) {
    log.warn("Failed to determine the max value of the version field due to: " + ioExc,ioExc);
  }
 finally {
    if (recentUpdates != null)     recentUpdates.close();
  }
  long tookMs=(System.currentTimeMillis() - startMs);
  log.info("Took {} ms to seed version buckets with highest version {}",tookMs,String.valueOf(highestVersion));
  return highestVersion;
}
