{
  if (dataDir == null || dataDir.length() == 0) {
    dataDir=core.getDataDir();
  }
  this.uhandler=uhandler;
  if (dataDir.equals(lastDataDir)) {
    if (debug) {
      log.debug("UpdateHandler init: tlogDir=" + tlogDir + ", next id="+ id," this is a reopen... nothing else to do.");
    }
    return;
  }
  lastDataDir=dataDir;
  tlogDir=new File(dataDir,TLOG_NAME);
  tlogDir.mkdirs();
  tlogFiles=getLogList(tlogDir);
  id=getLastLogId() + 1;
  if (debug) {
    log.debug("UpdateHandler init: tlogDir=" + tlogDir + ", existing tlogs="+ Arrays.asList(tlogFiles)+ ", next id="+ id);
  }
  TransactionLog oldLog=null;
  for (  String oldLogName : tlogFiles) {
    File f=new File(tlogDir,oldLogName);
    try {
      oldLog=new TransactionLog(f,null,true);
      addOldLog(oldLog,false);
    }
 catch (    Exception e) {
      SolrException.log(log,"Failure to open existing log file (non fatal) " + f,e);
      f.delete();
    }
  }
  for (  TransactionLog ll : logs) {
    newestLogsOnStartup.addFirst(ll);
    if (newestLogsOnStartup.size() >= 2)     break;
  }
  versionInfo=new VersionInfo(uhandler,256);
  UpdateLog.RecentUpdates startingUpdates=getRecentUpdates();
  try {
    startingVersions=startingUpdates.getVersions(numRecordsToKeep);
    startingOperation=startingUpdates.getLatestOperation();
    for (int i=startingUpdates.deleteList.size() - 1; i >= 0; i--) {
      DeleteUpdate du=startingUpdates.deleteList.get(i);
      oldDeletes.put(new BytesRef(du.id),new LogPtr(-1,du.version));
    }
  }
  finally {
    startingUpdates.close();
  }
}
