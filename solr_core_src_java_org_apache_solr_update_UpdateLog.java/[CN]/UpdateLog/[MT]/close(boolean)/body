{
synchronized (this) {
    try {
      recoveryExecutor.shutdownNow();
    }
 catch (    Exception e) {
      SolrException.log(log,e);
    }
    if (prevTlog != null) {
      prevTlog.deleteOnClose=false;
      prevTlog.decref();
      prevTlog.forceClose();
    }
    if (tlog != null) {
      if (committed) {
        log.info("Recording current log as closed for " + uhandler.core);
        CommitUpdateCommand cmd=new CommitUpdateCommand(new LocalSolrQueryRequest(uhandler.core,new ModifiableSolrParams((SolrParams)null)),false);
        tlog.writeCommit(cmd);
      }
      tlog.deleteOnClose=false;
      tlog.decref();
      tlog.forceClose();
    }
    for (    TransactionLog log : logs) {
      log.deleteOnClose=false;
      log.decref();
      log.forceClose();
    }
  }
}
