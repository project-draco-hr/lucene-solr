{
  this.rctx=rctx;
  this.docs=rctx.getDocList();
  transformer=rctx.getReturnFields().getTransformer();
  docIterator=this.docs.iterator();
  fnames=rctx.getReturnFields().getLuceneFieldNames();
  onlyPseudoFields=(fnames == null && !rctx.getReturnFields().wantsAllFields() && !rctx.getReturnFields().hasPatternMatching()) || (fnames != null && fnames.size() == 1 && SolrReturnFields.SCORE.equals(fnames.iterator().next()));
  if (rctx.getReturnFields().wantsAllFields()) {
    Set<String> fieldNames=rctx.getReturnFields().getLuceneFieldNames(true);
    if (fieldNames == null) {
      dvFieldsToReturn=rctx.getSearcher().getNonStoredDVs(true);
    }
 else {
      dvFieldsToReturn=new HashSet<>(rctx.getSearcher().getNonStoredDVs(true));
      for (      String fl : fieldNames) {
        if (rctx.getSearcher().getNonStoredDVs(false).contains(fl)) {
          dvFieldsToReturn.add(fl);
        }
      }
    }
  }
 else {
    if (rctx.getReturnFields().hasPatternMatching()) {
      for (      String s : rctx.getSearcher().getNonStoredDVs(true)) {
        if (rctx.getReturnFields().wantsField(s)) {
          if (null == dvFieldsToReturn) {
            dvFieldsToReturn=new HashSet<>();
          }
          dvFieldsToReturn.add(s);
        }
      }
    }
 else     if (fnames != null) {
      dvFieldsToReturn=new HashSet<>(fnames);
      dvFieldsToReturn.retainAll(rctx.getSearcher().getNonStoredDVs(false));
    }
  }
  if (transformer != null)   transformer.setContext(rctx);
}
