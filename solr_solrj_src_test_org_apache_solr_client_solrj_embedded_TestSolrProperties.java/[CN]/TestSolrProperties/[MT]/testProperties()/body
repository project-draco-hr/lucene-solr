{
  UpdateRequest up=new UpdateRequest();
  up.setAction(ACTION.COMMIT,true,true);
  up.deleteByQuery("*:*");
  up.process(getSolrCore0());
  up.process(getSolrCore1());
  up.clear();
  SolrInputDocument doc=new SolrInputDocument();
  doc.setField("id","AAA");
  doc.setField("core0","yup stopfra stopfrb stopena stopenb");
  up.add(doc);
  up.process(getSolrCore0());
  SolrTestCaseJ4.ignoreException("unknown field");
  try {
    up.process(getSolrCore1());
    fail("Can't add core0 field to core1!");
  }
 catch (  Exception ex) {
  }
  doc.setField("id","BBB");
  doc.setField("core1","yup stopfra stopfrb stopena stopenb");
  doc.removeField("core0");
  up.add(doc);
  up.process(getSolrCore1());
  try {
    SolrTestCaseJ4.ignoreException("core0");
    up.process(getSolrCore0());
    fail("Can't add core1 field to core0!");
  }
 catch (  Exception ex) {
  }
  SolrTestCaseJ4.resetExceptionIgnores();
  SolrQuery q=new SolrQuery();
  QueryRequest r=new QueryRequest(q);
  q.setQuery("id:AAA");
  assertEquals(1,r.process(getSolrCore0()).getResults().size());
  assertEquals(0,r.process(getSolrCore1()).getResults().size());
  assertEquals(1,getSolrCore0().query(new SolrQuery("id:AAA")).getResults().size());
  assertEquals(0,getSolrCore0().query(new SolrQuery("id:BBB")).getResults().size());
  assertEquals(0,getSolrCore1().query(new SolrQuery("id:AAA")).getResults().size());
  assertEquals(1,getSolrCore1().query(new SolrQuery("id:BBB")).getResults().size());
  String name="core0";
  SolrServer coreadmin=getSolrAdmin();
  CoreAdminResponse mcr=CoreAdminRequest.getStatus(name,coreadmin);
  long before=mcr.getStartTime(name).getTime();
  CoreAdminRequest.reloadCore(name,coreadmin);
  mcr=CoreAdminRequest.getStatus(name,coreadmin);
  long after=mcr.getStartTime(name).getTime();
  assertTrue("should have more recent time: " + after + ","+ before,after > before);
  mcr=CoreAdminRequest.persist(SOLR_PERSIST_XML,coreadmin);
  DocumentBuilder builder=DocumentBuilderFactory.newInstance().newDocumentBuilder();
  FileInputStream fis=new FileInputStream(new File(tempDir,SOLR_PERSIST_XML));
  try {
    Document document=builder.parse(fis);
    fis.close();
    fis=new FileInputStream(new File(tempDir,SOLR_PERSIST_XML));
    String solrPersistXml=IOUtils.toString(new InputStreamReader(fis,"UTF-8"));
    assertTrue("\"/solr/cores[@defaultCoreName='core0']\" doesn't match in:\n" + solrPersistXml,exists("/solr/cores[@defaultCoreName='core0']",document));
    assertTrue("\"/solr/cores[@host='127.0.0.1']\" doesn't match in:\n" + solrPersistXml,exists("/solr/cores[@host='127.0.0.1']",document));
    assertTrue("\"/solr/cores[@hostPort='${hostPort:8983}']\" doesn't match in:\n" + solrPersistXml,exists("/solr/cores[@hostPort='${hostPort:8983}']",document));
    assertTrue("\"/solr/cores[@zkClientTimeout='8000']\" doesn't match in:\n" + solrPersistXml,exists("/solr/cores[@zkClientTimeout='8000']",document));
    assertTrue("\"/solr/cores[@hostContext='${hostContext:solr}']\" doesn't match in:\n" + solrPersistXml,exists("/solr/cores[@hostContext='${hostContext:solr}']",document));
    assertTrue("\"/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']\" doesn't match in:\n" + solrPersistXml,exists("/solr/cores[@genericCoreNodeNames='${genericCoreNodeNames:true}']",document));
  }
  finally {
    fis.close();
  }
  CoreAdminRequest.renameCore(name,"renamed_core",coreadmin);
  mcr=CoreAdminRequest.persist(SOLR_PERSIST_XML,getRenamedSolrAdmin());
  fis=new FileInputStream(new File(tempDir,SOLR_PERSIST_XML));
  try {
    Document document=builder.parse(fis);
    assertTrue(exists("/solr/cores/core[@name='renamed_core']",document));
    assertTrue(exists("/solr/cores/core[@instanceDir='${theInstanceDir:./}']",document));
    assertTrue(exists("/solr/cores/core[@collection='${collection:acollection}']",document));
  }
  finally {
    fis.close();
  }
  coreadmin=getRenamedSolrAdmin();
  File dataDir=new File(tempDir,"data3");
  File tlogDir=new File(tempDir,"tlog3");
  CoreAdminRequest.createCore("newCore",SOLR_HOME.getAbsolutePath(),coreadmin,null,null,dataDir.getAbsolutePath(),tlogDir.getAbsolutePath());
  mcr=CoreAdminRequest.persist(SOLR_PERSIST_XML,getRenamedSolrAdmin());
  fis=new FileInputStream(new File(tempDir,SOLR_PERSIST_XML));
  try {
    Document document=builder.parse(fis);
    assertTrue(exists("/solr/cores/core[@name='collection1' and @instanceDir='.']",document));
  }
  finally {
    fis.close();
  }
  cores.shutdown();
  cores=new CoreContainer(SOLR_HOME.getAbsolutePath(),new File(tempDir,SOLR_PERSIST_XML));
  mcr=CoreAdminRequest.persist(SOLR_PERSIST_XML,getRenamedSolrAdmin());
}
