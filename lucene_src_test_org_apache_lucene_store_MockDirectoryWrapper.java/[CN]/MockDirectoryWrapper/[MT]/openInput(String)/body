{
  maybeYield();
  if (!delegate.fileExists(name))   throw new FileNotFoundException(name);
  if (openFilesForWrite.contains(name) && !name.startsWith("segments")) {
    throw fillOpenTrace(new IOException("MockDirectoryWrapper: file \"" + name + "\" is still open for writing"),name,false);
  }
  if (openFiles.containsKey(name)) {
    Integer v=openFiles.get(name);
    v=Integer.valueOf(v.intValue() + 1);
    openFiles.put(name,v);
  }
 else {
    openFiles.put(name,Integer.valueOf(1));
  }
  IndexInput ii=new MockIndexInputWrapper(this,name,delegate.openInput(name));
  openFileHandles.put(ii,new RuntimeException("unclosed IndexInput"));
  return ii;
}
