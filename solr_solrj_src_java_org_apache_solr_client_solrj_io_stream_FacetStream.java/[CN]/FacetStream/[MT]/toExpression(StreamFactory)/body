{
  StreamExpression expression=new StreamExpression(factory.getFunctionName(this.getClass()));
  expression.addParameter(collection);
  for (  Entry<String,String> param : props.entrySet()) {
    expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),param.getValue()));
  }
{
    StringBuilder builder=new StringBuilder();
    for (    Bucket bucket : buckets) {
      if (0 != builder.length()) {
        builder.append(",");
      }
      builder.append(bucket.toString());
    }
    expression.addParameter(new StreamExpressionNamedParameter("buckets",builder.toString()));
  }
{
    StringBuilder builder=new StringBuilder();
    for (    FieldComparator sort : bucketSorts) {
      if (0 != builder.length()) {
        builder.append(",");
      }
      builder.append(sort.toExpression(factory));
    }
    expression.addParameter(new StreamExpressionNamedParameter("bucketSorts",builder.toString()));
  }
  for (  Metric metric : metrics) {
    expression.addParameter(metric.toExpression(factory));
  }
  expression.addParameter(new StreamExpressionNamedParameter("bucketSizeLimit",Integer.toString(bucketSizeLimit)));
  expression.addParameter(new StreamExpressionNamedParameter("zkHost",zkHost));
  return expression;
}
