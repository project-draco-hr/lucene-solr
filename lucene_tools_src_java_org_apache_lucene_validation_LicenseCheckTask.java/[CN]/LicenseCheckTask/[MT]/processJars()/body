{
  log("Starting scan.",verboseLevel);
  long start=System.currentTimeMillis();
  @SuppressWarnings("unchecked") Iterator<Resource> iter=(Iterator<Resource>)jarResources.iterator();
  int checked=0;
  int errors=0;
  while (iter.hasNext()) {
    final Resource r=iter.next();
    if (!r.isExists()) {
      throw new BuildException("JAR resource does not exist: " + r.getName());
    }
    if (!(r instanceof FileResource)) {
      throw new BuildException("Only filesystem resource are supported: " + r.getName() + ", was: "+ r.getClass().getName());
    }
    File jarFile=((FileResource)r).getFile();
    if (!checkJarFile(jarFile)) {
      errors++;
    }
    checked++;
  }
  log(String.format(Locale.ENGLISH,"Scanned %d JAR file(s) for licenses (in %.2fs.), %d error(s).",checked,(System.currentTimeMillis() - start) / 1000.0,errors),errors > 0 ? Project.MSG_ERR : Project.MSG_INFO);
}
