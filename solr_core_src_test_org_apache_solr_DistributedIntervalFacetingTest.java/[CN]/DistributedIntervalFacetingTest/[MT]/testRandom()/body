{
  int cardinality=1000000;
  String[] fields=new String[]{"test_s_dv","test_i_dv","test_l_dv","test_f_dv","test_d_dv","test_ss_dv","test_is_dv","test_fs_dv","test_ls_dv","test_ds_dv"};
  for (int i=0; i < atLeast(500); i++) {
    if (random().nextInt(50) == 0) {
      indexr("id",String.valueOf(i));
      continue;
    }
    if (random().nextInt(100) == 0 && i > 0) {
      del("id:" + String.valueOf(i - 1));
    }
    Object[] docFields=new Object[(random().nextInt(5)) * 10 + 12];
    docFields[0]="id";
    docFields[1]=String.valueOf(i);
    docFields[2]="test_s_dv";
    docFields[3]=String.valueOf(random().nextInt(cardinality));
    docFields[4]="test_i_dv";
    docFields[5]=String.valueOf(random().nextInt(cardinality));
    docFields[6]="test_l_dv";
    docFields[7]=String.valueOf(random().nextInt(cardinality));
    docFields[8]="test_f_dv";
    docFields[9]=String.valueOf(random().nextFloat() * cardinality);
    docFields[10]="test_d_dv";
    docFields[11]=String.valueOf(random().nextDouble() * cardinality);
    for (int j=12; j < docFields.length; ) {
      docFields[j++]="test_ss_dv";
      docFields[j++]=String.valueOf(random().nextInt(cardinality));
      docFields[j++]="test_is_dv";
      docFields[j++]=String.valueOf(random().nextInt(cardinality));
      docFields[j++]="test_ls_dv";
      docFields[j++]=String.valueOf(random().nextInt(cardinality));
      docFields[j++]="test_fs_dv";
      docFields[j++]=String.valueOf(random().nextFloat() * cardinality);
      docFields[j++]="test_ds_dv";
      docFields[j++]=String.valueOf(random().nextDouble() * cardinality);
    }
    indexr(docFields);
    if (random().nextInt(50) == 0) {
      commit();
    }
  }
  commit();
  handle.clear();
  handle.put("QTime",SKIPVAL);
  handle.put("timestamp",SKIPVAL);
  handle.put("maxScore",SKIPVAL);
  for (int i=0; i < atLeast(100); i++) {
    doTestQuery(cardinality,fields);
  }
}
