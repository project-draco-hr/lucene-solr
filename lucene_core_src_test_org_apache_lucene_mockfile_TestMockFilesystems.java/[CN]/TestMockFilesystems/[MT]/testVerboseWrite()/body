{
  Path dir=FilterPath.unwrap(createTempDir());
  final AtomicBoolean seenMessage=new AtomicBoolean(false);
  InfoStream testStream=new InfoStream(){
    @Override public void close() throws IOException {
    }
    @Override public void message(    String component,    String message){
      if ("FS".equals(component) && message.startsWith("newOutputStream")) {
        seenMessage.set(true);
      }
    }
    @Override public boolean isEnabled(    String component){
      return true;
    }
  }
;
  FileSystem fs=new VerboseFS(dir.getFileSystem(),testStream).getFileSystem(URI.create("file:///"));
  Path wrapped=new FilterPath(dir,fs);
  OutputStream file=Files.newOutputStream(wrapped.resolve("output"));
  assertTrue(seenMessage.get());
  file.close();
}
