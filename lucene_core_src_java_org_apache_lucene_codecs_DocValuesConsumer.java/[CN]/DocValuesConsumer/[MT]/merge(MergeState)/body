{
  for (  FieldInfo field : mergeState.fieldInfos) {
    DocValuesType type=field.getDocValuesType();
    if (type != null) {
      if (type == DocValuesType.NUMERIC) {
        List<NumericDocValues> toMerge=new ArrayList<>();
        List<Bits> docsWithField=new ArrayList<>();
        for (        AtomicReader reader : mergeState.readers) {
          NumericDocValues values=reader.getNumericDocValues(field.name);
          Bits bits=reader.getDocsWithField(field.name);
          if (values == null) {
            values=DocValues.emptyNumeric();
            bits=new Bits.MatchNoBits(reader.maxDoc());
          }
          toMerge.add(values);
          docsWithField.add(bits);
        }
        mergeNumericField(field,mergeState,toMerge,docsWithField);
      }
 else       if (type == DocValuesType.BINARY) {
        List<BinaryDocValues> toMerge=new ArrayList<>();
        List<Bits> docsWithField=new ArrayList<>();
        for (        AtomicReader reader : mergeState.readers) {
          BinaryDocValues values=reader.getBinaryDocValues(field.name);
          Bits bits=reader.getDocsWithField(field.name);
          if (values == null) {
            values=DocValues.emptyBinary();
            bits=new Bits.MatchNoBits(reader.maxDoc());
          }
          toMerge.add(values);
          docsWithField.add(bits);
        }
        mergeBinaryField(field,mergeState,toMerge,docsWithField);
      }
 else       if (type == DocValuesType.SORTED) {
        List<SortedDocValues> toMerge=new ArrayList<>();
        for (        AtomicReader reader : mergeState.readers) {
          SortedDocValues values=reader.getSortedDocValues(field.name);
          if (values == null) {
            values=DocValues.emptySorted();
          }
          toMerge.add(values);
        }
        mergeSortedField(field,mergeState,toMerge);
      }
 else       if (type == DocValuesType.SORTED_SET) {
        List<SortedSetDocValues> toMerge=new ArrayList<>();
        for (        AtomicReader reader : mergeState.readers) {
          SortedSetDocValues values=reader.getSortedSetDocValues(field.name);
          if (values == null) {
            values=DocValues.emptySortedSet();
          }
          toMerge.add(values);
        }
        mergeSortedSetField(field,mergeState,toMerge);
      }
 else       if (type == DocValuesType.SORTED_NUMERIC) {
        List<SortedNumericDocValues> toMerge=new ArrayList<>();
        for (        AtomicReader reader : mergeState.readers) {
          SortedNumericDocValues values=reader.getSortedNumericDocValues(field.name);
          if (values == null) {
            values=DocValues.emptySortedNumeric(reader.maxDoc());
          }
          toMerge.add(values);
        }
        mergeSortedNumericField(field,mergeState,toMerge);
      }
 else {
        throw new AssertionError("type=" + type);
      }
    }
  }
}
