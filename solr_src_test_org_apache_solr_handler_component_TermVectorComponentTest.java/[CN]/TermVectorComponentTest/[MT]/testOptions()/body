{
  SolrCore core=h.getCore();
  SearchComponent tvComp=core.getSearchComponent("tvComponent");
  assertTrue("tvComp is null and it shouldn't be",tvComp != null);
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add(CommonParams.Q,"id:0");
  params.add(CommonParams.QT,"tvrh");
  params.add(TermVectorParams.TF,"true");
  params.add(TermVectorParams.DF,"true");
  params.add(TermVectorParams.OFFSETS,"true");
  params.add(TermVectorParams.POSITIONS,"true");
  params.add(TermVectorParams.TF_IDF,"true");
  params.add(TermVectorComponent.COMPONENT_NAME,"true");
  SolrRequestHandler handler=core.getRequestHandler("tvrh");
  SolrQueryResponse rsp;
  rsp=new SolrQueryResponse();
  rsp.add("responseHeader",new SimpleOrderedMap());
  handler.handleRequest(new LocalSolrQueryRequest(core,params),rsp);
  NamedList values=rsp.getValues();
  NamedList termVectors=(NamedList)values.get(TermVectorComponent.TERM_VECTORS);
  assertTrue("termVectors is null and it shouldn't be",termVectors != null);
  NamedList doc=(NamedList)termVectors.getVal(0);
  assertTrue("doc is null and it shouldn't be",doc != null);
  assertTrue(doc.size() + " does not equal: " + 2,doc.size() == 2);
  NamedList offtv=(NamedList)doc.get("test_posofftv");
  assertTrue("offtv is null and it shouldn't be",offtv != null);
  assertTrue("offtv Size: " + offtv.size() + " is not: "+ 2,offtv.size() == 2);
  NamedList another=(NamedList)offtv.get("anoth");
  NamedList offsets=(NamedList)another.get("offsets");
  assertTrue("offsets is null and it shouldn't be",offsets != null);
  assertTrue("offsets Size: " + offsets.size() + " is not greater than: "+ 0,offsets.size() > 0);
  NamedList pos=(NamedList)another.get("positions");
  assertTrue("pos is null and it shouldn't be",pos != null);
  assertTrue("pos Size: " + pos.size() + " is not greater than: "+ 0,pos.size() > 0);
  Integer df=(Integer)another.get("df");
  assertTrue("df is null and it shouldn't be",df != null);
  assertTrue(df + " does not equal: " + 2,df == 2);
  Double tfIdf=(Double)another.get("tf-idf");
  assertTrue("tfIdf is null and it shouldn't be",tfIdf != null);
  assertTrue(tfIdf + " does not equal: " + 0.5,tfIdf == 0.5);
}
