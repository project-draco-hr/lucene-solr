{
  final int nrOfCommands=commands.size();
  List<Collector> collectors=new ArrayList<>(nrOfCommands);
  for (  Command command : commands) {
    collectors.addAll(command.create());
  }
  ProcessedFilter filter=searcher.getProcessedFilter(queryCommand.getFilter(),queryCommand.getFilterList());
  Query query=QueryUtils.makeQueryable(queryCommand.getQuery());
  if (truncateGroups) {
    docSet=computeGroupedDocSet(query,filter,collectors);
  }
 else   if (needDocset) {
    docSet=computeDocSet(query,filter,collectors);
  }
 else   if (!collectors.isEmpty()) {
    searchWithTimeLimiter(query,filter,MultiCollector.wrap(collectors.toArray(new Collector[nrOfCommands])));
  }
 else {
    searchWithTimeLimiter(query,filter,null);
  }
}
