{
  List<Map<SolrInputDocument,Map<String,Object>>> docLists=new ArrayList<>();
  Map<SolrInputDocument,Map<String,Object>> docList=null;
  if (this.documents != null) {
    Boolean lastOverwrite=true;
    Integer lastCommitWithin=-1;
    Set<Entry<SolrInputDocument,Map<String,Object>>> entries=this.documents.entrySet();
    for (    Entry<SolrInputDocument,Map<String,Object>> entry : entries) {
      Map<String,Object> map=entry.getValue();
      Boolean overwrite=null;
      Integer commitWithin=null;
      if (map != null) {
        overwrite=(Boolean)entry.getValue().get(OVERWRITE);
        commitWithin=(Integer)entry.getValue().get(COMMIT_WITHIN);
      }
      if (overwrite != lastOverwrite || commitWithin != lastCommitWithin || docLists.size() == 0) {
        docList=new LinkedHashMap<>();
        docLists.add(docList);
      }
      docList.put(entry.getKey(),entry.getValue());
      lastCommitWithin=commitWithin;
      lastOverwrite=overwrite;
    }
  }
  if (docIterator != null) {
    docList=new LinkedHashMap<>();
    docLists.add(docList);
    while (docIterator.hasNext()) {
      SolrInputDocument doc=docIterator.next();
      if (doc != null) {
        docList.put(doc,null);
      }
    }
  }
  return docLists;
}
