{
  IndexReader reader=null;
  FSDirectory dir=null;
  String field=null;
  boolean IncludeTermFreqs=false;
  if (args.length == 0 || args.length > 4) {
    usage();
    System.exit(1);
  }
  if (args.length > 0) {
    dir=FSDirectory.open(new File(args[0]));
  }
  for (int i=1; i < args.length; i++) {
    if (args[i].equals("-t")) {
      IncludeTermFreqs=true;
    }
 else {
      try {
        numTerms=Integer.parseInt(args[i]);
      }
 catch (      NumberFormatException e) {
        field=args[i];
      }
    }
  }
  reader=IndexReader.open(dir);
  TermStats[] terms=getHighFreqTerms(reader,numTerms,field);
  if (!IncludeTermFreqs) {
    for (int i=0; i < terms.length; i++) {
      System.out.printf("%s:%s %,d \n",terms[i].field,terms[i].termtext.utf8ToString(),terms[i].docFreq);
    }
  }
 else {
    TermStats[] termsWithTF=sortByTotalTermFreq(reader,terms);
    for (int i=0; i < termsWithTF.length; i++) {
      System.out.printf("%s:%s \t totalTF = %,d \t doc freq = %,d \n",termsWithTF[i].field,termsWithTF[i].termtext.utf8ToString(),termsWithTF[i].totalTermFreq,termsWithTF[i].docFreq);
    }
  }
  reader.close();
}
