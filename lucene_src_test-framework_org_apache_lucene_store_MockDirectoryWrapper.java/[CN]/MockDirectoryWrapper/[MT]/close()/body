{
  maybeYield();
  if (openFiles == null) {
    openFiles=new HashMap<String,Integer>();
    openFilesDeleted=new HashSet<String>();
  }
  if (noDeleteOpenFile && openFiles.size() > 0) {
    Exception cause=null;
    Iterator<Exception> stacktraces=openFileHandles.values().iterator();
    if (stacktraces.hasNext())     cause=stacktraces.next();
    throw new RuntimeException("MockDirectoryWrapper: cannot close: there are still open files: " + openFiles,cause);
  }
  open=false;
  if (checkIndexOnClose) {
    if (LuceneTestCase.VERBOSE) {
      System.out.println("\nNOTE: MockDirectoryWrapper: now run CheckIndex");
    }
    if (codecProvider != null) {
      if (IndexReader.indexExists(this,codecProvider)) {
        _TestUtil.checkIndex(this,codecProvider);
      }
    }
 else {
      if (IndexReader.indexExists(this)) {
        _TestUtil.checkIndex(this);
      }
    }
  }
  delegate.close();
}
