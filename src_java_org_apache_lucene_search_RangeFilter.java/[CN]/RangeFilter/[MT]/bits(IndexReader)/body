{
  BitSet bits=new BitSet(reader.maxDoc());
  TermEnum enumerator=(null != lowerTerm && collator == null ? reader.terms(new Term(fieldName,lowerTerm)) : reader.terms(new Term(fieldName)));
  try {
    if (enumerator.term() == null) {
      return bits;
    }
    TermDocs termDocs=reader.termDocs();
    try {
      if (collator != null) {
        do {
          Term term=enumerator.term();
          if (term != null && term.field().equals(fieldName)) {
            if ((lowerTerm == null || (includeLower ? collator.compare(term.text(),lowerTerm) >= 0 : collator.compare(term.text(),lowerTerm) > 0)) && (upperTerm == null || (includeUpper ? collator.compare(term.text(),upperTerm) <= 0 : collator.compare(term.text(),upperTerm) < 0))) {
              termDocs.seek(enumerator.term());
              while (termDocs.next()) {
                bits.set(termDocs.doc());
              }
            }
          }
        }
 while (enumerator.next());
      }
 else {
        boolean checkLower=false;
        if (!includeLower)         checkLower=true;
        do {
          Term term=enumerator.term();
          if (term != null && term.field().equals(fieldName)) {
            if (!checkLower || null == lowerTerm || term.text().compareTo(lowerTerm) > 0) {
              checkLower=false;
              if (upperTerm != null) {
                int compare=upperTerm.compareTo(term.text());
                if ((compare < 0) || (!includeUpper && compare == 0)) {
                  break;
                }
              }
              termDocs.seek(enumerator.term());
              while (termDocs.next()) {
                bits.set(termDocs.doc());
              }
            }
          }
 else {
            break;
          }
        }
 while (enumerator.next());
      }
    }
  finally {
      termDocs.close();
    }
  }
  finally {
    enumerator.close();
  }
  return bits;
}
