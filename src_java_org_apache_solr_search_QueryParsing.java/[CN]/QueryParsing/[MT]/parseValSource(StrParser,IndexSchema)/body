{
  String id=sp.getId();
  if (sp.opt("(")) {
    ValueSource vs=null;
    if (id.equals("ord")) {
      String field=sp.getId();
      vs=new OrdFieldSource(field);
    }
 else     if (id.equals("rord")) {
      String field=sp.getId();
      vs=new ReverseOrdFieldSource(field);
    }
 else     if (id.equals("linear")) {
      ValueSource source=parseValSource(sp,schema);
      sp.expect(",");
      float slope=sp.getFloat();
      sp.expect(",");
      float intercept=sp.getFloat();
      vs=new LinearFloatFunction(source,slope,intercept);
    }
 else     if (id.equals("max")) {
      ValueSource source=parseValSource(sp,schema);
      sp.expect(",");
      float val=sp.getFloat();
      vs=new MaxFloatFunction(source,val);
    }
 else     if (id.equals("recip")) {
      ValueSource source=parseValSource(sp,schema);
      sp.expect(",");
      float m=sp.getFloat();
      sp.expect(",");
      float a=sp.getFloat();
      sp.expect(",");
      float b=sp.getFloat();
      vs=new ReciprocalFloatFunction(source,m,a,b);
    }
 else {
      throw new ParseException("Unknown function " + id + " in FunctionQuery("+ sp+ ")");
    }
    sp.expect(")");
    return vs;
  }
  SchemaField f=schema.getField(id);
  return f.getType().getValueSource(f);
}
