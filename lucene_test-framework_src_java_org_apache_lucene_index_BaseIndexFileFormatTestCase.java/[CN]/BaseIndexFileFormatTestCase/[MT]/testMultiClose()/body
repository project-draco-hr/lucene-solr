{
  Directory oneDocIndex=newDirectory();
  IndexWriter iw=new IndexWriter(oneDocIndex,new IndexWriterConfig(new MockAnalyzer(random())));
  Document oneDoc=new Document();
  FieldType customType=new FieldType(TextField.TYPE_STORED);
  customType.setStoreTermVectors(true);
  Field customField=new Field("field","contents",customType);
  oneDoc.add(customField);
  oneDoc.add(new NumericDocValuesField("field",5));
  iw.addDocument(oneDoc);
  LeafReader oneDocReader=getOnlyLeafReader(DirectoryReader.open(iw));
  iw.close();
  Directory dir=newFSDirectory(createTempDir("justSoYouGetSomeChannelErrors"));
  Codec codec=getCodec();
  SegmentInfo segmentInfo=new SegmentInfo(dir,Version.LATEST,"_0",1,false,codec,Collections.emptyMap(),StringHelper.randomId(),new HashMap<>());
  FieldInfo proto=oneDocReader.getFieldInfos().fieldInfo("field");
  FieldInfo field=new FieldInfo(proto.name,proto.number,proto.hasVectors(),proto.omitsNorms(),proto.hasPayloads(),proto.getIndexOptions(),proto.getDocValuesType(),proto.getDocValuesGen(),new HashMap<>(),proto.getPointDimensionCount(),proto.getPointNumBytes());
  FieldInfos fieldInfos=new FieldInfos(new FieldInfo[]{field});
  SegmentWriteState writeState=new SegmentWriteState(null,dir,segmentInfo,fieldInfos,null,new IOContext(new FlushInfo(1,20)));
  SegmentReadState readState=new SegmentReadState(dir,segmentInfo,fieldInfos,IOContext.READ);
  try (FieldsConsumer consumer=codec.postingsFormat().fieldsConsumer(writeState)){
    consumer.write(oneDocReader.fields());
    IOUtils.close(consumer);
    IOUtils.close(consumer);
  }
   try (FieldsProducer producer=codec.postingsFormat().fieldsProducer(readState)){
    IOUtils.close(producer);
    IOUtils.close(producer);
  }
   try (DocValuesConsumer consumer=codec.docValuesFormat().fieldsConsumer(writeState)){
    consumer.addNumericField(field,Collections.singleton(5));
    IOUtils.close(consumer);
    IOUtils.close(consumer);
  }
   try (DocValuesProducer producer=codec.docValuesFormat().fieldsProducer(readState)){
    IOUtils.close(producer);
    IOUtils.close(producer);
  }
   try (NormsConsumer consumer=codec.normsFormat().normsConsumer(writeState)){
    consumer.addNormsField(field,Collections.singleton(5));
    IOUtils.close(consumer);
    IOUtils.close(consumer);
  }
   try (NormsProducer producer=codec.normsFormat().normsProducer(readState)){
    IOUtils.close(producer);
    IOUtils.close(producer);
  }
   try (TermVectorsWriter consumer=codec.termVectorsFormat().vectorsWriter(dir,segmentInfo,writeState.context)){
    consumer.startDocument(1);
    consumer.startField(field,1,false,false,false);
    consumer.startTerm(new BytesRef("testing"),2);
    consumer.finishTerm();
    consumer.finishField();
    consumer.finishDocument();
    consumer.finish(fieldInfos,1);
    IOUtils.close(consumer);
    IOUtils.close(consumer);
  }
   try (TermVectorsReader producer=codec.termVectorsFormat().vectorsReader(dir,segmentInfo,fieldInfos,readState.context)){
    IOUtils.close(producer);
    IOUtils.close(producer);
  }
   try (StoredFieldsWriter consumer=codec.storedFieldsFormat().fieldsWriter(dir,segmentInfo,writeState.context)){
    consumer.startDocument();
    consumer.writeField(field,customField);
    consumer.finishDocument();
    consumer.finish(fieldInfos,1);
    IOUtils.close(consumer);
    IOUtils.close(consumer);
  }
   try (StoredFieldsReader producer=codec.storedFieldsFormat().fieldsReader(dir,segmentInfo,fieldInfos,readState.context)){
    IOUtils.close(producer);
    IOUtils.close(producer);
  }
   IOUtils.close(oneDocReader,oneDocIndex,dir);
}
