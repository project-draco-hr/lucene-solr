{
  assumeTrue("Test requires SortedSetDV support",defaultCodecSupportsSortedSet());
  Directory dir=newDirectory();
  FacetsConfig config=new FacetsConfig();
  config.setMultiValued("a",true);
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir);
  Document doc=new Document();
  doc.add(new SortedSetDocValuesFacetField("a","foo"));
  doc.add(new SortedSetDocValuesFacetField("a","bar"));
  doc.add(new SortedSetDocValuesFacetField("a","zoo"));
  doc.add(new SortedSetDocValuesFacetField("b","baz"));
  writer.addDocument(config.build(doc));
  if (random().nextBoolean()) {
    writer.commit();
  }
  doc=new Document();
  doc.add(new SortedSetDocValuesFacetField("a","foo"));
  writer.addDocument(config.build(doc));
  IndexSearcher searcher=newSearcher(writer.getReader());
  SortedSetDocValuesReaderState state=new SortedSetDocValuesReaderState(searcher.getIndexReader());
  SimpleFacetsCollector c=new SimpleFacetsCollector();
  searcher.search(new MatchAllDocsQuery(),c);
  SortedSetDocValuesFacetCounts facets=new SortedSetDocValuesFacetCounts(state,c);
  assertEquals("value=4 childCount=3\n  foo (2)\n  bar (1)\n  zoo (1)\n",facets.getTopChildren(10,"a").toString());
  assertEquals("value=1 childCount=1\n  baz (1)\n",facets.getTopChildren(10,"b").toString());
  SimpleDrillDownQuery q=new SimpleDrillDownQuery(config);
  q.add("a","foo");
  q.add("b","baz");
  TopDocs hits=searcher.search(q,1);
  assertEquals(1,hits.totalHits);
  IOUtils.close(writer,searcher.getIndexReader(),dir);
}
