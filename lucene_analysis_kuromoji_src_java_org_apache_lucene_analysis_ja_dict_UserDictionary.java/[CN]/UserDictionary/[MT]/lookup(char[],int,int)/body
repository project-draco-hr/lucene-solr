{
  TreeMap<Integer,int[]> result=new TreeMap<>();
  boolean found=false;
  final FST.BytesReader fstReader=fst.getBytesReader();
  FST.Arc<Long> arc=new FST.Arc<>();
  int end=off + len;
  for (int startOffset=off; startOffset < end; startOffset++) {
    arc=fst.getFirstArc(arc);
    int output=0;
    int remaining=end - startOffset;
    for (int i=0; i < remaining; i++) {
      int ch=chars[startOffset + i];
      if (fst.findTargetArc(ch,arc,arc,i == 0,fstReader) == null) {
        break;
      }
      output+=arc.output.intValue();
      if (arc.isFinal()) {
        final int finalOutput=output + arc.nextFinalOutput.intValue();
        result.put(startOffset - off,segmentations[finalOutput]);
        found=true;
      }
    }
  }
  return found ? toIndexArray(result) : EMPTY_RESULT;
}
