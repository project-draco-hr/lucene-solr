{
  SolrInputDocument doc=sdoc("id",id);
  for (  String prefix : new String[]{"pivot_i","pivot_ti"}) {
    if (useField()) {
      doc.addField(prefix + "1",skewed(TestUtil.nextInt(random(),20,50),random().nextInt()));
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,skewed(TestUtil.nextInt(random(),20,50),random().nextInt()));
      }
    }
  }
  for (  String prefix : new String[]{"pivot_l","pivot_tl"}) {
    if (useField()) {
      doc.addField(prefix + "1",skewed(TestUtil.nextInt(random(),5000,5100),random().nextLong()));
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,skewed(TestUtil.nextInt(random(),5000,5100),random().nextLong()));
      }
    }
  }
  for (  String prefix : new String[]{"pivot_f","pivot_tf"}) {
    if (useField()) {
      doc.addField(prefix + "1",skewed(1.0F / random().nextInt(13),random().nextFloat() * random().nextInt()));
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,skewed(1.0F / random().nextInt(13),random().nextFloat() * random().nextInt()));
      }
    }
  }
  for (  String prefix : new String[]{"pivot_d","pivot_td"}) {
    if (useField()) {
      doc.addField(prefix + "1",skewed(1.0D / random().nextInt(19),random().nextDouble() * random().nextInt()));
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,skewed(1.0D / random().nextInt(19),random().nextDouble() * random().nextInt()));
      }
    }
  }
  for (  String prefix : new String[]{"pivot_dt","pivot_tdt"}) {
    if (useField()) {
      doc.addField(prefix + "1",skewed(randomSkewedDate(),randomDate()));
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,skewed(randomSkewedDate(),randomDate()));
      }
    }
  }
{
    String prefix="pivot_b";
    if (useField()) {
      doc.addField(prefix + "1",random().nextBoolean() ? "t" : "f");
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,random().nextBoolean() ? "t" : "f");
      }
    }
  }
  for (  String prefix : new String[]{"pivot_x_s","pivot_y_s","pivot_z_s"}) {
    if (useField()) {
      doc.addField(prefix + "1",skewed(TestUtil.randomSimpleString(random(),1,1),randomXmlUsableUnicodeString()));
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,skewed(TestUtil.randomSimpleString(random(),1,1),randomXmlUsableUnicodeString()));
      }
    }
  }
  for (  String prefix : new String[]{"dense_pivot_x_s","dense_pivot_y_s"}) {
    if (useField()) {
      doc.addField(prefix + "1",TestUtil.randomSimpleString(random(),1,1));
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,TestUtil.randomSimpleString(random(),1,1));
      }
    }
  }
  for (  String prefix : new String[]{"dense_pivot_i","dense_pivot_ti"}) {
    if (useField()) {
      doc.addField(prefix + "1",TestUtil.nextInt(random(),20,50));
    }
    if (useField()) {
      int numMulti=atLeast(1);
      while (0 < numMulti--) {
        doc.addField(prefix,TestUtil.nextInt(random(),20,50));
      }
    }
  }
  return doc;
}
