{
  if (null == expected || null == actual) {
    assertEquals(msg,expected,actual);
    return;
  }
  assertEquals(msg + " ... values do not have the same type: " + expected+ " vs "+ actual,expected.getClass(),actual.getClass());
  if (expected instanceof Date) {
    expected=((Date)expected).getTime();
    actual=((Date)actual).getTime();
    msg=msg + " (w/dates converted to ms)";
  }
  assertTrue(msg + " ... expected is not a Number: " + expected+ "=>"+ expected.getClass(),expected instanceof Number);
  if (expected instanceof Long || expected instanceof Integer) {
    assertEquals(msg,((Number)expected).longValue(),((Number)actual).longValue());
  }
 else   if (expected instanceof Float || expected instanceof Double) {
    double expect=((Number)expected).doubleValue();
    double epsilon=Math.abs(expect * 0.1E-7D);
    assertEquals(msg,expect,((Number)actual).doubleValue(),epsilon);
  }
 else {
    fail(msg + " ... where did this come from: " + expected.getClass());
  }
}
