{
  if (null == constraints || 0 == constraints.size()) {
    return;
  }
  final int maxIdx=constraints.size() - 1;
  final int min=baseParams.getInt(TRACE_MIN,-1);
  final boolean expectMissing=baseParams.getBool(TRACE_MISS,false);
  final boolean checkCount="count".equals(baseParams.get(TRACE_SORT,"count"));
  int prevCount=Integer.MAX_VALUE;
  for (int i=0; i <= maxIdx; i++) {
    final PivotField constraint=constraints.get(i);
    final int count=constraint.getCount();
    if (0 < min) {
      assertTrue(pivotName + ": val #" + i+ " of "+ maxIdx+ ": count("+ count+ ") < facet.mincount("+ min+ "): "+ constraint,min <= count);
    }
    if ((i < maxIdx) || (!expectMissing)) {
      assertNotNull(pivotName + ": val #" + i+ " of "+ maxIdx+ " has null value: "+ constraint,constraint.getValue());
    }
    if (checkCount) {
      assertTrue(pivotName + ": val #" + i+ " of"+ maxIdx+ ": count("+ count+ ") > prevCount("+ prevCount+ "): "+ constraint,((count <= prevCount) || (expectMissing && i == maxIdx && null == constraint.getValue())));
      prevCount=count;
    }
  }
}
