{
  assertNumerics("Null?",null,null);
  assertNumerics("large a",new Double(2.3005390038169265E9),new Double(2.300539003816927E9));
  assertNumerics("large b",new Double(1.2722582464444444E9),new Double(1.2722582464444442E9));
  assertNumerics("small",new Double(2.3005390038169265E-9),new Double(2.300539003816927E-9));
  assertNumerics("large a negative",new Double(-2.3005390038169265E9),new Double(-2.300539003816927E9));
  assertNumerics("large b negative",new Double(-1.2722582464444444E9),new Double(-1.2722582464444442E9));
  assertNumerics("small negative",new Double(-2.3005390038169265E-9),new Double(-2.300539003816927E-9));
  assertNumerics("high long",Long.MAX_VALUE,Long.MAX_VALUE);
  assertNumerics("high int",Integer.MAX_VALUE,Integer.MAX_VALUE);
  assertNumerics("low long",Long.MIN_VALUE,Long.MIN_VALUE);
  assertNumerics("low int",Integer.MIN_VALUE,Integer.MIN_VALUE);
  for (  Object num : new Object[]{new Date(42),42,42L,42.0F}) {
    try {
      assertNumerics("non-null",null,num);
      throw new RuntimeException("did not get assertion failure when expected was null");
    }
 catch (    AssertionError e) {
    }
    try {
      assertNumerics("non-null",num,null);
      throw new RuntimeException("did not get assertion failure when actual was null");
    }
 catch (    AssertionError e) {
    }
  }
  try {
    assertNumerics("non-number","foo",42);
    throw new RuntimeException("did not get assertion failure when expected was non-number");
  }
 catch (  AssertionError e) {
  }
  try {
    assertNumerics("non-number",42,"foo");
    throw new RuntimeException("did not get assertion failure when actual was non-number");
  }
 catch (  AssertionError e) {
  }
  try {
    assertNumerics("diff",new Double(2.3005390038169265E9),new Double(2.267272520100462E9));
    throw new RuntimeException("did not get assertion failure when args are big & too diff");
  }
 catch (  AssertionError e) {
  }
  try {
    assertNumerics("diff",new Double(2.3005390038169265E-9),new Double(2.267272520100462E-9));
    throw new RuntimeException("did not get assertion failure when args are small & too diff");
  }
 catch (  AssertionError e) {
  }
  try {
    assertNumerics("diff long",Long.MAX_VALUE,Long.MAX_VALUE - 1);
    throw new RuntimeException("did not get assertion failure when args are diff longs");
  }
 catch (  AssertionError e) {
  }
  try {
    assertNumerics("diff int",Integer.MAX_VALUE,Integer.MAX_VALUE - 1);
    throw new RuntimeException("did not get assertion failure when args are diff ints");
  }
 catch (  AssertionError e) {
  }
  try {
    assertNumerics("diff date",new Date(42),new Date(43));
    throw new RuntimeException("did not get assertion failure when args are diff dates");
  }
 catch (  AssertionError e) {
  }
}
