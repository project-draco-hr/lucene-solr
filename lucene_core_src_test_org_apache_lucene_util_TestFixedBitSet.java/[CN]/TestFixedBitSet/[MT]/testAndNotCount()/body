{
  Random random=random();
  int numBits1=TestUtil.nextInt(random,1000,2000);
  int numBits2=TestUtil.nextInt(random,1000,2000);
  int count1=TestUtil.nextInt(random,0,numBits1 - 1);
  int count2=TestUtil.nextInt(random,0,numBits2 - 1);
  int[] bits1=makeIntArray(random,count1,0,numBits1 - 1);
  int[] bits2=makeIntArray(random,count2,0,numBits2 - 1);
  FixedBitSet fixedBitSet1=makeFixedBitSet(bits1,numBits1);
  FixedBitSet fixedBitSet2=makeFixedBitSet(bits2,numBits2);
  long andNotCount=FixedBitSet.andNotCount(fixedBitSet1,fixedBitSet2);
  java.util.BitSet bitSet1=makeBitSet(bits1);
  java.util.BitSet bitSet2=makeBitSet(bits2);
  bitSet1.andNot(bitSet2);
  assertEquals(bitSet1.cardinality(),andNotCount);
}
