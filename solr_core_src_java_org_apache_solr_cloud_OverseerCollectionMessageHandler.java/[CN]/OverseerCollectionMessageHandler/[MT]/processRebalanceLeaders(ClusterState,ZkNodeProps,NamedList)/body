{
  checkRequired(message,COLLECTION_PROP,SHARD_ID_PROP,CORE_NAME_PROP,ELECTION_NODE_PROP,CORE_NODE_NAME_PROP,BASE_URL_PROP,REJOIN_AT_HEAD_PROP);
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.set(COLLECTION_PROP,message.getStr(COLLECTION_PROP));
  params.set(SHARD_ID_PROP,message.getStr(SHARD_ID_PROP));
  params.set(REJOIN_AT_HEAD_PROP,message.getStr(REJOIN_AT_HEAD_PROP));
  params.set(CoreAdminParams.ACTION,CoreAdminAction.REJOINLEADERELECTION.toString());
  params.set(CORE_NAME_PROP,message.getStr(CORE_NAME_PROP));
  params.set(CORE_NODE_NAME_PROP,message.getStr(CORE_NODE_NAME_PROP));
  params.set(ELECTION_NODE_PROP,message.getStr(ELECTION_NODE_PROP));
  params.set(BASE_URL_PROP,message.getStr(BASE_URL_PROP));
  String baseUrl=message.getStr(BASE_URL_PROP);
  ShardRequest sreq=new ShardRequest();
  sreq.nodeName=message.getStr(ZkStateReader.CORE_NAME_PROP);
  params.set("qt",adminPath);
  sreq.purpose=ShardRequest.PURPOSE_PRIVATE;
  sreq.shards=new String[]{baseUrl};
  sreq.actualShards=sreq.shards;
  sreq.params=params;
  ShardHandler shardHandler=shardHandlerFactory.getShardHandler();
  shardHandler.submit(sreq,baseUrl,sreq.params);
}
