{
  String collection=message.getStr(COLLECTION_PROP);
  String node=message.getStr(CoreAdminParams.NODE);
  String shard=message.getStr(SHARD_ID_PROP);
  String coreName=message.getStr(CoreAdminParams.NAME);
  if (StringUtils.isBlank(coreName)) {
    coreName=message.getStr(CoreAdminParams.PROPERTY_PREFIX + CoreAdminParams.NAME);
  }
  final String asyncId=message.getStr(ASYNC);
  DocCollection coll=clusterState.getCollection(collection);
  if (coll == null) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Collection: " + collection + " does not exist");
  }
  if (coll.getSlice(shard) == null) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Collection: " + collection + " shard: "+ shard+ " does not exist");
  }
  ShardHandler shardHandler=shardHandlerFactory.getShardHandler();
  boolean skipCreateReplicaInClusterState=message.getBool(SKIP_CREATE_REPLICA_IN_CLUSTER_STATE,false);
  if (!skipCreateReplicaInClusterState) {
    node=getNodesForNewReplicas(clusterState,collection,shard,1,node,overseer.getZkController().getCoreContainer()).get(0).nodeName;
  }
  log.info("Node not provided, Identified {} for creating new replica",node);
  if (!clusterState.liveNodesContain(node)) {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Node: " + node + " is not live");
  }
  if (coreName == null) {
    coreName=Assign.buildCoreName(coll,shard);
  }
 else   if (!skipCreateReplicaInClusterState) {
    for (    Slice slice : coll.getSlices()) {
      for (      Replica replica : slice.getReplicas()) {
        String replicaCoreName=replica.getStr(CORE_NAME_PROP);
        if (coreName.equals(replicaCoreName)) {
          throw new SolrException(ErrorCode.BAD_REQUEST,"Another replica with the same core name already exists" + " for this collection");
        }
      }
    }
  }
  ModifiableSolrParams params=new ModifiableSolrParams();
  if (!Overseer.isLegacy(zkStateReader.getClusterProps())) {
    if (!skipCreateReplicaInClusterState) {
      ZkNodeProps props=new ZkNodeProps(Overseer.QUEUE_OPERATION,ADDREPLICA.toLower(),ZkStateReader.COLLECTION_PROP,collection,ZkStateReader.SHARD_ID_PROP,shard,ZkStateReader.CORE_NAME_PROP,coreName,ZkStateReader.STATE_PROP,Replica.State.DOWN.toString(),ZkStateReader.BASE_URL_PROP,zkStateReader.getBaseUrlForNodeName(node),ZkStateReader.NODE_NAME_PROP,node);
      Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(props));
    }
    params.set(CoreAdminParams.CORE_NODE_NAME,waitToSeeReplicasInState(collection,Collections.singletonList(coreName)).get(coreName).getName());
  }
  String configName=zkStateReader.readConfigName(collection);
  String routeKey=message.getStr(ShardParams._ROUTE_);
  String dataDir=message.getStr(CoreAdminParams.DATA_DIR);
  String instanceDir=message.getStr(CoreAdminParams.INSTANCE_DIR);
  params.set(CoreAdminParams.ACTION,CoreAdminAction.CREATE.toString());
  params.set(CoreAdminParams.NAME,coreName);
  params.set(COLL_CONF,configName);
  params.set(CoreAdminParams.COLLECTION,collection);
  if (shard != null) {
    params.set(CoreAdminParams.SHARD,shard);
  }
 else   if (routeKey != null) {
    Collection<Slice> slices=coll.getRouter().getSearchSlicesSingle(routeKey,null,coll);
    if (slices.isEmpty()) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"No active shard serving _route_=" + routeKey + " found");
    }
 else {
      params.set(CoreAdminParams.SHARD,slices.iterator().next().getName());
    }
  }
 else {
    throw new SolrException(ErrorCode.BAD_REQUEST,"Specify either 'shard' or _route_ param");
  }
  if (dataDir != null) {
    params.set(CoreAdminParams.DATA_DIR,dataDir);
  }
  if (instanceDir != null) {
    params.set(CoreAdminParams.INSTANCE_DIR,instanceDir);
  }
  addPropertyParams(message,params);
  Map<String,String> requestMap=new HashMap<>();
  sendShardRequest(node,params,shardHandler,asyncId,requestMap);
  processResponses(results,shardHandler,true,"ADDREPLICA failed to create replica",asyncId,requestMap);
  waitForCoreNodeName(collection,node,coreName);
}
