{
  float lower;
  float upper;
  if (lowerVal == null) {
    lower=Float.NEGATIVE_INFINITY;
  }
 else {
    lower=Float.parseFloat(lowerVal);
  }
  if (upperVal == null) {
    upper=Float.POSITIVE_INFINITY;
  }
 else {
    upper=Float.parseFloat(upperVal);
  }
  final float l=lower;
  final float u=upper;
  if (includeLower && includeUpper) {
    return new ValueSourceScorer(readerContext,this){
      @Override public boolean matches(      int doc){
        if (!exists(doc))         return false;
        float docVal=floatVal(doc);
        return docVal >= l && docVal <= u;
      }
    }
;
  }
 else   if (includeLower && !includeUpper) {
    return new ValueSourceScorer(readerContext,this){
      @Override public boolean matches(      int doc){
        if (!exists(doc))         return false;
        float docVal=floatVal(doc);
        return docVal >= l && docVal < u;
      }
    }
;
  }
 else   if (!includeLower && includeUpper) {
    return new ValueSourceScorer(readerContext,this){
      @Override public boolean matches(      int doc){
        if (!exists(doc))         return false;
        float docVal=floatVal(doc);
        return docVal > l && docVal <= u;
      }
    }
;
  }
 else {
    return new ValueSourceScorer(readerContext,this){
      @Override public boolean matches(      int doc){
        if (!exists(doc))         return false;
        float docVal=floatVal(doc);
        return docVal > l && docVal < u;
      }
    }
;
  }
}
