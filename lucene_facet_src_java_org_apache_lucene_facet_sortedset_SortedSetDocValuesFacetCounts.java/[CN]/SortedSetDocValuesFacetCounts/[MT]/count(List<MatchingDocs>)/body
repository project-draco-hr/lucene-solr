{
  MultiDocValues.OrdinalMap ordinalMap;
  if (dv instanceof MultiDocValues.MultiSortedSetDocValues && matchingDocs.size() > 1) {
    ordinalMap=((MultiSortedSetDocValues)dv).mapping;
  }
 else {
    ordinalMap=null;
  }
  IndexReader origReader=state.getOrigReader();
  for (  MatchingDocs hits : matchingDocs) {
    LeafReader reader=hits.context.reader();
    if (ReaderUtil.getTopLevelContext(hits.context).reader() != origReader) {
      throw new IllegalStateException("the SortedSetDocValuesReaderState provided to this class does not match the reader being searched; you must create a new SortedSetDocValuesReaderState every time you open a new IndexReader");
    }
    SortedSetDocValues segValues=reader.getSortedSetDocValues(field);
    if (segValues == null) {
      continue;
    }
    DocIdSetIterator it=ConjunctionDISI.intersectIterators(Arrays.asList(hits.bits.iterator(),segValues));
    if (ordinalMap != null) {
      final int segOrd=hits.context.ord;
      final LongValues ordMap=ordinalMap.getGlobalOrds(segOrd);
      int numSegOrds=(int)segValues.getValueCount();
      if (hits.totalHits < numSegOrds / 10) {
        for (int doc=it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc=it.nextDoc()) {
          int term=(int)segValues.nextOrd();
          while (term != SortedSetDocValues.NO_MORE_ORDS) {
            counts[(int)ordMap.get(term)]++;
            term=(int)segValues.nextOrd();
          }
        }
      }
 else {
        final int[] segCounts=new int[numSegOrds];
        for (int doc=it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc=it.nextDoc()) {
          int term=(int)segValues.nextOrd();
          while (term != SortedSetDocValues.NO_MORE_ORDS) {
            segCounts[term]++;
            term=(int)segValues.nextOrd();
          }
        }
        for (int ord=0; ord < numSegOrds; ord++) {
          int count=segCounts[ord];
          if (count != 0) {
            counts[(int)ordMap.get(ord)]+=count;
          }
        }
      }
    }
 else {
      for (int doc=it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc=it.nextDoc()) {
        int term=(int)segValues.nextOrd();
        while (term != SortedSetDocValues.NO_MORE_ORDS) {
          counts[term]++;
          term=(int)segValues.nextOrd();
        }
      }
    }
  }
}
