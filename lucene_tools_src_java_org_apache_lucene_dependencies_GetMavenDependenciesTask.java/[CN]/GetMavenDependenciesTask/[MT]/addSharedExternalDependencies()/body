{
  Map<String,SortedSet<ExternalDependency>> sharedDependencies=new HashMap<>();
  for (  String module : interModuleExternalCompileScopeDependencies.keySet()) {
    TreeSet<ExternalDependency> deps=new TreeSet<>();
    sharedDependencies.put(module,deps);
    Set<String> moduleDependencies=interModuleExternalCompileScopeDependencies.get(module);
    if (null != moduleDependencies) {
      for (      String otherArtifactId : moduleDependencies) {
        SortedSet<ExternalDependency> otherExtDeps=allExternalDependencies.get(otherArtifactId);
        if (null != otherExtDeps) {
          for (          ExternalDependency otherDep : otherExtDeps) {
            if (!otherDep.isTestDependency) {
              deps.add(otherDep);
            }
          }
        }
      }
    }
  }
  for (  String module : interModuleExternalTestScopeDependencies.keySet()) {
    SortedSet<ExternalDependency> deps=sharedDependencies.get(module);
    if (null == deps) {
      deps=new TreeSet<>();
      sharedDependencies.put(module,deps);
    }
    Set<String> moduleDependencies=interModuleExternalTestScopeDependencies.get(module);
    if (null != moduleDependencies) {
      for (      String otherArtifactId : moduleDependencies) {
        int testScopePos=otherArtifactId.indexOf(":test");
        boolean isTestScope=false;
        if (-1 != testScopePos) {
          otherArtifactId=otherArtifactId.substring(0,testScopePos);
          isTestScope=true;
        }
        SortedSet<ExternalDependency> otherExtDeps=allExternalDependencies.get(otherArtifactId);
        if (null != otherExtDeps) {
          for (          ExternalDependency otherDep : otherExtDeps) {
            if (otherDep.isTestDependency == isTestScope) {
              if (!deps.contains(otherDep) && (null == allExternalDependencies.get(module) || !allExternalDependencies.get(module).contains(otherDep))) {
                ExternalDependency otherDepTestScope=new ExternalDependency(otherDep.groupId,otherDep.artifactId,otherDep.classifier,true,otherDep.isOptional);
                deps.add(otherDepTestScope);
              }
            }
          }
        }
      }
    }
  }
  for (  String module : sharedDependencies.keySet()) {
    SortedSet<ExternalDependency> deps=allExternalDependencies.get(module);
    if (null == deps) {
      deps=new TreeSet<>();
      allExternalDependencies.put(module,deps);
    }
    for (    ExternalDependency dep : sharedDependencies.get(module)) {
      String dependencyCoordinate=dep.groupId + ":" + dep.artifactId;
      if (globalOptionalExternalDependencies.contains(dependencyCoordinate) || (perModuleOptionalExternalDependencies.containsKey(module) && perModuleOptionalExternalDependencies.get(module).contains(dependencyCoordinate))) {
        dep=new ExternalDependency(dep.groupId,dep.artifactId,dep.classifier,dep.isTestDependency,true);
      }
      deps.add(dep);
    }
  }
}
