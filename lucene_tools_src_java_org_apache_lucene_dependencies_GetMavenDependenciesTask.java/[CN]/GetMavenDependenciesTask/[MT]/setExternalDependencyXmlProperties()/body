{
  for (  String module : internalCompileScopeDependencies.keySet()) {
    StringBuilder compileScopeBuilder=new StringBuilder();
    StringBuilder testScopeBuilder=new StringBuilder();
    SortedSet<ExternalDependency> extDeps=allExternalDependencies.get(module);
    if (null != extDeps) {
      for (      ExternalDependency dep : extDeps) {
        StringBuilder builder=dep.isTestDependency ? testScopeBuilder : compileScopeBuilder;
        appendDependencyXml(builder,dep.groupId,dep.artifactId,"    ",null,dep.isTestDependency,dep.isOptional,dep.classifier,null);
        if (!dep.isTestDependency && modulesWithSeparateCompileAndTestPOMs.contains(module)) {
          appendDependencyXml(testScopeBuilder,dep.groupId,dep.artifactId,"    ",null,true,dep.isOptional,dep.classifier,null);
        }
      }
    }
    if (compileScopeBuilder.length() > 0) {
      compileScopeBuilder.setLength(compileScopeBuilder.length() - 1);
    }
    if (testScopeBuilder.length() > 0) {
      testScopeBuilder.setLength(testScopeBuilder.length() - 1);
    }
    allProperties.setProperty(module + ".external.dependencies",compileScopeBuilder.toString());
    allProperties.setProperty(module + ".external.test.dependencies",testScopeBuilder.toString());
  }
}
