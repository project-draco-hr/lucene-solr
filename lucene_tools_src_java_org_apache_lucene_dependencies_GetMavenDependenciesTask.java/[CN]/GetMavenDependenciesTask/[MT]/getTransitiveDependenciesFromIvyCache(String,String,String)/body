{
  SortedSet<String> transitiveDependencies=new TreeSet<>();
  File ivyXmlFile=new File(new File(new File(ivyCacheDir,groupId),artifactId),"ivy-" + version + ".xml");
  if (!ivyXmlFile.exists()) {
    throw new BuildException("File not found: " + ivyXmlFile.getPath());
  }
  try {
    Document document=documentBuilder.parse(ivyXmlFile);
    String dependencyPath="/ivy-module/dependencies/dependency" + "[   not(starts-with(@conf,'test->'))" + "and not(starts-with(@conf,'provided->'))"+ "and not(starts-with(@conf,'optional->'))]";
    NodeList dependencies=(NodeList)xpath.evaluate(dependencyPath,document,XPathConstants.NODESET);
    for (int i=0; i < dependencies.getLength(); ++i) {
      Element dependency=(Element)dependencies.item(i);
      transitiveDependencies.add(dependency.getAttribute("org") + ':' + dependency.getAttribute("name"));
    }
  }
 catch (  Exception e) {
    throw new BuildException("Exception collecting transitive dependencies for " + groupId + ':'+ artifactId+ ':'+ version+ " from "+ ivyXmlFile.getAbsolutePath(),e);
  }
  return transitiveDependencies;
}
