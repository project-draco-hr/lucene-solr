{
  builder.append(indent).append("<dependency>\n");
  builder.append(indent).append("  <groupId>").append(groupId).append("</groupId>\n");
  builder.append(indent).append("  <artifactId>").append(artifactId).append("</artifactId>\n");
  if (null != version) {
    builder.append(indent).append("  <version>").append(version).append("</version>\n");
  }
  if (isTestDependency) {
    builder.append(indent).append("  <scope>test</scope>\n");
  }
  if (isOptional) {
    builder.append(indent).append("  <optional>true</optional>\n");
  }
  if (null != classifier) {
    builder.append(indent).append("  <classifier>").append(classifier).append("</classifier>\n");
  }
  if (null != exclusions && !exclusions.isEmpty()) {
    builder.append(indent).append("  <exclusions>\n");
    for (    String dependency : exclusions) {
      int splitPos=dependency.indexOf(':');
      String excludedGroupId=dependency.substring(0,splitPos);
      String excludedArtifactId=dependency.substring(splitPos + 1);
      builder.append(indent).append("    <exclusion>\n");
      builder.append(indent).append("      <groupId>").append(excludedGroupId).append("</groupId>\n");
      builder.append(indent).append("      <artifactId>").append(excludedArtifactId).append("</artifactId>\n");
      builder.append(indent).append("    </exclusion>\n");
    }
    builder.append(indent).append("  </exclusions>\n");
  }
  builder.append(indent).append("</dependency>\n");
}
