{
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.set("action",CollectionParams.CollectionAction.CREATE.toString());
  for (  Map.Entry<String,Object> entry : collectionProps.entrySet()) {
    if (entry.getValue() != null)     params.set(entry.getKey(),String.valueOf(entry.getValue()));
  }
  Integer numShards=(Integer)collectionProps.get(NUM_SLICES);
  if (numShards == null) {
    String shardNames=(String)collectionProps.get(SHARDS_PROP);
    numShards=StrUtils.splitSmart(shardNames,',').size();
  }
  Integer replicationFactor=(Integer)collectionProps.get(REPLICATION_FACTOR);
  if (replicationFactor == null) {
    replicationFactor=(Integer)OverseerCollectionMessageHandler.COLL_PROPS.get(REPLICATION_FACTOR);
  }
  if (confSetName != null) {
    params.set("collection.configName",confSetName);
  }
  List<Integer> list=new ArrayList<>();
  list.add(numShards);
  list.add(replicationFactor);
  if (collectionInfos != null) {
    collectionInfos.put(collectionName,list);
  }
  params.set("name",collectionName);
  SolrRequest request=new QueryRequest(params);
  request.setPath("/admin/collections");
  CollectionAdminResponse res=new CollectionAdminResponse();
  res.setResponse(client.request(request));
  return res;
}
