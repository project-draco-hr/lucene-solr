{
  Object fieldTypeName=params.get(QUERY_ANALYZER);
  if (fieldTypeName == null) {
    throw new IllegalArgumentException("Error in configuration: " + QUERY_ANALYZER + " parameter is mandatory");
  }
  FieldType ft=core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());
  Analyzer indexAnalyzer=ft.getAnalyzer();
  Analyzer queryAnalyzer=ft.getQueryAnalyzer();
  String indexPath=params.get(INDEX_PATH) != null ? params.get(INDEX_PATH).toString() : DEFAULT_INDEX_PATH;
  int minPrefixChars=params.get(MIN_PREFIX_CHARS) != null ? Integer.parseInt(params.get(MIN_PREFIX_CHARS).toString()) : AnalyzingInfixSuggester.DEFAULT_MIN_PREFIX_CHARS;
  try {
    return new AnalyzingInfixSuggester(core.getSolrConfig().luceneMatchVersion,new File(indexPath),indexAnalyzer,queryAnalyzer,minPrefixChars);
  }
 catch (  IOException e) {
    throw new RuntimeException();
  }
}
