{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())));
  for (int d=-20; d <= 20; d++) {
    Document doc=new Document();
    doc.add(new IntField("id_int",d,Field.Store.NO));
    doc.add(new NumericDocValuesField("id_int",d));
    doc.add(newStringField("body","body",Field.Store.NO));
    writer.addDocument(doc);
  }
  writer.forceMerge(1);
  BytesRef term0=new BytesRef();
  NumericUtils.intToPrefixCoded(0,0,term0);
  writer.deleteDocuments(new Term("id_int",term0));
  writer.shutdown();
  IndexReader reader=DirectoryReader.open(dir);
  IndexSearcher search=newSearcher(reader);
  assertTrue(reader.hasDeletions());
  ScoreDoc[] result;
  Query q=new TermQuery(new Term("body","body"));
  result=search.search(q,DocValuesRangeFilter.newIntRange("id_int",-20,20,T,T),100).scoreDocs;
  assertEquals("find all",40,result.length);
  result=search.search(q,DocValuesRangeFilter.newIntRange("id_int",0,20,T,T),100).scoreDocs;
  assertEquals("find all",20,result.length);
  result=search.search(q,DocValuesRangeFilter.newIntRange("id_int",-20,0,T,T),100).scoreDocs;
  assertEquals("find all",20,result.length);
  result=search.search(q,DocValuesRangeFilter.newIntRange("id_int",10,20,T,T),100).scoreDocs;
  assertEquals("find all",11,result.length);
  result=search.search(q,DocValuesRangeFilter.newIntRange("id_int",-20,-10,T,T),100).scoreDocs;
  assertEquals("find all",11,result.length);
  reader.close();
  dir.close();
}
