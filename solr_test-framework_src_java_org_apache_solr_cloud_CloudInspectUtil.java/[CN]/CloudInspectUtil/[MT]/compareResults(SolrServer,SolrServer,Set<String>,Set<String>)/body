{
  SolrParams q=SolrTestCaseJ4.params("q","*:*","rows","0","tests","checkShardConsistency(vsControl)");
  SolrDocumentList controlDocList=controlServer.query(q).getResults();
  long controlDocs=controlDocList.getNumFound();
  SolrDocumentList cloudDocList=cloudServer.query(q).getResults();
  long cloudClientDocs=cloudDocList.getNumFound();
  q=SolrTestCaseJ4.params("q","*:*","rows","100000","fl","id","tests","checkShardConsistency(vsControl)/getIds");
  controlDocList=controlServer.query(q).getResults();
  if (controlDocs != controlDocList.getNumFound()) {
    log.error("Something changed! control now " + controlDocList.getNumFound());
  }
  ;
  cloudDocList=cloudServer.query(q).getResults();
  if (cloudClientDocs != cloudDocList.getNumFound()) {
    log.error("Something changed! cloudClient now " + cloudDocList.getNumFound());
  }
  ;
  if (controlDocs != cloudClientDocs && (addFails != null || deleteFails != null)) {
    boolean legal=CloudInspectUtil.checkIfDiffIsLegal(controlDocList,cloudDocList,"controlDocList","cloudDocList",addFails,deleteFails);
    if (legal) {
      return false;
    }
  }
  Set<Map> differences=CloudInspectUtil.showDiff(controlDocList,cloudDocList,"controlDocList","cloudDocList");
  boolean foundId=false;
  StringBuilder ids=new StringBuilder("id:(");
  for (  Map doc : differences) {
    ids.append(" " + doc.get("id"));
    foundId=true;
  }
  ids.append(")");
  if (foundId) {
    q=SolrTestCaseJ4.params("q",ids.toString(),"rows","100000","fl","id,_version_","sort","id asc","tests","checkShardConsistency(vsControl)/getVers");
    SolrDocumentList a=controlServer.query(q).getResults();
    SolrDocumentList b=cloudServer.query(q).getResults();
    log.error("controlClient :" + a + "\n\tcloudClient :"+ b);
  }
  return true;
}
