{
  final TermContext[] contexts=Arrays.copyOf(this.contexts,this.contexts.length);
  for (int i=0; i < contexts.length; ++i) {
    if (contexts[i] == null || contexts[i].topReaderContext != reader.getContext()) {
      contexts[i]=TermContext.build(reader.getContext(),terms[i]);
    }
  }
  int df=0;
  long ttf=0;
  for (  TermContext ctx : contexts) {
    df=Math.max(df,ctx.docFreq());
    if (ctx.totalTermFreq() == -1L) {
      ttf=-1L;
    }
 else     if (ttf != -1L) {
      ttf+=ctx.totalTermFreq();
    }
  }
  for (int i=0; i < contexts.length; ++i) {
    contexts[i]=adjustFrequencies(contexts[i],df,ttf);
  }
  TermQuery[] termQueries=new TermQuery[terms.length];
  for (int i=0; i < terms.length; ++i) {
    termQueries[i]=new TermQuery(terms[i],contexts[i]);
    termQueries[i].setBoost(boosts[i]);
  }
  Query rewritten=rewriteMethod.rewrite(termQueries);
  rewritten.setBoost(getBoost());
  return rewritten;
}
