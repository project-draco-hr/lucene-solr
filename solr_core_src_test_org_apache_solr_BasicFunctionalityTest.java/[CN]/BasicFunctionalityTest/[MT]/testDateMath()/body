{
  clearIndex();
  final String july4="1976-07-04T12:08:56.235Z";
  assertU(adoc("id","1","bday",july4));
  assertU(adoc("id","2","bday","NOW"));
  assertU(adoc("id","3","bday","NOW/HOUR"));
  assertU(adoc("id","4","bday","NOW-30MINUTES"));
  assertU(adoc("id","5","bday","NOW+30MINUTES"));
  assertU(adoc("id","6","bday","NOW+2YEARS"));
  assertU(commit());
  final StringBuilder july4Long=new StringBuilder(july4);
  final int iters=atLeast(10);
  for (int i=0; i < iters; i++) {
    final String val=String.valueOf(atLeast(1));
    july4Long.append("+" + val + "SECONDS-"+ val+ "SECONDS");
  }
  for (  String q : new String[]{"bday:1976-07-04T12\\:08\\:56.45Z/SECOND+235MILLIS","bday:1976-07-04T12\\:08\\:56.123Z/MINUTE+56SECONDS+235MILLIS","bday:\"1976-07-04T12:08:56.45Z/SECOND+235MILLIS\"","bday:\"1976-07-04T12:08:56.123Z/MINUTE+56SECONDS+235MILLIS\"","{!term f=bday}1976-07-04T12:08:56.45Z/SECOND+235MILLIS","{!term f=bday}1976-07-04T12:08:56.123Z/MINUTE+56SECONDS+235MILLIS","{!term f=bday}" + july4,"{!term f=bday}" + july4Long,"bday:\"" + july4Long + "\""}) {
    assertQ("check math on field query: " + q,req("q",q),"*[count(//doc)=1]","//int[@name='id'][.='1']");
  }
  assertQ("check math on absolute date#1",req("q","bday:[* TO " + july4 + "/SECOND]"),"*[count(//doc)=0]");
  assertQ("check math on absolute date#2",req("q","bday:[* TO " + july4 + "/SECOND+1SECOND]"),"*[count(//doc)=1]");
  assertQ("check math on absolute date#3",req("q","bday:[" + july4 + "/SECOND TO "+ july4+ "/SECOND+1SECOND]"),"*[count(//doc)=1]");
  assertQ("check math on absolute date#4",req("q","bday:[" + july4 + "/MINUTE+1MINUTE TO *]"),"*[count(//doc)=5]");
  assertQ("check count for before now",req("q","bday:[* TO NOW]"),"*[count(//doc)=4]");
  assertQ("check count for after now",req("q","bday:[NOW TO *]"),"*[count(//doc)=2]");
  assertQ("check count for old stuff",req("q","bday:[* TO NOW-2YEARS]"),"*[count(//doc)=1]");
  assertQ("check count for future stuff",req("q","bday:[NOW+1MONTH TO *]"),"*[count(//doc)=1]");
  assertQ("check count for near stuff",req("q","bday:[NOW-1MONTH TO NOW+2HOURS]"),"*[count(//doc)=4]");
  assertQ("check counts using fixed NOW",req("q","bday:[NOW/DAY TO NOW/DAY+1DAY]","NOW","205369736000"),"*[count(//doc)=1]");
  assertQ("check counts using fixed NOW and TZ rounding",req("q","bday:[NOW/DAY TO NOW/DAY+1DAY]","TZ","GMT-23","NOW","205369736000"),"*[count(//doc)=0]");
}
