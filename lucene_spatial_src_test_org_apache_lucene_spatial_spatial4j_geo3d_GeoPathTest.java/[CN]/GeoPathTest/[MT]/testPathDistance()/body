{
  GeoPath p;
  GeoPoint gp;
  p=new GeoPath(0.1);
  p.addPoint(0.0,0.0);
  p.addPoint(0.0,0.1);
  p.addPoint(0.0,0.2);
  gp=new GeoPoint(Math.PI * 0.5,0.15);
  assertEquals(Double.MAX_VALUE,p.computeArcDistance(gp),0.0);
  gp=new GeoPoint(0.05,0.15);
  assertEquals(0.15 + 0.05,p.computeArcDistance(gp),0.000001);
  gp=new GeoPoint(0.0,0.12);
  assertEquals(0.12 + 0.0,p.computeArcDistance(gp),0.000001);
  gp=new GeoPoint(-0.15,0.05);
  assertEquals(Double.MAX_VALUE,p.computeArcDistance(gp),0.000001);
  gp=new GeoPoint(0.0,0.25);
  assertEquals(0.20 + 0.05,p.computeArcDistance(gp),0.000001);
  gp=new GeoPoint(0.0,-0.05);
  assertEquals(0.0 + 0.05,p.computeArcDistance(gp),0.000001);
  p=new GeoPath(0.1);
  p.addPoint(0.0,0.0);
  p.addPoint(0.0,0.1);
  p.addPoint(0.0,0.2);
  gp=new GeoPoint(0.05,0.15);
  assertEquals(0.15 + 0.05,p.computeArcDistance(gp),0.000001);
  gp=new GeoPoint(0.0,0.12);
  assertEquals(0.12,p.computeArcDistance(gp),0.000001);
  p=new GeoPath(0.1);
  p.addPoint(-Math.PI * 0.25,-0.5);
  p.addPoint(Math.PI * 0.25,-0.5);
  gp=new GeoPoint(0.0,0.0);
  assertEquals(Double.MAX_VALUE,p.computeArcDistance(gp),0.0);
  gp=new GeoPoint(-0.1,-1.0);
  assertEquals(Double.MAX_VALUE,p.computeArcDistance(gp),0.0);
  gp=new GeoPoint(Math.PI * 0.25 + 0.05,-0.5);
  assertEquals(Math.PI * 0.5 + 0.05,p.computeArcDistance(gp),0.000001);
  gp=new GeoPoint(-Math.PI * 0.25 - 0.05,-0.5);
  assertEquals(0.0 + 0.05,p.computeArcDistance(gp),0.000001);
}
