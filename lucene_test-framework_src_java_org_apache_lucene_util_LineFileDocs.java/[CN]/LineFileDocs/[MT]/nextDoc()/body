{
  String line;
synchronized (this) {
    line=reader.readLine();
    if (line == null) {
      if (LuceneTestCase.VERBOSE) {
        System.out.println("TEST: LineFileDocs: now rewind file...");
      }
      reader.close();
      reader=null;
      open(null);
      line=reader.readLine();
    }
  }
  DocState docState=threadDocs.get();
  if (docState == null) {
    docState=new DocState();
    threadDocs.set(docState);
  }
  int spot=line.indexOf(SEP);
  if (spot == -1) {
    throw new RuntimeException("line: [" + line + "] is in an invalid format !");
  }
  int spot2=line.indexOf(SEP,1 + spot);
  if (spot2 == -1) {
    throw new RuntimeException("line: [" + line + "] is in an invalid format !");
  }
  docState.body.setStringValue(line.substring(1 + spot2,line.length()));
  final String title=line.substring(0,spot);
  docState.title.setStringValue(title);
  if (docState.titleDV != null) {
    docState.titleDV.setBytesValue(new BytesRef(title));
  }
  docState.titleTokenized.setStringValue(title);
  docState.date.setStringValue(line.substring(1 + spot,spot2));
  final int i=id.getAndIncrement();
  docState.id.setStringValue(Integer.toString(i));
  docState.idNum.setIntValue(i);
  if (docState.idNumDV != null) {
    docState.idNumDV.setLongValue(i);
  }
  if (random.nextInt(5) == 4) {
    Document doc=new Document();
    for (    IndexableField field : docState.doc) {
      doc.add(field);
    }
    if (random.nextInt(3) == 1) {
      int x=random.nextInt(4);
      doc.add(new IntPoint("docLength" + x,line.length()));
    }
    if (random.nextInt(3) == 1) {
      int x=random.nextInt(4);
      doc.add(new IntPoint("docTitleLength" + x,title.length()));
    }
    if (random.nextInt(3) == 1) {
      int x=random.nextInt(4);
      doc.add(new NumericDocValuesField("docLength" + x,line.length()));
    }
  }
  return docState.doc;
}
