{
  InputStream is=getClass().getResourceAsStream(path);
  if (is == null) {
    is=new FileInputStream(path);
  }
  File file=new File(path);
  long size;
  if (file.exists()) {
    size=file.length();
  }
 else {
    size=is.available();
  }
  if (path.endsWith(".gz")) {
    is=new GZIPInputStream(is);
    size*=2.8;
  }
  if (path.equals("europarl.lines.txt.gz")) {
    size=15129506L;
  }
 else   if (path.equals("/home/hudson/lucene-data/enwiki.random.lines.txt.gz")) {
    size=3038178822L;
  }
  if (random != null && size > 3) {
    final long seekTo=(random.nextLong() & Long.MAX_VALUE) % (size / 3);
    if (LuceneTestCase.VERBOSE) {
      System.out.println("TEST: LineFileDocs: seek to fp=" + seekTo + " on open");
    }
    is.skip(seekTo);
    CharsetDecoder decoder=Charset.forName("UTF-8").newDecoder().onMalformedInput(CodingErrorAction.IGNORE).onUnmappableCharacter(CodingErrorAction.IGNORE);
    reader=new BufferedReader(new InputStreamReader(is,decoder),BUFFER_SIZE);
    reader.readLine();
  }
}
