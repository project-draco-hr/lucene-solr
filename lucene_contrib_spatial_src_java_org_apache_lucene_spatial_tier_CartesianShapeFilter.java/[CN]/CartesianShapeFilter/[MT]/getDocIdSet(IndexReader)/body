{
  final Bits delDocs=reader.getDeletedDocs();
  final List<Double> area=shape.getArea();
  final int sz=area.size();
  final BytesRef bytesRef=new BytesRef(NumericUtils.BUF_SIZE_LONG);
  if (sz == 1) {
    double boxId=area.get(0).doubleValue();
    NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId),0,bytesRef);
    return new DocIdSet(){
      @Override public DocIdSetIterator iterator() throws IOException {
        return reader.termDocsEnum(delDocs,fieldName,bytesRef);
      }
      @Override public boolean isCacheable(){
        return false;
      }
    }
;
  }
 else {
    final OpenBitSet bits=new OpenBitSet(reader.maxDoc());
    for (int i=0; i < sz; i++) {
      double boxId=area.get(i).doubleValue();
      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId),0,bytesRef);
      final DocsEnum docsEnum=reader.termDocsEnum(delDocs,fieldName,bytesRef);
      if (docsEnum == null)       continue;
      int doc;
      while ((doc=docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {
        bits.fastSet(doc);
      }
    }
    return bits;
  }
}
