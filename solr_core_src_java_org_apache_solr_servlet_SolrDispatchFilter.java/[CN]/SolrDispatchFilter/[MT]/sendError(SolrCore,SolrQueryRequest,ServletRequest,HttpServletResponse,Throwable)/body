{
  Exception exp=null;
  SolrCore localCore=null;
  try {
    SolrQueryResponse solrResp=new SolrQueryResponse();
    if (ex instanceof Exception) {
      solrResp.setException((Exception)ex);
    }
 else {
      solrResp.setException(new RuntimeException(ex));
    }
    if (core == null) {
      localCore=cores.getCore("");
    }
 else {
      localCore=core;
    }
    if (req == null) {
      final SolrParams solrParams;
      if (request instanceof HttpServletRequest) {
        solrParams=SolrRequestParsers.parseQueryString(((HttpServletRequest)request).getQueryString());
      }
 else {
        solrParams=new MapSolrParams(Collections.<String,String>emptyMap());
      }
      req=new SolrQueryRequestBase(core,solrParams){
      }
;
    }
    QueryResponseWriter writer=core.getQueryResponseWriter(req);
    writeResponse(solrResp,response,writer,req,Method.GET);
  }
 catch (  Exception e) {
    exp=e;
  }
 finally {
    try {
      if (exp != null) {
        SimpleOrderedMap info=new SimpleOrderedMap();
        int code=ResponseUtils.getErrorInfo(ex,info,log);
        response.sendError(code,info.toString());
      }
    }
  finally {
      if (core == null && localCore != null) {
        localCore.close();
      }
    }
  }
}
