{
  try {
    String urlstr=coreUrl;
    String queryString=req.getQueryString();
    urlstr+=queryString == null ? "" : "?" + queryString;
    URL url=new URL(urlstr);
    HttpURLConnection con=(HttpURLConnection)url.openConnection();
    con.setRequestMethod(req.getMethod());
    con.setUseCaches(false);
    boolean isPostOrPutRequest="POST".equals(req.getMethod()) || "PUT".equals(req.getMethod());
    if (isPostOrPutRequest) {
      con.setDoOutput(true);
    }
    con.setDoInput(true);
    for (Enumeration<String> e=req.getHeaderNames(); e.hasMoreElements(); ) {
      String headerName=e.nextElement();
      con.setRequestProperty(headerName,req.getHeader(headerName));
    }
    try {
      con.connect();
      InputStream is;
      OutputStream os;
      if (isPostOrPutRequest) {
        is=req.getInputStream();
        os=con.getOutputStream();
        try {
          IOUtils.copyLarge(is,os);
          os.flush();
        }
  finally {
          IOUtils.closeQuietly(os);
          IOUtils.closeQuietly(is);
        }
      }
      resp.setStatus(con.getResponseCode());
      for (Iterator<Entry<String,List<String>>> i=con.getHeaderFields().entrySet().iterator(); i.hasNext(); ) {
        Map.Entry<String,List<String>> mapEntry=i.next();
        String header=mapEntry.getKey();
        if (header != null && !header.equals(TRANSFER_ENCODING_HEADER) && !header.equals(CONNECTION_HEADER)) {
          for (          String value : mapEntry.getValue()) {
            resp.addHeader(mapEntry.getKey(),value);
          }
        }
      }
      resp.setCharacterEncoding(con.getContentEncoding());
      resp.setContentType(con.getContentType());
      is=con.getInputStream();
      os=resp.getOutputStream();
      try {
        IOUtils.copyLarge(is,os);
        os.flush();
      }
  finally {
        IOUtils.closeQuietly(os);
        IOUtils.closeQuietly(is);
      }
    }
  finally {
      con.disconnect();
    }
  }
 catch (  IOException e) {
    sendError(null,solrReq,req,resp,new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Error trying to proxy request for url: " + coreUrl,e));
  }
}
