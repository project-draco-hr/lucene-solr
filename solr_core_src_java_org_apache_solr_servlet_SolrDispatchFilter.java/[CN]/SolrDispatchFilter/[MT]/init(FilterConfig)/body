{
  log.info("SolrDispatchFilter.init(): {}",this.getClass().getClassLoader());
  String exclude=config.getInitParameter("excludePatterns");
  if (exclude != null) {
    String[] excludeArray=exclude.split(",");
    excludePatterns=new ArrayList<>();
    for (    String element : excludeArray) {
      excludePatterns.add(Pattern.compile(element));
    }
  }
  try {
    Properties extraProperties=(Properties)config.getServletContext().getAttribute(PROPERTIES_ATTRIBUTE);
    if (extraProperties == null)     extraProperties=new Properties();
    String solrHome=(String)config.getServletContext().getAttribute(SOLRHOME_ATTRIBUTE);
    if (solrHome == null)     solrHome=SolrResourceLoader.locateSolrHome();
    ExecutorUtil.addThreadLocalProvider(SolrRequestInfo.getInheritableThreadLocalProvider());
    this.cores=createCoreContainer(solrHome,extraProperties);
    if (this.cores.getAuthenticationPlugin() != null) {
      HttpClientConfigurer configurer=this.cores.getAuthenticationPlugin().getDefaultConfigurer();
      if (configurer != null) {
        configurer.configure((DefaultHttpClient)httpClient,new ModifiableSolrParams());
      }
    }
    log.info("user.dir=" + System.getProperty("user.dir"));
  }
 catch (  Throwable t) {
    log.error("Could not start Solr. Check solr/home property and the logs");
    SolrCore.log(t);
    if (t instanceof Error) {
      throw (Error)t;
    }
  }
  log.info("SolrDispatchFilter.init() done");
}
