{
  String muteConsole=System.getProperty(SOLR_LOG_MUTECONSOLE);
  if (muteConsole != null && !Arrays.asList("false","0","off","no").contains(muteConsole.toLowerCase(Locale.ROOT))) {
    muteConsole();
  }
  log.info("SolrDispatchFilter.init(): {}",this.getClass().getClassLoader());
  String exclude=config.getInitParameter("excludePatterns");
  if (exclude != null) {
    String[] excludeArray=exclude.split(",");
    excludePatterns=new ArrayList<>();
    for (    String element : excludeArray) {
      excludePatterns.add(Pattern.compile(element));
    }
  }
  try {
    Properties extraProperties=(Properties)config.getServletContext().getAttribute(PROPERTIES_ATTRIBUTE);
    if (extraProperties == null)     extraProperties=new Properties();
    String solrHome=(String)config.getServletContext().getAttribute(SOLRHOME_ATTRIBUTE);
    ExecutorUtil.addThreadLocalProvider(SolrRequestInfo.getInheritableThreadLocalProvider());
    this.cores=createCoreContainer(solrHome == null ? SolrResourceLoader.locateSolrHome() : Paths.get(solrHome),extraProperties);
    this.httpClient=cores.getUpdateShardHandler().getHttpClient();
    log.info("user.dir=" + System.getProperty("user.dir"));
  }
 catch (  Throwable t) {
    log.error("Could not start Solr. Check solr/home property and the logs");
    SolrCore.log(t);
    if (t instanceof Error) {
      throw (Error)t;
    }
  }
  log.info("SolrDispatchFilter.init() done");
}
