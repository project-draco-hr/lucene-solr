{
  checkArgs(field,lowerPoint,upperPoint);
  this.field=field;
  numDims=lowerPoint.length;
  if (upperPoint.length != numDims) {
    throw new IllegalArgumentException("lowerPoint has length=" + numDims + " but upperPoint has different length="+ upperPoint.length);
  }
  if (lowerInclusive.length != numDims) {
    throw new IllegalArgumentException("lowerInclusive has length=" + lowerInclusive.length + " but expected="+ numDims);
  }
  if (upperInclusive.length != numDims) {
    throw new IllegalArgumentException("upperInclusive has length=" + upperInclusive.length + " but expected="+ numDims);
  }
  this.lowerPoint=lowerPoint;
  this.lowerInclusive=lowerInclusive;
  this.upperPoint=upperPoint;
  this.upperInclusive=upperInclusive;
  int bytesPerDim=-1;
  for (  byte[] value : lowerPoint) {
    if (value != null) {
      if (bytesPerDim == -1) {
        bytesPerDim=value.length;
      }
 else       if (value.length != bytesPerDim) {
        throw new IllegalArgumentException("all dimensions must have same bytes length, but saw " + bytesPerDim + " and "+ value.length);
      }
    }
  }
  for (  byte[] value : upperPoint) {
    if (value != null) {
      if (bytesPerDim == -1) {
        bytesPerDim=value.length;
      }
 else       if (value.length != bytesPerDim) {
        throw new IllegalArgumentException("all dimensions must have same bytes length, but saw " + bytesPerDim + " and "+ value.length);
      }
    }
  }
  if (bytesPerDim == -1) {
    this.bytesPerDim=null;
  }
 else {
    this.bytesPerDim=bytesPerDim;
  }
}
