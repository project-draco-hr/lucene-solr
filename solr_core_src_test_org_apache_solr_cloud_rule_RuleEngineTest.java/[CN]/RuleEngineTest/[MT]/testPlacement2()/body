{
  String s="{" + "  '127.0.0.1:49961_':{" + "    'node':'127.0.0.1:49961_',"+ "    'freedisk':992,"+ "    'cores':1},"+ "  '127.0.0.1:49955_':{"+ "    'node':'127.0.0.1:49955_',"+ "    'freedisk':992,"+ "    'cores':1},"+ "  '127.0.0.1:49952_':{"+ "    'node':'127.0.0.1:49952_',"+ "    'freedisk':992,"+ "    'cores':1},"+ "  '127.0.0.1:49947_':{"+ "    'node':'127.0.0.1:49947_',"+ "    'freedisk':992,"+ "    'cores':1},"+ "  '127.0.0.1:49958_':{"+ "    'node':'127.0.0.1:49958_',"+ "    'freedisk':992,"+ "    'cores':1}}";
  MockSnitch.nodeVsTags=(Map)ZkStateReader.fromJSON(s.getBytes(StandardCharsets.UTF_8));
  Map shardVsReplicaCount=makeMap("shard1",2,"shard2",2);
  List<Rule> rules=parseRules("[{'cores':'<4'}, {" + "'replica':'1',shard:'*','node':'*'}," + " {'freedisk':'>1'}]");
  Map<Position,String> mapping=new ReplicaAssigner(rules,shardVsReplicaCount,Collections.singletonList(MockSnitch.class.getName()),new HashMap(),new ArrayList<>(MockSnitch.nodeVsTags.keySet()),null,null).getNodeMappings();
  assertNotNull(mapping);
  mapping=new ReplicaAssigner(rules,shardVsReplicaCount,Collections.singletonList(MockSnitch.class.getName()),new HashMap(),new ArrayList<>(MockSnitch.nodeVsTags.keySet()),null,null).getNodeMappings();
  assertNotNull(mapping);
}
