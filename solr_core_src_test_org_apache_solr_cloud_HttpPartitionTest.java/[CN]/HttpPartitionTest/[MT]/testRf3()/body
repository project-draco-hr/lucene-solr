{
  String testCollectionName="c8n_1x3";
  createCollectionRetry(testCollectionName,1,3,1);
  cloudClient.setDefaultCollection(testCollectionName);
  sendDoc(1);
  List<Replica> notLeaders=ensureAllReplicasAreActive(testCollectionName,"shard1",1,3,maxWaitSecsToSeeAllActive);
  assertTrue("Expected 2 replicas for collection " + testCollectionName + " but found "+ notLeaders.size()+ "; clusterState: "+ printClusterStateInfo(testCollectionName),notLeaders.size() == 2);
  SocketProxy proxy0=getProxyForReplica(notLeaders.get(0));
  proxy0.close();
  sendDoc(2);
  Thread.sleep(sleepMsBeforeHealPartition);
  proxy0.reopen();
  SocketProxy proxy1=getProxyForReplica(notLeaders.get(1));
  proxy1.close();
  sendDoc(3);
  Thread.sleep(sleepMsBeforeHealPartition);
  proxy1.reopen();
  notLeaders=ensureAllReplicasAreActive(testCollectionName,"shard1",1,3,maxWaitSecsToSeeAllActive);
  sendDoc(4);
  assertDocsExistInAllReplicas(notLeaders,testCollectionName,1,4);
  log.info("testRf3 succeeded ... deleting the " + testCollectionName + " collection");
  try {
    CollectionAdminRequest.Delete req=new CollectionAdminRequest.Delete();
    req.setCollectionName(testCollectionName);
    req.process(cloudClient);
  }
 catch (  Exception e) {
    log.warn("Could not delete collection {} after test completed",testCollectionName);
  }
}
