{
  this.stoptable=CharArraySet.unmodifiableSet(CharArraySet.copy(stopwords));
  this.excltable=CharArraySet.unmodifiableSet(CharArraySet.copy(stemExclusionTable));
  if (stemOverrideDict.isEmpty()) {
    this.stemdict=null;
  }
 else {
    StemmerOverrideFilter.Builder builder=new StemmerOverrideFilter.Builder(false);
    CharArrayMap<String>.EntryIterator iter=stemOverrideDict.entrySet().iterator();
    CharsRef spare=new CharsRef();
    while (iter.hasNext()) {
      char[] nextKey=iter.nextKey();
      spare.copyChars(nextKey,0,nextKey.length);
      builder.add(spare,iter.currentValue());
    }
    try {
      this.stemdict=builder.build();
    }
 catch (    IOException ex) {
      throw new RuntimeException("can not build stem dict",ex);
    }
  }
}
