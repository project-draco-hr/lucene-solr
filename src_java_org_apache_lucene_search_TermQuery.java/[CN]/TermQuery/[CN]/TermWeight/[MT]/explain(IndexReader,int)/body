{
  Explanation result=new Explanation();
  result.setDescription("weight(" + getQuery() + " in "+ doc+ "), product of:");
  Explanation idfExpl=new Explanation(idf,"idf(docFreq=" + reader.docFreq(term) + ")");
  Explanation queryExpl=new Explanation();
  queryExpl.setDescription("queryWeight(" + getQuery() + "), product of:");
  Explanation boostExpl=new Explanation(getBoost(),"boost");
  if (getBoost() != 1.0f)   queryExpl.addDetail(boostExpl);
  queryExpl.addDetail(idfExpl);
  Explanation queryNormExpl=new Explanation(queryNorm,"queryNorm");
  queryExpl.addDetail(queryNormExpl);
  queryExpl.setValue(boostExpl.getValue() * idfExpl.getValue() * queryNormExpl.getValue());
  result.addDetail(queryExpl);
  String field=term.field();
  Explanation fieldExpl=new Explanation();
  fieldExpl.setDescription("fieldWeight(" + term + " in "+ doc+ "), product of:");
  Explanation tfExpl=scorer(reader).explain(doc);
  fieldExpl.addDetail(tfExpl);
  fieldExpl.addDetail(idfExpl);
  Explanation fieldNormExpl=new Explanation();
  byte[] fieldNorms=reader.norms(field);
  float fieldNorm=fieldNorms != null ? Similarity.decodeNorm(fieldNorms[doc]) : 0.0f;
  fieldNormExpl.setValue(fieldNorm);
  fieldNormExpl.setDescription("fieldNorm(field=" + field + ", doc="+ doc+ ")");
  fieldExpl.addDetail(fieldNormExpl);
  fieldExpl.setValue(tfExpl.getValue() * idfExpl.getValue() * fieldNormExpl.getValue());
  result.addDetail(fieldExpl);
  result.setValue(queryExpl.getValue() * fieldExpl.getValue());
  if (queryExpl.getValue() == 1.0f)   return fieldExpl;
  return result;
}
