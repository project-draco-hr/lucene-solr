{
  aStreamWriter.writeStartElement(LOCALNAME_RSS,this.extensionAttributes);
  List<GOMAttribute> xmlNamespaceAttributes=getXmlNamespaceAttributes();
  for (  GOMAttribute attribute : xmlNamespaceAttributes) {
    aStreamWriter.writeAttribute(attribute);
  }
  if (this.defaultNamespace != null)   aStreamWriter.writeNamespace(this.defaultNamespace);
  for (  GOMNamespace namespace : this.namespaces) {
    aStreamWriter.writeNamespace(namespace);
  }
  aStreamWriter.writeAttribute(RSS_VERSION_ATTRIBUTE);
  aStreamWriter.writeStartElement(RSS_CHANNEL_ELEMENT_NAME);
  if (this.id != null)   this.id.writeRssOutput(aStreamWriter);
  if (this.title != null)   this.title.writeRssOutput(aStreamWriter);
  if (this.subtitle != null)   this.subtitle.writeRssOutput(aStreamWriter);
  if (this.rights != null)   this.rights.writeRssOutput(aStreamWriter);
  for (  GOMAuthor authors : this.authors) {
    authors.writeRssOutput(aStreamWriter,"managingEditor");
  }
  for (  GOMCategory category : this.categories) {
    category.writeRssOutput(aStreamWriter);
  }
  for (  GOMLink link : this.links) {
    link.writeRssOutput(aStreamWriter);
  }
  if (this.updated != null) {
    aStreamWriter.writeSimpleXMLElement("lastBuildDate",GOMUtils.buildRfc822Date(this.updated.getDate().getTime()),null);
  }
  if (this.logo != null || this.icon != null) {
    aStreamWriter.writeStartElement("image");
    if (this.logo != null)     this.logo.writeRssOutput(aStreamWriter);
 else     this.icon.writeRssOutput(aStreamWriter);
    aStreamWriter.writeEndElement();
  }
  if (this.generator != null)   this.generator.writeRssOutput(aStreamWriter);
  if (this.itemsPerPageElement != null)   this.itemsPerPageElement.writeRssOutput(aStreamWriter);
  if (this.startIndexElement != null)   this.startIndexElement.writeRssOutput(aStreamWriter);
  for (  GOMExtension extension : this.extensions) {
    extension.writeRssOutput(aStreamWriter);
  }
  for (  GOMExtension extension : this.extensions) {
    extension.writeRssOutput(aStreamWriter);
  }
  for (  GOMEntry entry : this.entries) {
    entry.writeRssOutput(aStreamWriter);
  }
  aStreamWriter.writeEndElement();
  aStreamWriter.writeEndElement();
}
