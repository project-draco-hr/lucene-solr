{
synchronized (modifyCurrentIndexLock) {
    ensureOpen();
    final Directory dir=this.spellIndex;
    final IndexWriter writer=new IndexWriter(dir,config);
    IndexSearcher indexSearcher=obtainSearcher();
    final List<TermsEnum> termsEnums=new ArrayList<TermsEnum>();
    final IndexReader reader=searcher.getIndexReader();
    if (reader.maxDoc() > 0) {
      for (      final AtomicReaderContext ctx : reader.leaves()) {
        Terms terms=ctx.reader().terms(F_WORD);
        if (terms != null)         termsEnums.add(terms.iterator(null));
      }
    }
    boolean isEmpty=termsEnums.isEmpty();
    try {
      BytesRefIterator iter=dict.getWordsIterator();
      BytesRef currentTerm;
      terms:       while ((currentTerm=iter.next()) != null) {
        String word=currentTerm.utf8ToString();
        int len=word.length();
        if (len < 3) {
          continue;
        }
        if (!isEmpty) {
          for (          TermsEnum te : termsEnums) {
            if (te.seekExact(currentTerm,false)) {
              continue terms;
            }
          }
        }
        Document doc=createDocument(word,getMin(len),getMax(len));
        writer.addDocument(doc);
      }
    }
  finally {
      releaseSearcher(indexSearcher);
    }
    if (fullMerge) {
      writer.forceMerge(1);
    }
    writer.close();
    swapSearcher(dir);
  }
}
