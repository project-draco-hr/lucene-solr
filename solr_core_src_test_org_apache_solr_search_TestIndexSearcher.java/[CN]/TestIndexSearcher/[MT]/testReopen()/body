{
  assertU(adoc("id","1","v_t","Hello Dude","v_s1","string1"));
  assertU(adoc("id","2","v_t","Hello Yonik","v_s1","string2"));
  assertU(commit());
  SolrQueryRequest sr1=req("q","foo");
  IndexReader r1=sr1.getSearcher().getRawReader();
  String sval1=getStringVal(sr1,"v_s1",0);
  assertEquals("string1",sval1);
  assertU(adoc("id","3","v_s1","{!literal}"));
  assertU(adoc("id","4","v_s1","other stuff"));
  assertU(commit());
  SolrQueryRequest sr2=req("q","foo");
  IndexReader r2=sr2.getSearcher().getRawReader();
  assertEquals(r1.leaves().get(0).reader(),r2.leaves().get(0).reader());
  assertU(adoc("id","5","v_f","3.14159"));
  assertU(adoc("id","6","v_f","8983","v_s1","string6"));
  assertU(commit());
  SolrQueryRequest sr3=req("q","foo");
  IndexReader r3=sr3.getSearcher().getRawReader();
  assertEquals(r2.leaves().get(0).reader(),r3.leaves().get(0).reader());
  assertEquals(r2.leaves().get(1).reader(),r3.leaves().get(1).reader());
  sr1.close();
  sr2.close();
  int baseRefCount=r3.getRefCount();
  assertEquals(1,baseRefCount);
  Object sr3SearcherRegAt=sr3.getSearcher().getStatistics().get("registeredAt");
  assertU(commit());
  SolrQueryRequest sr4=req("q","foo");
  assertSame("nothing changed, searcher should be the same",sr3.getSearcher(),sr4.getSearcher());
  assertEquals("nothing changed, searcher should not have been re-registered",sr3SearcherRegAt,sr4.getSearcher().getStatistics().get("registeredAt"));
  IndexReader r4=sr4.getSearcher().getRawReader();
  assertU(adoc("id","7","v_f","7574"));
  assertU(commit());
  assertSame(r3,r4);
  assertEquals(baseRefCount,r4.getRefCount());
  sr3.close();
  assertEquals(baseRefCount,r4.getRefCount());
  sr4.close();
  assertEquals(baseRefCount - 1,r4.getRefCount());
  SolrQueryRequest sr5=req("q","foo");
  IndexReaderContext rCtx5=sr5.getSearcher().getTopReaderContext();
  assertU(delI("1"));
  assertU(commit());
  SolrQueryRequest sr6=req("q","foo");
  IndexReaderContext rCtx6=sr6.getSearcher().getTopReaderContext();
  assertEquals(1,rCtx6.leaves().get(0).reader().numDocs());
  assertTrue(!rCtx5.leaves().get(0).reader().equals(rCtx6.leaves().get(0).reader()));
  sr5.close();
  sr6.close();
}
