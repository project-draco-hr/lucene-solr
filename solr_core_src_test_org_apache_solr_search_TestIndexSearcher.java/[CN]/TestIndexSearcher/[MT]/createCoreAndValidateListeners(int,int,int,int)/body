{
  CoreContainer cores=h.getCoreContainer();
  CoreDescriptor cd=h.getCore().getCoreDescriptor();
  SolrCore newCore=null;
  MockSearcherListener.numberOfTimesCalled=new AtomicInteger();
  MockSearcherListener.numberOfTimesCalledFirstSearcher=new AtomicInteger();
  try {
    CoreDescriptor newCd=new CoreDescriptor(cores,"core1",cd.getInstanceDir(),"config","solrconfig-searcher-listeners1.xml");
    newCore=cores.create(newCd);
    assertNotNull(newCore.getSearchComponent("mock"));
    assertEquals(MockSearchComponent.class,newCore.getSearchComponent("mock").getClass());
    assertEquals(numTimesCalled,MockSearcherListener.numberOfTimesCalled.get());
    assertEquals(numTimesCalledFirstSearcher,MockSearcherListener.numberOfTimesCalledFirstSearcher.get());
    addDummyDoc(newCore);
    Future<?>[] future=new Future[1];
    newCore.getSearcher(true,false,future);
    future[0].get();
    assertEquals(numTimesCalledAfterGetSearcher,MockSearcherListener.numberOfTimesCalled.get());
    assertEquals(numTimesCalledFirstSearcherAfterGetSearcher,MockSearcherListener.numberOfTimesCalledFirstSearcher.get());
  }
  finally {
    if (newCore != null) {
      cores.unload("core1");
    }
  }
}
