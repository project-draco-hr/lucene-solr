{
  String prologFilename=null;
  String indexDir=null;
  if (args.length == 2) {
    prologFilename=args[0];
    indexDir=args[1];
  }
 else {
    usage();
    System.exit(1);
  }
  if (!(new File(prologFilename)).canRead()) {
    System.err.println("Error: cannot read Prolog file: " + prologFilename);
    System.exit(1);
  }
  if ((new File(indexDir)).isDirectory()) {
    System.err.println("Error: index directory already exists: " + indexDir);
    System.err.println("Please specify a name of a non-existent directory");
    System.exit(1);
  }
  System.out.println("Opening Prolog file " + prologFilename);
  final FileInputStream fis=new FileInputStream(prologFilename);
  final DataInputStream dis=new DataInputStream(fis);
  String line;
  final Map word2Nums=new HashMap();
  final Map num2Words=new HashMap();
  int ndecent=0;
  int mod=1;
  int row=1;
  while ((line=dis.readLine()) != null) {
    String oline=line;
    if ((++row) % mod == 0) {
      mod*=2;
      System.out.println("" + row + " "+ line+ " "+ word2Nums.size()+ " "+ num2Words.size()+ " ndecent="+ ndecent);
    }
    if (!line.startsWith("s(")) {
      System.err.println("OUCH: " + line);
      System.exit(1);
    }
    line=line.substring(2);
    int comma=line.indexOf(',');
    String num=line.substring(0,comma);
    int q1=line.indexOf('\'');
    line=line.substring(q1 + 1);
    int q2=line.indexOf('\'');
    String word=line.substring(0,q2).toLowerCase();
    if (!isDecent(word)) {
      ndecent++;
      continue;
    }
    List lis=(List)word2Nums.get(word);
    if (lis == null) {
      lis=new LinkedList();
      lis.add(num);
      word2Nums.put(word,lis);
    }
 else     lis.add(num);
    lis=(List)num2Words.get(num);
    if (lis == null) {
      lis=new LinkedList();
      lis.add(word);
      num2Words.put(num,lis);
    }
 else     lis.add(word);
  }
  fis.close();
  dis.close();
  index(indexDir,word2Nums,num2Words);
}
