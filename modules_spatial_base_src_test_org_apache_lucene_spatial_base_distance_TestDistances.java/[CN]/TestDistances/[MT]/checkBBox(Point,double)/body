{
  String msg="ctr: " + ctr + " dist: "+ dist;
  Rectangle r=dc().calcBoxByDistFromPt(ctr,dist,ctx);
  double horizAxisLat=dc().calcBoxByDistFromPtHorizAxis(ctr,dist,ctx);
  if (!Double.isNaN(horizAxisLat))   Assert.assertTrue(r.relate_yRange(horizAxisLat,horizAxisLat,ctx).intersects());
  if (r.getWidth() >= 180) {
    double calcDist=dc().distance(ctr,r.getMinX(),r.getMaxY() == 90 ? 90 : -90);
    Assert.assertTrue(msg,calcDist <= dist + EPS);
  }
 else {
    Point tPt=findClosestPointOnVertToPoint(r.getMinX(),r.getMinY(),r.getMaxY(),ctr);
    double calcDist=dc().distance(ctr,tPt);
    Assert.assertEquals(msg,dist,calcDist,EPS);
    Assert.assertEquals(msg,tPt.getY(),horizAxisLat,EPS);
  }
  double topDist=dc().distance(ctr,ctr.getX(),r.getMaxY());
  if (r.getMaxY() == 90)   Assert.assertTrue(msg,topDist <= dist + EPS);
 else   Assert.assertEquals(msg,dist,topDist,EPS);
  double botDist=dc().distance(ctr,ctr.getX(),r.getMinY());
  if (r.getMinY() == -90)   Assert.assertTrue(msg,botDist <= dist + EPS);
 else   Assert.assertEquals(msg,dist,botDist,EPS);
}
