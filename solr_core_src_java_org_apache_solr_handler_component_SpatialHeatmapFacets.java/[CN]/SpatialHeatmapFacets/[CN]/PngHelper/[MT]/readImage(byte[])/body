{
  ImageInputStream imageInputStream=new ImageInputStreamImpl(){
    @Override public int read() throws IOException {
      checkClosed();
      bitOffset=0;
      if (streamPos >= bytes.length) {
        return -1;
      }
 else {
        return bytes[(int)streamPos++];
      }
    }
    @Override public int read(    byte[] b,    int off,    int len) throws IOException {
      checkClosed();
      bitOffset=0;
      if (streamPos >= bytes.length) {
        return -1;
      }
 else {
        int copyLen=Math.min(len,bytes.length - (int)streamPos);
        System.arraycopy(bytes,(int)streamPos,b,off,copyLen);
        streamPos+=copyLen;
        return copyLen;
      }
    }
    @Override public long length(){
      return bytes.length;
    }
    @Override public boolean isCached(){
      return true;
    }
    @Override public boolean isCachedMemory(){
      return true;
    }
  }
;
  try {
    ImageReader imageReader=imageReaderSpi.createReaderInstance();
    imageReader.setInput(imageInputStream,false,true);
    return imageReader.read(0);
  }
 catch (  IOException e) {
    throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Problem reading png heatmap: " + e);
  }
}
