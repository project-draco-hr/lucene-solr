{
  long startTimeNano=System.nanoTime();
  BufferedImage image=PngHelper.newImage(columns,rows);
  for (int c=0; c < columns; c++) {
    for (int r=0; r < rows; r++) {
      PngHelper.writeCountAtColumnRow(image,rows,c,r,counts[c * rows + r]);
    }
  }
  byte[] bytes=PngHelper.writeImage(image);
  long durationMs=TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTimeNano);
  log.debug("heatmap nativeSize={} pngSize={} pngTime={}",(counts.length * 4),bytes.length,durationMs);
  if (rb != null && rb.isDebugTimings()) {
    rb.addDebug(durationMs,"timing","heatmap png generation");
  }
  return bytes;
}
