{
  DocValues.Type leftType=left.type();
  assertEquals(info,leftType,right.type());
switch (leftType) {
case VAR_INTS:
case FIXED_INTS_8:
case FIXED_INTS_16:
case FIXED_INTS_32:
case FIXED_INTS_64:
    for (int i=0; i < leftReader.maxDoc(); i++) {
      assertEquals(info,left.getInt(i),right.getInt(i));
    }
  break;
case FLOAT_32:
case FLOAT_64:
for (int i=0; i < leftReader.maxDoc(); i++) {
  assertEquals(info,left.getFloat(i),right.getFloat(i),0F);
}
break;
case BYTES_FIXED_STRAIGHT:
case BYTES_FIXED_DEREF:
case BYTES_VAR_STRAIGHT:
case BYTES_VAR_DEREF:
BytesRef b1=new BytesRef();
BytesRef b2=new BytesRef();
for (int i=0; i < leftReader.maxDoc(); i++) {
left.getBytes(i,b1);
right.getBytes(i,b2);
assertEquals(info,b1,b2);
}
break;
case BYTES_VAR_SORTED:
case BYTES_FIXED_SORTED:
}
}
