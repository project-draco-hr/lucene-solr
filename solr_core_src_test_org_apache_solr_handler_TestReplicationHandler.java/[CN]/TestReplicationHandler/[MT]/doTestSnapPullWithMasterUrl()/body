{
  slave.copyConfigFile(CONF_DIR + "solrconfig-slave1.xml","solrconfig.xml");
  slaveJetty.stop();
  slaveJetty=createJetty(slave);
  slaveClient=createNewSolrServer(slaveJetty.getLocalPort());
  masterClient.deleteByQuery("*:*");
  slaveClient.deleteByQuery("*:*");
  slaveClient.commit();
  nDocs--;
  for (int i=0; i < nDocs; i++)   index(masterClient,"id",i,"name","name = " + i);
  String masterUrl=buildUrl(masterJetty.getLocalPort()) + "/update?prepareCommit=true";
  URL url=new URL(masterUrl);
  masterClient.commit();
  NamedList masterQueryRsp=rQuery(nDocs,"*:*",masterClient);
  SolrDocumentList masterQueryResult=(SolrDocumentList)masterQueryRsp.get("response");
  assertEquals(nDocs,masterQueryResult.getNumFound());
  masterUrl=buildUrl(slaveJetty.getLocalPort()) + "/replication?command=fetchindex&masterUrl=";
  masterUrl+=buildUrl(masterJetty.getLocalPort()) + "/replication";
  url=new URL(masterUrl);
  InputStream stream=url.openStream();
  try {
    stream.close();
  }
 catch (  IOException e) {
  }
  NamedList slaveQueryRsp=rQuery(nDocs,"*:*",slaveClient);
  SolrDocumentList slaveQueryResult=(SolrDocumentList)slaveQueryRsp.get("response");
  assertEquals(nDocs,slaveQueryResult.getNumFound());
  String cmp=BaseDistributedSearchTestCase.compare(masterQueryResult,slaveQueryResult,0,null);
  assertEquals(null,cmp);
  for (int i=nDocs; i < nDocs + 3; i++)   index(slaveClient,"id",i,"name","name = " + i);
  slaveClient.commit();
  pullFromSlaveToMaster();
  rQuery(nDocs + 3,"*:*",masterClient);
  slaveQueryRsp=rQuery(nDocs + 3,"*:*",slaveClient);
  slaveQueryResult=(SolrDocumentList)slaveQueryRsp.get("response");
  assertEquals(nDocs + 3,slaveQueryResult.getNumFound());
  masterQueryRsp=rQuery(nDocs + 3,"*:*",masterClient);
  masterQueryResult=(SolrDocumentList)masterQueryRsp.get("response");
  cmp=BaseDistributedSearchTestCase.compare(masterQueryResult,slaveQueryResult,0,null);
  assertEquals(null,cmp);
  assertVersions(masterClient,slaveClient);
  pullFromSlaveToMaster();
  slaveQueryRsp=rQuery(nDocs + 3,"*:*",slaveClient);
  slaveQueryResult=(SolrDocumentList)slaveQueryRsp.get("response");
  assertEquals(nDocs + 3,slaveQueryResult.getNumFound());
  masterQueryRsp=rQuery(nDocs + 3,"*:*",masterClient);
  masterQueryResult=(SolrDocumentList)masterQueryRsp.get("response");
  cmp=BaseDistributedSearchTestCase.compare(masterQueryResult,slaveQueryResult,0,null);
  assertEquals(null,cmp);
  assertVersions(masterClient,slaveClient);
  for (int i=nDocs + 3; i < nDocs + 7; i++)   index(masterClient,"id",i,"name","name = " + i);
  masterClient.commit();
  pullFromSlaveToMaster();
  rQuery((int)slaveQueryResult.getNumFound(),"*:*",masterClient);
  slaveQueryRsp=rQuery(nDocs + 3,"*:*",slaveClient);
  slaveQueryResult=(SolrDocumentList)slaveQueryRsp.get("response");
  assertEquals(nDocs + 3,slaveQueryResult.getNumFound());
  masterQueryRsp=rQuery(nDocs + 3,"*:*",masterClient);
  masterQueryResult=(SolrDocumentList)masterQueryRsp.get("response");
  cmp=BaseDistributedSearchTestCase.compare(masterQueryResult,slaveQueryResult,0,null);
  assertEquals(null,cmp);
  assertVersions(masterClient,slaveClient);
  pullFromSlaveToMaster();
  slaveQueryRsp=rQuery(nDocs + 3,"*:*",slaveClient);
  slaveQueryResult=(SolrDocumentList)slaveQueryRsp.get("response");
  assertEquals(nDocs + 3,slaveQueryResult.getNumFound());
  masterQueryRsp=rQuery(nDocs + 3,"*:*",masterClient);
  masterQueryResult=(SolrDocumentList)masterQueryRsp.get("response");
  cmp=BaseDistributedSearchTestCase.compare(masterQueryResult,slaveQueryResult,0,null);
  assertEquals(null,cmp);
  assertVersions(masterClient,slaveClient);
  NamedList<Object> details=getDetails(masterClient);
  details=getDetails(slaveClient);
  checkForSingleIndex(masterJetty);
  checkForSingleIndex(slaveJetty);
}
