{
  boolean useStraightStandardDirectory=random().nextBoolean();
  if (useStraightStandardDirectory) {
    useFactory(null);
  }
  final String SLAVE_SCHEMA_1="schema-replication1.xml";
  final String SLAVE_SCHEMA_2="schema-replication2.xml";
  String slaveSchema=SLAVE_SCHEMA_1;
  try {
    slave.copyConfigFile(CONF_DIR + "solrconfig-slave1.xml","solrconfig.xml");
    slave.copyConfigFile(CONF_DIR + slaveSchema,"schema.xml");
    slaveJetty.stop();
    slaveJetty=createJetty(slave);
    slaveClient.shutdown();
    slaveClient=createNewSolrClient(slaveJetty.getLocalPort());
    master.copyConfigFile(CONF_DIR + "solrconfig-master3.xml","solrconfig.xml");
    masterJetty.stop();
    masterJetty=createJetty(master);
    masterClient.shutdown();
    masterClient=createNewSolrClient(masterJetty.getLocalPort());
    masterClient.deleteByQuery("*:*");
    slaveClient.deleteByQuery("*:*");
    slaveClient.commit();
    int maxDocs=TEST_NIGHTLY ? 1000 : 200;
    int rounds=TEST_NIGHTLY ? 80 : 8;
    int totalDocs=0;
    int id=0;
    for (int x=0; x < rounds; x++) {
      final boolean confCoreReload=random().nextBoolean();
      if (confCoreReload) {
        slaveSchema=slaveSchema.equals(SLAVE_SCHEMA_1) ? SLAVE_SCHEMA_2 : SLAVE_SCHEMA_1;
        master.copyConfigFile(CONF_DIR + slaveSchema,"schema.xml");
      }
      int docs=random().nextInt(maxDocs) + 1;
      for (int i=0; i < docs; i++) {
        index(masterClient,"id",id++,"name","name = " + i);
      }
      totalDocs+=docs;
      masterClient.commit();
      NamedList masterQueryRsp=rQuery(totalDocs,"*:*",masterClient);
      SolrDocumentList masterQueryResult=(SolrDocumentList)masterQueryRsp.get("response");
      assertEquals(totalDocs,masterQueryResult.getNumFound());
      Date slaveCoreStart=watchCoreStartAt(slaveClient,30 * 1000,null);
      pullFromMasterToSlave();
      if (confCoreReload) {
        watchCoreStartAt(slaveClient,30 * 1000,slaveCoreStart);
      }
      NamedList slaveQueryRsp=rQuery(totalDocs,"*:*",slaveClient);
      SolrDocumentList slaveQueryResult=(SolrDocumentList)slaveQueryRsp.get("response");
      assertEquals(totalDocs,slaveQueryResult.getNumFound());
      String cmp=BaseDistributedSearchTestCase.compare(masterQueryResult,slaveQueryResult,0,null);
      assertEquals(null,cmp);
      assertVersions(masterClient,slaveClient);
      checkForSingleIndex(masterJetty);
      checkForSingleIndex(slaveJetty);
      if (random().nextBoolean()) {
        for (int i=0; i < 3; i++) {
          index(slaveClient,"id",id++,"name","name = " + i);
        }
        slaveClient.commit();
      }
    }
  }
  finally {
    if (useStraightStandardDirectory) {
      resetFactory();
    }
  }
}
