{
  boolean failed=false;
  int hits=0;
  Directory directory=newDirectory();
  try {
    CharArraySet stops=CharArraySet.EMPTY_SET;
    Analyzer indexerAnalyzer=new StandardAnalyzer(TEST_VERSION_CURRENT,stops);
    IndexWriterConfig config=new IndexWriterConfig(TEST_VERSION_CURRENT,indexerAnalyzer);
    IndexWriter writer=new IndexWriter(directory,config);
    String FIELD="content";
    Document d=new Document();
    d.add(new TextField(FIELD,"clockwork orange",Field.Store.YES));
    writer.addDocument(d);
    writer.close();
    IndexReader indexReader=DirectoryReader.open(directory);
    IndexSearcher searcher=new IndexSearcher(indexReader);
    BooleanQuery query=new BooleanQuery();
    SpanQuery sq1=new SpanTermQuery(new Term(FIELD,"clockwork"));
    SpanQuery sq2=new SpanTermQuery(new Term(FIELD,"clckwork"));
    query.add(sq1,BooleanClause.Occur.SHOULD);
    query.add(sq2,BooleanClause.Occur.SHOULD);
    TopScoreDocCollector collector=TopScoreDocCollector.create(1000,true);
    searcher.search(query,collector);
    hits=collector.topDocs().scoreDocs.length;
    for (    ScoreDoc scoreDoc : collector.topDocs().scoreDocs) {
      System.out.println(scoreDoc.doc);
    }
    indexReader.close();
  }
 catch (  java.lang.ArrayIndexOutOfBoundsException e) {
    failed=true;
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  assertEquals("Bug in boolean query composed of span queries",failed,false);
  assertEquals("Bug in boolean query composed of span queries",hits,1);
  directory.close();
}
