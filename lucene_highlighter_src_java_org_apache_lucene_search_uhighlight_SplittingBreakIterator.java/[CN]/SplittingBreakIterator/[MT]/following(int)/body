{
  if (offset + 1 < sliceStartIdx || offset + 1 > sliceEndIdx) {
    if (offset == text.length()) {
      last();
      return DONE;
    }
    sliceStartIdx=text.lastIndexOf(sliceChar,offset);
    if (sliceStartIdx == -1) {
      sliceStartIdx=0;
    }
 else {
      sliceStartIdx++;
    }
    sliceEndIdx=text.indexOf(sliceChar,Math.max(offset + 1,sliceStartIdx));
    if (sliceEndIdx == -1) {
      sliceEndIdx=text.length();
    }
    if (sliceStartIdx != sliceEndIdx) {
      baseIter.setText(text.substring(sliceStartIdx,sliceEndIdx));
    }
  }
  if (sliceStartIdx == sliceEndIdx) {
    return current=offset + 1;
  }
 else {
    if (offset == sliceStartIdx - 1) {
      return current=sliceStartIdx + baseIter.first();
    }
 else {
      return current=sliceStartIdx + baseIter.following(offset - sliceStartIdx);
    }
  }
}
