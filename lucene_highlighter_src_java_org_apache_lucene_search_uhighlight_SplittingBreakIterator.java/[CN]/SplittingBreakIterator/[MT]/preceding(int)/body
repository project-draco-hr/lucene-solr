{
  if (offset - 1 < sliceStartIdx || offset - 1 > sliceEndIdx) {
    if (offset == 0) {
      first();
      return DONE;
    }
    sliceEndIdx=text.indexOf(sliceChar,offset);
    if (sliceEndIdx == -1) {
      sliceEndIdx=text.length();
    }
    sliceStartIdx=text.lastIndexOf(sliceChar,offset - 1);
    if (sliceStartIdx == -1) {
      sliceStartIdx=0;
    }
 else {
      sliceStartIdx=Math.min(sliceStartIdx + 1,sliceEndIdx);
    }
    if (sliceStartIdx != sliceEndIdx) {
      baseIter.setText(text.substring(sliceStartIdx,sliceEndIdx));
    }
  }
  if (sliceStartIdx == sliceEndIdx) {
    return current=offset - 1;
  }
 else {
    if (offset == sliceEndIdx + 1) {
      return current=sliceStartIdx + baseIter.last();
    }
 else {
      return current=sliceStartIdx + baseIter.preceding(offset - sliceStartIdx);
    }
  }
}
