{
  SolrCore core=h.getCore();
  MoreLikeThisHandler mlt=new MoreLikeThisHandler();
  ModifiableSolrParams params=new ModifiableSolrParams();
  SolrQueryRequestBase req=new SolrQueryRequestBase(core,params){
  }
;
  try {
    mlt.handleRequestBody(req,new SolrQueryResponse());
  }
 catch (  Exception ex) {
  }
  try {
    ArrayList<ContentStream> streams=new ArrayList<ContentStream>(2);
    streams.add(new ContentStreamBase.StringStream("hello"));
    streams.add(new ContentStreamBase.StringStream("there"));
    req.setContentStreams(streams);
    mlt.handleRequestBody(req,new SolrQueryResponse());
  }
 catch (  Exception ex) {
  }
  assertU(adoc("id","42","name","Tom Cruise","subword","Top Gun","subword","Risky Business","subword","The Color of Money","subword","Minority Report","subword","Days of Thunder","subword","Eyes Wide Shut","subword","Far and Away","foo_ti","10"));
  assertU(adoc("id","43","name","Tom Hanks","subword","The Green Mile","subword","Forest Gump","subword","Philadelphia Story","subword","Big","subword","Cast Away","foo_ti","10"));
  assertU(adoc("id","44","name","Harrison Ford","subword","Star Wars","subword","Indiana Jones","subword","Patriot Games","subword","Regarding Henry"));
  assertU(adoc("id","45","name","George Harrison","subword","Yellow Submarine","subword","Help","subword","Magical Mystery Tour","subword","Sgt. Peppers Lonley Hearts Club Band"));
  assertU(adoc("id","46","name","Nicole Kidman","subword","Batman","subword","Days of Thunder","subword","Eyes Wide Shut","subword","Far and Away"));
  assertU(commit());
  params.set(CommonParams.Q,"id:42");
  params.set(MoreLikeThisParams.MLT,"true");
  params.set(MoreLikeThisParams.SIMILARITY_FIELDS,"name,subword,foo_ti");
  params.set(MoreLikeThisParams.INTERESTING_TERMS,"details");
  params.set(MoreLikeThisParams.MIN_TERM_FREQ,"1");
  params.set(MoreLikeThisParams.MIN_DOC_FREQ,"1");
  params.set("indent","true");
  SolrQueryRequest mltreq=new LocalSolrQueryRequest(core,params);
  assertQ("morelikethis - tom cruise",mltreq,"//result/doc[1]/int[@name='id'][.='46']","//result/doc[2]/int[@name='id'][.='43']");
  params.set(CommonParams.Q,"id:44");
  assertQ("morelike this - harrison ford",mltreq,"//result/doc[1]/int[@name='id'][.='45']");
  params.set(CommonParams.Q,"{!field f=id}44");
  assertQ(mltreq,"//result/doc[1]/int[@name='id'][.='45']");
  params.set(CommonParams.Q,"id:42");
  params.set(MoreLikeThisParams.QF,"name^5.0 subword^0.1");
  assertQ("morelikethis with weights",mltreq,"//result/doc[1]/int[@name='id'][.='43']","//result/doc[2]/int[@name='id'][.='46']");
  params.set(CommonParams.QT,"/mlt");
  params.set(CommonParams.Q,"{!field f=id}44");
  assertQ(mltreq,"//result/doc[1]/int[@name='id'][.='45']");
  params.set(CommonParams.QT,"/mlt");
  params.set("debugQuery","true");
  assertQ(mltreq,"//result/doc[1]/int[@name='id'][.='45']","//lst[@name='debug']/lst[@name='explain']");
}
