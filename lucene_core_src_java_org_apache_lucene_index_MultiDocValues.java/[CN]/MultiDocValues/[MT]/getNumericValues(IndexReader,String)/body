{
  final List<AtomicReaderContext> leaves=r.leaves();
  final int size=leaves.size();
  if (size == 0) {
    return null;
  }
 else   if (size == 1) {
    return leaves.get(0).reader().getNumericDocValues(field);
  }
  boolean anyReal=false;
  final NumericDocValues[] values=new NumericDocValues[size];
  final int[] starts=new int[size + 1];
  for (int i=0; i < size; i++) {
    AtomicReaderContext context=leaves.get(i);
    NumericDocValues v=context.reader().getNumericDocValues(field);
    if (v == null) {
      v=DocValues.EMPTY_NUMERIC;
    }
 else {
      anyReal=true;
    }
    values[i]=v;
    starts[i]=context.docBase;
  }
  starts[size]=r.maxDoc();
  if (!anyReal) {
    return null;
  }
 else {
    return new NumericDocValues(){
      @Override public long get(      int docID){
        int subIndex=ReaderUtil.subIndex(docID,starts);
        return values[subIndex].get(docID - starts[subIndex]);
      }
    }
;
  }
}
