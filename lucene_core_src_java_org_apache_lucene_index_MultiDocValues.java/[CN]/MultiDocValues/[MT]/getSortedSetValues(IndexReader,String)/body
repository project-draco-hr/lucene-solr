{
  final List<LeafReaderContext> leaves=r.leaves();
  final int size=leaves.size();
  if (size == 0) {
    return null;
  }
 else   if (size == 1) {
    return leaves.get(0).reader().getSortedSetDocValues(field);
  }
  boolean anyReal=false;
  final SortedSetDocValues[] values=new SortedSetDocValues[size];
  final int[] starts=new int[size + 1];
  long totalCost=0;
  for (int i=0; i < size; i++) {
    LeafReaderContext context=leaves.get(i);
    SortedSetDocValues v=context.reader().getSortedSetDocValues(field);
    if (v == null) {
      v=DocValues.emptySortedSet();
    }
 else {
      anyReal=true;
      totalCost+=v.cost();
    }
    values[i]=v;
    starts[i]=context.docBase;
  }
  starts[size]=r.maxDoc();
  if (anyReal == false) {
    return null;
  }
 else {
    OrdinalMap mapping=OrdinalMap.build(r.getCoreCacheKey(),values,PackedInts.DEFAULT);
    return new MultiSortedSetDocValues(values,starts,mapping,totalCost);
  }
}
