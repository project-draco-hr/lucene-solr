{
  final List<LeafReaderContext> leaves=r.leaves();
  final int size=leaves.size();
  if (size == 0) {
    return null;
  }
 else   if (size == 1) {
    return leaves.get(0).reader().getDocsWithField(field);
  }
  boolean anyReal=false;
  boolean anyMissing=false;
  final Bits[] values=new Bits[size];
  final int[] starts=new int[size + 1];
  for (int i=0; i < size; i++) {
    LeafReaderContext context=leaves.get(i);
    if (context.reader().getIndexSort() != null) {
      throw new IllegalArgumentException("cannot handle index sort: reader=" + context.reader());
    }
    Bits v=context.reader().getDocsWithField(field);
    if (v == null) {
      v=new Bits.MatchNoBits(context.reader().maxDoc());
      anyMissing=true;
    }
 else {
      anyReal=true;
      if (v instanceof Bits.MatchAllBits == false) {
        anyMissing=true;
      }
    }
    values[i]=v;
    starts[i]=context.docBase;
  }
  starts[size]=r.maxDoc();
  if (!anyReal) {
    return null;
  }
 else   if (!anyMissing) {
    return new Bits.MatchAllBits(r.maxDoc());
  }
 else {
    return new MultiBits(values,starts,false);
  }
}
