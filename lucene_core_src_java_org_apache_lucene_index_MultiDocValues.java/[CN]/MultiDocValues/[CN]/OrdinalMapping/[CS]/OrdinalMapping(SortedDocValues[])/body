{
  globalOrdDeltas=new AppendingLongBuffer();
  subIndexes=new AppendingLongBuffer();
  ordDeltas=new AppendingLongBuffer[subs.length];
  for (int i=0; i < ordDeltas.length; i++) {
    ordDeltas[i]=new AppendingLongBuffer();
  }
  int segmentOrds[]=new int[subs.length];
  ReaderSlice slices[]=new ReaderSlice[subs.length];
  TermsEnumIndex indexes[]=new TermsEnumIndex[slices.length];
  for (int i=0; i < slices.length; i++) {
    slices[i]=new ReaderSlice(0,0,i);
    indexes[i]=new TermsEnumIndex(new SortedDocValuesTermsEnum(subs[i]),i);
  }
  MultiTermsEnum mte=new MultiTermsEnum(slices);
  mte.reset(indexes);
  int globalOrd=0;
  while (mte.next() != null) {
    TermsEnumWithSlice matches[]=mte.getMatchArray();
    for (int i=0; i < mte.getMatchCount(); i++) {
      int subIndex=matches[i].index;
      if (i == 0) {
        subIndexes.add(subIndex);
        globalOrdDeltas.add(globalOrd - segmentOrds[subIndex]);
      }
      ordDeltas[subIndex].add(globalOrd - segmentOrds[subIndex]);
      segmentOrds[subIndex]++;
    }
    globalOrd++;
  }
}
