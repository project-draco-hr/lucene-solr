{
  PrefixCodedTerms pb[]=new PrefixCodedTerms[TestUtil.nextInt(random(),2,10)];
  Set<Term> superSet=new TreeSet<>();
  for (int i=0; i < pb.length; i++) {
    Set<Term> terms=new TreeSet<>();
    int nterms=TestUtil.nextInt(random(),0,10000);
    for (int j=0; j < nterms; j++) {
      Term term=new Term(TestUtil.randomUnicodeString(random(),2),TestUtil.randomUnicodeString(random(),4));
      terms.add(term);
    }
    superSet.addAll(terms);
    PrefixCodedTerms.Builder b=new PrefixCodedTerms.Builder();
    for (    Term ref : terms) {
      b.add(ref);
    }
    pb[i]=b.finish();
  }
  List<Iterator<Term>> subs=new ArrayList<>();
  for (int i=0; i < pb.length; i++) {
    subs.add(pb[i].iterator());
  }
  Iterator<Term> expected=superSet.iterator();
  Iterator<Term> actual=new MergedIterator<Term>(subs.toArray(new Iterator[0]));
  while (actual.hasNext()) {
    assertTrue(expected.hasNext());
    assertEquals(expected.next(),actual.next());
  }
  assertFalse(expected.hasNext());
}
