{
  AccessController.doPrivileged(new PrivilegedAction<Void>(){
    @Override public Void run(){
      for (Class<?> clazz=delegate.getClass(); clazz != null; clazz=clazz.getSuperclass()) {
        final Method method;
        try {
          method=clazz.getDeclaredMethod("implCloseChannel");
        }
 catch (        NoSuchMethodException e) {
          continue;
        }
        try {
          method.setAccessible(true);
          method.invoke(delegate);
          return null;
        }
 catch (        ReflectiveOperationException e) {
          throw new IOError(e);
        }
      }
      throw new AssertionError();
    }
  }
);
}
