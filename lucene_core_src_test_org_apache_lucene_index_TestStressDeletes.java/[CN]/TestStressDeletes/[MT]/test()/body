{
  final int numIDs=atLeast(100);
  final Object[] locks=new Object[numIDs];
  for (int i=0; i < locks.length; i++) {
    locks[i]=new Object();
  }
  Directory dir=newDirectory();
  IndexWriterConfig iwc=new IndexWriterConfig(new MockAnalyzer(random()));
  final IndexWriter w=new IndexWriter(dir,iwc);
  final int iters=atLeast(2000);
  final Map<Integer,Boolean> exists=new ConcurrentHashMap<>();
  Thread[] threads=new Thread[TestUtil.nextInt(random(),2,6)];
  final CountDownLatch startingGun=new CountDownLatch(1);
  for (int i=0; i < threads.length; i++) {
    threads[i]=new Thread(){
      @Override public void run(){
        try {
          startingGun.await();
          for (int iter=0; iter < iters; iter++) {
            int id=random().nextInt(numIDs);
synchronized (locks[id]) {
              Boolean v=exists.get(id);
              if (v == null || v.booleanValue() == false) {
                Document doc=new Document();
                doc.add(newStringField("id","" + id,Field.Store.NO));
                w.addDocument(doc);
                exists.put(id,true);
              }
 else {
                w.deleteDocuments(new Term("id","" + id));
                exists.put(id,false);
              }
            }
            if (random().nextInt(500) == 2) {
              DirectoryReader.open(w,random().nextBoolean()).close();
            }
            if (random().nextInt(500) == 2) {
              w.commit();
            }
          }
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
;
    threads[i].start();
  }
  startingGun.countDown();
  for (  Thread thread : threads) {
    thread.join();
  }
  IndexReader r=w.getReader();
  IndexSearcher s=newSearcher(r);
  for (  Map.Entry<Integer,Boolean> ent : exists.entrySet()) {
    int id=ent.getKey();
    TopDocs hits=s.search(new TermQuery(new Term("id","" + id)),1);
    if (ent.getValue()) {
      assertEquals(1,hits.totalHits);
    }
 else {
      assertEquals(0,hits.totalHits);
    }
  }
  r.close();
  w.close();
  dir.close();
}
