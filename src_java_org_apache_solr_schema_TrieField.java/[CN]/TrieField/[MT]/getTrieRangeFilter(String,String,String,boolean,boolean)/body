{
switch (type) {
case INTEGER:
    return new IntTrieRangeFilter(field,field,precisionStep,"*".equals(min) ? null : Integer.parseInt(min),"*".equals(max) ? null : Integer.parseInt(max),minInclusive,maxInclusive);
case FLOAT:
  return new IntTrieRangeFilter(field,field,precisionStep,"*".equals(min) ? null : TrieUtils.floatToSortableInt(Float.parseFloat(min)),"*".equals(max) ? null : TrieUtils.floatToSortableInt(Float.parseFloat(max)),minInclusive,maxInclusive);
case LONG:
return new LongTrieRangeFilter(field,field,precisionStep,"*".equals(min) ? null : Long.parseLong(min),"*".equals(max) ? null : Long.parseLong(max),minInclusive,maxInclusive);
case DOUBLE:
return new LongTrieRangeFilter(field,field,precisionStep,"*".equals(min) ? null : TrieUtils.doubleToSortableLong(Double.parseDouble(min)),"*".equals(max) ? null : TrieUtils.doubleToSortableLong(Double.parseDouble(max)),minInclusive,maxInclusive);
case DATE:
return new LongTrieRangeFilter(field,field,precisionStep,"*".equals(min) ? null : dateField.parseMath(null,min).getTime(),"*".equals(max) ? null : dateField.parseMath(null,max).getTime(),minInclusive,maxInclusive);
default :
throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,"Unknown type for trie field");
}
}
