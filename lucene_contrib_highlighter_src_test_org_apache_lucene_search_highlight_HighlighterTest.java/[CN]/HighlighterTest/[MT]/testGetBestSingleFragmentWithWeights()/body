{
  TestHighlightRunner helper=new TestHighlightRunner(){
    @Override public void run() throws Exception {
      WeightedSpanTerm[] wTerms=new WeightedSpanTerm[2];
      wTerms[0]=new WeightedSpanTerm(10f,"hello");
      List<PositionSpan> positionSpans=new ArrayList<PositionSpan>();
      positionSpans.add(new PositionSpan(0,0));
      wTerms[0].addPositionSpans(positionSpans);
      wTerms[1]=new WeightedSpanTerm(1f,"kennedy");
      positionSpans=new ArrayList<PositionSpan>();
      positionSpans.add(new PositionSpan(14,14));
      wTerms[1].addPositionSpans(positionSpans);
      Highlighter highlighter=getHighlighter(wTerms,HighlighterTest.this);
      TokenStream tokenStream=analyzer.reusableTokenStream(FIELD_NAME,new StringReader(texts[0]));
      highlighter.setTextFragmenter(new SimpleFragmenter(2));
      String result=highlighter.getBestFragment(tokenStream,texts[0]).trim();
      assertTrue("Failed to find best section using weighted terms. Found: [" + result + "]","<B>Hello</B>".equals(result));
      wTerms[1].setWeight(50f);
      tokenStream=analyzer.reusableTokenStream(FIELD_NAME,new StringReader(texts[0]));
      highlighter=getHighlighter(wTerms,HighlighterTest.this);
      highlighter.setTextFragmenter(new SimpleFragmenter(2));
      result=highlighter.getBestFragment(tokenStream,texts[0]).trim();
      assertTrue("Failed to find best section using weighted terms. Found: " + result,"<B>kennedy</B>".equals(result));
    }
  }
;
  helper.start();
}
