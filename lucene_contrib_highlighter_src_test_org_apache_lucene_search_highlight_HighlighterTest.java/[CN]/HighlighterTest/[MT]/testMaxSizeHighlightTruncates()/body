{
  TestHighlightRunner helper=new TestHighlightRunner(){
    @Override public void run() throws Exception {
      String goodWord="goodtoken";
      CharacterRunAutomaton stopWords=new CharacterRunAutomaton(BasicAutomata.makeString("stoppedtoken"));
      final MockAnalyzer analyzer=new MockAnalyzer(random,MockTokenizer.SIMPLE,true,stopWords,true);
      analyzer.setEnableChecks(false);
      TermQuery query=new TermQuery(new Term("data",goodWord));
      String match;
      StringBuilder sb=new StringBuilder();
      sb.append(goodWord);
      for (int i=0; i < 10000; i++) {
        sb.append(" ");
        sb.append("stoppedtoken");
      }
      SimpleHTMLFormatter fm=new SimpleHTMLFormatter();
      Highlighter hg=getHighlighter(query,"data",fm);
      hg.setTextFragmenter(new NullFragmenter());
      hg.setMaxDocCharsToAnalyze(100);
      match=hg.getBestFragment(analyzer,"data",sb.toString());
      assertTrue("Matched text should be no more than 100 chars in length ",match.length() < hg.getMaxDocCharsToAnalyze());
      sb.append(" ");
      sb.append(goodWord);
      match=hg.getBestFragment(analyzer,"data",sb.toString());
      assertTrue("Matched text should be no more than 100 chars in length ",match.length() < hg.getMaxDocCharsToAnalyze());
    }
  }
;
  helper.start();
}
