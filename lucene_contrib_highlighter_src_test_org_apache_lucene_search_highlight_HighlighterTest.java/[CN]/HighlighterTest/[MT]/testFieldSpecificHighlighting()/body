{
  TestHighlightRunner helper=new TestHighlightRunner(){
    @Override public void run() throws Exception {
      String docMainText="fred is one of the people";
      BooleanQuery query=new BooleanQuery();
      query.add(new TermQuery(new Term(FIELD_NAME,"fred")),Occur.SHOULD);
      query.add(new TermQuery(new Term("category","people")),Occur.SHOULD);
      Scorer fieldSpecificScorer=null;
      if (mode == TestHighlightRunner.QUERY) {
        fieldSpecificScorer=new QueryScorer(query,FIELD_NAME);
      }
 else       if (mode == TestHighlightRunner.QUERY_TERM) {
        fieldSpecificScorer=new QueryTermScorer(query,"contents");
      }
      Highlighter fieldSpecificHighlighter=new Highlighter(new SimpleHTMLFormatter(),fieldSpecificScorer);
      fieldSpecificHighlighter.setTextFragmenter(new NullFragmenter());
      String result=fieldSpecificHighlighter.getBestFragment(analyzer,FIELD_NAME,docMainText);
      assertEquals("Should match",result,"<B>fred</B> is one of the people");
      Scorer fieldInSpecificScorer=null;
      if (mode == TestHighlightRunner.QUERY) {
        fieldInSpecificScorer=new QueryScorer(query,null);
      }
 else       if (mode == TestHighlightRunner.QUERY_TERM) {
        fieldInSpecificScorer=new QueryTermScorer(query);
      }
      Highlighter fieldInSpecificHighlighter=new Highlighter(new SimpleHTMLFormatter(),fieldInSpecificScorer);
      fieldInSpecificHighlighter.setTextFragmenter(new NullFragmenter());
      result=fieldInSpecificHighlighter.getBestFragment(analyzer,FIELD_NAME,docMainText);
      assertEquals("Should match",result,"<B>fred</B> is one of the <B>people</B>");
      reader.close();
    }
  }
;
  helper.start();
}
