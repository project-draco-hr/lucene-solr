{
  Map<String,Object> result=new LinkedHashMap<String,Object>();
  long matches=0;
  for (  Grp grp : sortedGroups) {
    matches+=grp.docs.size();
  }
  result.put("matches",matches);
  List groupList=new ArrayList();
  result.put("groups",groupList);
  for (int i=start; i < sortedGroups.size(); i++) {
    if (rows != -1 && groupList.size() >= rows)     break;
    Map<String,Object> group=new LinkedHashMap<String,Object>();
    groupList.add(group);
    Grp grp=sortedGroups.get(i);
    group.put("groupValue",grp.groupValue);
    Map<String,Object> resultSet=new LinkedHashMap<String,Object>();
    group.put("doclist",resultSet);
    resultSet.put("numFound",grp.docs.size());
    resultSet.put("start",start);
    List docs=new ArrayList();
    resultSet.put("docs",docs);
    for (int j=group_offset; j < grp.docs.size(); j++) {
      if (group_limit != -1 && docs.size() >= group_limit)       break;
      docs.add(grp.docs.get(j).toObject(schema));
    }
  }
  return result;
}
