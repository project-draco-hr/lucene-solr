{
  TestHighlightRunner helper=new TestHighlightRunner(){
    @Override public void run() throws Exception {
      doSearching(new TermQuery(new Term(FIELD_NAME,"kennedy")));
      numHighlights=0;
      for (int i=0; i < hits.totalHits; i++) {
        String text=searcher.doc(hits.scoreDocs[i].doc).get(FIELD_NAME);
        TokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,text);
        Highlighter highlighter=getHighlighter(query,FIELD_NAME,HighlighterTest.this);
        highlighter.setTextFragmenter(new SimpleFragmenter(40));
        String result=highlighter.getBestFragment(tokenStream,text);
        if (VERBOSE)         System.out.println("\t" + result);
      }
      assertTrue("Failed to find correct number of highlights " + numHighlights + " found",numHighlights == 4);
      numHighlights=0;
      for (int i=0; i < hits.totalHits; i++) {
        String text=searcher.doc(hits.scoreDocs[i].doc).get(FIELD_NAME);
        Highlighter highlighter=getHighlighter(query,FIELD_NAME,HighlighterTest.this);
        highlighter.getBestFragment(analyzer,FIELD_NAME,text);
      }
      assertTrue("Failed to find correct number of highlights " + numHighlights + " found",numHighlights == 4);
      numHighlights=0;
      for (int i=0; i < hits.totalHits; i++) {
        String text=searcher.doc(hits.scoreDocs[i].doc).get(FIELD_NAME);
        Highlighter highlighter=getHighlighter(query,FIELD_NAME,HighlighterTest.this);
        highlighter.getBestFragments(analyzer,FIELD_NAME,text,10);
      }
      assertTrue("Failed to find correct number of highlights " + numHighlights + " found",numHighlights == 4);
    }
  }
;
  helper.start();
}
