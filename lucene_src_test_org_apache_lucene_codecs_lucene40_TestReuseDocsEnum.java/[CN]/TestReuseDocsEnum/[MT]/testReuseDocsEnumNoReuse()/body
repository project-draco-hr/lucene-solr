{
  Directory dir=newDirectory();
  Codec cp=_TestUtil.alwaysPostingsFormat(new Lucene40PostingsFormat());
  RandomIndexWriter writer=new RandomIndexWriter(random,dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setCodec(cp));
  int numdocs=atLeast(20);
  createRandomIndex(numdocs,writer,random);
  writer.commit();
  IndexReader open=IndexReader.open(dir);
  IndexReader[] sequentialSubReaders=open.getSequentialSubReaders();
  for (  IndexReader indexReader : sequentialSubReaders) {
    Terms terms=indexReader.terms("body");
    TermsEnum iterator=terms.iterator(null);
    IdentityHashMap<DocsEnum,Boolean> enums=new IdentityHashMap<DocsEnum,Boolean>();
    MatchNoBits bits=new Bits.MatchNoBits(open.maxDoc());
    while ((iterator.next()) != null) {
      DocsEnum docs=iterator.docs(random.nextBoolean() ? bits : new Bits.MatchNoBits(open.maxDoc()),null,random.nextBoolean());
      enums.put(docs,true);
    }
    assertEquals(terms.getUniqueTermCount(),enums.size());
  }
  IOUtils.close(writer,open,dir);
}
