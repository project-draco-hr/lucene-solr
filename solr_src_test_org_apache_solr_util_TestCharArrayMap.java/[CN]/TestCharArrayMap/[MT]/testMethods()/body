{
  CharArrayMap<Integer> cm=new CharArrayMap<Integer>(2,false);
  HashMap<String,Integer> hm=new HashMap<String,Integer>();
  hm.put("foo",1);
  hm.put("bar",2);
  cm.putAll(hm);
  assertEquals(hm,cm);
  assertEquals(cm,hm);
  hm.put("baz",3);
  assertFalse(hm.equals(cm));
  assertFalse(cm.equals(hm));
  assertTrue(cm.equals(cm));
  cm.putAll(hm);
  assertEquals(hm,cm);
  Iterator<Map.Entry<String,Integer>> iter1=cm.entrySet().iterator();
  int n=0;
  while (iter1.hasNext()) {
    Map.Entry<String,Integer> entry=iter1.next();
    String key=entry.getKey();
    Integer val=entry.getValue();
    assertEquals(hm.get(key),val);
    entry.setValue(val * 100);
    assertEquals(val * 100,(int)cm.get(key));
    n++;
  }
  assertEquals(hm.size(),n);
  cm.clear();
  cm.putAll(hm);
  CharArrayMap<Integer>.EntryIterator iter2=cm.iterator();
  n=0;
  while (iter2.hasNext()) {
    char[] keyc=iter2.nextKey();
    Integer val=iter2.currentValue();
    assertEquals(hm.get(new String(keyc)),val);
    iter2.setValue(val * 100);
    assertEquals(val * 100,(int)cm.get(keyc));
    n++;
  }
  assertEquals(hm.size(),n);
  cm.clear();
  assertEquals(0,cm.size());
  assertTrue(cm.isEmpty());
}
