{
  final Weight weight=query.createWeight(searcher,needsScores);
  if (needsScores == false) {
    return weight;
  }
  weight.normalize(1f,boost);
  return new Weight(this){
    @Override public void extractTerms(    Set<Term> terms){
      weight.extractTerms(terms);
    }
    @Override public Explanation explain(    LeafReaderContext context,    int doc) throws IOException {
      return weight.explain(context,doc);
    }
    @Override public float getValueForNormalization() throws IOException {
      return weight.getValueForNormalization();
    }
    @Override public void normalize(    float norm,    float boost){
      weight.normalize(norm,BoostQuery.this.boost * boost);
    }
    @Override public Scorer scorer(    LeafReaderContext context) throws IOException {
      return weight.scorer(context);
    }
    @Override public BulkScorer bulkScorer(    LeafReaderContext context) throws IOException {
      return weight.bulkScorer(context);
    }
  }
;
}
