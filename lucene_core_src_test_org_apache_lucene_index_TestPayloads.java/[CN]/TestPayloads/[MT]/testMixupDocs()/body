{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(null);
  iwc.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir,iwc);
  Document doc=new Document();
  Field field=new TextField("field","",Field.Store.NO);
  TokenStream ts=new MockTokenizer(MockTokenizer.WHITESPACE,true);
  ((Tokenizer)ts).setReader(new StringReader("here we go"));
  field.setTokenStream(ts);
  doc.add(field);
  writer.addDocument(doc);
  Token withPayload=new Token("withPayload",0,11);
  withPayload.setPayload(new BytesRef("test"));
  ts=new CannedTokenStream(withPayload);
  assertTrue(ts.hasAttribute(PayloadAttribute.class));
  field.setTokenStream(ts);
  writer.addDocument(doc);
  ts=new MockTokenizer(MockTokenizer.WHITESPACE,true);
  ((Tokenizer)ts).setReader(new StringReader("another"));
  field.setTokenStream(ts);
  writer.addDocument(doc);
  DirectoryReader reader=writer.getReader();
  TermsEnum te=MultiFields.getFields(reader).terms("field").iterator();
  assertTrue(te.seekExact(new BytesRef("withPayload")));
  PostingsEnum de=te.postings(null,PostingsEnum.PAYLOADS);
  de.nextDoc();
  de.nextPosition();
  assertEquals(new BytesRef("test"),de.getPayload());
  writer.close();
  reader.close();
  dir.close();
}
