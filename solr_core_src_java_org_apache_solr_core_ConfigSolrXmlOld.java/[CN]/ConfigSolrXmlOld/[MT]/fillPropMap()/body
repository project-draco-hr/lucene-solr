{
  propMap.put(CfgProp.SOLR_CORELOADTHREADS,config.getVal("solr/@coreLoadThreads",false));
  propMap.put(CfgProp.SOLR_SHAREDLIB,config.getVal("solr/@sharedLib",false));
  propMap.put(CfgProp.SOLR_ZKHOST,config.getVal("solr/@zkHost",false));
  propMap.put(CfgProp.SOLR_LOGGING_CLASS,config.getVal("solr/logging/@class",false));
  propMap.put(CfgProp.SOLR_LOGGING_ENABLED,config.getVal("solr/logging/@enabled",false));
  propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,config.getVal("solr/logging/watcher/@size",false));
  propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,config.getVal("solr/logging/watcher/@threshold",false));
  propMap.put(CfgProp.SOLR_ADMINHANDLER,config.getVal("solr/cores/@adminHandler",false));
  propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,config.getVal("solr/cores/@distribUpdateConnTimeout",false));
  propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,config.getVal("solr/cores/@distribUpdateSoTimeout",false));
  propMap.put(CfgProp.SOLR_HOST,config.getVal("solr/cores/@host",false));
  propMap.put(CfgProp.SOLR_HOSTCONTEXT,config.getVal("solr/cores/@hostContext",false));
  propMap.put(CfgProp.SOLR_HOSTPORT,config.getVal("solr/cores/@hostPort",false));
  propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,config.getVal("solr/cores/@leaderVoteWait",false));
  propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,config.getVal("solr/cores/@genericCoreNodeNames",false));
  propMap.put(CfgProp.SOLR_MANAGEMENTPATH,config.getVal("solr/cores/@managementPath",false));
  propMap.put(CfgProp.SOLR_SHARESCHEMA,config.getVal("solr/cores/@shareSchema",false));
  propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,config.getVal("solr/cores/@transientCacheSize",false));
  propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,config.getVal("solr/cores/@zkClientTimeout",false));
  propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,config.getVal("solr/cores/@defaultCoreName",false));
  propMap.put(CfgProp.SOLR_PERSISTENT,config.getVal("solr/@persistent",false));
  propMap.put(CfgProp.SOLR_ADMINPATH,config.getVal("solr/cores/@adminPath",false));
}
