{
  if (PostingsEnum.featureRequested(flags,PostingsEnum.POSITIONS)) {
    if (field.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {
      return null;
    }
    boolean hasOffsets=field.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
    decodeMetaData();
    FSTPostingsEnum docsAndPositionsEnum;
    if (reuse == null || !(reuse instanceof FSTPostingsEnum)) {
      docsAndPositionsEnum=new FSTPostingsEnum(field.hasPayloads(),hasOffsets);
    }
 else {
      docsAndPositionsEnum=(FSTPostingsEnum)reuse;
      if (!docsAndPositionsEnum.canReuse(field.hasPayloads(),hasOffsets)) {
        docsAndPositionsEnum=new FSTPostingsEnum(field.hasPayloads(),hasOffsets);
      }
    }
    return docsAndPositionsEnum.reset(postingsSpare,liveDocs,docFreq);
  }
  decodeMetaData();
  FSTDocsEnum docsEnum;
  if (reuse == null || !(reuse instanceof FSTDocsEnum)) {
    docsEnum=new FSTDocsEnum(field.getIndexOptions(),field.hasPayloads());
  }
 else {
    docsEnum=(FSTDocsEnum)reuse;
    if (!docsEnum.canReuse(field.getIndexOptions(),field.hasPayloads())) {
      docsEnum=new FSTDocsEnum(field.getIndexOptions(),field.hasPayloads());
    }
  }
  return docsEnum.reset(this.postingsSpare,liveDocs,docFreq);
}
