{
  super(in);
  this.withFreqs=withFreqs;
  int i=0;
  int doc;
  if (withFreqs) {
    freqs=new int[docs.length];
    while ((doc=in.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {
      if (i >= docs.length) {
        docs=ArrayUtil.grow(docs,docs.length + 1);
        freqs=ArrayUtil.grow(freqs,freqs.length + 1);
      }
      docs[i]=docMap.oldToNew(doc);
      freqs[i]=in.freq();
      ++i;
    }
  }
 else {
    freqs=null;
    while ((doc=in.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {
      if (i >= docs.length) {
        docs=ArrayUtil.grow(docs,docs.length + 1);
      }
      docs[i++]=docMap.oldToNew(doc);
    }
  }
  new DocFreqSorterTemplate(docs,freqs).timSort(0,i - 1);
  upto=i;
}
