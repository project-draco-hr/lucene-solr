{
  Analyzer analyzer=new MockAnalyzer(random());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwcWithSuggestField(analyzer,"suggest_field"));
  int num=Math.min(1000,atLeast(10));
  for (int i=0; i < num; i++) {
    Document document=new Document();
    document.add(new SuggestField("suggest_field","abc_" + i,i));
    document.add(new IntField("filter_int_fld",i,Field.Store.NO));
    iw.addDocument(document);
    if (usually()) {
      iw.commit();
    }
  }
  DirectoryReader reader=iw.getReader();
  SuggestIndexSearcher indexSearcher=new SuggestIndexSearcher(reader);
  int topScore=num / 2;
  QueryWrapperFilter filterWrapper=new QueryWrapperFilter(NumericRangeQuery.newIntRange("filter_int_fld",0,topScore,true,true));
  Filter filter=randomAccessFilter(filterWrapper);
  PrefixCompletionQuery query=new PrefixCompletionQuery(analyzer,new Term("suggest_field","abc_"),filter);
  TopSuggestDocs suggest=indexSearcher.suggest(query,num);
  assertTrue(suggest.totalHits >= 1);
  assertThat(suggest.scoreLookupDocs()[0].key.toString(),equalTo("abc_" + topScore));
  assertThat(suggest.scoreLookupDocs()[0].score,equalTo((float)topScore));
  filterWrapper=new QueryWrapperFilter(NumericRangeQuery.newIntRange("filter_int_fld",0,0,true,true));
  filter=randomAccessFilter(filterWrapper);
  query=new PrefixCompletionQuery(analyzer,new Term("suggest_field","abc_"),filter);
  suggest=indexSearcher.suggest(query,num);
  assertSuggestions(suggest,new Entry("abc_0",0));
  filterWrapper=new QueryWrapperFilter(NumericRangeQuery.newIntRange("filter_int_fld",num - 1,num - 1,true,true));
  filter=randomAccessFilter(filterWrapper);
  query=new PrefixCompletionQuery(analyzer,new Term("suggest_field","abc_"),filter);
  suggest=indexSearcher.suggest(query,1);
  assertSuggestions(suggest,new Entry("abc_" + (num - 1),num - 1));
  reader.close();
  iw.close();
}
