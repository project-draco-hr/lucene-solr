{
  initBoost();
  BooleanQuery.Builder booleanQueryB=new BooleanQuery.Builder();
  booleanQueryB.add(tq("A"),Occur.MUST);
  booleanQueryB.add(tq("B"),Occur.MUST);
  booleanQueryB.add(tq("C"),Occur.SHOULD);
  BooleanQuery.Builder innerQuery=new BooleanQuery.Builder();
  innerQuery.add(tq("D"),Occur.MUST);
  innerQuery.add(tq("E"),Occur.MUST);
  booleanQueryB.add(innerQuery.build(),Occur.MUST_NOT);
  Query booleanQuery=booleanQueryB.build();
  booleanQuery=new BoostQuery(booleanQuery,boost);
  FieldQuery fq=new FieldQuery(booleanQuery,true,true);
  Set<Query> flatQueries=new HashSet<>();
  fq.flatten(booleanQuery,reader,flatQueries,1f);
  assertCollectionQueries(flatQueries,tq(boost,"A"),tq(boost,"B"),tq(boost,"C"));
}
