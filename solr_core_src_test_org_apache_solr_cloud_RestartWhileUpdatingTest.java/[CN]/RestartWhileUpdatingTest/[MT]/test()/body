{
  handle.clear();
  handle.put("timestamp",SKIPVAL);
  int[] maxDocList=new int[]{5000,10000};
  int maxDoc=maxDocList[random().nextInt(maxDocList.length - 1)];
  int numThreads=random().nextInt(4) + 1;
  threads=new ArrayList<>(2);
  StoppableIndexingThread indexThread;
  for (int i=0; i < numThreads; i++) {
    indexThread=new StoppableIndexingThread(controlClient,cloudClient,Integer.toString(i),true,maxDoc,1,true);
    threads.add(indexThread);
    indexThread.start();
  }
  Thread.sleep(2000);
  int restartTimes=random().nextInt(4) + 1;
  ;
  for (int i=0; i < restartTimes; i++) {
    stopAndStartAllReplicas();
  }
  Thread.sleep(2000);
  for (  StoppableIndexingThread thread : threads) {
    thread.safeStop();
    thread.safeStop();
  }
  Thread.sleep(1000);
  waitForThingsToLevelOut(120);
  Thread.sleep(2000);
  waitForThingsToLevelOut(30);
  Thread.sleep(5000);
  waitForRecoveriesToFinish(DEFAULT_COLLECTION,cloudClient.getZkStateReader(),false,true);
  checkShardConsistency(false,false);
}
