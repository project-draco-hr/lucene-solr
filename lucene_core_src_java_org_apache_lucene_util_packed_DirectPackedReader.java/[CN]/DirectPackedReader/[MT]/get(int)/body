{
  final long majorBitPos=(long)index * bitsPerValue;
  final long elementPos=majorBitPos >>> 3;
  try {
    in.seek(startPointer + elementPos);
    final byte b0=in.readByte();
    final int bitPos=(int)(majorBitPos & 7);
    if (bitPos + bitsPerValue <= 8) {
      return (b0 & ((1L << (8 - bitPos)) - 1)) >>> (8 - bitPos - bitsPerValue);
    }
    int remainingBits=bitsPerValue - 8 + bitPos;
    long result=(b0 & ((1L << (8 - bitPos)) - 1)) << remainingBits;
    while (remainingBits >= 8) {
      remainingBits-=8;
      result|=(in.readByte() & 0xFFL) << remainingBits;
    }
    if (remainingBits > 0) {
      result|=(in.readByte() & 0xFFL) >>> (8 - remainingBits);
    }
    return result;
  }
 catch (  IOException ioe) {
    throw new IllegalStateException("failed",ioe);
  }
}
