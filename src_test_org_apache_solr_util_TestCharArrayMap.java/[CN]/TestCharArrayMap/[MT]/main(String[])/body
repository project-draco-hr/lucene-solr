{
  int a=0;
  String impl=args[a++].intern();
  int iter1=Integer.parseInt(args[a++]);
  int iter2=Integer.parseInt(args[a++]);
  int ret=0;
  long start=System.currentTimeMillis();
  String[] stopwords=StopAnalyzer.ENGLISH_STOP_WORDS;
  char[][] stopwordschars=new char[stopwords.length][];
  for (int i=0; i < stopwords.length; i++) {
    stopwordschars[i]=stopwords[i].toCharArray();
  }
  String[] testwords="now is the time for all good men to come to the aid of their country".split(" ");
  char[][] testwordchars=new char[testwords.length][];
  for (int i=0; i < testwordchars.length; i++) {
    testwordchars[i]=testwords[i].toCharArray();
  }
  HashMap<String,Integer> hm=null;
  CharArrayMap<Integer> cm=null;
  if (impl == "hash") {
    for (int i=0; i < iter1; i++) {
      hm=new HashMap<String,Integer>();
      int v=0;
      for (      String word : stopwords) {
        hm.put(word,++v);
      }
      ret+=hm.size();
    }
  }
 else   if (impl == "chars") {
    for (int i=0; i < iter1; i++) {
      cm=new CharArrayMap<Integer>(2,false);
      int v=0;
      for (      String s : stopwords) {
        cm.put(s,++v);
      }
      ret+=cm.size();
    }
  }
 else   if (impl == "char") {
    for (int i=0; i < iter1; i++) {
      cm=new CharArrayMap<Integer>(2,false);
      int v=0;
      for (      char[] s : stopwordschars) {
        cm.put(s,++v);
      }
      ret+=cm.size();
    }
  }
  if (impl == "hash") {
    for (int i=0; i < iter2; i++) {
      for (      String word : testwords) {
        Integer v=hm.get(word);
        ret+=v == null ? 0 : v;
      }
    }
  }
 else   if (impl == "chars") {
    for (int i=0; i < iter2; i++) {
      for (      String word : testwords) {
        Integer v=cm.get(word);
        ret+=v == null ? 0 : v;
      }
    }
  }
 else   if (impl == "char") {
    for (int i=0; i < iter2; i++) {
      for (      char[] word : testwordchars) {
        Integer v=cm.get(word);
        ret+=v == null ? 0 : v;
      }
    }
  }
  long end=System.currentTimeMillis();
  System.out.println("result=" + ret);
  System.out.println("time=" + (end - start));
}
