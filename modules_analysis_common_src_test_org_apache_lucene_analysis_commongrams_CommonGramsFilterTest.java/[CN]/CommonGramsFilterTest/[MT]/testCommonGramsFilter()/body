{
  Analyzer a=new Analyzer(){
    @Override public TokenStream tokenStream(    String field,    Reader in){
      return new CommonGramsFilter(TEST_VERSION_CURRENT,new WhitespaceTokenizer(TEST_VERSION_CURRENT,in),commonWords);
    }
  }
;
  assertAnalyzesTo(a,"the",new String[]{"the"});
  assertAnalyzesTo(a,"foo",new String[]{"foo"});
  assertAnalyzesTo(a,"brown fox",new String[]{"brown","fox"},new int[]{1,1});
  assertAnalyzesTo(a,"the fox",new String[]{"the","the_fox","fox"},new int[]{1,0,1});
  assertAnalyzesTo(a,"fox of",new String[]{"fox","fox_of","of"},new int[]{1,0,1});
  assertAnalyzesTo(a,"of the",new String[]{"of","of_the","the"},new int[]{1,0,1});
  assertAnalyzesTo(a,"n n n",new String[]{"n","n","n"},new int[]{1,1,1});
  assertAnalyzesTo(a,"quick brown fox",new String[]{"quick","brown","fox"},new int[]{1,1,1});
  assertAnalyzesTo(a,"n n s",new String[]{"n","n","n_s","s"},new int[]{1,1,0,1});
  assertAnalyzesTo(a,"quick brown the",new String[]{"quick","brown","brown_the","the"},new int[]{1,1,0,1});
  assertAnalyzesTo(a,"n s n",new String[]{"n","n_s","s","s_n","n"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"quick the fox",new String[]{"quick","quick_the","the","the_fox","fox"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"n s s",new String[]{"n","n_s","s","s_s","s"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"fox of the",new String[]{"fox","fox_of","of","of_the","the"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"s n n",new String[]{"s","s_n","n","n"},new int[]{1,0,1,1});
  assertAnalyzesTo(a,"the quick brown",new String[]{"the","the_quick","quick","brown"},new int[]{1,0,1,1});
  assertAnalyzesTo(a,"s n s",new String[]{"s","s_n","n","n_s","s"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"the fox of",new String[]{"the","the_fox","fox","fox_of","of"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"s s n",new String[]{"s","s_s","s","s_n","n"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"of the fox",new String[]{"of","of_the","the","the_fox","fox"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"s s s",new String[]{"s","s_s","s","s_s","s"},new int[]{1,0,1,0,1});
  assertAnalyzesTo(a,"of the of",new String[]{"of","of_the","the","the_of","of"},new int[]{1,0,1,0,1});
}
