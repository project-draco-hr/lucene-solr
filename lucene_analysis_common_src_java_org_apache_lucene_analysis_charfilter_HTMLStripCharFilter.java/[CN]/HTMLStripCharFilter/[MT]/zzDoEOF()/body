{
  if (!zzEOFDone) {
    zzEOFDone=true;
switch (zzLexicalState) {
case SCRIPT:
case COMMENT:
case SCRIPT_COMMENT:
case STYLE:
case STYLE_COMMENT:
case SINGLE_QUOTED_STRING:
case DOUBLE_QUOTED_STRING:
case END_TAG_TAIL_EXCLUDE:
case END_TAG_TAIL_SUBSTITUTE:
case START_TAG_TAIL_EXCLUDE:
case SERVER_SIDE_INCLUDE:
case START_TAG_TAIL_SUBSTITUTE:
{
        cumulativeDiff+=yychar - inputStart;
        addOffCorrectMap(outputCharCount,cumulativeDiff);
        outputSegment.clear();
        eofReturnValue=-1;
        break;
      }
case CHARACTER_REFERENCE_TAIL:
{
      cumulativeDiff+=inputSegment.length() - outputSegment.length();
      addOffCorrectMap(outputCharCount + outputSegment.length(),cumulativeDiff);
      eofReturnValue=outputSegment.nextChar();
      break;
    }
case BANG:
case CDATA:
case AMPERSAND:
case NUMERIC_CHARACTER:
case END_TAG_TAIL_INCLUDE:
case START_TAG_TAIL_INCLUDE:
case LEFT_ANGLE_BRACKET:
case LEFT_ANGLE_BRACKET_SLASH:
case LEFT_ANGLE_BRACKET_SPACE:
{
    outputSegment=inputSegment;
    eofReturnValue=outputSegment.nextChar();
    break;
  }
default :
{
  eofReturnValue=-1;
}
}
}
}
