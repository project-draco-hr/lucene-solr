{
  int num=atLeast(10);
  for (int iter=0; iter < num; iter++) {
    if (VERBOSE) {
      System.out.println("TEST: iter=" + iter);
    }
    Directory dir=newDirectory();
    IndexWriterConfig conf=newIndexWriterConfig(new MockAnalyzer(random()));
    conf.setMergeScheduler(new SerialMergeScheduler());
    TieredMergePolicy tmp=newTieredMergePolicy();
    conf.setMergePolicy(tmp);
    conf.setMaxBufferedDocs(2);
    tmp.setMaxMergeAtOnce(3);
    tmp.setSegmentsPerTier(6);
    IndexWriter w=new IndexWriter(dir,conf);
    int maxCount=0;
    final int numDocs=TestUtil.nextInt(random(),20,100);
    for (int i=0; i < numDocs; i++) {
      Document doc=new Document();
      doc.add(newTextField("content","aaa " + (i % 4),Field.Store.NO));
      w.addDocument(doc);
      int count=w.getSegmentCount();
      maxCount=Math.max(count,maxCount);
      assertTrue("count=" + count + " maxCount="+ maxCount,count >= maxCount - 3);
    }
    w.flush(true,true);
    int segmentCount=w.getSegmentCount();
    int targetCount=TestUtil.nextInt(random(),1,segmentCount);
    if (VERBOSE) {
      System.out.println("TEST: merge to " + targetCount + " segs (current count="+ segmentCount+ ")");
    }
    w.forceMerge(targetCount);
    assertEquals(targetCount,w.getSegmentCount());
    w.close();
    dir.close();
  }
}
