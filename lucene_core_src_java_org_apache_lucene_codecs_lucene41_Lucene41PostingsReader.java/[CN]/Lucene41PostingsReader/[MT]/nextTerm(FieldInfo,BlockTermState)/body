{
  final IntBlockTermState termState=(IntBlockTermState)_termState;
  final boolean isFirstTerm=termState.termBlockOrd == 0;
  final boolean fieldHasPositions=fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;
  final boolean fieldHasOffsets=fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
  final boolean fieldHasPayloads=fieldInfo.hasPayloads();
  final DataInput in=termState.bytesReader;
  if (isFirstTerm) {
    termState.docStartFP=in.readVLong();
    if (fieldHasPositions) {
      termState.posStartFP=in.readVLong();
      if (termState.totalTermFreq > BLOCK_SIZE) {
        termState.lastPosBlockOffset=in.readVLong();
      }
 else {
        termState.lastPosBlockOffset=-1;
      }
      if ((fieldHasPayloads || fieldHasOffsets) && termState.totalTermFreq >= BLOCK_SIZE) {
        termState.payStartFP=in.readVLong();
      }
 else {
        termState.payStartFP=-1;
      }
    }
  }
 else {
    termState.docStartFP+=in.readVLong();
    if (fieldHasPositions) {
      termState.posStartFP+=in.readVLong();
      if (termState.totalTermFreq > BLOCK_SIZE) {
        termState.lastPosBlockOffset=in.readVLong();
      }
 else {
        termState.lastPosBlockOffset=-1;
      }
      if ((fieldHasPayloads || fieldHasOffsets) && termState.totalTermFreq >= BLOCK_SIZE) {
        long delta=in.readVLong();
        if (termState.payStartFP == -1) {
          termState.payStartFP=delta;
        }
 else {
          termState.payStartFP+=delta;
        }
      }
    }
  }
  if (termState.docFreq > BLOCK_SIZE) {
    termState.skipOffset=in.readVLong();
  }
 else {
    termState.skipOffset=-1;
  }
}
