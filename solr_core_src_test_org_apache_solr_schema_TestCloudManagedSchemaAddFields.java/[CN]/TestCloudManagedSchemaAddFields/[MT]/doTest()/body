{
  setupHarnesses();
  int numFields=200;
  for (int i=1; i <= numFields; ++i) {
    RestTestHarness publisher=restTestHarnesses.get(r.nextInt(restTestHarnesses.size()));
    String newFieldName="newfield" + i;
    final String content="[{\"name\":\"" + newFieldName + "\",\"type\":\"text\",\"stored\":\"false\"}]";
    String request="/schema/fields/?wt=xml";
    String response=publisher.post(request,content);
    String result=publisher.validateXPath(response,"/response/lst[@name='responseHeader']/int[@name='status'][.='0']");
    if (null != result) {
      fail("POST REQUEST FAILED: xpath=" + result + "  request="+ request+ "  content="+ content+ "  response="+ response);
    }
  }
  Thread.sleep(100000);
  for (int i=1; i <= numFields; ++i) {
    String newFieldName="newfield" + i;
    for (    RestTestHarness client : restTestHarnesses) {
      String request="/schema/fields/" + newFieldName + "?wt=xml";
      String response=client.query(request);
      String result=client.validateXPath(response,"/response/lst[@name='responseHeader']/int[@name='status'][.='0']","/response/lst[@name='field']/str[@name='name'][.='" + newFieldName + "']");
      if (null != result) {
        if (response.contains("Field '" + newFieldName + "' not found.")) {
          String msg="QUERY FAILED: xpath=" + result + "  request="+ request+ "  response="+ response;
          log.error(msg);
          fail(msg);
        }
      }
    }
  }
}
