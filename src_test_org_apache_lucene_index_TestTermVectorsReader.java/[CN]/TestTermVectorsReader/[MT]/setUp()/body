{
  for (int i=0; i < testFields.length; i++) {
    fieldInfos.add(testFields[i],true,true,testFieldsStorePos[i],testFieldsStoreOff[i]);
  }
  for (int i=0; i < testTerms.length; i++) {
    positions[i]=new int[3];
    for (int j=0; j < positions[i].length; j++) {
      positions[i][j]=(int)(j * 10 + Math.random() * 10);
    }
    offsets[i]=new TermVectorOffsetInfo[3];
    for (int j=0; j < offsets[i].length; j++) {
      offsets[i][j]=new TermVectorOffsetInfo(j * 10,j * 10 + testTerms[i].length());
    }
  }
  try {
    Arrays.sort(testTerms);
    for (int j=0; j < 5; j++) {
      writer=new TermVectorsWriter(dir,seg,fieldInfos);
      writer.openDocument();
      for (int k=0; k < testFields.length; k++) {
        writer.openField(testFields[k]);
        for (int i=0; i < testTerms.length; i++) {
          writer.addTerm(testTerms[i],3,positions[i],offsets[i]);
        }
        writer.closeField();
      }
      writer.closeDocument();
      writer.close();
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
    assertTrue(false);
  }
}
