{
  String cursorMark;
  SolrParams params=null;
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","4","fl","id","sort","id desc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==0","/response/start==0","/response/docs==[]");
  assertEquals(CURSOR_MARK_START,cursorMark);
  assertU(adoc("id","9","str","c","float","-3.2","int","42"));
  assertU(adoc("id","7","str","c","float","-3.2","int","-1976"));
  assertU(adoc("id","2","str","c","float","-3.2","int","666"));
  assertU(adoc("id","0","str","b","float","64.5","int","-42"));
  assertU(adoc("id","5","str","b","float","64.5","int","2001"));
  assertU(adoc("id","8","str","b","float","64.5","int","4055"));
  assertU(adoc("id","6","str","a","float","64.5","int","7"));
  assertU(adoc("id","1","str","a","float","64.5","int","7"));
  assertU(adoc("id","4","str","a","float","11.1","int","6"));
  assertU(adoc("id","3","str","a","float","11.1","int","3"));
  assertU(commit());
  cursorMark=CURSOR_MARK_START;
  params=params("q","id:9999999","rows","4","fl","id","sort","id desc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==0","/response/start==0","/response/docs==[]");
  assertEquals(CURSOR_MARK_START,cursorMark);
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","0","fl","id","sort","id desc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[]");
  assertEquals(CURSOR_MARK_START,cursorMark);
  cursorMark=CURSOR_MARK_START;
  params=params("q","-int:6","rows","4","fl","id","sort","id desc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==9","/response/start==0","/response/docs==[{'id':9},{'id':8},{'id':7},{'id':6}]");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==9","/response/start==0","/response/docs==[{'id':5},{'id':3},{'id':2},{'id':1}]");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==9","/response/start==0","/response/docs==[{'id':0}]");
  assertEquals(cursorMark,assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==9","/response/start==0","/response/docs==[]"));
  cursorMark=CURSOR_MARK_START;
  params=params("q","float:[0 TO *] int:7 id:6","rows","4","fl","id","facet","true","facet.field","str","json.nl","map","sort","score desc, id desc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==7","/response/start==0","/response/docs==[{'id':6},{'id':1},{'id':8},{'id':5}]","/facet_counts/facet_fields/str=={'a':4,'b':3,'c':0}");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==7","/response/start==0","/response/docs==[{'id':4},{'id':3},{'id':0}]","/facet_counts/facet_fields/str=={'a':4,'b':3,'c':0}");
  assertEquals(cursorMark,assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==7","/response/start==0","/response/docs==[]","/facet_counts/facet_fields/str=={'a':4,'b':3,'c':0}"));
  cursorMark=CURSOR_MARK_START;
  params=params("q","-int:2001 -int:4055","rows","3","fl","id","facet","true","facet.field","str","json.nl","map","sort","int asc, id asc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==8","/response/start==0","/response/docs==[{'id':7},{'id':0},{'id':3}]","/facet_counts/facet_fields/str=={'a':4,'b':1,'c':3}");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==8","/response/start==0","/response/docs==[{'id':4},{'id':1},{'id':6}]","/facet_counts/facet_fields/str=={'a':4,'b':1,'c':3}");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==8","/response/start==0","/response/docs==[{'id':9},{'id':2}]","/facet_counts/facet_fields/str=={'a':4,'b':1,'c':3}");
  assertEquals(cursorMark,assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==8","/response/start==0","/response/docs==[]","/facet_counts/facet_fields/str=={'a':4,'b':1,'c':3}"));
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","6","fl","id","sort","str asc, id desc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[{'id':6},{'id':4},{'id':3},{'id':1},{'id':8},{'id':5}]");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[{'id':0},{'id':9},{'id':7},{'id':2}]");
  assertEquals(cursorMark,assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[]"));
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","2","fl","id","sort","float asc, int desc, id desc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[{'id':2},{'id':9}]");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[{'id':7},{'id':4}]");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[{'id':3},{'id':8}]");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[{'id':5},{'id':6}]");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[{'id':1},{'id':0}]");
  assertEquals(cursorMark,assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[]"));
  cursorMark=CURSOR_MARK_START;
  params=params("q","id:3 id:7","rows","111","fl","id","sort","int asc, id asc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==2","/response/start==0","/response/docs==[{'id':7},{'id':3}]");
  assertEquals(cursorMark,assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==2","/response/start==0","/response/docs==[]"));
  SentinelIntSet ids;
  ids=assertFullWalkNoDups(10,params("q","*:*","rows","4","sort","id desc"));
  assertEquals(10,ids.size());
  ids=assertFullWalkNoDups(9,params("q","*:*","rows","1","fq","-id:4","sort","id asc"));
  assertEquals(9,ids.size());
  assertFalse("matched on id:4 unexpectedly",ids.exists(4));
  ids=assertFullWalkNoDups(9,params("q","*:*","rows","3","fq","-id:6","sort","float desc, id asc, int asc"));
  assertEquals(9,ids.size());
  assertFalse("matched on id:6 unexpectedly",ids.exists(6));
  ids=assertFullWalkNoDups(9,params("q","float:[0 TO *] int:7 id:6","rows","3","sort","score desc, id desc"));
  assertEquals(7,ids.size());
  assertFalse("matched on id:9 unexpectedly",ids.exists(9));
  assertFalse("matched on id:7 unexpectedly",ids.exists(7));
  assertFalse("matched on id:2 unexpectedly",ids.exists(2));
  cursorMark=CURSOR_MARK_START;
  params=params("q","*:*","rows","2","fl","id","sort","str asc, id asc");
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==10","/response/start==0","/response/docs==[{'id':1},{'id':3}]");
  assertU(delI("3"));
  assertU(commit());
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==9","/response/start==0","/response/docs==[{'id':4},{'id':6}]");
  assertU(delI("0"));
  assertU(commit());
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==8","/response/start==0","/response/docs==[{'id':5},{'id':8}]");
  assertU(adoc("id","5","str","c"));
  assertU(commit());
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==8","/response/start==0","/response/docs==[{'id':2},{'id':5}]");
  assertU(adoc("id","7","str","a"));
  assertU(commit());
  cursorMark=assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==8","/response/start==0","/response/docs==[{'id':9}]");
  assertEquals(cursorMark,assertCursor(req(params,CURSOR_MARK_PARAM,cursorMark),"/response/numFound==8","/response/start==0","/response/docs==[]"));
}
