{
  assertU(adoc("id","9","str","c","float","-3.2","int","42"));
  assertU(adoc("id","7","str","c","float","-3.2","int","-1976"));
  assertU(adoc("id","2","str","c","float","-3.2","int","666"));
  assertU(adoc("id","0","str","b","float","64.5","int","-42"));
  assertU(adoc("id","5","str","b","float","64.5","int","2001"));
  assertU(adoc("id","8","str","b","float","64.5","int","4055"));
  assertU(adoc("id","6","str","a","float","64.5","int","7"));
  assertU(adoc("id","1","str","a","float","64.5","int","7"));
  assertU(adoc("id","4","str","a","float","11.1","int","6"));
  assertU(adoc("id","3","str","a","float","11.1","int","3"));
  assertU(commit());
  final Collection<String> allFieldNames=getAllFieldNames();
  final SolrInfoMBean filterCacheStats=h.getCore().getInfoRegistry().get("filterCache");
  assertNotNull(filterCacheStats);
  final SolrInfoMBean queryCacheStats=h.getCore().getInfoRegistry().get("queryResultCache");
  assertNotNull(queryCacheStats);
  final long preQcIn=(Long)queryCacheStats.getStatistics().get("inserts");
  final long preFcIn=(Long)filterCacheStats.getStatistics().get("inserts");
  final long preFcHits=(Long)filterCacheStats.getStatistics().get("hits");
  SentinelIntSet ids=assertFullWalkNoDups(10,params("q","*:*","rows","" + _TestUtil.nextInt(random(),1,11),"fq","-id:[1 TO 2]","fq","-id:[6 TO 7]","fl","id","sort",buildRandomSort(allFieldNames)));
  assertEquals(6,ids.size());
  final long postQcIn=(Long)queryCacheStats.getStatistics().get("inserts");
  final long postFcIn=(Long)filterCacheStats.getStatistics().get("inserts");
  final long postFcHits=(Long)filterCacheStats.getStatistics().get("hits");
  assertEquals("query cache inserts changed",preQcIn,postQcIn);
  assertEquals("filter cache did not grow correctly",3,postFcIn - preFcIn);
  assertTrue("filter cache did not have any new cache hits",0 < postFcHits - preFcHits);
}
