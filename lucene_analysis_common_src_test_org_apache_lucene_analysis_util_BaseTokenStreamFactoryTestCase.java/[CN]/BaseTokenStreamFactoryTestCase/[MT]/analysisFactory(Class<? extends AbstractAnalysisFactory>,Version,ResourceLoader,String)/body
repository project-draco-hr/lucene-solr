{
  if (keysAndValues.length % 2 == 1) {
    throw new IllegalArgumentException("invalid keysAndValues map");
  }
  Map<String,String> args=new HashMap<String,String>();
  for (int i=0; i < keysAndValues.length; i+=2) {
    String previous=args.put(keysAndValues[i],keysAndValues[i + 1]);
    assertNull("duplicate values for key: " + keysAndValues[i],previous);
  }
  if (matchVersion != null) {
    String previous=args.put("luceneMatchVersion",matchVersion.toString());
    assertNull("duplicate values for key: luceneMatchVersion",previous);
  }
  AbstractAnalysisFactory factory=null;
  try {
    factory=clazz.getConstructor(Map.class).newInstance(args);
  }
 catch (  InvocationTargetException e) {
    if (e.getCause() instanceof IllegalArgumentException) {
      throw (IllegalArgumentException)e.getCause();
    }
 else {
      throw e;
    }
  }
  if (factory instanceof ResourceLoaderAware) {
    ((ResourceLoaderAware)factory).inform(loader);
  }
  return factory;
}
