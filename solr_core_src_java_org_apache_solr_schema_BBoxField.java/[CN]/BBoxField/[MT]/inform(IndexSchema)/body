{
  this.schema=schema;
  FieldType numberType=schema.getFieldTypeByName(numberTypeName);
  FieldType booleanType=schema.getFieldTypeByName(booleanTypeName);
  if (numberType == null) {
    throw new RuntimeException("Cannot find number fieldType: " + numberTypeName);
  }
  if (booleanType == null) {
    throw new RuntimeException("Cannot find boolean fieldType: " + booleanTypeName);
  }
  if (!(booleanType instanceof BoolField)) {
    throw new RuntimeException("Must be a BoolField: " + booleanType);
  }
  if (!(numberType instanceof TrieDoubleField)) {
    throw new RuntimeException("Must be TrieDoubleField: " + numberType);
  }
  List<SchemaField> fields=new ArrayList<>(schema.getFields().values());
  for (  SchemaField sf : fields) {
    if (sf.getType() == this) {
      String name=sf.getName();
      registerSubFields(schema,name,numberType,booleanType);
    }
  }
}
