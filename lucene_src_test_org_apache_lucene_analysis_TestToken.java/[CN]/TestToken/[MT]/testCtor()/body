{
  Token t=new Token();
  char[] content="hello".toCharArray();
  t.setTermBuffer(content,0,content.length);
  assertNotSame(t.termBuffer(),content);
  assertEquals(0,t.startOffset());
  assertEquals(0,t.endOffset());
  assertEquals("hello",t.term());
  assertEquals("word",t.type());
  assertEquals(0,t.getFlags());
  t=new Token(6,22);
  t.setTermBuffer(content,0,content.length);
  assertEquals("hello",t.term());
  assertEquals("hello",t.toString());
  assertEquals(6,t.startOffset());
  assertEquals(22,t.endOffset());
  assertEquals("word",t.type());
  assertEquals(0,t.getFlags());
  t=new Token(6,22,7);
  t.setTermBuffer(content,0,content.length);
  assertEquals("hello",t.term());
  assertEquals("hello",t.toString());
  assertEquals(6,t.startOffset());
  assertEquals(22,t.endOffset());
  assertEquals("word",t.type());
  assertEquals(7,t.getFlags());
  t=new Token(6,22,"junk");
  t.setTermBuffer(content,0,content.length);
  assertEquals("hello",t.term());
  assertEquals("hello",t.toString());
  assertEquals(6,t.startOffset());
  assertEquals(22,t.endOffset());
  assertEquals("junk",t.type());
  assertEquals(0,t.getFlags());
}
