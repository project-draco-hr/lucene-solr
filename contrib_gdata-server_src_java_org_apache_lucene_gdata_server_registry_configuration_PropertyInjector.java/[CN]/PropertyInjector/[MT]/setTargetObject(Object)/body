{
  if (o == null)   throw new IllegalArgumentException("TargetObject must not be null");
  this.target=o;
  this.targetClass=o.getClass();
  try {
    registerProperties(this.targetClass);
  }
 catch (  Exception e) {
    throw new InjectionException("can access field -- " + e.getMessage(),e);
  }
  if (this.requieredProperties.isEmpty() && this.optionalProperties.isEmpty())   throw new InjectionException("Given type has no public setter methodes -- " + o.getClass().getName());
}
