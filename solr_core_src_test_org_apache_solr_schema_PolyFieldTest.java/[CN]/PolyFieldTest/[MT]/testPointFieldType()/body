{
  SolrCore core=h.getCore();
  IndexSchema schema=core.getSchema();
  SchemaField home=schema.getField("home");
  assertNotNull(home);
  assertTrue("home is not a poly field",home.isPolyField());
  FieldType tmp=home.getType();
  assertTrue(tmp instanceof PointType);
  PointType pt=(PointType)tmp;
  assertEquals(pt.getDimension(),2);
  double[] xy=new double[]{35.0,-79.34};
  String point=xy[0] + "," + xy[1];
  List<StorableField> fields=home.createFields(point,2);
  assertEquals(fields.size(),3);
  for (int i=0; i < 3; i++) {
    boolean hasValue=fields.get(i).binaryValue() != null || fields.get(i).stringValue() != null || fields.get(i).numericValue() != null;
    assertTrue("Doesn't have a value: " + fields.get(i),hasValue);
  }
  home=schema.getField("home_ns");
  assertNotNull(home);
  fields=home.createFields(point,2);
  assertEquals(fields.size(),2);
  home=schema.getField("home_ns");
  assertNotNull(home);
  try {
    fields=home.createFields("35.0,foo",2);
    assertTrue(false);
  }
 catch (  Exception e) {
  }
  SchemaField s1=schema.getField("test_p");
  SchemaField s2=schema.getField("test_p");
  ValueSource v1=s1.getType().getValueSource(s1,null);
  ValueSource v2=s2.getType().getValueSource(s2,null);
  assertEquals(v1,v2);
  assertEquals(v1.hashCode(),v2.hashCode());
}
