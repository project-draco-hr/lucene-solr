{
  String zkDir=createTempDir("zkData").toFile().getAbsolutePath();
  final ZkTestServer server=new ZkTestServer(zkDir);
  SolrZkClient controllerClient=null;
  ZkStateReader reader=null;
  MockZKController mockController=null;
  MockZKController mockController2=null;
  OverseerRestarter killer=null;
  Thread killerThread=null;
  try {
    server.run();
    controllerClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    ZkController.createClusterZkNodes(controllerClient);
    killer=new OverseerRestarter(server.getZkAddress());
    killerThread=new Thread(killer);
    killerThread.start();
    reader=new ZkStateReader(controllerClient);
    for (int i=0; i < atLeast(4); i++) {
      killCounter.incrementAndGet();
      mockController=new MockZKController(server.getZkAddress(),"node1");
      mockController.publishState(collection,"core1","node1",Replica.State.ACTIVE,1);
      if (mockController2 != null) {
        mockController2.close();
        mockController2=null;
      }
      mockController.publishState(collection,"core1","node1",Replica.State.RECOVERING,1);
      mockController2=new MockZKController(server.getZkAddress(),"node2");
      mockController.publishState(collection,"core1","node1",Replica.State.ACTIVE,1);
      verifyShardLeader(reader,"collection1","shard1","core1");
      mockController2.publishState(collection,"core4","node2",Replica.State.ACTIVE,1);
      mockController.close();
      mockController=null;
      verifyShardLeader(reader,"collection1","shard1","core4");
    }
  }
  finally {
    if (killer != null) {
      killer.run=false;
      if (killerThread != null) {
        killerThread.join();
      }
    }
    close(mockController);
    close(mockController2);
    close(controllerClient);
    close(reader);
    server.shutdown();
  }
}
