{
  SolrZkClient zkClient=new SolrZkClient(address,TIMEOUT);
  ZkStateReader reader=new ZkStateReader(zkClient);
  readers.add(reader);
  LeaderElector overseerElector=new LeaderElector(zkClient);
  if (overseers.size() > 0) {
    overseers.get(overseers.size() - 1).close();
    overseers.get(overseers.size() - 1).getZkStateReader().getZkClient().close();
  }
  UpdateShardHandler updateShardHandler=new UpdateShardHandler(UpdateShardHandlerConfig.DEFAULT);
  updateShardHandlers.add(updateShardHandler);
  HttpShardHandlerFactory httpShardHandlerFactory=new HttpShardHandlerFactory();
  httpShardHandlerFactorys.add(httpShardHandlerFactory);
  Overseer overseer=new Overseer(httpShardHandlerFactory.getShardHandler(),updateShardHandler,"/admin/cores",reader,null,new CloudConfig.CloudConfigBuilder("127.0.0.1",8983,"").build());
  overseers.add(overseer);
  ElectionContext ec=new OverseerElectionContext(zkClient,overseer,address.replaceAll("/","_"));
  overseerElector.setup(ec);
  overseerElector.joinElection(ec,false);
  return zkClient;
}
