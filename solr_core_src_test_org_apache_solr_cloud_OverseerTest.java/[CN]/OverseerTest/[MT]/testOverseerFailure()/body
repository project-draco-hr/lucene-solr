{
  String zkDir=dataDir.getAbsolutePath() + File.separator + "zookeeper/server1/data";
  ZkTestServer server=new ZkTestServer(zkDir);
  SolrZkClient controllerClient=null;
  SolrZkClient overseerClient=null;
  ZkStateReader reader=null;
  MockZKController mockController=null;
  try {
    server.run();
    controllerClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    controllerClient.makePath(ZkStateReader.LIVE_NODES_ZKNODE,true);
    reader=new ZkStateReader(controllerClient);
    reader.createClusterStateWatchersAndUpdate();
    mockController=new MockZKController(server.getZkAddress(),"node1","collection1");
    overseerClient=electNewOverseer(server.getZkAddress());
    Thread.sleep(1000);
    mockController.publishState("core1",ZkStateReader.RECOVERING,1);
    waitForCollections(reader,"collection1");
    verifyStatus(reader,ZkStateReader.RECOVERING);
    int version=getCloudStateVersion(controllerClient);
    mockController.publishState("core1",ZkStateReader.ACTIVE,1);
    while (version == getCloudStateVersion(controllerClient))     ;
    verifyStatus(reader,ZkStateReader.ACTIVE);
    version=getCloudStateVersion(controllerClient);
    overseerClient.close();
    Thread.sleep(1000);
    mockController.publishState("core1",ZkStateReader.RECOVERING,1);
    version=getCloudStateVersion(controllerClient);
    overseerClient=electNewOverseer(server.getZkAddress());
    while (version == getCloudStateVersion(controllerClient))     ;
    verifyStatus(reader,ZkStateReader.RECOVERING);
    assertEquals("Live nodes count does not match",1,reader.getCloudState().getLiveNodes().size());
    assertEquals("Shard count does not match",1,reader.getCloudState().getSlice("collection1","shard1").getShards().size());
    version=getCloudStateVersion(controllerClient);
    mockController.publishState("core1",null,1);
    while (version == getCloudStateVersion(controllerClient))     ;
    Thread.sleep(100);
    assertEquals("Shard count does not match",0,reader.getCloudState().getSlice("collection1","shard1").getShards().size());
  }
  finally {
    if (mockController != null) {
      mockController.close();
    }
    if (overseerClient != null) {
      overseerClient.close();
    }
    if (controllerClient != null) {
      controllerClient.close();
    }
    if (reader != null) {
      reader.close();
    }
    server.shutdown();
  }
}
