{
  String zkDir=createTempDir("zkData").toFile().getAbsolutePath();
  ZkTestServer server=new ZkTestServer(zkDir);
  SolrZkClient controllerClient=null;
  SolrZkClient overseerClient=null;
  ZkStateReader reader=null;
  MockZKController mockController=null;
  try {
    server.run();
    controllerClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    ZkController.createClusterZkNodes(controllerClient);
    reader=new ZkStateReader(controllerClient);
    reader.createClusterStateWatchersAndUpdate();
    mockController=new MockZKController(server.getZkAddress(),"node1");
    overseerClient=electNewOverseer(server.getZkAddress());
    mockController.publishState(collection,"core1","core_node1",Replica.State.RECOVERING,1);
    waitForCollections(reader,"collection1");
    verifyStatus(reader,collection,"shard1","core_node1",Replica.State.RECOVERING);
    mockController.close();
    int version=getClusterStateVersion(controllerClient);
    mockController=new MockZKController(server.getZkAddress(),"node1");
    mockController.publishState(collection,"core1","core_node1",Replica.State.RECOVERING,1);
    while (version == getClusterStateVersion(controllerClient))     ;
    reader.updateClusterState();
    ClusterState state=reader.getClusterState();
    int numFound=0;
    for (    String c : state.getCollections()) {
      DocCollection collection=state.getCollection(c);
      for (      Slice slice : collection.getSlices()) {
        if (slice.getReplicasMap().get("core_node1") != null) {
          numFound++;
        }
      }
    }
    assertEquals("Shard was found more than once in ClusterState",1,numFound);
  }
  finally {
    close(overseerClient);
    close(mockController);
    close(controllerClient);
    close(reader);
    server.shutdown();
  }
}
