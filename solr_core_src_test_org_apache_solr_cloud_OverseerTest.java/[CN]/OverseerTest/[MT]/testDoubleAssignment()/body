{
  String zkDir=dataDir.getAbsolutePath() + File.separator + "zookeeper/server1/data";
  ZkTestServer server=new ZkTestServer(zkDir);
  SolrZkClient controllerClient=null;
  SolrZkClient overseerClient=null;
  ZkStateReader reader=null;
  MockZKController mockController=null;
  try {
    server.run();
    controllerClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    controllerClient.makePath(ZkStateReader.LIVE_NODES_ZKNODE,true);
    reader=new ZkStateReader(controllerClient);
    reader.createClusterStateWatchersAndUpdate();
    mockController=new MockZKController(server.getZkAddress(),"node1","collection1");
    overseerClient=electNewOverseer(server.getZkAddress());
    mockController.publishState("core1",ZkStateReader.RECOVERING,1);
    waitForCollections(reader,"collection1");
    verifyStatus(reader,ZkStateReader.RECOVERING);
    mockController.close();
    int version=getCloudStateVersion(controllerClient);
    mockController=new MockZKController(server.getZkAddress(),"node1","collection1");
    mockController.publishState("core1",ZkStateReader.RECOVERING,1);
    while (version == getCloudStateVersion(controllerClient))     ;
    reader.updateCloudState(true);
    CloudState state=reader.getCloudState();
    int numFound=0;
    for (    Map<String,Slice> collection : state.getCollectionStates().values()) {
      for (      Slice slice : collection.values()) {
        if (slice.getShards().get("node1_core1") != null) {
          numFound++;
        }
      }
    }
    assertEquals("Shard was found in more than 1 times in CloudState",1,numFound);
  }
  finally {
    if (overseerClient != null) {
      overseerClient.close();
    }
    if (mockController != null) {
      mockController.close();
    }
    if (controllerClient != null) {
      controllerClient.close();
    }
    if (reader != null) {
      reader.close();
    }
    server.shutdown();
  }
}
