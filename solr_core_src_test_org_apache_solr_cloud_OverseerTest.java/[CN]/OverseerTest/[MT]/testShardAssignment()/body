{
  String zkDir=createTempDir("zkData").toFile().getAbsolutePath();
  ZkTestServer server=new ZkTestServer(zkDir);
  MockZKController zkController=null;
  SolrZkClient zkClient=null;
  SolrZkClient overseerClient=null;
  try {
    server.run();
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    zkClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    ZkController.createClusterZkNodes(zkClient);
    overseerClient=electNewOverseer(server.getZkAddress());
    ZkStateReader reader=new ZkStateReader(zkClient);
    reader.createClusterStateWatchersAndUpdate();
    zkController=new MockZKController(server.getZkAddress(),"127.0.0.1");
    final int numShards=6;
    for (int i=0; i < numShards; i++) {
      assertNotNull("shard got no id?",zkController.publishState(collection,"core" + (i + 1),"node" + (i + 1),Replica.State.ACTIVE,3));
    }
    Map<String,Replica> rmap=reader.getClusterState().getSlice("collection1","shard1").getReplicasMap();
    assertEquals(rmap.toString(),2,rmap.size());
    assertEquals(rmap.toString(),2,reader.getClusterState().getSlice("collection1","shard2").getReplicasMap().size());
    assertEquals(rmap.toString(),2,reader.getClusterState().getSlice("collection1","shard3").getReplicasMap().size());
    assertNotNull(reader.getLeaderUrl("collection1","shard1",15000));
    assertNotNull(reader.getLeaderUrl("collection1","shard2",15000));
    assertNotNull(reader.getLeaderUrl("collection1","shard3",15000));
  }
  finally {
    if (DEBUG) {
      if (zkController != null) {
        zkClient.printLayoutToStdOut();
      }
    }
    close(zkClient);
    if (zkController != null) {
      zkController.close();
    }
    close(overseerClient);
    server.shutdown();
  }
}
