{
  String zkDir=createTempDir("zkData").toFile().getAbsolutePath();
  ZkTestServer server=new ZkTestServer(zkDir);
  SolrZkClient zkClient=null;
  ZkStateReader reader=null;
  SolrZkClient overseerClient=null;
  try {
    server.run();
    zkClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    ZkController.createClusterZkNodes(zkClient);
    reader=new ZkStateReader(zkClient);
    reader.createClusterStateWatchersAndUpdate();
    overseerClient=electNewOverseer(server.getZkAddress());
    DistributedQueue q=Overseer.getInQueue(zkClient);
    ZkNodeProps m=new ZkNodeProps(Overseer.QUEUE_OPERATION,OverseerAction.STATE.toLower(),ZkStateReader.BASE_URL_PROP,"http://127.0.0.1/solr",ZkStateReader.NODE_NAME_PROP,"node1",ZkStateReader.COLLECTION_PROP,collection,ZkStateReader.CORE_NAME_PROP,"core1",ZkStateReader.ROLES_PROP,"",ZkStateReader.STATE_PROP,Replica.State.RECOVERING.toString());
    q.offer(Utils.toJSON(m));
    waitForCollections(reader,collection);
    assertSame(reader.getClusterState().toString(),Replica.State.RECOVERING,reader.getClusterState().getSlice(collection,"shard1").getReplica("core_node1").getState());
    m=new ZkNodeProps(Overseer.QUEUE_OPERATION,OverseerAction.STATE.toLower(),ZkStateReader.BASE_URL_PROP,"http://127.0.0.1/solr",ZkStateReader.NODE_NAME_PROP,"node1",ZkStateReader.COLLECTION_PROP,collection,ZkStateReader.CORE_NAME_PROP,"core1",ZkStateReader.ROLES_PROP,"",ZkStateReader.STATE_PROP,Replica.State.ACTIVE.toString());
    q.offer(Utils.toJSON(m));
    verifyReplicaStatus(reader,"collection1","shard1","core_node1",Replica.State.ACTIVE);
  }
  finally {
    close(zkClient);
    close(overseerClient);
    close(reader);
    server.shutdown();
  }
}
