{
  String zkDir=createTempDir().toFile().getAbsolutePath() + File.separator + "zookeeper/server1/data";
  ZkTestServer server=new ZkTestServer(zkDir);
  SolrZkClient zkClient=null;
  SolrZkClient overseerClient=null;
  ZkStateReader reader=null;
  try {
    server.run();
    zkClient=new SolrZkClient(server.getZkAddress(),TIMEOUT);
    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());
    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());
    zkClient.makePath(ZkStateReader.LIVE_NODES_ZKNODE,true);
    reader=new ZkStateReader(zkClient);
    reader.createClusterStateWatchersAndUpdate();
    DistributedQueue queue=Overseer.getInternalQueue(zkClient,new Overseer.Stats());
    ZkNodeProps m=new ZkNodeProps(Overseer.QUEUE_OPERATION,"state",ZkStateReader.BASE_URL_PROP,"http://127.0.0.1/solr",ZkStateReader.NODE_NAME_PROP,"node1",ZkStateReader.SHARD_ID_PROP,"s1",ZkStateReader.COLLECTION_PROP,"collection1",ZkStateReader.CORE_NAME_PROP,"core1",ZkStateReader.ROLES_PROP,"",ZkStateReader.STATE_PROP,ZkStateReader.RECOVERING);
    queue.offer(ZkStateReader.toJSON(m));
    m=new ZkNodeProps(Overseer.QUEUE_OPERATION,"state",ZkStateReader.BASE_URL_PROP,"http://127.0.0.1/solr",ZkStateReader.NODE_NAME_PROP,"node1",ZkStateReader.SHARD_ID_PROP,"s1",ZkStateReader.COLLECTION_PROP,"collection1",ZkStateReader.CORE_NAME_PROP,"core2",ZkStateReader.ROLES_PROP,"",ZkStateReader.STATE_PROP,ZkStateReader.RECOVERING);
    queue.offer(ZkStateReader.toJSON(m));
    overseerClient=electNewOverseer(server.getZkAddress());
    queue=Overseer.getInQueue(zkClient);
    m=new ZkNodeProps(Overseer.QUEUE_OPERATION,OverseerAction.STATE.toLower(),ZkStateReader.BASE_URL_PROP,"http://127.0.0.1/solr",ZkStateReader.NODE_NAME_PROP,"node1",ZkStateReader.SHARD_ID_PROP,"s1",ZkStateReader.COLLECTION_PROP,"collection1",ZkStateReader.CORE_NAME_PROP,"core3",ZkStateReader.ROLES_PROP,"",ZkStateReader.STATE_PROP,ZkStateReader.RECOVERING);
    queue.offer(ZkStateReader.toJSON(m));
    for (int i=0; i < 100; i++) {
      Slice s=reader.getClusterState().getSlice("collection1","s1");
      if (s != null && s.getReplicasMap().size() == 3)       break;
      Thread.sleep(100);
    }
    assertNotNull(reader.getClusterState().getSlice("collection1","s1"));
    assertEquals(3,reader.getClusterState().getSlice("collection1","s1").getReplicasMap().size());
  }
  finally {
    close(overseerClient);
    close(zkClient);
    close(reader);
    server.shutdown();
  }
}
