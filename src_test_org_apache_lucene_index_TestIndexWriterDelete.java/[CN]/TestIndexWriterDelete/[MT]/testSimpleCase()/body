{
  String[] keywords={"1","2"};
  String[] unindexed={"Netherlands","Italy"};
  String[] unstored={"Amsterdam has lots of bridges","Venice has lots of canals"};
  String[] text={"Amsterdam","Venice"};
  for (int pass=0; pass < 2; pass++) {
    boolean autoCommit=(0 == pass);
    Directory dir=new MockRAMDirectory();
    IndexWriter modifier=new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED);
    modifier.setUseCompoundFile(true);
    modifier.setMaxBufferedDeleteTerms(1);
    for (int i=0; i < keywords.length; i++) {
      Document doc=new Document();
      doc.add(new Field("id",keywords[i],Field.Store.YES,Field.Index.UN_TOKENIZED));
      doc.add(new Field("country",unindexed[i],Field.Store.YES,Field.Index.NO));
      doc.add(new Field("contents",unstored[i],Field.Store.NO,Field.Index.TOKENIZED));
      doc.add(new Field("city",text[i],Field.Store.YES,Field.Index.TOKENIZED));
      modifier.addDocument(doc);
    }
    modifier.optimize();
    modifier.commit();
    Term term=new Term("city","Amsterdam");
    int hitCount=getHitCount(dir,term);
    assertEquals(1,hitCount);
    modifier.deleteDocuments(term);
    modifier.commit();
    hitCount=getHitCount(dir,term);
    assertEquals(0,hitCount);
    modifier.close();
    dir.close();
  }
}
