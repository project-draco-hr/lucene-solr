{
  match.start=off;
  match.len=0;
  insert(off,buf);
  int ref=hashPointer(buf,off);
  for (int i=0; i < MAX_ATTEMPTS; ++i) {
    if (ref < Math.max(base,off - MAX_DISTANCE + 1)) {
      break;
    }
    if (buf[ref + match.len] == buf[off + match.len] && readIntEquals(buf,ref,off)) {
      final int matchLen=MIN_MATCH + commonBytes(buf,ref + MIN_MATCH,off + MIN_MATCH,matchLimit);
      if (matchLen > match.len) {
        match.ref=ref;
        match.len=matchLen;
      }
    }
    ref=next(ref);
  }
  return match.len != 0;
}
