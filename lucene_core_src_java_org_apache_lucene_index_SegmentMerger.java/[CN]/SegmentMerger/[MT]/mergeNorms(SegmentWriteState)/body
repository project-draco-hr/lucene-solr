{
  DocValuesConsumer consumer=codec.normsFormat().normsConsumer(segmentWriteState);
  boolean success=false;
  try {
    for (    FieldInfo field : mergeState.fieldInfos) {
      if (field.hasNorms()) {
        List<NumericDocValues> toMerge=new ArrayList<NumericDocValues>();
        List<Bits> docsWithField=new ArrayList<Bits>();
        for (        AtomicReader reader : mergeState.readers) {
          NumericDocValues norms=reader.getNormValues(field.name);
          if (norms == null) {
            norms=NumericDocValues.EMPTY;
          }
          toMerge.add(norms);
          docsWithField.add(new Bits.MatchAllBits(reader.maxDoc()));
        }
        consumer.mergeNumericField(field,mergeState,toMerge,docsWithField);
      }
    }
    success=true;
  }
  finally {
    if (success) {
      IOUtils.close(consumer);
    }
 else {
      IOUtils.closeWhileHandlingException(consumer);
    }
  }
}
