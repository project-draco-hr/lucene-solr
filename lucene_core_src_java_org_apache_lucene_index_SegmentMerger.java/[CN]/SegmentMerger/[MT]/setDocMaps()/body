{
  final int numReaders=mergeState.readers.size();
  mergeState.docMaps=new MergeState.DocMap[numReaders];
  mergeState.docBase=new int[numReaders];
  mergeState.readerPayloadProcessor=new PayloadProcessorProvider.ReaderPayloadProcessor[numReaders];
  mergeState.currentPayloadProcessor=new PayloadProcessorProvider.PayloadProcessor[numReaders];
  int docBase=0;
  int i=0;
  while (i < mergeState.readers.size()) {
    final AtomicReader reader=mergeState.readers.get(i);
    mergeState.docBase[i]=docBase;
    final MergeState.DocMap docMap=MergeState.DocMap.build(reader);
    mergeState.docMaps[i]=docMap;
    docBase+=docMap.numDocs();
    if (mergeState.payloadProcessorProvider != null) {
      mergeState.readerPayloadProcessor[i]=mergeState.payloadProcessorProvider.getReaderProcessor(reader);
    }
    i++;
  }
  return docBase;
}
