{
  final String groupField="author";
  FieldType customType=new FieldType();
  customType.setStored(true);
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random(),dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));
  boolean canUseIDV=!"Lucene3x".equals(w.w.getConfig().getCodec().getName());
  List<Document> documents=new ArrayList<Document>();
  Document doc=new Document();
  addGroupField(doc,groupField,"author1",canUseIDV);
  doc.add(new Field("content","random text",TextField.TYPE_STORED));
  doc.add(new Field("id","1",customType));
  documents.add(doc);
  doc=new Document();
  addGroupField(doc,groupField,"author1",canUseIDV);
  doc.add(new Field("content","some more random text",TextField.TYPE_STORED));
  doc.add(new Field("id","2",customType));
  documents.add(doc);
  doc=new Document();
  addGroupField(doc,groupField,"author1",canUseIDV);
  doc.add(new Field("content","some more random textual data",TextField.TYPE_STORED));
  doc.add(new Field("id","3",customType));
  doc.add(new Field("groupend","x",StringField.TYPE_UNSTORED));
  documents.add(doc);
  w.addDocuments(documents);
  documents.clear();
  doc=new Document();
  addGroupField(doc,groupField,"author2",canUseIDV);
  doc.add(new Field("content","some random text",TextField.TYPE_STORED));
  doc.add(new Field("id","4",customType));
  doc.add(new Field("groupend","x",StringField.TYPE_UNSTORED));
  w.addDocument(doc);
  doc=new Document();
  addGroupField(doc,groupField,"author3",canUseIDV);
  doc.add(new Field("content","some more random text",TextField.TYPE_STORED));
  doc.add(new Field("id","5",customType));
  documents.add(doc);
  doc=new Document();
  addGroupField(doc,groupField,"author3",canUseIDV);
  doc.add(new Field("content","random",TextField.TYPE_STORED));
  doc.add(new Field("id","6",customType));
  doc.add(new Field("groupend","x",StringField.TYPE_UNSTORED));
  documents.add(doc);
  w.addDocuments(documents);
  documents.clear();
  doc=new Document();
  doc.add(new Field("content","random word stuck in alot of other text",TextField.TYPE_STORED));
  doc.add(new Field("id","6",customType));
  doc.add(new Field("groupend","x",StringField.TYPE_UNSTORED));
  w.addDocument(doc);
  IndexSearcher indexSearcher=new IndexSearcher(w.getReader());
  w.close();
  Sort groupSort=Sort.RELEVANCE;
  GroupingSearch groupingSearch=createRandomGroupingSearch(groupField,groupSort,5,canUseIDV);
  TopGroups<?> groups=groupingSearch.search(indexSearcher,null,new TermQuery(new Term("content","random")),0,10);
  assertEquals(7,groups.totalHitCount);
  assertEquals(7,groups.totalGroupedHitCount);
  assertEquals(4,groups.groups.length);
  GroupDocs<?> group=groups.groups[0];
  compareGroupValue("author3",group);
  assertEquals(2,group.scoreDocs.length);
  assertEquals(5,group.scoreDocs[0].doc);
  assertEquals(4,group.scoreDocs[1].doc);
  assertTrue(group.scoreDocs[0].score > group.scoreDocs[1].score);
  group=groups.groups[1];
  compareGroupValue("author1",group);
  assertEquals(3,group.scoreDocs.length);
  assertEquals(0,group.scoreDocs[0].doc);
  assertEquals(1,group.scoreDocs[1].doc);
  assertEquals(2,group.scoreDocs[2].doc);
  assertTrue(group.scoreDocs[0].score > group.scoreDocs[1].score);
  assertTrue(group.scoreDocs[1].score > group.scoreDocs[2].score);
  group=groups.groups[2];
  compareGroupValue("author2",group);
  assertEquals(1,group.scoreDocs.length);
  assertEquals(3,group.scoreDocs[0].doc);
  group=groups.groups[3];
  compareGroupValue(null,group);
  assertEquals(1,group.scoreDocs.length);
  assertEquals(6,group.scoreDocs[0].doc);
  Filter lastDocInBlock=new CachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term("groupend","x"))));
  groupingSearch=new GroupingSearch(lastDocInBlock);
  groups=groupingSearch.search(indexSearcher,null,new TermQuery(new Term("content","random")),0,10);
  assertEquals(7,groups.totalHitCount);
  assertEquals(7,groups.totalGroupedHitCount);
  assertEquals(4,groups.totalGroupCount.longValue());
  assertEquals(4,groups.groups.length);
  indexSearcher.getIndexReader().close();
  dir.close();
}
