{
  IndexReader indexReader=DirectoryReader.open(directory);
  IndexSearcher indexSearcher=new IndexSearcher(indexReader);
  Sort idSort=new Sort(new SortField("id",SortField.Type.INT));
{
    SpatialArgs args=new SpatialArgs(SpatialOperation.Intersects,ctx.makeCircle(-80.0,33.0,200));
    Filter filter=strategy.makeFilter(args);
    TopDocs docs=indexSearcher.search(new MatchAllDocsQuery(),filter,10,idSort);
    assertDocMatchedIds(indexSearcher,docs,2);
  }
{
    SpatialArgs args=new SpatialArgs(SpatialOperation.Intersects,ctx.makePoint(60,-50));
    ValueSource valueSource=strategy.makeValueSource(args);
    Sort reverseDistSort=new Sort(valueSource.getSortField(false)).rewrite(indexSearcher);
    TopDocs docs=indexSearcher.search(new MatchAllDocsQuery(),10,reverseDistSort);
    assertDocMatchedIds(indexSearcher,docs,4,20,2);
  }
{
    SpatialArgs args=new SpatialArgs(SpatialOperation.Intersects,ctx.makeCircle(-80.0,33.0,200));
    SpatialArgs args2=new SpatialArgsParser().parse("Intersects(Circle(33,-80 d=200))",ctx);
    assertEquals(args.toString(),args2.toString());
  }
  indexReader.close();
}
