{
  IndexReader indexReader=DirectoryReader.open(directory);
  IndexSearcher indexSearcher=new IndexSearcher(indexReader);
  Sort idSort=new Sort(new SortField("id",SortField.Type.INT));
{
    SpatialArgs args=new SpatialArgs(SpatialOperation.Intersects,ctx.makeCircle(-80.0,33.0,DistanceUtils.dist2Degrees(200,DistanceUtils.EARTH_MEAN_RADIUS_KM)));
    Filter filter=strategy.makeFilter(args);
    TopDocs docs=indexSearcher.search(new MatchAllDocsQuery(),filter,10,idSort);
    assertDocMatchedIds(indexSearcher,docs,2);
    StoredDocument doc1=indexSearcher.doc(docs.scoreDocs[0].doc);
    String doc1Str=doc1.getField(strategy.getFieldName()).stringValue();
    Point doc1Point=(Point)ctx.readShape(doc1Str);
    double doc1DistDEG=ctx.getDistCalc().distance(args.getShape().getCenter(),doc1Point);
    assertEquals(121.6d,DistanceUtils.degrees2Dist(doc1DistDEG,DistanceUtils.EARTH_MEAN_RADIUS_KM),0.1);
  }
{
    Point pt=ctx.makePoint(60,-50);
    ValueSource valueSource=strategy.makeDistanceValueSource(pt);
    Sort distSort=new Sort(valueSource.getSortField(false)).rewrite(indexSearcher);
    TopDocs docs=indexSearcher.search(new MatchAllDocsQuery(),10,distSort);
    assertDocMatchedIds(indexSearcher,docs,4,20,2);
  }
{
    SpatialArgs args=new SpatialArgs(SpatialOperation.Intersects,ctx.makeCircle(-80.0,33.0,1));
    SpatialArgs args2=new SpatialArgsParser().parse("Intersects(Circle(33,-80 d=1))",ctx);
    assertEquals(args.toString(),args2.toString());
  }
  indexReader.close();
}
