{
  this.readState=readState;
  String dataFileName=IndexFileNames.segmentFileName(readState.segmentInfo.name,readState.segmentSuffix,Lucene60PointFormat.DATA_EXTENSION);
  dataIn=readState.directory.openInput(dataFileName,readState.context);
  String indexFileName=IndexFileNames.segmentFileName(readState.segmentInfo.name,readState.segmentSuffix,Lucene60PointFormat.INDEX_EXTENSION);
  boolean success=false;
  try (ChecksumIndexInput indexIn=readState.directory.openChecksumInput(indexFileName,readState.context)){
    CodecUtil.checkIndexHeader(indexIn,Lucene60PointFormat.CODEC_NAME,Lucene60PointFormat.INDEX_VERSION_START,Lucene60PointFormat.INDEX_VERSION_START,readState.segmentInfo.getId(),readState.segmentSuffix);
    int count=indexIn.readVInt();
    for (int i=0; i < count; i++) {
      int fieldNumber=indexIn.readVInt();
      long fp=indexIn.readVLong();
      dataIn.seek(fp);
      BKDReader reader=new BKDReader(dataIn);
      readers.put(fieldNumber,reader);
    }
    CodecUtil.checkFooter(indexIn);
    success=true;
  }
  finally {
    if (success == false) {
      IOUtils.closeWhileHandlingException(dataIn);
    }
  }
}
