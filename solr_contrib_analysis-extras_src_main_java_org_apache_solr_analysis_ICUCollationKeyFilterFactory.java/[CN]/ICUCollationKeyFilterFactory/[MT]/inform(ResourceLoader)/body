{
  String custom=args.get("custom");
  String localeID=args.get("locale");
  String strength=args.get("strength");
  String decomposition=args.get("decomposition");
  if (custom == null && localeID == null)   throw new SolrException(ErrorCode.SERVER_ERROR,"Either custom or locale is required.");
  if (custom != null && localeID != null)   throw new SolrException(ErrorCode.SERVER_ERROR,"Cannot specify both locale and custom. " + "To tailor rules for a built-in language, see the javadocs for RuleBasedCollator. " + "Then save the entire customized ruleset to a file, and use with the custom parameter");
  if (localeID != null) {
    collator=createFromLocale(localeID);
  }
 else {
    collator=createFromRules(custom,loader);
  }
  if (strength != null) {
    if (strength.equalsIgnoreCase("primary"))     collator.setStrength(Collator.PRIMARY);
 else     if (strength.equalsIgnoreCase("secondary"))     collator.setStrength(Collator.SECONDARY);
 else     if (strength.equalsIgnoreCase("tertiary"))     collator.setStrength(Collator.TERTIARY);
 else     if (strength.equalsIgnoreCase("quaternary"))     collator.setStrength(Collator.QUATERNARY);
 else     if (strength.equalsIgnoreCase("identical"))     collator.setStrength(Collator.IDENTICAL);
 else     throw new SolrException(ErrorCode.SERVER_ERROR,"Invalid strength: " + strength);
  }
  if (decomposition != null) {
    if (decomposition.equalsIgnoreCase("no"))     collator.setDecomposition(Collator.NO_DECOMPOSITION);
 else     if (decomposition.equalsIgnoreCase("canonical"))     collator.setDecomposition(Collator.CANONICAL_DECOMPOSITION);
 else     throw new SolrException(ErrorCode.SERVER_ERROR,"Invalid decomposition: " + decomposition);
  }
}
