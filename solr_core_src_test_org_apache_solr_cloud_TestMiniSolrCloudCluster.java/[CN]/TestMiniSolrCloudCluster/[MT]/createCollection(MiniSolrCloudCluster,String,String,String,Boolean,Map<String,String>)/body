{
  String configName="solrCloudCollectionConfig";
  miniCluster.uploadConfigSet(SolrTestCaseJ4.TEST_PATH().resolve("collection1").resolve("conf"),configName);
  final boolean persistIndex=(indexToPersist != null ? indexToPersist.booleanValue() : random().nextBoolean());
  if (collectionProperties == null) {
    collectionProperties=new HashMap<>();
  }
  collectionProperties.putIfAbsent(CoreDescriptor.CORE_CONFIG,"solrconfig-tlog.xml");
  collectionProperties.putIfAbsent("solr.tests.maxBufferedDocs","100000");
  collectionProperties.putIfAbsent("solr.tests.ramBufferSizeMB","100");
  if (random().nextBoolean()) {
    collectionProperties.putIfAbsent(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_MERGEPOLICY,TieredMergePolicy.class.getName());
    collectionProperties.putIfAbsent(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY,"true");
    collectionProperties.putIfAbsent(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY,"false");
  }
 else {
    collectionProperties.putIfAbsent(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_MERGEPOLICYFACTORY,TieredMergePolicyFactory.class.getName());
    collectionProperties.putIfAbsent(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY,"true");
    collectionProperties.putIfAbsent(SolrTestCaseJ4.SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY,"false");
  }
  collectionProperties.putIfAbsent("solr.tests.mergeScheduler","org.apache.lucene.index.ConcurrentMergeScheduler");
  collectionProperties.putIfAbsent("solr.directoryFactory",(persistIndex ? "solr.StandardDirectoryFactory" : "solr.RAMDirectoryFactory"));
  if (asyncId == null) {
    CollectionAdminRequest.createCollection(collectionName,configName,NUM_SHARDS,REPLICATION_FACTOR).setCreateNodeSet(createNodeSet).setProperties(collectionProperties).process(miniCluster.getSolrClient());
  }
 else {
    CollectionAdminRequest.createCollection(collectionName,configName,NUM_SHARDS,REPLICATION_FACTOR).setCreateNodeSet(createNodeSet).setProperties(collectionProperties).processAndWait(miniCluster.getSolrClient(),30);
  }
}
