{
  File solrXml=new File(SolrTestCaseJ4.TEST_HOME(),"solr-no-core.xml");
  AtomicInteger jettyIndex=new AtomicInteger();
  MiniSolrCloudCluster cluster=new MiniSolrCloudCluster(3,createTempDir().toFile(),solrXml,JettyConfig.builder().build()){
    @Override protected JettySolrRunner stopJettySolrRunner(    JettySolrRunner jetty) throws Exception {
      JettySolrRunner j=super.stopJettySolrRunner(jetty);
      if (jettyIndex.incrementAndGet() == 2)       throw new IOException("Fake IOException on shutdown!");
      return j;
    }
  }
;
  try {
    cluster.shutdown();
    fail("Expected an exception to be thrown on MiniSolrCloudCluster shutdown");
  }
 catch (  Exception e) {
    assertEquals("Error shutting down MiniSolrCloudCluster",e.getMessage());
    assertEquals("Expected one suppressed exception",1,e.getSuppressed().length);
    assertEquals("Fake IOException on shutdown!",e.getSuppressed()[0].getMessage());
  }
}
