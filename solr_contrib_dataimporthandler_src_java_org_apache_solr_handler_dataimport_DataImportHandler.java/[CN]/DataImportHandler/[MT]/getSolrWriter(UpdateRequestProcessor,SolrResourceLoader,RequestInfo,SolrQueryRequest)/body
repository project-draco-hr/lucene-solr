{
  SolrParams reqParams=req.getParams();
  String writerClassStr=null;
  if (reqParams != null && reqParams.get(PARAM_WRITER_IMPL) != null) {
    writerClassStr=(String)reqParams.get(PARAM_WRITER_IMPL);
  }
  DIHWriter writer;
  if (writerClassStr != null && !writerClassStr.equals(DEFAULT_WRITER_NAME) && !writerClassStr.equals(DocBuilder.class.getPackage().getName() + "." + DEFAULT_WRITER_NAME)) {
    try {
      @SuppressWarnings("unchecked") Class<DIHWriter> writerClass=DocBuilder.loadClass(writerClassStr,req.getCore());
      Constructor<DIHWriter> cnstr=writerClass.getConstructor(new Class[]{UpdateRequestProcessor.class,SolrQueryRequest.class});
      return cnstr.newInstance((Object)processor,(Object)req);
    }
 catch (    Exception e) {
      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,"Unable to load Writer implementation:" + writerClassStr,e);
    }
  }
 else {
    return new SolrWriter(processor,req){
      @Override public boolean upload(      SolrInputDocument document){
        try {
          return super.upload(document);
        }
 catch (        RuntimeException e) {
          LOG.error("Exception while adding: " + document,e);
          return false;
        }
      }
    }
;
  }
}
