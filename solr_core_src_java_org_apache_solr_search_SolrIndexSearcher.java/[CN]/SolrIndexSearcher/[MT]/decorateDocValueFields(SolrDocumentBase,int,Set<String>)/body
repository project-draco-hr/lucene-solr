{
  final LeafReader reader=getLeafReader();
  for (  String fieldName : fields) {
    final SchemaField schemaField=schema.getFieldOrNull(fieldName);
    if (schemaField == null || !schemaField.hasDocValues() || doc.containsKey(fieldName)) {
      log.warn("Couldn't decorate docValues for field: [{}], schemaField: [{}]",fieldName,schemaField);
      continue;
    }
    if (!DocValues.getDocsWithField(leafReader,fieldName).get(docid)) {
      continue;
    }
    if (schemaField.multiValued()) {
      final SortedSetDocValues values=reader.getSortedSetDocValues(fieldName);
      if (values != null && values.getValueCount() > 0) {
        values.setDocument(docid);
        final List<Object> outValues=new LinkedList<Object>();
        for (long ord=values.nextOrd(); ord != SortedSetDocValues.NO_MORE_ORDS; ord=values.nextOrd()) {
          final BytesRef value=values.lookupOrd(ord);
          outValues.add(schemaField.getType().toObject(schemaField,value));
        }
        if (outValues.size() > 0)         doc.addField(fieldName,outValues);
      }
    }
 else {
      final DocValuesType dvType=fieldInfos.fieldInfo(fieldName).getDocValuesType();
switch (dvType) {
case NUMERIC:
        final NumericDocValues ndv=leafReader.getNumericDocValues(fieldName);
      Long val=ndv.get(docid);
    Object newVal=val;
  if (schemaField.getType() instanceof TrieIntField) {
    newVal=val.intValue();
  }
 else   if (schemaField.getType() instanceof TrieFloatField) {
    newVal=Float.intBitsToFloat(val.intValue());
  }
 else   if (schemaField.getType() instanceof TrieDoubleField) {
    newVal=Double.longBitsToDouble(val);
  }
 else   if (schemaField.getType() instanceof TrieDateField) {
    newVal=new Date(val);
  }
 else   if (schemaField.getType() instanceof EnumField) {
    newVal=((EnumField)schemaField.getType()).intValueToStringValue(val.intValue());
  }
doc.addField(fieldName,newVal);
break;
case BINARY:
BinaryDocValues bdv=leafReader.getBinaryDocValues(fieldName);
doc.addField(fieldName,bdv.get(docid));
break;
case SORTED:
SortedDocValues sdv=leafReader.getSortedDocValues(fieldName);
int ord=sdv.getOrd(docid);
if (ord >= 0) {
if (schemaField.getType() instanceof BoolField) {
final BytesRef bRef=sdv.lookupOrd(ord);
doc.addField(fieldName,schemaField.getType().toObject(schemaField,bRef));
}
 else {
doc.addField(fieldName,sdv.get(docid).utf8ToString());
}
}
break;
case SORTED_NUMERIC:
throw new AssertionError("SORTED_NUMERIC not supported yet!");
case SORTED_SET:
throw new AssertionError("SORTED_SET fields should be multi-valued!");
case NONE:
throw new AssertionError("Document does not have a DocValues field with the name '" + fieldName + "'!");
}
}
}
}
