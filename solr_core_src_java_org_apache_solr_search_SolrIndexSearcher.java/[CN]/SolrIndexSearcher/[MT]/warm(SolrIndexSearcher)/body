{
  long warmingStartTime=System.nanoTime();
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.add("warming","true");
  for (int i=0; i < cacheList.length; i++) {
    if (log.isDebugEnabled()) {
      log.debug("autowarming [{}] from [{}]\n\t{}",this,old,old.cacheList[i]);
    }
    final SolrQueryRequest req=new LocalSolrQueryRequest(core,params){
      @Override public SolrIndexSearcher getSearcher(){
        return SolrIndexSearcher.this;
      }
      @Override public void close(){
      }
    }
;
    final SolrQueryResponse rsp=new SolrQueryResponse();
    SolrRequestInfo.clearRequestInfo();
    SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req,rsp));
    try {
      cacheList[i].warm(this,old.cacheList[i]);
    }
  finally {
      try {
        req.close();
      }
  finally {
        SolrRequestInfo.clearRequestInfo();
      }
    }
    if (log.isDebugEnabled()) {
      log.debug("autowarming result for [{}]\n\t{}",this,cacheList[i]);
    }
  }
  warmupTime=TimeUnit.MILLISECONDS.convert(System.nanoTime() - warmingStartTime,TimeUnit.NANOSECONDS);
}
