{
  System.setProperty("authenticationPlugin",HttpParamDelegationTokenPlugin.class.getName());
  System.setProperty(KerberosPlugin.DELEGATION_TOKEN_ENABLED,"true");
  System.setProperty("solr.kerberos.cookie.domain","127.0.0.1");
  Map<String,String> impSettings=getImpersonatorSettings();
  for (  Map.Entry<String,String> entry : impSettings.entrySet()) {
    System.setProperty(entry.getKey(),entry.getValue());
  }
  System.setProperty("solr.test.sys.prop1","propone");
  System.setProperty("solr.test.sys.prop2","proptwo");
  SolrRequestParsers.DEFAULT.setAddRequestHeadersToContext(true);
  String solrXml=MiniSolrCloudCluster.DEFAULT_CLOUD_SOLR_XML.replace("</solr>"," <str name=\"collectionsHandler\">" + ImpersonatorCollectionsHandler.class.getName() + "</str>\n"+ "</solr>");
  miniCluster=new MiniSolrCloudCluster(NUM_SERVERS,createTempDir(),solrXml,buildJettyConfig("/solr"));
  JettySolrRunner runner=miniCluster.getJettySolrRunners().get(0);
  solrClient=new HttpSolrClient.Builder(runner.getBaseUrl().toString()).build();
}
