{
  HttpServletRequest request=(HttpServletRequest)servletRequest;
  HttpServletResponse response=(HttpServletResponse)servletResponse;
  String authHeader=request.getHeader("Authorization");
  if (authHeader != null) {
    BasicAuthPlugin.authHeader.set(new BasicHeader("Authorization",authHeader));
    StringTokenizer st=new StringTokenizer(authHeader);
    if (st.hasMoreTokens()) {
      String basic=st.nextToken();
      if (basic.equalsIgnoreCase("Basic")) {
        try {
          String credentials=new String(Base64.decodeBase64(st.nextToken()),"UTF-8");
          int p=credentials.indexOf(":");
          if (p != -1) {
            final String username=credentials.substring(0,p).trim();
            String pwd=credentials.substring(p + 1).trim();
            if (!authenticate(username,pwd)) {
              authenticationFailure(response,"Bad credentials");
            }
 else {
              HttpServletRequestWrapper wrapper=new HttpServletRequestWrapper(request){
                @Override public Principal getUserPrincipal(){
                  return new BasicUserPrincipal(username);
                }
              }
;
              filterChain.doFilter(wrapper,response);
              return true;
            }
          }
 else {
            authenticationFailure(response,"Invalid authentication token");
          }
        }
 catch (        UnsupportedEncodingException e) {
          throw new Error("Couldn't retrieve authentication",e);
        }
      }
    }
  }
 else {
    if (blockUnknown) {
      authenticationFailure(response,"require authentication");
    }
 else {
      request.setAttribute(AuthenticationPlugin.class.getName(),authenticationProvider.getPromptHeaders());
      filterChain.doFilter(request,response);
      return true;
    }
  }
  return false;
}
