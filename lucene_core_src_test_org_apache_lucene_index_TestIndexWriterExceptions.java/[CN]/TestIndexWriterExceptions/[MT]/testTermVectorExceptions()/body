{
  FailOnTermVectors[] failures=new FailOnTermVectors[]{new FailOnTermVectors(FailOnTermVectors.AFTER_INIT_STAGE),new FailOnTermVectors(FailOnTermVectors.INIT_STAGE)};
  int num=atLeast(1);
  for (int j=0; j < num; j++) {
    for (    FailOnTermVectors failure : failures) {
      MockDirectoryWrapper dir=newMockDirectory();
      IndexWriter w=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())));
      dir.failOn(failure);
      int numDocs=10 + random().nextInt(30);
      for (int i=0; i < numDocs; i++) {
        Document doc=new Document();
        Field field=newTextField(random(),"field","a field",Field.Store.YES);
        doc.add(field);
        try {
          w.addDocument(doc);
          assertFalse(field.fieldType().storeTermVectors());
        }
 catch (        RuntimeException e) {
          assertTrue(e.getMessage().startsWith(FailOnTermVectors.EXC_MSG));
        }
        if (random().nextInt(20) == 0) {
          w.commit();
          TestUtil.checkIndex(dir);
        }
      }
      Document document=new Document();
      document.add(new TextField("field","a field",Field.Store.YES));
      w.addDocument(document);
      for (int i=0; i < numDocs; i++) {
        Document doc=new Document();
        Field field=newTextField(random(),"field","a field",Field.Store.YES);
        doc.add(field);
        try {
          w.addDocument(doc);
          assertFalse(field.fieldType().storeTermVectors());
        }
 catch (        RuntimeException e) {
          assertTrue(e.getMessage().startsWith(FailOnTermVectors.EXC_MSG));
        }
        if (random().nextInt(20) == 0) {
          w.commit();
          TestUtil.checkIndex(dir);
        }
      }
      document=new Document();
      document.add(new TextField("field","a field",Field.Store.YES));
      w.addDocument(document);
      w.shutdown();
      IndexReader reader=DirectoryReader.open(dir);
      assertTrue(reader.numDocs() > 0);
      SegmentInfos sis=new SegmentInfos();
      sis.read(dir);
      for (      AtomicReaderContext context : reader.leaves()) {
        assertFalse(context.reader().getFieldInfos().hasVectors());
      }
      reader.close();
      dir.close();
    }
  }
}
