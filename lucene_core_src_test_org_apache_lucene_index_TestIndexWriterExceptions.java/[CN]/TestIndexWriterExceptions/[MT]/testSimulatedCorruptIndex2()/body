{
  BaseDirectoryWrapper dir=newDirectory();
  dir.setCheckIndexOnClose(false);
  IndexWriter writer=null;
  writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy(true)));
  ((LogMergePolicy)writer.getConfig().getMergePolicy()).setNoCFSRatio(1.0);
  for (int i=0; i < 100; i++) {
    addDoc(writer);
  }
  writer.close();
  long gen=SegmentInfos.getLastCommitGeneration(dir);
  assertTrue("segment generation should be > 0 but got " + gen,gen > 0);
  String[] files=dir.listAll();
  boolean corrupted=false;
  for (int i=0; i < files.length; i++) {
    if (files[i].endsWith(".cfs")) {
      dir.deleteFile(files[i]);
      corrupted=true;
      break;
    }
  }
  assertTrue("failed to find cfs file to remove",corrupted);
  IndexReader reader=null;
  try {
    reader=DirectoryReader.open(dir);
    fail("reader did not hit IOException on opening a corrupt index");
  }
 catch (  Exception e) {
  }
  if (reader != null) {
    reader.close();
  }
  dir.close();
}
