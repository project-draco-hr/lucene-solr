{
  Directory dir=newDirectory();
  MockIndexWriter w=new MockIndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setMaxBufferedDocs(2));
  Document doc=new Document();
  doc.add(newTextField("field","a field",Field.Store.YES));
  w.addDocument(doc);
  Analyzer analyzer=new Analyzer(new Analyzer.PerFieldReuseStrategy()){
    @Override public TokenStreamComponents createComponents(    String fieldName,    Reader reader){
      MockTokenizer tokenizer=new MockTokenizer(reader,MockTokenizer.WHITESPACE,false);
      tokenizer.setEnableChecks(false);
      return new TokenStreamComponents(tokenizer,new CrashingFilter(fieldName,tokenizer));
    }
  }
;
  Document crashDoc=new Document();
  crashDoc.add(newTextField("crash","do it on token 4",Field.Store.YES));
  try {
    w.addDocument(crashDoc,analyzer);
    fail("did not hit expected exception");
  }
 catch (  IOException ioe) {
  }
  w.addDocument(doc);
  w.close();
  dir.close();
}
