{
  final AtomicBoolean thrown=new AtomicBoolean(false);
  final Directory dir=newDirectory();
  final IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())).setInfoStream(new InfoStream(){
    @Override public void message(    String component,    final String message){
      if (message.startsWith("now flush at close") && thrown.compareAndSet(false,true)) {
        throw new OutOfMemoryError("fake OOME at " + message);
      }
    }
    @Override public boolean isEnabled(    String component){
      return true;
    }
    @Override public void close(){
    }
  }
));
  try {
    writer.close();
    fail("OutOfMemoryError expected");
  }
 catch (  final OutOfMemoryError expected) {
  }
  writer.close();
  dir.close();
}
