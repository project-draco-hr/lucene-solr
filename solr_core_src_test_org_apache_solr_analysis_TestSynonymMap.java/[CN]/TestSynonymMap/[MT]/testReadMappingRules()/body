{
  SlowSynonymMap synMap;
  List<String> rules=new ArrayList<String>();
  rules.add("a=>b");
  synMap=new SlowSynonymMap(true);
  SlowSynonymFilterFactory.parseRules(rules,synMap,"=>",",",true,null);
  assertEquals(1,synMap.submap.size());
  assertTokIncludes(synMap,"a","b");
  rules.clear();
  rules.add("a,b=>c");
  synMap=new SlowSynonymMap(true);
  SlowSynonymFilterFactory.parseRules(rules,synMap,"=>",",",true,null);
  assertEquals(2,synMap.submap.size());
  assertTokIncludes(synMap,"a","c");
  assertTokIncludes(synMap,"b","c");
  rules.clear();
  rules.add("a=>b,c");
  synMap=new SlowSynonymMap(true);
  SlowSynonymFilterFactory.parseRules(rules,synMap,"=>",",",true,null);
  assertEquals(1,synMap.submap.size());
  assertTokIncludes(synMap,"a","b");
  assertTokIncludes(synMap,"a","c");
  rules.clear();
  rules.add("a=>a1");
  rules.add("a b=>a2");
  synMap=new SlowSynonymMap(true);
  SlowSynonymFilterFactory.parseRules(rules,synMap,"=>",",",true,null);
  assertEquals(1,synMap.submap.size());
  assertTokIncludes(synMap,"a","a1");
  assertEquals(1,getSubSynonymMap(synMap,"a").submap.size());
  assertTokIncludes(getSubSynonymMap(synMap,"a"),"b","a2");
  rules.clear();
  rules.add("a=>a1");
  rules.add("a b=>a2");
  rules.add("a c=>a3");
  synMap=new SlowSynonymMap(true);
  SlowSynonymFilterFactory.parseRules(rules,synMap,"=>",",",true,null);
  assertEquals(1,synMap.submap.size());
  assertTokIncludes(synMap,"a","a1");
  assertEquals(2,getSubSynonymMap(synMap,"a").submap.size());
  assertTokIncludes(getSubSynonymMap(synMap,"a"),"b","a2");
  assertTokIncludes(getSubSynonymMap(synMap,"a"),"c","a3");
  rules.clear();
  rules.add("a=>a1");
  rules.add("a b=>a2");
  rules.add("b=>b1");
  rules.add("b c=>b2");
  synMap=new SlowSynonymMap(true);
  SlowSynonymFilterFactory.parseRules(rules,synMap,"=>",",",true,null);
  assertEquals(2,synMap.submap.size());
  assertTokIncludes(synMap,"a","a1");
  assertEquals(1,getSubSynonymMap(synMap,"a").submap.size());
  assertTokIncludes(getSubSynonymMap(synMap,"a"),"b","a2");
  assertTokIncludes(synMap,"b","b1");
  assertEquals(1,getSubSynonymMap(synMap,"b").submap.size());
  assertTokIncludes(getSubSynonymMap(synMap,"b"),"c","b2");
}
