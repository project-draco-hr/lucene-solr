{
  Map<String,String> args=new HashMap<String,String>();
  args.put("synonyms","something.txt");
  SlowSynonymFilterFactory ff=new SlowSynonymFilterFactory();
  ff.init(args);
  ff.inform(new ResourceLoader(){
    @Override public List<String> getLines(    String resource) throws IOException {
      if (!"something.txt".equals(resource)) {
        throw new RuntimeException("should not get a differnt resource");
      }
      List<String> rules=new ArrayList<String>();
      rules.add("a,b");
      return rules;
    }
    @Override public <T>T newInstance(    String cname,    Class<T> expectedType,    String... subpackages){
      throw new RuntimeException("stub");
    }
    @Override public InputStream openResource(    String resource) throws IOException {
      throw new RuntimeException("stub");
    }
  }
);
  SlowSynonymMap synMap=ff.getSynonymMap();
  assertEquals(2,synMap.submap.size());
  assertTokIncludes(synMap,"a","a");
  assertTokIncludes(synMap,"a","b");
  assertTokIncludes(synMap,"b","a");
  assertTokIncludes(synMap,"b","b");
}
