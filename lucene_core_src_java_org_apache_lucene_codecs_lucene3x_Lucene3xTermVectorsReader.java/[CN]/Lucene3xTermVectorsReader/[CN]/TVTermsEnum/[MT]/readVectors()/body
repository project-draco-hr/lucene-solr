{
  termAndPostings=new TermAndPostings[numTerms];
  BytesRef lastTerm=new BytesRef();
  for (int i=0; i < numTerms; i++) {
    TermAndPostings t=new TermAndPostings();
    BytesRef term=new BytesRef();
    term.copyBytes(lastTerm);
    final int start=tvf.readVInt();
    final int deltaLen=tvf.readVInt();
    term.length=start + deltaLen;
    term.grow(term.length);
    tvf.readBytes(term.bytes,start,deltaLen);
    t.term=term;
    int freq=tvf.readVInt();
    t.freq=freq;
    if (storePositions) {
      int positions[]=new int[freq];
      int pos=0;
      for (int posUpto=0; posUpto < freq; posUpto++) {
        pos+=tvf.readVInt();
        positions[posUpto]=pos;
      }
      t.positions=positions;
    }
    if (storeOffsets) {
      int startOffsets[]=new int[freq];
      int endOffsets[]=new int[freq];
      int offset=0;
      for (int posUpto=0; posUpto < freq; posUpto++) {
        startOffsets[posUpto]=offset + tvf.readVInt();
        offset=endOffsets[posUpto]=startOffsets[posUpto] + tvf.readVInt();
      }
      t.startOffsets=startOffsets;
      t.endOffsets=endOffsets;
    }
    lastTerm.copyBytes(term);
    termAndPostings[i]=t;
  }
}
