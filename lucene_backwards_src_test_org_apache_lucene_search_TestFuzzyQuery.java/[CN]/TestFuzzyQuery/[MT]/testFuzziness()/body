{
  RAMDirectory directory=new RAMDirectory();
  IndexWriter writer=new IndexWriter(directory,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED);
  addDoc("aaaaa",writer);
  addDoc("aaaab",writer);
  addDoc("aaabb",writer);
  addDoc("aabbb",writer);
  addDoc("abbbb",writer);
  addDoc("bbbbb",writer);
  addDoc("ddddd",writer);
  writer.optimize();
  writer.close();
  IndexSearcher searcher=new IndexSearcher(directory,true);
  FuzzyQuery query=new FuzzyQuery(new Term("field","aaaaa"),FuzzyQuery.defaultMinSimilarity,0);
  ScoreDoc[] hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  query=new FuzzyQuery(new Term("field","aaaaa"),FuzzyQuery.defaultMinSimilarity,1);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  query=new FuzzyQuery(new Term("field","aaaaa"),FuzzyQuery.defaultMinSimilarity,2);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  query=new FuzzyQuery(new Term("field","aaaaa"),FuzzyQuery.defaultMinSimilarity,3);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  query=new FuzzyQuery(new Term("field","aaaaa"),FuzzyQuery.defaultMinSimilarity,4);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(2,hits.length);
  query=new FuzzyQuery(new Term("field","aaaaa"),FuzzyQuery.defaultMinSimilarity,5);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  query=new FuzzyQuery(new Term("field","aaaaa"),FuzzyQuery.defaultMinSimilarity,6);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  int savedClauseCount=BooleanQuery.getMaxClauseCount();
  try {
    BooleanQuery.setMaxClauseCount(2);
    query=new FuzzyQuery(new Term("field","aaaab"),FuzzyQuery.defaultMinSimilarity,3);
    hits=searcher.search(query,null,1000).scoreDocs;
    assertEquals("only 2 documents should match",2,hits.length);
    Set<String> possibleTerms=new HashSet<String>(Arrays.asList("aaaaa","aaaab"));
    for (int i=0; i < hits.length; i++) {
      final String term=searcher.doc(hits[i].doc).get("field");
      assertTrue("term '" + term + "' should not appear in results",possibleTerms.contains(term));
    }
  }
  finally {
    BooleanQuery.setMaxClauseCount(savedClauseCount);
  }
  query=new FuzzyQuery(new Term("field","xxxxx"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","aaccc"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","aaaaa"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaa"));
  assertEquals(searcher.doc(hits[1].doc).get("field"),("aaaab"));
  assertEquals(searcher.doc(hits[2].doc).get("field"),("aaabb"));
  query=new FuzzyQuery(new Term("field","aaaac"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaa"));
  assertEquals(searcher.doc(hits[1].doc).get("field"),("aaaab"));
  assertEquals(searcher.doc(hits[2].doc).get("field"),("aaabb"));
  query=new FuzzyQuery(new Term("field","aaaac"),FuzzyQuery.defaultMinSimilarity,1);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaa"));
  assertEquals(searcher.doc(hits[1].doc).get("field"),("aaaab"));
  assertEquals(searcher.doc(hits[2].doc).get("field"),("aaabb"));
  query=new FuzzyQuery(new Term("field","aaaac"),FuzzyQuery.defaultMinSimilarity,2);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaa"));
  assertEquals(searcher.doc(hits[1].doc).get("field"),("aaaab"));
  assertEquals(searcher.doc(hits[2].doc).get("field"),("aaabb"));
  query=new FuzzyQuery(new Term("field","aaaac"),FuzzyQuery.defaultMinSimilarity,3);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(3,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaa"));
  assertEquals(searcher.doc(hits[1].doc).get("field"),("aaaab"));
  assertEquals(searcher.doc(hits[2].doc).get("field"),("aaabb"));
  query=new FuzzyQuery(new Term("field","aaaac"),FuzzyQuery.defaultMinSimilarity,4);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(2,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("aaaaa"));
  assertEquals(searcher.doc(hits[1].doc).get("field"),("aaaab"));
  query=new FuzzyQuery(new Term("field","aaaac"),FuzzyQuery.defaultMinSimilarity,5);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("field","ddddX"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("ddddd"));
  query=new FuzzyQuery(new Term("field","ddddX"),FuzzyQuery.defaultMinSimilarity,1);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("ddddd"));
  query=new FuzzyQuery(new Term("field","ddddX"),FuzzyQuery.defaultMinSimilarity,2);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("ddddd"));
  query=new FuzzyQuery(new Term("field","ddddX"),FuzzyQuery.defaultMinSimilarity,3);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("ddddd"));
  query=new FuzzyQuery(new Term("field","ddddX"),FuzzyQuery.defaultMinSimilarity,4);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(1,hits.length);
  assertEquals(searcher.doc(hits[0].doc).get("field"),("ddddd"));
  query=new FuzzyQuery(new Term("field","ddddX"),FuzzyQuery.defaultMinSimilarity,5);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  query=new FuzzyQuery(new Term("anotherfield","ddddX"),FuzzyQuery.defaultMinSimilarity,0);
  hits=searcher.search(query,null,1000).scoreDocs;
  assertEquals(0,hits.length);
  searcher.close();
  directory.close();
}
