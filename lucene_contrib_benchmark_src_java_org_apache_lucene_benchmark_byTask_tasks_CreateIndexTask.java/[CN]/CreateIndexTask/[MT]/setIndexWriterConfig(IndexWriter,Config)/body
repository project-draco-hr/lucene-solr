{
  final String mergeScheduler=config.get("merge.scheduler","org.apache.lucene.index.ConcurrentMergeScheduler");
  if (mergeScheduler.equals(NoMergeScheduler.class.getName())) {
    writer.setMergeScheduler(NoMergeScheduler.INSTANCE);
  }
 else {
    try {
      writer.setMergeScheduler(Class.forName(mergeScheduler).asSubclass(MergeScheduler.class).newInstance());
    }
 catch (    Exception e) {
      throw new RuntimeException("unable to instantiate class '" + mergeScheduler + "' as merge scheduler",e);
    }
    if (mergeScheduler.equals("org.apache.lucene.index.ConcurrentMergeScheduler")) {
      ConcurrentMergeScheduler cms=(ConcurrentMergeScheduler)writer.getMergeScheduler();
      int v=config.get("concurrent.merge.scheduler.max.thread.count",-1);
      if (v != -1) {
        cms.setMaxThreadCount(v);
      }
      v=config.get("concurrent.merge.scheduler.max.merge.count",-1);
      if (v != -1) {
        cms.setMaxMergeCount(v);
      }
    }
  }
  final String mergePolicy=config.get("merge.policy","org.apache.lucene.index.LogByteSizeMergePolicy");
  boolean isCompound=config.get("compound",true);
  if (mergePolicy.equals(NoMergePolicy.class.getName())) {
    writer.setMergePolicy(isCompound ? NoMergePolicy.COMPOUND_FILES : NoMergePolicy.NO_COMPOUND_FILES);
  }
 else {
    try {
      writer.setMergePolicy(Class.forName(mergePolicy).asSubclass(MergePolicy.class).newInstance());
    }
 catch (    Exception e) {
      throw new RuntimeException("unable to instantiate class '" + mergePolicy + "' as merge policy",e);
    }
    writer.setUseCompoundFile(isCompound);
    writer.setMergeFactor(config.get("merge.factor",OpenIndexTask.DEFAULT_MERGE_PFACTOR));
  }
  writer.setMaxFieldLength(config.get("max.field.length",OpenIndexTask.DEFAULT_MAX_FIELD_LENGTH));
  final double ramBuffer=config.get("ram.flush.mb",OpenIndexTask.DEFAULT_RAM_FLUSH_MB);
  final int maxBuffered=config.get("max.buffered",OpenIndexTask.DEFAULT_MAX_BUFFERED);
  if (maxBuffered == IndexWriterConfig.DISABLE_AUTO_FLUSH) {
    writer.setRAMBufferSizeMB(ramBuffer);
    writer.setMaxBufferedDocs(maxBuffered);
  }
 else {
    writer.setMaxBufferedDocs(maxBuffered);
    writer.setRAMBufferSizeMB(ramBuffer);
  }
  String infoStreamVal=config.get("writer.info.stream",null);
  if (infoStreamVal != null) {
    if (infoStreamVal.equals("SystemOut")) {
      writer.setInfoStream(System.out);
    }
 else     if (infoStreamVal.equals("SystemErr")) {
      writer.setInfoStream(System.err);
    }
 else {
      File f=new File(infoStreamVal).getAbsoluteFile();
      writer.setInfoStream(new PrintStream(new BufferedOutputStream(new FileOutputStream(f))));
    }
  }
}
