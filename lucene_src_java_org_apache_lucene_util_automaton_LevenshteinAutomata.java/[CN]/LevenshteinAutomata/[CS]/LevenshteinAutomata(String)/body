{
  this.input=input;
  this.word=input.toCharArray();
  SortedSet<Character> set=new TreeSet<Character>();
  for (int i=0; i < word.length; i++)   set.add(word[i]);
  alphabet=new char[set.size()];
  Iterator<Character> iterator=set.iterator();
  for (int i=0; i < alphabet.length; i++)   alphabet[i]=iterator.next();
  rangeLower=new char[alphabet.length + 2];
  rangeUpper=new char[alphabet.length + 2];
  int lower=0;
  for (int i=0; i < alphabet.length; i++) {
    char higher=alphabet[i];
    if (higher > lower) {
      rangeLower[numRanges]=(char)lower;
      rangeUpper[numRanges]=(char)(higher - 1);
      numRanges++;
    }
    lower=higher + 1;
  }
  if (lower <= 0xFFFF) {
    rangeLower[numRanges]=(char)lower;
    rangeUpper[numRanges]='\uFFFF';
    numRanges++;
  }
  descriptions=new ParametricDescription[]{null,new Lev1ParametricDescription(input.length()),new Lev2ParametricDescription(input.length())};
}
