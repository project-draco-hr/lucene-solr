{
  final MergePolicy policy;
  if (mergePolicyInfo == null) {
    policy=defaultMergePolicyFactory.getMergePolicy();
  }
 else {
    policy=schema.getResourceLoader().newInstance(mergePolicyInfo.className,MergePolicy.class);
  }
  if (policy instanceof LogMergePolicy) {
    LogMergePolicy logMergePolicy=(LogMergePolicy)policy;
    fixUseCFMergePolicyInitArg(LogMergePolicy.class);
    if (maxMergeDocs != -1)     logMergePolicy.setMaxMergeDocs(maxMergeDocs);
    if (mergeFactor != -1)     logMergePolicy.setMergeFactor(mergeFactor);
  }
 else   if (policy instanceof TieredMergePolicy) {
    TieredMergePolicy tieredMergePolicy=(TieredMergePolicy)policy;
    fixUseCFMergePolicyInitArg(TieredMergePolicy.class);
    if (mergeFactor != -1) {
      tieredMergePolicy.setMaxMergeAtOnce(mergeFactor);
      tieredMergePolicy.setSegmentsPerTier(mergeFactor);
    }
  }
 else   if (mergeFactor != -1) {
    log.warn("Use of <mergeFactor> cannot be configured if merge policy is not an instance of LogMergePolicy or TieredMergePolicy. The configured policy's defaults will be used.");
  }
  if (mergePolicyInfo != null) {
    SolrPluginUtils.invokeSetters(policy,mergePolicyInfo.initArgs);
  }
  return policy;
}
