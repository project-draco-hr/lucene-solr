{
  final Directory dir=newDirectory();
  final IndexWriter w=new IndexWriter(dir,newIndexWriterConfig());
  w.addDocument(new Document());
class MySearcherFactory extends SearcherFactory {
    IndexReader lastReader=null;
    IndexReader lastPreviousReader=null;
    int called=0;
    @Override public IndexSearcher newSearcher(    IndexReader reader,    IndexReader previousReader) throws IOException {
      called++;
      lastReader=reader;
      lastPreviousReader=previousReader;
      return super.newSearcher(reader,previousReader);
    }
  }
  MySearcherFactory factory=new MySearcherFactory();
  final SearcherManager sm=new SearcherManager(w,random().nextBoolean(),false,factory);
  assertEquals(1,factory.called);
  assertNull(factory.lastPreviousReader);
  assertNotNull(factory.lastReader);
  IndexSearcher acquire=sm.acquire();
  assertSame(factory.lastReader,acquire.getIndexReader());
  sm.release(acquire);
  final IndexReader lastReader=factory.lastReader;
  w.addDocument(new Document());
  assertTrue(sm.maybeRefresh());
  acquire=sm.acquire();
  assertSame(factory.lastReader,acquire.getIndexReader());
  sm.release(acquire);
  assertNotNull(factory.lastPreviousReader);
  assertSame(lastReader,factory.lastPreviousReader);
  assertNotSame(factory.lastReader,lastReader);
  assertEquals(2,factory.called);
  w.close();
  sm.close();
  dir.close();
}
