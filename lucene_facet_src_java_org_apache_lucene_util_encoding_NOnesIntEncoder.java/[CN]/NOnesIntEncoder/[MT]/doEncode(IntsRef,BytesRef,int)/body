{
  if (values.length > internalBuffer.ints.length) {
    internalBuffer.grow(values.length);
  }
  int onesCounter=0;
  for (int i=values.offset; i < upto; i++) {
    int value=values.ints[i];
    if (value == 1) {
      if (++onesCounter == n) {
        internalBuffer.ints[internalBuffer.length++]=2;
        onesCounter=0;
      }
    }
 else {
      while (onesCounter > 0) {
        --onesCounter;
        internalBuffer.ints[internalBuffer.length++]=1;
      }
      internalBuffer.ints[internalBuffer.length++]=value + 1;
    }
  }
  while (onesCounter > 0) {
    --onesCounter;
    internalBuffer.ints[internalBuffer.length++]=1;
  }
  super.doEncode(internalBuffer,buf,internalBuffer.length);
}
