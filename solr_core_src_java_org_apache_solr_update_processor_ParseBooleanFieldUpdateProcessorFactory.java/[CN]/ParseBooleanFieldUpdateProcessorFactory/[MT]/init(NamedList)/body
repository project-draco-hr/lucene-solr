{
  Object caseSensitiveParam=args.remove(CASE_SENSITIVE_PARAM);
  if (null != caseSensitiveParam) {
    if (caseSensitiveParam instanceof Boolean) {
      caseSensitive=(Boolean)caseSensitiveParam;
    }
 else {
      caseSensitive=Boolean.valueOf(caseSensitiveParam.toString());
    }
  }
  Collection<String> trueValuesParam=args.removeConfigArgs(TRUE_VALUES_PARAM);
  if (!trueValuesParam.isEmpty()) {
    trueValues.clear();
    for (    String trueVal : trueValuesParam) {
      trueValues.add(caseSensitive ? trueVal : trueVal.toLowerCase(Locale.ROOT));
    }
  }
  Collection<String> falseValuesParam=args.removeConfigArgs(FALSE_VALUES_PARAM);
  if (!falseValuesParam.isEmpty()) {
    falseValues.clear();
    for (    String val : falseValuesParam) {
      final String falseVal=caseSensitive ? val : val.toLowerCase(Locale.ROOT);
      if (trueValues.contains(falseVal)) {
        throw new SolrException(ErrorCode.SERVER_ERROR,"Param '" + FALSE_VALUES_PARAM + "' contains a value also in param '"+ TRUE_VALUES_PARAM+ "': '"+ val+ "'");
      }
      falseValues.add(falseVal);
    }
  }
  super.init(args);
}
