{
  final int maxDoc=reader.maxDoc();
  final Bits liveDocs=reader.getLiveDocs();
  int totalNumDocs=0;
  if (matchingVectorsReader != null) {
    for (int docNum=0; docNum < maxDoc; ) {
      if (!liveDocs.get(docNum)) {
        ++docNum;
        continue;
      }
      int start=docNum, numDocs=0;
      do {
        docNum++;
        numDocs++;
        if (docNum >= maxDoc)         break;
        if (!liveDocs.get(docNum)) {
          docNum++;
          break;
        }
      }
 while (numDocs < MAX_RAW_MERGE_DOCS);
      matchingVectorsReader.rawDocs(rawDocLengths,rawDocLengths2,start,numDocs);
      addRawDocuments(matchingVectorsReader,rawDocLengths,rawDocLengths2,numDocs);
      totalNumDocs+=numDocs;
      mergeState.checkAbort.work(300 * numDocs);
    }
  }
 else {
    for (int docNum=0; docNum < maxDoc; docNum++) {
      if (!liveDocs.get(docNum)) {
        continue;
      }
      Fields vectors=reader.getTermVectors(docNum);
      addAllDocVectors(vectors,mergeState);
      totalNumDocs++;
      mergeState.checkAbort.work(300);
    }
  }
  return totalNumDocs;
}
