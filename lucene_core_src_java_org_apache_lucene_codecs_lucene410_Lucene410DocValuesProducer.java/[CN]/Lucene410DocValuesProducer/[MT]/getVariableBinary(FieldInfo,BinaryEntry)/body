{
  final MonotonicBlockPackedReader addresses=getAddressInstance(data,field,bytes);
  final IndexInput data=this.data.slice("var-binary",bytes.offset,bytes.addressesOffset - bytes.offset);
  final BytesRef term=new BytesRef(Math.max(0,bytes.maxLength));
  final byte buffer[]=term.bytes;
  return new LongBinaryDocValues(){
    @Override public BytesRef get(    long id){
      long startAddress=addresses.get(id);
      long endAddress=addresses.get(id + 1);
      int length=(int)(endAddress - startAddress);
      try {
        data.seek(startAddress);
        data.readBytes(buffer,0,length);
        term.length=length;
        return term;
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
;
}
