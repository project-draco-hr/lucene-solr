{
  if (boosts && mergeBoost.boost(globalDoc)) {
    boostDocs.add(globalDoc);
    boostKeys.add(collapseKey);
    return;
  }
  if (needsScores || cscore) {
    this.score=scorer.score();
    this.collapseScore.score=score;
  }
  float functionValue=functionValues.floatVal(contextDoc);
  int currentVal=Float.floatToRawIntBits(functionValue);
  if (collapseKey != nullValue) {
    if (cmap.containsKey(collapseKey)) {
      long pointerValue=cmap.lget();
      int testValue=(int)pointerValue;
      if (comp.test(currentVal,testValue)) {
        pointerValue=(pointerValue - testValue) + currentVal;
        cmap.lset(pointerValue);
        int pointer=(int)(pointerValue >> 32);
        if (needsScores) {
          long docScore=(((long)globalDoc) << 32) + Float.floatToIntBits(score);
          docScores.set(pointer,docScore);
        }
 else {
          docs.set(pointer,globalDoc);
        }
      }
    }
 else {
      ++index;
      long pointerValue=(((long)index) << 32) + currentVal;
      cmap.put(collapseKey,pointerValue);
      if (needsScores) {
        long docScore=(((long)globalDoc) << 32) + Float.floatToIntBits(score);
        docScores.add(docScore);
      }
 else {
        docs.add(globalDoc);
      }
    }
  }
 else   if (this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {
    if (comp.test(currentVal,nullCompVal)) {
      nullCompVal=currentVal;
      nullDoc=globalDoc;
      if (needsScores) {
        nullScore=scorer.score();
      }
    }
  }
 else   if (this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {
    this.collapsedSet.set(globalDoc);
    if (needsScores) {
      nullScores.add(scorer.score());
    }
  }
}
