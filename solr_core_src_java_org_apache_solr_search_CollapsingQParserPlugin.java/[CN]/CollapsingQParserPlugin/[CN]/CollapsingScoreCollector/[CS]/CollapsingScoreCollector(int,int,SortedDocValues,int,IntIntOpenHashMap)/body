{
  this.maxDoc=maxDoc;
  this.contexts=new LeafReaderContext[segments];
  this.collapsedSet=new FixedBitSet(maxDoc);
  this.boostDocs=boostDocs;
  if (this.boostDocs != null) {
    IntOpenHashSet boostG=new IntOpenHashSet();
    Iterator<IntIntCursor> it=this.boostDocs.iterator();
    while (it.hasNext()) {
      IntIntCursor cursor=it.next();
      int i=cursor.key;
      this.collapsedSet.set(i);
      int ord=values.getOrd(i);
      if (ord > -1) {
        boostG.add(ord);
      }
    }
    boostOrds=boostG.toArray();
    Arrays.sort(boostOrds);
  }
  this.values=values;
  int valueCount=values.getValueCount();
  this.ords=new int[valueCount];
  Arrays.fill(this.ords,-1);
  this.scores=new float[valueCount];
  Arrays.fill(this.scores,-Float.MAX_VALUE);
  this.nullPolicy=nullPolicy;
  if (nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {
    nullScores=new FloatArrayList();
  }
}
