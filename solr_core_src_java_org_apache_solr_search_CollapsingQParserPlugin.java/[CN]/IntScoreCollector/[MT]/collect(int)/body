{
  int collapseDocID=collapseValues.docID();
  if (collapseDocID < contextDoc) {
    collapseDocID=collapseValues.advance(contextDoc);
  }
  int collapseValue;
  if (collapseDocID == contextDoc) {
    collapseValue=(int)collapseValues.longValue();
  }
 else {
    collapseValue=0;
  }
  int globalDoc=docBase + contextDoc;
  if (boosts && mergeBoost.boost(globalDoc)) {
    boostDocs.add(globalDoc);
    boostKeys.add(collapseValue);
    return;
  }
  if (collapseValue != nullValue) {
    float score=scorer.score();
    final int idx;
    if ((idx=cmap.indexOf(collapseValue)) >= 0) {
      long scoreDoc=cmap.indexGet(idx);
      int testScore=(int)(scoreDoc >> 32);
      int currentScore=Float.floatToRawIntBits(score);
      if (currentScore > testScore) {
        cmap.indexReplace(idx,(((long)currentScore) << 32) + globalDoc);
      }
    }
 else {
      long scoreDoc=(((long)Float.floatToRawIntBits(score)) << 32) + globalDoc;
      cmap.indexInsert(idx,collapseValue,scoreDoc);
    }
  }
 else   if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {
    float score=scorer.score();
    if (score > this.nullScore) {
      this.nullScore=score;
      this.nullDoc=globalDoc;
    }
  }
 else   if (nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {
    collapsedSet.set(globalDoc);
    nullScores.add(scorer.score());
  }
}
