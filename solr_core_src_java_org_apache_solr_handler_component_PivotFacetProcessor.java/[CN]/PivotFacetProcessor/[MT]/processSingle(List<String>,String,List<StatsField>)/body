{
  SolrIndexSearcher searcher=rb.req.getSearcher();
  SimpleOrderedMap<List<NamedList<Object>>> pivotResponse=new SimpleOrderedMap<>();
  String field=pivotFields.get(0);
  SchemaField sfield=searcher.getSchema().getField(field);
  Deque<String> fnames=new LinkedList<>();
  for (int i=pivotFields.size() - 1; i > 1; i--) {
    fnames.push(pivotFields.get(i));
  }
  NamedList<Integer> facetCounts;
  Deque<String> vnames=new LinkedList<>();
  if (null != refinements) {
    List<String> refinementValuesByField=PivotFacetHelper.decodeRefinementValuePath(refinements);
    for (int i=refinementValuesByField.size() - 1; i > 0; i--) {
      vnames.push(refinementValuesByField.get(i));
    }
    String firstFieldsValues=refinementValuesByField.get(0);
    facetCounts=new NamedList<Integer>();
    facetCounts.add(firstFieldsValues,getSubsetSize(this.docs,sfield,firstFieldsValues));
  }
 else {
    facetCounts=this.getTermCountsForPivots(field,this.docs);
  }
  if (pivotFields.size() > 1) {
    String subField=pivotFields.get(1);
    pivotResponse.add(key,doPivots(facetCounts,field,subField,fnames,vnames,this.docs,statsFields));
  }
 else {
    pivotResponse.add(key,doPivots(facetCounts,field,null,fnames,vnames,this.docs,statsFields));
  }
  return pivotResponse;
}
