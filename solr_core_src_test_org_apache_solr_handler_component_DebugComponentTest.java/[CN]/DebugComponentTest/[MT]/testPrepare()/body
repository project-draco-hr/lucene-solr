{
  DebugComponent component=new DebugComponent();
  List<SearchComponent> components=new ArrayList<SearchComponent>(1);
  components.add(component);
  SolrQueryRequest req;
  ResponseBuilder rb;
  for (int i=0; i < 10; i++) {
    req=req("q","test query","distrib","true");
    rb=new ResponseBuilder(req,new SolrQueryResponse(),components);
    rb.isDistrib=true;
    if (random().nextBoolean()) {
      rb.setDebug(true);
    }
 else {
      rb.setDebug(false);
      rb.setDebugTrack(true);
      rb.setDebugQuery(random().nextBoolean());
      rb.setDebugTimings(random().nextBoolean());
      rb.setDebugResults(random().nextBoolean());
    }
    component.prepare(rb);
    ensureRidPresent(rb,null);
  }
  req=req("q","test query","distrib","true",CommonParams.REQUEST_ID,"123");
  rb=new ResponseBuilder(req,new SolrQueryResponse(),components);
  rb.isDistrib=true;
  rb.setDebug(true);
  component.prepare(rb);
  ensureRidPresent(rb,"123");
}
