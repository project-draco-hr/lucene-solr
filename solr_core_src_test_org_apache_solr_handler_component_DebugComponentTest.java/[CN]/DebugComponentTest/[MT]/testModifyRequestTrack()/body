{
  DebugComponent component=new DebugComponent();
  List<SearchComponent> components=new ArrayList<SearchComponent>(1);
  components.add(component);
  for (int i=0; i < 10; i++) {
    SolrQueryRequest req=req("q","test query","distrib","true",CommonParams.REQUEST_ID,"123456-my_rid");
    SolrQueryResponse resp=new SolrQueryResponse();
    ResponseBuilder rb=new ResponseBuilder(req,resp,components);
    ShardRequest sreq=new ShardRequest();
    sreq.params=new ModifiableSolrParams();
    sreq.purpose=ShardRequest.PURPOSE_GET_FIELDS;
    sreq.purpose|=ShardRequest.PURPOSE_GET_DEBUG;
    if (random().nextBoolean()) {
      rb.setDebug(true);
    }
 else {
      rb.setDebug(false);
      rb.setDebugTrack(true);
      rb.setDebugQuery(random().nextBoolean());
      rb.setDebugTimings(random().nextBoolean());
      rb.setDebugResults(random().nextBoolean());
    }
    component.modifyRequest(rb,null,sreq);
    assertTrue(Arrays.asList(sreq.params.getParams(CommonParams.DEBUG)).contains(CommonParams.TRACK));
    assertEquals("GET_FIELDS,GET_DEBUG",sreq.params.get(CommonParams.REQUEST_PURPOSE));
    assertEquals("123456-my_rid",sreq.params.get(CommonParams.REQUEST_ID));
  }
}
