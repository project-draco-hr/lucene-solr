{
  for (int i=0; i < numIterations; i++) {
    String reg=AutomatonTestUtil.randomRegexp(random);
    Automaton automaton=new RegExp(reg,RegExp.NONE).toAutomaton();
    CompiledAutomaton ca=new CompiledAutomaton(automaton,SpecialOperations.isFinite(automaton),false);
    TermsEnum te=MultiFields.getTerms(reader,"field").intersect(ca,null);
    Automaton expected=BasicOperations.intersection(termsAutomaton,automaton);
    TreeSet<BytesRef> found=new TreeSet<BytesRef>();
    while (te.next() != null) {
      found.add(BytesRef.deepCopyOf(te.term()));
    }
    Automaton actual=DaciukMihovAutomatonBuilder.build(found);
    assertTrue(BasicOperations.sameLanguage(expected,actual));
  }
}
