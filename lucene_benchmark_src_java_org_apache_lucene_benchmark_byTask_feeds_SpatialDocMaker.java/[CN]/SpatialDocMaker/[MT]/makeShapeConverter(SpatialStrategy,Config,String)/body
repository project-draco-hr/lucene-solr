{
  final double radiusDegrees=config.get(configKeyPrefix + "radiusDegrees",0.0);
  final double plusMinus=config.get(configKeyPrefix + "radiusDegreesRandPlusMinus",0.0);
  final boolean bbox=config.get(configKeyPrefix + "bbox",false);
  return new ShapeConverter(){
    @Override public Shape convert(    Shape shape){
      if (shape instanceof Point && (radiusDegrees != 0.0 || plusMinus != 0.0)) {
        Point point=(Point)shape;
        double radius=radiusDegrees;
        if (plusMinus > 0.0) {
          Random random=new Random(point.hashCode());
          radius+=random.nextDouble() * 2 * plusMinus - plusMinus;
          radius=Math.abs(radius);
        }
        shape=spatialStrategy.getSpatialContext().makeCircle(point,radius);
      }
      if (bbox)       shape=shape.getBoundingBox();
      return shape;
    }
  }
;
}
