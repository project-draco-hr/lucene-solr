{
  aStreamWriter.writeStartElement(GOMEntry.LOCALNAME_RSS,getXmlNamespaceAttributes());
  if (this.defaultNamespace != null)   aStreamWriter.writeNamespace(this.defaultNamespace);
  for (  GOMNamespace namespace : this.namespaces) {
    aStreamWriter.writeNamespace(namespace);
  }
  if (this.id != null)   this.id.writeRssOutput(aStreamWriter,GOMId.LOCALNAME_RSS);
  String xmlLang=null;
  if (this.content != null) {
    xmlLang=this.content.getXmlLang();
  }
  if (xmlLang == null && this.summary != null) {
    xmlLang=this.summary.getXmlLang();
  }
  if (xmlLang == null && this.title != null) {
    xmlLang=this.title.getXmlLang();
  }
  if (xmlLang != null) {
    aStreamWriter.writeSimpleXMLElement("language",xmlLang,null);
  }
  if (this.published != null) {
    this.published.writeRssOutput(aStreamWriter);
  }
  if (this.updated != null)   this.updated.writeRssOutput(aStreamWriter);
  for (  GOMCategory category : this.categories) {
    category.writeRssOutput(aStreamWriter);
  }
  if (this.title != null)   this.title.writeRssOutput(aStreamWriter);
  if (this.summary != null)   this.summary.writeRssOutput(aStreamWriter);
  if (this.content != null)   this.content.writeRssOutput(aStreamWriter);
  for (  GOMLink link : this.links) {
    link.writeRssOutput(aStreamWriter);
  }
  for (  GOMAuthor author : this.authors) {
    author.writeRssOutput(aStreamWriter);
  }
  for (  GOMContributor contributors : this.contributors) {
    contributors.writeRssOutput(aStreamWriter);
  }
  for (  GOMExtension extension : this.extensions) {
    extension.writeRssOutput(aStreamWriter);
  }
  aStreamWriter.writeEndElement();
}
