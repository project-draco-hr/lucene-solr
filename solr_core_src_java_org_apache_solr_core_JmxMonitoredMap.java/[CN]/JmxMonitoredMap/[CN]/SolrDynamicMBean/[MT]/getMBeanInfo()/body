{
  ArrayList<MBeanAttributeInfo> attrInfoList=new ArrayList<>();
  for (  String stat : staticStats) {
    attrInfoList.add(new MBeanAttributeInfo(stat,String.class.getName(),null,true,false,false));
  }
  attrInfoList.add(new MBeanAttributeInfo("coreHashCode",String.class.getName(),null,true,false,false));
  try {
    NamedList dynamicStats=infoBean.getStatistics();
    if (useCachedStatsBetweenGetMBeanInfoCalls) {
      cachedDynamicStats=dynamicStats;
    }
    if (dynamicStats != null) {
      for (int i=0; i < dynamicStats.size(); i++) {
        String name=dynamicStats.getName(i);
        if (staticStats.contains(name)) {
          continue;
        }
        Class type=dynamicStats.get(name).getClass();
        OpenType typeBox=determineType(type);
        if (type.equals(String.class) || typeBox == null) {
          attrInfoList.add(new MBeanAttributeInfo(dynamicStats.getName(i),String.class.getName(),null,true,false,false));
        }
 else {
          attrInfoList.add(new OpenMBeanAttributeInfoSupport(dynamicStats.getName(i),dynamicStats.getName(i),typeBox,true,false,false));
        }
      }
    }
  }
 catch (  Exception e) {
    if (!(SolrException.getRootCause(e) instanceof AlreadyClosedException))     log.warn("Could not getStatistics on info bean {}",infoBean.getName(),e);
  }
  MBeanAttributeInfo[] attrInfoArr=attrInfoList.toArray(new MBeanAttributeInfo[attrInfoList.size()]);
  return new MBeanInfo(getClass().getName(),infoBean.getDescription(),attrInfoArr,null,null,null);
}
