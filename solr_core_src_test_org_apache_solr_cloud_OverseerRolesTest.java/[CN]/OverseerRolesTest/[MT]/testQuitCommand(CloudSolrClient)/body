{
  String collectionName="testOverseerQuit";
  createCollection(collectionName,client);
  waitForRecoveriesToFinish(collectionName,false);
  SolrZkClient zk=client.getZkStateReader().getZkClient();
  byte[] data=new byte[0];
  data=zk.getData("/overseer_elect/leader",null,new Stat(),true);
  Map m=(Map)Utils.fromJSON(data);
  String s=(String)m.get("id");
  String leader=LeaderElector.getNodeName(s);
  Overseer.getInQueue(zk).offer(Utils.toJSON(new ZkNodeProps(Overseer.QUEUE_OPERATION,OverseerAction.QUIT.toLower())));
  final TimeOut timeout=new TimeOut(10,TimeUnit.SECONDS);
  String newLeader=null;
  for (; !timeout.hasTimedOut(); ) {
    newLeader=OverseerCollectionProcessor.getLeaderNode(zk);
    if (newLeader != null && !newLeader.equals(leader))     break;
    Thread.sleep(100);
  }
  assertNotSame("Leader not changed yet",newLeader,leader);
  assertTrue("The old leader should have rejoined election ",OverseerCollectionProcessor.getSortedOverseerNodeNames(zk).contains(leader));
}
