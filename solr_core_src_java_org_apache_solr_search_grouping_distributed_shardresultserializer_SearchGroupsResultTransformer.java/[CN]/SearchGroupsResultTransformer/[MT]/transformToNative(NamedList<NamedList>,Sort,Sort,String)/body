{
  Map<String,Pair<Integer,Collection<SearchGroup<BytesRef>>>> result=new HashMap<String,Pair<Integer,Collection<SearchGroup<BytesRef>>>>();
  for (  Map.Entry<String,NamedList> command : shardResponse) {
    List<SearchGroup<BytesRef>> searchGroups=new ArrayList<SearchGroup<BytesRef>>();
    NamedList topGroupsAndGroupCount=command.getValue();
    @SuppressWarnings("unchecked") NamedList<List<Comparable>> rawSearchGroups=(NamedList<List<Comparable>>)topGroupsAndGroupCount.get("topGroups");
    if (rawSearchGroups != null) {
      for (      Map.Entry<String,List<Comparable>> rawSearchGroup : rawSearchGroups) {
        SearchGroup<BytesRef> searchGroup=new SearchGroup<BytesRef>();
        searchGroup.groupValue=rawSearchGroup.getKey() != null ? new BytesRef(rawSearchGroup.getKey()) : null;
        searchGroup.sortValues=rawSearchGroup.getValue().toArray(new Comparable[rawSearchGroup.getValue().size()]);
        for (int i=0; i < searchGroup.sortValues.length; i++) {
          SchemaField field=groupSort.getSort()[i].getField() != null ? searcher.getSchema().getFieldOrNull(groupSort.getSort()[i].getField()) : null;
          if (field != null) {
            FieldType fieldType=field.getType();
            if (searchGroup.sortValues[i] != null) {
              searchGroup.sortValues[i]=fieldType.unmarshalSortValue(searchGroup.sortValues[i]);
            }
          }
        }
        searchGroups.add(searchGroup);
      }
    }
    Integer groupCount=(Integer)topGroupsAndGroupCount.get("groupCount");
    result.put(command.getKey(),new Pair<Integer,Collection<SearchGroup<BytesRef>>>(groupCount,searchGroups));
  }
  return result;
}
