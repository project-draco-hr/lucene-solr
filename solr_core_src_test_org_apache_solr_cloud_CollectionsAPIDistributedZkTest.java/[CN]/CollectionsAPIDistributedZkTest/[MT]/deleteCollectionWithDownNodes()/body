{
  String baseUrl=getBaseUrl((HttpSolrClient)clients.get(0));
  if (secondConfigSet) {
    createCollection(null,"halfdeletedcollection2",3,3,6,createNewSolrClient("",baseUrl),null,"conf2");
  }
 else {
    createCollection(null,"halfdeletedcollection2",3,3,6,createNewSolrClient("",baseUrl),null);
  }
  waitForRecoveriesToFinish("halfdeletedcollection2",false);
  ChaosMonkey.stop(jettys.get(0));
  ChaosMonkey.stop(jettys.get(1));
  for (int i=1; i < 4; i++) {
    cloudClient.getZkStateReader().getLeaderRetry("halfdeletedcollection2","shard" + i,30000);
  }
  baseUrl=getBaseUrl((HttpSolrClient)clients.get(2));
  ModifiableSolrParams params=new ModifiableSolrParams();
  params.set("action",CollectionAction.DELETE.toString());
  params.set("name","halfdeletedcollection2");
  QueryRequest request=new QueryRequest(params);
  request.setPath("/admin/collections");
  createNewSolrClient("",baseUrl).request(request);
  long timeout=System.currentTimeMillis() + 10000;
  while (cloudClient.getZkStateReader().getClusterState().hasCollection("halfdeletedcollection2")) {
    if (System.currentTimeMillis() > timeout) {
      throw new AssertionError("Timeout waiting to see removed collection leave clusterstate");
    }
    Thread.sleep(200);
    cloudClient.getZkStateReader().updateClusterState(true);
  }
  assertFalse("Still found collection that should be gone",cloudClient.getZkStateReader().getClusterState().hasCollection("halfdeletedcollection2"));
}
