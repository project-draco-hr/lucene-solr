{
  final String groupField="hotel";
  FieldType customType=new FieldType();
  customType.setStored(true);
  Directory dir=newDirectory();
  RandomIndexWriter w=new RandomIndexWriter(random,dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));
  boolean canUseIDV=false;
  Document doc=new Document();
  addGroupField(doc,groupField,"a",canUseIDV);
  doc.add(new Field("airport","ams",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","5",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  doc=new Document();
  addGroupField(doc,groupField,"a",canUseIDV);
  doc.add(new Field("airport","dus",TextField.TYPE_STORED));
  doc.add(new Field("duration","10",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  doc=new Document();
  addGroupField(doc,groupField,"b",canUseIDV);
  doc.add(new Field("airport","ams",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","10",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  w.commit();
  doc=new Document();
  addGroupField(doc,groupField,"b",canUseIDV);
  doc.add(new Field("airport","ams",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","5",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  doc=new Document();
  addGroupField(doc,groupField,"b",canUseIDV);
  doc.add(new Field("airport","ams",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","5",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  IndexSearcher indexSearcher=new IndexSearcher(w.getReader());
  TermGroupFacetCollector groupedAirportFacetCollector=TermGroupFacetCollector.createTermGroupFacetCollector(groupField,"airport",false,null,128);
  indexSearcher.search(new MatchAllDocsQuery(),groupedAirportFacetCollector);
  TermGroupFacetCollector.GroupedFacetResult airportResult=groupedAirportFacetCollector.mergeSegmentResults(10,0,false);
  assertEquals(3,airportResult.getTotalCount());
  assertEquals(0,airportResult.getTotalMissingCount());
  List<TermGroupFacetCollector.FacetEntry> entries=airportResult.getFacetEntries(0,10);
  assertEquals(2,entries.size());
  assertEquals("ams",entries.get(0).getValue().utf8ToString());
  assertEquals(2,entries.get(0).getCount());
  assertEquals("dus",entries.get(1).getValue().utf8ToString());
  assertEquals(1,entries.get(1).getCount());
  TermGroupFacetCollector groupedDurationFacetCollector=TermGroupFacetCollector.createTermGroupFacetCollector(groupField,"duration",false,null,128);
  indexSearcher.search(new MatchAllDocsQuery(),groupedDurationFacetCollector);
  TermGroupFacetCollector.GroupedFacetResult durationResult=groupedDurationFacetCollector.mergeSegmentResults(10,0,false);
  assertEquals(4,durationResult.getTotalCount());
  assertEquals(0,durationResult.getTotalMissingCount());
  entries=durationResult.getFacetEntries(0,10);
  assertEquals(2,entries.size());
  assertEquals("10",entries.get(0).getValue().utf8ToString());
  assertEquals(2,entries.get(0).getCount());
  assertEquals("5",entries.get(1).getValue().utf8ToString());
  assertEquals(2,entries.get(1).getCount());
  doc=new Document();
  addGroupField(doc,groupField,"b",canUseIDV);
  doc.add(new Field("duration","5",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  doc=new Document();
  addGroupField(doc,groupField,"b",canUseIDV);
  doc.add(new Field("airport","bru",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","10",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  doc=new Document();
  addGroupField(doc,groupField,"b",canUseIDV);
  doc.add(new Field("airport","bru",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","15",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  doc=new Document();
  addGroupField(doc,groupField,"a",canUseIDV);
  doc.add(new Field("airport","bru",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","10",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  indexSearcher.getIndexReader().close();
  indexSearcher=new IndexSearcher(w.getReader());
  groupedAirportFacetCollector=TermGroupFacetCollector.createTermGroupFacetCollector(groupField,"airport",true,null,128);
  indexSearcher.search(new MatchAllDocsQuery(),groupedAirportFacetCollector);
  airportResult=groupedAirportFacetCollector.mergeSegmentResults(3,0,true);
  assertEquals(5,airportResult.getTotalCount());
  assertEquals(1,airportResult.getTotalMissingCount());
  entries=airportResult.getFacetEntries(1,2);
  assertEquals(2,entries.size());
  assertEquals("bru",entries.get(0).getValue().utf8ToString());
  assertEquals(2,entries.get(0).getCount());
  assertEquals("dus",entries.get(1).getValue().utf8ToString());
  assertEquals(1,entries.get(1).getCount());
  groupedDurationFacetCollector=TermGroupFacetCollector.createTermGroupFacetCollector(groupField,"duration",false,null,128);
  indexSearcher.search(new MatchAllDocsQuery(),groupedDurationFacetCollector);
  durationResult=groupedDurationFacetCollector.mergeSegmentResults(10,2,true);
  assertEquals(5,durationResult.getTotalCount());
  assertEquals(0,durationResult.getTotalMissingCount());
  entries=durationResult.getFacetEntries(1,1);
  assertEquals(1,entries.size());
  assertEquals("5",entries.get(0).getValue().utf8ToString());
  assertEquals(2,entries.get(0).getCount());
  doc=new Document();
  addGroupField(doc,groupField,"c",canUseIDV);
  doc.add(new Field("airport","bru",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","15",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  doc=new Document();
  addGroupField(doc,groupField,"c",canUseIDV);
  doc.add(new Field("airport","dus",TextField.TYPE_UNSTORED));
  doc.add(new Field("duration","10",TextField.TYPE_UNSTORED));
  w.addDocument(doc);
  indexSearcher.getIndexReader().close();
  indexSearcher=new IndexSearcher(w.getReader());
  groupedAirportFacetCollector=TermGroupFacetCollector.createTermGroupFacetCollector(groupField,"airport",false,null,128);
  indexSearcher.search(new MatchAllDocsQuery(),groupedAirportFacetCollector);
  airportResult=groupedAirportFacetCollector.mergeSegmentResults(10,0,false);
  assertEquals(7,airportResult.getTotalCount());
  assertEquals(1,airportResult.getTotalMissingCount());
  entries=airportResult.getFacetEntries(0,10);
  assertEquals(3,entries.size());
  assertEquals("ams",entries.get(0).getValue().utf8ToString());
  assertEquals(2,entries.get(0).getCount());
  assertEquals("bru",entries.get(1).getValue().utf8ToString());
  assertEquals(3,entries.get(1).getCount());
  assertEquals("dus",entries.get(2).getValue().utf8ToString());
  assertEquals(2,entries.get(2).getCount());
  groupedDurationFacetCollector=TermGroupFacetCollector.createTermGroupFacetCollector(groupField,"duration",false,new BytesRef("1"),128);
  indexSearcher.search(new MatchAllDocsQuery(),groupedDurationFacetCollector);
  durationResult=groupedDurationFacetCollector.mergeSegmentResults(10,0,true);
  assertEquals(5,durationResult.getTotalCount());
  assertEquals(0,durationResult.getTotalMissingCount());
  entries=durationResult.getFacetEntries(0,10);
  assertEquals(2,entries.size());
  assertEquals("10",entries.get(0).getValue().utf8ToString());
  assertEquals(3,entries.get(0).getCount());
  assertEquals("15",entries.get(1).getValue().utf8ToString());
  assertEquals(2,entries.get(1).getCount());
  w.close();
  indexSearcher.getIndexReader().close();
  dir.close();
}
