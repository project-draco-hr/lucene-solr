{
  IndexWriter w=new IndexWriter(dir,newIndexWriterConfig(random(),TEST_VERSION_CURRENT,new MockAnalyzer(random())));
  try {
    final FieldType ft=new FieldType();
    ft.setIndexed(true);
    ft.setStored(random().nextBoolean());
    ft.freeze();
    final Document doc=new Document();
    if (random().nextBoolean()) {
      doc.add(new Field(TestUtil.randomSimpleString(random(),1,10),TestUtil.randomSimpleString(random(),1,10),ft));
    }
    final String name=TestUtil.randomSimpleString(random(),1,50);
    final String value=TestUtil.randomSimpleString(random(),minTestTermLength,maxTestTermLegnth);
    final Field f=new Field(name,value,ft);
    if (random().nextBoolean()) {
      doc.add(new Field(TestUtil.randomSimpleString(random(),1,10),TestUtil.randomSimpleString(random(),1,10),ft));
    }
    doc.add(f);
    try {
      w.addDocument(doc);
      fail("Did not get an exception from adding a monster term");
    }
 catch (    IllegalArgumentException e) {
      final String maxLengthMsg=String.valueOf(IndexWriter.MAX_TERM_LENGTH);
      final String msg=e.getMessage();
      assertTrue("IllegalArgumentException didn't mention 'immense term': " + msg,msg.contains("immense term"));
      assertTrue("IllegalArgumentException didn't mention max length (" + maxLengthMsg + "): "+ msg,msg.contains(maxLengthMsg));
      assertTrue("IllegalArgumentException didn't mention field name (" + name + "): "+ msg,msg.contains(name));
    }
  }
  finally {
    w.close();
  }
}
