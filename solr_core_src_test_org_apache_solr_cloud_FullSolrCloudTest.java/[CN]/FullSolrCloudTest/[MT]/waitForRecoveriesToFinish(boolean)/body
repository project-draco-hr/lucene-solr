{
  boolean cont=true;
  int cnt=0;
  while (cont) {
    if (verbose)     System.out.println("-");
    boolean sawLiveRecovering=false;
    zkStateReader.updateCloudState(true);
    CloudState cloudState=zkStateReader.getCloudState();
    Map<String,Slice> slices=cloudState.getSlices(DEFAULT_COLLECTION);
    for (    Map.Entry<String,Slice> entry : slices.entrySet()) {
      Map<String,ZkNodeProps> shards=entry.getValue().getShards();
      for (      Map.Entry<String,ZkNodeProps> shard : shards.entrySet()) {
        if (verbose)         System.out.println("rstate:" + shard.getValue().get(ZkStateReader.STATE_PROP) + " live:"+ cloudState.liveNodesContain(shard.getValue().get(ZkStateReader.NODE_NAME_PROP)));
        String state=shard.getValue().get(ZkStateReader.STATE_PROP);
        if ((state.equals(ZkStateReader.RECOVERING) || state.equals(ZkStateReader.SYNC)) && cloudState.liveNodesContain(shard.getValue().get(ZkStateReader.NODE_NAME_PROP))) {
          sawLiveRecovering=true;
        }
      }
    }
    if (!sawLiveRecovering || cnt == 10) {
      if (!sawLiveRecovering) {
        if (verbose)         System.out.println("no one is recoverying");
      }
 else {
        if (verbose)         System.out.println("gave up waiting for recovery to finish..");
      }
      cont=false;
    }
 else {
      Thread.sleep(2000);
    }
    cnt++;
  }
}
