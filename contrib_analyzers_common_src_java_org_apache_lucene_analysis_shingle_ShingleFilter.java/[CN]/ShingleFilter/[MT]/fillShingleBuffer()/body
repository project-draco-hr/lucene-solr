{
  boolean addedToken=false;
  do {
    if (getNextToken()) {
      shingleBuf.add(captureState());
      if (shingleBuf.size() > maxShingleSize) {
        shingleBuf.remove(0);
      }
      addedToken=true;
    }
 else {
      break;
    }
  }
 while (shingleBuf.size() < maxShingleSize);
  if (shingleBuf.isEmpty()) {
    return false;
  }
  if (!addedToken) {
    shingleBuf.remove(0);
  }
  if (shingleBuf.isEmpty()) {
    return false;
  }
  clearShingles();
  endOffsets=new int[shingleBuf.size()];
  for (int i=0; i < endOffsets.length; i++) {
    endOffsets[i]=0;
  }
  int i=0;
  for (Iterator it=shingleBuf.iterator(); it.hasNext(); ) {
    restoreState((AttributeSource.State)it.next());
    for (int j=i; j < shingles.length; j++) {
      if (shingles[j].length() != 0) {
        shingles[j].append(TOKEN_SEPARATOR);
      }
      shingles[j].append(termAtt.termBuffer(),0,termAtt.termLength());
    }
    endOffsets[i]=offsetAtt.endOffset();
    i++;
  }
  return true;
}
