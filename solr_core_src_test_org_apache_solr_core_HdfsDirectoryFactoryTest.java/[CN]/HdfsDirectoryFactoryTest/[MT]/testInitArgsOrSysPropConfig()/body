{
  HdfsDirectoryFactory hdfsFactory=new HdfsDirectoryFactory();
  System.setProperty("solr.hdfs.home",HdfsTestUtil.getURI(dfsCluster) + "/solr1");
  hdfsFactory.init(new NamedList<>());
  String dataHome=hdfsFactory.getDataHome(new MockCoreDescriptor());
  assertTrue(dataHome.endsWith("/solr1/mock/data"));
  System.clearProperty("solr.hdfs.home");
  NamedList<Object> nl=new NamedList<>();
  nl.add("solr.hdfs.home",HdfsTestUtil.getURI(dfsCluster) + "/solr2");
  hdfsFactory.init(nl);
  dataHome=hdfsFactory.getDataHome(new MockCoreDescriptor());
  assertTrue(dataHome.endsWith("/solr2/mock/data"));
  System.setProperty("solr.hdfs.home",HdfsTestUtil.getURI(dfsCluster) + "/solr1");
  hdfsFactory.init(nl);
  dataHome=hdfsFactory.getDataHome(new MockCoreDescriptor());
  assertTrue(dataHome.endsWith("/solr2/mock/data"));
  System.clearProperty("solr.hdfs.home");
  Path confDir=createTempDir();
  System.setProperty(HdfsDirectoryFactory.CONFIG_DIRECTORY,confDir.toString());
  Directory dir=hdfsFactory.create(HdfsTestUtil.getURI(dfsCluster) + "/solr",NoLockFactory.INSTANCE,DirContext.DEFAULT);
  try {
    assertEquals(confDir.toString(),hdfsFactory.getConfDir());
  }
  finally {
    dir.close();
  }
  nl=new NamedList<>();
  nl.add(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB,4);
  System.setProperty(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB,"3");
  nl.add(HdfsDirectoryFactory.BLOCKCACHE_ENABLED,true);
  System.setProperty(HdfsDirectoryFactory.BLOCKCACHE_ENABLED,"false");
  hdfsFactory.init(nl);
  assertEquals(4,hdfsFactory.getConfig(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB,0));
  assertEquals(true,hdfsFactory.getConfig(HdfsDirectoryFactory.BLOCKCACHE_ENABLED,false));
  nl=new NamedList<>();
  hdfsFactory.init(nl);
  System.setProperty(HdfsDirectoryFactory.BLOCKCACHE_ENABLED,"true");
  assertEquals(3,hdfsFactory.getConfig(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB,0));
  assertEquals(true,hdfsFactory.getConfig(HdfsDirectoryFactory.BLOCKCACHE_ENABLED,false));
  System.clearProperty(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB);
  System.clearProperty(HdfsDirectoryFactory.BLOCKCACHE_ENABLED);
  assertEquals(0,hdfsFactory.getConfig(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB,0));
  assertEquals(false,hdfsFactory.getConfig(HdfsDirectoryFactory.BLOCKCACHE_ENABLED,false));
  hdfsFactory.close();
}
