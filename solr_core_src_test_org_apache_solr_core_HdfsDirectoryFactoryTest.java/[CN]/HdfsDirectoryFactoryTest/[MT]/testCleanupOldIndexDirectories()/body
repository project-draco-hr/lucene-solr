{
  HdfsDirectoryFactory hdfsFactory=new HdfsDirectoryFactory();
  System.setProperty("solr.hdfs.home",HdfsTestUtil.getURI(dfsCluster) + "/solr1");
  hdfsFactory.init(new NamedList<>());
  String dataHome=hdfsFactory.getDataHome(new MockCoreDescriptor());
  assertTrue(dataHome.endsWith("/solr1/mock/data"));
  System.clearProperty("solr.hdfs.home");
  FileSystem hdfs=dfsCluster.getFileSystem();
  org.apache.hadoop.fs.Path dataHomePath=new org.apache.hadoop.fs.Path(dataHome);
  org.apache.hadoop.fs.Path currentIndexDirPath=new org.apache.hadoop.fs.Path(dataHomePath,"index");
  assertTrue(!hdfs.isDirectory(currentIndexDirPath));
  hdfs.mkdirs(currentIndexDirPath);
  assertTrue(hdfs.isDirectory(currentIndexDirPath));
  String timestamp1=new SimpleDateFormat(SnapShooter.DATE_FMT,Locale.ROOT).format(new Date());
  org.apache.hadoop.fs.Path oldIndexDirPath=new org.apache.hadoop.fs.Path(dataHomePath,"index." + timestamp1);
  assertTrue(!hdfs.isDirectory(oldIndexDirPath));
  hdfs.mkdirs(oldIndexDirPath);
  assertTrue(hdfs.isDirectory(oldIndexDirPath));
  hdfsFactory.cleanupOldIndexDirectories(dataHomePath.toString(),currentIndexDirPath.toString());
  assertTrue(hdfs.isDirectory(currentIndexDirPath));
  assertTrue(!hdfs.isDirectory(oldIndexDirPath));
}
